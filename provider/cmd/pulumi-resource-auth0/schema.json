{
    "name": "auth0",
    "displayName": "Auth0",
    "description": "A Pulumi package for creating and managing auth0 cloud resources.",
    "keywords": [
        "pulumi",
        "auth0"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`auth0` Terraform Provider](https://github.com/auth0/terraform-provider-auth0).",
    "repository": "https://github.com/pulumi/pulumi-auth0",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing auth0 cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/auth0/terraform-provider-auth0)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-auth0` repo](https://github.com/pulumi/pulumi-auth0/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-auth0` repo](https://github.com/auth0/terraform-provider-auth0/issues).",
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/auth0/terraform-provider-auth0)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-auth0` repo](https://github.com/pulumi/pulumi-auth0/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-auth0` repo](https://github.com/auth0/terraform-provider-auth0/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "Your Auth0 [management api access token](https://auth0.com/docs/security/tokens/access-tokens/management-api-access-tokens). It can also be sourced from the `AUTH0_API_TOKEN` environment variable. It can be used instead of \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e + \u003cspan pulumi-lang-nodejs=\"`clientSecret`\" pulumi-lang-dotnet=\"`ClientSecret`\" pulumi-lang-go=\"`clientSecret`\" pulumi-lang-python=\"`client_secret`\" pulumi-lang-yaml=\"`clientSecret`\" pulumi-lang-java=\"`clientSecret`\"\u003e`client_secret`\u003c/span\u003e. If both are specified, \u003cspan pulumi-lang-nodejs=\"`apiToken`\" pulumi-lang-dotnet=\"`ApiToken`\" pulumi-lang-go=\"`apiToken`\" pulumi-lang-python=\"`api_token`\" pulumi-lang-yaml=\"`apiToken`\" pulumi-lang-java=\"`apiToken`\"\u003e`api_token`\u003c/span\u003e will be used over \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e + \u003cspan pulumi-lang-nodejs=\"`clientSecret`\" pulumi-lang-dotnet=\"`ClientSecret`\" pulumi-lang-go=\"`clientSecret`\" pulumi-lang-python=\"`client_secret`\" pulumi-lang-yaml=\"`clientSecret`\" pulumi-lang-java=\"`clientSecret`\"\u003e`client_secret`\u003c/span\u003e fields."
            },
            "audience": {
                "type": "string",
                "description": "Your Auth0 audience when using a custom domain. It can also be sourced from the `AUTH0_AUDIENCE` environment variable."
            },
            "cliLogin": {
                "type": "boolean",
                "description": "While toggled on, the API token gets fetched from the keyring for the given domain"
            },
            "clientAssertionPrivateKey": {
                "type": "string",
                "description": "The private key used to sign the client assertion JWT. It can also be sourced from the `AUTH0_CLIENT_ASSERTION_PRIVATE_KEY` environment variable."
            },
            "clientAssertionSigningAlg": {
                "type": "string",
                "description": "The algorithm used to sign the client assertion JWT. It can also be sourced from the `AUTH0_CLIENT_ASSERTION_SIGNING_ALG` environment variable."
            },
            "clientId": {
                "type": "string",
                "description": "Your Auth0 client ID. It can also be sourced from the `AUTH0_CLIENT_ID` environment variable."
            },
            "clientSecret": {
                "type": "string",
                "description": "Your Auth0 client secret. It can also be sourced from the `AUTH0_CLIENT_SECRET` environment variable."
            },
            "customDomainHeader": {
                "type": "string",
                "description": "When specified, this header is added to requests targeting a set of pre-defined whitelisted URLs Global setting overrides all resource specific \u003cspan pulumi-lang-nodejs=\"`customDomainHeader`\" pulumi-lang-dotnet=\"`CustomDomainHeader`\" pulumi-lang-go=\"`customDomainHeader`\" pulumi-lang-python=\"`custom_domain_header`\" pulumi-lang-yaml=\"`customDomainHeader`\" pulumi-lang-java=\"`customDomainHeader`\"\u003e`custom_domain_header`\u003c/span\u003e value"
            },
            "debug": {
                "type": "boolean",
                "description": "Enables HTTP request and response logging when TF_LOG=DEBUG is set. It can also be sourced from the `AUTH0_DEBUG` environment variable.",
                "defaultInfo": {
                    "environment": [
                        "AUTH0_DEBUG"
                    ]
                }
            },
            "domain": {
                "type": "string",
                "description": "Your Auth0 domain name. It can also be sourced from the `AUTH0_DOMAIN` environment variable."
            },
            "dynamicCredentials": {
                "type": "boolean"
            }
        }
    },
    "types": {
        "auth0:index/ActionDependency:ActionDependency": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Dependency name, e.g. \u003cspan pulumi-lang-nodejs=\"`lodash`\" pulumi-lang-dotnet=\"`Lodash`\" pulumi-lang-go=\"`lodash`\" pulumi-lang-python=\"`lodash`\" pulumi-lang-yaml=\"`lodash`\" pulumi-lang-java=\"`lodash`\"\u003e`lodash`\u003c/span\u003e.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Dependency version, e.g. \u003cspan pulumi-lang-nodejs=\"`latest`\" pulumi-lang-dotnet=\"`Latest`\" pulumi-lang-go=\"`latest`\" pulumi-lang-python=\"`latest`\" pulumi-lang-yaml=\"`latest`\" pulumi-lang-java=\"`latest`\"\u003e`latest`\u003c/span\u003e or `4.17.21`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "version"
            ]
        },
        "auth0:index/ActionSecret:ActionSecret": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Secret name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Secret value.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "auth0:index/ActionSupportedTriggers:ActionSupportedTriggers": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The trigger ID.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The trigger version. This regulates which \u003cspan pulumi-lang-nodejs=\"`runtime`\" pulumi-lang-dotnet=\"`Runtime`\" pulumi-lang-go=\"`runtime`\" pulumi-lang-python=\"`runtime`\" pulumi-lang-yaml=\"`runtime`\" pulumi-lang-java=\"`runtime`\"\u003e`runtime`\u003c/span\u003e versions are supported.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "version"
            ]
        },
        "auth0:index/AttackProtectionBreachedPasswordDetection:AttackProtectionBreachedPasswordDetection": {
            "properties": {
                "adminNotificationFrequencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When \u003cspan pulumi-lang-nodejs=\"`adminNotification`\" pulumi-lang-dotnet=\"`AdminNotification`\" pulumi-lang-go=\"`adminNotification`\" pulumi-lang-python=\"`admin_notification`\" pulumi-lang-yaml=\"`adminNotification`\" pulumi-lang-java=\"`adminNotification`\"\u003e`admin_notification`\u003c/span\u003e is enabled within the \u003cspan pulumi-lang-nodejs=\"`shields`\" pulumi-lang-dotnet=\"`Shields`\" pulumi-lang-go=\"`shields`\" pulumi-lang-python=\"`shields`\" pulumi-lang-yaml=\"`shields`\" pulumi-lang-java=\"`shields`\"\u003e`shields`\u003c/span\u003e property, determines how often email notifications are sent. Possible values: \u003cspan pulumi-lang-nodejs=\"`immediately`\" pulumi-lang-dotnet=\"`Immediately`\" pulumi-lang-go=\"`immediately`\" pulumi-lang-python=\"`immediately`\" pulumi-lang-yaml=\"`immediately`\" pulumi-lang-java=\"`immediately`\"\u003e`immediately`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`daily`\" pulumi-lang-dotnet=\"`Daily`\" pulumi-lang-go=\"`daily`\" pulumi-lang-python=\"`daily`\" pulumi-lang-yaml=\"`daily`\" pulumi-lang-java=\"`daily`\"\u003e`daily`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`weekly`\" pulumi-lang-dotnet=\"`Weekly`\" pulumi-lang-go=\"`weekly`\" pulumi-lang-python=\"`weekly`\" pulumi-lang-yaml=\"`weekly`\" pulumi-lang-java=\"`weekly`\"\u003e`weekly`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`monthly`\" pulumi-lang-dotnet=\"`Monthly`\" pulumi-lang-go=\"`monthly`\" pulumi-lang-python=\"`monthly`\" pulumi-lang-yaml=\"`monthly`\" pulumi-lang-java=\"`monthly`\"\u003e`monthly`\u003c/span\u003e.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether breached password detection is active.\n"
                },
                "method": {
                    "type": "string",
                    "description": "The subscription level for breached password detection methods. Use \"enhanced\" to enable Credential Guard. Possible values: \u003cspan pulumi-lang-nodejs=\"`standard`\" pulumi-lang-dotnet=\"`Standard`\" pulumi-lang-go=\"`standard`\" pulumi-lang-python=\"`standard`\" pulumi-lang-yaml=\"`standard`\" pulumi-lang-java=\"`standard`\"\u003e`standard`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`enhanced`\" pulumi-lang-dotnet=\"`Enhanced`\" pulumi-lang-go=\"`enhanced`\" pulumi-lang-python=\"`enhanced`\" pulumi-lang-yaml=\"`enhanced`\" pulumi-lang-java=\"`enhanced`\"\u003e`enhanced`\u003c/span\u003e.\n"
                },
                "preChangePassword": {
                    "$ref": "#/types/auth0:index/AttackProtectionBreachedPasswordDetectionPreChangePassword:AttackProtectionBreachedPasswordDetectionPreChangePassword",
                    "description": "Configuration options that apply before every password change attempt.\n"
                },
                "preUserRegistration": {
                    "$ref": "#/types/auth0:index/AttackProtectionBreachedPasswordDetectionPreUserRegistration:AttackProtectionBreachedPasswordDetectionPreUserRegistration",
                    "description": "Configuration options that apply before every user registration attempt. Only available on public tenants.\n"
                },
                "shields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Action to take when a breached password is detected. Options include: \u003cspan pulumi-lang-nodejs=\"`block`\" pulumi-lang-dotnet=\"`Block`\" pulumi-lang-go=\"`block`\" pulumi-lang-python=\"`block`\" pulumi-lang-yaml=\"`block`\" pulumi-lang-java=\"`block`\"\u003e`block`\u003c/span\u003e (block compromised user accounts), \u003cspan pulumi-lang-nodejs=\"`userNotification`\" pulumi-lang-dotnet=\"`UserNotification`\" pulumi-lang-go=\"`userNotification`\" pulumi-lang-python=\"`user_notification`\" pulumi-lang-yaml=\"`userNotification`\" pulumi-lang-java=\"`userNotification`\"\u003e`user_notification`\u003c/span\u003e (send an email to user when we detect that they are using compromised credentials) and \u003cspan pulumi-lang-nodejs=\"`adminNotification`\" pulumi-lang-dotnet=\"`AdminNotification`\" pulumi-lang-go=\"`adminNotification`\" pulumi-lang-python=\"`admin_notification`\" pulumi-lang-yaml=\"`adminNotification`\" pulumi-lang-java=\"`adminNotification`\"\u003e`admin_notification`\u003c/span\u003e (send an email with a summary of the number of accounts logging in with compromised credentials).\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "adminNotificationFrequencies",
                        "enabled",
                        "method",
                        "preChangePassword",
                        "preUserRegistration",
                        "shields"
                    ]
                }
            }
        },
        "auth0:index/AttackProtectionBreachedPasswordDetectionPreChangePassword:AttackProtectionBreachedPasswordDetectionPreChangePassword": {
            "properties": {
                "shields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Action to take when a breached password is detected before the password is changed. Possible values: \u003cspan pulumi-lang-nodejs=\"`block`\" pulumi-lang-dotnet=\"`Block`\" pulumi-lang-go=\"`block`\" pulumi-lang-python=\"`block`\" pulumi-lang-yaml=\"`block`\" pulumi-lang-java=\"`block`\"\u003e`block`\u003c/span\u003e (block compromised credentials for new accounts), \u003cspan pulumi-lang-nodejs=\"`adminNotification`\" pulumi-lang-dotnet=\"`AdminNotification`\" pulumi-lang-go=\"`adminNotification`\" pulumi-lang-python=\"`admin_notification`\" pulumi-lang-yaml=\"`adminNotification`\" pulumi-lang-java=\"`adminNotification`\"\u003e`admin_notification`\u003c/span\u003e (send an email notification with a summary of compromised credentials in new accounts).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "shields"
                    ]
                }
            }
        },
        "auth0:index/AttackProtectionBreachedPasswordDetectionPreUserRegistration:AttackProtectionBreachedPasswordDetectionPreUserRegistration": {
            "properties": {
                "shields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Action to take when a breached password is detected during a signup. Possible values: \u003cspan pulumi-lang-nodejs=\"`block`\" pulumi-lang-dotnet=\"`Block`\" pulumi-lang-go=\"`block`\" pulumi-lang-python=\"`block`\" pulumi-lang-yaml=\"`block`\" pulumi-lang-java=\"`block`\"\u003e`block`\u003c/span\u003e (block compromised credentials for new accounts), \u003cspan pulumi-lang-nodejs=\"`adminNotification`\" pulumi-lang-dotnet=\"`AdminNotification`\" pulumi-lang-go=\"`adminNotification`\" pulumi-lang-python=\"`admin_notification`\" pulumi-lang-yaml=\"`adminNotification`\" pulumi-lang-java=\"`adminNotification`\"\u003e`admin_notification`\u003c/span\u003e (send an email notification with a summary of compromised credentials in new accounts).\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "shields"
                    ]
                }
            }
        },
        "auth0:index/AttackProtectionBruteForceProtection:AttackProtectionBruteForceProtection": {
            "properties": {
                "allowlists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether brute force attack protections are active.\n"
                },
                "maxAttempts": {
                    "type": "integer",
                    "description": "Maximum number of consecutive failed login attempts from a single user before blocking is triggered. Only available on public tenants.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Determines whether the IP address is used when counting failed attempts. Possible values: \u003cspan pulumi-lang-nodejs=\"`countPerIdentifierAndIp`\" pulumi-lang-dotnet=\"`CountPerIdentifierAndIp`\" pulumi-lang-go=\"`countPerIdentifierAndIp`\" pulumi-lang-python=\"`count_per_identifier_and_ip`\" pulumi-lang-yaml=\"`countPerIdentifierAndIp`\" pulumi-lang-java=\"`countPerIdentifierAndIp`\"\u003e`count_per_identifier_and_ip`\u003c/span\u003e (lockout an account from a given IP Address) or \u003cspan pulumi-lang-nodejs=\"`countPerIdentifier`\" pulumi-lang-dotnet=\"`CountPerIdentifier`\" pulumi-lang-go=\"`countPerIdentifier`\" pulumi-lang-python=\"`count_per_identifier`\" pulumi-lang-yaml=\"`countPerIdentifier`\" pulumi-lang-java=\"`countPerIdentifier`\"\u003e`count_per_identifier`\u003c/span\u003e (lockout an account regardless of IP Address).\n"
                },
                "shields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Action to take when a brute force protection threshold is violated. Possible values: \u003cspan pulumi-lang-nodejs=\"`block`\" pulumi-lang-dotnet=\"`Block`\" pulumi-lang-go=\"`block`\" pulumi-lang-python=\"`block`\" pulumi-lang-yaml=\"`block`\" pulumi-lang-java=\"`block`\"\u003e`block`\u003c/span\u003e (block login attempts for a flagged user account), \u003cspan pulumi-lang-nodejs=\"`userNotification`\" pulumi-lang-dotnet=\"`UserNotification`\" pulumi-lang-go=\"`userNotification`\" pulumi-lang-python=\"`user_notification`\" pulumi-lang-yaml=\"`userNotification`\" pulumi-lang-java=\"`userNotification`\"\u003e`user_notification`\u003c/span\u003e (send an email to user when their account has been blocked).\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowlists",
                        "enabled",
                        "maxAttempts",
                        "mode",
                        "shields"
                    ]
                }
            }
        },
        "auth0:index/AttackProtectionSuspiciousIpThrottling:AttackProtectionSuspiciousIpThrottling": {
            "properties": {
                "allowlists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether suspicious IP throttling attack protections are active.\n"
                },
                "preLogin": {
                    "$ref": "#/types/auth0:index/AttackProtectionSuspiciousIpThrottlingPreLogin:AttackProtectionSuspiciousIpThrottlingPreLogin",
                    "description": "Configuration options that apply before every login attempt. Only available on public tenants.\n"
                },
                "preUserRegistration": {
                    "$ref": "#/types/auth0:index/AttackProtectionSuspiciousIpThrottlingPreUserRegistration:AttackProtectionSuspiciousIpThrottlingPreUserRegistration",
                    "description": "Configuration options that apply before every user registration attempt. Only available on public tenants.\n"
                },
                "shields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Action to take when a suspicious IP throttling threshold is violated. Possible values: \u003cspan pulumi-lang-nodejs=\"`block`\" pulumi-lang-dotnet=\"`Block`\" pulumi-lang-go=\"`block`\" pulumi-lang-python=\"`block`\" pulumi-lang-yaml=\"`block`\" pulumi-lang-java=\"`block`\"\u003e`block`\u003c/span\u003e (throttle traffic from an IP address when there is a high number of login attempts targeting too many different accounts), \u003cspan pulumi-lang-nodejs=\"`adminNotification`\" pulumi-lang-dotnet=\"`AdminNotification`\" pulumi-lang-go=\"`adminNotification`\" pulumi-lang-python=\"`admin_notification`\" pulumi-lang-yaml=\"`adminNotification`\" pulumi-lang-java=\"`adminNotification`\"\u003e`admin_notification`\u003c/span\u003e (send an email notification when traffic is throttled on one or more IP addresses due to high-velocity traffic).\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowlists",
                        "enabled",
                        "preLogin",
                        "preUserRegistration",
                        "shields"
                    ]
                }
            }
        },
        "auth0:index/AttackProtectionSuspiciousIpThrottlingPreLogin:AttackProtectionSuspiciousIpThrottlingPreLogin": {
            "properties": {
                "maxAttempts": {
                    "type": "integer",
                    "description": "The maximum number of failed login attempts allowed from a single IP address.\n"
                },
                "rate": {
                    "type": "integer",
                    "description": "Interval of time, given in milliseconds at which new login tokens will become available after they have been used by an IP address. Each login attempt will be added on the defined throttling rate.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxAttempts",
                        "rate"
                    ]
                }
            }
        },
        "auth0:index/AttackProtectionSuspiciousIpThrottlingPreUserRegistration:AttackProtectionSuspiciousIpThrottlingPreUserRegistration": {
            "properties": {
                "maxAttempts": {
                    "type": "integer",
                    "description": "The maximum number of sign up attempts allowed from a single IP address.\n"
                },
                "rate": {
                    "type": "integer",
                    "description": "Interval of time, given in milliseconds at which new sign up tokens will become available after they have been used by an IP address. Each sign up attempt will be added on the defined throttling rate.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "maxAttempts",
                        "rate"
                    ]
                }
            }
        },
        "auth0:index/BrandingColors:BrandingColors": {
            "properties": {
                "pageBackground": {
                    "type": "string",
                    "description": "Background color of login pages in hexadecimal.\n"
                },
                "primary": {
                    "type": "string",
                    "description": "Primary button background color in hexadecimal.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "pageBackground",
                        "primary"
                    ]
                }
            }
        },
        "auth0:index/BrandingFont:BrandingFont": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "URL for the custom font.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "auth0:index/BrandingThemeBorders:BrandingThemeBorders": {
            "properties": {
                "buttonBorderRadius": {
                    "type": "number",
                    "description": "Button border radius. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Defaults to `3.0`.\n"
                },
                "buttonBorderWeight": {
                    "type": "number",
                    "description": "Button border weight. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Defaults to `1.0`.\n"
                },
                "buttonsStyle": {
                    "type": "string",
                    "description": "Buttons style. Available options: \u003cspan pulumi-lang-nodejs=\"`pill`\" pulumi-lang-dotnet=\"`Pill`\" pulumi-lang-go=\"`pill`\" pulumi-lang-python=\"`pill`\" pulumi-lang-yaml=\"`pill`\" pulumi-lang-java=\"`pill`\"\u003e`pill`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rounded`\" pulumi-lang-dotnet=\"`Rounded`\" pulumi-lang-go=\"`rounded`\" pulumi-lang-python=\"`rounded`\" pulumi-lang-yaml=\"`rounded`\" pulumi-lang-java=\"`rounded`\"\u003e`rounded`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sharp`\" pulumi-lang-dotnet=\"`Sharp`\" pulumi-lang-go=\"`sharp`\" pulumi-lang-python=\"`sharp`\" pulumi-lang-yaml=\"`sharp`\" pulumi-lang-java=\"`sharp`\"\u003e`sharp`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`rounded`\" pulumi-lang-dotnet=\"`Rounded`\" pulumi-lang-go=\"`rounded`\" pulumi-lang-python=\"`rounded`\" pulumi-lang-yaml=\"`rounded`\" pulumi-lang-java=\"`rounded`\"\u003e`rounded`\u003c/span\u003e.\n"
                },
                "inputBorderRadius": {
                    "type": "number",
                    "description": "Input border radius. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Defaults to `3.0`.\n"
                },
                "inputBorderWeight": {
                    "type": "number",
                    "description": "Input border weight. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`3`\" pulumi-lang-dotnet=\"`3`\" pulumi-lang-go=\"`3`\" pulumi-lang-python=\"`3`\" pulumi-lang-yaml=\"`3`\" pulumi-lang-java=\"`3`\"\u003e`3`\u003c/span\u003e. Defaults to `1.0`.\n"
                },
                "inputsStyle": {
                    "type": "string",
                    "description": "Inputs style. Available options: \u003cspan pulumi-lang-nodejs=\"`pill`\" pulumi-lang-dotnet=\"`Pill`\" pulumi-lang-go=\"`pill`\" pulumi-lang-python=\"`pill`\" pulumi-lang-yaml=\"`pill`\" pulumi-lang-java=\"`pill`\"\u003e`pill`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rounded`\" pulumi-lang-dotnet=\"`Rounded`\" pulumi-lang-go=\"`rounded`\" pulumi-lang-python=\"`rounded`\" pulumi-lang-yaml=\"`rounded`\" pulumi-lang-java=\"`rounded`\"\u003e`rounded`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sharp`\" pulumi-lang-dotnet=\"`Sharp`\" pulumi-lang-go=\"`sharp`\" pulumi-lang-python=\"`sharp`\" pulumi-lang-yaml=\"`sharp`\" pulumi-lang-java=\"`sharp`\"\u003e`sharp`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`rounded`\" pulumi-lang-dotnet=\"`Rounded`\" pulumi-lang-go=\"`rounded`\" pulumi-lang-python=\"`rounded`\" pulumi-lang-yaml=\"`rounded`\" pulumi-lang-java=\"`rounded`\"\u003e`rounded`\u003c/span\u003e.\n"
                },
                "showWidgetShadow": {
                    "type": "boolean",
                    "description": "Show widget shadow. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "widgetBorderWeight": {
                    "type": "number",
                    "description": "Widget border weight. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Defaults to `0.0`.\n"
                },
                "widgetCornerRadius": {
                    "type": "number",
                    "description": "Widget corner radius. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`50`\" pulumi-lang-dotnet=\"`50`\" pulumi-lang-go=\"`50`\" pulumi-lang-python=\"`50`\" pulumi-lang-yaml=\"`50`\" pulumi-lang-java=\"`50`\"\u003e`50`\u003c/span\u003e. Defaults to `5.0`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/BrandingThemeColors:BrandingThemeColors": {
            "properties": {
                "baseFocusColor": {
                    "type": "string",
                    "description": "Base focus color. Defaults to `#635dff`.\n"
                },
                "baseHoverColor": {
                    "type": "string",
                    "description": "Base hover color. Defaults to `#000000`.\n"
                },
                "bodyText": {
                    "type": "string",
                    "description": "Body text. Defaults to `#1e212a`.\n"
                },
                "captchaWidgetTheme": {
                    "type": "string",
                    "description": "Captcha Widget Theme.\n"
                },
                "error": {
                    "type": "string",
                    "description": "Error. Defaults to `#d03c38`.\n"
                },
                "header": {
                    "type": "string",
                    "description": "Header. Defaults to `#1e212a`.\n"
                },
                "icons": {
                    "type": "string",
                    "description": "Icons. Defaults to `#65676e`.\n"
                },
                "inputBackground": {
                    "type": "string",
                    "description": "Input background. Defaults to `#ffffff`.\n"
                },
                "inputBorder": {
                    "type": "string",
                    "description": "Input border. Defaults to `#c9cace`.\n"
                },
                "inputFilledText": {
                    "type": "string",
                    "description": "Input filled text. Defaults to `#000000`.\n"
                },
                "inputLabelsPlaceholders": {
                    "type": "string",
                    "description": "Input labels \u0026 placeholders. Defaults to `#65676e`.\n"
                },
                "linksFocusedComponents": {
                    "type": "string",
                    "description": "Links \u0026 focused components. Defaults to `#635dff`.\n"
                },
                "primaryButton": {
                    "type": "string",
                    "description": "Primary button. Defaults to `#635dff`.\n"
                },
                "primaryButtonLabel": {
                    "type": "string",
                    "description": "Primary button label. Defaults to `#ffffff`.\n"
                },
                "secondaryButtonBorder": {
                    "type": "string",
                    "description": "Secondary button border. Defaults to `#c9cace`.\n"
                },
                "secondaryButtonLabel": {
                    "type": "string",
                    "description": "Secondary button label. Defaults to `#1e212a`.\n"
                },
                "success": {
                    "type": "string",
                    "description": "Success. Defaults to `#13a688`.\n"
                },
                "widgetBackground": {
                    "type": "string",
                    "description": "Widget background. Defaults to `#ffffff`.\n"
                },
                "widgetBorder": {
                    "type": "string",
                    "description": "Widget border. Defaults to `#c9cace`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/BrandingThemeFonts:BrandingThemeFonts": {
            "properties": {
                "bodyText": {
                    "$ref": "#/types/auth0:index/BrandingThemeFontsBodyText:BrandingThemeFontsBodyText",
                    "description": "Body text.\n"
                },
                "buttonsText": {
                    "$ref": "#/types/auth0:index/BrandingThemeFontsButtonsText:BrandingThemeFontsButtonsText",
                    "description": "Buttons text.\n"
                },
                "fontUrl": {
                    "type": "string",
                    "description": "Font URL. Defaults to an empty string.\n"
                },
                "inputLabels": {
                    "$ref": "#/types/auth0:index/BrandingThemeFontsInputLabels:BrandingThemeFontsInputLabels",
                    "description": "Input labels.\n"
                },
                "links": {
                    "$ref": "#/types/auth0:index/BrandingThemeFontsLinks:BrandingThemeFontsLinks",
                    "description": "Links.\n"
                },
                "linksStyle": {
                    "type": "string",
                    "description": "Links style. Defaults to \u003cspan pulumi-lang-nodejs=\"`normal`\" pulumi-lang-dotnet=\"`Normal`\" pulumi-lang-go=\"`normal`\" pulumi-lang-python=\"`normal`\" pulumi-lang-yaml=\"`normal`\" pulumi-lang-java=\"`normal`\"\u003e`normal`\u003c/span\u003e.\n"
                },
                "referenceTextSize": {
                    "type": "number",
                    "description": "Reference text size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`12`\" pulumi-lang-dotnet=\"`12`\" pulumi-lang-go=\"`12`\" pulumi-lang-python=\"`12`\" pulumi-lang-yaml=\"`12`\" pulumi-lang-java=\"`12`\"\u003e`12`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`24`\" pulumi-lang-dotnet=\"`24`\" pulumi-lang-go=\"`24`\" pulumi-lang-python=\"`24`\" pulumi-lang-yaml=\"`24`\" pulumi-lang-java=\"`24`\"\u003e`24`\u003c/span\u003e. Defaults to `16.0`.\n"
                },
                "subtitle": {
                    "$ref": "#/types/auth0:index/BrandingThemeFontsSubtitle:BrandingThemeFontsSubtitle",
                    "description": "Subtitle.\n"
                },
                "title": {
                    "$ref": "#/types/auth0:index/BrandingThemeFontsTitle:BrandingThemeFontsTitle",
                    "description": "Title.\n"
                }
            },
            "type": "object",
            "required": [
                "bodyText",
                "buttonsText",
                "inputLabels",
                "links",
                "subtitle",
                "title"
            ]
        },
        "auth0:index/BrandingThemeFontsBodyText:BrandingThemeFontsBodyText": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Body text bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Body text size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `87.5`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/BrandingThemeFontsButtonsText:BrandingThemeFontsButtonsText": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Buttons text bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Buttons text size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `100.0`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/BrandingThemeFontsInputLabels:BrandingThemeFontsInputLabels": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Input labels bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Input labels size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `100.0`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/BrandingThemeFontsLinks:BrandingThemeFontsLinks": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Links bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Links size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `87.5`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/BrandingThemeFontsSubtitle:BrandingThemeFontsSubtitle": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Subtitle bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Subtitle size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `87.5`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/BrandingThemeFontsTitle:BrandingThemeFontsTitle": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Title bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Title size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`75`\" pulumi-lang-dotnet=\"`75`\" pulumi-lang-go=\"`75`\" pulumi-lang-python=\"`75`\" pulumi-lang-yaml=\"`75`\" pulumi-lang-java=\"`75`\"\u003e`75`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `150.0`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/BrandingThemePageBackground:BrandingThemePageBackground": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "description": "Background color. Defaults to `#000000`.\n"
                },
                "backgroundImageUrl": {
                    "type": "string",
                    "description": "Background image url. Defaults to an empty string.\n"
                },
                "pageLayout": {
                    "type": "string",
                    "description": "Page layout. Available options: \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`left`\" pulumi-lang-dotnet=\"`Left`\" pulumi-lang-go=\"`left`\" pulumi-lang-python=\"`left`\" pulumi-lang-yaml=\"`left`\" pulumi-lang-java=\"`left`\"\u003e`left`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`right`\" pulumi-lang-dotnet=\"`Right`\" pulumi-lang-go=\"`right`\" pulumi-lang-python=\"`right`\" pulumi-lang-yaml=\"`right`\" pulumi-lang-java=\"`right`\"\u003e`right`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/BrandingThemeWidget:BrandingThemeWidget": {
            "properties": {
                "headerTextAlignment": {
                    "type": "string",
                    "description": "Header text alignment. Available options: \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`left`\" pulumi-lang-dotnet=\"`Left`\" pulumi-lang-go=\"`left`\" pulumi-lang-python=\"`left`\" pulumi-lang-yaml=\"`left`\" pulumi-lang-java=\"`left`\"\u003e`left`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`right`\" pulumi-lang-dotnet=\"`Right`\" pulumi-lang-go=\"`right`\" pulumi-lang-python=\"`right`\" pulumi-lang-yaml=\"`right`\" pulumi-lang-java=\"`right`\"\u003e`right`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e.\n"
                },
                "logoHeight": {
                    "type": "number",
                    "description": "Logo height. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`100`\" pulumi-lang-dotnet=\"`100`\" pulumi-lang-go=\"`100`\" pulumi-lang-python=\"`100`\" pulumi-lang-yaml=\"`100`\" pulumi-lang-java=\"`100`\"\u003e`100`\u003c/span\u003e. Defaults to `52.0`.\n"
                },
                "logoPosition": {
                    "type": "string",
                    "description": "Logo position. Available options: \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`left`\" pulumi-lang-dotnet=\"`Left`\" pulumi-lang-go=\"`left`\" pulumi-lang-python=\"`left`\" pulumi-lang-yaml=\"`left`\" pulumi-lang-java=\"`left`\"\u003e`left`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`right`\" pulumi-lang-dotnet=\"`Right`\" pulumi-lang-go=\"`right`\" pulumi-lang-python=\"`right`\" pulumi-lang-yaml=\"`right`\" pulumi-lang-java=\"`right`\"\u003e`right`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Logo url. Defaults to an empty string.\n"
                },
                "socialButtonsLayout": {
                    "type": "string",
                    "description": "Social buttons layout. Available options: \u003cspan pulumi-lang-nodejs=\"`bottom`\" pulumi-lang-dotnet=\"`Bottom`\" pulumi-lang-go=\"`bottom`\" pulumi-lang-python=\"`bottom`\" pulumi-lang-yaml=\"`bottom`\" pulumi-lang-java=\"`bottom`\"\u003e`bottom`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`top`\" pulumi-lang-dotnet=\"`Top`\" pulumi-lang-go=\"`top`\" pulumi-lang-python=\"`top`\" pulumi-lang-yaml=\"`top`\" pulumi-lang-java=\"`top`\"\u003e`top`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`bottom`\" pulumi-lang-dotnet=\"`Bottom`\" pulumi-lang-go=\"`bottom`\" pulumi-lang-python=\"`bottom`\" pulumi-lang-yaml=\"`bottom`\" pulumi-lang-java=\"`bottom`\"\u003e`bottom`\u003c/span\u003e.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/BrandingUniversalLogin:BrandingUniversalLogin": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The html template for the New Universal Login Experience.\n"
                }
            },
            "type": "object",
            "required": [
                "body"
            ]
        },
        "auth0:index/ClientAddons:ClientAddons": {
            "properties": {
                "aws": {
                    "$ref": "#/types/auth0:index/ClientAddonsAws:ClientAddonsAws",
                    "description": "AWS Addon configuration.\n"
                },
                "azureBlob": {
                    "$ref": "#/types/auth0:index/ClientAddonsAzureBlob:ClientAddonsAzureBlob",
                    "description": "Azure Blob Storage Addon configuration.\n"
                },
                "azureSb": {
                    "$ref": "#/types/auth0:index/ClientAddonsAzureSb:ClientAddonsAzureSb",
                    "description": "Azure Storage Bus Addon configuration.\n"
                },
                "box": {
                    "$ref": "#/types/auth0:index/ClientAddonsBox:ClientAddonsBox",
                    "description": "Box SSO indicator (no configuration settings needed for Box SSO).\n"
                },
                "cloudbees": {
                    "$ref": "#/types/auth0:index/ClientAddonsCloudbees:ClientAddonsCloudbees",
                    "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO).\n"
                },
                "concur": {
                    "$ref": "#/types/auth0:index/ClientAddonsConcur:ClientAddonsConcur",
                    "description": "Concur SSO indicator (no configuration settings needed for Concur SSO).\n"
                },
                "dropbox": {
                    "$ref": "#/types/auth0:index/ClientAddonsDropbox:ClientAddonsDropbox",
                    "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO).\n"
                },
                "echosign": {
                    "$ref": "#/types/auth0:index/ClientAddonsEchosign:ClientAddonsEchosign",
                    "description": "Adobe EchoSign SSO configuration.\n"
                },
                "egnyte": {
                    "$ref": "#/types/auth0:index/ClientAddonsEgnyte:ClientAddonsEgnyte",
                    "description": "Egnyte SSO configuration.\n"
                },
                "firebase": {
                    "$ref": "#/types/auth0:index/ClientAddonsFirebase:ClientAddonsFirebase",
                    "description": "Google Firebase addon configuration.\n"
                },
                "layer": {
                    "$ref": "#/types/auth0:index/ClientAddonsLayer:ClientAddonsLayer",
                    "description": "Layer addon configuration.\n"
                },
                "mscrm": {
                    "$ref": "#/types/auth0:index/ClientAddonsMscrm:ClientAddonsMscrm",
                    "description": "Microsoft Dynamics CRM SSO configuration.\n"
                },
                "newrelic": {
                    "$ref": "#/types/auth0:index/ClientAddonsNewrelic:ClientAddonsNewrelic",
                    "description": "New Relic SSO configuration.\n"
                },
                "office365": {
                    "$ref": "#/types/auth0:index/ClientAddonsOffice365:ClientAddonsOffice365",
                    "description": "Microsoft Office 365 SSO configuration.\n"
                },
                "rms": {
                    "$ref": "#/types/auth0:index/ClientAddonsRms:ClientAddonsRms",
                    "description": "Active Directory Rights Management Service SSO configuration.\n"
                },
                "salesforce": {
                    "$ref": "#/types/auth0:index/ClientAddonsSalesforce:ClientAddonsSalesforce",
                    "description": "Salesforce SSO configuration.\n"
                },
                "salesforceApi": {
                    "$ref": "#/types/auth0:index/ClientAddonsSalesforceApi:ClientAddonsSalesforceApi",
                    "description": "Salesforce API addon configuration.\n"
                },
                "salesforceSandboxApi": {
                    "$ref": "#/types/auth0:index/ClientAddonsSalesforceSandboxApi:ClientAddonsSalesforceSandboxApi",
                    "description": "Salesforce Sandbox addon configuration.\n"
                },
                "samlp": {
                    "$ref": "#/types/auth0:index/ClientAddonsSamlp:ClientAddonsSamlp",
                    "description": "Configuration settings for a SAML add-on.\n"
                },
                "sapApi": {
                    "$ref": "#/types/auth0:index/ClientAddonsSapApi:ClientAddonsSapApi",
                    "description": "SAP API addon configuration.\n"
                },
                "sentry": {
                    "$ref": "#/types/auth0:index/ClientAddonsSentry:ClientAddonsSentry",
                    "description": "Sentry SSO configuration.\n"
                },
                "sharepoint": {
                    "$ref": "#/types/auth0:index/ClientAddonsSharepoint:ClientAddonsSharepoint",
                    "description": "SharePoint SSO configuration.\n"
                },
                "slack": {
                    "$ref": "#/types/auth0:index/ClientAddonsSlack:ClientAddonsSlack",
                    "description": "Slack team or workspace name usually first segment in your Slack URL, for example `https://acme-org.slack.com` would be `acme-org`.\n"
                },
                "springcm": {
                    "$ref": "#/types/auth0:index/ClientAddonsSpringcm:ClientAddonsSpringcm",
                    "description": "SpringCM SSO configuration.\n"
                },
                "ssoIntegration": {
                    "$ref": "#/types/auth0:index/ClientAddonsSsoIntegration:ClientAddonsSsoIntegration",
                    "description": "Generic SSO configuration.\n"
                },
                "wams": {
                    "$ref": "#/types/auth0:index/ClientAddonsWams:ClientAddonsWams",
                    "description": "Windows Azure Mobile Services addon configuration.\n"
                },
                "wsfed": {
                    "$ref": "#/types/auth0:index/ClientAddonsWsfed:ClientAddonsWsfed",
                    "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in \u003cspan pulumi-lang-nodejs=\"`callback`\" pulumi-lang-dotnet=\"`Callback`\" pulumi-lang-go=\"`callback`\" pulumi-lang-python=\"`callback`\" pulumi-lang-yaml=\"`callback`\" pulumi-lang-java=\"`callback`\"\u003e`callback`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`clientAliases`\" pulumi-lang-dotnet=\"`ClientAliases`\" pulumi-lang-go=\"`clientAliases`\" pulumi-lang-python=\"`client_aliases`\" pulumi-lang-yaml=\"`clientAliases`\" pulumi-lang-java=\"`clientAliases`\"\u003e`client_aliases`\u003c/span\u003e properties on the client.\n"
                },
                "zendesk": {
                    "$ref": "#/types/auth0:index/ClientAddonsZendesk:ClientAddonsZendesk",
                    "description": "Zendesk SSO configuration.\n"
                },
                "zoom": {
                    "$ref": "#/types/auth0:index/ClientAddonsZoom:ClientAddonsZoom",
                    "description": "Zoom SSO configuration.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsAws:ClientAddonsAws": {
            "properties": {
                "lifetimeInSeconds": {
                    "type": "integer",
                    "description": "AWS token lifetime in seconds.\n"
                },
                "principal": {
                    "type": "string",
                    "description": "AWS principal ARN, for example `arn:aws:iam::010616021751:saml-provider/idpname`.\n"
                },
                "role": {
                    "type": "string",
                    "description": "AWS role ARN, for example `arn:aws:iam::010616021751:role/foo`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsAzureBlob:ClientAddonsAzureBlob": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Your Azure storage account name. Usually first segment in your Azure storage URL, for example `https://acme-org.blob.core.windows.net` would be the account name `acme-org`.\n"
                },
                "blobDelete": {
                    "type": "boolean",
                    "description": "Indicates if the issued token has permission to delete the blob.\n"
                },
                "blobName": {
                    "type": "string",
                    "description": "Entity to request a token for, such as `my-blob`. If blank the computed SAS will apply to the entire storage container.\n"
                },
                "blobRead": {
                    "type": "boolean",
                    "description": "Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation.\n"
                },
                "blobWrite": {
                    "type": "boolean",
                    "description": "Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account.\n"
                },
                "containerDelete": {
                    "type": "boolean",
                    "description": "Indicates if issued token has permission to delete any blob in the container.\n"
                },
                "containerList": {
                    "type": "boolean",
                    "description": "Indicates if the issued token has permission to list blobs in the container.\n"
                },
                "containerName": {
                    "type": "string",
                    "description": "Container to request a token for, such as `my-container`.\n"
                },
                "containerRead": {
                    "type": "boolean",
                    "description": "Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation.\n"
                },
                "containerWrite": {
                    "type": "boolean",
                    "description": "Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account.\n"
                },
                "expiration": {
                    "type": "integer",
                    "description": "Expiration in minutes for the generated token (default of 5 minutes).\n"
                },
                "signedIdentifier": {
                    "type": "string",
                    "description": "Shared access policy identifier defined in your storage account resource.\n"
                },
                "storageAccessKey": {
                    "type": "string",
                    "description": "Access key associated with this storage account.\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsAzureSb:ClientAddonsAzureSb": {
            "properties": {
                "entityPath": {
                    "type": "string",
                    "description": "Entity you want to request a token for, such as `my-queue`.\n"
                },
                "expiration": {
                    "type": "integer",
                    "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "Your Azure Service Bus namespace. Usually the first segment of your Service Bus URL (for example `https://acme-org.servicebus.windows.net` would be `acme-org`).\n"
                },
                "sasKey": {
                    "type": "string",
                    "description": "Primary Key associated with your shared access policy.\n",
                    "secret": true
                },
                "sasKeyName": {
                    "type": "string",
                    "description": "Your shared access policy name defined in your Service Bus entity.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsBox:ClientAddonsBox": {
            "type": "object"
        },
        "auth0:index/ClientAddonsCloudbees:ClientAddonsCloudbees": {
            "type": "object"
        },
        "auth0:index/ClientAddonsConcur:ClientAddonsConcur": {
            "type": "object"
        },
        "auth0:index/ClientAddonsDropbox:ClientAddonsDropbox": {
            "type": "object"
        },
        "auth0:index/ClientAddonsEchosign:ClientAddonsEchosign": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Your custom domain found in your EchoSign URL, for example `https://acme-org.echosign.com` would be `acme-org`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsEgnyte:ClientAddonsEgnyte": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Your custom domain found in your Egnyte URL, for example `https://acme-org.echosign.com` would be `acme-org`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsFirebase:ClientAddonsFirebase": {
            "properties": {
                "clientEmail": {
                    "type": "string",
                    "description": "ID of the Service Account you have created (shown as \u003cspan pulumi-lang-nodejs=\"`clientEmail`\" pulumi-lang-dotnet=\"`ClientEmail`\" pulumi-lang-go=\"`clientEmail`\" pulumi-lang-python=\"`client_email`\" pulumi-lang-yaml=\"`clientEmail`\" pulumi-lang-java=\"`clientEmail`\"\u003e`client_email`\u003c/span\u003e in the generated JSON file, SDK v3+ tokens only).\n"
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "description": "Optional expiration in seconds for the generated token. Defaults to 3600 seconds (SDK v3+ tokens only).\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Private Key for signing the token (SDK v3+ tokens only).\n",
                    "secret": true
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Optional ID of the private key to obtain the \u003cspan pulumi-lang-nodejs=\"`kid`\" pulumi-lang-dotnet=\"`Kid`\" pulumi-lang-go=\"`kid`\" pulumi-lang-python=\"`kid`\" pulumi-lang-yaml=\"`kid`\" pulumi-lang-java=\"`kid`\"\u003e`kid`\u003c/span\u003e header claim from the issued token (SDK v3+ tokens only).\n",
                    "secret": true
                },
                "secret": {
                    "type": "string",
                    "description": "Google Firebase Secret. (SDK v2 only).\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsLayer:ClientAddonsLayer": {
            "properties": {
                "expiration": {
                    "type": "integer",
                    "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "Authentication Key identifier used to sign the Layer token.\n",
                    "secret": true
                },
                "principal": {
                    "type": "string",
                    "description": "Name of the property used as the unique user ID in Layer. If not specified \u003cspan pulumi-lang-nodejs=\"`userId`\" pulumi-lang-dotnet=\"`UserId`\" pulumi-lang-go=\"`userId`\" pulumi-lang-python=\"`user_id`\" pulumi-lang-yaml=\"`userId`\" pulumi-lang-java=\"`userId`\"\u003e`user_id`\u003c/span\u003e is used.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Private key for signing the Layer token.\n",
                    "secret": true
                },
                "providerId": {
                    "type": "string",
                    "description": "Provider ID of your Layer account.\n"
                }
            },
            "type": "object",
            "required": [
                "keyId",
                "privateKey",
                "providerId"
            ]
        },
        "auth0:index/ClientAddonsMscrm:ClientAddonsMscrm": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Microsoft Dynamics CRM application URL.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsNewrelic:ClientAddonsNewrelic": {
            "properties": {
                "account": {
                    "type": "string",
                    "description": "Your New Relic Account ID found in your New Relic URL after the `/accounts/` path, for example `https://rpm.newrelic.com/accounts/123456/query` would be \u003cspan pulumi-lang-nodejs=\"`123456`\" pulumi-lang-dotnet=\"`123456`\" pulumi-lang-go=\"`123456`\" pulumi-lang-python=\"`123456`\" pulumi-lang-yaml=\"`123456`\" pulumi-lang-java=\"`123456`\"\u003e`123456`\u003c/span\u003e.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsOffice365:ClientAddonsOffice365": {
            "properties": {
                "connection": {
                    "type": "string",
                    "description": "Optional Auth0 database connection for testing an already-configured Office 365 tenant.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Your Office 365 domain name, for example `acme-org.com`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsRms:ClientAddonsRms": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSalesforce:ClientAddonsSalesforce": {
            "properties": {
                "entityId": {
                    "type": "string",
                    "description": "Arbitrary logical URL that identifies the Saleforce resource, for example `https://acme-org.com`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSalesforceApi:ClientAddonsSalesforceApi": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Consumer Key assigned by Salesforce to the Connected App.\n",
                    "secret": true
                },
                "communityName": {
                    "type": "string",
                    "description": "Community name.\n"
                },
                "communityUrlSection": {
                    "type": "string",
                    "description": "Community URL section.\n"
                },
                "principal": {
                    "type": "string",
                    "description": "Name of the property in the user object that maps to a Salesforce username, for example \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e.\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSalesforceSandboxApi:ClientAddonsSalesforceSandboxApi": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Consumer Key assigned by Salesforce to the Connected App.\n",
                    "secret": true
                },
                "communityName": {
                    "type": "string",
                    "description": "Community name.\n"
                },
                "communityUrlSection": {
                    "type": "string",
                    "description": "Community URL section.\n"
                },
                "principal": {
                    "type": "string",
                    "description": "Name of the property in the user object that maps to a Salesforce username, for example \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e.\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSamlp:ClientAddonsSamlp": {
            "properties": {
                "audience": {
                    "type": "string",
                    "description": "Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.\n"
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "Class reference of the authentication context.\n"
                },
                "binding": {
                    "type": "string",
                    "description": "Protocol binding used for SAML logout responses.\n"
                },
                "createUpnClaim": {
                    "type": "boolean",
                    "description": "Indicates whether a UPN claim should be created. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination of the SAML Response. If not specified, it will be `AssertionConsumerUrl` of SAMLRequest or callback URL if there was no SAMLRequest.\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Algorithm used to calculate the digest of the SAML Assertion or response. Options include \u003cspan pulumi-lang-nodejs=\"`sha1`\" pulumi-lang-dotnet=\"`Sha1`\" pulumi-lang-go=\"`sha1`\" pulumi-lang-python=\"`sha1`\" pulumi-lang-yaml=\"`sha1`\" pulumi-lang-java=\"`sha1`\"\u003e`sha1`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`sha256`\" pulumi-lang-dotnet=\"`Sha256`\" pulumi-lang-go=\"`sha256`\" pulumi-lang-python=\"`sha256`\" pulumi-lang-yaml=\"`sha256`\" pulumi-lang-java=\"`sha256`\"\u003e`sha256`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`sha1`\" pulumi-lang-dotnet=\"`Sha1`\" pulumi-lang-go=\"`sha1`\" pulumi-lang-python=\"`sha1`\" pulumi-lang-yaml=\"`sha1`\" pulumi-lang-java=\"`sha1`\"\u003e`sha1`\u003c/span\u003e.\n"
                },
                "flexibleMappings": {
                    "type": "string",
                    "description": "This is a supporting attribute to \u003cspan pulumi-lang-nodejs=\"`mappings`\" pulumi-lang-dotnet=\"`Mappings`\" pulumi-lang-go=\"`mappings`\" pulumi-lang-python=\"`mappings`\" pulumi-lang-yaml=\"`mappings`\" pulumi-lang-java=\"`mappings`\"\u003e`mappings`\u003c/span\u003e field.Please note this is an experimental field. It should only be used when needed to send a map with keys as slices.\n"
                },
                "includeAttributeNameFormat": {
                    "type": "boolean",
                    "description": "Indicates whether or not we should infer the NameFormat based on the attribute name. If set to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e, the attribute NameFormat is not set in the assertion. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "Issuer of the SAML Assertion.\n"
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "description": "Number of seconds during which the token is valid. Defaults to \u003cspan pulumi-lang-nodejs=\"`3600`\" pulumi-lang-dotnet=\"`3600`\" pulumi-lang-go=\"`3600`\" pulumi-lang-python=\"`3600`\" pulumi-lang-yaml=\"`3600`\" pulumi-lang-java=\"`3600`\"\u003e`3600`\u003c/span\u003e seconds.\n"
                },
                "logout": {
                    "$ref": "#/types/auth0:index/ClientAddonsSamlpLogout:ClientAddonsSamlpLogout",
                    "description": "Configuration settings for logout.\n"
                },
                "mapIdentities": {
                    "type": "boolean",
                    "description": "Indicates whether or not to add additional identity information in the token, such as the provider used and the \u003cspan pulumi-lang-nodejs=\"`accessToken`\" pulumi-lang-dotnet=\"`AccessToken`\" pulumi-lang-go=\"`accessToken`\" pulumi-lang-python=\"`access_token`\" pulumi-lang-yaml=\"`accessToken`\" pulumi-lang-java=\"`accessToken`\"\u003e`access_token`\u003c/span\u003e, if available. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "mapUnknownClaimsAsIs": {
                    "type": "boolean",
                    "description": "Indicates whether to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "mappings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Mappings between the Auth0 user profile property name (\u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e) and the output attributes on the SAML attribute in the assertion (\u003cspan pulumi-lang-nodejs=\"`value`\" pulumi-lang-dotnet=\"`Value`\" pulumi-lang-go=\"`value`\" pulumi-lang-python=\"`value`\" pulumi-lang-yaml=\"`value`\" pulumi-lang-java=\"`value`\"\u003e`value`\u003c/span\u003e).\n"
                },
                "nameIdentifierFormat": {
                    "type": "string",
                    "description": "Format of the name identifier. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.\n"
                },
                "nameIdentifierProbes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.\n"
                },
                "passthroughClaimsWithNoMapping": {
                    "type": "boolean",
                    "description": "Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "recipient": {
                    "type": "string",
                    "description": "Recipient of the SAML Assertion (SubjectConfirmationData). Default is `AssertionConsumerUrl` on SAMLRequest or callback URL if no SAMLRequest was sent.\n"
                },
                "signResponse": {
                    "type": "boolean",
                    "description": "Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`. Defaults to `rsa-sha1`.\n"
                },
                "signingCert": {
                    "type": "string",
                    "description": "Optionally indicates the public key certificate used to validate SAML requests. If set, SAML requests will be required to be signed. A sample value would be `-----BEGIN PUBLIC KEY-----\\nMIGf...bpP/t3\\n+JGNGIRMj1hF1rnb6QIDAQAB\\n-----END PUBLIC KEY-----\\n`.\n"
                },
                "typedAttributes": {
                    "type": "boolean",
                    "description": "Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e, all `xs:type` are `xs:anyType`. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSamlpLogout:ClientAddonsSamlpLogout": {
            "properties": {
                "callback": {
                    "type": "string",
                    "description": "The service provider (client application)'s Single Logout Service URL, where Auth0 will send logout requests and responses.\n"
                },
                "sloEnabled": {
                    "type": "boolean",
                    "description": "Controls whether Auth0 should notify service providers of session termination.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSapApi:ClientAddonsSapApi": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "If activated in the OAuth 2.0 client configuration (transaction `SOAUTH2) the SAML attribute`client*id`must be set and equal the`client*id` form parameter of the access token request.\n"
                },
                "nameIdentifierFormat": {
                    "type": "string",
                    "description": "NameID element of the Subject which can be used to express the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "Requested scope for SAP APIs.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Service account password to use to authenticate API calls to the token endpoint.\n",
                    "secret": true
                },
                "tokenEndpointUrl": {
                    "type": "string",
                    "description": "The OAuth2 token endpoint URL of your SAP OData server.\n"
                },
                "usernameAttribute": {
                    "type": "string",
                    "description": "Name of the property in the user object that maps to a SAP username, for example \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSentry:ClientAddonsSentry": {
            "properties": {
                "baseUrl": {
                    "type": "string",
                    "description": "URL prefix only if running Sentry Community Edition, otherwise leave empty.\n"
                },
                "orgSlug": {
                    "type": "string",
                    "description": "Generated slug for your Sentry organization. Found in your Sentry URL, for example `https://sentry.acme.com/acme-org/` would be `acme-org`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSharepoint:ClientAddonsSharepoint": {
            "properties": {
                "externalUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "External SharePoint application URLs if exposed to the Internet.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Internal SharePoint application URL.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSlack:ClientAddonsSlack": {
            "properties": {
                "team": {
                    "type": "string",
                    "description": "Slack team name.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSpringcm:ClientAddonsSpringcm": {
            "properties": {
                "acsUrl": {
                    "type": "string",
                    "description": "SpringCM ACS URL, for example `https://na11.springcm.com/atlas/sso/SSOEndpoint.ashx`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSsoIntegration:ClientAddonsSsoIntegration": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "SSO integration name.\n"
                },
                "version": {
                    "type": "string",
                    "description": "SSO integration version installed.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsWams:ClientAddonsWams": {
            "properties": {
                "masterKey": {
                    "type": "string",
                    "description": "Your master key for Windows Azure Mobile Services.\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsWsfed:ClientAddonsWsfed": {
            "type": "object"
        },
        "auth0:index/ClientAddonsZendesk:ClientAddonsZendesk": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Zendesk account name. Usually the first segment in your Zendesk URL, for example `https://acme-org.zendesk.com` would be `acme-org`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsZoom:ClientAddonsZoom": {
            "properties": {
                "account": {
                    "type": "string",
                    "description": "Zoom account name. Usually the first segment of your Zoom URL, for example `https://acme-org.zoom.us` would be `acme-org`.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientCredentialsPrivateKeyJwt:ClientCredentialsPrivateKeyJwt": {
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ClientCredentialsPrivateKeyJwtCredential:ClientCredentialsPrivateKeyJwtCredential"
                    },
                    "description": "Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ]
        },
        "auth0:index/ClientCredentialsPrivateKeyJwtCredential:ClientCredentialsPrivateKeyJwtCredential": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm which will be used with the credential. Can be one of `RS256`, `RS384`, `PS256`. If not specified, `RS256` will be used.\n",
                    "willReplaceOnChanges": true
                },
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was created.\n"
                },
                "credentialType": {
                    "type": "string",
                    "description": "Credential type. Supported types: \u003cspan pulumi-lang-nodejs=\"`publicKey`\" pulumi-lang-dotnet=\"`PublicKey`\" pulumi-lang-go=\"`publicKey`\" pulumi-lang-python=\"`public_key`\" pulumi-lang-yaml=\"`publicKey`\" pulumi-lang-java=\"`publicKey`\"\u003e`public_key`\u003c/span\u003e.\n",
                    "willReplaceOnChanges": true
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date representing the expiration of the credential. It is not possible to set this to never expire after it has been set. Recreate the certificate if needed.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the client credential.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "The key identifier of the credential, generated on creation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name for a credential.\n",
                    "willReplaceOnChanges": true
                },
                "parseExpiryFromCert": {
                    "type": "boolean",
                    "description": "Parse expiry from x509 certificate. If true, attempts to parse the expiry date from the provided PEM. If also the \u003cspan pulumi-lang-nodejs=\"`expiresAt`\" pulumi-lang-dotnet=\"`ExpiresAt`\" pulumi-lang-go=\"`expiresAt`\" pulumi-lang-python=\"`expires_at`\" pulumi-lang-yaml=\"`expiresAt`\" pulumi-lang-java=\"`expiresAt`\"\u003e`expires_at`\u003c/span\u003e is set the credential expiry will be set to the explicit \u003cspan pulumi-lang-nodejs=\"`expiresAt`\" pulumi-lang-dotnet=\"`ExpiresAt`\" pulumi-lang-go=\"`expiresAt`\" pulumi-lang-python=\"`expires_at`\" pulumi-lang-yaml=\"`expiresAt`\" pulumi-lang-java=\"`expiresAt`\"\u003e`expires_at`\u003c/span\u003e value.\n",
                    "willReplaceOnChanges": true
                },
                "pem": {
                    "type": "string",
                    "description": "PEM-formatted public key (SPKI and PKCS1) or X509 certificate. Must be JSON escaped.\n",
                    "willReplaceOnChanges": true
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was updated.\n"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "pem"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "credentialType",
                        "expiresAt",
                        "id",
                        "keyId",
                        "pem",
                        "updatedAt"
                    ]
                }
            }
        },
        "auth0:index/ClientCredentialsSelfSignedTlsClientAuth:ClientCredentialsSelfSignedTlsClientAuth": {
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ClientCredentialsSelfSignedTlsClientAuthCredential:ClientCredentialsSelfSignedTlsClientAuthCredential"
                    },
                    "description": "Credentials that will be enabled on the client for mTLS authentication utilizing self-signed certificates.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ]
        },
        "auth0:index/ClientCredentialsSelfSignedTlsClientAuthCredential:ClientCredentialsSelfSignedTlsClientAuthCredential": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was created.\n"
                },
                "credentialType": {
                    "type": "string",
                    "description": "Credential type. Supported types: \u003cspan pulumi-lang-nodejs=\"`x509Cert`\" pulumi-lang-dotnet=\"`X509Cert`\" pulumi-lang-go=\"`x509Cert`\" pulumi-lang-python=\"`x509_cert`\" pulumi-lang-yaml=\"`x509Cert`\" pulumi-lang-java=\"`x509Cert`\"\u003e`x509_cert`\u003c/span\u003e.\n",
                    "willReplaceOnChanges": true
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date representing the expiration of the credential.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the client credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name for a credential.\n"
                },
                "pem": {
                    "type": "string",
                    "description": "PEM-formatted X509 certificate. Must be JSON escaped.\n",
                    "willReplaceOnChanges": true
                },
                "thumbprintSha256": {
                    "type": "string",
                    "description": "The X509 certificate's SHA256 thumbprint.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was updated.\n"
                }
            },
            "type": "object",
            "required": [
                "pem"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "expiresAt",
                        "id",
                        "pem",
                        "thumbprintSha256",
                        "updatedAt"
                    ]
                }
            }
        },
        "auth0:index/ClientCredentialsSignedRequestObject:ClientCredentialsSignedRequestObject": {
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ClientCredentialsSignedRequestObjectCredential:ClientCredentialsSignedRequestObjectCredential"
                    },
                    "description": "Client credentials for use with JWT-secured authorization requests.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Require JWT-secured authorization requests.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "credentials",
                        "required"
                    ]
                }
            }
        },
        "auth0:index/ClientCredentialsSignedRequestObjectCredential:ClientCredentialsSignedRequestObjectCredential": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm which will be used with the credential. Can be one of `RS256`, `RS384`, `PS256`. If not specified, `RS256` will be used.\n",
                    "willReplaceOnChanges": true
                },
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was created.\n"
                },
                "credentialType": {
                    "type": "string",
                    "description": "Credential type. Supported types: \u003cspan pulumi-lang-nodejs=\"`publicKey`\" pulumi-lang-dotnet=\"`PublicKey`\" pulumi-lang-go=\"`publicKey`\" pulumi-lang-python=\"`public_key`\" pulumi-lang-yaml=\"`publicKey`\" pulumi-lang-java=\"`publicKey`\"\u003e`public_key`\u003c/span\u003e.\n",
                    "willReplaceOnChanges": true
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date representing the expiration of the credential. It is not possible to set this to never expire after it has been set. Recreate the certificate if needed.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the client credential.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "The key identifier of the credential, generated on creation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name for a credential.\n",
                    "willReplaceOnChanges": true
                },
                "parseExpiryFromCert": {
                    "type": "boolean",
                    "description": "Parse expiry from x509 certificate. If true, attempts to parse the expiry date from the provided PEM. If also the \u003cspan pulumi-lang-nodejs=\"`expiresAt`\" pulumi-lang-dotnet=\"`ExpiresAt`\" pulumi-lang-go=\"`expiresAt`\" pulumi-lang-python=\"`expires_at`\" pulumi-lang-yaml=\"`expiresAt`\" pulumi-lang-java=\"`expiresAt`\"\u003e`expires_at`\u003c/span\u003e is set the credential expiry will be set to the explicit \u003cspan pulumi-lang-nodejs=\"`expiresAt`\" pulumi-lang-dotnet=\"`ExpiresAt`\" pulumi-lang-go=\"`expiresAt`\" pulumi-lang-python=\"`expires_at`\" pulumi-lang-yaml=\"`expiresAt`\" pulumi-lang-java=\"`expiresAt`\"\u003e`expires_at`\u003c/span\u003e value.\n",
                    "willReplaceOnChanges": true
                },
                "pem": {
                    "type": "string",
                    "description": "PEM-formatted public key (SPKI and PKCS1) or X509 certificate. Must be JSON escaped.\n",
                    "willReplaceOnChanges": true
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was updated.\n"
                }
            },
            "type": "object",
            "required": [
                "credentialType",
                "pem"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "credentialType",
                        "expiresAt",
                        "id",
                        "keyId",
                        "pem",
                        "updatedAt"
                    ]
                }
            }
        },
        "auth0:index/ClientCredentialsTlsClientAuth:ClientCredentialsTlsClientAuth": {
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ClientCredentialsTlsClientAuthCredential:ClientCredentialsTlsClientAuthCredential"
                    },
                    "description": "Credentials that will be enabled on the client for CA-based mTLS authentication.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ]
        },
        "auth0:index/ClientCredentialsTlsClientAuthCredential:ClientCredentialsTlsClientAuthCredential": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was created.\n"
                },
                "credentialType": {
                    "type": "string",
                    "description": "Credential type. Supported types: \u003cspan pulumi-lang-nodejs=\"`certSubjectDn`\" pulumi-lang-dotnet=\"`CertSubjectDn`\" pulumi-lang-go=\"`certSubjectDn`\" pulumi-lang-python=\"`cert_subject_dn`\" pulumi-lang-yaml=\"`certSubjectDn`\" pulumi-lang-java=\"`certSubjectDn`\"\u003e`cert_subject_dn`\u003c/span\u003e.\n",
                    "willReplaceOnChanges": true
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the client credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name for a credential.\n"
                },
                "pem": {
                    "type": "string",
                    "description": "PEM-formatted X509 certificate. Must be JSON escaped. Mutually exlusive with \u003cspan pulumi-lang-nodejs=\"`subjectDn`\" pulumi-lang-dotnet=\"`SubjectDn`\" pulumi-lang-go=\"`subjectDn`\" pulumi-lang-python=\"`subject_dn`\" pulumi-lang-yaml=\"`subjectDn`\" pulumi-lang-java=\"`subjectDn`\"\u003e`subject_dn`\u003c/span\u003e property.\n",
                    "willReplaceOnChanges": true
                },
                "subjectDn": {
                    "type": "string",
                    "description": "Subject Distinguished Name. Mutually exlusive with \u003cspan pulumi-lang-nodejs=\"`pem`\" pulumi-lang-dotnet=\"`Pem`\" pulumi-lang-go=\"`pem`\" pulumi-lang-python=\"`pem`\" pulumi-lang-yaml=\"`pem`\" pulumi-lang-java=\"`pem`\"\u003e`pem`\u003c/span\u003e property.\n",
                    "willReplaceOnChanges": true
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was updated.\n"
                }
            },
            "type": "object",
            "required": [
                "credentialType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "credentialType",
                        "id",
                        "subjectDn",
                        "updatedAt"
                    ]
                }
            }
        },
        "auth0:index/ClientDefaultOrganization:ClientDefaultOrganization": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "If set, the \u003cspan pulumi-lang-nodejs=\"`defaultOrganization`\" pulumi-lang-dotnet=\"`DefaultOrganization`\" pulumi-lang-go=\"`defaultOrganization`\" pulumi-lang-python=\"`default_organization`\" pulumi-lang-yaml=\"`defaultOrganization`\" pulumi-lang-java=\"`defaultOrganization`\"\u003e`default_organization`\u003c/span\u003e will be removed.\n"
                },
                "flows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Definition of the flow that needs to be configured. Eg. client_credentials\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The unique identifier of the organization\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disable",
                        "flows",
                        "organizationId"
                    ]
                }
            }
        },
        "auth0:index/ClientJwtConfiguration:ClientJwtConfiguration": {
            "properties": {
                "alg": {
                    "type": "string",
                    "description": "Algorithm used to sign JWTs. Can be one of `HS256`, `RS256`, `PS256`.\n"
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "description": "Number of seconds during which the JWT will be valid.\n"
                },
                "scopes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Permissions (scopes) included in JWTs.\n"
                },
                "secretEncoded": {
                    "type": "boolean",
                    "description": "Indicates whether the client secret is Base64-encoded.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "lifetimeInSeconds",
                        "secretEncoded"
                    ]
                }
            }
        },
        "auth0:index/ClientMobile:ClientMobile": {
            "properties": {
                "android": {
                    "$ref": "#/types/auth0:index/ClientMobileAndroid:ClientMobileAndroid",
                    "description": "Configuration settings for Android native apps.\n"
                },
                "ios": {
                    "$ref": "#/types/auth0:index/ClientMobileIos:ClientMobileIos",
                    "description": "Configuration settings for i0S native apps.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "android",
                        "ios"
                    ]
                }
            }
        },
        "auth0:index/ClientMobileAndroid:ClientMobileAndroid": {
            "properties": {
                "appPackageName": {
                    "type": "string"
                },
                "sha256CertFingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ClientMobileIos:ClientMobileIos": {
            "properties": {
                "appBundleIdentifier": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientNativeSocialLogin:ClientNativeSocialLogin": {
            "properties": {
                "apple": {
                    "$ref": "#/types/auth0:index/ClientNativeSocialLoginApple:ClientNativeSocialLoginApple"
                },
                "facebook": {
                    "$ref": "#/types/auth0:index/ClientNativeSocialLoginFacebook:ClientNativeSocialLoginFacebook"
                },
                "google": {
                    "$ref": "#/types/auth0:index/ClientNativeSocialLoginGoogle:ClientNativeSocialLoginGoogle"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apple",
                        "facebook",
                        "google"
                    ]
                }
            }
        },
        "auth0:index/ClientNativeSocialLoginApple:ClientNativeSocialLoginApple": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientNativeSocialLoginFacebook:ClientNativeSocialLoginFacebook": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientNativeSocialLoginGoogle:ClientNativeSocialLoginGoogle": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "auth0:index/ClientOidcLogout:ClientOidcLogout": {
            "properties": {
                "backchannelLogoutInitiators": {
                    "$ref": "#/types/auth0:index/ClientOidcLogoutBackchannelLogoutInitiators:ClientOidcLogoutBackchannelLogoutInitiators",
                    "description": "Configure OIDC logout initiators for the Client\n"
                },
                "backchannelLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.\n"
                }
            },
            "type": "object",
            "required": [
                "backchannelLogoutUrls"
            ]
        },
        "auth0:index/ClientOidcLogoutBackchannelLogoutInitiators:ClientOidcLogoutBackchannelLogoutInitiators": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "Determines the configuration method for enabling initiators. \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e enables only the initiators listed in the backchannel*logout*selected_initiators set, \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e enables all current and future initiators.\n"
                },
                "selectedInitiators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Contains the list of initiators to be enabled for the given client.\n"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ]
        },
        "auth0:index/ClientRefreshToken:ClientRefreshToken": {
            "properties": {
                "expirationType": {
                    "type": "string",
                    "description": "Options include \u003cspan pulumi-lang-nodejs=\"`expiring`\" pulumi-lang-dotnet=\"`Expiring`\" pulumi-lang-go=\"`expiring`\" pulumi-lang-python=\"`expiring`\" pulumi-lang-yaml=\"`expiring`\" pulumi-lang-java=\"`expiring`\"\u003e`expiring`\u003c/span\u003e, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is \u003cspan pulumi-lang-nodejs=\"`rotating`\" pulumi-lang-dotnet=\"`Rotating`\" pulumi-lang-go=\"`rotating`\" pulumi-lang-python=\"`rotating`\" pulumi-lang-yaml=\"`rotating`\" pulumi-lang-java=\"`rotating`\"\u003e`rotating`\u003c/span\u003e, this must be set to \u003cspan pulumi-lang-nodejs=\"`expiring`\" pulumi-lang-dotnet=\"`Expiring`\" pulumi-lang-go=\"`expiring`\" pulumi-lang-python=\"`expiring`\" pulumi-lang-yaml=\"`expiring`\" pulumi-lang-java=\"`expiring`\"\u003e`expiring`\u003c/span\u003e.\n"
                },
                "idleTokenLifetime": {
                    "type": "integer",
                    "description": "The time in seconds after which inactive refresh tokens will expire.\n"
                },
                "infiniteIdleTokenLifetime": {
                    "type": "boolean",
                    "description": "Whether inactive refresh tokens should remain valid indefinitely.\n"
                },
                "infiniteTokenLifetime": {
                    "type": "boolean",
                    "description": "Whether refresh tokens should remain valid indefinitely. If false, \u003cspan pulumi-lang-nodejs=\"`tokenLifetime`\" pulumi-lang-dotnet=\"`TokenLifetime`\" pulumi-lang-go=\"`tokenLifetime`\" pulumi-lang-python=\"`token_lifetime`\" pulumi-lang-yaml=\"`tokenLifetime`\" pulumi-lang-java=\"`tokenLifetime`\"\u003e`token_lifetime`\u003c/span\u003e should also be set.\n"
                },
                "leeway": {
                    "type": "integer",
                    "description": "The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ClientRefreshTokenPolicy:ClientRefreshTokenPolicy"
                    },
                    "description": "A collection of policies governing multi-resource refresh token exchange (MRRT), defining how refresh tokens can be used across different resource servers\n"
                },
                "rotationType": {
                    "type": "string",
                    "description": "Options include \u003cspan pulumi-lang-nodejs=\"`rotating`\" pulumi-lang-dotnet=\"`Rotating`\" pulumi-lang-go=\"`rotating`\" pulumi-lang-python=\"`rotating`\" pulumi-lang-yaml=\"`rotating`\" pulumi-lang-java=\"`rotating`\"\u003e`rotating`\u003c/span\u003e, `non-rotating`. When \u003cspan pulumi-lang-nodejs=\"`rotating`\" pulumi-lang-dotnet=\"`Rotating`\" pulumi-lang-go=\"`rotating`\" pulumi-lang-python=\"`rotating`\" pulumi-lang-yaml=\"`rotating`\" pulumi-lang-java=\"`rotating`\"\u003e`rotating`\u003c/span\u003e, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.\n"
                },
                "tokenLifetime": {
                    "type": "integer",
                    "description": "The absolute lifetime of a refresh token in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "expirationType",
                "rotationType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "expirationType",
                        "idleTokenLifetime",
                        "infiniteIdleTokenLifetime",
                        "infiniteTokenLifetime",
                        "leeway",
                        "rotationType",
                        "tokenLifetime"
                    ]
                }
            }
        },
        "auth0:index/ClientRefreshTokenPolicy:ClientRefreshTokenPolicy": {
            "properties": {
                "audience": {
                    "type": "string",
                    "description": "The identifier of the resource server to which the Multi Resource Refresh Token Policy applies\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The resource server permissions granted under the Multi Resource Refresh Token Policy, defining the context in which an access token can be used\n"
                }
            },
            "type": "object",
            "required": [
                "audience",
                "scopes"
            ]
        },
        "auth0:index/ClientSessionTransfer:ClientSessionTransfer": {
            "properties": {
                "allowRefreshToken": {
                    "type": "boolean",
                    "description": "Indicates whether the application is allowed to use a refresh token when using a session*transfer*token session.\n"
                },
                "allowedAuthenticationMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "canCreateSessionTransferToken": {
                    "type": "boolean",
                    "description": "Indicates whether the application(Native app) can use the Token Exchange endpoint to create a session*transfer*token\n"
                },
                "enforceCascadeRevocation": {
                    "type": "boolean",
                    "description": "Indicates whether Refresh Tokens created during a native-to-web session are tied to that session's lifetime. This determines if such refresh tokens should be automatically revoked when their corresponding sessions are.\n"
                },
                "enforceDeviceBinding": {
                    "type": "string",
                    "description": "Configures the level of device binding enforced when a session*transfer*token is consumed. Can be one of \u003cspan pulumi-lang-nodejs=\"`ip`\" pulumi-lang-dotnet=\"`Ip`\" pulumi-lang-go=\"`ip`\" pulumi-lang-python=\"`ip`\" pulumi-lang-yaml=\"`ip`\" pulumi-lang-java=\"`ip`\"\u003e`ip`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`asn`\" pulumi-lang-dotnet=\"`Asn`\" pulumi-lang-go=\"`asn`\" pulumi-lang-python=\"`asn`\" pulumi-lang-yaml=\"`asn`\" pulumi-lang-java=\"`asn`\"\u003e`asn`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e.\n"
                },
                "enforceOnlineRefreshTokens": {
                    "type": "boolean",
                    "description": "Indicates whether revoking the parent Refresh Token that initiated a Native to Web flow and was used to issue a Session Transfer Token should trigger a cascade revocation affecting its dependent child entities.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowRefreshToken",
                        "allowedAuthenticationMethods",
                        "canCreateSessionTransferToken",
                        "enforceCascadeRevocation",
                        "enforceDeviceBinding",
                        "enforceOnlineRefreshTokens"
                    ]
                }
            }
        },
        "auth0:index/ClientTokenExchange:ClientTokenExchange": {
            "properties": {
                "allowAnyProfileOfTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed profile types for token exchange\n"
                }
            },
            "type": "object",
            "required": [
                "allowAnyProfileOfTypes"
            ]
        },
        "auth0:index/ClientTokenQuota:ClientTokenQuota": {
            "properties": {
                "clientCredentials": {
                    "$ref": "#/types/auth0:index/ClientTokenQuotaClientCredentials:ClientTokenQuotaClientCredentials",
                    "description": "The token quota configuration for client credentials.\n"
                }
            },
            "type": "object",
            "required": [
                "clientCredentials"
            ]
        },
        "auth0:index/ClientTokenQuotaClientCredentials:ClientTokenQuotaClientCredentials": {
            "properties": {
                "enforce": {
                    "type": "boolean",
                    "description": "If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.\n"
                },
                "perDay": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per day\n"
                },
                "perHour": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per hour\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionAuthentication:ConnectionAuthentication": {
            "properties": {
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "active"
            ]
        },
        "auth0:index/ConnectionConnectedAccounts:ConnectionConnectedAccounts": {
            "properties": {
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "active"
            ]
        },
        "auth0:index/ConnectionOptions:ConnectionOptions": {
            "properties": {
                "accessTokenUrl": {
                    "type": "string",
                    "description": "URL used to exchange a user-authorized request token for an access token.\n"
                },
                "adfsServer": {
                    "type": "string",
                    "description": "ADFS URL where to fetch the metadata source.\n"
                },
                "allowedAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed audiences.\n"
                },
                "apiEnableUsers": {
                    "type": "boolean",
                    "description": "Enable API Access to users.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "App ID.\n"
                },
                "attributeMap": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsAttributeMap:ConnectionOptionsAttributeMap",
                    "description": "OpenID Connect and Okta Workforce connections can automatically map claims received from the identity provider (IdP). You can configure this mapping through a library template provided by Auth0 or by entering your own template directly. Click [here](https://auth0.com/docs/authenticate/identity-providers/enterprise-identity-providers/configure-pkce-claim-mapping-for-oidc#map-claims-for-oidc-connections) for more info.\n"
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttribute:ConnectionOptionsAttribute"
                    },
                    "description": "Order of attributes for precedence in identification.Valid values: email, phone*number, username. If Precedence is set, it must contain all values (email, phone*number, username) in specific order\n"
                },
                "authParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Query string parameters to be included as part of the generated passwordless email link.\n"
                },
                "authenticationMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAuthenticationMethod:ConnectionOptionsAuthenticationMethod"
                    },
                    "description": "Specifies the authentication methods and their configuration (enabled or disabled)\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "Authorization endpoint.\n"
                },
                "bruteForceProtection": {
                    "type": "boolean",
                    "description": "Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The strategy's client ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The strategy's client secret.\n",
                    "secret": true
                },
                "communityBaseUrl": {
                    "type": "string",
                    "description": "Salesforce community base URL.\n"
                },
                "configuration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A case-sensitive map of key value pairs used as configuration variables for the \u003cspan pulumi-lang-nodejs=\"`customScript`\" pulumi-lang-dotnet=\"`CustomScript`\" pulumi-lang-go=\"`customScript`\" pulumi-lang-python=\"`custom_script`\" pulumi-lang-yaml=\"`customScript`\" pulumi-lang-java=\"`customScript`\"\u003e`custom_script`\u003c/span\u003e.\n",
                    "secret": true
                },
                "connectionSettings": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsConnectionSettings:ConnectionOptionsConnectionSettings",
                    "description": "Proof Key for Code Exchange (PKCE) configuration settings for an OIDC or Okta Workforce connection.\n"
                },
                "consumerKey": {
                    "type": "string",
                    "description": "Identifies the client to the service provider\n"
                },
                "consumerSecret": {
                    "type": "string",
                    "description": "Secret used to establish ownership of the consumer key.\n"
                },
                "customHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsCustomHeader:ConnectionOptionsCustomHeader"
                    },
                    "description": "Configure extra headers to the Token endpoint of an OAuth 2.0 provider\n"
                },
                "customScripts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of scripts used to integrate with a custom database.\n"
                },
                "debug": {
                    "type": "boolean",
                    "description": "When enabled, additional debug information will be generated.\n"
                },
                "decryptionKey": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsDecryptionKey:ConnectionOptionsDecryptionKey",
                    "description": "The key used to decrypt encrypted responses from the connection. Uses the \u003cspan pulumi-lang-nodejs=\"`key`\" pulumi-lang-dotnet=\"`Key`\" pulumi-lang-go=\"`key`\" pulumi-lang-python=\"`key`\" pulumi-lang-yaml=\"`key`\" pulumi-lang-java=\"`key`\"\u003e`key`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`cert`\" pulumi-lang-dotnet=\"`Cert`\" pulumi-lang-go=\"`cert`\" pulumi-lang-python=\"`cert`\" pulumi-lang-yaml=\"`cert`\" pulumi-lang-java=\"`cert`\"\u003e`cert`\u003c/span\u003e properties to provide the private key and certificate respectively.\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Sign Request Algorithm Digest.\n"
                },
                "disableCache": {
                    "type": "boolean",
                    "description": "Indicates whether to disable the cache or not.\n"
                },
                "disableSelfServiceChangePassword": {
                    "type": "boolean",
                    "description": "Indicates whether to remove the forgot password link within the New Universal Login.\n"
                },
                "disableSignOut": {
                    "type": "boolean",
                    "description": "When enabled, will disable sign out.\n"
                },
                "disableSignup": {
                    "type": "boolean",
                    "description": "Indicates whether to allow user sign-ups to your application.\n"
                },
                "discoveryUrl": {
                    "type": "string",
                    "description": "OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name.\n"
                },
                "domainAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.\n"
                },
                "enableScriptContext": {
                    "type": "boolean",
                    "description": "Set to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e to inject context into custom DB scripts (warning: cannot be disabled once enabled).\n"
                },
                "enabledDatabaseCustomization": {
                    "type": "boolean",
                    "description": "Set to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e to use a legacy user store.\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Custom Entity ID for the connection.\n"
                },
                "fedMetadataXml": {
                    "type": "string",
                    "description": "Federation Metadata for the ADFS connection.\n"
                },
                "fieldsMap": {
                    "type": "string",
                    "description": "If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.\n"
                },
                "forwardRequestInfo": {
                    "type": "boolean",
                    "description": "Specifies whether or not request info should be forwarded to sms gateway.\n"
                },
                "from": {
                    "type": "string",
                    "description": "Address to use as the sender.\n"
                },
                "gatewayAuthentication": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsGatewayAuthentication:ConnectionOptionsGatewayAuthentication",
                    "description": "Defines the parameters used to generate the auth token for the custom gateway.\n"
                },
                "gatewayUrl": {
                    "type": "string",
                    "description": "Defines a custom sms gateway to use instead of Twilio.\n"
                },
                "globalTokenRevocationJwtIss": {
                    "type": "string",
                    "description": "Specifies the issuer of the JWT used for global token revocation for the SAML connection.\n"
                },
                "globalTokenRevocationJwtSub": {
                    "type": "string",
                    "description": "Specifies the subject of the JWT used for global token revocation for the SAML connection.\n"
                },
                "iconUrl": {
                    "type": "string",
                    "description": "Icon URL.\n"
                },
                "identityApi": {
                    "type": "string",
                    "description": "Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.\n"
                },
                "idpInitiated": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsIdpInitiated:ConnectionOptionsIdpInitiated",
                    "description": "Configuration options for IDP Initiated Authentication. This is an object with the properties: \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`clientProtocol`\" pulumi-lang-dotnet=\"`ClientProtocol`\" pulumi-lang-go=\"`clientProtocol`\" pulumi-lang-python=\"`client_protocol`\" pulumi-lang-yaml=\"`clientProtocol`\" pulumi-lang-java=\"`clientProtocol`\"\u003e`client_protocol`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`clientAuthorizeQuery`\" pulumi-lang-dotnet=\"`ClientAuthorizeQuery`\" pulumi-lang-go=\"`clientAuthorizeQuery`\" pulumi-lang-python=\"`client_authorize_query`\" pulumi-lang-yaml=\"`clientAuthorizeQuery`\" pulumi-lang-java=\"`clientAuthorizeQuery`\"\u003e`client_authorize_query`\u003c/span\u003e.\n"
                },
                "importMode": {
                    "type": "boolean",
                    "description": "Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IPs.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "Issuer URL, e.g. `https://auth.example.com`.\n"
                },
                "jwksUri": {
                    "type": "string",
                    "description": "JWKS URI.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "Apple Key ID.\n"
                },
                "mapUserIdToId": {
                    "type": "boolean",
                    "description": "By default Auth0 maps \u003cspan pulumi-lang-nodejs=\"`userId`\" pulumi-lang-dotnet=\"`UserId`\" pulumi-lang-go=\"`userId`\" pulumi-lang-python=\"`user_id`\" pulumi-lang-yaml=\"`userId`\" pulumi-lang-java=\"`userId`\"\u003e`user_id`\u003c/span\u003e to \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e. Enabling this setting changes the behavior to map \u003cspan pulumi-lang-nodejs=\"`userId`\" pulumi-lang-dotnet=\"`UserId`\" pulumi-lang-go=\"`userId`\" pulumi-lang-python=\"`user_id`\" pulumi-lang-yaml=\"`userId`\" pulumi-lang-java=\"`userId`\"\u003e`user_id`\u003c/span\u003e to 'id' instead. This can only be defined on a new Google Workspace connection and can not be changed once set.\n"
                },
                "maxGroupsToRetrieve": {
                    "type": "string",
                    "description": "Maximum number of groups to retrieve.\n"
                },
                "messagingServiceSid": {
                    "type": "string",
                    "description": "SID for Copilot. Used when SMS Source is Copilot.\n"
                },
                "metadataUrl": {
                    "type": "string",
                    "description": "The URL of the SAML metadata document.\n"
                },
                "metadataXml": {
                    "type": "string",
                    "description": "The XML content for the SAML metadata document. Values within the xml will take precedence over other attributes set on the options block.\n"
                },
                "mfa": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsMfa:ConnectionOptionsMfa",
                    "description": "Configuration options for multifactor authentication.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The public name of the email or SMS Connection. In most cases this is the same name as the connection name.\n"
                },
                "nonPersistentAttrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.\n"
                },
                "passkeyOptions": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsPasskeyOptions:ConnectionOptionsPasskeyOptions",
                    "description": "Defines options for the passkey authentication method\n"
                },
                "passwordComplexityOptions": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsPasswordComplexityOptions:ConnectionOptionsPasswordComplexityOptions",
                    "description": "Configuration settings for password complexity.\n"
                },
                "passwordDictionary": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsPasswordDictionary:ConnectionOptionsPasswordDictionary",
                    "description": "Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.\n"
                },
                "passwordHistories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsPasswordHistory:ConnectionOptionsPasswordHistory"
                    },
                    "description": "Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.\n"
                },
                "passwordNoPersonalInfo": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsPasswordNoPersonalInfo:ConnectionOptionsPasswordNoPersonalInfo",
                    "description": "Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`username`\" pulumi-lang-dotnet=\"`Username`\" pulumi-lang-go=\"`username`\" pulumi-lang-python=\"`username`\" pulumi-lang-yaml=\"`username`\" pulumi-lang-java=\"`username`\"\u003e`username`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nickname`\" pulumi-lang-dotnet=\"`Nickname`\" pulumi-lang-go=\"`nickname`\" pulumi-lang-python=\"`nickname`\" pulumi-lang-yaml=\"`nickname`\" pulumi-lang-java=\"`nickname`\"\u003e`nickname`\u003c/span\u003e, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e, or first part of the user's \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e.\n"
                },
                "passwordPolicy": {
                    "type": "string",
                    "description": "Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`low`\" pulumi-lang-dotnet=\"`Low`\" pulumi-lang-go=\"`low`\" pulumi-lang-python=\"`low`\" pulumi-lang-yaml=\"`low`\" pulumi-lang-java=\"`low`\"\u003e`low`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fair`\" pulumi-lang-dotnet=\"`Fair`\" pulumi-lang-go=\"`fair`\" pulumi-lang-python=\"`fair`\" pulumi-lang-yaml=\"`fair`\" pulumi-lang-java=\"`fair`\"\u003e`fair`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`good`\" pulumi-lang-dotnet=\"`Good`\" pulumi-lang-go=\"`good`\" pulumi-lang-python=\"`good`\" pulumi-lang-yaml=\"`good`\" pulumi-lang-java=\"`good`\"\u003e`good`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`excellent`\" pulumi-lang-dotnet=\"`Excellent`\" pulumi-lang-go=\"`excellent`\" pulumi-lang-python=\"`excellent`\" pulumi-lang-yaml=\"`excellent`\" pulumi-lang-java=\"`excellent`\"\u003e`excellent`\u003c/span\u003e.\n"
                },
                "pingFederateBaseUrl": {
                    "type": "string",
                    "description": "Ping Federate Server URL.\n"
                },
                "pkceEnabled": {
                    "type": "boolean",
                    "description": "Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.\n"
                },
                "precedences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Order of attributes for precedence in identification.Valid values: email, phone*number, username. If Precedence is set, it must contain all values (email, phone*number, username) in specific order\n"
                },
                "protocolBinding": {
                    "type": "string",
                    "description": "The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.\n"
                },
                "provider": {
                    "type": "string",
                    "description": "Defines the custom \u003cspan pulumi-lang-nodejs=\"`smsGateway`\" pulumi-lang-dotnet=\"`SmsGateway`\" pulumi-lang-go=\"`smsGateway`\" pulumi-lang-python=\"`sms_gateway`\" pulumi-lang-yaml=\"`smsGateway`\" pulumi-lang-java=\"`smsGateway`\"\u003e`sms_gateway`\u003c/span\u003e provider.\n"
                },
                "realmFallback": {
                    "type": "boolean",
                    "description": "Allows configuration if connections*realm*fallback flag is enabled for the tenant\n"
                },
                "requestTemplate": {
                    "type": "string",
                    "description": "Template that formats the SAML request.\n"
                },
                "requestTokenUrl": {
                    "type": "string",
                    "description": "URL used to obtain an unauthorized request token.\n"
                },
                "requiresUsername": {
                    "type": "boolean",
                    "description": "Indicates whether the user is required to provide a username in addition to an email address.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Permissions to grant to the connection. Within the Auth0 dashboard these appear under the \"Attributes\" and \"Extended Attributes\" sections. Some examples: \u003cspan pulumi-lang-nodejs=\"`basicProfile`\" pulumi-lang-dotnet=\"`BasicProfile`\" pulumi-lang-go=\"`basicProfile`\" pulumi-lang-python=\"`basic_profile`\" pulumi-lang-yaml=\"`basicProfile`\" pulumi-lang-java=\"`basicProfile`\"\u003e`basic_profile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`extProfile`\" pulumi-lang-dotnet=\"`ExtProfile`\" pulumi-lang-go=\"`extProfile`\" pulumi-lang-python=\"`ext_profile`\" pulumi-lang-yaml=\"`extProfile`\" pulumi-lang-java=\"`extProfile`\"\u003e`ext_profile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`extNestedGroups`\" pulumi-lang-dotnet=\"`ExtNestedGroups`\" pulumi-lang-go=\"`extNestedGroups`\" pulumi-lang-python=\"`ext_nested_groups`\" pulumi-lang-yaml=\"`extNestedGroups`\" pulumi-lang-java=\"`extNestedGroups`\"\u003e`ext_nested_groups`\u003c/span\u003e, etc.\n"
                },
                "scripts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.\n"
                },
                "sessionKey": {
                    "type": "string",
                    "description": "Session Key for storing the request token.\n"
                },
                "setUserRootAttributes": {
                    "type": "string",
                    "description": "Determines whether to sync user profile attributes (\u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`givenName`\" pulumi-lang-dotnet=\"`GivenName`\" pulumi-lang-go=\"`givenName`\" pulumi-lang-python=\"`given_name`\" pulumi-lang-yaml=\"`givenName`\" pulumi-lang-java=\"`givenName`\"\u003e`given_name`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`familyName`\" pulumi-lang-dotnet=\"`FamilyName`\" pulumi-lang-go=\"`familyName`\" pulumi-lang-python=\"`family_name`\" pulumi-lang-yaml=\"`familyName`\" pulumi-lang-java=\"`familyName`\"\u003e`family_name`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nickname`\" pulumi-lang-dotnet=\"`Nickname`\" pulumi-lang-go=\"`nickname`\" pulumi-lang-python=\"`nickname`\" pulumi-lang-yaml=\"`nickname`\" pulumi-lang-java=\"`nickname`\"\u003e`nickname`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`picture`\" pulumi-lang-dotnet=\"`Picture`\" pulumi-lang-go=\"`picture`\" pulumi-lang-python=\"`picture`\" pulumi-lang-yaml=\"`picture`\" pulumi-lang-java=\"`picture`\"\u003e`picture`\u003c/span\u003e) at each login or only on the first login. Options include: \u003cspan pulumi-lang-nodejs=\"`onEachLogin`\" pulumi-lang-dotnet=\"`OnEachLogin`\" pulumi-lang-go=\"`onEachLogin`\" pulumi-lang-python=\"`on_each_login`\" pulumi-lang-yaml=\"`onEachLogin`\" pulumi-lang-java=\"`onEachLogin`\"\u003e`on_each_login`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`onFirstLogin`\" pulumi-lang-dotnet=\"`OnFirstLogin`\" pulumi-lang-go=\"`onFirstLogin`\" pulumi-lang-python=\"`on_first_login`\" pulumi-lang-yaml=\"`onFirstLogin`\" pulumi-lang-java=\"`onFirstLogin`\"\u003e`on_first_login`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`neverOnLogin`\" pulumi-lang-dotnet=\"`NeverOnLogin`\" pulumi-lang-go=\"`neverOnLogin`\" pulumi-lang-python=\"`never_on_login`\" pulumi-lang-yaml=\"`neverOnLogin`\" pulumi-lang-java=\"`neverOnLogin`\"\u003e`never_on_login`\u003c/span\u003e. Default value: \u003cspan pulumi-lang-nodejs=\"`onEachLogin`\" pulumi-lang-dotnet=\"`OnEachLogin`\" pulumi-lang-go=\"`onEachLogin`\" pulumi-lang-python=\"`on_each_login`\" pulumi-lang-yaml=\"`onEachLogin`\" pulumi-lang-java=\"`onEachLogin`\"\u003e`on_each_login`\u003c/span\u003e.\n"
                },
                "shouldTrustEmailVerifiedConnection": {
                    "type": "string",
                    "description": "Choose how Auth0 sets the\u003cspan pulumi-lang-nodejs=\" emailVerified \" pulumi-lang-dotnet=\" EmailVerified \" pulumi-lang-go=\" emailVerified \" pulumi-lang-python=\" email_verified \" pulumi-lang-yaml=\" emailVerified \" pulumi-lang-java=\" emailVerified \"\u003e email_verified \u003c/span\u003efield in the user profile.\n"
                },
                "signInEndpoint": {
                    "type": "string",
                    "description": "SAML single login URL for the connection.\n"
                },
                "signOutEndpoint": {
                    "type": "string",
                    "description": "SAML single logout URL for the connection.\n"
                },
                "signSamlRequest": {
                    "type": "boolean",
                    "description": "When enabled, the SAML authentication request will be signed.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Sign Request Algorithm.\n"
                },
                "signatureMethod": {
                    "type": "string",
                    "description": "Signature method used to sign the request\n"
                },
                "signingCert": {
                    "type": "string",
                    "description": "X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.\n"
                },
                "signingKey": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsSigningKey:ConnectionOptionsSigningKey",
                    "description": "The key used to sign requests in the connection. Uses the \u003cspan pulumi-lang-nodejs=\"`key`\" pulumi-lang-dotnet=\"`Key`\" pulumi-lang-go=\"`key`\" pulumi-lang-python=\"`key`\" pulumi-lang-yaml=\"`key`\" pulumi-lang-java=\"`key`\"\u003e`key`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`cert`\" pulumi-lang-dotnet=\"`Cert`\" pulumi-lang-go=\"`cert`\" pulumi-lang-python=\"`cert`\" pulumi-lang-yaml=\"`cert`\" pulumi-lang-java=\"`cert`\"\u003e`cert`\u003c/span\u003e properties to provide the private key and certificate respectively.\n"
                },
                "strategyVersion": {
                    "type": "integer",
                    "description": "Version 1 is deprecated, use version 2.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Subject line of the email.\n"
                },
                "syntax": {
                    "type": "string",
                    "description": "Syntax of the template body.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Apple Team ID.\n"
                },
                "template": {
                    "type": "string",
                    "description": "Body of the template.\n"
                },
                "tenantDomain": {
                    "type": "string",
                    "description": "Tenant domain name.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "Token endpoint.\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "Specifies the authentication method for the token endpoint. (Okta/OIDC Connections)\n"
                },
                "tokenEndpointAuthSigningAlg": {
                    "type": "string",
                    "description": "Specifies the signing algorithm for the token endpoint. (Okta/OIDC Connections)\n"
                },
                "totp": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsTotp:ConnectionOptionsTotp",
                    "description": "Configuration options for one-time passwords.\n"
                },
                "twilioSid": {
                    "type": "string",
                    "description": "SID for your Twilio account.\n"
                },
                "twilioToken": {
                    "type": "string",
                    "description": "AuthToken for your Twilio account.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "Value can be \u003cspan pulumi-lang-nodejs=\"`backChannel`\" pulumi-lang-dotnet=\"`BackChannel`\" pulumi-lang-go=\"`backChannel`\" pulumi-lang-python=\"`back_channel`\" pulumi-lang-yaml=\"`backChannel`\" pulumi-lang-java=\"`backChannel`\"\u003e`back_channel`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`frontChannel`\" pulumi-lang-dotnet=\"`FrontChannel`\" pulumi-lang-go=\"`frontChannel`\" pulumi-lang-python=\"`front_channel`\" pulumi-lang-yaml=\"`frontChannel`\" pulumi-lang-java=\"`frontChannel`\"\u003e`front_channel`\u003c/span\u003e. Front Channel will use OIDC protocol with `response_mode=form_post` and `response_type=id_token`. Back Channel will use `response_type=code`.\n"
                },
                "upstreamParams": {
                    "type": "string",
                    "description": "You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.\n"
                },
                "useCertAuth": {
                    "type": "boolean",
                    "description": "Indicates whether to use cert auth or not.\n"
                },
                "useKerberos": {
                    "type": "boolean",
                    "description": "Indicates whether to use Kerberos or not.\n"
                },
                "useWsfed": {
                    "type": "boolean",
                    "description": "Whether to use WS-Fed.\n"
                },
                "userAuthorizationUrl": {
                    "type": "string",
                    "description": "URL used to obtain user authorization.\n"
                },
                "userIdAttribute": {
                    "type": "string",
                    "description": "Attribute in the token that will be mapped to the\u003cspan pulumi-lang-nodejs=\" userId \" pulumi-lang-dotnet=\" UserId \" pulumi-lang-go=\" userId \" pulumi-lang-python=\" user_id \" pulumi-lang-yaml=\" userId \" pulumi-lang-java=\" userId \"\u003e user_id \u003c/span\u003eproperty in Auth0.\n"
                },
                "userinfoEndpoint": {
                    "type": "string",
                    "description": "User info endpoint.\n"
                },
                "validation": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsValidation:ConnectionOptionsValidation",
                    "description": "Validation of the minimum and maximum values allowed for a user to have as username.\n"
                },
                "waadCommonEndpoint": {
                    "type": "boolean",
                    "description": "Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.\n"
                },
                "waadProtocol": {
                    "type": "string",
                    "description": "Protocol to use.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedAudiences",
                        "attributeMap",
                        "authenticationMethods",
                        "authorizationEndpoint",
                        "connectionSettings",
                        "domainAliases",
                        "ips",
                        "issuer",
                        "jwksUri",
                        "mapUserIdToId",
                        "mfa",
                        "nonPersistentAttrs",
                        "passkeyOptions",
                        "passwordComplexityOptions",
                        "passwordDictionary",
                        "passwordHistories",
                        "passwordNoPersonalInfo",
                        "passwordPolicy",
                        "scopes",
                        "setUserRootAttributes",
                        "signInEndpoint",
                        "signOutEndpoint",
                        "signingCert",
                        "strategyVersion",
                        "tokenEndpoint",
                        "userinfoEndpoint"
                    ]
                }
            }
        },
        "auth0:index/ConnectionOptionsAttribute:ConnectionOptionsAttribute": {
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributeEmail:ConnectionOptionsAttributeEmail"
                    },
                    "description": "Connection Options for Email Attribute\n"
                },
                "phoneNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributePhoneNumber:ConnectionOptionsAttributePhoneNumber"
                    },
                    "description": "Connection Options for Phone Number Attribute\n"
                },
                "usernames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributeUsername:ConnectionOptionsAttributeUsername"
                    },
                    "description": "Connection Options for User Name Attribute\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsAttributeEmail:ConnectionOptionsAttributeEmail": {
            "properties": {
                "identifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributeEmailIdentifier:ConnectionOptionsAttributeEmailIdentifier"
                    },
                    "description": "Connection Options Email Attribute Identifier\n"
                },
                "profileRequired": {
                    "type": "boolean",
                    "description": "Defines whether Profile is required\n"
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributeEmailSignup:ConnectionOptionsAttributeEmailSignup"
                    },
                    "description": "Defines signup settings for Email attribute\n"
                },
                "unique": {
                    "type": "boolean",
                    "description": "If set to false, it allow multiple accounts with the same email address\n"
                },
                "verificationMethod": {
                    "type": "string",
                    "description": "Defines whether whether user will receive a link or an OTP during user signup for email verification and password reset for email verification\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "verificationMethod"
                    ]
                }
            }
        },
        "auth0:index/ConnectionOptionsAttributeEmailIdentifier:ConnectionOptionsAttributeEmailIdentifier": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defines whether email attribute is active as an identifier\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsAttributeEmailSignup:ConnectionOptionsAttributeEmailSignup": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Defines signup status for Email Attribute\n"
                },
                "verifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributeEmailSignupVerification:ConnectionOptionsAttributeEmailSignupVerification"
                    },
                    "description": "Defines settings for Verification under Email attribute\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsAttributeEmailSignupVerification:ConnectionOptionsAttributeEmailSignupVerification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defines verification settings for signup attribute\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsAttributeMap:ConnectionOptionsAttributeMap": {
            "properties": {
                "attributes": {
                    "type": "string",
                    "description": "This property is an object containing mapping information that allows Auth0 to interpret incoming claims from the IdP. Mapping information must be provided as key/value pairs.\n"
                },
                "mappingMode": {
                    "type": "string",
                    "description": "Method used to map incoming claims. Possible values: \u003cspan pulumi-lang-nodejs=\"`useMap`\" pulumi-lang-dotnet=\"`UseMap`\" pulumi-lang-go=\"`useMap`\" pulumi-lang-python=\"`use_map`\" pulumi-lang-yaml=\"`useMap`\" pulumi-lang-java=\"`useMap`\"\u003e`use_map`\u003c/span\u003e (Okta or OIDC), \u003cspan pulumi-lang-nodejs=\"`bindAll`\" pulumi-lang-dotnet=\"`BindAll`\" pulumi-lang-go=\"`bindAll`\" pulumi-lang-python=\"`bind_all`\" pulumi-lang-yaml=\"`bindAll`\" pulumi-lang-java=\"`bindAll`\"\u003e`bind_all`\u003c/span\u003e (OIDC) or \u003cspan pulumi-lang-nodejs=\"`basicProfile`\" pulumi-lang-dotnet=\"`BasicProfile`\" pulumi-lang-go=\"`basicProfile`\" pulumi-lang-python=\"`basic_profile`\" pulumi-lang-yaml=\"`basicProfile`\" pulumi-lang-java=\"`basicProfile`\"\u003e`basic_profile`\u003c/span\u003e (Okta).\n"
                },
                "userinfoScope": {
                    "type": "string",
                    "description": "This property defines the scopes that Auth0 sends to the IdP’s UserInfo endpoint when requested.\n"
                }
            },
            "type": "object",
            "required": [
                "mappingMode"
            ]
        },
        "auth0:index/ConnectionOptionsAttributePhoneNumber:ConnectionOptionsAttributePhoneNumber": {
            "properties": {
                "identifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributePhoneNumberIdentifier:ConnectionOptionsAttributePhoneNumberIdentifier"
                    },
                    "description": "Connection Options Phone Number Attribute Identifier\n"
                },
                "profileRequired": {
                    "type": "boolean",
                    "description": "Defines whether Profile is required\n"
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributePhoneNumberSignup:ConnectionOptionsAttributePhoneNumberSignup"
                    },
                    "description": "Defines signup settings for Phone Number attribute\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsAttributePhoneNumberIdentifier:ConnectionOptionsAttributePhoneNumberIdentifier": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defines whether Phone Number attribute is active as an identifier\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsAttributePhoneNumberSignup:ConnectionOptionsAttributePhoneNumberSignup": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Defines status of signup for Phone Number attribute\n"
                },
                "verifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributePhoneNumberSignupVerification:ConnectionOptionsAttributePhoneNumberSignupVerification"
                    },
                    "description": "Defines verification settings for Phone Number attribute\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsAttributePhoneNumberSignupVerification:ConnectionOptionsAttributePhoneNumberSignupVerification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defines verification settings for Phone Number attribute\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsAttributeUsername:ConnectionOptionsAttributeUsername": {
            "properties": {
                "identifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributeUsernameIdentifier:ConnectionOptionsAttributeUsernameIdentifier"
                    },
                    "description": "Connection options for User Name Attribute Identifier\n"
                },
                "profileRequired": {
                    "type": "boolean",
                    "description": "Defines whether Profile is required\n"
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributeUsernameSignup:ConnectionOptionsAttributeUsernameSignup"
                    },
                    "description": "Defines signup settings for User Name attribute\n"
                },
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributeUsernameValidation:ConnectionOptionsAttributeUsernameValidation"
                    },
                    "description": "Defines validation settings for User Name attribute\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "validations"
                    ]
                }
            }
        },
        "auth0:index/ConnectionOptionsAttributeUsernameIdentifier:ConnectionOptionsAttributeUsernameIdentifier": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defines whether UserName attribute is active as an identifier\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsAttributeUsernameSignup:ConnectionOptionsAttributeUsernameSignup": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Defines whether User Name attribute is active as an identifier\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsAttributeUsernameValidation:ConnectionOptionsAttributeUsernameValidation": {
            "properties": {
                "allowedTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsAttributeUsernameValidationAllowedType:ConnectionOptionsAttributeUsernameValidationAllowedType"
                    },
                    "description": "Defines allowed types for for UserName attribute\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "Defines Max Length for User Name attribute\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "Defines Min Length for User Name attribute\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowedTypes",
                        "maxLength",
                        "minLength"
                    ]
                }
            }
        },
        "auth0:index/ConnectionOptionsAttributeUsernameValidationAllowedType:ConnectionOptionsAttributeUsernameValidationAllowedType": {
            "properties": {
                "email": {
                    "type": "boolean",
                    "description": "One of the allowed types for UserName signup attribute\n"
                },
                "phoneNumber": {
                    "type": "boolean",
                    "description": "One of the allowed types for UserName signup attribute\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "email",
                        "phoneNumber"
                    ]
                }
            }
        },
        "auth0:index/ConnectionOptionsAuthenticationMethod:ConnectionOptionsAuthenticationMethod": {
            "properties": {
                "passkey": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsAuthenticationMethodPasskey:ConnectionOptionsAuthenticationMethodPasskey",
                    "description": "Configures passkey authentication\n"
                },
                "password": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsAuthenticationMethodPassword:ConnectionOptionsAuthenticationMethodPassword",
                    "description": "Configures password authentication\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "passkey",
                        "password"
                    ]
                }
            }
        },
        "auth0:index/ConnectionOptionsAuthenticationMethodPasskey:ConnectionOptionsAuthenticationMethodPasskey": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables passkey authentication\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "auth0:index/ConnectionOptionsAuthenticationMethodPassword:ConnectionOptionsAuthenticationMethodPassword": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables password authentication\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "auth0:index/ConnectionOptionsConnectionSettings:ConnectionOptionsConnectionSettings": {
            "properties": {
                "pkce": {
                    "type": "string",
                    "description": "PKCE configuration. Possible values: \u003cspan pulumi-lang-nodejs=\"`auto`\" pulumi-lang-dotnet=\"`Auto`\" pulumi-lang-go=\"`auto`\" pulumi-lang-python=\"`auto`\" pulumi-lang-yaml=\"`auto`\" pulumi-lang-java=\"`auto`\"\u003e`auto`\u003c/span\u003e (uses the strongest algorithm available), `S256` (uses the SHA-256 algorithm), \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e (uses plaintext as described in the PKCE specification) or \u003cspan pulumi-lang-nodejs=\"`disabled`\" pulumi-lang-dotnet=\"`Disabled`\" pulumi-lang-go=\"`disabled`\" pulumi-lang-python=\"`disabled`\" pulumi-lang-yaml=\"`disabled`\" pulumi-lang-java=\"`disabled`\"\u003e`disabled`\u003c/span\u003e (disables support for PKCE).\n"
                }
            },
            "type": "object",
            "required": [
                "pkce"
            ]
        },
        "auth0:index/ConnectionOptionsCustomHeader:ConnectionOptionsCustomHeader": {
            "properties": {
                "header": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "header",
                "value"
            ]
        },
        "auth0:index/ConnectionOptionsDecryptionKey:ConnectionOptionsDecryptionKey": {
            "properties": {
                "cert": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "auth0:index/ConnectionOptionsGatewayAuthentication:ConnectionOptionsGatewayAuthentication": {
            "properties": {
                "audience": {
                    "type": "string",
                    "description": "Audience claim for the HS256 token sent to \u003cspan pulumi-lang-nodejs=\"`gatewayUrl`\" pulumi-lang-dotnet=\"`GatewayUrl`\" pulumi-lang-go=\"`gatewayUrl`\" pulumi-lang-python=\"`gateway_url`\" pulumi-lang-yaml=\"`gatewayUrl`\" pulumi-lang-java=\"`gatewayUrl`\"\u003e`gateway_url`\u003c/span\u003e.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Authentication method (default is \u003cspan pulumi-lang-nodejs=\"`bearer`\" pulumi-lang-dotnet=\"`Bearer`\" pulumi-lang-go=\"`bearer`\" pulumi-lang-python=\"`bearer`\" pulumi-lang-yaml=\"`bearer`\" pulumi-lang-java=\"`bearer`\"\u003e`bearer`\u003c/span\u003e token).\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret used to sign the HS256 token sent to \u003cspan pulumi-lang-nodejs=\"`gatewayUrl`\" pulumi-lang-dotnet=\"`GatewayUrl`\" pulumi-lang-go=\"`gatewayUrl`\" pulumi-lang-python=\"`gateway_url`\" pulumi-lang-yaml=\"`gatewayUrl`\" pulumi-lang-java=\"`gatewayUrl`\"\u003e`gateway_url`\u003c/span\u003e.\n",
                    "secret": true
                },
                "secretBase64Encoded": {
                    "type": "boolean",
                    "description": "Specifies whether or not the secret is Base64-encoded.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Subject claim for the HS256 token sent to \u003cspan pulumi-lang-nodejs=\"`gatewayUrl`\" pulumi-lang-dotnet=\"`GatewayUrl`\" pulumi-lang-go=\"`gatewayUrl`\" pulumi-lang-python=\"`gateway_url`\" pulumi-lang-yaml=\"`gatewayUrl`\" pulumi-lang-java=\"`gatewayUrl`\"\u003e`gateway_url`\u003c/span\u003e.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsIdpInitiated:ConnectionOptionsIdpInitiated": {
            "properties": {
                "clientAuthorizeQuery": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientProtocol": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsMfa:ConnectionOptionsMfa": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Indicates whether multifactor authentication is enabled for this connection.\n"
                },
                "returnEnrollSettings": {
                    "type": "boolean",
                    "description": "Indicates whether multifactor authentication enrollment settings will be returned.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsPasskeyOptions:ConnectionOptionsPasskeyOptions": {
            "properties": {
                "challengeUi": {
                    "type": "string",
                    "description": "Controls the UI used to challenge the user for their passkey\n"
                },
                "localEnrollmentEnabled": {
                    "type": "boolean",
                    "description": "Enables or disables enrollment prompt for local passkey when user authenticates using a cross-device passkey for the connection\n"
                },
                "progressiveEnrollmentEnabled": {
                    "type": "boolean",
                    "description": "Enables or disables progressive enrollment of passkeys for the connection\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "challengeUi",
                        "localEnrollmentEnabled",
                        "progressiveEnrollmentEnabled"
                    ]
                }
            }
        },
        "auth0:index/ConnectionOptionsPasswordComplexityOptions:ConnectionOptionsPasswordComplexityOptions": {
            "properties": {
                "minLength": {
                    "type": "integer",
                    "description": "Minimum number of characters allowed in passwords.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsPasswordDictionary:ConnectionOptionsPasswordDictionary": {
            "properties": {
                "dictionaries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Indicates whether the password dictionary check is enabled for this connection.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsPasswordHistory:ConnectionOptionsPasswordHistory": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsPasswordNoPersonalInfo:ConnectionOptionsPasswordNoPersonalInfo": {
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsSigningKey:ConnectionOptionsSigningKey": {
            "properties": {
                "cert": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ]
        },
        "auth0:index/ConnectionOptionsTotp:ConnectionOptionsTotp": {
            "properties": {
                "length": {
                    "type": "integer",
                    "description": "Length of the one-time password.\n"
                },
                "timeStep": {
                    "type": "integer",
                    "description": "Seconds between allowed generation of new passwords.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsValidation:ConnectionOptionsValidation": {
            "properties": {
                "username": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsValidationUsername:ConnectionOptionsValidationUsername",
                    "description": "Specifies the \u003cspan pulumi-lang-nodejs=\"`min`\" pulumi-lang-dotnet=\"`Min`\" pulumi-lang-go=\"`min`\" pulumi-lang-python=\"`min`\" pulumi-lang-yaml=\"`min`\" pulumi-lang-java=\"`min`\"\u003e`min`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`max`\" pulumi-lang-dotnet=\"`Max`\" pulumi-lang-go=\"`max`\" pulumi-lang-python=\"`max`\" pulumi-lang-yaml=\"`max`\" pulumi-lang-java=\"`max`\"\u003e`max`\u003c/span\u003e values of username length.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsValidationUsername:ConnectionOptionsValidationUsername": {
            "properties": {
                "max": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionScimConfigurationMapping:ConnectionScimConfigurationMapping": {
            "properties": {
                "auth0": {
                    "type": "string",
                    "description": "The field location in the Auth0 schema.\n"
                },
                "scim": {
                    "type": "string",
                    "description": "The field location in the SCIM schema.\n"
                }
            },
            "type": "object",
            "required": [
                "auth0",
                "scim"
            ]
        },
        "auth0:index/CustomDomainCertificate:CustomDomainCertificate": {
            "properties": {
                "certificateAuthority": {
                    "type": "string",
                    "description": "Name of the certificate authority that issued the certificate.\n"
                },
                "errorMsg": {
                    "type": "string",
                    "description": "Contains the error message if the provisioning process fails.\n"
                },
                "renewsBefore": {
                    "type": "string",
                    "description": "Specifies the date by which the certificate should be renewed.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the current state of the certificate provisioning process.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "certificateAuthority",
                        "errorMsg",
                        "renewsBefore",
                        "status"
                    ]
                }
            }
        },
        "auth0:index/CustomDomainVerification:CustomDomainVerification": {
            "properties": {
                "errorMsg": {
                    "type": "string",
                    "description": "Contains error message, if any, from the last DNS verification check.\n"
                },
                "lastVerifiedAt": {
                    "type": "string",
                    "description": "Indicates the last time the domain was successfully verified.\n"
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Defines the list of domain verification methods used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Represents the current status of the domain verification process.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "errorMsg",
                        "lastVerifiedAt",
                        "methods",
                        "status"
                    ]
                }
            }
        },
        "auth0:index/EmailProviderCredentials:EmailProviderCredentials": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "AWS Access Key ID. Used only for AWS.\n",
                    "secret": true
                },
                "apiKey": {
                    "type": "string",
                    "description": "API Key for your email service. Will always be encrypted in our database.\n",
                    "secret": true
                },
                "azureCsConnectionString": {
                    "type": "string",
                    "description": "Azure Communication Services Connection String.\n",
                    "secret": true
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name.\n"
                },
                "ms365ClientId": {
                    "type": "string",
                    "description": "Microsoft 365 Client ID.\n",
                    "secret": true
                },
                "ms365ClientSecret": {
                    "type": "string",
                    "description": "Microsoft 365 Client Secret.\n",
                    "secret": true
                },
                "ms365TenantId": {
                    "type": "string",
                    "description": "Microsoft 365 Tenant ID.\n",
                    "secret": true
                },
                "region": {
                    "type": "string",
                    "description": "Default region. Used only for AWS, Mailgun, and SparkPost.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "AWS Secret Key. Will always be encrypted in our database. Used only for AWS.\n",
                    "secret": true
                },
                "smtpHost": {
                    "type": "string",
                    "description": "Hostname or IP address of your SMTP server. Used only for SMTP.\n"
                },
                "smtpPass": {
                    "type": "string",
                    "description": "SMTP password. Used only for SMTP.\n",
                    "secret": true
                },
                "smtpPort": {
                    "type": "integer",
                    "description": "Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.\n"
                },
                "smtpUser": {
                    "type": "string",
                    "description": "SMTP username. Used only for SMTP.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/EmailProviderSettings:EmailProviderSettings": {
            "properties": {
                "headers": {
                    "$ref": "#/types/auth0:index/EmailProviderSettingsHeaders:EmailProviderSettingsHeaders",
                    "description": "Headers settings for the \u003cspan pulumi-lang-nodejs=\"`smtp`\" pulumi-lang-dotnet=\"`Smtp`\" pulumi-lang-go=\"`smtp`\" pulumi-lang-python=\"`smtp`\" pulumi-lang-yaml=\"`smtp`\" pulumi-lang-java=\"`smtp`\"\u003e`smtp`\u003c/span\u003e email provider.\n"
                },
                "message": {
                    "$ref": "#/types/auth0:index/EmailProviderSettingsMessage:EmailProviderSettingsMessage",
                    "description": "Message settings for the \u003cspan pulumi-lang-nodejs=\"`mandrill`\" pulumi-lang-dotnet=\"`Mandrill`\" pulumi-lang-go=\"`mandrill`\" pulumi-lang-python=\"`mandrill`\" pulumi-lang-yaml=\"`mandrill`\" pulumi-lang-java=\"`mandrill`\"\u003e`mandrill`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`ses`\" pulumi-lang-dotnet=\"`Ses`\" pulumi-lang-go=\"`ses`\" pulumi-lang-python=\"`ses`\" pulumi-lang-yaml=\"`ses`\" pulumi-lang-java=\"`ses`\"\u003e`ses`\u003c/span\u003e email provider.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/EmailProviderSettingsHeaders:EmailProviderSettingsHeaders": {
            "properties": {
                "xMcViewContentLink": {
                    "type": "string",
                    "description": "Disable or enable the default View Content Link for sensitive emails.\n"
                },
                "xSesConfigurationSet": {
                    "type": "string",
                    "description": "SES Configuration set to include when sending emails.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/EmailProviderSettingsMessage:EmailProviderSettingsMessage": {
            "properties": {
                "configurationSetName": {
                    "type": "string",
                    "description": "Setting for the \u003cspan pulumi-lang-nodejs=\"`ses`\" pulumi-lang-dotnet=\"`Ses`\" pulumi-lang-go=\"`ses`\" pulumi-lang-python=\"`ses`\" pulumi-lang-yaml=\"`ses`\" pulumi-lang-java=\"`ses`\"\u003e`ses`\u003c/span\u003e email provider. The name of the configuration set to apply to the sent emails.\n"
                },
                "viewContentLink": {
                    "type": "boolean",
                    "description": "Setting for the \u003cspan pulumi-lang-nodejs=\"`mandrill`\" pulumi-lang-dotnet=\"`Mandrill`\" pulumi-lang-go=\"`mandrill`\" pulumi-lang-python=\"`mandrill`\" pulumi-lang-yaml=\"`mandrill`\" pulumi-lang-java=\"`mandrill`\"\u003e`mandrill`\u003c/span\u003e email provider. Set to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e to see the content of individual emails sent to users.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/EncryptionKeyManagerCustomerProvidedRootKey:EncryptionKeyManagerCustomerProvidedRootKey": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the customer provided root key was created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "The key ID of the customer provided root key.\n"
                },
                "parentKeyId": {
                    "type": "string",
                    "description": "The key ID of the parent wrapping key.\n"
                },
                "publicWrappingKey": {
                    "type": "string",
                    "description": "The public wrapping key in PEM format.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the encryption key. One of `pre-activation`, \u003cspan pulumi-lang-nodejs=\"`active`\" pulumi-lang-dotnet=\"`Active`\" pulumi-lang-go=\"`active`\" pulumi-lang-python=\"`active`\" pulumi-lang-yaml=\"`active`\" pulumi-lang-java=\"`active`\"\u003e`active`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`deactivated`\" pulumi-lang-dotnet=\"`Deactivated`\" pulumi-lang-go=\"`deactivated`\" pulumi-lang-python=\"`deactivated`\" pulumi-lang-yaml=\"`deactivated`\" pulumi-lang-java=\"`deactivated`\"\u003e`deactivated`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`destroyed`\" pulumi-lang-dotnet=\"`Destroyed`\" pulumi-lang-go=\"`destroyed`\" pulumi-lang-python=\"`destroyed`\" pulumi-lang-yaml=\"`destroyed`\" pulumi-lang-java=\"`destroyed`\"\u003e`destroyed`\u003c/span\u003e.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the customer provided root key. Should be `customer-provided-root-key`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the customer provided root key was updated.\n"
                },
                "wrappedKey": {
                    "type": "string",
                    "description": "The base64-encoded customer provided root key, wrapped using the \u003cspan pulumi-lang-nodejs=\"`publicWrappingKey`\" pulumi-lang-dotnet=\"`PublicWrappingKey`\" pulumi-lang-go=\"`publicWrappingKey`\" pulumi-lang-python=\"`public_wrapping_key`\" pulumi-lang-yaml=\"`publicWrappingKey`\" pulumi-lang-java=\"`publicWrappingKey`\"\u003e`public_wrapping_key`\u003c/span\u003e. This can be removed after the wrapped key has been applied.\n"
                },
                "wrappingAlgorithm": {
                    "type": "string",
                    "description": "The algorithm that should be used to wrap the customer provided root key. Should be `CKM_RSA_AES_KEY_WRAP`.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "keyId",
                        "parentKeyId",
                        "publicWrappingKey",
                        "state",
                        "type",
                        "updatedAt",
                        "wrappingAlgorithm"
                    ]
                }
            }
        },
        "auth0:index/EncryptionKeyManagerEncryptionKey:EncryptionKeyManagerEncryptionKey": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the encryption key was created.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "The key ID of the encryption key.\n"
                },
                "parentKeyId": {
                    "type": "string",
                    "description": "The key ID of the parent wrapping key.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the encryption key. One of `pre-activation`, \u003cspan pulumi-lang-nodejs=\"`active`\" pulumi-lang-dotnet=\"`Active`\" pulumi-lang-go=\"`active`\" pulumi-lang-python=\"`active`\" pulumi-lang-yaml=\"`active`\" pulumi-lang-java=\"`active`\"\u003e`active`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`deactivated`\" pulumi-lang-dotnet=\"`Deactivated`\" pulumi-lang-go=\"`deactivated`\" pulumi-lang-python=\"`deactivated`\" pulumi-lang-yaml=\"`deactivated`\" pulumi-lang-java=\"`deactivated`\"\u003e`deactivated`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`destroyed`\" pulumi-lang-dotnet=\"`Destroyed`\" pulumi-lang-go=\"`destroyed`\" pulumi-lang-python=\"`destroyed`\" pulumi-lang-yaml=\"`destroyed`\" pulumi-lang-java=\"`destroyed`\"\u003e`destroyed`\u003c/span\u003e.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the encryption key. One of `customer-provided-root-key`, `environment-root-key`, or `tenant-master-key`.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the encryption key was updated.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "createdAt",
                        "keyId",
                        "parentKeyId",
                        "state",
                        "type",
                        "updatedAt"
                    ]
                }
            }
        },
        "auth0:index/EventStreamEventbridgeConfiguration:EventStreamEventbridgeConfiguration": {
            "properties": {
                "awsAccountId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "awsPartnerEventSource": {
                    "type": "string"
                },
                "awsRegion": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "awsAccountId",
                "awsRegion"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "awsAccountId",
                        "awsPartnerEventSource",
                        "awsRegion"
                    ]
                }
            }
        },
        "auth0:index/EventStreamWebhookConfiguration:EventStreamWebhookConfiguration": {
            "properties": {
                "webhookAuthorization": {
                    "$ref": "#/types/auth0:index/EventStreamWebhookConfigurationWebhookAuthorization:EventStreamWebhookConfigurationWebhookAuthorization",
                    "description": "Authorization details for the webhook endpoint. Supports \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e authentication using \u003cspan pulumi-lang-nodejs=\"`username`\" pulumi-lang-dotnet=\"`Username`\" pulumi-lang-go=\"`username`\" pulumi-lang-python=\"`username`\" pulumi-lang-yaml=\"`username`\" pulumi-lang-java=\"`username`\"\u003e`username`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`password`\" pulumi-lang-dotnet=\"`Password`\" pulumi-lang-go=\"`password`\" pulumi-lang-python=\"`password`\" pulumi-lang-yaml=\"`password`\" pulumi-lang-java=\"`password`\"\u003e`password`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`bearer`\" pulumi-lang-dotnet=\"`Bearer`\" pulumi-lang-go=\"`bearer`\" pulumi-lang-python=\"`bearer`\" pulumi-lang-yaml=\"`bearer`\" pulumi-lang-java=\"`bearer`\"\u003e`bearer`\u003c/span\u003e authentication using a \u003cspan pulumi-lang-nodejs=\"`token`\" pulumi-lang-dotnet=\"`Token`\" pulumi-lang-go=\"`token`\" pulumi-lang-python=\"`token`\" pulumi-lang-yaml=\"`token`\" pulumi-lang-java=\"`token`\"\u003e`token`\u003c/span\u003e. The appropriate fields must be set based on the chosen method.\n"
                },
                "webhookEndpoint": {
                    "type": "string",
                    "description": "The HTTPS endpoint that will receive the webhook events. Must be a valid, publicly accessible URL.\n"
                }
            },
            "type": "object",
            "required": [
                "webhookAuthorization",
                "webhookEndpoint"
            ]
        },
        "auth0:index/EventStreamWebhookConfigurationWebhookAuthorization:EventStreamWebhookConfigurationWebhookAuthorization": {
            "properties": {
                "method": {
                    "type": "string",
                    "description": "The authorization method used to secure the webhook endpoint. Can be either \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`bearer`\" pulumi-lang-dotnet=\"`Bearer`\" pulumi-lang-go=\"`bearer`\" pulumi-lang-python=\"`bearer`\" pulumi-lang-yaml=\"`bearer`\" pulumi-lang-java=\"`bearer`\"\u003e`bearer`\u003c/span\u003e.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e authentication. Required when \u003cspan pulumi-lang-nodejs=\"`method`\" pulumi-lang-dotnet=\"`Method`\" pulumi-lang-go=\"`method`\" pulumi-lang-python=\"`method`\" pulumi-lang-yaml=\"`method`\" pulumi-lang-java=\"`method`\"\u003e`method`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e.\n",
                    "secret": true
                },
                "token": {
                    "type": "string",
                    "description": "The token used for \u003cspan pulumi-lang-nodejs=\"`bearer`\" pulumi-lang-dotnet=\"`Bearer`\" pulumi-lang-go=\"`bearer`\" pulumi-lang-python=\"`bearer`\" pulumi-lang-yaml=\"`bearer`\" pulumi-lang-java=\"`bearer`\"\u003e`bearer`\u003c/span\u003e authentication. Required when \u003cspan pulumi-lang-nodejs=\"`method`\" pulumi-lang-dotnet=\"`Method`\" pulumi-lang-go=\"`method`\" pulumi-lang-python=\"`method`\" pulumi-lang-yaml=\"`method`\" pulumi-lang-java=\"`method`\"\u003e`method`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`bearer`\" pulumi-lang-dotnet=\"`Bearer`\" pulumi-lang-go=\"`bearer`\" pulumi-lang-python=\"`bearer`\" pulumi-lang-yaml=\"`bearer`\" pulumi-lang-java=\"`bearer`\"\u003e`bearer`\u003c/span\u003e.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username for \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e authentication. Required when \u003cspan pulumi-lang-nodejs=\"`method`\" pulumi-lang-dotnet=\"`Method`\" pulumi-lang-go=\"`method`\" pulumi-lang-python=\"`method`\" pulumi-lang-yaml=\"`method`\" pulumi-lang-java=\"`method`\"\u003e`method`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "method"
            ]
        },
        "auth0:index/FormLanguage:FormLanguage": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "Default language for the form.\n"
                },
                "primary": {
                    "type": "string",
                    "description": "Primary language for the form.\n"
                }
            },
            "type": "object",
            "required": [
                "primary"
            ]
        },
        "auth0:index/FormMessage:FormMessage": {
            "properties": {
                "custom": {
                    "type": "string",
                    "description": "Custom message for the form. (JSON encoded)\n"
                },
                "errors": {
                    "type": "string",
                    "description": "Error message for the form. (JSON encoded)\n"
                }
            },
            "type": "object"
        },
        "auth0:index/GuardianDuo:GuardianDuo": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether Duo MFA is enabled.\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Duo API Hostname, see the Duo documentation for more details on Duo setup.\n"
                },
                "integrationKey": {
                    "type": "string",
                    "description": "Duo client ID, see the Duo documentation for more details on Duo setup.\n"
                },
                "secretKey": {
                    "type": "string",
                    "description": "Duo client secret, see the Duo documentation for more details on Duo setup.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "auth0:index/GuardianPhone:GuardianPhone": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether Phone MFA is enabled.\n"
                },
                "messageTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Message types to use, array of \u003cspan pulumi-lang-nodejs=\"`sms`\" pulumi-lang-dotnet=\"`Sms`\" pulumi-lang-go=\"`sms`\" pulumi-lang-python=\"`sms`\" pulumi-lang-yaml=\"`sms`\" pulumi-lang-java=\"`sms`\"\u003e`sms`\u003c/span\u003e and/or \u003cspan pulumi-lang-nodejs=\"`voice`\" pulumi-lang-dotnet=\"`Voice`\" pulumi-lang-go=\"`voice`\" pulumi-lang-python=\"`voice`\" pulumi-lang-yaml=\"`voice`\" pulumi-lang-java=\"`voice`\"\u003e`voice`\u003c/span\u003e. Adding both to the array should enable the user to choose.\n"
                },
                "options": {
                    "$ref": "#/types/auth0:index/GuardianPhoneOptions:GuardianPhoneOptions",
                    "description": "Options for the various providers.\n"
                },
                "provider": {
                    "type": "string",
                    "description": "Provider to use, one of \u003cspan pulumi-lang-nodejs=\"`auth0`\" pulumi-lang-dotnet=\"`Auth0`\" pulumi-lang-go=\"`auth0`\" pulumi-lang-python=\"`auth0`\" pulumi-lang-yaml=\"`auth0`\" pulumi-lang-java=\"`auth0`\"\u003e`auth0`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`twilio`\" pulumi-lang-dotnet=\"`Twilio`\" pulumi-lang-go=\"`twilio`\" pulumi-lang-python=\"`twilio`\" pulumi-lang-yaml=\"`twilio`\" pulumi-lang-java=\"`twilio`\"\u003e`twilio`\u003c/span\u003e or `phone-message-hook`. Selecting `phone-message-hook` will require a Phone Message Action to be created before. [Learn how](https://auth0.com/docs/customize/actions/flows-and-triggers/send-phone-message-flow).\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "options"
                    ]
                }
            }
        },
        "auth0:index/GuardianPhoneOptions:GuardianPhoneOptions": {
            "properties": {
                "authToken": {
                    "type": "string",
                    "description": "AuthToken for your Twilio account.\n",
                    "secret": true
                },
                "enrollmentMessage": {
                    "type": "string",
                    "description": "This message will be sent whenever a user enrolls a new device for the first time using MFA. Supports Liquid syntax, see [Auth0 docs](https://auth0.com/docs/customize/customize-sms-or-voice-messages).\n"
                },
                "from": {
                    "type": "string",
                    "description": "Phone number to use as the sender.\n"
                },
                "messagingServiceSid": {
                    "type": "string",
                    "description": "Messaging service SID.\n"
                },
                "sid": {
                    "type": "string",
                    "description": "SID for your Twilio account.\n"
                },
                "verificationMessage": {
                    "type": "string",
                    "description": "This message will be sent whenever a user logs in after the enrollment. Supports Liquid syntax, see [Auth0 docs](https://auth0.com/docs/customize/customize-sms-or-voice-messages).\n"
                }
            },
            "type": "object"
        },
        "auth0:index/GuardianPush:GuardianPush": {
            "properties": {
                "amazonSns": {
                    "$ref": "#/types/auth0:index/GuardianPushAmazonSns:GuardianPushAmazonSns",
                    "description": "Configuration for Amazon SNS.\n"
                },
                "customApp": {
                    "$ref": "#/types/auth0:index/GuardianPushCustomApp:GuardianPushCustomApp",
                    "description": "Configuration for the Guardian Custom App.\n"
                },
                "directApns": {
                    "$ref": "#/types/auth0:index/GuardianPushDirectApns:GuardianPushDirectApns",
                    "description": "Configuration for the Apple Push Notification service (APNs) settings.\n"
                },
                "directFcm": {
                    "$ref": "#/types/auth0:index/GuardianPushDirectFcm:GuardianPushDirectFcm",
                    "description": "Configuration for Firebase Cloud Messaging (FCM) settings.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether Push MFA is enabled.\n"
                },
                "provider": {
                    "type": "string",
                    "description": "Provider to use, one of \u003cspan pulumi-lang-nodejs=\"`direct`\" pulumi-lang-dotnet=\"`Direct`\" pulumi-lang-go=\"`direct`\" pulumi-lang-python=\"`direct`\" pulumi-lang-yaml=\"`direct`\" pulumi-lang-java=\"`direct`\"\u003e`direct`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`guardian`\" pulumi-lang-dotnet=\"`Guardian`\" pulumi-lang-go=\"`guardian`\" pulumi-lang-python=\"`guardian`\" pulumi-lang-yaml=\"`guardian`\" pulumi-lang-java=\"`guardian`\"\u003e`guardian`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sns`\" pulumi-lang-dotnet=\"`Sns`\" pulumi-lang-go=\"`sns`\" pulumi-lang-python=\"`sns`\" pulumi-lang-yaml=\"`sns`\" pulumi-lang-java=\"`sns`\"\u003e`sns`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "amazonSns",
                        "customApp",
                        "directApns",
                        "directFcm",
                        "enabled"
                    ]
                }
            }
        },
        "auth0:index/GuardianPushAmazonSns:GuardianPushAmazonSns": {
            "properties": {
                "awsAccessKeyId": {
                    "type": "string",
                    "description": "Your AWS Access Key ID.\n"
                },
                "awsRegion": {
                    "type": "string",
                    "description": "Your AWS application's region.\n"
                },
                "awsSecretAccessKey": {
                    "type": "string",
                    "description": "Your AWS Secret Access Key.\n",
                    "secret": true
                },
                "snsApnsPlatformApplicationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name for your Apple Push Notification Service.\n"
                },
                "snsGcmPlatformApplicationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name for your Firebase Cloud Messaging Service.\n"
                }
            },
            "type": "object",
            "required": [
                "awsAccessKeyId",
                "awsRegion",
                "awsSecretAccessKey",
                "snsApnsPlatformApplicationArn",
                "snsGcmPlatformApplicationArn"
            ]
        },
        "auth0:index/GuardianPushCustomApp:GuardianPushCustomApp": {
            "properties": {
                "appName": {
                    "type": "string",
                    "description": "Custom Application Name.\n"
                },
                "appleAppLink": {
                    "type": "string",
                    "description": "Apple App Store URL. Must be HTTPS or an empty string.\n"
                },
                "googleAppLink": {
                    "type": "string",
                    "description": "Google Store URL. Must be HTTPS or an empty string.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/GuardianPushDirectApns:GuardianPushDirectApns": {
            "properties": {
                "bundleId": {
                    "type": "string",
                    "description": "The Apple Push Notification service Bundle ID.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the Apple Push Notification service is enabled.\n"
                },
                "p12": {
                    "type": "string",
                    "description": "The base64 encoded certificate in P12 format.\n",
                    "secret": true
                },
                "sandbox": {
                    "type": "boolean",
                    "description": "Set to true to use the sandbox iOS app environment, otherwise set to false to use the production iOS app environment.\n"
                }
            },
            "type": "object",
            "required": [
                "bundleId",
                "p12",
                "sandbox"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bundleId",
                        "enabled",
                        "p12",
                        "sandbox"
                    ]
                }
            }
        },
        "auth0:index/GuardianPushDirectFcm:GuardianPushDirectFcm": {
            "properties": {
                "serverKey": {
                    "type": "string",
                    "description": "The Firebase Cloud Messaging Server Key. For security purposes, we don’t retrieve your existing FCM server key to check for drift.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "serverKey"
            ]
        },
        "auth0:index/GuardianWebauthnPlatform:GuardianWebauthnPlatform": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether WebAuthn with FIDO Device Biometrics MFA is enabled.\n"
                },
                "overrideRelyingParty": {
                    "type": "boolean",
                    "description": "The Relying Party is the domain for which the WebAuthn keys will be issued, set to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e if you are customizing the identifier.\n"
                },
                "relyingPartyIdentifier": {
                    "type": "string",
                    "description": "The Relying Party should be a suffix of the custom domain.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "overrideRelyingParty",
                        "relyingPartyIdentifier"
                    ]
                }
            }
        },
        "auth0:index/GuardianWebauthnRoaming:GuardianWebauthnRoaming": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether WebAuthn with FIDO Security Keys MFA is enabled.\n"
                },
                "overrideRelyingParty": {
                    "type": "boolean",
                    "description": "The Relying Party is the domain for which the WebAuthn keys will be issued, set to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e if you are customizing the identifier.\n"
                },
                "relyingPartyIdentifier": {
                    "type": "string",
                    "description": "The Relying Party should be a suffix of the custom domain.\n"
                },
                "userVerification": {
                    "type": "string",
                    "description": "User verification, one of \u003cspan pulumi-lang-nodejs=\"`discouraged`\" pulumi-lang-dotnet=\"`Discouraged`\" pulumi-lang-go=\"`discouraged`\" pulumi-lang-python=\"`discouraged`\" pulumi-lang-yaml=\"`discouraged`\" pulumi-lang-java=\"`discouraged`\"\u003e`discouraged`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`preferred`\" pulumi-lang-dotnet=\"`Preferred`\" pulumi-lang-go=\"`preferred`\" pulumi-lang-python=\"`preferred`\" pulumi-lang-yaml=\"`preferred`\" pulumi-lang-java=\"`preferred`\"\u003e`preferred`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`required`\" pulumi-lang-dotnet=\"`Required`\" pulumi-lang-go=\"`required`\" pulumi-lang-python=\"`required`\" pulumi-lang-yaml=\"`required`\" pulumi-lang-java=\"`required`\"\u003e`required`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "overrideRelyingParty",
                        "relyingPartyIdentifier",
                        "userVerification"
                    ]
                }
            }
        },
        "auth0:index/LogStreamPiiConfig:LogStreamPiiConfig": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The algorithm to use for PII handling. Currently, only \u003cspan pulumi-lang-nodejs=\"`xxhash`\" pulumi-lang-dotnet=\"`Xxhash`\" pulumi-lang-go=\"`xxhash`\" pulumi-lang-python=\"`xxhash`\" pulumi-lang-yaml=\"`xxhash`\" pulumi-lang-java=\"`xxhash`\"\u003e`xxhash`\u003c/span\u003e is supported.\n"
                },
                "logFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "method": {
                    "type": "string",
                    "description": "The method to use for PII handling. Options are \u003cspan pulumi-lang-nodejs=\"`hash`\" pulumi-lang-dotnet=\"`Hash`\" pulumi-lang-go=\"`hash`\" pulumi-lang-python=\"`hash`\" pulumi-lang-yaml=\"`hash`\" pulumi-lang-java=\"`hash`\"\u003e`hash`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`mask`\" pulumi-lang-dotnet=\"`Mask`\" pulumi-lang-go=\"`mask`\" pulumi-lang-python=\"`mask`\" pulumi-lang-yaml=\"`mask`\" pulumi-lang-java=\"`mask`\"\u003e`mask`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "logFields"
            ]
        },
        "auth0:index/LogStreamSink:LogStreamSink": {
            "properties": {
                "awsAccountId": {
                    "type": "string",
                    "description": "The AWS Account ID.\n",
                    "willReplaceOnChanges": true
                },
                "awsPartnerEventSource": {
                    "type": "string",
                    "description": "Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS, so this should be an output attribute.\n"
                },
                "awsRegion": {
                    "type": "string",
                    "description": "The region in which the EventBridge event source will be created. Possible values: `ap-east-1`, `ap-northeast-1`, `ap-northeast-2`, `ap-northeast-3`, `ap-south-1`, `ap-southeast-1`, `ap-southeast-2`, `ca-central-1`, `cn-north-1`, `cn-northwest-1`, `eu-central-1`, `eu-north-1`, `eu-west-1`, `eu-west-2`, `eu-west-3`, `me-south-1`, `sa-east-1`, `us-gov-east-1`, `us-gov-west-1`, `us-east-1`, `us-east-2`, `us-west-1`, `us-west-2`.\n",
                    "willReplaceOnChanges": true
                },
                "azurePartnerTopic": {
                    "type": "string",
                    "description": "Name of the Partner Topic to be used with Azure. Generally should not be specified.\n"
                },
                "azureRegion": {
                    "type": "string",
                    "description": "The Azure region code. Possible values: \u003cspan pulumi-lang-nodejs=\"`australiacentral`\" pulumi-lang-dotnet=\"`Australiacentral`\" pulumi-lang-go=\"`australiacentral`\" pulumi-lang-python=\"`australiacentral`\" pulumi-lang-yaml=\"`australiacentral`\" pulumi-lang-java=\"`australiacentral`\"\u003e`australiacentral`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`australiaeast`\" pulumi-lang-dotnet=\"`Australiaeast`\" pulumi-lang-go=\"`australiaeast`\" pulumi-lang-python=\"`australiaeast`\" pulumi-lang-yaml=\"`australiaeast`\" pulumi-lang-java=\"`australiaeast`\"\u003e`australiaeast`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`australiasoutheast`\" pulumi-lang-dotnet=\"`Australiasoutheast`\" pulumi-lang-go=\"`australiasoutheast`\" pulumi-lang-python=\"`australiasoutheast`\" pulumi-lang-yaml=\"`australiasoutheast`\" pulumi-lang-java=\"`australiasoutheast`\"\u003e`australiasoutheast`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`brazilsouth`\" pulumi-lang-dotnet=\"`Brazilsouth`\" pulumi-lang-go=\"`brazilsouth`\" pulumi-lang-python=\"`brazilsouth`\" pulumi-lang-yaml=\"`brazilsouth`\" pulumi-lang-java=\"`brazilsouth`\"\u003e`brazilsouth`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`canadacentral`\" pulumi-lang-dotnet=\"`Canadacentral`\" pulumi-lang-go=\"`canadacentral`\" pulumi-lang-python=\"`canadacentral`\" pulumi-lang-yaml=\"`canadacentral`\" pulumi-lang-java=\"`canadacentral`\"\u003e`canadacentral`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`canadaeast`\" pulumi-lang-dotnet=\"`Canadaeast`\" pulumi-lang-go=\"`canadaeast`\" pulumi-lang-python=\"`canadaeast`\" pulumi-lang-yaml=\"`canadaeast`\" pulumi-lang-java=\"`canadaeast`\"\u003e`canadaeast`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`centralindia`\" pulumi-lang-dotnet=\"`Centralindia`\" pulumi-lang-go=\"`centralindia`\" pulumi-lang-python=\"`centralindia`\" pulumi-lang-yaml=\"`centralindia`\" pulumi-lang-java=\"`centralindia`\"\u003e`centralindia`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`centralus`\" pulumi-lang-dotnet=\"`Centralus`\" pulumi-lang-go=\"`centralus`\" pulumi-lang-python=\"`centralus`\" pulumi-lang-yaml=\"`centralus`\" pulumi-lang-java=\"`centralus`\"\u003e`centralus`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`eastasia`\" pulumi-lang-dotnet=\"`Eastasia`\" pulumi-lang-go=\"`eastasia`\" pulumi-lang-python=\"`eastasia`\" pulumi-lang-yaml=\"`eastasia`\" pulumi-lang-java=\"`eastasia`\"\u003e`eastasia`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`eastus`\" pulumi-lang-dotnet=\"`Eastus`\" pulumi-lang-go=\"`eastus`\" pulumi-lang-python=\"`eastus`\" pulumi-lang-yaml=\"`eastus`\" pulumi-lang-java=\"`eastus`\"\u003e`eastus`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`eastus2`\" pulumi-lang-dotnet=\"`Eastus2`\" pulumi-lang-go=\"`eastus2`\" pulumi-lang-python=\"`eastus2`\" pulumi-lang-yaml=\"`eastus2`\" pulumi-lang-java=\"`eastus2`\"\u003e`eastus2`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`francecentral`\" pulumi-lang-dotnet=\"`Francecentral`\" pulumi-lang-go=\"`francecentral`\" pulumi-lang-python=\"`francecentral`\" pulumi-lang-yaml=\"`francecentral`\" pulumi-lang-java=\"`francecentral`\"\u003e`francecentral`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`germanywestcentral`\" pulumi-lang-dotnet=\"`Germanywestcentral`\" pulumi-lang-go=\"`germanywestcentral`\" pulumi-lang-python=\"`germanywestcentral`\" pulumi-lang-yaml=\"`germanywestcentral`\" pulumi-lang-java=\"`germanywestcentral`\"\u003e`germanywestcentral`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`japaneast`\" pulumi-lang-dotnet=\"`Japaneast`\" pulumi-lang-go=\"`japaneast`\" pulumi-lang-python=\"`japaneast`\" pulumi-lang-yaml=\"`japaneast`\" pulumi-lang-java=\"`japaneast`\"\u003e`japaneast`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`japanwest`\" pulumi-lang-dotnet=\"`Japanwest`\" pulumi-lang-go=\"`japanwest`\" pulumi-lang-python=\"`japanwest`\" pulumi-lang-yaml=\"`japanwest`\" pulumi-lang-java=\"`japanwest`\"\u003e`japanwest`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`koreacentral`\" pulumi-lang-dotnet=\"`Koreacentral`\" pulumi-lang-go=\"`koreacentral`\" pulumi-lang-python=\"`koreacentral`\" pulumi-lang-yaml=\"`koreacentral`\" pulumi-lang-java=\"`koreacentral`\"\u003e`koreacentral`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`koreasouth`\" pulumi-lang-dotnet=\"`Koreasouth`\" pulumi-lang-go=\"`koreasouth`\" pulumi-lang-python=\"`koreasouth`\" pulumi-lang-yaml=\"`koreasouth`\" pulumi-lang-java=\"`koreasouth`\"\u003e`koreasouth`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`northcentralus`\" pulumi-lang-dotnet=\"`Northcentralus`\" pulumi-lang-go=\"`northcentralus`\" pulumi-lang-python=\"`northcentralus`\" pulumi-lang-yaml=\"`northcentralus`\" pulumi-lang-java=\"`northcentralus`\"\u003e`northcentralus`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`northeurope`\" pulumi-lang-dotnet=\"`Northeurope`\" pulumi-lang-go=\"`northeurope`\" pulumi-lang-python=\"`northeurope`\" pulumi-lang-yaml=\"`northeurope`\" pulumi-lang-java=\"`northeurope`\"\u003e`northeurope`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`norwayeast`\" pulumi-lang-dotnet=\"`Norwayeast`\" pulumi-lang-go=\"`norwayeast`\" pulumi-lang-python=\"`norwayeast`\" pulumi-lang-yaml=\"`norwayeast`\" pulumi-lang-java=\"`norwayeast`\"\u003e`norwayeast`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`southafricanorth`\" pulumi-lang-dotnet=\"`Southafricanorth`\" pulumi-lang-go=\"`southafricanorth`\" pulumi-lang-python=\"`southafricanorth`\" pulumi-lang-yaml=\"`southafricanorth`\" pulumi-lang-java=\"`southafricanorth`\"\u003e`southafricanorth`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`southcentralus`\" pulumi-lang-dotnet=\"`Southcentralus`\" pulumi-lang-go=\"`southcentralus`\" pulumi-lang-python=\"`southcentralus`\" pulumi-lang-yaml=\"`southcentralus`\" pulumi-lang-java=\"`southcentralus`\"\u003e`southcentralus`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`southeastasia`\" pulumi-lang-dotnet=\"`Southeastasia`\" pulumi-lang-go=\"`southeastasia`\" pulumi-lang-python=\"`southeastasia`\" pulumi-lang-yaml=\"`southeastasia`\" pulumi-lang-java=\"`southeastasia`\"\u003e`southeastasia`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`southindia`\" pulumi-lang-dotnet=\"`Southindia`\" pulumi-lang-go=\"`southindia`\" pulumi-lang-python=\"`southindia`\" pulumi-lang-yaml=\"`southindia`\" pulumi-lang-java=\"`southindia`\"\u003e`southindia`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`switzerlandnorth`\" pulumi-lang-dotnet=\"`Switzerlandnorth`\" pulumi-lang-go=\"`switzerlandnorth`\" pulumi-lang-python=\"`switzerlandnorth`\" pulumi-lang-yaml=\"`switzerlandnorth`\" pulumi-lang-java=\"`switzerlandnorth`\"\u003e`switzerlandnorth`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`uaenorth`\" pulumi-lang-dotnet=\"`Uaenorth`\" pulumi-lang-go=\"`uaenorth`\" pulumi-lang-python=\"`uaenorth`\" pulumi-lang-yaml=\"`uaenorth`\" pulumi-lang-java=\"`uaenorth`\"\u003e`uaenorth`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`uksouth`\" pulumi-lang-dotnet=\"`Uksouth`\" pulumi-lang-go=\"`uksouth`\" pulumi-lang-python=\"`uksouth`\" pulumi-lang-yaml=\"`uksouth`\" pulumi-lang-java=\"`uksouth`\"\u003e`uksouth`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ukwest`\" pulumi-lang-dotnet=\"`Ukwest`\" pulumi-lang-go=\"`ukwest`\" pulumi-lang-python=\"`ukwest`\" pulumi-lang-yaml=\"`ukwest`\" pulumi-lang-java=\"`ukwest`\"\u003e`ukwest`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`westcentralus`\" pulumi-lang-dotnet=\"`Westcentralus`\" pulumi-lang-go=\"`westcentralus`\" pulumi-lang-python=\"`westcentralus`\" pulumi-lang-yaml=\"`westcentralus`\" pulumi-lang-java=\"`westcentralus`\"\u003e`westcentralus`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`westeurope`\" pulumi-lang-dotnet=\"`Westeurope`\" pulumi-lang-go=\"`westeurope`\" pulumi-lang-python=\"`westeurope`\" pulumi-lang-yaml=\"`westeurope`\" pulumi-lang-java=\"`westeurope`\"\u003e`westeurope`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`westindia`\" pulumi-lang-dotnet=\"`Westindia`\" pulumi-lang-go=\"`westindia`\" pulumi-lang-python=\"`westindia`\" pulumi-lang-yaml=\"`westindia`\" pulumi-lang-java=\"`westindia`\"\u003e`westindia`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`westus`\" pulumi-lang-dotnet=\"`Westus`\" pulumi-lang-go=\"`westus`\" pulumi-lang-python=\"`westus`\" pulumi-lang-yaml=\"`westus`\" pulumi-lang-java=\"`westus`\"\u003e`westus`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`westus2`\" pulumi-lang-dotnet=\"`Westus2`\" pulumi-lang-go=\"`westus2`\" pulumi-lang-python=\"`westus2`\" pulumi-lang-yaml=\"`westus2`\" pulumi-lang-java=\"`westus2`\"\u003e`westus2`\u003c/span\u003e.\n",
                    "willReplaceOnChanges": true
                },
                "azureResourceGroup": {
                    "type": "string",
                    "description": "The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription.\n",
                    "willReplaceOnChanges": true
                },
                "azureSubscriptionId": {
                    "type": "string",
                    "description": "The unique alphanumeric string that identifies your Azure subscription.\n",
                    "willReplaceOnChanges": true
                },
                "datadogApiKey": {
                    "type": "string",
                    "description": "The Datadog API key.\n",
                    "secret": true
                },
                "datadogRegion": {
                    "type": "string",
                    "description": "The Datadog region. Possible values: \u003cspan pulumi-lang-nodejs=\"`us`\" pulumi-lang-dotnet=\"`Us`\" pulumi-lang-go=\"`us`\" pulumi-lang-python=\"`us`\" pulumi-lang-yaml=\"`us`\" pulumi-lang-java=\"`us`\"\u003e`us`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`eu`\" pulumi-lang-dotnet=\"`Eu`\" pulumi-lang-go=\"`eu`\" pulumi-lang-python=\"`eu`\" pulumi-lang-yaml=\"`eu`\" pulumi-lang-java=\"`eu`\"\u003e`eu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`us3`\" pulumi-lang-dotnet=\"`Us3`\" pulumi-lang-go=\"`us3`\" pulumi-lang-python=\"`us3`\" pulumi-lang-yaml=\"`us3`\" pulumi-lang-java=\"`us3`\"\u003e`us3`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`us5`\" pulumi-lang-dotnet=\"`Us5`\" pulumi-lang-go=\"`us5`\" pulumi-lang-python=\"`us5`\" pulumi-lang-yaml=\"`us5`\" pulumi-lang-java=\"`us5`\"\u003e`us5`\u003c/span\u003e.\n"
                },
                "httpAuthorization": {
                    "type": "string",
                    "description": "Sent in the HTTP \"Authorization\" header with each request.\n",
                    "secret": true
                },
                "httpContentFormat": {
                    "type": "string",
                    "description": "The format of data sent over HTTP. Options are \"JSONLINES\", \"JSONARRAY\" or \"JSONOBJECT\"\n"
                },
                "httpContentType": {
                    "type": "string",
                    "description": "The \"Content-Type\" header to send over HTTP. Common value is \"application/json\".\n"
                },
                "httpCustomHeaders": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "Additional HTTP headers to be included as part of the HTTP request.\n"
                },
                "httpEndpoint": {
                    "type": "string",
                    "description": "The HTTP endpoint to send streaming logs.\n"
                },
                "mixpanelProjectId": {
                    "type": "string",
                    "description": "The Mixpanel project ID, found on the Project Settings page.\n"
                },
                "mixpanelRegion": {
                    "type": "string",
                    "description": "The Mixpanel region. Options are [\"us\", \"eu\"]. EU is required for customers with EU data residency requirements.\n"
                },
                "mixpanelServiceAccountPassword": {
                    "type": "string",
                    "description": "The Mixpanel Service Account password.\n",
                    "secret": true
                },
                "mixpanelServiceAccountUsername": {
                    "type": "string",
                    "description": "The Mixpanel Service Account username. Services Accounts can be created in the Project Settings page.\n"
                },
                "segmentWriteKey": {
                    "type": "string",
                    "description": "The [Segment Write Key](https://segment.com/docs/connections/find-writekey/).\n",
                    "secret": true
                },
                "splunkDomain": {
                    "type": "string",
                    "description": "The Splunk domain name.\n"
                },
                "splunkPort": {
                    "type": "string",
                    "description": "The Splunk port.\n"
                },
                "splunkSecure": {
                    "type": "boolean",
                    "description": "This toggle should be turned off when using self-signed certificates.\n"
                },
                "splunkToken": {
                    "type": "string",
                    "description": "The Splunk access token.\n",
                    "secret": true
                },
                "sumoSourceAddress": {
                    "type": "string",
                    "description": "Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "awsPartnerEventSource",
                        "azurePartnerTopic",
                        "httpContentFormat"
                    ]
                }
            }
        },
        "auth0:index/NetworkAclRule:NetworkAclRule": {
            "properties": {
                "action": {
                    "$ref": "#/types/auth0:index/NetworkAclRuleAction:NetworkAclRuleAction",
                    "description": "The action configuration for the Network ACL Rule. Only one action type (block, allow, log, or redirect) should be specified.\n"
                },
                "match": {
                    "$ref": "#/types/auth0:index/NetworkAclRuleMatch:NetworkAclRuleMatch",
                    "description": "The configuration for the Network ACL Rule\n"
                },
                "notMatch": {
                    "$ref": "#/types/auth0:index/NetworkAclRuleNotMatch:NetworkAclRuleNotMatch",
                    "description": "The configuration for the Network ACL Rule\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of the Network ACL Rule\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "scope"
            ]
        },
        "auth0:index/NetworkAclRuleAction:NetworkAclRuleAction": {
            "properties": {
                "allow": {
                    "type": "boolean",
                    "description": "If true, allows the request. When using allow action, no other properties should be set.\n"
                },
                "block": {
                    "type": "boolean",
                    "description": "If true, blocks the request. When using block action, no other properties should be set.\n"
                },
                "log": {
                    "type": "boolean",
                    "description": "If true, logs the request. When using log action, no other properties should be set.\n"
                },
                "redirect": {
                    "type": "boolean",
                    "description": "If true, redirects the request. When using redirect action,\u003cspan pulumi-lang-nodejs=\" redirectUri \" pulumi-lang-dotnet=\" RedirectUri \" pulumi-lang-go=\" redirectUri \" pulumi-lang-python=\" redirect_uri \" pulumi-lang-yaml=\" redirectUri \" pulumi-lang-java=\" redirectUri \"\u003e redirect_uri \u003c/span\u003emust also be specified.\n"
                },
                "redirectUri": {
                    "type": "string",
                    "description": "The URI to redirect to when redirect is true. Required when redirect is true. Must be between 1 and 2000 characters.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/NetworkAclRuleMatch:NetworkAclRuleMatch": {
            "properties": {
                "asns": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "ASNs. Must contain between 1 and 10 unique items.\n"
                },
                "geoCountryCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Geo Country Codes. Must contain between 1 and 10 unique items.\n"
                },
                "geoSubdivisionCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Geo Subdivision Codes. Must contain between 1 and 10 unique items.\n"
                },
                "ipv4Cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv4 CIDRs. Must contain between 1 and 10 unique items. Can be IPv4 addresses or CIDR blocks.\n"
                },
                "ipv6Cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv6 CIDRs. Must contain between 1 and 10 unique items. Can be IPv6 addresses or CIDR blocks.\n"
                },
                "ja3Fingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JA3 Fingerprints. Must contain between 1 and 10 unique items.\n"
                },
                "ja4Fingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JA4 Fingerprints. Must contain between 1 and 10 unique items.\n"
                },
                "userAgents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User Agents. Must contain between 1 and 10 unique items.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/NetworkAclRuleNotMatch:NetworkAclRuleNotMatch": {
            "properties": {
                "asns": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "ASNs. Must contain between 1 and 10 unique items.\n"
                },
                "geoCountryCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Geo Country Codes. Must contain between 1 and 10 unique items.\n"
                },
                "geoSubdivisionCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Geo Subdivision Codes. Must contain between 1 and 10 unique items.\n"
                },
                "ipv4Cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv4 CIDRs. Must contain between 1 and 10 unique items. Can be IPv4 addresses or CIDR blocks.\n"
                },
                "ipv6Cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv6 CIDRs. Must contain between 1 and 10 unique items. Can be IPv6 addresses or CIDR blocks.\n"
                },
                "ja3Fingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JA3 Fingerprints. Must contain between 1 and 10 unique items.\n"
                },
                "ja4Fingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JA4 Fingerprints. Must contain between 1 and 10 unique items.\n"
                },
                "userAgents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User Agents. Must contain between 1 and 10 unique items.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/OrganizationBranding:OrganizationBranding": {
            "properties": {
                "colors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Color scheme used to customize the login pages.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of logo to display on login page.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/OrganizationConnectionsEnabledConnection:OrganizationConnectionsEnabledConnection": {
            "properties": {
                "assignMembershipOnLogin": {
                    "type": "boolean",
                    "description": "When \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e, all users that log in with this connection will be automatically granted membership in the organization. When \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e, users must be granted membership in the organization before logging in with this connection.\n"
                },
                "connectionId": {
                    "type": "string",
                    "description": "The ID of the connection to enable for the organization.\n"
                },
                "isSignupEnabled": {
                    "type": "boolean",
                    "description": "Determines whether organization sign-up should be enabled for this organization connection. Only applicable for database connections. Note: \u003cspan pulumi-lang-nodejs=\"`isSignupEnabled`\" pulumi-lang-dotnet=\"`IsSignupEnabled`\" pulumi-lang-go=\"`isSignupEnabled`\" pulumi-lang-python=\"`is_signup_enabled`\" pulumi-lang-yaml=\"`isSignupEnabled`\" pulumi-lang-java=\"`isSignupEnabled`\"\u003e`is_signup_enabled`\u003c/span\u003e can only be \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e if \u003cspan pulumi-lang-nodejs=\"`assignMembershipOnLogin`\" pulumi-lang-dotnet=\"`AssignMembershipOnLogin`\" pulumi-lang-go=\"`assignMembershipOnLogin`\" pulumi-lang-python=\"`assign_membership_on_login`\" pulumi-lang-yaml=\"`assignMembershipOnLogin`\" pulumi-lang-java=\"`assignMembershipOnLogin`\"\u003e`assign_membership_on_login`\u003c/span\u003e is \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "showAsButton": {
                    "type": "boolean",
                    "description": "Determines whether a connection should be displayed on this organization’s login prompt. Only applicable for enterprise connections.\n"
                }
            },
            "type": "object",
            "required": [
                "connectionId"
            ]
        },
        "auth0:index/OrganizationDiscoveryDomainsDiscoveryDomain:OrganizationDiscoveryDomainsDiscoveryDomain": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The domain name for organization discovery.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the discovery domain.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Verification status. Must be either 'pending' or 'verified'.\n"
                },
                "verificationHost": {
                    "type": "string",
                    "description": "The full domain where the TXT record should be added.\n"
                },
                "verificationTxt": {
                    "type": "string",
                    "description": "TXT record value for domain verification.\n"
                }
            },
            "type": "object",
            "required": [
                "domain",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domain",
                        "id",
                        "status",
                        "verificationHost",
                        "verificationTxt"
                    ]
                }
            }
        },
        "auth0:index/OrganizationTokenQuota:OrganizationTokenQuota": {
            "properties": {
                "clientCredentials": {
                    "$ref": "#/types/auth0:index/OrganizationTokenQuotaClientCredentials:OrganizationTokenQuotaClientCredentials",
                    "description": "The token quota configuration for client credentials.\n"
                }
            },
            "type": "object",
            "required": [
                "clientCredentials"
            ]
        },
        "auth0:index/OrganizationTokenQuotaClientCredentials:OrganizationTokenQuotaClientCredentials": {
            "properties": {
                "enforce": {
                    "type": "boolean",
                    "description": "If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.\n"
                },
                "perDay": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per day\n"
                },
                "perHour": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per hour\n"
                }
            },
            "type": "object"
        },
        "auth0:index/PagesChangePassword:PagesChangePassword": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether to use the custom Reset Password HTML (\u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e) or the default Auth0 page (\u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e).\n"
                },
                "html": {
                    "type": "string",
                    "description": "Customized content for the Reset Password page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "html"
            ]
        },
        "auth0:index/PagesError:PagesError": {
            "properties": {
                "html": {
                    "type": "string",
                    "description": "Customized content for the Error page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).\n"
                },
                "showLogLink": {
                    "type": "boolean",
                    "description": "Indicates whether to show the link to logs as part of the default error page.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL to redirect to when an error occurs, instead of showing the default error page.\n"
                }
            },
            "type": "object",
            "required": [
                "showLogLink"
            ]
        },
        "auth0:index/PagesGuardianMfa:PagesGuardianMfa": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether to use the custom Guardian MFA HTML (\u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e) or the default Auth0 page (\u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e).\n"
                },
                "html": {
                    "type": "string",
                    "description": "Customized content for the Guardian MFA page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "html"
            ]
        },
        "auth0:index/PagesLogin:PagesLogin": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether to use the custom Login page HTML (\u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e) or the default Auth0 page (\u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e).\n"
                },
                "html": {
                    "type": "string",
                    "description": "Customized content for the Login page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "html"
            ]
        },
        "auth0:index/PhoneProviderConfiguration:PhoneProviderConfiguration": {
            "properties": {
                "defaultFrom": {
                    "type": "string",
                    "description": "Default sender subject as \"from\" when no other value is specified.\n"
                },
                "deliveryMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Media set supported by a given provider to deliver a notification\n"
                },
                "mssid": {
                    "type": "string",
                    "description": "Twilio Messaging Service SID\n"
                },
                "sid": {
                    "type": "string",
                    "description": "Twilio Account SID.\n"
                }
            },
            "type": "object",
            "required": [
                "deliveryMethods"
            ]
        },
        "auth0:index/PhoneProviderCredentials:PhoneProviderCredentials": {
            "properties": {
                "authToken": {
                    "type": "string",
                    "description": "The Auth Token for the phone provider.\n",
                    "secret": true
                }
            },
            "type": "object"
        },
        "auth0:index/PromptScreenPartialInsertionPoints:PromptScreenPartialInsertionPoints": {
            "properties": {
                "formContent": {
                    "type": "string",
                    "description": "Content that goes inside the form\n"
                },
                "formContentEnd": {
                    "type": "string",
                    "description": "Content that goes at the end of the form.\n"
                },
                "formContentStart": {
                    "type": "string",
                    "description": "Content that goes at the start of the form.\n"
                },
                "formFooterEnd": {
                    "type": "string",
                    "description": "Footer content for the end of the footer.\n"
                },
                "formFooterStart": {
                    "type": "string",
                    "description": "Footer content for the start of the footer.\n"
                },
                "secondaryActionsEnd": {
                    "type": "string",
                    "description": "Actions that go at the end of secondary actions.\n"
                },
                "secondaryActionsStart": {
                    "type": "string",
                    "description": "Actions that go at the start of secondary actions.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/PromptScreenPartialsScreenPartial:PromptScreenPartialsScreenPartial": {
            "properties": {
                "insertionPoints": {
                    "$ref": "#/types/auth0:index/PromptScreenPartialsScreenPartialInsertionPoints:PromptScreenPartialsScreenPartialInsertionPoints"
                },
                "screenName": {
                    "type": "string",
                    "description": "The name of the screen associated with the partials\n"
                }
            },
            "type": "object",
            "required": [
                "insertionPoints",
                "screenName"
            ]
        },
        "auth0:index/PromptScreenPartialsScreenPartialInsertionPoints:PromptScreenPartialsScreenPartialInsertionPoints": {
            "properties": {
                "formContent": {
                    "type": "string",
                    "description": "Content that goes inside the form\n"
                },
                "formContentEnd": {
                    "type": "string",
                    "description": "Content that goes at the end of the form.\n"
                },
                "formContentStart": {
                    "type": "string",
                    "description": "Content that goes at the start of the form.\n"
                },
                "formFooterEnd": {
                    "type": "string",
                    "description": "Footer content for the end of the footer.\n"
                },
                "formFooterStart": {
                    "type": "string",
                    "description": "Footer content for the start of the footer.\n"
                },
                "secondaryActionsEnd": {
                    "type": "string",
                    "description": "Actions that go at the end of secondary actions.\n"
                },
                "secondaryActionsStart": {
                    "type": "string",
                    "description": "Actions that go at the start of secondary actions.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/PromptScreenRendererFilters:PromptScreenRendererFilters": {
            "properties": {
                "clients": {
                    "type": "string",
                    "description": "An array of clients (applications) identified by id or a metadata key/value pair. Entity Limit: 25.\n"
                },
                "domains": {
                    "type": "string",
                    "description": "An array of domains identified by id or a metadata key/value pair. Entity Limit: 25.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Type of match to apply. Options: \u003cspan pulumi-lang-nodejs=\"`includesAny`\" pulumi-lang-dotnet=\"`IncludesAny`\" pulumi-lang-go=\"`includesAny`\" pulumi-lang-python=\"`includes_any`\" pulumi-lang-yaml=\"`includesAny`\" pulumi-lang-java=\"`includesAny`\"\u003e`includes_any`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`excludesAny`\" pulumi-lang-dotnet=\"`ExcludesAny`\" pulumi-lang-go=\"`excludesAny`\" pulumi-lang-python=\"`excludes_any`\" pulumi-lang-yaml=\"`excludesAny`\" pulumi-lang-java=\"`excludesAny`\"\u003e`excludes_any`\u003c/span\u003e.\n"
                },
                "organizations": {
                    "type": "string",
                    "description": "An array of organizations identified by id or a metadata key/value pair. Entity Limit: 25.\n"
                }
            },
            "type": "object",
            "required": [
                "matchType"
            ]
        },
        "auth0:index/ResourceServerAuthorizationDetail:ResourceServerAuthorizationDetail": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "Disable authorization details.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of authorization details.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ResourceServerProofOfPossession:ResourceServerProofOfPossession": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "Disable proof-of-possession.\n"
                },
                "mechanism": {
                    "type": "string",
                    "description": "Mechanism used for proof-of-possession. \u003cspan pulumi-lang-nodejs=\"`mtls`\" pulumi-lang-dotnet=\"`Mtls`\" pulumi-lang-go=\"`mtls`\" pulumi-lang-python=\"`mtls`\" pulumi-lang-yaml=\"`mtls`\" pulumi-lang-java=\"`mtls`\"\u003e`mtls`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`dpop`\" pulumi-lang-dotnet=\"`Dpop`\" pulumi-lang-go=\"`dpop`\" pulumi-lang-python=\"`dpop`\" pulumi-lang-yaml=\"`dpop`\" pulumi-lang-java=\"`dpop`\"\u003e`dpop`\u003c/span\u003e is supported.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates whether proof-of-possession is required with this resource server.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "mechanism",
                        "required"
                    ]
                }
            }
        },
        "auth0:index/ResourceServerScopesScope:ResourceServerScopesScope": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "User-friendly description of the scope (permission).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the scope (permission). Examples include `read:appointments` or `delete:appointments`.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "auth0:index/ResourceServerSubjectTypeAuthorization:ResourceServerSubjectTypeAuthorization": {
            "properties": {
                "client": {
                    "$ref": "#/types/auth0:index/ResourceServerSubjectTypeAuthorizationClient:ResourceServerSubjectTypeAuthorizationClient",
                    "description": "Client authorization policies for the resource server.\n"
                },
                "user": {
                    "$ref": "#/types/auth0:index/ResourceServerSubjectTypeAuthorizationUser:ResourceServerSubjectTypeAuthorizationUser",
                    "description": "User authorization policies for the resource server.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ResourceServerSubjectTypeAuthorizationClient:ResourceServerSubjectTypeAuthorizationClient": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Client flows policy. One of \u003cspan pulumi-lang-nodejs=\"`denyAll`\" pulumi-lang-dotnet=\"`DenyAll`\" pulumi-lang-go=\"`denyAll`\" pulumi-lang-python=\"`deny_all`\" pulumi-lang-yaml=\"`denyAll`\" pulumi-lang-java=\"`denyAll`\"\u003e`deny_all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`requireClientGrant`\" pulumi-lang-dotnet=\"`RequireClientGrant`\" pulumi-lang-go=\"`requireClientGrant`\" pulumi-lang-python=\"`require_client_grant`\" pulumi-lang-yaml=\"`requireClientGrant`\" pulumi-lang-java=\"`requireClientGrant`\"\u003e`require_client_grant`\u003c/span\u003e.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ResourceServerSubjectTypeAuthorizationUser:ResourceServerSubjectTypeAuthorizationUser": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "User flows policy. One of \u003cspan pulumi-lang-nodejs=\"`allowAll`\" pulumi-lang-dotnet=\"`AllowAll`\" pulumi-lang-go=\"`allowAll`\" pulumi-lang-python=\"`allow_all`\" pulumi-lang-yaml=\"`allowAll`\" pulumi-lang-java=\"`allowAll`\"\u003e`allow_all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`denyAll`\" pulumi-lang-dotnet=\"`DenyAll`\" pulumi-lang-go=\"`denyAll`\" pulumi-lang-python=\"`deny_all`\" pulumi-lang-yaml=\"`denyAll`\" pulumi-lang-java=\"`denyAll`\"\u003e`deny_all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`requireClientGrant`\" pulumi-lang-dotnet=\"`RequireClientGrant`\" pulumi-lang-go=\"`requireClientGrant`\" pulumi-lang-python=\"`require_client_grant`\" pulumi-lang-yaml=\"`requireClientGrant`\" pulumi-lang-java=\"`requireClientGrant`\"\u003e`require_client_grant`\u003c/span\u003e.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/ResourceServerTokenEncryption:ResourceServerTokenEncryption": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "Disable token encryption.\n"
                },
                "encryptionKey": {
                    "$ref": "#/types/auth0:index/ResourceServerTokenEncryptionEncryptionKey:ResourceServerTokenEncryptionEncryptionKey",
                    "description": "Authorization details for this resource server.\n"
                },
                "format": {
                    "type": "string",
                    "description": "Format of the token encryption. Only `compact-nested-jwe` is supported.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "encryptionKey",
                        "format"
                    ]
                }
            }
        },
        "auth0:index/ResourceServerTokenEncryptionEncryptionKey:ResourceServerTokenEncryptionEncryptionKey": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm used to encrypt the token.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "Key ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the encryption key.\n"
                },
                "pem": {
                    "type": "string",
                    "description": "PEM-formatted public key. Must be JSON escaped.\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "pem"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "algorithm",
                        "kid",
                        "name",
                        "pem"
                    ]
                }
            }
        },
        "auth0:index/RolePermissionsPermission:RolePermissionsPermission": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the permission.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Resource server identifier associated with the permission.\n"
                },
                "resourceServerName": {
                    "type": "string",
                    "description": "Name of resource server that the permission is associated with.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceServerIdentifier"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "name",
                        "resourceServerIdentifier",
                        "resourceServerName"
                    ]
                }
            }
        },
        "auth0:index/SelfServiceProfileBranding:SelfServiceProfileBranding": {
            "properties": {
                "colors": {
                    "$ref": "#/types/auth0:index/SelfServiceProfileBrandingColors:SelfServiceProfileBrandingColors",
                    "description": "Configuration settings for colors for branding.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of logo to display on login page.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "colors"
                    ]
                }
            }
        },
        "auth0:index/SelfServiceProfileBrandingColors:SelfServiceProfileBrandingColors": {
            "properties": {
                "primary": {
                    "type": "string",
                    "description": "Primary button background color in hexadecimal.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "primary"
                    ]
                }
            }
        },
        "auth0:index/SelfServiceProfileUserAttribute:SelfServiceProfileUserAttribute": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A human readable description of the attribute.\n"
                },
                "isOptional": {
                    "type": "boolean",
                    "description": "Indicates if this attribute is optional or if it has to be provided by the customer for the application to function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Attribute’s name on Auth0 side\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "isOptional",
                "name"
            ]
        },
        "auth0:index/TenantDefaultTokenQuota:TenantDefaultTokenQuota": {
            "properties": {
                "clients": {
                    "$ref": "#/types/auth0:index/TenantDefaultTokenQuotaClients:TenantDefaultTokenQuotaClients",
                    "description": "The token quota configuration.\n"
                },
                "organizations": {
                    "$ref": "#/types/auth0:index/TenantDefaultTokenQuotaOrganizations:TenantDefaultTokenQuotaOrganizations",
                    "description": "The token quota configuration.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/TenantDefaultTokenQuotaClients:TenantDefaultTokenQuotaClients": {
            "properties": {
                "clientCredentials": {
                    "$ref": "#/types/auth0:index/TenantDefaultTokenQuotaClientsClientCredentials:TenantDefaultTokenQuotaClientsClientCredentials",
                    "description": "The token quota configuration for client credentials.\n"
                }
            },
            "type": "object",
            "required": [
                "clientCredentials"
            ]
        },
        "auth0:index/TenantDefaultTokenQuotaClientsClientCredentials:TenantDefaultTokenQuotaClientsClientCredentials": {
            "properties": {
                "enforce": {
                    "type": "boolean",
                    "description": "If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.\n"
                },
                "perDay": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per day\n"
                },
                "perHour": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per hour\n"
                }
            },
            "type": "object"
        },
        "auth0:index/TenantDefaultTokenQuotaOrganizations:TenantDefaultTokenQuotaOrganizations": {
            "properties": {
                "clientCredentials": {
                    "$ref": "#/types/auth0:index/TenantDefaultTokenQuotaOrganizationsClientCredentials:TenantDefaultTokenQuotaOrganizationsClientCredentials",
                    "description": "The token quota configuration for client credentials.\n"
                }
            },
            "type": "object",
            "required": [
                "clientCredentials"
            ]
        },
        "auth0:index/TenantDefaultTokenQuotaOrganizationsClientCredentials:TenantDefaultTokenQuotaOrganizationsClientCredentials": {
            "properties": {
                "enforce": {
                    "type": "boolean",
                    "description": "If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.\n"
                },
                "perDay": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per day\n"
                },
                "perHour": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per hour\n"
                }
            },
            "type": "object"
        },
        "auth0:index/TenantErrorPage:TenantErrorPage": {
            "properties": {
                "html": {
                    "type": "string",
                    "description": "Custom Error HTML (Liquid syntax is supported)\n"
                },
                "showLogLink": {
                    "type": "boolean",
                    "description": "Whether to show the link to log as part of the default error page (true, default) or not to show the link (false).\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL to redirect to when an error occurs instead of showing the default error page\n"
                }
            },
            "type": "object"
        },
        "auth0:index/TenantFlags:TenantFlags": {
            "properties": {
                "allowLegacyDelegationGrantTypes": {
                    "type": "boolean",
                    "description": "Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).\n"
                },
                "allowLegacyRoGrantTypes": {
                    "type": "boolean",
                    "description": "Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).\n"
                },
                "allowLegacyTokeninfoEndpoint": {
                    "type": "boolean",
                    "description": "If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.\n"
                },
                "dashboardInsightsView": {
                    "type": "boolean",
                    "description": "Enables new insights activity page view.\n"
                },
                "dashboardLogStreamsNext": {
                    "type": "boolean",
                    "description": "Enables beta access to log streaming changes.\n"
                },
                "disableClickjackProtectionHeaders": {
                    "type": "boolean",
                    "description": "Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.\n"
                },
                "disableFieldsMapFix": {
                    "type": "boolean",
                    "description": "Disables SAML fields map fix for bad mappings with repeated attributes.\n"
                },
                "disableManagementApiSmsObfuscation": {
                    "type": "boolean",
                    "description": "If true, SMS phone numbers will not be obfuscated in Management API GET calls.\n"
                },
                "enableAdfsWaadEmailVerification": {
                    "type": "boolean",
                    "description": "If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.\n"
                },
                "enableApisSection": {
                    "type": "boolean",
                    "description": "Indicates whether the APIs section is enabled for the tenant.\n"
                },
                "enableClientConnections": {
                    "type": "boolean",
                    "description": "Indicates whether all current connections should be enabled when a new client is created.\n"
                },
                "enableCustomDomainInEmails": {
                    "type": "boolean",
                    "description": "Indicates whether the tenant allows custom domains in emails. Before enabling this flag, you must have a custom domain with status: \u003cspan pulumi-lang-nodejs=\"`ready`\" pulumi-lang-dotnet=\"`Ready`\" pulumi-lang-go=\"`ready`\" pulumi-lang-python=\"`ready`\" pulumi-lang-yaml=\"`ready`\" pulumi-lang-java=\"`ready`\"\u003e`ready`\u003c/span\u003e.\n"
                },
                "enableDynamicClientRegistration": {
                    "type": "boolean",
                    "description": "Indicates whether the tenant allows dynamic client registration.\n"
                },
                "enableIdtokenApi2": {
                    "type": "boolean",
                    "description": "Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).\n"
                },
                "enableLegacyLogsSearchV2": {
                    "type": "boolean",
                    "description": "Indicates whether to use the older v2 legacy logs search.\n"
                },
                "enableLegacyProfile": {
                    "type": "boolean",
                    "description": "Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).\n"
                },
                "enablePipeline2": {
                    "type": "boolean",
                    "description": "Indicates whether advanced API Authorization scenarios are enabled.\n"
                },
                "enablePublicSignupUserExistsError": {
                    "type": "boolean",
                    "description": "Indicates whether the public sign up process shows a \u003cspan pulumi-lang-nodejs=\"`userExists`\" pulumi-lang-dotnet=\"`UserExists`\" pulumi-lang-go=\"`userExists`\" pulumi-lang-python=\"`user_exists`\" pulumi-lang-yaml=\"`userExists`\" pulumi-lang-java=\"`userExists`\"\u003e`user_exists`\u003c/span\u003e error if the user already exists.\n"
                },
                "enableSso": {
                    "type": "boolean",
                    "description": "Flag indicating whether users will not be prompted to confirm log in before SSO redirection. This flag applies to existing tenants only; new tenants have it enforced as true.\n"
                },
                "mfaShowFactorListOnEnrollment": {
                    "type": "boolean",
                    "description": "Used to allow users to pick which factor to enroll with from the list of available MFA factors.\n"
                },
                "noDiscloseEnterpriseConnections": {
                    "type": "boolean",
                    "description": "Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.\n"
                },
                "removeAlgFromJwks": {
                    "type": "boolean",
                    "description": "Remove \u003cspan pulumi-lang-nodejs=\"`alg`\" pulumi-lang-dotnet=\"`Alg`\" pulumi-lang-go=\"`alg`\" pulumi-lang-python=\"`alg`\" pulumi-lang-yaml=\"`alg`\" pulumi-lang-java=\"`alg`\"\u003e`alg`\u003c/span\u003e from jwks(JSON Web Key Sets).\n"
                },
                "requirePushedAuthorizationRequests": {
                    "type": "boolean",
                    "description": "This Flag is not supported by the Auth0 Management API and will be removed in the next major release.\n",
                    "deprecationMessage": "This Flag is not supported by the Auth0 Management API and will be removed in the next major release."
                },
                "revokeRefreshTokenGrant": {
                    "type": "boolean",
                    "description": "Delete underlying grant when a refresh token is revoked via the Authentication API.\n"
                },
                "useScopeDescriptionsForConsent": {
                    "type": "boolean",
                    "description": "Indicates whether to use scope descriptions for consent.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowLegacyDelegationGrantTypes",
                        "allowLegacyRoGrantTypes",
                        "allowLegacyTokeninfoEndpoint",
                        "dashboardInsightsView",
                        "dashboardLogStreamsNext",
                        "disableClickjackProtectionHeaders",
                        "disableFieldsMapFix",
                        "disableManagementApiSmsObfuscation",
                        "enableAdfsWaadEmailVerification",
                        "enableApisSection",
                        "enableClientConnections",
                        "enableCustomDomainInEmails",
                        "enableDynamicClientRegistration",
                        "enableIdtokenApi2",
                        "enableLegacyLogsSearchV2",
                        "enableLegacyProfile",
                        "enablePipeline2",
                        "enablePublicSignupUserExistsError",
                        "enableSso",
                        "mfaShowFactorListOnEnrollment",
                        "noDiscloseEnterpriseConnections",
                        "removeAlgFromJwks",
                        "requirePushedAuthorizationRequests",
                        "revokeRefreshTokenGrant",
                        "useScopeDescriptionsForConsent"
                    ]
                }
            }
        },
        "auth0:index/TenantMtls:TenantMtls": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "Disable mTLS settings.\n"
                },
                "enableEndpointAliases": {
                    "type": "boolean",
                    "description": "Enable mTLS endpoint aliases.\n"
                }
            },
            "type": "object"
        },
        "auth0:index/TenantOidcLogout:TenantOidcLogout": {
            "properties": {
                "rpLogoutEndSessionEndpointDiscovery": {
                    "type": "boolean",
                    "description": "Enable the end*session*endpoint URL in the .well-known discovery configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "rpLogoutEndSessionEndpointDiscovery"
            ]
        },
        "auth0:index/TenantSessionCookie:TenantSessionCookie": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "Behavior of tenant session cookie. Accepts either \"persistent\" or \"non-persistent\".\n"
                }
            },
            "type": "object"
        },
        "auth0:index/TenantSessions:TenantSessions": {
            "properties": {
                "oidcLogoutPromptEnabled": {
                    "type": "boolean",
                    "description": "When active, users will be presented with a consent prompt to confirm the logout request if the request is not trustworthy. Turn off the consent prompt to bypass user confirmation.\n"
                }
            },
            "type": "object",
            "required": [
                "oidcLogoutPromptEnabled"
            ]
        },
        "auth0:index/TriggerActionsAction:TriggerActionsAction": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The display name of the action within the flow.\n"
                },
                "id": {
                    "type": "string",
                    "description": "Action ID.\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id"
            ]
        },
        "auth0:index/UserAttributeProfileUserAttribute:UserAttributeProfileUserAttribute": {
            "properties": {
                "auth0Mapping": {
                    "type": "string",
                    "description": "The Auth0 mapping for the user attribute.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the user attribute.\n"
                },
                "label": {
                    "type": "string",
                    "description": "Display label for the user attribute.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user attribute.\n"
                },
                "oidcMapping": {
                    "$ref": "#/types/auth0:index/UserAttributeProfileUserAttributeOidcMapping:UserAttributeProfileUserAttributeOidcMapping",
                    "description": "The OIDC mapping configuration for the user attribute.\n"
                },
                "profileRequired": {
                    "type": "boolean",
                    "description": "Whether the attribute is required in the profile.\n"
                },
                "samlMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SAML mapping override for this strategy.\n"
                },
                "scimMapping": {
                    "type": "string",
                    "description": "The SCIM mapping for the user attribute.\n"
                },
                "strategyOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/UserAttributeProfileUserAttributeStrategyOverride:UserAttributeProfileUserAttributeStrategyOverride"
                    },
                    "description": "Strategy-specific overrides for user attribute mapping.\n"
                }
            },
            "type": "object",
            "required": [
                "auth0Mapping",
                "description",
                "label",
                "name",
                "profileRequired"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "auth0Mapping",
                        "description",
                        "label",
                        "name",
                        "oidcMapping",
                        "profileRequired",
                        "samlMappings",
                        "scimMapping",
                        "strategyOverrides"
                    ]
                }
            }
        },
        "auth0:index/UserAttributeProfileUserAttributeOidcMapping:UserAttributeProfileUserAttributeOidcMapping": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name for the OIDC mapping.\n"
                },
                "mapping": {
                    "type": "string",
                    "description": "The OIDC mapping field.\n"
                }
            },
            "type": "object",
            "required": [
                "mapping"
            ]
        },
        "auth0:index/UserAttributeProfileUserAttributeStrategyOverride:UserAttributeProfileUserAttributeStrategyOverride": {
            "properties": {
                "oidcMapping": {
                    "$ref": "#/types/auth0:index/UserAttributeProfileUserAttributeStrategyOverrideOidcMapping:UserAttributeProfileUserAttributeStrategyOverrideOidcMapping",
                    "description": "OIDC mapping override for this strategy.\n"
                },
                "samlMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SAML mapping override for this strategy.\n"
                },
                "scimMapping": {
                    "type": "string",
                    "description": "SCIM mapping override for this strategy.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy name (e.g., 'oidc', 'samlp', 'ad', etc.).\n"
                }
            },
            "type": "object",
            "required": [
                "strategy"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "oidcMapping",
                        "samlMappings",
                        "scimMapping",
                        "strategy"
                    ]
                }
            }
        },
        "auth0:index/UserAttributeProfileUserAttributeStrategyOverrideOidcMapping:UserAttributeProfileUserAttributeStrategyOverrideOidcMapping": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name for the OIDC mapping.\n"
                },
                "mapping": {
                    "type": "string",
                    "description": "The OIDC mapping field.\n"
                }
            },
            "type": "object",
            "required": [
                "mapping"
            ]
        },
        "auth0:index/UserAttributeProfileUserId:UserAttributeProfileUserId": {
            "properties": {
                "oidcMapping": {
                    "type": "string",
                    "description": "The OIDC mapping for the user ID.\n"
                },
                "samlMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The SAML mapping for the user ID.\n"
                },
                "scimMapping": {
                    "type": "string",
                    "description": "The SCIM mapping for the user ID.\n"
                },
                "strategyOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/UserAttributeProfileUserIdStrategyOverride:UserAttributeProfileUserIdStrategyOverride"
                    },
                    "description": "Strategy-specific overrides for user ID mapping.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "oidcMapping",
                        "samlMappings",
                        "scimMapping"
                    ]
                }
            }
        },
        "auth0:index/UserAttributeProfileUserIdStrategyOverride:UserAttributeProfileUserIdStrategyOverride": {
            "properties": {
                "oidcMapping": {
                    "type": "string",
                    "description": "OIDC mapping override for this strategy.\n"
                },
                "samlMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SAML mapping override for this strategy.\n"
                },
                "scimMapping": {
                    "type": "string",
                    "description": "SCIM mapping override for this strategy.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy name (e.g., 'oidc', 'samlp', 'ad', etc.).\n"
                }
            },
            "type": "object",
            "required": [
                "strategy"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "oidcMapping",
                        "samlMappings",
                        "scimMapping",
                        "strategy"
                    ]
                }
            }
        },
        "auth0:index/UserPermissionsPermission:UserPermissionsPermission": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the permission.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of permission.\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Resource server identifier associated with the permission.\n"
                },
                "resourceServerName": {
                    "type": "string",
                    "description": "Name of resource server that the permission is associated with.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceServerIdentifier"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "name",
                        "resourceServerIdentifier",
                        "resourceServerName"
                    ]
                }
            }
        },
        "auth0:index/getActionDependency:getActionDependency": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Dependency name, e.g. \u003cspan pulumi-lang-nodejs=\"`lodash`\" pulumi-lang-dotnet=\"`Lodash`\" pulumi-lang-go=\"`lodash`\" pulumi-lang-python=\"`lodash`\" pulumi-lang-yaml=\"`lodash`\" pulumi-lang-java=\"`lodash`\"\u003e`lodash`\u003c/span\u003e.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Dependency version, e.g. \u003cspan pulumi-lang-nodejs=\"`latest`\" pulumi-lang-dotnet=\"`Latest`\" pulumi-lang-go=\"`latest`\" pulumi-lang-python=\"`latest`\" pulumi-lang-yaml=\"`latest`\" pulumi-lang-java=\"`latest`\"\u003e`latest`\u003c/span\u003e or `4.17.21`.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getActionSecret:getActionSecret": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Secret name.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Secret value.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getActionSupportedTrigger:getActionSupportedTrigger": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The trigger ID.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The trigger version. This regulates which \u003cspan pulumi-lang-nodejs=\"`runtime`\" pulumi-lang-dotnet=\"`Runtime`\" pulumi-lang-go=\"`runtime`\" pulumi-lang-python=\"`runtime`\" pulumi-lang-yaml=\"`runtime`\" pulumi-lang-java=\"`runtime`\"\u003e`runtime`\u003c/span\u003e versions are supported.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getAttackProtectionBreachedPasswordDetection:getAttackProtectionBreachedPasswordDetection": {
            "properties": {
                "adminNotificationFrequencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "When \u003cspan pulumi-lang-nodejs=\"`adminNotification`\" pulumi-lang-dotnet=\"`AdminNotification`\" pulumi-lang-go=\"`adminNotification`\" pulumi-lang-python=\"`admin_notification`\" pulumi-lang-yaml=\"`adminNotification`\" pulumi-lang-java=\"`adminNotification`\"\u003e`admin_notification`\u003c/span\u003e is enabled within the \u003cspan pulumi-lang-nodejs=\"`shields`\" pulumi-lang-dotnet=\"`Shields`\" pulumi-lang-go=\"`shields`\" pulumi-lang-python=\"`shields`\" pulumi-lang-yaml=\"`shields`\" pulumi-lang-java=\"`shields`\"\u003e`shields`\u003c/span\u003e property, determines how often email notifications are sent. Possible values: \u003cspan pulumi-lang-nodejs=\"`immediately`\" pulumi-lang-dotnet=\"`Immediately`\" pulumi-lang-go=\"`immediately`\" pulumi-lang-python=\"`immediately`\" pulumi-lang-yaml=\"`immediately`\" pulumi-lang-java=\"`immediately`\"\u003e`immediately`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`daily`\" pulumi-lang-dotnet=\"`Daily`\" pulumi-lang-go=\"`daily`\" pulumi-lang-python=\"`daily`\" pulumi-lang-yaml=\"`daily`\" pulumi-lang-java=\"`daily`\"\u003e`daily`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`weekly`\" pulumi-lang-dotnet=\"`Weekly`\" pulumi-lang-go=\"`weekly`\" pulumi-lang-python=\"`weekly`\" pulumi-lang-yaml=\"`weekly`\" pulumi-lang-java=\"`weekly`\"\u003e`weekly`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`monthly`\" pulumi-lang-dotnet=\"`Monthly`\" pulumi-lang-go=\"`monthly`\" pulumi-lang-python=\"`monthly`\" pulumi-lang-yaml=\"`monthly`\" pulumi-lang-java=\"`monthly`\"\u003e`monthly`\u003c/span\u003e.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether breached password detection is active.\n"
                },
                "method": {
                    "type": "string",
                    "description": "The subscription level for breached password detection methods. Use \"enhanced\" to enable Credential Guard. Possible values: \u003cspan pulumi-lang-nodejs=\"`standard`\" pulumi-lang-dotnet=\"`Standard`\" pulumi-lang-go=\"`standard`\" pulumi-lang-python=\"`standard`\" pulumi-lang-yaml=\"`standard`\" pulumi-lang-java=\"`standard`\"\u003e`standard`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`enhanced`\" pulumi-lang-dotnet=\"`Enhanced`\" pulumi-lang-go=\"`enhanced`\" pulumi-lang-python=\"`enhanced`\" pulumi-lang-yaml=\"`enhanced`\" pulumi-lang-java=\"`enhanced`\"\u003e`enhanced`\u003c/span\u003e.\n"
                },
                "preChangePasswords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getAttackProtectionBreachedPasswordDetectionPreChangePassword:getAttackProtectionBreachedPasswordDetectionPreChangePassword"
                    },
                    "description": "Configuration options that apply before every password change attempt.\n"
                },
                "preUserRegistrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getAttackProtectionBreachedPasswordDetectionPreUserRegistration:getAttackProtectionBreachedPasswordDetectionPreUserRegistration"
                    },
                    "description": "Configuration options that apply before every user registration attempt. Only available on public tenants.\n"
                },
                "shields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Action to take when a breached password is detected. Options include: \u003cspan pulumi-lang-nodejs=\"`block`\" pulumi-lang-dotnet=\"`Block`\" pulumi-lang-go=\"`block`\" pulumi-lang-python=\"`block`\" pulumi-lang-yaml=\"`block`\" pulumi-lang-java=\"`block`\"\u003e`block`\u003c/span\u003e (block compromised user accounts), \u003cspan pulumi-lang-nodejs=\"`userNotification`\" pulumi-lang-dotnet=\"`UserNotification`\" pulumi-lang-go=\"`userNotification`\" pulumi-lang-python=\"`user_notification`\" pulumi-lang-yaml=\"`userNotification`\" pulumi-lang-java=\"`userNotification`\"\u003e`user_notification`\u003c/span\u003e (send an email to user when we detect that they are using compromised credentials) and \u003cspan pulumi-lang-nodejs=\"`adminNotification`\" pulumi-lang-dotnet=\"`AdminNotification`\" pulumi-lang-go=\"`adminNotification`\" pulumi-lang-python=\"`admin_notification`\" pulumi-lang-yaml=\"`adminNotification`\" pulumi-lang-java=\"`adminNotification`\"\u003e`admin_notification`\u003c/span\u003e (send an email with a summary of the number of accounts logging in with compromised credentials).\n"
                }
            },
            "type": "object",
            "required": [
                "adminNotificationFrequencies",
                "enabled",
                "method",
                "preChangePasswords",
                "preUserRegistrations",
                "shields"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getAttackProtectionBreachedPasswordDetectionPreChangePassword:getAttackProtectionBreachedPasswordDetectionPreChangePassword": {
            "properties": {
                "shields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Action to take when a breached password is detected before the password is changed. Possible values: \u003cspan pulumi-lang-nodejs=\"`block`\" pulumi-lang-dotnet=\"`Block`\" pulumi-lang-go=\"`block`\" pulumi-lang-python=\"`block`\" pulumi-lang-yaml=\"`block`\" pulumi-lang-java=\"`block`\"\u003e`block`\u003c/span\u003e (block compromised credentials for new accounts), \u003cspan pulumi-lang-nodejs=\"`adminNotification`\" pulumi-lang-dotnet=\"`AdminNotification`\" pulumi-lang-go=\"`adminNotification`\" pulumi-lang-python=\"`admin_notification`\" pulumi-lang-yaml=\"`adminNotification`\" pulumi-lang-java=\"`adminNotification`\"\u003e`admin_notification`\u003c/span\u003e (send an email notification with a summary of compromised credentials in new accounts).\n"
                }
            },
            "type": "object",
            "required": [
                "shields"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getAttackProtectionBreachedPasswordDetectionPreUserRegistration:getAttackProtectionBreachedPasswordDetectionPreUserRegistration": {
            "properties": {
                "shields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Action to take when a breached password is detected during a signup. Possible values: \u003cspan pulumi-lang-nodejs=\"`block`\" pulumi-lang-dotnet=\"`Block`\" pulumi-lang-go=\"`block`\" pulumi-lang-python=\"`block`\" pulumi-lang-yaml=\"`block`\" pulumi-lang-java=\"`block`\"\u003e`block`\u003c/span\u003e (block compromised credentials for new accounts), \u003cspan pulumi-lang-nodejs=\"`adminNotification`\" pulumi-lang-dotnet=\"`AdminNotification`\" pulumi-lang-go=\"`adminNotification`\" pulumi-lang-python=\"`admin_notification`\" pulumi-lang-yaml=\"`adminNotification`\" pulumi-lang-java=\"`adminNotification`\"\u003e`admin_notification`\u003c/span\u003e (send an email notification with a summary of compromised credentials in new accounts).\n"
                }
            },
            "type": "object",
            "required": [
                "shields"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getAttackProtectionBruteForceProtection:getAttackProtectionBruteForceProtection": {
            "properties": {
                "allowlists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether brute force attack protections are active.\n"
                },
                "maxAttempts": {
                    "type": "integer",
                    "description": "Maximum number of consecutive failed login attempts from a single user before blocking is triggered. Only available on public tenants.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Determines whether the IP address is used when counting failed attempts. Possible values: \u003cspan pulumi-lang-nodejs=\"`countPerIdentifierAndIp`\" pulumi-lang-dotnet=\"`CountPerIdentifierAndIp`\" pulumi-lang-go=\"`countPerIdentifierAndIp`\" pulumi-lang-python=\"`count_per_identifier_and_ip`\" pulumi-lang-yaml=\"`countPerIdentifierAndIp`\" pulumi-lang-java=\"`countPerIdentifierAndIp`\"\u003e`count_per_identifier_and_ip`\u003c/span\u003e (lockout an account from a given IP Address) or \u003cspan pulumi-lang-nodejs=\"`countPerIdentifier`\" pulumi-lang-dotnet=\"`CountPerIdentifier`\" pulumi-lang-go=\"`countPerIdentifier`\" pulumi-lang-python=\"`count_per_identifier`\" pulumi-lang-yaml=\"`countPerIdentifier`\" pulumi-lang-java=\"`countPerIdentifier`\"\u003e`count_per_identifier`\u003c/span\u003e (lockout an account regardless of IP Address).\n"
                },
                "shields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Action to take when a brute force protection threshold is violated. Possible values: \u003cspan pulumi-lang-nodejs=\"`block`\" pulumi-lang-dotnet=\"`Block`\" pulumi-lang-go=\"`block`\" pulumi-lang-python=\"`block`\" pulumi-lang-yaml=\"`block`\" pulumi-lang-java=\"`block`\"\u003e`block`\u003c/span\u003e (block login attempts for a flagged user account), \u003cspan pulumi-lang-nodejs=\"`userNotification`\" pulumi-lang-dotnet=\"`UserNotification`\" pulumi-lang-go=\"`userNotification`\" pulumi-lang-python=\"`user_notification`\" pulumi-lang-yaml=\"`userNotification`\" pulumi-lang-java=\"`userNotification`\"\u003e`user_notification`\u003c/span\u003e (send an email to user when their account has been blocked).\n"
                }
            },
            "type": "object",
            "required": [
                "allowlists",
                "enabled",
                "maxAttempts",
                "mode",
                "shields"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getAttackProtectionSuspiciousIpThrottling:getAttackProtectionSuspiciousIpThrottling": {
            "properties": {
                "allowlists": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether suspicious IP throttling attack protections are active.\n"
                },
                "preLogins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getAttackProtectionSuspiciousIpThrottlingPreLogin:getAttackProtectionSuspiciousIpThrottlingPreLogin"
                    },
                    "description": "Configuration options that apply before every login attempt. Only available on public tenants.\n"
                },
                "preUserRegistrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getAttackProtectionSuspiciousIpThrottlingPreUserRegistration:getAttackProtectionSuspiciousIpThrottlingPreUserRegistration"
                    },
                    "description": "Configuration options that apply before every user registration attempt. Only available on public tenants.\n"
                },
                "shields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Action to take when a suspicious IP throttling threshold is violated. Possible values: \u003cspan pulumi-lang-nodejs=\"`block`\" pulumi-lang-dotnet=\"`Block`\" pulumi-lang-go=\"`block`\" pulumi-lang-python=\"`block`\" pulumi-lang-yaml=\"`block`\" pulumi-lang-java=\"`block`\"\u003e`block`\u003c/span\u003e (throttle traffic from an IP address when there is a high number of login attempts targeting too many different accounts), \u003cspan pulumi-lang-nodejs=\"`adminNotification`\" pulumi-lang-dotnet=\"`AdminNotification`\" pulumi-lang-go=\"`adminNotification`\" pulumi-lang-python=\"`admin_notification`\" pulumi-lang-yaml=\"`adminNotification`\" pulumi-lang-java=\"`adminNotification`\"\u003e`admin_notification`\u003c/span\u003e (send an email notification when traffic is throttled on one or more IP addresses due to high-velocity traffic).\n"
                }
            },
            "type": "object",
            "required": [
                "allowlists",
                "enabled",
                "preLogins",
                "preUserRegistrations",
                "shields"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getAttackProtectionSuspiciousIpThrottlingPreLogin:getAttackProtectionSuspiciousIpThrottlingPreLogin": {
            "properties": {
                "maxAttempts": {
                    "type": "integer",
                    "description": "The maximum number of failed login attempts allowed from a single IP address.\n"
                },
                "rate": {
                    "type": "integer",
                    "description": "Interval of time, given in milliseconds at which new login tokens will become available after they have been used by an IP address. Each login attempt will be added on the defined throttling rate.\n"
                }
            },
            "type": "object",
            "required": [
                "maxAttempts",
                "rate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getAttackProtectionSuspiciousIpThrottlingPreUserRegistration:getAttackProtectionSuspiciousIpThrottlingPreUserRegistration": {
            "properties": {
                "maxAttempts": {
                    "type": "integer",
                    "description": "The maximum number of sign up attempts allowed from a single IP address.\n"
                },
                "rate": {
                    "type": "integer",
                    "description": "Interval of time, given in milliseconds at which new sign up tokens will become available after they have been used by an IP address. Each sign up attempt will be added on the defined throttling rate.\n"
                }
            },
            "type": "object",
            "required": [
                "maxAttempts",
                "rate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingColor:getBrandingColor": {
            "properties": {
                "pageBackground": {
                    "type": "string",
                    "description": "Background color of login pages in hexadecimal.\n"
                },
                "primary": {
                    "type": "string",
                    "description": "Primary button background color in hexadecimal.\n"
                }
            },
            "type": "object",
            "required": [
                "pageBackground",
                "primary"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingFont:getBrandingFont": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "URL for the custom font.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemeBorder:getBrandingThemeBorder": {
            "properties": {
                "buttonBorderRadius": {
                    "type": "number",
                    "description": "Button border radius. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Defaults to `3.0`.\n"
                },
                "buttonBorderWeight": {
                    "type": "number",
                    "description": "Button border weight. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Defaults to `1.0`.\n"
                },
                "buttonsStyle": {
                    "type": "string",
                    "description": "Buttons style. Available options: \u003cspan pulumi-lang-nodejs=\"`pill`\" pulumi-lang-dotnet=\"`Pill`\" pulumi-lang-go=\"`pill`\" pulumi-lang-python=\"`pill`\" pulumi-lang-yaml=\"`pill`\" pulumi-lang-java=\"`pill`\"\u003e`pill`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rounded`\" pulumi-lang-dotnet=\"`Rounded`\" pulumi-lang-go=\"`rounded`\" pulumi-lang-python=\"`rounded`\" pulumi-lang-yaml=\"`rounded`\" pulumi-lang-java=\"`rounded`\"\u003e`rounded`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sharp`\" pulumi-lang-dotnet=\"`Sharp`\" pulumi-lang-go=\"`sharp`\" pulumi-lang-python=\"`sharp`\" pulumi-lang-yaml=\"`sharp`\" pulumi-lang-java=\"`sharp`\"\u003e`sharp`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`rounded`\" pulumi-lang-dotnet=\"`Rounded`\" pulumi-lang-go=\"`rounded`\" pulumi-lang-python=\"`rounded`\" pulumi-lang-yaml=\"`rounded`\" pulumi-lang-java=\"`rounded`\"\u003e`rounded`\u003c/span\u003e.\n"
                },
                "inputBorderRadius": {
                    "type": "number",
                    "description": "Input border radius. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Defaults to `3.0`.\n"
                },
                "inputBorderWeight": {
                    "type": "number",
                    "description": "Input border weight. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`3`\" pulumi-lang-dotnet=\"`3`\" pulumi-lang-go=\"`3`\" pulumi-lang-python=\"`3`\" pulumi-lang-yaml=\"`3`\" pulumi-lang-java=\"`3`\"\u003e`3`\u003c/span\u003e. Defaults to `1.0`.\n"
                },
                "inputsStyle": {
                    "type": "string",
                    "description": "Inputs style. Available options: \u003cspan pulumi-lang-nodejs=\"`pill`\" pulumi-lang-dotnet=\"`Pill`\" pulumi-lang-go=\"`pill`\" pulumi-lang-python=\"`pill`\" pulumi-lang-yaml=\"`pill`\" pulumi-lang-java=\"`pill`\"\u003e`pill`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rounded`\" pulumi-lang-dotnet=\"`Rounded`\" pulumi-lang-go=\"`rounded`\" pulumi-lang-python=\"`rounded`\" pulumi-lang-yaml=\"`rounded`\" pulumi-lang-java=\"`rounded`\"\u003e`rounded`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sharp`\" pulumi-lang-dotnet=\"`Sharp`\" pulumi-lang-go=\"`sharp`\" pulumi-lang-python=\"`sharp`\" pulumi-lang-yaml=\"`sharp`\" pulumi-lang-java=\"`sharp`\"\u003e`sharp`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`rounded`\" pulumi-lang-dotnet=\"`Rounded`\" pulumi-lang-go=\"`rounded`\" pulumi-lang-python=\"`rounded`\" pulumi-lang-yaml=\"`rounded`\" pulumi-lang-java=\"`rounded`\"\u003e`rounded`\u003c/span\u003e.\n"
                },
                "showWidgetShadow": {
                    "type": "boolean",
                    "description": "Show widget shadow. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "widgetBorderWeight": {
                    "type": "number",
                    "description": "Widget border weight. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`10`\" pulumi-lang-dotnet=\"`10`\" pulumi-lang-go=\"`10`\" pulumi-lang-python=\"`10`\" pulumi-lang-yaml=\"`10`\" pulumi-lang-java=\"`10`\"\u003e`10`\u003c/span\u003e. Defaults to `0.0`.\n"
                },
                "widgetCornerRadius": {
                    "type": "number",
                    "description": "Widget corner radius. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`50`\" pulumi-lang-dotnet=\"`50`\" pulumi-lang-go=\"`50`\" pulumi-lang-python=\"`50`\" pulumi-lang-yaml=\"`50`\" pulumi-lang-java=\"`50`\"\u003e`50`\u003c/span\u003e. Defaults to `5.0`.\n"
                }
            },
            "type": "object",
            "required": [
                "buttonBorderRadius",
                "buttonBorderWeight",
                "buttonsStyle",
                "inputBorderRadius",
                "inputBorderWeight",
                "inputsStyle",
                "showWidgetShadow",
                "widgetBorderWeight",
                "widgetCornerRadius"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemeColor:getBrandingThemeColor": {
            "properties": {
                "baseFocusColor": {
                    "type": "string",
                    "description": "Base focus color. Defaults to `#635dff`.\n"
                },
                "baseHoverColor": {
                    "type": "string",
                    "description": "Base hover color. Defaults to `#000000`.\n"
                },
                "bodyText": {
                    "type": "string",
                    "description": "Body text. Defaults to `#1e212a`.\n"
                },
                "captchaWidgetTheme": {
                    "type": "string",
                    "description": "Captcha Widget Theme.\n"
                },
                "error": {
                    "type": "string",
                    "description": "Error. Defaults to `#d03c38`.\n"
                },
                "header": {
                    "type": "string",
                    "description": "Header. Defaults to `#1e212a`.\n"
                },
                "icons": {
                    "type": "string",
                    "description": "Icons. Defaults to `#65676e`.\n"
                },
                "inputBackground": {
                    "type": "string",
                    "description": "Input background. Defaults to `#ffffff`.\n"
                },
                "inputBorder": {
                    "type": "string",
                    "description": "Input border. Defaults to `#c9cace`.\n"
                },
                "inputFilledText": {
                    "type": "string",
                    "description": "Input filled text. Defaults to `#000000`.\n"
                },
                "inputLabelsPlaceholders": {
                    "type": "string",
                    "description": "Input labels \u0026 placeholders. Defaults to `#65676e`.\n"
                },
                "linksFocusedComponents": {
                    "type": "string",
                    "description": "Links \u0026 focused components. Defaults to `#635dff`.\n"
                },
                "primaryButton": {
                    "type": "string",
                    "description": "Primary button. Defaults to `#635dff`.\n"
                },
                "primaryButtonLabel": {
                    "type": "string",
                    "description": "Primary button label. Defaults to `#ffffff`.\n"
                },
                "secondaryButtonBorder": {
                    "type": "string",
                    "description": "Secondary button border. Defaults to `#c9cace`.\n"
                },
                "secondaryButtonLabel": {
                    "type": "string",
                    "description": "Secondary button label. Defaults to `#1e212a`.\n"
                },
                "success": {
                    "type": "string",
                    "description": "Success. Defaults to `#13a688`.\n"
                },
                "widgetBackground": {
                    "type": "string",
                    "description": "Widget background. Defaults to `#ffffff`.\n"
                },
                "widgetBorder": {
                    "type": "string",
                    "description": "Widget border. Defaults to `#c9cace`.\n"
                }
            },
            "type": "object",
            "required": [
                "baseFocusColor",
                "baseHoverColor",
                "bodyText",
                "captchaWidgetTheme",
                "error",
                "header",
                "icons",
                "inputBackground",
                "inputBorder",
                "inputFilledText",
                "inputLabelsPlaceholders",
                "linksFocusedComponents",
                "primaryButton",
                "primaryButtonLabel",
                "secondaryButtonBorder",
                "secondaryButtonLabel",
                "success",
                "widgetBackground",
                "widgetBorder"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemeFont:getBrandingThemeFont": {
            "properties": {
                "bodyTexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getBrandingThemeFontBodyText:getBrandingThemeFontBodyText"
                    },
                    "description": "Body text.\n"
                },
                "buttonsTexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getBrandingThemeFontButtonsText:getBrandingThemeFontButtonsText"
                    },
                    "description": "Buttons text.\n"
                },
                "fontUrl": {
                    "type": "string",
                    "description": "Font URL. Defaults to an empty string.\n"
                },
                "inputLabels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getBrandingThemeFontInputLabel:getBrandingThemeFontInputLabel"
                    },
                    "description": "Input labels.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getBrandingThemeFontLink:getBrandingThemeFontLink"
                    },
                    "description": "Links.\n"
                },
                "linksStyle": {
                    "type": "string",
                    "description": "Links style. Defaults to \u003cspan pulumi-lang-nodejs=\"`normal`\" pulumi-lang-dotnet=\"`Normal`\" pulumi-lang-go=\"`normal`\" pulumi-lang-python=\"`normal`\" pulumi-lang-yaml=\"`normal`\" pulumi-lang-java=\"`normal`\"\u003e`normal`\u003c/span\u003e.\n"
                },
                "referenceTextSize": {
                    "type": "number",
                    "description": "Reference text size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`12`\" pulumi-lang-dotnet=\"`12`\" pulumi-lang-go=\"`12`\" pulumi-lang-python=\"`12`\" pulumi-lang-yaml=\"`12`\" pulumi-lang-java=\"`12`\"\u003e`12`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`24`\" pulumi-lang-dotnet=\"`24`\" pulumi-lang-go=\"`24`\" pulumi-lang-python=\"`24`\" pulumi-lang-yaml=\"`24`\" pulumi-lang-java=\"`24`\"\u003e`24`\u003c/span\u003e. Defaults to `16.0`.\n"
                },
                "subtitles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getBrandingThemeFontSubtitle:getBrandingThemeFontSubtitle"
                    },
                    "description": "Subtitle.\n"
                },
                "titles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getBrandingThemeFontTitle:getBrandingThemeFontTitle"
                    },
                    "description": "Title.\n"
                }
            },
            "type": "object",
            "required": [
                "bodyTexts",
                "buttonsTexts",
                "fontUrl",
                "inputLabels",
                "links",
                "linksStyle",
                "referenceTextSize",
                "subtitles",
                "titles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemeFontBodyText:getBrandingThemeFontBodyText": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Body text bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Body text size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `87.5`.\n"
                }
            },
            "type": "object",
            "required": [
                "bold",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemeFontButtonsText:getBrandingThemeFontButtonsText": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Buttons text bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Buttons text size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `100.0`.\n"
                }
            },
            "type": "object",
            "required": [
                "bold",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemeFontInputLabel:getBrandingThemeFontInputLabel": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Input labels bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Input labels size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `100.0`.\n"
                }
            },
            "type": "object",
            "required": [
                "bold",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemeFontLink:getBrandingThemeFontLink": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Links bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Links size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `87.5`.\n"
                }
            },
            "type": "object",
            "required": [
                "bold",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemeFontSubtitle:getBrandingThemeFontSubtitle": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Subtitle bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Subtitle size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`0`\" pulumi-lang-dotnet=\"`0`\" pulumi-lang-go=\"`0`\" pulumi-lang-python=\"`0`\" pulumi-lang-yaml=\"`0`\" pulumi-lang-java=\"`0`\"\u003e`0`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `87.5`.\n"
                }
            },
            "type": "object",
            "required": [
                "bold",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemeFontTitle:getBrandingThemeFontTitle": {
            "properties": {
                "bold": {
                    "type": "boolean",
                    "description": "Title bold. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "size": {
                    "type": "number",
                    "description": "Title size. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`75`\" pulumi-lang-dotnet=\"`75`\" pulumi-lang-go=\"`75`\" pulumi-lang-python=\"`75`\" pulumi-lang-yaml=\"`75`\" pulumi-lang-java=\"`75`\"\u003e`75`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`150`\" pulumi-lang-dotnet=\"`150`\" pulumi-lang-go=\"`150`\" pulumi-lang-python=\"`150`\" pulumi-lang-yaml=\"`150`\" pulumi-lang-java=\"`150`\"\u003e`150`\u003c/span\u003e. Defaults to `150.0`.\n"
                }
            },
            "type": "object",
            "required": [
                "bold",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemePageBackground:getBrandingThemePageBackground": {
            "properties": {
                "backgroundColor": {
                    "type": "string",
                    "description": "Background color. Defaults to `#000000`.\n"
                },
                "backgroundImageUrl": {
                    "type": "string",
                    "description": "Background image url. Defaults to an empty string.\n"
                },
                "pageLayout": {
                    "type": "string",
                    "description": "Page layout. Available options: \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`left`\" pulumi-lang-dotnet=\"`Left`\" pulumi-lang-go=\"`left`\" pulumi-lang-python=\"`left`\" pulumi-lang-yaml=\"`left`\" pulumi-lang-java=\"`left`\"\u003e`left`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`right`\" pulumi-lang-dotnet=\"`Right`\" pulumi-lang-go=\"`right`\" pulumi-lang-python=\"`right`\" pulumi-lang-yaml=\"`right`\" pulumi-lang-java=\"`right`\"\u003e`right`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "backgroundColor",
                "backgroundImageUrl",
                "pageLayout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingThemeWidget:getBrandingThemeWidget": {
            "properties": {
                "headerTextAlignment": {
                    "type": "string",
                    "description": "Header text alignment. Available options: \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`left`\" pulumi-lang-dotnet=\"`Left`\" pulumi-lang-go=\"`left`\" pulumi-lang-python=\"`left`\" pulumi-lang-yaml=\"`left`\" pulumi-lang-java=\"`left`\"\u003e`left`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`right`\" pulumi-lang-dotnet=\"`Right`\" pulumi-lang-go=\"`right`\" pulumi-lang-python=\"`right`\" pulumi-lang-yaml=\"`right`\" pulumi-lang-java=\"`right`\"\u003e`right`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e.\n"
                },
                "logoHeight": {
                    "type": "number",
                    "description": "Logo height. Value needs to be between \u003cspan pulumi-lang-nodejs=\"`1`\" pulumi-lang-dotnet=\"`1`\" pulumi-lang-go=\"`1`\" pulumi-lang-python=\"`1`\" pulumi-lang-yaml=\"`1`\" pulumi-lang-java=\"`1`\"\u003e`1`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`100`\" pulumi-lang-dotnet=\"`100`\" pulumi-lang-go=\"`100`\" pulumi-lang-python=\"`100`\" pulumi-lang-yaml=\"`100`\" pulumi-lang-java=\"`100`\"\u003e`100`\u003c/span\u003e. Defaults to `52.0`.\n"
                },
                "logoPosition": {
                    "type": "string",
                    "description": "Logo position. Available options: \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`left`\" pulumi-lang-dotnet=\"`Left`\" pulumi-lang-go=\"`left`\" pulumi-lang-python=\"`left`\" pulumi-lang-yaml=\"`left`\" pulumi-lang-java=\"`left`\"\u003e`left`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`right`\" pulumi-lang-dotnet=\"`Right`\" pulumi-lang-go=\"`right`\" pulumi-lang-python=\"`right`\" pulumi-lang-yaml=\"`right`\" pulumi-lang-java=\"`right`\"\u003e`right`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`center`\" pulumi-lang-dotnet=\"`Center`\" pulumi-lang-go=\"`center`\" pulumi-lang-python=\"`center`\" pulumi-lang-yaml=\"`center`\" pulumi-lang-java=\"`center`\"\u003e`center`\u003c/span\u003e.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "Logo url. Defaults to an empty string.\n"
                },
                "socialButtonsLayout": {
                    "type": "string",
                    "description": "Social buttons layout. Available options: \u003cspan pulumi-lang-nodejs=\"`bottom`\" pulumi-lang-dotnet=\"`Bottom`\" pulumi-lang-go=\"`bottom`\" pulumi-lang-python=\"`bottom`\" pulumi-lang-yaml=\"`bottom`\" pulumi-lang-java=\"`bottom`\"\u003e`bottom`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`top`\" pulumi-lang-dotnet=\"`Top`\" pulumi-lang-go=\"`top`\" pulumi-lang-python=\"`top`\" pulumi-lang-yaml=\"`top`\" pulumi-lang-java=\"`top`\"\u003e`top`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`bottom`\" pulumi-lang-dotnet=\"`Bottom`\" pulumi-lang-go=\"`bottom`\" pulumi-lang-python=\"`bottom`\" pulumi-lang-yaml=\"`bottom`\" pulumi-lang-java=\"`bottom`\"\u003e`bottom`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "headerTextAlignment",
                "logoHeight",
                "logoPosition",
                "logoUrl",
                "socialButtonsLayout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getBrandingUniversalLogin:getBrandingUniversalLogin": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The html template for the New Universal Login Experience.\n"
                }
            },
            "type": "object",
            "required": [
                "body"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddon:getClientAddon": {
            "properties": {
                "aws": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonAw:getClientAddonAw"
                    },
                    "description": "AWS Addon configuration.\n"
                },
                "azureBlobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonAzureBlob:getClientAddonAzureBlob"
                    },
                    "description": "Azure Blob Storage Addon configuration.\n"
                },
                "azureSbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonAzureSb:getClientAddonAzureSb"
                    },
                    "description": "Azure Storage Bus Addon configuration.\n"
                },
                "boxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonBox:getClientAddonBox"
                    },
                    "description": "Box SSO indicator (no configuration settings needed for Box SSO).\n"
                },
                "cloudbees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonCloudbee:getClientAddonCloudbee"
                    },
                    "description": "CloudBees SSO indicator (no configuration settings needed for CloudBees SSO).\n"
                },
                "concurs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonConcur:getClientAddonConcur"
                    },
                    "description": "Concur SSO indicator (no configuration settings needed for Concur SSO).\n"
                },
                "dropboxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonDropbox:getClientAddonDropbox"
                    },
                    "description": "Dropbox SSO indicator (no configuration settings needed for Dropbox SSO).\n"
                },
                "echosigns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonEchosign:getClientAddonEchosign"
                    },
                    "description": "Adobe EchoSign SSO configuration.\n"
                },
                "egnytes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonEgnyte:getClientAddonEgnyte"
                    },
                    "description": "Egnyte SSO configuration.\n"
                },
                "firebases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonFirebase:getClientAddonFirebase"
                    },
                    "description": "Google Firebase addon configuration.\n"
                },
                "layers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonLayer:getClientAddonLayer"
                    },
                    "description": "Layer addon configuration.\n"
                },
                "mscrms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonMscrm:getClientAddonMscrm"
                    },
                    "description": "Microsoft Dynamics CRM SSO configuration.\n"
                },
                "newrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonNewrelic:getClientAddonNewrelic"
                    },
                    "description": "New Relic SSO configuration.\n"
                },
                "office365s": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonOffice365:getClientAddonOffice365"
                    },
                    "description": "Microsoft Office 365 SSO configuration.\n"
                },
                "rms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonRm:getClientAddonRm"
                    },
                    "description": "Active Directory Rights Management Service SSO configuration.\n"
                },
                "salesforceApis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSalesforceApi:getClientAddonSalesforceApi"
                    },
                    "description": "Salesforce API addon configuration.\n"
                },
                "salesforceSandboxApis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSalesforceSandboxApi:getClientAddonSalesforceSandboxApi"
                    },
                    "description": "Salesforce Sandbox addon configuration.\n"
                },
                "salesforces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSalesforce:getClientAddonSalesforce"
                    },
                    "description": "Salesforce SSO configuration.\n"
                },
                "samlps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSamlp:getClientAddonSamlp"
                    },
                    "description": "Configuration settings for a SAML add-on.\n"
                },
                "sapApis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSapApi:getClientAddonSapApi"
                    },
                    "description": "SAP API addon configuration.\n"
                },
                "sentries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSentry:getClientAddonSentry"
                    },
                    "description": "Sentry SSO configuration.\n"
                },
                "sharepoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSharepoint:getClientAddonSharepoint"
                    },
                    "description": "SharePoint SSO configuration.\n"
                },
                "slacks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSlack:getClientAddonSlack"
                    },
                    "description": "Slack team or workspace name usually first segment in your Slack URL, for example `https://acme-org.slack.com` would be `acme-org`.\n"
                },
                "springcms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSpringcm:getClientAddonSpringcm"
                    },
                    "description": "SpringCM SSO configuration.\n"
                },
                "ssoIntegrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSsoIntegration:getClientAddonSsoIntegration"
                    },
                    "description": "Generic SSO configuration.\n"
                },
                "wams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonWam:getClientAddonWam"
                    },
                    "description": "Windows Azure Mobile Services addon configuration.\n"
                },
                "wsfeds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonWsfed:getClientAddonWsfed"
                    },
                    "description": "WS-Fed (WIF) addon indicator. Actual configuration is stored in \u003cspan pulumi-lang-nodejs=\"`callback`\" pulumi-lang-dotnet=\"`Callback`\" pulumi-lang-go=\"`callback`\" pulumi-lang-python=\"`callback`\" pulumi-lang-yaml=\"`callback`\" pulumi-lang-java=\"`callback`\"\u003e`callback`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`clientAliases`\" pulumi-lang-dotnet=\"`ClientAliases`\" pulumi-lang-go=\"`clientAliases`\" pulumi-lang-python=\"`client_aliases`\" pulumi-lang-yaml=\"`clientAliases`\" pulumi-lang-java=\"`clientAliases`\"\u003e`client_aliases`\u003c/span\u003e properties on the client.\n"
                },
                "zendesks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonZendesk:getClientAddonZendesk"
                    },
                    "description": "Zendesk SSO configuration.\n"
                },
                "zooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonZoom:getClientAddonZoom"
                    },
                    "description": "Zoom SSO configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "aws",
                "azureBlobs",
                "azureSbs",
                "boxes",
                "cloudbees",
                "concurs",
                "dropboxes",
                "echosigns",
                "egnytes",
                "firebases",
                "layers",
                "mscrms",
                "newrelics",
                "office365s",
                "rms",
                "salesforces",
                "salesforceApis",
                "salesforceSandboxApis",
                "samlps",
                "sapApis",
                "sentries",
                "sharepoints",
                "slacks",
                "springcms",
                "ssoIntegrations",
                "wams",
                "wsfeds",
                "zendesks",
                "zooms"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonAw:getClientAddonAw": {
            "properties": {
                "lifetimeInSeconds": {
                    "type": "integer",
                    "description": "AWS token lifetime in seconds.\n"
                },
                "principal": {
                    "type": "string",
                    "description": "AWS principal ARN, for example `arn:aws:iam::010616021751:saml-provider/idpname`.\n"
                },
                "role": {
                    "type": "string",
                    "description": "AWS role ARN, for example `arn:aws:iam::010616021751:role/foo`.\n"
                }
            },
            "type": "object",
            "required": [
                "lifetimeInSeconds",
                "principal",
                "role"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonAzureBlob:getClientAddonAzureBlob": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Your Azure storage account name. Usually first segment in your Azure storage URL, for example `https://acme-org.blob.core.windows.net` would be the account name `acme-org`.\n"
                },
                "blobDelete": {
                    "type": "boolean",
                    "description": "Indicates if the issued token has permission to delete the blob.\n"
                },
                "blobName": {
                    "type": "string",
                    "description": "Entity to request a token for, such as `my-blob`. If blank the computed SAS will apply to the entire storage container.\n"
                },
                "blobRead": {
                    "type": "boolean",
                    "description": "Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation.\n"
                },
                "blobWrite": {
                    "type": "boolean",
                    "description": "Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account.\n"
                },
                "containerDelete": {
                    "type": "boolean",
                    "description": "Indicates if issued token has permission to delete any blob in the container.\n"
                },
                "containerList": {
                    "type": "boolean",
                    "description": "Indicates if the issued token has permission to list blobs in the container.\n"
                },
                "containerName": {
                    "type": "string",
                    "description": "Container to request a token for, such as `my-container`.\n"
                },
                "containerRead": {
                    "type": "boolean",
                    "description": "Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation.\n"
                },
                "containerWrite": {
                    "type": "boolean",
                    "description": "Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account.\n"
                },
                "expiration": {
                    "type": "integer",
                    "description": "Expiration in minutes for the generated token (default of 5 minutes).\n"
                },
                "signedIdentifier": {
                    "type": "string",
                    "description": "Shared access policy identifier defined in your storage account resource.\n"
                },
                "storageAccessKey": {
                    "type": "string",
                    "description": "Access key associated with this storage account.\n"
                }
            },
            "type": "object",
            "required": [
                "accountName",
                "blobDelete",
                "blobName",
                "blobRead",
                "blobWrite",
                "containerDelete",
                "containerList",
                "containerName",
                "containerRead",
                "containerWrite",
                "expiration",
                "signedIdentifier",
                "storageAccessKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonAzureSb:getClientAddonAzureSb": {
            "properties": {
                "entityPath": {
                    "type": "string",
                    "description": "Entity you want to request a token for, such as `my-queue`.\n"
                },
                "expiration": {
                    "type": "integer",
                    "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "Your Azure Service Bus namespace. Usually the first segment of your Service Bus URL (for example `https://acme-org.servicebus.windows.net` would be `acme-org`).\n"
                },
                "sasKey": {
                    "type": "string",
                    "description": "Primary Key associated with your shared access policy.\n"
                },
                "sasKeyName": {
                    "type": "string",
                    "description": "Your shared access policy name defined in your Service Bus entity.\n"
                }
            },
            "type": "object",
            "required": [
                "entityPath",
                "expiration",
                "namespace",
                "sasKey",
                "sasKeyName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonBox:getClientAddonBox": {
            "type": "object"
        },
        "auth0:index/getClientAddonCloudbee:getClientAddonCloudbee": {
            "type": "object"
        },
        "auth0:index/getClientAddonConcur:getClientAddonConcur": {
            "type": "object"
        },
        "auth0:index/getClientAddonDropbox:getClientAddonDropbox": {
            "type": "object"
        },
        "auth0:index/getClientAddonEchosign:getClientAddonEchosign": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Your custom domain found in your EchoSign URL, for example `https://acme-org.echosign.com` would be `acme-org`.\n"
                }
            },
            "type": "object",
            "required": [
                "domain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonEgnyte:getClientAddonEgnyte": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Your custom domain found in your Egnyte URL, for example `https://acme-org.echosign.com` would be `acme-org`.\n"
                }
            },
            "type": "object",
            "required": [
                "domain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonFirebase:getClientAddonFirebase": {
            "properties": {
                "clientEmail": {
                    "type": "string",
                    "description": "ID of the Service Account you have created (shown as \u003cspan pulumi-lang-nodejs=\"`clientEmail`\" pulumi-lang-dotnet=\"`ClientEmail`\" pulumi-lang-go=\"`clientEmail`\" pulumi-lang-python=\"`client_email`\" pulumi-lang-yaml=\"`clientEmail`\" pulumi-lang-java=\"`clientEmail`\"\u003e`client_email`\u003c/span\u003e in the generated JSON file, SDK v3+ tokens only).\n"
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "description": "Optional expiration in seconds for the generated token. Defaults to 3600 seconds (SDK v3+ tokens only).\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Private Key for signing the token (SDK v3+ tokens only).\n"
                },
                "privateKeyId": {
                    "type": "string",
                    "description": "Optional ID of the private key to obtain the \u003cspan pulumi-lang-nodejs=\"`kid`\" pulumi-lang-dotnet=\"`Kid`\" pulumi-lang-go=\"`kid`\" pulumi-lang-python=\"`kid`\" pulumi-lang-yaml=\"`kid`\" pulumi-lang-java=\"`kid`\"\u003e`kid`\u003c/span\u003e header claim from the issued token (SDK v3+ tokens only).\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Google Firebase Secret. (SDK v2 only).\n"
                }
            },
            "type": "object",
            "required": [
                "clientEmail",
                "lifetimeInSeconds",
                "privateKey",
                "privateKeyId",
                "secret"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonLayer:getClientAddonLayer": {
            "properties": {
                "expiration": {
                    "type": "integer",
                    "description": "Optional expiration in minutes for the generated token. Defaults to 5 minutes.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "Authentication Key identifier used to sign the Layer token.\n"
                },
                "principal": {
                    "type": "string",
                    "description": "Name of the property used as the unique user ID in Layer. If not specified \u003cspan pulumi-lang-nodejs=\"`userId`\" pulumi-lang-dotnet=\"`UserId`\" pulumi-lang-go=\"`userId`\" pulumi-lang-python=\"`user_id`\" pulumi-lang-yaml=\"`userId`\" pulumi-lang-java=\"`userId`\"\u003e`user_id`\u003c/span\u003e is used.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "Private key for signing the Layer token.\n"
                },
                "providerId": {
                    "type": "string",
                    "description": "Provider ID of your Layer account.\n"
                }
            },
            "type": "object",
            "required": [
                "expiration",
                "keyId",
                "principal",
                "privateKey",
                "providerId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonMscrm:getClientAddonMscrm": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Microsoft Dynamics CRM application URL.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonNewrelic:getClientAddonNewrelic": {
            "properties": {
                "account": {
                    "type": "string",
                    "description": "Your New Relic Account ID found in your New Relic URL after the `/accounts/` path, for example `https://rpm.newrelic.com/accounts/123456/query` would be \u003cspan pulumi-lang-nodejs=\"`123456`\" pulumi-lang-dotnet=\"`123456`\" pulumi-lang-go=\"`123456`\" pulumi-lang-python=\"`123456`\" pulumi-lang-yaml=\"`123456`\" pulumi-lang-java=\"`123456`\"\u003e`123456`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "account"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonOffice365:getClientAddonOffice365": {
            "properties": {
                "connection": {
                    "type": "string",
                    "description": "Optional Auth0 database connection for testing an already-configured Office 365 tenant.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Your Office 365 domain name, for example `acme-org.com`.\n"
                }
            },
            "type": "object",
            "required": [
                "connection",
                "domain"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonRm:getClientAddonRm": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "URL of your Rights Management Server. It can be internal or external, but users will have to be able to reach it.\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSalesforce:getClientAddonSalesforce": {
            "properties": {
                "entityId": {
                    "type": "string",
                    "description": "Arbitrary logical URL that identifies the Saleforce resource, for example `https://acme-org.com`.\n"
                }
            },
            "type": "object",
            "required": [
                "entityId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSalesforceApi:getClientAddonSalesforceApi": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Consumer Key assigned by Salesforce to the Connected App.\n"
                },
                "communityName": {
                    "type": "string",
                    "description": "Community name.\n"
                },
                "communityUrlSection": {
                    "type": "string",
                    "description": "Community URL section.\n"
                },
                "principal": {
                    "type": "string",
                    "description": "Name of the property in the user object that maps to a Salesforce username, for example \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "communityName",
                "communityUrlSection",
                "principal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSalesforceSandboxApi:getClientAddonSalesforceSandboxApi": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "Consumer Key assigned by Salesforce to the Connected App.\n"
                },
                "communityName": {
                    "type": "string",
                    "description": "Community name.\n"
                },
                "communityUrlSection": {
                    "type": "string",
                    "description": "Community URL section.\n"
                },
                "principal": {
                    "type": "string",
                    "description": "Name of the property in the user object that maps to a Salesforce username, for example \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "communityName",
                "communityUrlSection",
                "principal"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSamlp:getClientAddonSamlp": {
            "properties": {
                "audience": {
                    "type": "string",
                    "description": "Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.\n"
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "Class reference of the authentication context.\n"
                },
                "binding": {
                    "type": "string",
                    "description": "Protocol binding used for SAML logout responses.\n"
                },
                "createUpnClaim": {
                    "type": "boolean",
                    "description": "Indicates whether a UPN claim should be created. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination of the SAML Response. If not specified, it will be `AssertionConsumerUrl` of SAMLRequest or callback URL if there was no SAMLRequest.\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Algorithm used to calculate the digest of the SAML Assertion or response. Options include \u003cspan pulumi-lang-nodejs=\"`sha1`\" pulumi-lang-dotnet=\"`Sha1`\" pulumi-lang-go=\"`sha1`\" pulumi-lang-python=\"`sha1`\" pulumi-lang-yaml=\"`sha1`\" pulumi-lang-java=\"`sha1`\"\u003e`sha1`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`sha256`\" pulumi-lang-dotnet=\"`Sha256`\" pulumi-lang-go=\"`sha256`\" pulumi-lang-python=\"`sha256`\" pulumi-lang-yaml=\"`sha256`\" pulumi-lang-java=\"`sha256`\"\u003e`sha256`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`sha1`\" pulumi-lang-dotnet=\"`Sha1`\" pulumi-lang-go=\"`sha1`\" pulumi-lang-python=\"`sha1`\" pulumi-lang-yaml=\"`sha1`\" pulumi-lang-java=\"`sha1`\"\u003e`sha1`\u003c/span\u003e.\n"
                },
                "flexibleMappings": {
                    "type": "string",
                    "description": "This is a supporting attribute to \u003cspan pulumi-lang-nodejs=\"`mappings`\" pulumi-lang-dotnet=\"`Mappings`\" pulumi-lang-go=\"`mappings`\" pulumi-lang-python=\"`mappings`\" pulumi-lang-yaml=\"`mappings`\" pulumi-lang-java=\"`mappings`\"\u003e`mappings`\u003c/span\u003e field.Please note this is an experimental field. It should only be used when needed to send a map with keys as slices.\n"
                },
                "includeAttributeNameFormat": {
                    "type": "boolean",
                    "description": "Indicates whether or not we should infer the NameFormat based on the attribute name. If set to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e, the attribute NameFormat is not set in the assertion. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "Issuer of the SAML Assertion.\n"
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "description": "Number of seconds during which the token is valid. Defaults to \u003cspan pulumi-lang-nodejs=\"`3600`\" pulumi-lang-dotnet=\"`3600`\" pulumi-lang-go=\"`3600`\" pulumi-lang-python=\"`3600`\" pulumi-lang-yaml=\"`3600`\" pulumi-lang-java=\"`3600`\"\u003e`3600`\u003c/span\u003e seconds.\n"
                },
                "logouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientAddonSamlpLogout:getClientAddonSamlpLogout"
                    },
                    "description": "Configuration settings for logout.\n"
                },
                "mapIdentities": {
                    "type": "boolean",
                    "description": "Indicates whether or not to add additional identity information in the token, such as the provider used and the \u003cspan pulumi-lang-nodejs=\"`accessToken`\" pulumi-lang-dotnet=\"`AccessToken`\" pulumi-lang-go=\"`accessToken`\" pulumi-lang-python=\"`access_token`\" pulumi-lang-yaml=\"`accessToken`\" pulumi-lang-java=\"`accessToken`\"\u003e`access_token`\u003c/span\u003e, if available. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "mapUnknownClaimsAsIs": {
                    "type": "boolean",
                    "description": "Indicates whether to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e.\n"
                },
                "mappings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Mappings between the Auth0 user profile property name (\u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e) and the output attributes on the SAML attribute in the assertion (\u003cspan pulumi-lang-nodejs=\"`value`\" pulumi-lang-dotnet=\"`Value`\" pulumi-lang-go=\"`value`\" pulumi-lang-python=\"`value`\" pulumi-lang-yaml=\"`value`\" pulumi-lang-java=\"`value`\"\u003e`value`\u003c/span\u003e).\n"
                },
                "nameIdentifierFormat": {
                    "type": "string",
                    "description": "Format of the name identifier. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.\n"
                },
                "nameIdentifierProbes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.\n"
                },
                "passthroughClaimsWithNoMapping": {
                    "type": "boolean",
                    "description": "Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "recipient": {
                    "type": "string",
                    "description": "Recipient of the SAML Assertion (SubjectConfirmationData). Default is `AssertionConsumerUrl` on SAMLRequest or callback URL if no SAMLRequest was sent.\n"
                },
                "signResponse": {
                    "type": "boolean",
                    "description": "Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`. Defaults to `rsa-sha1`.\n"
                },
                "signingCert": {
                    "type": "string",
                    "description": "Optionally indicates the public key certificate used to validate SAML requests. If set, SAML requests will be required to be signed. A sample value would be `-----BEGIN PUBLIC KEY-----\\nMIGf...bpP/t3\\n+JGNGIRMj1hF1rnb6QIDAQAB\\n-----END PUBLIC KEY-----\\n`.\n"
                },
                "typedAttributes": {
                    "type": "boolean",
                    "description": "Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e, all `xs:type` are `xs:anyType`. Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "audience",
                "authnContextClassRef",
                "binding",
                "createUpnClaim",
                "destination",
                "digestAlgorithm",
                "flexibleMappings",
                "includeAttributeNameFormat",
                "issuer",
                "lifetimeInSeconds",
                "logouts",
                "mapIdentities",
                "mapUnknownClaimsAsIs",
                "mappings",
                "nameIdentifierFormat",
                "nameIdentifierProbes",
                "passthroughClaimsWithNoMapping",
                "recipient",
                "signResponse",
                "signatureAlgorithm",
                "signingCert",
                "typedAttributes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSamlpLogout:getClientAddonSamlpLogout": {
            "properties": {
                "callback": {
                    "type": "string",
                    "description": "The service provider (client application)'s Single Logout Service URL, where Auth0 will send logout requests and responses.\n"
                },
                "sloEnabled": {
                    "type": "boolean",
                    "description": "Controls whether Auth0 should notify service providers of session termination.\n"
                }
            },
            "type": "object",
            "required": [
                "callback",
                "sloEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSapApi:getClientAddonSapApi": {
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "If activated in the OAuth 2.0 client configuration (transaction `SOAUTH2) the SAML attribute \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e must be set and equal the \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e form parameter of the access token request.\n"
                },
                "nameIdentifierFormat": {
                    "type": "string",
                    "description": "NameID element of the Subject which can be used to express the user's identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "Requested scope for SAP APIs.\n"
                },
                "servicePassword": {
                    "type": "string",
                    "description": "Service account password to use to authenticate API calls to the token endpoint.\n"
                },
                "tokenEndpointUrl": {
                    "type": "string",
                    "description": "The OAuth2 token endpoint URL of your SAP OData server.\n"
                },
                "usernameAttribute": {
                    "type": "string",
                    "description": "Name of the property in the user object that maps to a SAP username, for example \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "clientId",
                "nameIdentifierFormat",
                "scope",
                "servicePassword",
                "tokenEndpointUrl",
                "usernameAttribute"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSentry:getClientAddonSentry": {
            "properties": {
                "baseUrl": {
                    "type": "string",
                    "description": "URL prefix only if running Sentry Community Edition, otherwise leave empty.\n"
                },
                "orgSlug": {
                    "type": "string",
                    "description": "Generated slug for your Sentry organization. Found in your Sentry URL, for example `https://sentry.acme.com/acme-org/` would be `acme-org`.\n"
                }
            },
            "type": "object",
            "required": [
                "baseUrl",
                "orgSlug"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSharepoint:getClientAddonSharepoint": {
            "properties": {
                "externalUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "External SharePoint application URLs if exposed to the Internet.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Internal SharePoint application URL.\n"
                }
            },
            "type": "object",
            "required": [
                "externalUrls",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSlack:getClientAddonSlack": {
            "properties": {
                "team": {
                    "type": "string",
                    "description": "Slack team name.\n"
                }
            },
            "type": "object",
            "required": [
                "team"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSpringcm:getClientAddonSpringcm": {
            "properties": {
                "acsUrl": {
                    "type": "string",
                    "description": "SpringCM ACS URL, for example `https://na11.springcm.com/atlas/sso/SSOEndpoint.ashx`.\n"
                }
            },
            "type": "object",
            "required": [
                "acsUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonSsoIntegration:getClientAddonSsoIntegration": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "SSO integration name.\n"
                },
                "version": {
                    "type": "string",
                    "description": "SSO integration version installed.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonWam:getClientAddonWam": {
            "properties": {
                "masterKey": {
                    "type": "string",
                    "description": "Your master key for Windows Azure Mobile Services.\n"
                }
            },
            "type": "object",
            "required": [
                "masterKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonWsfed:getClientAddonWsfed": {
            "type": "object"
        },
        "auth0:index/getClientAddonZendesk:getClientAddonZendesk": {
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Zendesk account name. Usually the first segment in your Zendesk URL, for example `https://acme-org.zendesk.com` would be `acme-org`.\n"
                }
            },
            "type": "object",
            "required": [
                "accountName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientAddonZoom:getClientAddonZoom": {
            "properties": {
                "account": {
                    "type": "string",
                    "description": "Zoom account name. Usually the first segment of your Zoom URL, for example `https://acme-org.zoom.us` would be `acme-org`.\n"
                }
            },
            "type": "object",
            "required": [
                "account"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientClientAuthenticationMethod:getClientClientAuthenticationMethod": {
            "properties": {
                "privateKeyJwts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientClientAuthenticationMethodPrivateKeyJwt:getClientClientAuthenticationMethodPrivateKeyJwt"
                    },
                    "description": "If this is defined, the client is enabled to use the Private Key JWT authentication method.\n"
                },
                "selfSignedTlsClientAuths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientClientAuthenticationMethodSelfSignedTlsClientAuth:getClientClientAuthenticationMethodSelfSignedTlsClientAuth"
                    },
                    "description": "If this is defined, the client is enabled to use the mTLS authentication method utilizing a self-signed certificate.\n"
                },
                "tlsClientAuths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientClientAuthenticationMethodTlsClientAuth:getClientClientAuthenticationMethodTlsClientAuth"
                    },
                    "description": "If this is defined, the client is enabled to use the CA-based mTLS authentication method.\n"
                }
            },
            "type": "object",
            "required": [
                "privateKeyJwts",
                "selfSignedTlsClientAuths",
                "tlsClientAuths"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientClientAuthenticationMethodPrivateKeyJwt:getClientClientAuthenticationMethodPrivateKeyJwt": {
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientClientAuthenticationMethodPrivateKeyJwtCredential:getClientClientAuthenticationMethodPrivateKeyJwtCredential"
                    },
                    "description": "Credentials that will be enabled on the client for Private Key JWT authentication.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientClientAuthenticationMethodPrivateKeyJwtCredential:getClientClientAuthenticationMethodPrivateKeyJwtCredential": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm which will be used with the credential. Can be one of `RS256`, `RS384`, `PS256`. If not specified, `RS256` will be used.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was created.\n"
                },
                "credentialType": {
                    "type": "string",
                    "description": "Credential type. Supported types: \u003cspan pulumi-lang-nodejs=\"`publicKey`\" pulumi-lang-dotnet=\"`PublicKey`\" pulumi-lang-go=\"`publicKey`\" pulumi-lang-python=\"`public_key`\" pulumi-lang-yaml=\"`publicKey`\" pulumi-lang-java=\"`publicKey`\"\u003e`public_key`\u003c/span\u003e.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date representing the expiration of the credential.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the client credential.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "The key identifier of the credential, generated on creation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name for a credential.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was updated.\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "createdAt",
                "credentialType",
                "expiresAt",
                "id",
                "keyId",
                "name",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientClientAuthenticationMethodSelfSignedTlsClientAuth:getClientClientAuthenticationMethodSelfSignedTlsClientAuth": {
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientClientAuthenticationMethodSelfSignedTlsClientAuthCredential:getClientClientAuthenticationMethodSelfSignedTlsClientAuthCredential"
                    },
                    "description": "Credentials that will be enabled on the client for mTLS authentication utilizing self-signed certificates.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientClientAuthenticationMethodSelfSignedTlsClientAuthCredential:getClientClientAuthenticationMethodSelfSignedTlsClientAuthCredential": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was created.\n"
                },
                "credentialType": {
                    "type": "string",
                    "description": "Credential type. Supported types: \u003cspan pulumi-lang-nodejs=\"`x509Cert`\" pulumi-lang-dotnet=\"`X509Cert`\" pulumi-lang-go=\"`x509Cert`\" pulumi-lang-python=\"`x509_cert`\" pulumi-lang-yaml=\"`x509Cert`\" pulumi-lang-java=\"`x509Cert`\"\u003e`x509_cert`\u003c/span\u003e.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the client credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name for a credential.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was updated.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "credentialType",
                "id",
                "name",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientClientAuthenticationMethodTlsClientAuth:getClientClientAuthenticationMethodTlsClientAuth": {
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientClientAuthenticationMethodTlsClientAuthCredential:getClientClientAuthenticationMethodTlsClientAuthCredential"
                    },
                    "description": "Credentials that will be enabled on the client for CA-based mTLS authentication.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientClientAuthenticationMethodTlsClientAuthCredential:getClientClientAuthenticationMethodTlsClientAuthCredential": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was created.\n"
                },
                "credentialType": {
                    "type": "string",
                    "description": "Credential type. Supported types: \u003cspan pulumi-lang-nodejs=\"`certSubjectDn`\" pulumi-lang-dotnet=\"`CertSubjectDn`\" pulumi-lang-go=\"`certSubjectDn`\" pulumi-lang-python=\"`cert_subject_dn`\" pulumi-lang-yaml=\"`certSubjectDn`\" pulumi-lang-java=\"`certSubjectDn`\"\u003e`cert_subject_dn`\u003c/span\u003e.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the client credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name for a credential.\n"
                },
                "subjectDn": {
                    "type": "string",
                    "description": "Subject Distinguished Name. Mutually exlusive with \u003cspan pulumi-lang-nodejs=\"`pem`\" pulumi-lang-dotnet=\"`Pem`\" pulumi-lang-go=\"`pem`\" pulumi-lang-python=\"`pem`\" pulumi-lang-yaml=\"`pem`\" pulumi-lang-java=\"`pem`\"\u003e`pem`\u003c/span\u003e property.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was updated.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "credentialType",
                "id",
                "name",
                "subjectDn",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientDefaultOrganization:getClientDefaultOrganization": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "If set, the \u003cspan pulumi-lang-nodejs=\"`defaultOrganization`\" pulumi-lang-dotnet=\"`DefaultOrganization`\" pulumi-lang-go=\"`defaultOrganization`\" pulumi-lang-python=\"`default_organization`\" pulumi-lang-yaml=\"`defaultOrganization`\" pulumi-lang-java=\"`defaultOrganization`\"\u003e`default_organization`\u003c/span\u003e will be removed.\n"
                },
                "flows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Definition of the flow that needs to be configured. Eg. client_credentials\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The unique identifier of the organization\n"
                }
            },
            "type": "object",
            "required": [
                "disable",
                "flows",
                "organizationId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientGrantsClientGrant:getClientGrantsClientGrant": {
            "properties": {
                "audience": {
                    "type": "string",
                    "description": "The audience of the client grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID associated with the grant.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the client grant.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of granted scopes.\n"
                },
                "subjectType": {
                    "type": "string",
                    "description": "The subject type (usually 'client').\n"
                }
            },
            "type": "object",
            "required": [
                "audience",
                "clientId",
                "id",
                "scopes",
                "subjectType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientJwtConfiguration:getClientJwtConfiguration": {
            "properties": {
                "alg": {
                    "type": "string",
                    "description": "Algorithm used to sign JWTs. Can be one of `HS256`, `RS256`, `PS256`.\n"
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "description": "Number of seconds during which the JWT will be valid.\n"
                },
                "scopes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Permissions (scopes) included in JWTs.\n"
                },
                "secretEncoded": {
                    "type": "boolean",
                    "description": "Indicates whether the client secret is Base64-encoded.\n"
                }
            },
            "type": "object",
            "required": [
                "alg",
                "lifetimeInSeconds",
                "scopes",
                "secretEncoded"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientMobile:getClientMobile": {
            "properties": {
                "androids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientMobileAndroid:getClientMobileAndroid"
                    },
                    "description": "Configuration settings for Android native apps.\n"
                },
                "ios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientMobileIo:getClientMobileIo"
                    },
                    "description": "Configuration settings for i0S native apps.\n"
                }
            },
            "type": "object",
            "required": [
                "androids",
                "ios"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientMobileAndroid:getClientMobileAndroid": {
            "properties": {
                "appPackageName": {
                    "type": "string"
                },
                "sha256CertFingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "appPackageName",
                "sha256CertFingerprints"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientMobileIo:getClientMobileIo": {
            "properties": {
                "appBundleIdentifier": {
                    "type": "string"
                },
                "teamId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "appBundleIdentifier",
                "teamId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientNativeSocialLogin:getClientNativeSocialLogin": {
            "properties": {
                "apples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientNativeSocialLoginApple:getClientNativeSocialLoginApple"
                    }
                },
                "facebooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientNativeSocialLoginFacebook:getClientNativeSocialLoginFacebook"
                    }
                },
                "googles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientNativeSocialLoginGoogle:getClientNativeSocialLoginGoogle"
                    }
                }
            },
            "type": "object",
            "required": [
                "apples",
                "facebooks",
                "googles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientNativeSocialLoginApple:getClientNativeSocialLoginApple": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientNativeSocialLoginFacebook:getClientNativeSocialLoginFacebook": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientNativeSocialLoginGoogle:getClientNativeSocialLoginGoogle": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientOidcLogout:getClientOidcLogout": {
            "properties": {
                "backchannelLogoutInitiators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientOidcLogoutBackchannelLogoutInitiator:getClientOidcLogoutBackchannelLogoutInitiator"
                    },
                    "description": "Configure OIDC logout initiators for the Client\n"
                },
                "backchannelLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.\n"
                }
            },
            "type": "object",
            "required": [
                "backchannelLogoutInitiators",
                "backchannelLogoutUrls"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientOidcLogoutBackchannelLogoutInitiator:getClientOidcLogoutBackchannelLogoutInitiator": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "Determines the configuration method for enabling initiators. \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e enables only the initiators listed in the\u003cspan pulumi-lang-nodejs=\" backchannelLogoutSelectedInitiators \" pulumi-lang-dotnet=\" BackchannelLogoutSelectedInitiators \" pulumi-lang-go=\" backchannelLogoutSelectedInitiators \" pulumi-lang-python=\" backchannel_logout_selected_initiators \" pulumi-lang-yaml=\" backchannelLogoutSelectedInitiators \" pulumi-lang-java=\" backchannelLogoutSelectedInitiators \"\u003e backchannel_logout_selected_initiators \u003c/span\u003eset, \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e enables all current and future initiators.\n"
                },
                "selectedInitiators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Contains the list of initiators to be enabled for the given client.\n"
                }
            },
            "type": "object",
            "required": [
                "mode",
                "selectedInitiators"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientRefreshToken:getClientRefreshToken": {
            "properties": {
                "expirationType": {
                    "type": "string",
                    "description": "Options include \u003cspan pulumi-lang-nodejs=\"`expiring`\" pulumi-lang-dotnet=\"`Expiring`\" pulumi-lang-go=\"`expiring`\" pulumi-lang-python=\"`expiring`\" pulumi-lang-yaml=\"`expiring`\" pulumi-lang-java=\"`expiring`\"\u003e`expiring`\u003c/span\u003e, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is \u003cspan pulumi-lang-nodejs=\"`rotating`\" pulumi-lang-dotnet=\"`Rotating`\" pulumi-lang-go=\"`rotating`\" pulumi-lang-python=\"`rotating`\" pulumi-lang-yaml=\"`rotating`\" pulumi-lang-java=\"`rotating`\"\u003e`rotating`\u003c/span\u003e, this must be set to \u003cspan pulumi-lang-nodejs=\"`expiring`\" pulumi-lang-dotnet=\"`Expiring`\" pulumi-lang-go=\"`expiring`\" pulumi-lang-python=\"`expiring`\" pulumi-lang-yaml=\"`expiring`\" pulumi-lang-java=\"`expiring`\"\u003e`expiring`\u003c/span\u003e.\n"
                },
                "idleTokenLifetime": {
                    "type": "integer",
                    "description": "The time in seconds after which inactive refresh tokens will expire.\n"
                },
                "infiniteIdleTokenLifetime": {
                    "type": "boolean",
                    "description": "Whether inactive refresh tokens should remain valid indefinitely.\n"
                },
                "infiniteTokenLifetime": {
                    "type": "boolean",
                    "description": "Whether refresh tokens should remain valid indefinitely. If false, \u003cspan pulumi-lang-nodejs=\"`tokenLifetime`\" pulumi-lang-dotnet=\"`TokenLifetime`\" pulumi-lang-go=\"`tokenLifetime`\" pulumi-lang-python=\"`token_lifetime`\" pulumi-lang-yaml=\"`tokenLifetime`\" pulumi-lang-java=\"`tokenLifetime`\"\u003e`token_lifetime`\u003c/span\u003e should also be set.\n"
                },
                "leeway": {
                    "type": "integer",
                    "description": "The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientRefreshTokenPolicy:getClientRefreshTokenPolicy"
                    },
                    "description": "A collection of policies governing multi-resource refresh token exchange (MRRT), defining how refresh tokens can be used across different resource servers\n"
                },
                "rotationType": {
                    "type": "string",
                    "description": "Options include \u003cspan pulumi-lang-nodejs=\"`rotating`\" pulumi-lang-dotnet=\"`Rotating`\" pulumi-lang-go=\"`rotating`\" pulumi-lang-python=\"`rotating`\" pulumi-lang-yaml=\"`rotating`\" pulumi-lang-java=\"`rotating`\"\u003e`rotating`\u003c/span\u003e, `non-rotating`. When \u003cspan pulumi-lang-nodejs=\"`rotating`\" pulumi-lang-dotnet=\"`Rotating`\" pulumi-lang-go=\"`rotating`\" pulumi-lang-python=\"`rotating`\" pulumi-lang-yaml=\"`rotating`\" pulumi-lang-java=\"`rotating`\"\u003e`rotating`\u003c/span\u003e, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.\n"
                },
                "tokenLifetime": {
                    "type": "integer",
                    "description": "The absolute lifetime of a refresh token in seconds.\n"
                }
            },
            "type": "object",
            "required": [
                "expirationType",
                "idleTokenLifetime",
                "infiniteIdleTokenLifetime",
                "infiniteTokenLifetime",
                "leeway",
                "policies",
                "rotationType",
                "tokenLifetime"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientRefreshTokenPolicy:getClientRefreshTokenPolicy": {
            "properties": {
                "audience": {
                    "type": "string",
                    "description": "The identifier of the resource server to which the Multi Resource Refresh Token Policy applies\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The resource server permissions granted under the Multi Resource Refresh Token Policy, defining the context in which an access token can be used\n"
                }
            },
            "type": "object",
            "required": [
                "audience",
                "scopes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientSessionTransfer:getClientSessionTransfer": {
            "properties": {
                "allowRefreshToken": {
                    "type": "boolean",
                    "description": "Indicates whether the application is allowed to use a refresh token when using a\u003cspan pulumi-lang-nodejs=\" sessionTransferToken \" pulumi-lang-dotnet=\" SessionTransferToken \" pulumi-lang-go=\" sessionTransferToken \" pulumi-lang-python=\" session_transfer_token \" pulumi-lang-yaml=\" sessionTransferToken \" pulumi-lang-java=\" sessionTransferToken \"\u003e session_transfer_token \u003c/span\u003esession.\n"
                },
                "allowedAuthenticationMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "canCreateSessionTransferToken": {
                    "type": "boolean",
                    "description": "Indicates whether the application(Native app) can use the Token Exchange endpoint to create a session_transfer_token\n"
                },
                "enforceCascadeRevocation": {
                    "type": "boolean",
                    "description": "Indicates whether Refresh Tokens created during a native-to-web session are tied to that session's lifetime. This determines if such refresh tokens should be automatically revoked when their corresponding sessions are.\n"
                },
                "enforceDeviceBinding": {
                    "type": "string",
                    "description": "Configures the level of device binding enforced when a\u003cspan pulumi-lang-nodejs=\" sessionTransferToken \" pulumi-lang-dotnet=\" SessionTransferToken \" pulumi-lang-go=\" sessionTransferToken \" pulumi-lang-python=\" session_transfer_token \" pulumi-lang-yaml=\" sessionTransferToken \" pulumi-lang-java=\" sessionTransferToken \"\u003e session_transfer_token \u003c/span\u003eis consumed. Can be one of \u003cspan pulumi-lang-nodejs=\"`ip`\" pulumi-lang-dotnet=\"`Ip`\" pulumi-lang-go=\"`ip`\" pulumi-lang-python=\"`ip`\" pulumi-lang-yaml=\"`ip`\" pulumi-lang-java=\"`ip`\"\u003e`ip`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`asn`\" pulumi-lang-dotnet=\"`Asn`\" pulumi-lang-go=\"`asn`\" pulumi-lang-python=\"`asn`\" pulumi-lang-yaml=\"`asn`\" pulumi-lang-java=\"`asn`\"\u003e`asn`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e.\n"
                },
                "enforceOnlineRefreshTokens": {
                    "type": "boolean",
                    "description": "Indicates whether revoking the parent Refresh Token that initiated a Native to Web flow and was used to issue a Session Transfer Token should trigger a cascade revocation affecting its dependent child entities.\n"
                }
            },
            "type": "object",
            "required": [
                "allowRefreshToken",
                "allowedAuthenticationMethods",
                "canCreateSessionTransferToken",
                "enforceCascadeRevocation",
                "enforceDeviceBinding",
                "enforceOnlineRefreshTokens"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientSignedRequestObject:getClientSignedRequestObject": {
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientSignedRequestObjectCredential:getClientSignedRequestObjectCredential"
                    },
                    "description": "Credentials that will be enabled on the client for JWT-secured authorization requests.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Require JWT-secured authorization requests.\n"
                }
            },
            "type": "object",
            "required": [
                "credentials",
                "required"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientSignedRequestObjectCredential:getClientSignedRequestObjectCredential": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm which will be used with the credential. Can be one of `RS256`, `RS384`, `PS256`. If not specified, `RS256` will be used.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was created.\n"
                },
                "credentialType": {
                    "type": "string",
                    "description": "Credential type. Supported types: \u003cspan pulumi-lang-nodejs=\"`publicKey`\" pulumi-lang-dotnet=\"`PublicKey`\" pulumi-lang-go=\"`publicKey`\" pulumi-lang-python=\"`public_key`\" pulumi-lang-yaml=\"`publicKey`\" pulumi-lang-java=\"`publicKey`\"\u003e`public_key`\u003c/span\u003e.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date representing the expiration of the credential.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the client credential.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "The key identifier of the credential, generated on creation.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name for a credential.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was updated.\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "createdAt",
                "credentialType",
                "expiresAt",
                "id",
                "keyId",
                "name",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientTokenExchange:getClientTokenExchange": {
            "properties": {
                "allowAnyProfileOfTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed profile types for token exchange\n"
                }
            },
            "type": "object",
            "required": [
                "allowAnyProfileOfTypes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientTokenQuota:getClientTokenQuota": {
            "properties": {
                "clientCredentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientTokenQuotaClientCredential:getClientTokenQuotaClientCredential"
                    },
                    "description": "The token quota configuration for client credentials.\n"
                }
            },
            "type": "object",
            "required": [
                "clientCredentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientTokenQuotaClientCredential:getClientTokenQuotaClientCredential": {
            "properties": {
                "enforce": {
                    "type": "boolean",
                    "description": "If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.\n"
                },
                "perDay": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per day\n"
                },
                "perHour": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per hour\n"
                }
            },
            "type": "object",
            "required": [
                "enforce",
                "perDay",
                "perHour"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientsClient:getClientsClient": {
            "properties": {
                "allowedClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.\n"
                },
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that Auth0 may redirect to after logout.\n"
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.\n"
                },
                "appType": {
                    "type": "string",
                    "description": "Type of application the client represents. Possible values are: \u003cspan pulumi-lang-nodejs=\"`native`\" pulumi-lang-dotnet=\"`Native`\" pulumi-lang-go=\"`native`\" pulumi-lang-python=\"`native`\" pulumi-lang-yaml=\"`native`\" pulumi-lang-java=\"`native`\"\u003e`native`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`spa`\" pulumi-lang-dotnet=\"`Spa`\" pulumi-lang-go=\"`spa`\" pulumi-lang-python=\"`spa`\" pulumi-lang-yaml=\"`spa`\" pulumi-lang-java=\"`spa`\"\u003e`spa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`regularWeb`\" pulumi-lang-dotnet=\"`RegularWeb`\" pulumi-lang-go=\"`regularWeb`\" pulumi-lang-python=\"`regular_web`\" pulumi-lang-yaml=\"`regularWeb`\" pulumi-lang-java=\"`regularWeb`\"\u003e`regular_web`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nonInteractive`\" pulumi-lang-dotnet=\"`NonInteractive`\" pulumi-lang-go=\"`nonInteractive`\" pulumi-lang-python=\"`non_interactive`\" pulumi-lang-yaml=\"`nonInteractive`\" pulumi-lang-java=\"`nonInteractive`\"\u003e`non_interactive`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resourceServer`\" pulumi-lang-dotnet=\"`ResourceServer`\" pulumi-lang-go=\"`resourceServer`\" pulumi-lang-python=\"`resource_server`\" pulumi-lang-yaml=\"`resourceServer`\" pulumi-lang-java=\"`resourceServer`\"\u003e`resource_server`\u003c/span\u003e,\u003cspan pulumi-lang-nodejs=\"`ssoIntegration`\" pulumi-lang-dotnet=\"`SsoIntegration`\" pulumi-lang-go=\"`ssoIntegration`\" pulumi-lang-python=\"`sso_integration`\" pulumi-lang-yaml=\"`ssoIntegration`\" pulumi-lang-java=\"`ssoIntegration`\"\u003e`sso_integration`\u003c/span\u003e. Specific SSO integrations types accepted as well are: \u003cspan pulumi-lang-nodejs=\"`rms`\" pulumi-lang-dotnet=\"`Rms`\" pulumi-lang-go=\"`rms`\" pulumi-lang-python=\"`rms`\" pulumi-lang-yaml=\"`rms`\" pulumi-lang-java=\"`rms`\"\u003e`rms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`box`\" pulumi-lang-dotnet=\"`Box`\" pulumi-lang-go=\"`box`\" pulumi-lang-python=\"`box`\" pulumi-lang-yaml=\"`box`\" pulumi-lang-java=\"`box`\"\u003e`box`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cloudbees`\" pulumi-lang-dotnet=\"`Cloudbees`\" pulumi-lang-go=\"`cloudbees`\" pulumi-lang-python=\"`cloudbees`\" pulumi-lang-yaml=\"`cloudbees`\" pulumi-lang-java=\"`cloudbees`\"\u003e`cloudbees`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`concur`\" pulumi-lang-dotnet=\"`Concur`\" pulumi-lang-go=\"`concur`\" pulumi-lang-python=\"`concur`\" pulumi-lang-yaml=\"`concur`\" pulumi-lang-java=\"`concur`\"\u003e`concur`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`dropbox`\" pulumi-lang-dotnet=\"`Dropbox`\" pulumi-lang-go=\"`dropbox`\" pulumi-lang-python=\"`dropbox`\" pulumi-lang-yaml=\"`dropbox`\" pulumi-lang-java=\"`dropbox`\"\u003e`dropbox`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mscrm`\" pulumi-lang-dotnet=\"`Mscrm`\" pulumi-lang-go=\"`mscrm`\" pulumi-lang-python=\"`mscrm`\" pulumi-lang-yaml=\"`mscrm`\" pulumi-lang-java=\"`mscrm`\"\u003e`mscrm`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`echosign`\" pulumi-lang-dotnet=\"`Echosign`\" pulumi-lang-go=\"`echosign`\" pulumi-lang-python=\"`echosign`\" pulumi-lang-yaml=\"`echosign`\" pulumi-lang-java=\"`echosign`\"\u003e`echosign`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`egnyte`\" pulumi-lang-dotnet=\"`Egnyte`\" pulumi-lang-go=\"`egnyte`\" pulumi-lang-python=\"`egnyte`\" pulumi-lang-yaml=\"`egnyte`\" pulumi-lang-java=\"`egnyte`\"\u003e`egnyte`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`newrelic`\" pulumi-lang-dotnet=\"`Newrelic`\" pulumi-lang-go=\"`newrelic`\" pulumi-lang-python=\"`newrelic`\" pulumi-lang-yaml=\"`newrelic`\" pulumi-lang-java=\"`newrelic`\"\u003e`newrelic`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`office365`\" pulumi-lang-dotnet=\"`Office365`\" pulumi-lang-go=\"`office365`\" pulumi-lang-python=\"`office365`\" pulumi-lang-yaml=\"`office365`\" pulumi-lang-java=\"`office365`\"\u003e`office365`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`salesforce`\" pulumi-lang-dotnet=\"`Salesforce`\" pulumi-lang-go=\"`salesforce`\" pulumi-lang-python=\"`salesforce`\" pulumi-lang-yaml=\"`salesforce`\" pulumi-lang-java=\"`salesforce`\"\u003e`salesforce`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sentry`\" pulumi-lang-dotnet=\"`Sentry`\" pulumi-lang-go=\"`sentry`\" pulumi-lang-python=\"`sentry`\" pulumi-lang-yaml=\"`sentry`\" pulumi-lang-java=\"`sentry`\"\u003e`sentry`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sharepoint`\" pulumi-lang-dotnet=\"`Sharepoint`\" pulumi-lang-go=\"`sharepoint`\" pulumi-lang-python=\"`sharepoint`\" pulumi-lang-yaml=\"`sharepoint`\" pulumi-lang-java=\"`sharepoint`\"\u003e`sharepoint`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`slack`\" pulumi-lang-dotnet=\"`Slack`\" pulumi-lang-go=\"`slack`\" pulumi-lang-python=\"`slack`\" pulumi-lang-yaml=\"`slack`\" pulumi-lang-java=\"`slack`\"\u003e`slack`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`springcm`\" pulumi-lang-dotnet=\"`Springcm`\" pulumi-lang-go=\"`springcm`\" pulumi-lang-python=\"`springcm`\" pulumi-lang-yaml=\"`springcm`\" pulumi-lang-java=\"`springcm`\"\u003e`springcm`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zendesk`\" pulumi-lang-dotnet=\"`Zendesk`\" pulumi-lang-go=\"`zendesk`\" pulumi-lang-python=\"`zendesk`\" pulumi-lang-yaml=\"`zendesk`\" pulumi-lang-java=\"`zendesk`\"\u003e`zendesk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e.\n"
                },
                "callbacks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The ID of the client. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n"
                },
                "clientMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?\"/\\()\u003c\u003e@ [Tab] [Space]`.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "Description of the purpose of the client.\n"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Types of grants that this client is authorized to use.\n"
                },
                "isFirstParty": {
                    "type": "boolean",
                    "description": "Indicates whether this client is a first-party client.Defaults to true from the API\n"
                },
                "isTokenEndpointIpHeaderTrusted": {
                    "type": "boolean",
                    "description": "Indicates whether the token endpoint IP header is trusted. Requires the authentication method to be set to \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e. Setting this property when creating the resource, will default the authentication method to \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e. To change the authentication method to \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e use the \u003cspan pulumi-lang-nodejs=\"`auth0.ClientCredentials`\" pulumi-lang-dotnet=\"`auth0.ClientCredentials`\" pulumi-lang-go=\"`ClientCredentials`\" pulumi-lang-python=\"`ClientCredentials`\" pulumi-lang-yaml=\"`auth0.ClientCredentials`\" pulumi-lang-java=\"`auth0.ClientCredentials`\"\u003e`auth0.ClientCredentials`\u003c/span\u003e resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the client. If not provided, \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e must be set.\n"
                },
                "oidcLogouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientsClientOidcLogout:getClientsClientOidcLogout"
                    },
                    "description": "Configure OIDC logout for the Client\n"
                },
                "organizationDiscoveryMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Methods for discovering organizations during the pre_login_prompt. Can include \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e (allows users to find their organization by entering their email address) and/or \u003cspan pulumi-lang-nodejs=\"`organizationName`\" pulumi-lang-dotnet=\"`OrganizationName`\" pulumi-lang-go=\"`organizationName`\" pulumi-lang-python=\"`organization_name`\" pulumi-lang-yaml=\"`organizationName`\" pulumi-lang-java=\"`organizationName`\"\u003e`organization_name`\u003c/span\u003e (requires users to enter the organization name directly). These methods can be combined. Setting this property requires that \u003cspan pulumi-lang-nodejs=\"`organizationRequireBehavior`\" pulumi-lang-dotnet=\"`OrganizationRequireBehavior`\" pulumi-lang-go=\"`organizationRequireBehavior`\" pulumi-lang-python=\"`organization_require_behavior`\" pulumi-lang-yaml=\"`organizationRequireBehavior`\" pulumi-lang-java=\"`organizationRequireBehavior`\"\u003e`organization_require_behavior`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`preLoginPrompt`\" pulumi-lang-dotnet=\"`PreLoginPrompt`\" pulumi-lang-go=\"`preLoginPrompt`\" pulumi-lang-python=\"`pre_login_prompt`\" pulumi-lang-yaml=\"`preLoginPrompt`\" pulumi-lang-java=\"`preLoginPrompt`\"\u003e`pre_login_prompt`\u003c/span\u003e.\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "The identifier of a resource server that client is associated withThis property can be sent only when app_type=resource_server.This property can not be changed, once the client is created.\n"
                },
                "sessionTransfers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientsClientSessionTransfer:getClientsClientSessionTransfer"
                    }
                },
                "skipNonVerifiableCallbackUriConfirmationPrompt": {
                    "type": "string",
                    "description": "Indicates whether the confirmation prompt appears when using non-verifiable callback URIs. Set to true to skip the prompt, false to show it, or null to unset. Accepts (true/false/null) or (\"true\"/\"false\"/\"null\")\n"
                },
                "tokenExchanges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientsClientTokenExchange:getClientsClientTokenExchange"
                    },
                    "description": "Allows configuration for token exchange\n"
                },
                "tokenQuotas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientsClientTokenQuota:getClientsClientTokenQuota"
                    },
                    "description": "The token quota configuration.\n"
                },
                "webOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that represent valid web origins for use with web message response mode.\n"
                }
            },
            "type": "object",
            "required": [
                "allowedClients",
                "allowedLogoutUrls",
                "allowedOrigins",
                "appType",
                "callbacks",
                "clientMetadata",
                "clientSecret",
                "description",
                "grantTypes",
                "isFirstParty",
                "isTokenEndpointIpHeaderTrusted",
                "oidcLogouts",
                "organizationDiscoveryMethods",
                "resourceServerIdentifier",
                "sessionTransfers",
                "skipNonVerifiableCallbackUriConfirmationPrompt",
                "tokenExchanges",
                "tokenQuotas",
                "webOrigins"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientsClientOidcLogout:getClientsClientOidcLogout": {
            "properties": {
                "backchannelLogoutInitiators": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientsClientOidcLogoutBackchannelLogoutInitiator:getClientsClientOidcLogoutBackchannelLogoutInitiator"
                    },
                    "description": "Configure OIDC logout initiators for the Client\n"
                },
                "backchannelLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.\n"
                }
            },
            "type": "object",
            "required": [
                "backchannelLogoutInitiators",
                "backchannelLogoutUrls"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientsClientOidcLogoutBackchannelLogoutInitiator:getClientsClientOidcLogoutBackchannelLogoutInitiator": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "Determines the configuration method for enabling initiators. \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e enables only the initiators listed in the\u003cspan pulumi-lang-nodejs=\" backchannelLogoutSelectedInitiators \" pulumi-lang-dotnet=\" BackchannelLogoutSelectedInitiators \" pulumi-lang-go=\" backchannelLogoutSelectedInitiators \" pulumi-lang-python=\" backchannel_logout_selected_initiators \" pulumi-lang-yaml=\" backchannelLogoutSelectedInitiators \" pulumi-lang-java=\" backchannelLogoutSelectedInitiators \"\u003e backchannel_logout_selected_initiators \u003c/span\u003eset, \u003cspan pulumi-lang-nodejs=\"`all`\" pulumi-lang-dotnet=\"`All`\" pulumi-lang-go=\"`all`\" pulumi-lang-python=\"`all`\" pulumi-lang-yaml=\"`all`\" pulumi-lang-java=\"`all`\"\u003e`all`\u003c/span\u003e enables all current and future initiators.\n"
                },
                "selectedInitiators": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Contains the list of initiators to be enabled for the given client.\n"
                }
            },
            "type": "object",
            "required": [
                "mode",
                "selectedInitiators"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientsClientSessionTransfer:getClientsClientSessionTransfer": {
            "properties": {
                "allowRefreshToken": {
                    "type": "boolean",
                    "description": "Indicates whether the application is allowed to use a refresh token when using a\u003cspan pulumi-lang-nodejs=\" sessionTransferToken \" pulumi-lang-dotnet=\" SessionTransferToken \" pulumi-lang-go=\" sessionTransferToken \" pulumi-lang-python=\" session_transfer_token \" pulumi-lang-yaml=\" sessionTransferToken \" pulumi-lang-java=\" sessionTransferToken \"\u003e session_transfer_token \u003c/span\u003esession.\n"
                },
                "allowedAuthenticationMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "canCreateSessionTransferToken": {
                    "type": "boolean",
                    "description": "Indicates whether the application(Native app) can use the Token Exchange endpoint to create a session_transfer_token\n"
                },
                "enforceCascadeRevocation": {
                    "type": "boolean",
                    "description": "Indicates whether Refresh Tokens created during a native-to-web session are tied to that session's lifetime. This determines if such refresh tokens should be automatically revoked when their corresponding sessions are.\n"
                },
                "enforceDeviceBinding": {
                    "type": "string",
                    "description": "Configures the level of device binding enforced when a\u003cspan pulumi-lang-nodejs=\" sessionTransferToken \" pulumi-lang-dotnet=\" SessionTransferToken \" pulumi-lang-go=\" sessionTransferToken \" pulumi-lang-python=\" session_transfer_token \" pulumi-lang-yaml=\" sessionTransferToken \" pulumi-lang-java=\" sessionTransferToken \"\u003e session_transfer_token \u003c/span\u003eis consumed. Can be one of \u003cspan pulumi-lang-nodejs=\"`ip`\" pulumi-lang-dotnet=\"`Ip`\" pulumi-lang-go=\"`ip`\" pulumi-lang-python=\"`ip`\" pulumi-lang-yaml=\"`ip`\" pulumi-lang-java=\"`ip`\"\u003e`ip`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`asn`\" pulumi-lang-dotnet=\"`Asn`\" pulumi-lang-go=\"`asn`\" pulumi-lang-python=\"`asn`\" pulumi-lang-yaml=\"`asn`\" pulumi-lang-java=\"`asn`\"\u003e`asn`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e.\n"
                },
                "enforceOnlineRefreshTokens": {
                    "type": "boolean",
                    "description": "Indicates whether revoking the parent Refresh Token that initiated a Native to Web flow and was used to issue a Session Transfer Token should trigger a cascade revocation affecting its dependent child entities.\n"
                }
            },
            "type": "object",
            "required": [
                "allowRefreshToken",
                "allowedAuthenticationMethods",
                "canCreateSessionTransferToken",
                "enforceCascadeRevocation",
                "enforceDeviceBinding",
                "enforceOnlineRefreshTokens"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientsClientTokenExchange:getClientsClientTokenExchange": {
            "properties": {
                "allowAnyProfileOfTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed profile types for token exchange\n"
                }
            },
            "type": "object",
            "required": [
                "allowAnyProfileOfTypes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientsClientTokenQuota:getClientsClientTokenQuota": {
            "properties": {
                "clientCredentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getClientsClientTokenQuotaClientCredential:getClientsClientTokenQuotaClientCredential"
                    },
                    "description": "The token quota configuration for client credentials.\n"
                }
            },
            "type": "object",
            "required": [
                "clientCredentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getClientsClientTokenQuotaClientCredential:getClientsClientTokenQuotaClientCredential": {
            "properties": {
                "enforce": {
                    "type": "boolean",
                    "description": "If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.\n"
                },
                "perDay": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per day\n"
                },
                "perHour": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per hour\n"
                }
            },
            "type": "object",
            "required": [
                "enforce",
                "perDay",
                "perHour"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionAuthentication:getConnectionAuthentication": {
            "properties": {
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "active"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionConnectedAccount:getConnectionConnectedAccount": {
            "properties": {
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "active"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionKeysKey:getConnectionKeysKey": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The signing key algorithm.\n"
                },
                "cert": {
                    "type": "string",
                    "description": "The public certificate of the signing key.\n"
                },
                "connectionId": {
                    "type": "string"
                },
                "current": {
                    "type": "boolean",
                    "description": "True if the key is the current key.\n"
                },
                "currentSince": {
                    "type": "string",
                    "description": "The date and time when the key became the current key.\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "The certificate fingerprint.\n"
                },
                "keyUse": {
                    "type": "string",
                    "description": "The signing key use, whether for encryption or signing.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The key ID of the signing key.\n"
                },
                "next": {
                    "type": "boolean",
                    "description": "True if the key is the next key.\n"
                },
                "pkcs": {
                    "type": "string",
                    "description": "The public certificate of the signing key in PKCS7 format.\n"
                },
                "previous": {
                    "type": "boolean",
                    "description": "True if the key is the previous key.\n"
                },
                "subjectDn": {
                    "type": "string",
                    "description": "The subject distinguished name (DN) of the certificate.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The certificate thumbprint.\n"
                },
                "triggers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "This is an arbitrary map, which when edited shall perform rotation of keys for the corresponding connection. It can host keys like version, timestamp of last rotation etc.The field has no association with API\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "cert",
                "connectionId",
                "current",
                "currentSince",
                "fingerprint",
                "keyUse",
                "kid",
                "next",
                "pkcs",
                "previous",
                "subjectDn",
                "thumbprint",
                "triggers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOption:getConnectionOption": {
            "properties": {
                "accessTokenUrl": {
                    "type": "string",
                    "description": "URL used to exchange a user-authorized request token for an access token.\n"
                },
                "adfsServer": {
                    "type": "string",
                    "description": "ADFS URL where to fetch the metadata source.\n"
                },
                "allowedAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed audiences.\n"
                },
                "apiEnableUsers": {
                    "type": "boolean",
                    "description": "Enable API Access to users.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "App ID.\n"
                },
                "attributeMaps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributeMap:getConnectionOptionAttributeMap"
                    },
                    "description": "OpenID Connect and Okta Workforce connections can automatically map claims received from the identity provider (IdP). You can configure this mapping through a library template provided by Auth0 or by entering your own template directly. Click [here](https://auth0.com/docs/authenticate/identity-providers/enterprise-identity-providers/configure-pkce-claim-mapping-for-oidc#map-claims-for-oidc-connections) for more info.\n"
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttribute:getConnectionOptionAttribute"
                    },
                    "description": "Order of attributes for precedence in identification.Valid values: email, phone_number, username. If Precedence is set, it must contain all values (email, phone_number, username) in specific order\n"
                },
                "authParams": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Query string parameters to be included as part of the generated passwordless email link.\n"
                },
                "authenticationMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAuthenticationMethod:getConnectionOptionAuthenticationMethod"
                    },
                    "description": "Specifies the authentication methods and their configuration (enabled or disabled)\n"
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "description": "Authorization endpoint.\n"
                },
                "bruteForceProtection": {
                    "type": "boolean",
                    "description": "Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The strategy's client ID.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The strategy's client secret.\n"
                },
                "communityBaseUrl": {
                    "type": "string",
                    "description": "Salesforce community base URL.\n"
                },
                "configuration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A case-sensitive map of key value pairs used as configuration variables for the \u003cspan pulumi-lang-nodejs=\"`customScript`\" pulumi-lang-dotnet=\"`CustomScript`\" pulumi-lang-go=\"`customScript`\" pulumi-lang-python=\"`custom_script`\" pulumi-lang-yaml=\"`customScript`\" pulumi-lang-java=\"`customScript`\"\u003e`custom_script`\u003c/span\u003e.\n"
                },
                "connectionSettings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionConnectionSetting:getConnectionOptionConnectionSetting"
                    },
                    "description": "Proof Key for Code Exchange (PKCE) configuration settings for an OIDC or Okta Workforce connection.\n"
                },
                "consumerKey": {
                    "type": "string",
                    "description": "Identifies the client to the service provider\n"
                },
                "consumerSecret": {
                    "type": "string",
                    "description": "Secret used to establish ownership of the consumer key.\n"
                },
                "customHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionCustomHeader:getConnectionOptionCustomHeader"
                    },
                    "description": "Configure extra headers to the Token endpoint of an OAuth 2.0 provider\n"
                },
                "customScripts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of scripts used to integrate with a custom database.\n"
                },
                "debug": {
                    "type": "boolean",
                    "description": "When enabled, additional debug information will be generated.\n"
                },
                "decryptionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionDecryptionKey:getConnectionOptionDecryptionKey"
                    },
                    "description": "The key used to decrypt encrypted responses from the connection. Uses the \u003cspan pulumi-lang-nodejs=\"`key`\" pulumi-lang-dotnet=\"`Key`\" pulumi-lang-go=\"`key`\" pulumi-lang-python=\"`key`\" pulumi-lang-yaml=\"`key`\" pulumi-lang-java=\"`key`\"\u003e`key`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`cert`\" pulumi-lang-dotnet=\"`Cert`\" pulumi-lang-go=\"`cert`\" pulumi-lang-python=\"`cert`\" pulumi-lang-yaml=\"`cert`\" pulumi-lang-java=\"`cert`\"\u003e`cert`\u003c/span\u003e properties to provide the private key and certificate respectively.\n"
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Sign Request Algorithm Digest.\n"
                },
                "disableCache": {
                    "type": "boolean",
                    "description": "Indicates whether to disable the cache or not.\n"
                },
                "disableSelfServiceChangePassword": {
                    "type": "boolean",
                    "description": "Indicates whether to remove the forgot password link within the New Universal Login.\n"
                },
                "disableSignOut": {
                    "type": "boolean",
                    "description": "When enabled, will disable sign out.\n"
                },
                "disableSignup": {
                    "type": "boolean",
                    "description": "Indicates whether to allow user sign-ups to your application.\n"
                },
                "discoveryUrl": {
                    "type": "string",
                    "description": "OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain name.\n"
                },
                "domainAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.\n"
                },
                "enableScriptContext": {
                    "type": "boolean",
                    "description": "Set to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e to inject context into custom DB scripts (warning: cannot be disabled once enabled).\n"
                },
                "enabledDatabaseCustomization": {
                    "type": "boolean",
                    "description": "Set to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e to use a legacy user store.\n"
                },
                "entityId": {
                    "type": "string",
                    "description": "Custom Entity ID for the connection.\n"
                },
                "fedMetadataXml": {
                    "type": "string",
                    "description": "Federation Metadata for the ADFS connection.\n"
                },
                "fieldsMap": {
                    "type": "string",
                    "description": "If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.\n"
                },
                "forwardRequestInfo": {
                    "type": "boolean",
                    "description": "Specifies whether or not request info should be forwarded to sms gateway.\n"
                },
                "from": {
                    "type": "string",
                    "description": "Address to use as the sender.\n"
                },
                "gatewayAuthentications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionGatewayAuthentication:getConnectionOptionGatewayAuthentication"
                    },
                    "description": "Defines the parameters used to generate the auth token for the custom gateway.\n"
                },
                "gatewayUrl": {
                    "type": "string",
                    "description": "Defines a custom sms gateway to use instead of Twilio.\n"
                },
                "globalTokenRevocationJwtIss": {
                    "type": "string",
                    "description": "Specifies the issuer of the JWT used for global token revocation for the SAML connection.\n"
                },
                "globalTokenRevocationJwtSub": {
                    "type": "string",
                    "description": "Specifies the subject of the JWT used for global token revocation for the SAML connection.\n"
                },
                "iconUrl": {
                    "type": "string",
                    "description": "Icon URL.\n"
                },
                "identityApi": {
                    "type": "string",
                    "description": "Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.\n"
                },
                "idpInitiateds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionIdpInitiated:getConnectionOptionIdpInitiated"
                    },
                    "description": "Configuration options for IDP Initiated Authentication. This is an object with the properties: \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`clientProtocol`\" pulumi-lang-dotnet=\"`ClientProtocol`\" pulumi-lang-go=\"`clientProtocol`\" pulumi-lang-python=\"`client_protocol`\" pulumi-lang-yaml=\"`clientProtocol`\" pulumi-lang-java=\"`clientProtocol`\"\u003e`client_protocol`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`clientAuthorizeQuery`\" pulumi-lang-dotnet=\"`ClientAuthorizeQuery`\" pulumi-lang-go=\"`clientAuthorizeQuery`\" pulumi-lang-python=\"`client_authorize_query`\" pulumi-lang-yaml=\"`clientAuthorizeQuery`\" pulumi-lang-java=\"`clientAuthorizeQuery`\"\u003e`client_authorize_query`\u003c/span\u003e.\n"
                },
                "importMode": {
                    "type": "boolean",
                    "description": "Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.\n"
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IPs.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "Issuer URL, e.g. `https://auth.example.com`.\n"
                },
                "jwksUri": {
                    "type": "string",
                    "description": "JWKS URI.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "Apple Key ID.\n"
                },
                "mapUserIdToId": {
                    "type": "boolean",
                    "description": "By default Auth0 maps \u003cspan pulumi-lang-nodejs=\"`userId`\" pulumi-lang-dotnet=\"`UserId`\" pulumi-lang-go=\"`userId`\" pulumi-lang-python=\"`user_id`\" pulumi-lang-yaml=\"`userId`\" pulumi-lang-java=\"`userId`\"\u003e`user_id`\u003c/span\u003e to \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e. Enabling this setting changes the behavior to map \u003cspan pulumi-lang-nodejs=\"`userId`\" pulumi-lang-dotnet=\"`UserId`\" pulumi-lang-go=\"`userId`\" pulumi-lang-python=\"`user_id`\" pulumi-lang-yaml=\"`userId`\" pulumi-lang-java=\"`userId`\"\u003e`user_id`\u003c/span\u003e to 'id' instead. This can only be defined on a new Google Workspace connection and can not be changed once set.\n"
                },
                "maxGroupsToRetrieve": {
                    "type": "string",
                    "description": "Maximum number of groups to retrieve.\n"
                },
                "messagingServiceSid": {
                    "type": "string",
                    "description": "SID for Copilot. Used when SMS Source is Copilot.\n"
                },
                "metadataUrl": {
                    "type": "string",
                    "description": "The URL of the SAML metadata document.\n"
                },
                "metadataXml": {
                    "type": "string",
                    "description": "The XML content for the SAML metadata document. Values within the xml will take precedence over other attributes set on the options block.\n"
                },
                "mfas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionMfa:getConnectionOptionMfa"
                    },
                    "description": "Configuration options for multifactor authentication.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The public name of the email or SMS Connection. In most cases this is the same name as the connection name.\n"
                },
                "nonPersistentAttrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.\n"
                },
                "passkeyOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionPasskeyOption:getConnectionOptionPasskeyOption"
                    },
                    "description": "Defines options for the passkey authentication method\n"
                },
                "passwordComplexityOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionPasswordComplexityOption:getConnectionOptionPasswordComplexityOption"
                    },
                    "description": "Configuration settings for password complexity.\n"
                },
                "passwordDictionaries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionPasswordDictionary:getConnectionOptionPasswordDictionary"
                    },
                    "description": "Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.\n"
                },
                "passwordHistories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionPasswordHistory:getConnectionOptionPasswordHistory"
                    },
                    "description": "Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.\n"
                },
                "passwordNoPersonalInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionPasswordNoPersonalInfo:getConnectionOptionPasswordNoPersonalInfo"
                    },
                    "description": "Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`username`\" pulumi-lang-dotnet=\"`Username`\" pulumi-lang-go=\"`username`\" pulumi-lang-python=\"`username`\" pulumi-lang-yaml=\"`username`\" pulumi-lang-java=\"`username`\"\u003e`username`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nickname`\" pulumi-lang-dotnet=\"`Nickname`\" pulumi-lang-go=\"`nickname`\" pulumi-lang-python=\"`nickname`\" pulumi-lang-yaml=\"`nickname`\" pulumi-lang-java=\"`nickname`\"\u003e`nickname`\u003c/span\u003e, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e, or first part of the user's \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e.\n"
                },
                "passwordPolicy": {
                    "type": "string",
                    "description": "Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`low`\" pulumi-lang-dotnet=\"`Low`\" pulumi-lang-go=\"`low`\" pulumi-lang-python=\"`low`\" pulumi-lang-yaml=\"`low`\" pulumi-lang-java=\"`low`\"\u003e`low`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fair`\" pulumi-lang-dotnet=\"`Fair`\" pulumi-lang-go=\"`fair`\" pulumi-lang-python=\"`fair`\" pulumi-lang-yaml=\"`fair`\" pulumi-lang-java=\"`fair`\"\u003e`fair`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`good`\" pulumi-lang-dotnet=\"`Good`\" pulumi-lang-go=\"`good`\" pulumi-lang-python=\"`good`\" pulumi-lang-yaml=\"`good`\" pulumi-lang-java=\"`good`\"\u003e`good`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`excellent`\" pulumi-lang-dotnet=\"`Excellent`\" pulumi-lang-go=\"`excellent`\" pulumi-lang-python=\"`excellent`\" pulumi-lang-yaml=\"`excellent`\" pulumi-lang-java=\"`excellent`\"\u003e`excellent`\u003c/span\u003e.\n"
                },
                "pingFederateBaseUrl": {
                    "type": "string",
                    "description": "Ping Federate Server URL.\n"
                },
                "pkceEnabled": {
                    "type": "boolean",
                    "description": "Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.\n"
                },
                "precedences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Order of attributes for precedence in identification.Valid values: email, phone_number, username. If Precedence is set, it must contain all values (email, phone_number, username) in specific order\n"
                },
                "protocolBinding": {
                    "type": "string",
                    "description": "The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.\n"
                },
                "provider": {
                    "type": "string",
                    "description": "Defines the custom \u003cspan pulumi-lang-nodejs=\"`smsGateway`\" pulumi-lang-dotnet=\"`SmsGateway`\" pulumi-lang-go=\"`smsGateway`\" pulumi-lang-python=\"`sms_gateway`\" pulumi-lang-yaml=\"`smsGateway`\" pulumi-lang-java=\"`smsGateway`\"\u003e`sms_gateway`\u003c/span\u003e provider.\n"
                },
                "realmFallback": {
                    "type": "boolean",
                    "description": "Allows configuration if\u003cspan pulumi-lang-nodejs=\" connectionsRealmFallback \" pulumi-lang-dotnet=\" ConnectionsRealmFallback \" pulumi-lang-go=\" connectionsRealmFallback \" pulumi-lang-python=\" connections_realm_fallback \" pulumi-lang-yaml=\" connectionsRealmFallback \" pulumi-lang-java=\" connectionsRealmFallback \"\u003e connections_realm_fallback \u003c/span\u003eflag is enabled for the tenant\n"
                },
                "requestTemplate": {
                    "type": "string",
                    "description": "Template that formats the SAML request.\n"
                },
                "requestTokenUrl": {
                    "type": "string",
                    "description": "URL used to obtain an unauthorized request token.\n"
                },
                "requiresUsername": {
                    "type": "boolean",
                    "description": "Indicates whether the user is required to provide a username in addition to an email address.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Permissions to grant to the connection. Within the Auth0 dashboard these appear under the \"Attributes\" and \"Extended Attributes\" sections. Some examples: \u003cspan pulumi-lang-nodejs=\"`basicProfile`\" pulumi-lang-dotnet=\"`BasicProfile`\" pulumi-lang-go=\"`basicProfile`\" pulumi-lang-python=\"`basic_profile`\" pulumi-lang-yaml=\"`basicProfile`\" pulumi-lang-java=\"`basicProfile`\"\u003e`basic_profile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`extProfile`\" pulumi-lang-dotnet=\"`ExtProfile`\" pulumi-lang-go=\"`extProfile`\" pulumi-lang-python=\"`ext_profile`\" pulumi-lang-yaml=\"`extProfile`\" pulumi-lang-java=\"`extProfile`\"\u003e`ext_profile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`extNestedGroups`\" pulumi-lang-dotnet=\"`ExtNestedGroups`\" pulumi-lang-go=\"`extNestedGroups`\" pulumi-lang-python=\"`ext_nested_groups`\" pulumi-lang-yaml=\"`extNestedGroups`\" pulumi-lang-java=\"`extNestedGroups`\"\u003e`ext_nested_groups`\u003c/span\u003e, etc.\n"
                },
                "scripts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.\n"
                },
                "sessionKey": {
                    "type": "string",
                    "description": "Session Key for storing the request token.\n"
                },
                "setUserRootAttributes": {
                    "type": "string",
                    "description": "Determines whether to sync user profile attributes (\u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`givenName`\" pulumi-lang-dotnet=\"`GivenName`\" pulumi-lang-go=\"`givenName`\" pulumi-lang-python=\"`given_name`\" pulumi-lang-yaml=\"`givenName`\" pulumi-lang-java=\"`givenName`\"\u003e`given_name`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`familyName`\" pulumi-lang-dotnet=\"`FamilyName`\" pulumi-lang-go=\"`familyName`\" pulumi-lang-python=\"`family_name`\" pulumi-lang-yaml=\"`familyName`\" pulumi-lang-java=\"`familyName`\"\u003e`family_name`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nickname`\" pulumi-lang-dotnet=\"`Nickname`\" pulumi-lang-go=\"`nickname`\" pulumi-lang-python=\"`nickname`\" pulumi-lang-yaml=\"`nickname`\" pulumi-lang-java=\"`nickname`\"\u003e`nickname`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`picture`\" pulumi-lang-dotnet=\"`Picture`\" pulumi-lang-go=\"`picture`\" pulumi-lang-python=\"`picture`\" pulumi-lang-yaml=\"`picture`\" pulumi-lang-java=\"`picture`\"\u003e`picture`\u003c/span\u003e) at each login or only on the first login. Options include: \u003cspan pulumi-lang-nodejs=\"`onEachLogin`\" pulumi-lang-dotnet=\"`OnEachLogin`\" pulumi-lang-go=\"`onEachLogin`\" pulumi-lang-python=\"`on_each_login`\" pulumi-lang-yaml=\"`onEachLogin`\" pulumi-lang-java=\"`onEachLogin`\"\u003e`on_each_login`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`onFirstLogin`\" pulumi-lang-dotnet=\"`OnFirstLogin`\" pulumi-lang-go=\"`onFirstLogin`\" pulumi-lang-python=\"`on_first_login`\" pulumi-lang-yaml=\"`onFirstLogin`\" pulumi-lang-java=\"`onFirstLogin`\"\u003e`on_first_login`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`neverOnLogin`\" pulumi-lang-dotnet=\"`NeverOnLogin`\" pulumi-lang-go=\"`neverOnLogin`\" pulumi-lang-python=\"`never_on_login`\" pulumi-lang-yaml=\"`neverOnLogin`\" pulumi-lang-java=\"`neverOnLogin`\"\u003e`never_on_login`\u003c/span\u003e. Default value: \u003cspan pulumi-lang-nodejs=\"`onEachLogin`\" pulumi-lang-dotnet=\"`OnEachLogin`\" pulumi-lang-go=\"`onEachLogin`\" pulumi-lang-python=\"`on_each_login`\" pulumi-lang-yaml=\"`onEachLogin`\" pulumi-lang-java=\"`onEachLogin`\"\u003e`on_each_login`\u003c/span\u003e.\n"
                },
                "shouldTrustEmailVerifiedConnection": {
                    "type": "string",
                    "description": "Choose how Auth0 sets the\u003cspan pulumi-lang-nodejs=\" emailVerified \" pulumi-lang-dotnet=\" EmailVerified \" pulumi-lang-go=\" emailVerified \" pulumi-lang-python=\" email_verified \" pulumi-lang-yaml=\" emailVerified \" pulumi-lang-java=\" emailVerified \"\u003e email_verified \u003c/span\u003efield in the user profile.\n"
                },
                "signInEndpoint": {
                    "type": "string",
                    "description": "SAML single login URL for the connection.\n"
                },
                "signOutEndpoint": {
                    "type": "string",
                    "description": "SAML single logout URL for the connection.\n"
                },
                "signSamlRequest": {
                    "type": "boolean",
                    "description": "When enabled, the SAML authentication request will be signed.\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Sign Request Algorithm.\n"
                },
                "signatureMethod": {
                    "type": "string",
                    "description": "Signature method used to sign the request\n"
                },
                "signingCert": {
                    "type": "string",
                    "description": "X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.\n"
                },
                "signingKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionSigningKey:getConnectionOptionSigningKey"
                    },
                    "description": "The key used to sign requests in the connection. Uses the \u003cspan pulumi-lang-nodejs=\"`key`\" pulumi-lang-dotnet=\"`Key`\" pulumi-lang-go=\"`key`\" pulumi-lang-python=\"`key`\" pulumi-lang-yaml=\"`key`\" pulumi-lang-java=\"`key`\"\u003e`key`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`cert`\" pulumi-lang-dotnet=\"`Cert`\" pulumi-lang-go=\"`cert`\" pulumi-lang-python=\"`cert`\" pulumi-lang-yaml=\"`cert`\" pulumi-lang-java=\"`cert`\"\u003e`cert`\u003c/span\u003e properties to provide the private key and certificate respectively.\n"
                },
                "strategyVersion": {
                    "type": "integer",
                    "description": "Version 1 is deprecated, use version 2.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Subject line of the email.\n"
                },
                "syntax": {
                    "type": "string",
                    "description": "Syntax of the template body.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "Apple Team ID.\n"
                },
                "template": {
                    "type": "string",
                    "description": "Body of the template.\n"
                },
                "tenantDomain": {
                    "type": "string",
                    "description": "Tenant domain name.\n"
                },
                "tokenEndpoint": {
                    "type": "string",
                    "description": "Token endpoint.\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "Specifies the authentication method for the token endpoint. (Okta/OIDC Connections)\n"
                },
                "tokenEndpointAuthSigningAlg": {
                    "type": "string",
                    "description": "Specifies the signing algorithm for the token endpoint. (Okta/OIDC Connections)\n"
                },
                "totps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionTotp:getConnectionOptionTotp"
                    },
                    "description": "Configuration options for one-time passwords.\n"
                },
                "twilioSid": {
                    "type": "string",
                    "description": "SID for your Twilio account.\n"
                },
                "twilioToken": {
                    "type": "string",
                    "description": "AuthToken for your Twilio account.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Value can be \u003cspan pulumi-lang-nodejs=\"`backChannel`\" pulumi-lang-dotnet=\"`BackChannel`\" pulumi-lang-go=\"`backChannel`\" pulumi-lang-python=\"`back_channel`\" pulumi-lang-yaml=\"`backChannel`\" pulumi-lang-java=\"`backChannel`\"\u003e`back_channel`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`frontChannel`\" pulumi-lang-dotnet=\"`FrontChannel`\" pulumi-lang-go=\"`frontChannel`\" pulumi-lang-python=\"`front_channel`\" pulumi-lang-yaml=\"`frontChannel`\" pulumi-lang-java=\"`frontChannel`\"\u003e`front_channel`\u003c/span\u003e. Front Channel will use OIDC protocol with `response_mode=form_post` and `response_type=id_token`. Back Channel will use `response_type=code`.\n"
                },
                "upstreamParams": {
                    "type": "string",
                    "description": "You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.\n"
                },
                "useCertAuth": {
                    "type": "boolean",
                    "description": "Indicates whether to use cert auth or not.\n"
                },
                "useKerberos": {
                    "type": "boolean",
                    "description": "Indicates whether to use Kerberos or not.\n"
                },
                "useWsfed": {
                    "type": "boolean",
                    "description": "Whether to use WS-Fed.\n"
                },
                "userAuthorizationUrl": {
                    "type": "string",
                    "description": "URL used to obtain user authorization.\n"
                },
                "userIdAttribute": {
                    "type": "string",
                    "description": "Attribute in the token that will be mapped to the\u003cspan pulumi-lang-nodejs=\" userId \" pulumi-lang-dotnet=\" UserId \" pulumi-lang-go=\" userId \" pulumi-lang-python=\" user_id \" pulumi-lang-yaml=\" userId \" pulumi-lang-java=\" userId \"\u003e user_id \u003c/span\u003eproperty in Auth0.\n"
                },
                "userinfoEndpoint": {
                    "type": "string",
                    "description": "User info endpoint.\n"
                },
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionValidation:getConnectionOptionValidation"
                    },
                    "description": "Validation of the minimum and maximum values allowed for a user to have as username.\n"
                },
                "waadCommonEndpoint": {
                    "type": "boolean",
                    "description": "Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.\n"
                },
                "waadProtocol": {
                    "type": "string",
                    "description": "Protocol to use.\n"
                }
            },
            "type": "object",
            "required": [
                "accessTokenUrl",
                "adfsServer",
                "allowedAudiences",
                "apiEnableUsers",
                "appId",
                "attributeMaps",
                "attributes",
                "authParams",
                "authenticationMethods",
                "authorizationEndpoint",
                "bruteForceProtection",
                "clientId",
                "clientSecret",
                "communityBaseUrl",
                "configuration",
                "connectionSettings",
                "consumerKey",
                "consumerSecret",
                "customHeaders",
                "customScripts",
                "debug",
                "decryptionKeys",
                "digestAlgorithm",
                "disableCache",
                "disableSelfServiceChangePassword",
                "disableSignOut",
                "disableSignup",
                "discoveryUrl",
                "domain",
                "domainAliases",
                "enableScriptContext",
                "enabledDatabaseCustomization",
                "entityId",
                "fedMetadataXml",
                "fieldsMap",
                "forwardRequestInfo",
                "from",
                "gatewayAuthentications",
                "gatewayUrl",
                "globalTokenRevocationJwtIss",
                "globalTokenRevocationJwtSub",
                "iconUrl",
                "identityApi",
                "idpInitiateds",
                "importMode",
                "ips",
                "issuer",
                "jwksUri",
                "keyId",
                "mapUserIdToId",
                "maxGroupsToRetrieve",
                "messagingServiceSid",
                "metadataUrl",
                "metadataXml",
                "mfas",
                "name",
                "nonPersistentAttrs",
                "passkeyOptions",
                "passwordComplexityOptions",
                "passwordDictionaries",
                "passwordHistories",
                "passwordNoPersonalInfos",
                "passwordPolicy",
                "pingFederateBaseUrl",
                "pkceEnabled",
                "precedences",
                "protocolBinding",
                "provider",
                "realmFallback",
                "requestTemplate",
                "requestTokenUrl",
                "requiresUsername",
                "scopes",
                "scripts",
                "sessionKey",
                "setUserRootAttributes",
                "shouldTrustEmailVerifiedConnection",
                "signInEndpoint",
                "signOutEndpoint",
                "signSamlRequest",
                "signatureAlgorithm",
                "signatureMethod",
                "signingCert",
                "signingKeys",
                "strategyVersion",
                "subject",
                "syntax",
                "teamId",
                "template",
                "tenantDomain",
                "tokenEndpoint",
                "tokenEndpointAuthMethod",
                "tokenEndpointAuthSigningAlg",
                "totps",
                "twilioSid",
                "twilioToken",
                "type",
                "upstreamParams",
                "useCertAuth",
                "useKerberos",
                "useWsfed",
                "userAuthorizationUrl",
                "userIdAttribute",
                "userinfoEndpoint",
                "validations",
                "waadCommonEndpoint",
                "waadProtocol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttribute:getConnectionOptionAttribute": {
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributeEmail:getConnectionOptionAttributeEmail"
                    },
                    "description": "Connection Options for Email Attribute\n"
                },
                "phoneNumbers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributePhoneNumber:getConnectionOptionAttributePhoneNumber"
                    },
                    "description": "Connection Options for Phone Number Attribute\n"
                },
                "usernames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributeUsername:getConnectionOptionAttributeUsername"
                    },
                    "description": "Connection Options for User Name Attribute\n"
                }
            },
            "type": "object",
            "required": [
                "emails",
                "phoneNumbers",
                "usernames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributeEmail:getConnectionOptionAttributeEmail": {
            "properties": {
                "identifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributeEmailIdentifier:getConnectionOptionAttributeEmailIdentifier"
                    },
                    "description": "Connection Options Email Attribute Identifier\n"
                },
                "profileRequired": {
                    "type": "boolean",
                    "description": "Defines whether Profile is required\n"
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributeEmailSignup:getConnectionOptionAttributeEmailSignup"
                    },
                    "description": "Defines signup settings for Email attribute\n"
                },
                "unique": {
                    "type": "boolean",
                    "description": "If set to false, it allow multiple accounts with the same email address\n"
                },
                "verificationMethod": {
                    "type": "string",
                    "description": "Defines whether whether user will receive a link or an OTP during user signup for email verification and password reset for email verification\n"
                }
            },
            "type": "object",
            "required": [
                "identifiers",
                "profileRequired",
                "signups",
                "unique",
                "verificationMethod"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributeEmailIdentifier:getConnectionOptionAttributeEmailIdentifier": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defines whether email attribute is active as an identifier\n"
                }
            },
            "type": "object",
            "required": [
                "active"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributeEmailSignup:getConnectionOptionAttributeEmailSignup": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Defines signup status for Email Attribute\n"
                },
                "verifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributeEmailSignupVerification:getConnectionOptionAttributeEmailSignupVerification"
                    },
                    "description": "Defines settings for Verification under Email attribute\n"
                }
            },
            "type": "object",
            "required": [
                "status",
                "verifications"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributeEmailSignupVerification:getConnectionOptionAttributeEmailSignupVerification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defines verification settings for signup attribute\n"
                }
            },
            "type": "object",
            "required": [
                "active"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributeMap:getConnectionOptionAttributeMap": {
            "properties": {
                "attributes": {
                    "type": "string",
                    "description": "This property is an object containing mapping information that allows Auth0 to interpret incoming claims from the IdP. Mapping information must be provided as key/value pairs.\n"
                },
                "mappingMode": {
                    "type": "string",
                    "description": "Method used to map incoming claims. Possible values: \u003cspan pulumi-lang-nodejs=\"`useMap`\" pulumi-lang-dotnet=\"`UseMap`\" pulumi-lang-go=\"`useMap`\" pulumi-lang-python=\"`use_map`\" pulumi-lang-yaml=\"`useMap`\" pulumi-lang-java=\"`useMap`\"\u003e`use_map`\u003c/span\u003e (Okta or OIDC), \u003cspan pulumi-lang-nodejs=\"`bindAll`\" pulumi-lang-dotnet=\"`BindAll`\" pulumi-lang-go=\"`bindAll`\" pulumi-lang-python=\"`bind_all`\" pulumi-lang-yaml=\"`bindAll`\" pulumi-lang-java=\"`bindAll`\"\u003e`bind_all`\u003c/span\u003e (OIDC) or \u003cspan pulumi-lang-nodejs=\"`basicProfile`\" pulumi-lang-dotnet=\"`BasicProfile`\" pulumi-lang-go=\"`basicProfile`\" pulumi-lang-python=\"`basic_profile`\" pulumi-lang-yaml=\"`basicProfile`\" pulumi-lang-java=\"`basicProfile`\"\u003e`basic_profile`\u003c/span\u003e (Okta).\n"
                },
                "userinfoScope": {
                    "type": "string",
                    "description": "This property defines the scopes that Auth0 sends to the IdP’s UserInfo endpoint when requested.\n"
                }
            },
            "type": "object",
            "required": [
                "attributes",
                "mappingMode",
                "userinfoScope"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributePhoneNumber:getConnectionOptionAttributePhoneNumber": {
            "properties": {
                "identifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributePhoneNumberIdentifier:getConnectionOptionAttributePhoneNumberIdentifier"
                    },
                    "description": "Connection Options Phone Number Attribute Identifier\n"
                },
                "profileRequired": {
                    "type": "boolean",
                    "description": "Defines whether Profile is required\n"
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributePhoneNumberSignup:getConnectionOptionAttributePhoneNumberSignup"
                    },
                    "description": "Defines signup settings for Phone Number attribute\n"
                }
            },
            "type": "object",
            "required": [
                "identifiers",
                "profileRequired",
                "signups"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributePhoneNumberIdentifier:getConnectionOptionAttributePhoneNumberIdentifier": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defines whether Phone Number attribute is active as an identifier\n"
                }
            },
            "type": "object",
            "required": [
                "active"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributePhoneNumberSignup:getConnectionOptionAttributePhoneNumberSignup": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Defines status of signup for Phone Number attribute\n"
                },
                "verifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributePhoneNumberSignupVerification:getConnectionOptionAttributePhoneNumberSignupVerification"
                    },
                    "description": "Defines verification settings for Phone Number attribute\n"
                }
            },
            "type": "object",
            "required": [
                "status",
                "verifications"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributePhoneNumberSignupVerification:getConnectionOptionAttributePhoneNumberSignupVerification": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defines verification settings for Phone Number attribute\n"
                }
            },
            "type": "object",
            "required": [
                "active"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributeUsername:getConnectionOptionAttributeUsername": {
            "properties": {
                "identifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributeUsernameIdentifier:getConnectionOptionAttributeUsernameIdentifier"
                    },
                    "description": "Connection options for User Name Attribute Identifier\n"
                },
                "profileRequired": {
                    "type": "boolean",
                    "description": "Defines whether Profile is required\n"
                },
                "signups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributeUsernameSignup:getConnectionOptionAttributeUsernameSignup"
                    },
                    "description": "Defines signup settings for User Name attribute\n"
                },
                "validations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributeUsernameValidation:getConnectionOptionAttributeUsernameValidation"
                    },
                    "description": "Defines validation settings for User Name attribute\n"
                }
            },
            "type": "object",
            "required": [
                "identifiers",
                "profileRequired",
                "signups",
                "validations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributeUsernameIdentifier:getConnectionOptionAttributeUsernameIdentifier": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Defines whether UserName attribute is active as an identifier\n"
                }
            },
            "type": "object",
            "required": [
                "active"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributeUsernameSignup:getConnectionOptionAttributeUsernameSignup": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Defines whether User Name attribute is active as an identifier\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributeUsernameValidation:getConnectionOptionAttributeUsernameValidation": {
            "properties": {
                "allowedTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAttributeUsernameValidationAllowedType:getConnectionOptionAttributeUsernameValidationAllowedType"
                    },
                    "description": "Defines allowed types for for UserName attribute\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "Defines Max Length for User Name attribute\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "Defines Min Length for User Name attribute\n"
                }
            },
            "type": "object",
            "required": [
                "allowedTypes",
                "maxLength",
                "minLength"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAttributeUsernameValidationAllowedType:getConnectionOptionAttributeUsernameValidationAllowedType": {
            "properties": {
                "email": {
                    "type": "boolean",
                    "description": "One of the allowed types for UserName signup attribute\n"
                },
                "phoneNumber": {
                    "type": "boolean",
                    "description": "One of the allowed types for UserName signup attribute\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "phoneNumber"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAuthenticationMethod:getConnectionOptionAuthenticationMethod": {
            "properties": {
                "passkeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAuthenticationMethodPasskey:getConnectionOptionAuthenticationMethodPasskey"
                    },
                    "description": "Configures passkey authentication\n"
                },
                "passwords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionAuthenticationMethodPassword:getConnectionOptionAuthenticationMethodPassword"
                    },
                    "description": "Configures password authentication\n"
                }
            },
            "type": "object",
            "required": [
                "passkeys",
                "passwords"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAuthenticationMethodPasskey:getConnectionOptionAuthenticationMethodPasskey": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables passkey authentication\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionAuthenticationMethodPassword:getConnectionOptionAuthenticationMethodPassword": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables password authentication\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionConnectionSetting:getConnectionOptionConnectionSetting": {
            "properties": {
                "pkce": {
                    "type": "string",
                    "description": "PKCE configuration. Possible values: \u003cspan pulumi-lang-nodejs=\"`auto`\" pulumi-lang-dotnet=\"`Auto`\" pulumi-lang-go=\"`auto`\" pulumi-lang-python=\"`auto`\" pulumi-lang-yaml=\"`auto`\" pulumi-lang-java=\"`auto`\"\u003e`auto`\u003c/span\u003e (uses the strongest algorithm available), `S256` (uses the SHA-256 algorithm), \u003cspan pulumi-lang-nodejs=\"`plain`\" pulumi-lang-dotnet=\"`Plain`\" pulumi-lang-go=\"`plain`\" pulumi-lang-python=\"`plain`\" pulumi-lang-yaml=\"`plain`\" pulumi-lang-java=\"`plain`\"\u003e`plain`\u003c/span\u003e (uses plaintext as described in the PKCE specification) or \u003cspan pulumi-lang-nodejs=\"`disabled`\" pulumi-lang-dotnet=\"`Disabled`\" pulumi-lang-go=\"`disabled`\" pulumi-lang-python=\"`disabled`\" pulumi-lang-yaml=\"`disabled`\" pulumi-lang-java=\"`disabled`\"\u003e`disabled`\u003c/span\u003e (disables support for PKCE).\n"
                }
            },
            "type": "object",
            "required": [
                "pkce"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionCustomHeader:getConnectionOptionCustomHeader": {
            "properties": {
                "header": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "header",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionDecryptionKey:getConnectionOptionDecryptionKey": {
            "properties": {
                "cert": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionGatewayAuthentication:getConnectionOptionGatewayAuthentication": {
            "properties": {
                "audience": {
                    "type": "string",
                    "description": "Audience claim for the HS256 token sent to \u003cspan pulumi-lang-nodejs=\"`gatewayUrl`\" pulumi-lang-dotnet=\"`GatewayUrl`\" pulumi-lang-go=\"`gatewayUrl`\" pulumi-lang-python=\"`gateway_url`\" pulumi-lang-yaml=\"`gatewayUrl`\" pulumi-lang-java=\"`gatewayUrl`\"\u003e`gateway_url`\u003c/span\u003e.\n"
                },
                "method": {
                    "type": "string",
                    "description": "Authentication method (default is \u003cspan pulumi-lang-nodejs=\"`bearer`\" pulumi-lang-dotnet=\"`Bearer`\" pulumi-lang-go=\"`bearer`\" pulumi-lang-python=\"`bearer`\" pulumi-lang-yaml=\"`bearer`\" pulumi-lang-java=\"`bearer`\"\u003e`bearer`\u003c/span\u003e token).\n"
                },
                "secret": {
                    "type": "string",
                    "description": "Secret used to sign the HS256 token sent to \u003cspan pulumi-lang-nodejs=\"`gatewayUrl`\" pulumi-lang-dotnet=\"`GatewayUrl`\" pulumi-lang-go=\"`gatewayUrl`\" pulumi-lang-python=\"`gateway_url`\" pulumi-lang-yaml=\"`gatewayUrl`\" pulumi-lang-java=\"`gatewayUrl`\"\u003e`gateway_url`\u003c/span\u003e.\n"
                },
                "secretBase64Encoded": {
                    "type": "boolean",
                    "description": "Specifies whether or not the secret is Base64-encoded.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Subject claim for the HS256 token sent to \u003cspan pulumi-lang-nodejs=\"`gatewayUrl`\" pulumi-lang-dotnet=\"`GatewayUrl`\" pulumi-lang-go=\"`gatewayUrl`\" pulumi-lang-python=\"`gateway_url`\" pulumi-lang-yaml=\"`gatewayUrl`\" pulumi-lang-java=\"`gatewayUrl`\"\u003e`gateway_url`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "audience",
                "method",
                "secret",
                "secretBase64Encoded",
                "subject"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionIdpInitiated:getConnectionOptionIdpInitiated": {
            "properties": {
                "clientAuthorizeQuery": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "clientProtocol": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "clientAuthorizeQuery",
                "clientId",
                "clientProtocol",
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionMfa:getConnectionOptionMfa": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Indicates whether multifactor authentication is enabled for this connection.\n"
                },
                "returnEnrollSettings": {
                    "type": "boolean",
                    "description": "Indicates whether multifactor authentication enrollment settings will be returned.\n"
                }
            },
            "type": "object",
            "required": [
                "active",
                "returnEnrollSettings"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionPasskeyOption:getConnectionOptionPasskeyOption": {
            "properties": {
                "challengeUi": {
                    "type": "string",
                    "description": "Controls the UI used to challenge the user for their passkey\n"
                },
                "localEnrollmentEnabled": {
                    "type": "boolean",
                    "description": "Enables or disables enrollment prompt for local passkey when user authenticates using a cross-device passkey for the connection\n"
                },
                "progressiveEnrollmentEnabled": {
                    "type": "boolean",
                    "description": "Enables or disables progressive enrollment of passkeys for the connection\n"
                }
            },
            "type": "object",
            "required": [
                "challengeUi",
                "localEnrollmentEnabled",
                "progressiveEnrollmentEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionPasswordComplexityOption:getConnectionOptionPasswordComplexityOption": {
            "properties": {
                "minLength": {
                    "type": "integer",
                    "description": "Minimum number of characters allowed in passwords.\n"
                }
            },
            "type": "object",
            "required": [
                "minLength"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionPasswordDictionary:getConnectionOptionPasswordDictionary": {
            "properties": {
                "dictionaries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Indicates whether the password dictionary check is enabled for this connection.\n"
                }
            },
            "type": "object",
            "required": [
                "dictionaries",
                "enable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionPasswordHistory:getConnectionOptionPasswordHistory": {
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "enable",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionPasswordNoPersonalInfo:getConnectionOptionPasswordNoPersonalInfo": {
            "properties": {
                "enable": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "enable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionSigningKey:getConnectionOptionSigningKey": {
            "properties": {
                "cert": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "cert",
                "key"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionTotp:getConnectionOptionTotp": {
            "properties": {
                "length": {
                    "type": "integer",
                    "description": "Length of the one-time password.\n"
                },
                "timeStep": {
                    "type": "integer",
                    "description": "Seconds between allowed generation of new passwords.\n"
                }
            },
            "type": "object",
            "required": [
                "length",
                "timeStep"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionValidation:getConnectionOptionValidation": {
            "properties": {
                "usernames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getConnectionOptionValidationUsername:getConnectionOptionValidationUsername"
                    },
                    "description": "Specifies the \u003cspan pulumi-lang-nodejs=\"`min`\" pulumi-lang-dotnet=\"`Min`\" pulumi-lang-go=\"`min`\" pulumi-lang-python=\"`min`\" pulumi-lang-yaml=\"`min`\" pulumi-lang-java=\"`min`\"\u003e`min`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`max`\" pulumi-lang-dotnet=\"`Max`\" pulumi-lang-go=\"`max`\" pulumi-lang-python=\"`max`\" pulumi-lang-yaml=\"`max`\" pulumi-lang-java=\"`max`\"\u003e`max`\u003c/span\u003e values of username length.\n"
                }
            },
            "type": "object",
            "required": [
                "usernames"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionOptionValidationUsername:getConnectionOptionValidationUsername": {
            "properties": {
                "max": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "max",
                "min"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionScimConfigurationDefaultMapping:getConnectionScimConfigurationDefaultMapping": {
            "properties": {
                "auth0": {
                    "type": "string",
                    "description": "The field location in the Auth0 schema.\n"
                },
                "scim": {
                    "type": "string",
                    "description": "The field location in the SCIM schema.\n"
                }
            },
            "type": "object",
            "required": [
                "auth0",
                "scim"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getConnectionScimConfigurationMapping:getConnectionScimConfigurationMapping": {
            "properties": {
                "auth0": {
                    "type": "string",
                    "description": "The field location in the Auth0 schema.\n"
                },
                "scim": {
                    "type": "string",
                    "description": "The field location in the SCIM schema.\n"
                }
            },
            "type": "object",
            "required": [
                "auth0",
                "scim"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getCustomDomainCertificate:getCustomDomainCertificate": {
            "properties": {
                "certificateAuthority": {
                    "type": "string",
                    "description": "Name of the certificate authority that issued the certificate.\n"
                },
                "errorMsg": {
                    "type": "string",
                    "description": "Contains the error message if the provisioning process fails.\n"
                },
                "renewsBefore": {
                    "type": "string",
                    "description": "Specifies the date by which the certificate should be renewed.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Indicates the current state of the certificate provisioning process.\n"
                }
            },
            "type": "object",
            "required": [
                "certificateAuthority",
                "errorMsg",
                "renewsBefore",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getCustomDomainVerification:getCustomDomainVerification": {
            "properties": {
                "errorMsg": {
                    "type": "string",
                    "description": "Contains error message, if any, from the last DNS verification check.\n"
                },
                "lastVerifiedAt": {
                    "type": "string",
                    "description": "Indicates the last time the domain was successfully verified.\n"
                },
                "methods": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Defines the list of domain verification methods used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Represents the current status of the domain verification process.\n"
                }
            },
            "type": "object",
            "required": [
                "errorMsg",
                "lastVerifiedAt",
                "methods",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getEventStreamEventbridgeConfiguration:getEventStreamEventbridgeConfiguration": {
            "properties": {
                "awsAccountId": {
                    "type": "string"
                },
                "awsPartnerEventSource": {
                    "type": "string"
                },
                "awsRegion": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "awsAccountId",
                "awsPartnerEventSource",
                "awsRegion"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getEventStreamWebhookConfiguration:getEventStreamWebhookConfiguration": {
            "properties": {
                "webhookAuthorizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getEventStreamWebhookConfigurationWebhookAuthorization:getEventStreamWebhookConfigurationWebhookAuthorization"
                    },
                    "description": "Authorization details for the webhook endpoint. Supports \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e authentication using \u003cspan pulumi-lang-nodejs=\"`username`\" pulumi-lang-dotnet=\"`Username`\" pulumi-lang-go=\"`username`\" pulumi-lang-python=\"`username`\" pulumi-lang-yaml=\"`username`\" pulumi-lang-java=\"`username`\"\u003e`username`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`password`\" pulumi-lang-dotnet=\"`Password`\" pulumi-lang-go=\"`password`\" pulumi-lang-python=\"`password`\" pulumi-lang-yaml=\"`password`\" pulumi-lang-java=\"`password`\"\u003e`password`\u003c/span\u003e, or \u003cspan pulumi-lang-nodejs=\"`bearer`\" pulumi-lang-dotnet=\"`Bearer`\" pulumi-lang-go=\"`bearer`\" pulumi-lang-python=\"`bearer`\" pulumi-lang-yaml=\"`bearer`\" pulumi-lang-java=\"`bearer`\"\u003e`bearer`\u003c/span\u003e authentication using a \u003cspan pulumi-lang-nodejs=\"`token`\" pulumi-lang-dotnet=\"`Token`\" pulumi-lang-go=\"`token`\" pulumi-lang-python=\"`token`\" pulumi-lang-yaml=\"`token`\" pulumi-lang-java=\"`token`\"\u003e`token`\u003c/span\u003e. The appropriate fields must be set based on the chosen method.\n"
                },
                "webhookEndpoint": {
                    "type": "string",
                    "description": "The HTTPS endpoint that will receive the webhook events. Must be a valid, publicly accessible URL.\n"
                }
            },
            "type": "object",
            "required": [
                "webhookAuthorizations",
                "webhookEndpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getEventStreamWebhookConfigurationWebhookAuthorization:getEventStreamWebhookConfigurationWebhookAuthorization": {
            "properties": {
                "method": {
                    "type": "string",
                    "description": "The authorization method used to secure the webhook endpoint. Can be either \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`bearer`\" pulumi-lang-dotnet=\"`Bearer`\" pulumi-lang-go=\"`bearer`\" pulumi-lang-python=\"`bearer`\" pulumi-lang-yaml=\"`bearer`\" pulumi-lang-java=\"`bearer`\"\u003e`bearer`\u003c/span\u003e.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password for \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e authentication. Required when \u003cspan pulumi-lang-nodejs=\"`method`\" pulumi-lang-dotnet=\"`Method`\" pulumi-lang-go=\"`method`\" pulumi-lang-python=\"`method`\" pulumi-lang-yaml=\"`method`\" pulumi-lang-java=\"`method`\"\u003e`method`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The token used for \u003cspan pulumi-lang-nodejs=\"`bearer`\" pulumi-lang-dotnet=\"`Bearer`\" pulumi-lang-go=\"`bearer`\" pulumi-lang-python=\"`bearer`\" pulumi-lang-yaml=\"`bearer`\" pulumi-lang-java=\"`bearer`\"\u003e`bearer`\u003c/span\u003e authentication. Required when \u003cspan pulumi-lang-nodejs=\"`method`\" pulumi-lang-dotnet=\"`Method`\" pulumi-lang-go=\"`method`\" pulumi-lang-python=\"`method`\" pulumi-lang-yaml=\"`method`\" pulumi-lang-java=\"`method`\"\u003e`method`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`bearer`\" pulumi-lang-dotnet=\"`Bearer`\" pulumi-lang-go=\"`bearer`\" pulumi-lang-python=\"`bearer`\" pulumi-lang-yaml=\"`bearer`\" pulumi-lang-java=\"`bearer`\"\u003e`bearer`\u003c/span\u003e.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username for \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e authentication. Required when \u003cspan pulumi-lang-nodejs=\"`method`\" pulumi-lang-dotnet=\"`Method`\" pulumi-lang-go=\"`method`\" pulumi-lang-python=\"`method`\" pulumi-lang-yaml=\"`method`\" pulumi-lang-java=\"`method`\"\u003e`method`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`basic`\" pulumi-lang-dotnet=\"`Basic`\" pulumi-lang-go=\"`basic`\" pulumi-lang-python=\"`basic`\" pulumi-lang-yaml=\"`basic`\" pulumi-lang-java=\"`basic`\"\u003e`basic`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "method",
                "password",
                "token",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getFormLanguage:getFormLanguage": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "Default language for the form.\n"
                },
                "primary": {
                    "type": "string",
                    "description": "Primary language for the form.\n"
                }
            },
            "type": "object",
            "required": [
                "default",
                "primary"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getFormMessage:getFormMessage": {
            "properties": {
                "custom": {
                    "type": "string",
                    "description": "Custom message for the form. (JSON encoded)\n"
                },
                "errors": {
                    "type": "string",
                    "description": "Error message for the form. (JSON encoded)\n"
                }
            },
            "type": "object",
            "required": [
                "custom",
                "errors"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getNetworkAclRule:getNetworkAclRule": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getNetworkAclRuleAction:getNetworkAclRuleAction"
                    },
                    "description": "The action configuration for the Network ACL Rule. Only one action type (block, allow, log, or redirect) should be specified.\n"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getNetworkAclRuleMatch:getNetworkAclRuleMatch"
                    },
                    "description": "The configuration for the Network ACL Rule\n"
                },
                "notMatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getNetworkAclRuleNotMatch:getNetworkAclRuleNotMatch"
                    },
                    "description": "The configuration for the Network ACL Rule\n"
                },
                "scope": {
                    "type": "string",
                    "description": "The scope of the Network ACL Rule\n"
                }
            },
            "type": "object",
            "required": [
                "actions",
                "matches",
                "notMatches",
                "scope"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getNetworkAclRuleAction:getNetworkAclRuleAction": {
            "properties": {
                "allow": {
                    "type": "boolean",
                    "description": "If true, allows the request. When using allow action, no other properties should be set.\n"
                },
                "block": {
                    "type": "boolean",
                    "description": "If true, blocks the request. When using block action, no other properties should be set.\n"
                },
                "log": {
                    "type": "boolean",
                    "description": "If true, logs the request. When using log action, no other properties should be set.\n"
                },
                "redirect": {
                    "type": "boolean",
                    "description": "If true, redirects the request. When using redirect action,\u003cspan pulumi-lang-nodejs=\" redirectUri \" pulumi-lang-dotnet=\" RedirectUri \" pulumi-lang-go=\" redirectUri \" pulumi-lang-python=\" redirect_uri \" pulumi-lang-yaml=\" redirectUri \" pulumi-lang-java=\" redirectUri \"\u003e redirect_uri \u003c/span\u003emust also be specified.\n"
                },
                "redirectUri": {
                    "type": "string",
                    "description": "The URI to redirect to when redirect is true. Required when redirect is true. Must be between 1 and 2000 characters.\n"
                }
            },
            "type": "object",
            "required": [
                "allow",
                "block",
                "log",
                "redirect",
                "redirectUri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getNetworkAclRuleMatch:getNetworkAclRuleMatch": {
            "properties": {
                "asns": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "ASNs. Must contain between 1 and 10 unique items.\n"
                },
                "geoCountryCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Geo Country Codes. Must contain between 1 and 10 unique items.\n"
                },
                "geoSubdivisionCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Geo Subdivision Codes. Must contain between 1 and 10 unique items.\n"
                },
                "ipv4Cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv4 CIDRs. Must contain between 1 and 10 unique items. Can be IPv4 addresses or CIDR blocks.\n"
                },
                "ipv6Cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv6 CIDRs. Must contain between 1 and 10 unique items. Can be IPv6 addresses or CIDR blocks.\n"
                },
                "ja3Fingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JA3 Fingerprints. Must contain between 1 and 10 unique items.\n"
                },
                "ja4Fingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JA4 Fingerprints. Must contain between 1 and 10 unique items.\n"
                },
                "userAgents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User Agents. Must contain between 1 and 10 unique items.\n"
                }
            },
            "type": "object",
            "required": [
                "asns",
                "geoCountryCodes",
                "geoSubdivisionCodes",
                "ipv4Cidrs",
                "ipv6Cidrs",
                "ja3Fingerprints",
                "ja4Fingerprints",
                "userAgents"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getNetworkAclRuleNotMatch:getNetworkAclRuleNotMatch": {
            "properties": {
                "asns": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "ASNs. Must contain between 1 and 10 unique items.\n"
                },
                "geoCountryCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Geo Country Codes. Must contain between 1 and 10 unique items.\n"
                },
                "geoSubdivisionCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Geo Subdivision Codes. Must contain between 1 and 10 unique items.\n"
                },
                "ipv4Cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv4 CIDRs. Must contain between 1 and 10 unique items. Can be IPv4 addresses or CIDR blocks.\n"
                },
                "ipv6Cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IPv6 CIDRs. Must contain between 1 and 10 unique items. Can be IPv6 addresses or CIDR blocks.\n"
                },
                "ja3Fingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JA3 Fingerprints. Must contain between 1 and 10 unique items.\n"
                },
                "ja4Fingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "JA4 Fingerprints. Must contain between 1 and 10 unique items.\n"
                },
                "userAgents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "User Agents. Must contain between 1 and 10 unique items.\n"
                }
            },
            "type": "object",
            "required": [
                "asns",
                "geoCountryCodes",
                "geoSubdivisionCodes",
                "ipv4Cidrs",
                "ipv6Cidrs",
                "ja3Fingerprints",
                "ja4Fingerprints",
                "userAgents"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getOrganizationBranding:getOrganizationBranding": {
            "properties": {
                "colors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Color scheme used to customize the login pages.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of logo to display on login page.\n"
                }
            },
            "type": "object",
            "required": [
                "colors",
                "logoUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getOrganizationConnection:getOrganizationConnection": {
            "properties": {
                "assignMembershipOnLogin": {
                    "type": "boolean",
                    "description": "When \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e, all users that log in with this connection will be automatically granted membership in the organization. When \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e, users must be granted membership in the organization before logging in with this connection.\n"
                },
                "connectionId": {
                    "type": "string",
                    "description": "The ID of the enabled connection on the organization.\n"
                },
                "isSignupEnabled": {
                    "type": "boolean",
                    "description": "Determines whether organization sign-up should be enabled for this organization connection. Only applicable for database connections. Note: \u003cspan pulumi-lang-nodejs=\"`isSignupEnabled`\" pulumi-lang-dotnet=\"`IsSignupEnabled`\" pulumi-lang-go=\"`isSignupEnabled`\" pulumi-lang-python=\"`is_signup_enabled`\" pulumi-lang-yaml=\"`isSignupEnabled`\" pulumi-lang-java=\"`isSignupEnabled`\"\u003e`is_signup_enabled`\u003c/span\u003e can only be \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e if \u003cspan pulumi-lang-nodejs=\"`assignMembershipOnLogin`\" pulumi-lang-dotnet=\"`AssignMembershipOnLogin`\" pulumi-lang-go=\"`assignMembershipOnLogin`\" pulumi-lang-python=\"`assign_membership_on_login`\" pulumi-lang-yaml=\"`assignMembershipOnLogin`\" pulumi-lang-java=\"`assignMembershipOnLogin`\"\u003e`assign_membership_on_login`\u003c/span\u003e is \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "showAsButton": {
                    "type": "boolean",
                    "description": "Determines whether a connection should be displayed on this organization’s login prompt. Only applicable for enterprise connections.\n"
                }
            },
            "type": "object",
            "required": [
                "assignMembershipOnLogin",
                "connectionId",
                "isSignupEnabled",
                "showAsButton"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getOrganizationTokenQuota:getOrganizationTokenQuota": {
            "properties": {
                "clientCredentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getOrganizationTokenQuotaClientCredential:getOrganizationTokenQuotaClientCredential"
                    },
                    "description": "The token quota configuration for client credentials.\n"
                }
            },
            "type": "object",
            "required": [
                "clientCredentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getOrganizationTokenQuotaClientCredential:getOrganizationTokenQuotaClientCredential": {
            "properties": {
                "enforce": {
                    "type": "boolean",
                    "description": "If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.\n"
                },
                "perDay": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per day\n"
                },
                "perHour": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per hour\n"
                }
            },
            "type": "object",
            "required": [
                "enforce",
                "perDay",
                "perHour"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getOutboundIpsChangelog:getOutboundIpsChangelog": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Type of change (add or remove).\n"
                },
                "date": {
                    "type": "string",
                    "description": "Date of the change (YYYY-MM-DD format).\n"
                },
                "ipv4Cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IPv4 CIDR blocks affected by this change.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region affected by the change.\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "date",
                "ipv4Cidrs",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getOutboundIpsRegion:getOutboundIpsRegion": {
            "properties": {
                "ipv4Cidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of IPv4 CIDR blocks for the region.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The code for the region (e.g., 'US', 'CA').\n"
                }
            },
            "type": "object",
            "required": [
                "ipv4Cidrs",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getPagesChangePassword:getPagesChangePassword": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether to use the custom Reset Password HTML (\u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e) or the default Auth0 page (\u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e).\n"
                },
                "html": {
                    "type": "string",
                    "description": "Customized content for the Reset Password page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "html"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getPagesError:getPagesError": {
            "properties": {
                "html": {
                    "type": "string",
                    "description": "Customized content for the Error page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).\n"
                },
                "showLogLink": {
                    "type": "boolean",
                    "description": "Indicates whether to show the link to logs as part of the default error page.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL to redirect to when an error occurs, instead of showing the default error page.\n"
                }
            },
            "type": "object",
            "required": [
                "html",
                "showLogLink",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getPagesGuardianMfa:getPagesGuardianMfa": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether to use the custom Guardian MFA HTML (\u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e) or the default Auth0 page (\u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e).\n"
                },
                "html": {
                    "type": "string",
                    "description": "Customized content for the Guardian MFA page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "html"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getPagesLogin:getPagesLogin": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether to use the custom Login page HTML (\u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e) or the default Auth0 page (\u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e).\n"
                },
                "html": {
                    "type": "string",
                    "description": "Customized content for the Login page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "html"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getPhoneProviderConfiguration:getPhoneProviderConfiguration": {
            "properties": {
                "defaultFrom": {
                    "type": "string",
                    "description": "Default sender subject as \"from\" when no other value is specified.\n"
                },
                "deliveryMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Media set supported by a given provider to deliver a notification\n"
                },
                "mssid": {
                    "type": "string",
                    "description": "Twilio Messaging Service SID\n"
                },
                "sid": {
                    "type": "string",
                    "description": "Twilio Account SID.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultFrom",
                "deliveryMethods",
                "mssid",
                "sid"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getPhoneProviderCredential:getPhoneProviderCredential": {
            "properties": {
                "authToken": {
                    "type": "string",
                    "description": "The Auth Token for the phone provider.\n"
                }
            },
            "type": "object",
            "required": [
                "authToken"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getPromptScreenPartialsScreenPartial:getPromptScreenPartialsScreenPartial": {
            "properties": {
                "insertionPoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getPromptScreenPartialsScreenPartialInsertionPoint:getPromptScreenPartialsScreenPartialInsertionPoint"
                    }
                },
                "screenName": {
                    "type": "string",
                    "description": "The name of the screen associated with the partials\n"
                }
            },
            "type": "object",
            "required": [
                "insertionPoints",
                "screenName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getPromptScreenPartialsScreenPartialInsertionPoint:getPromptScreenPartialsScreenPartialInsertionPoint": {
            "properties": {
                "formContent": {
                    "type": "string",
                    "description": "Content that goes inside the form\n"
                },
                "formContentEnd": {
                    "type": "string",
                    "description": "Content that goes at the end of the form.\n"
                },
                "formContentStart": {
                    "type": "string",
                    "description": "Content that goes at the start of the form.\n"
                },
                "formFooterEnd": {
                    "type": "string",
                    "description": "Footer content for the end of the footer.\n"
                },
                "formFooterStart": {
                    "type": "string",
                    "description": "Footer content for the start of the footer.\n"
                },
                "secondaryActionsEnd": {
                    "type": "string",
                    "description": "Actions that go at the end of secondary actions.\n"
                },
                "secondaryActionsStart": {
                    "type": "string",
                    "description": "Actions that go at the start of secondary actions.\n"
                }
            },
            "type": "object",
            "required": [
                "formContent",
                "formContentEnd",
                "formContentStart",
                "formFooterEnd",
                "formFooterStart",
                "secondaryActionsEnd",
                "secondaryActionsStart"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getPromptScreenRendererFilter:getPromptScreenRendererFilter": {
            "properties": {
                "clients": {
                    "type": "string",
                    "description": "An array of clients (applications) identified by id or a metadata key/value pair. Entity Limit: 25.\n"
                },
                "domains": {
                    "type": "string",
                    "description": "An array of domains identified by id or a metadata key/value pair. Entity Limit: 25.\n"
                },
                "matchType": {
                    "type": "string",
                    "description": "Type of match to apply. Options: \u003cspan pulumi-lang-nodejs=\"`includesAny`\" pulumi-lang-dotnet=\"`IncludesAny`\" pulumi-lang-go=\"`includesAny`\" pulumi-lang-python=\"`includes_any`\" pulumi-lang-yaml=\"`includesAny`\" pulumi-lang-java=\"`includesAny`\"\u003e`includes_any`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`excludesAny`\" pulumi-lang-dotnet=\"`ExcludesAny`\" pulumi-lang-go=\"`excludesAny`\" pulumi-lang-python=\"`excludes_any`\" pulumi-lang-yaml=\"`excludesAny`\" pulumi-lang-java=\"`excludesAny`\"\u003e`excludes_any`\u003c/span\u003e.\n"
                },
                "organizations": {
                    "type": "string",
                    "description": "An array of organizations identified by id or a metadata key/value pair. Entity Limit: 25.\n"
                }
            },
            "type": "object",
            "required": [
                "clients",
                "domains",
                "matchType",
                "organizations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getResourceServerAuthorizationDetail:getResourceServerAuthorizationDetail": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "Disable authorization details.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of authorization details.\n"
                }
            },
            "type": "object",
            "required": [
                "disable",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getResourceServerProofOfPossession:getResourceServerProofOfPossession": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "Disable proof-of-possession.\n"
                },
                "mechanism": {
                    "type": "string",
                    "description": "Mechanism used for proof-of-possession. \u003cspan pulumi-lang-nodejs=\"`mtls`\" pulumi-lang-dotnet=\"`Mtls`\" pulumi-lang-go=\"`mtls`\" pulumi-lang-python=\"`mtls`\" pulumi-lang-yaml=\"`mtls`\" pulumi-lang-java=\"`mtls`\"\u003e`mtls`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`dpop`\" pulumi-lang-dotnet=\"`Dpop`\" pulumi-lang-go=\"`dpop`\" pulumi-lang-python=\"`dpop`\" pulumi-lang-yaml=\"`dpop`\" pulumi-lang-java=\"`dpop`\"\u003e`dpop`\u003c/span\u003e is supported.\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates whether proof-of-possession is required with this resource server.\n"
                }
            },
            "type": "object",
            "required": [
                "disable",
                "mechanism",
                "required"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getResourceServerScope:getResourceServerScope": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the permission (scope).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getResourceServerSubjectTypeAuthorization:getResourceServerSubjectTypeAuthorization": {
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getResourceServerSubjectTypeAuthorizationClient:getResourceServerSubjectTypeAuthorizationClient"
                    },
                    "description": "Client authorization policies for the resource server.\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getResourceServerSubjectTypeAuthorizationUser:getResourceServerSubjectTypeAuthorizationUser"
                    },
                    "description": "User authorization policies for the resource server.\n"
                }
            },
            "type": "object",
            "required": [
                "clients",
                "users"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getResourceServerSubjectTypeAuthorizationClient:getResourceServerSubjectTypeAuthorizationClient": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "Client flows policy. One of \u003cspan pulumi-lang-nodejs=\"`denyAll`\" pulumi-lang-dotnet=\"`DenyAll`\" pulumi-lang-go=\"`denyAll`\" pulumi-lang-python=\"`deny_all`\" pulumi-lang-yaml=\"`denyAll`\" pulumi-lang-java=\"`denyAll`\"\u003e`deny_all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`requireClientGrant`\" pulumi-lang-dotnet=\"`RequireClientGrant`\" pulumi-lang-go=\"`requireClientGrant`\" pulumi-lang-python=\"`require_client_grant`\" pulumi-lang-yaml=\"`requireClientGrant`\" pulumi-lang-java=\"`requireClientGrant`\"\u003e`require_client_grant`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "policy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getResourceServerSubjectTypeAuthorizationUser:getResourceServerSubjectTypeAuthorizationUser": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "User flows policy. One of \u003cspan pulumi-lang-nodejs=\"`allowAll`\" pulumi-lang-dotnet=\"`AllowAll`\" pulumi-lang-go=\"`allowAll`\" pulumi-lang-python=\"`allow_all`\" pulumi-lang-yaml=\"`allowAll`\" pulumi-lang-java=\"`allowAll`\"\u003e`allow_all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`denyAll`\" pulumi-lang-dotnet=\"`DenyAll`\" pulumi-lang-go=\"`denyAll`\" pulumi-lang-python=\"`deny_all`\" pulumi-lang-yaml=\"`denyAll`\" pulumi-lang-java=\"`denyAll`\"\u003e`deny_all`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`requireClientGrant`\" pulumi-lang-dotnet=\"`RequireClientGrant`\" pulumi-lang-go=\"`requireClientGrant`\" pulumi-lang-python=\"`require_client_grant`\" pulumi-lang-yaml=\"`requireClientGrant`\" pulumi-lang-java=\"`requireClientGrant`\"\u003e`require_client_grant`\u003c/span\u003e.\n"
                }
            },
            "type": "object",
            "required": [
                "policy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getResourceServerTokenEncryption:getResourceServerTokenEncryption": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "Disable token encryption.\n"
                },
                "encryptionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getResourceServerTokenEncryptionEncryptionKey:getResourceServerTokenEncryptionEncryptionKey"
                    },
                    "description": "Authorization details for this resource server.\n"
                },
                "format": {
                    "type": "string",
                    "description": "Format of the token encryption. Only `compact-nested-jwe` is supported.\n"
                }
            },
            "type": "object",
            "required": [
                "disable",
                "encryptionKeys",
                "format"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getResourceServerTokenEncryptionEncryptionKey:getResourceServerTokenEncryptionEncryptionKey": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm used to encrypt the token.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "Key ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the encryption key.\n"
                },
                "pem": {
                    "type": "string",
                    "description": "PEM-formatted public key. Must be JSON escaped.\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "kid",
                "name",
                "pem"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getRolePermission:getRolePermission": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the permission.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the permission (scope) configured on the resource server (API).\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Unique identifier for the resource server (API).\n"
                },
                "resourceServerName": {
                    "type": "string",
                    "description": "Name of resource server (API) that the permission is associated with.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "resourceServerIdentifier",
                "resourceServerName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getSelfServiceProfileBranding:getSelfServiceProfileBranding": {
            "properties": {
                "colors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getSelfServiceProfileBrandingColor:getSelfServiceProfileBrandingColor"
                    },
                    "description": "Configuration settings for colors for branding.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of logo to display on login page.\n"
                }
            },
            "type": "object",
            "required": [
                "colors",
                "logoUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getSelfServiceProfileBrandingColor:getSelfServiceProfileBrandingColor": {
            "properties": {
                "primary": {
                    "type": "string",
                    "description": "Primary button background color in hexadecimal.\n"
                }
            },
            "type": "object",
            "required": [
                "primary"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getSelfServiceProfileUserAttribute:getSelfServiceProfileUserAttribute": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A human readable description of the attribute.\n"
                },
                "isOptional": {
                    "type": "boolean",
                    "description": "Indicates if this attribute is optional or if it has to be provided by the customer for the application to function.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Attribute’s name on Auth0 side\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "isOptional",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getSigningKeysSigningKey:getSigningKeysSigningKey": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "The public certificate of the signing key.\n"
                },
                "current": {
                    "type": "boolean",
                    "description": "True if the key is the the current key.\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "The cert fingerprint.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The key ID of the signing key.\n"
                },
                "next": {
                    "type": "boolean",
                    "description": "True if the key is the the next key.\n"
                },
                "pkcs7": {
                    "type": "string",
                    "description": "The public certificate of the signing key in PKCS7 format.\n"
                },
                "previous": {
                    "type": "boolean",
                    "description": "True if the key is the the previous key.\n"
                },
                "revoked": {
                    "type": "boolean",
                    "description": "True if the key is revoked.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The cert thumbprint.\n"
                }
            },
            "type": "object",
            "required": [
                "cert",
                "current",
                "fingerprint",
                "kid",
                "next",
                "pkcs7",
                "previous",
                "revoked",
                "thumbprint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantDefaultTokenQuota:getTenantDefaultTokenQuota": {
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getTenantDefaultTokenQuotaClient:getTenantDefaultTokenQuotaClient"
                    },
                    "description": "The token quota configuration.\n"
                },
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getTenantDefaultTokenQuotaOrganization:getTenantDefaultTokenQuotaOrganization"
                    },
                    "description": "The token quota configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "clients",
                "organizations"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantDefaultTokenQuotaClient:getTenantDefaultTokenQuotaClient": {
            "properties": {
                "clientCredentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getTenantDefaultTokenQuotaClientClientCredential:getTenantDefaultTokenQuotaClientClientCredential"
                    },
                    "description": "The token quota configuration for client credentials.\n"
                }
            },
            "type": "object",
            "required": [
                "clientCredentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantDefaultTokenQuotaClientClientCredential:getTenantDefaultTokenQuotaClientClientCredential": {
            "properties": {
                "enforce": {
                    "type": "boolean",
                    "description": "If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.\n"
                },
                "perDay": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per day\n"
                },
                "perHour": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per hour\n"
                }
            },
            "type": "object",
            "required": [
                "enforce",
                "perDay",
                "perHour"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantDefaultTokenQuotaOrganization:getTenantDefaultTokenQuotaOrganization": {
            "properties": {
                "clientCredentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getTenantDefaultTokenQuotaOrganizationClientCredential:getTenantDefaultTokenQuotaOrganizationClientCredential"
                    },
                    "description": "The token quota configuration for client credentials.\n"
                }
            },
            "type": "object",
            "required": [
                "clientCredentials"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantDefaultTokenQuotaOrganizationClientCredential:getTenantDefaultTokenQuotaOrganizationClientCredential": {
            "properties": {
                "enforce": {
                    "type": "boolean",
                    "description": "If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.\n"
                },
                "perDay": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per day\n"
                },
                "perHour": {
                    "type": "integer",
                    "description": "Maximum number of issued tokens per hour\n"
                }
            },
            "type": "object",
            "required": [
                "enforce",
                "perDay",
                "perHour"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantErrorPage:getTenantErrorPage": {
            "properties": {
                "html": {
                    "type": "string",
                    "description": "Custom Error HTML (Liquid syntax is supported)\n"
                },
                "showLogLink": {
                    "type": "boolean",
                    "description": "Whether to show the link to log as part of the default error page (true, default) or not to show the link (false).\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL to redirect to when an error occurs instead of showing the default error page\n"
                }
            },
            "type": "object",
            "required": [
                "html",
                "showLogLink",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantFlag:getTenantFlag": {
            "properties": {
                "allowLegacyDelegationGrantTypes": {
                    "type": "boolean",
                    "description": "Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).\n"
                },
                "allowLegacyRoGrantTypes": {
                    "type": "boolean",
                    "description": "Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).\n"
                },
                "allowLegacyTokeninfoEndpoint": {
                    "type": "boolean",
                    "description": "If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.\n"
                },
                "dashboardInsightsView": {
                    "type": "boolean",
                    "description": "Enables new insights activity page view.\n"
                },
                "dashboardLogStreamsNext": {
                    "type": "boolean",
                    "description": "Enables beta access to log streaming changes.\n"
                },
                "disableClickjackProtectionHeaders": {
                    "type": "boolean",
                    "description": "Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.\n"
                },
                "disableFieldsMapFix": {
                    "type": "boolean",
                    "description": "Disables SAML fields map fix for bad mappings with repeated attributes.\n"
                },
                "disableManagementApiSmsObfuscation": {
                    "type": "boolean",
                    "description": "If true, SMS phone numbers will not be obfuscated in Management API GET calls.\n"
                },
                "enableAdfsWaadEmailVerification": {
                    "type": "boolean",
                    "description": "If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.\n"
                },
                "enableApisSection": {
                    "type": "boolean",
                    "description": "Indicates whether the APIs section is enabled for the tenant.\n"
                },
                "enableClientConnections": {
                    "type": "boolean",
                    "description": "Indicates whether all current connections should be enabled when a new client is created.\n"
                },
                "enableCustomDomainInEmails": {
                    "type": "boolean",
                    "description": "Indicates whether the tenant allows custom domains in emails. Before enabling this flag, you must have a custom domain with status: \u003cspan pulumi-lang-nodejs=\"`ready`\" pulumi-lang-dotnet=\"`Ready`\" pulumi-lang-go=\"`ready`\" pulumi-lang-python=\"`ready`\" pulumi-lang-yaml=\"`ready`\" pulumi-lang-java=\"`ready`\"\u003e`ready`\u003c/span\u003e.\n"
                },
                "enableDynamicClientRegistration": {
                    "type": "boolean",
                    "description": "Indicates whether the tenant allows dynamic client registration.\n"
                },
                "enableIdtokenApi2": {
                    "type": "boolean",
                    "description": "Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).\n"
                },
                "enableLegacyLogsSearchV2": {
                    "type": "boolean",
                    "description": "Indicates whether to use the older v2 legacy logs search.\n"
                },
                "enableLegacyProfile": {
                    "type": "boolean",
                    "description": "Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).\n"
                },
                "enablePipeline2": {
                    "type": "boolean",
                    "description": "Indicates whether advanced API Authorization scenarios are enabled.\n"
                },
                "enablePublicSignupUserExistsError": {
                    "type": "boolean",
                    "description": "Indicates whether the public sign up process shows a \u003cspan pulumi-lang-nodejs=\"`userExists`\" pulumi-lang-dotnet=\"`UserExists`\" pulumi-lang-go=\"`userExists`\" pulumi-lang-python=\"`user_exists`\" pulumi-lang-yaml=\"`userExists`\" pulumi-lang-java=\"`userExists`\"\u003e`user_exists`\u003c/span\u003e error if the user already exists.\n"
                },
                "enableSso": {
                    "type": "boolean",
                    "description": "Flag indicating whether users will not be prompted to confirm log in before SSO redirection. This flag applies to existing tenants only; new tenants have it enforced as true.\n"
                },
                "mfaShowFactorListOnEnrollment": {
                    "type": "boolean",
                    "description": "Used to allow users to pick which factor to enroll with from the list of available MFA factors.\n"
                },
                "noDiscloseEnterpriseConnections": {
                    "type": "boolean",
                    "description": "Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.\n"
                },
                "removeAlgFromJwks": {
                    "type": "boolean",
                    "description": "Remove \u003cspan pulumi-lang-nodejs=\"`alg`\" pulumi-lang-dotnet=\"`Alg`\" pulumi-lang-go=\"`alg`\" pulumi-lang-python=\"`alg`\" pulumi-lang-yaml=\"`alg`\" pulumi-lang-java=\"`alg`\"\u003e`alg`\u003c/span\u003e from jwks(JSON Web Key Sets).\n"
                },
                "requirePushedAuthorizationRequests": {
                    "type": "boolean",
                    "description": "This Flag is not supported by the Auth0 Management API and will be removed in the next major release.\n"
                },
                "revokeRefreshTokenGrant": {
                    "type": "boolean",
                    "description": "Delete underlying grant when a refresh token is revoked via the Authentication API.\n"
                },
                "useScopeDescriptionsForConsent": {
                    "type": "boolean",
                    "description": "Indicates whether to use scope descriptions for consent.\n"
                }
            },
            "type": "object",
            "required": [
                "allowLegacyDelegationGrantTypes",
                "allowLegacyRoGrantTypes",
                "allowLegacyTokeninfoEndpoint",
                "dashboardInsightsView",
                "dashboardLogStreamsNext",
                "disableClickjackProtectionHeaders",
                "disableFieldsMapFix",
                "disableManagementApiSmsObfuscation",
                "enableAdfsWaadEmailVerification",
                "enableApisSection",
                "enableClientConnections",
                "enableCustomDomainInEmails",
                "enableDynamicClientRegistration",
                "enableIdtokenApi2",
                "enableLegacyLogsSearchV2",
                "enableLegacyProfile",
                "enablePipeline2",
                "enablePublicSignupUserExistsError",
                "enableSso",
                "mfaShowFactorListOnEnrollment",
                "noDiscloseEnterpriseConnections",
                "removeAlgFromJwks",
                "requirePushedAuthorizationRequests",
                "revokeRefreshTokenGrant",
                "useScopeDescriptionsForConsent"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantMtl:getTenantMtl": {
            "properties": {
                "disable": {
                    "type": "boolean",
                    "description": "Disable mTLS settings.\n"
                },
                "enableEndpointAliases": {
                    "type": "boolean",
                    "description": "Enable mTLS endpoint aliases.\n"
                }
            },
            "type": "object",
            "required": [
                "disable",
                "enableEndpointAliases"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantOidcLogout:getTenantOidcLogout": {
            "properties": {
                "rpLogoutEndSessionEndpointDiscovery": {
                    "type": "boolean",
                    "description": "Enable the\u003cspan pulumi-lang-nodejs=\" endSessionEndpoint \" pulumi-lang-dotnet=\" EndSessionEndpoint \" pulumi-lang-go=\" endSessionEndpoint \" pulumi-lang-python=\" end_session_endpoint \" pulumi-lang-yaml=\" endSessionEndpoint \" pulumi-lang-java=\" endSessionEndpoint \"\u003e end_session_endpoint \u003c/span\u003eURL in the .well-known discovery configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "rpLogoutEndSessionEndpointDiscovery"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantSession:getTenantSession": {
            "properties": {
                "oidcLogoutPromptEnabled": {
                    "type": "boolean",
                    "description": "When active, users will be presented with a consent prompt to confirm the logout request if the request is not trustworthy. Turn off the consent prompt to bypass user confirmation.\n"
                }
            },
            "type": "object",
            "required": [
                "oidcLogoutPromptEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getTenantSessionCooky:getTenantSessionCooky": {
            "properties": {
                "mode": {
                    "type": "string",
                    "description": "Behavior of tenant session cookie. Accepts either \"persistent\" or \"non-persistent\".\n"
                }
            },
            "type": "object",
            "required": [
                "mode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getUserAttributeProfileUserAttribute:getUserAttributeProfileUserAttribute": {
            "properties": {
                "auth0Mapping": {
                    "type": "string",
                    "description": "The Auth0 mapping for the user attribute.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the user attribute.\n"
                },
                "label": {
                    "type": "string",
                    "description": "Display label for the user attribute.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user attribute.\n"
                },
                "oidcMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getUserAttributeProfileUserAttributeOidcMapping:getUserAttributeProfileUserAttributeOidcMapping"
                    },
                    "description": "The OIDC mapping configuration for the user attribute.\n"
                },
                "profileRequired": {
                    "type": "boolean",
                    "description": "Whether the attribute is required in the profile.\n"
                },
                "samlMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SAML mapping override for this strategy.\n"
                },
                "scimMapping": {
                    "type": "string",
                    "description": "The SCIM mapping for the user attribute.\n"
                },
                "strategyOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getUserAttributeProfileUserAttributeStrategyOverride:getUserAttributeProfileUserAttributeStrategyOverride"
                    },
                    "description": "Strategy-specific overrides for user attribute mapping.\n"
                }
            },
            "type": "object",
            "required": [
                "auth0Mapping",
                "description",
                "label",
                "name",
                "oidcMappings",
                "profileRequired",
                "samlMappings",
                "scimMapping",
                "strategyOverrides"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getUserAttributeProfileUserAttributeOidcMapping:getUserAttributeProfileUserAttributeOidcMapping": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name for the OIDC mapping.\n"
                },
                "mapping": {
                    "type": "string",
                    "description": "The OIDC mapping field.\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "mapping"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getUserAttributeProfileUserAttributeStrategyOverride:getUserAttributeProfileUserAttributeStrategyOverride": {
            "properties": {
                "oidcMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getUserAttributeProfileUserAttributeStrategyOverrideOidcMapping:getUserAttributeProfileUserAttributeStrategyOverrideOidcMapping"
                    },
                    "description": "OIDC mapping override for this strategy.\n"
                },
                "samlMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SAML mapping override for this strategy.\n"
                },
                "scimMapping": {
                    "type": "string",
                    "description": "SCIM mapping override for this strategy.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy name (e.g., 'oidc', 'samlp', 'ad', etc.).\n"
                }
            },
            "type": "object",
            "required": [
                "oidcMappings",
                "samlMappings",
                "scimMapping",
                "strategy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getUserAttributeProfileUserAttributeStrategyOverrideOidcMapping:getUserAttributeProfileUserAttributeStrategyOverrideOidcMapping": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Display name for the OIDC mapping.\n"
                },
                "mapping": {
                    "type": "string",
                    "description": "The OIDC mapping field.\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "mapping"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getUserAttributeProfileUserId:getUserAttributeProfileUserId": {
            "properties": {
                "oidcMapping": {
                    "type": "string",
                    "description": "The OIDC mapping for the user ID.\n"
                },
                "samlMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The SAML mapping for the user ID.\n"
                },
                "scimMapping": {
                    "type": "string",
                    "description": "The SCIM mapping for the user ID.\n"
                },
                "strategyOverrides": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/getUserAttributeProfileUserIdStrategyOverride:getUserAttributeProfileUserIdStrategyOverride"
                    },
                    "description": "Strategy-specific overrides for user ID mapping.\n"
                }
            },
            "type": "object",
            "required": [
                "oidcMapping",
                "samlMappings",
                "scimMapping",
                "strategyOverrides"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getUserAttributeProfileUserIdStrategyOverride:getUserAttributeProfileUserIdStrategyOverride": {
            "properties": {
                "oidcMapping": {
                    "type": "string",
                    "description": "OIDC mapping override for this strategy.\n"
                },
                "samlMappings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SAML mapping override for this strategy.\n"
                },
                "scimMapping": {
                    "type": "string",
                    "description": "SCIM mapping override for this strategy.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy name (e.g., 'oidc', 'samlp', 'ad', etc.).\n"
                }
            },
            "type": "object",
            "required": [
                "oidcMapping",
                "samlMappings",
                "scimMapping",
                "strategy"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "auth0:index/getUserPermission:getUserPermission": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the permission.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the permission.\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Resource server identifier associated with the permission.\n"
                },
                "resourceServerName": {
                    "type": "string",
                    "description": "Name of resource server that the permission is associated with.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "resourceServerIdentifier",
                "resourceServerName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the auth0 package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "Your Auth0 [management api access token](https://auth0.com/docs/security/tokens/access-tokens/management-api-access-tokens). It can also be sourced from the `AUTH0_API_TOKEN` environment variable. It can be used instead of \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e + \u003cspan pulumi-lang-nodejs=\"`clientSecret`\" pulumi-lang-dotnet=\"`ClientSecret`\" pulumi-lang-go=\"`clientSecret`\" pulumi-lang-python=\"`client_secret`\" pulumi-lang-yaml=\"`clientSecret`\" pulumi-lang-java=\"`clientSecret`\"\u003e`client_secret`\u003c/span\u003e. If both are specified, \u003cspan pulumi-lang-nodejs=\"`apiToken`\" pulumi-lang-dotnet=\"`ApiToken`\" pulumi-lang-go=\"`apiToken`\" pulumi-lang-python=\"`api_token`\" pulumi-lang-yaml=\"`apiToken`\" pulumi-lang-java=\"`apiToken`\"\u003e`api_token`\u003c/span\u003e will be used over \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e + \u003cspan pulumi-lang-nodejs=\"`clientSecret`\" pulumi-lang-dotnet=\"`ClientSecret`\" pulumi-lang-go=\"`clientSecret`\" pulumi-lang-python=\"`client_secret`\" pulumi-lang-yaml=\"`clientSecret`\" pulumi-lang-java=\"`clientSecret`\"\u003e`client_secret`\u003c/span\u003e fields."
            },
            "audience": {
                "type": "string",
                "description": "Your Auth0 audience when using a custom domain. It can also be sourced from the `AUTH0_AUDIENCE` environment variable."
            },
            "cliLogin": {
                "type": "boolean",
                "description": "While toggled on, the API token gets fetched from the keyring for the given domain"
            },
            "clientAssertionPrivateKey": {
                "type": "string",
                "description": "The private key used to sign the client assertion JWT. It can also be sourced from the `AUTH0_CLIENT_ASSERTION_PRIVATE_KEY` environment variable."
            },
            "clientAssertionSigningAlg": {
                "type": "string",
                "description": "The algorithm used to sign the client assertion JWT. It can also be sourced from the `AUTH0_CLIENT_ASSERTION_SIGNING_ALG` environment variable."
            },
            "clientId": {
                "type": "string",
                "description": "Your Auth0 client ID. It can also be sourced from the `AUTH0_CLIENT_ID` environment variable."
            },
            "clientSecret": {
                "type": "string",
                "description": "Your Auth0 client secret. It can also be sourced from the `AUTH0_CLIENT_SECRET` environment variable."
            },
            "customDomainHeader": {
                "type": "string",
                "description": "When specified, this header is added to requests targeting a set of pre-defined whitelisted URLs Global setting overrides all resource specific \u003cspan pulumi-lang-nodejs=\"`customDomainHeader`\" pulumi-lang-dotnet=\"`CustomDomainHeader`\" pulumi-lang-go=\"`customDomainHeader`\" pulumi-lang-python=\"`custom_domain_header`\" pulumi-lang-yaml=\"`customDomainHeader`\" pulumi-lang-java=\"`customDomainHeader`\"\u003e`custom_domain_header`\u003c/span\u003e value"
            },
            "debug": {
                "type": "boolean",
                "description": "Enables HTTP request and response logging when TF_LOG=DEBUG is set. It can also be sourced from the `AUTH0_DEBUG` environment variable."
            },
            "domain": {
                "type": "string",
                "description": "Your Auth0 domain name. It can also be sourced from the `AUTH0_DOMAIN` environment variable."
            },
            "dynamicCredentials": {
                "type": "boolean"
            }
        },
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "Your Auth0 [management api access token](https://auth0.com/docs/security/tokens/access-tokens/management-api-access-tokens). It can also be sourced from the `AUTH0_API_TOKEN` environment variable. It can be used instead of \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e + \u003cspan pulumi-lang-nodejs=\"`clientSecret`\" pulumi-lang-dotnet=\"`ClientSecret`\" pulumi-lang-go=\"`clientSecret`\" pulumi-lang-python=\"`client_secret`\" pulumi-lang-yaml=\"`clientSecret`\" pulumi-lang-java=\"`clientSecret`\"\u003e`client_secret`\u003c/span\u003e. If both are specified, \u003cspan pulumi-lang-nodejs=\"`apiToken`\" pulumi-lang-dotnet=\"`ApiToken`\" pulumi-lang-go=\"`apiToken`\" pulumi-lang-python=\"`api_token`\" pulumi-lang-yaml=\"`apiToken`\" pulumi-lang-java=\"`apiToken`\"\u003e`api_token`\u003c/span\u003e will be used over \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e + \u003cspan pulumi-lang-nodejs=\"`clientSecret`\" pulumi-lang-dotnet=\"`ClientSecret`\" pulumi-lang-go=\"`clientSecret`\" pulumi-lang-python=\"`client_secret`\" pulumi-lang-yaml=\"`clientSecret`\" pulumi-lang-java=\"`clientSecret`\"\u003e`client_secret`\u003c/span\u003e fields."
            },
            "audience": {
                "type": "string",
                "description": "Your Auth0 audience when using a custom domain. It can also be sourced from the `AUTH0_AUDIENCE` environment variable."
            },
            "cliLogin": {
                "type": "boolean",
                "description": "While toggled on, the API token gets fetched from the keyring for the given domain"
            },
            "clientAssertionPrivateKey": {
                "type": "string",
                "description": "The private key used to sign the client assertion JWT. It can also be sourced from the `AUTH0_CLIENT_ASSERTION_PRIVATE_KEY` environment variable."
            },
            "clientAssertionSigningAlg": {
                "type": "string",
                "description": "The algorithm used to sign the client assertion JWT. It can also be sourced from the `AUTH0_CLIENT_ASSERTION_SIGNING_ALG` environment variable."
            },
            "clientId": {
                "type": "string",
                "description": "Your Auth0 client ID. It can also be sourced from the `AUTH0_CLIENT_ID` environment variable."
            },
            "clientSecret": {
                "type": "string",
                "description": "Your Auth0 client secret. It can also be sourced from the `AUTH0_CLIENT_SECRET` environment variable."
            },
            "customDomainHeader": {
                "type": "string",
                "description": "When specified, this header is added to requests targeting a set of pre-defined whitelisted URLs Global setting overrides all resource specific \u003cspan pulumi-lang-nodejs=\"`customDomainHeader`\" pulumi-lang-dotnet=\"`CustomDomainHeader`\" pulumi-lang-go=\"`customDomainHeader`\" pulumi-lang-python=\"`custom_domain_header`\" pulumi-lang-yaml=\"`customDomainHeader`\" pulumi-lang-java=\"`customDomainHeader`\"\u003e`custom_domain_header`\u003c/span\u003e value"
            },
            "debug": {
                "type": "boolean",
                "description": "Enables HTTP request and response logging when TF_LOG=DEBUG is set. It can also be sourced from the `AUTH0_DEBUG` environment variable.",
                "defaultInfo": {
                    "environment": [
                        "AUTH0_DEBUG"
                    ]
                }
            },
            "domain": {
                "type": "string",
                "description": "Your Auth0 domain name. It can also be sourced from the `AUTH0_DOMAIN` environment variable."
            },
            "dynamicCredentials": {
                "type": "boolean"
            }
        },
        "methods": {
            "terraformConfig": "pulumi:providers:auth0/terraformConfig"
        }
    },
    "resources": {
        "auth0:index/action:Action": {
            "description": "Actions are secure, tenant-specific, versioned functions written in Node.js that execute at certain points during the Auth0 runtime. Actions are used to customize and extend Auth0's capabilities with custom logic.\n\n\u003e An action bound to a trigger cannot be deleted. To destroy such an action, the trigger binding must first be deleted.\nA binding is usually managed by\u003cspan pulumi-lang-nodejs=\" auth0.TriggerAction \" pulumi-lang-dotnet=\" auth0.TriggerAction \" pulumi-lang-go=\" TriggerAction \" pulumi-lang-python=\" TriggerAction \" pulumi-lang-yaml=\" auth0.TriggerAction \" pulumi-lang-java=\" auth0.TriggerAction \"\u003e auth0.TriggerAction \u003c/span\u003eresource.\nThe provider also supports a 1:many variant auth0_trigger_actions.\nIf by any means, a binding is missing is the state file, it can be imported to the state and deleted, before attempting to delete the action.\n\n\u003e Values provided in the sensitive values shall be stored in the raw state as plain text: secrets.\nRead more about sensitive data in state.\n\n\n## Import\n\nThis resource can be imported by specifying the action ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/action:Action my_action \"12f4f21b-017a-319d-92e7-2291c1ca36c4\"\n```\n\n~\u003e For security reasons importing `secrets` is not allowed. Therefore, it is advised to import\n\nthe action without secrets and adding them back after the action has been imported.\n\n",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The source code of the action.\n"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ActionDependency:ActionDependency"
                    },
                    "description": "List of third party npm modules, and their versions, that this action depends on.\n"
                },
                "deploy": {
                    "type": "boolean",
                    "description": "Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the action.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "The Node runtime. Possible values are: \u003cspan pulumi-lang-nodejs=\"`node12`\" pulumi-lang-dotnet=\"`Node12`\" pulumi-lang-go=\"`node12`\" pulumi-lang-python=\"`node12`\" pulumi-lang-yaml=\"`node12`\" pulumi-lang-java=\"`node12`\"\u003e`node12`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`node16`\" pulumi-lang-dotnet=\"`Node16`\" pulumi-lang-go=\"`node16`\" pulumi-lang-python=\"`node16`\" pulumi-lang-yaml=\"`node16`\" pulumi-lang-java=\"`node16`\"\u003e`node16`\u003c/span\u003e (not recommended), \u003cspan pulumi-lang-nodejs=\"`node18`\" pulumi-lang-dotnet=\"`Node18`\" pulumi-lang-go=\"`node18`\" pulumi-lang-python=\"`node18`\" pulumi-lang-yaml=\"`node18`\" pulumi-lang-java=\"`node18`\"\u003e`node18`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`node22`\" pulumi-lang-dotnet=\"`Node22`\" pulumi-lang-go=\"`node22`\" pulumi-lang-python=\"`node22`\" pulumi-lang-yaml=\"`node22`\" pulumi-lang-java=\"`node22`\"\u003e`node22`\u003c/span\u003e\n"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ActionSecret:ActionSecret"
                    },
                    "description": "List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported. If the secret block is edited, the whole object is re-provisioned.\n"
                },
                "supportedTriggers": {
                    "$ref": "#/types/auth0:index/ActionSupportedTriggers:ActionSupportedTriggers",
                    "description": "List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read Retrieving the set of triggers available within actions to retrieve the latest trigger versions supported.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the action. This value is available if \u003cspan pulumi-lang-nodejs=\"`deploy`\" pulumi-lang-dotnet=\"`Deploy`\" pulumi-lang-go=\"`deploy`\" pulumi-lang-python=\"`deploy`\" pulumi-lang-yaml=\"`deploy`\" pulumi-lang-java=\"`deploy`\"\u003e`deploy`\u003c/span\u003e is set to true.\n"
                }
            },
            "required": [
                "code",
                "name",
                "runtime",
                "supportedTriggers",
                "versionId"
            ],
            "inputProperties": {
                "code": {
                    "type": "string",
                    "description": "The source code of the action.\n"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ActionDependency:ActionDependency"
                    },
                    "description": "List of third party npm modules, and their versions, that this action depends on.\n"
                },
                "deploy": {
                    "type": "boolean",
                    "description": "Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the action.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "The Node runtime. Possible values are: \u003cspan pulumi-lang-nodejs=\"`node12`\" pulumi-lang-dotnet=\"`Node12`\" pulumi-lang-go=\"`node12`\" pulumi-lang-python=\"`node12`\" pulumi-lang-yaml=\"`node12`\" pulumi-lang-java=\"`node12`\"\u003e`node12`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`node16`\" pulumi-lang-dotnet=\"`Node16`\" pulumi-lang-go=\"`node16`\" pulumi-lang-python=\"`node16`\" pulumi-lang-yaml=\"`node16`\" pulumi-lang-java=\"`node16`\"\u003e`node16`\u003c/span\u003e (not recommended), \u003cspan pulumi-lang-nodejs=\"`node18`\" pulumi-lang-dotnet=\"`Node18`\" pulumi-lang-go=\"`node18`\" pulumi-lang-python=\"`node18`\" pulumi-lang-yaml=\"`node18`\" pulumi-lang-java=\"`node18`\"\u003e`node18`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`node22`\" pulumi-lang-dotnet=\"`Node22`\" pulumi-lang-go=\"`node22`\" pulumi-lang-python=\"`node22`\" pulumi-lang-yaml=\"`node22`\" pulumi-lang-java=\"`node22`\"\u003e`node22`\u003c/span\u003e\n"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ActionSecret:ActionSecret"
                    },
                    "description": "List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported. If the secret block is edited, the whole object is re-provisioned.\n"
                },
                "supportedTriggers": {
                    "$ref": "#/types/auth0:index/ActionSupportedTriggers:ActionSupportedTriggers",
                    "description": "List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read Retrieving the set of triggers available within actions to retrieve the latest trigger versions supported.\n"
                }
            },
            "requiredInputs": [
                "code",
                "supportedTriggers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Action resources.\n",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "The source code of the action.\n"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/ActionDependency:ActionDependency"
                        },
                        "description": "List of third party npm modules, and their versions, that this action depends on.\n"
                    },
                    "deploy": {
                        "type": "boolean",
                        "description": "Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the action.\n"
                    },
                    "runtime": {
                        "type": "string",
                        "description": "The Node runtime. Possible values are: \u003cspan pulumi-lang-nodejs=\"`node12`\" pulumi-lang-dotnet=\"`Node12`\" pulumi-lang-go=\"`node12`\" pulumi-lang-python=\"`node12`\" pulumi-lang-yaml=\"`node12`\" pulumi-lang-java=\"`node12`\"\u003e`node12`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`node16`\" pulumi-lang-dotnet=\"`Node16`\" pulumi-lang-go=\"`node16`\" pulumi-lang-python=\"`node16`\" pulumi-lang-yaml=\"`node16`\" pulumi-lang-java=\"`node16`\"\u003e`node16`\u003c/span\u003e (not recommended), \u003cspan pulumi-lang-nodejs=\"`node18`\" pulumi-lang-dotnet=\"`Node18`\" pulumi-lang-go=\"`node18`\" pulumi-lang-python=\"`node18`\" pulumi-lang-yaml=\"`node18`\" pulumi-lang-java=\"`node18`\"\u003e`node18`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`node22`\" pulumi-lang-dotnet=\"`Node22`\" pulumi-lang-go=\"`node22`\" pulumi-lang-python=\"`node22`\" pulumi-lang-yaml=\"`node22`\" pulumi-lang-java=\"`node22`\"\u003e`node22`\u003c/span\u003e\n"
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/ActionSecret:ActionSecret"
                        },
                        "description": "List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported. If the secret block is edited, the whole object is re-provisioned.\n"
                    },
                    "supportedTriggers": {
                        "$ref": "#/types/auth0:index/ActionSupportedTriggers:ActionSupportedTriggers",
                        "description": "List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read Retrieving the set of triggers available within actions to retrieve the latest trigger versions supported.\n"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "Version ID of the action. This value is available if \u003cspan pulumi-lang-nodejs=\"`deploy`\" pulumi-lang-dotnet=\"`Deploy`\" pulumi-lang-go=\"`deploy`\" pulumi-lang-python=\"`deploy`\" pulumi-lang-yaml=\"`deploy`\" pulumi-lang-java=\"`deploy`\"\u003e`deploy`\u003c/span\u003e is set to true.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/attackProtection:AttackProtection": {
            "description": "Auth0 can detect attacks and stop malicious attempts to access your application such as blocking traffic from certain IPs and displaying CAPTCHAs.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myProtection = new auth0.AttackProtection(\"my_protection\", {\n    suspiciousIpThrottling: {\n        enabled: true,\n        shields: [\n            \"admin_notification\",\n            \"block\",\n        ],\n        allowlists: [\"192.168.1.1\"],\n        preLogin: {\n            maxAttempts: 100,\n            rate: 864000,\n        },\n        preUserRegistration: {\n            maxAttempts: 50,\n            rate: 1200,\n        },\n    },\n    bruteForceProtection: {\n        allowlists: [\"127.0.0.1\"],\n        enabled: true,\n        maxAttempts: 5,\n        mode: \"count_per_identifier_and_ip\",\n        shields: [\n            \"block\",\n            \"user_notification\",\n        ],\n    },\n    breachedPasswordDetection: {\n        adminNotificationFrequencies: [\"daily\"],\n        enabled: true,\n        method: \"standard\",\n        shields: [\n            \"admin_notification\",\n            \"block\",\n        ],\n        preUserRegistration: {\n            shields: [\"block\"],\n        },\n        preChangePassword: {\n            shields: [\n                \"block\",\n                \"admin_notification\",\n            ],\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_protection = auth0.AttackProtection(\"my_protection\",\n    suspicious_ip_throttling={\n        \"enabled\": True,\n        \"shields\": [\n            \"admin_notification\",\n            \"block\",\n        ],\n        \"allowlists\": [\"192.168.1.1\"],\n        \"pre_login\": {\n            \"max_attempts\": 100,\n            \"rate\": 864000,\n        },\n        \"pre_user_registration\": {\n            \"max_attempts\": 50,\n            \"rate\": 1200,\n        },\n    },\n    brute_force_protection={\n        \"allowlists\": [\"127.0.0.1\"],\n        \"enabled\": True,\n        \"max_attempts\": 5,\n        \"mode\": \"count_per_identifier_and_ip\",\n        \"shields\": [\n            \"block\",\n            \"user_notification\",\n        ],\n    },\n    breached_password_detection={\n        \"admin_notification_frequencies\": [\"daily\"],\n        \"enabled\": True,\n        \"method\": \"standard\",\n        \"shields\": [\n            \"admin_notification\",\n            \"block\",\n        ],\n        \"pre_user_registration\": {\n            \"shields\": [\"block\"],\n        },\n        \"pre_change_password\": {\n            \"shields\": [\n                \"block\",\n                \"admin_notification\",\n            ],\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myProtection = new Auth0.AttackProtection(\"my_protection\", new()\n    {\n        SuspiciousIpThrottling = new Auth0.Inputs.AttackProtectionSuspiciousIpThrottlingArgs\n        {\n            Enabled = true,\n            Shields = new[]\n            {\n                \"admin_notification\",\n                \"block\",\n            },\n            Allowlists = new[]\n            {\n                \"192.168.1.1\",\n            },\n            PreLogin = new Auth0.Inputs.AttackProtectionSuspiciousIpThrottlingPreLoginArgs\n            {\n                MaxAttempts = 100,\n                Rate = 864000,\n            },\n            PreUserRegistration = new Auth0.Inputs.AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs\n            {\n                MaxAttempts = 50,\n                Rate = 1200,\n            },\n        },\n        BruteForceProtection = new Auth0.Inputs.AttackProtectionBruteForceProtectionArgs\n        {\n            Allowlists = new[]\n            {\n                \"127.0.0.1\",\n            },\n            Enabled = true,\n            MaxAttempts = 5,\n            Mode = \"count_per_identifier_and_ip\",\n            Shields = new[]\n            {\n                \"block\",\n                \"user_notification\",\n            },\n        },\n        BreachedPasswordDetection = new Auth0.Inputs.AttackProtectionBreachedPasswordDetectionArgs\n        {\n            AdminNotificationFrequencies = new[]\n            {\n                \"daily\",\n            },\n            Enabled = true,\n            Method = \"standard\",\n            Shields = new[]\n            {\n                \"admin_notification\",\n                \"block\",\n            },\n            PreUserRegistration = new Auth0.Inputs.AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs\n            {\n                Shields = new[]\n                {\n                    \"block\",\n                },\n            },\n            PreChangePassword = new Auth0.Inputs.AttackProtectionBreachedPasswordDetectionPreChangePasswordArgs\n            {\n                Shields = new[]\n                {\n                    \"block\",\n                    \"admin_notification\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewAttackProtection(ctx, \"my_protection\", \u0026auth0.AttackProtectionArgs{\n\t\t\tSuspiciousIpThrottling: \u0026auth0.AttackProtectionSuspiciousIpThrottlingArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tShields: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"admin_notification\"),\n\t\t\t\t\tpulumi.String(\"block\"),\n\t\t\t\t},\n\t\t\t\tAllowlists: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"192.168.1.1\"),\n\t\t\t\t},\n\t\t\t\tPreLogin: \u0026auth0.AttackProtectionSuspiciousIpThrottlingPreLoginArgs{\n\t\t\t\t\tMaxAttempts: pulumi.Int(100),\n\t\t\t\t\tRate:        pulumi.Int(864000),\n\t\t\t\t},\n\t\t\t\tPreUserRegistration: \u0026auth0.AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{\n\t\t\t\t\tMaxAttempts: pulumi.Int(50),\n\t\t\t\t\tRate:        pulumi.Int(1200),\n\t\t\t\t},\n\t\t\t},\n\t\t\tBruteForceProtection: \u0026auth0.AttackProtectionBruteForceProtectionArgs{\n\t\t\t\tAllowlists: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"127.0.0.1\"),\n\t\t\t\t},\n\t\t\t\tEnabled:     pulumi.Bool(true),\n\t\t\t\tMaxAttempts: pulumi.Int(5),\n\t\t\t\tMode:        pulumi.String(\"count_per_identifier_and_ip\"),\n\t\t\t\tShields: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"block\"),\n\t\t\t\t\tpulumi.String(\"user_notification\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tBreachedPasswordDetection: \u0026auth0.AttackProtectionBreachedPasswordDetectionArgs{\n\t\t\t\tAdminNotificationFrequencies: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"daily\"),\n\t\t\t\t},\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tMethod:  pulumi.String(\"standard\"),\n\t\t\t\tShields: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"admin_notification\"),\n\t\t\t\t\tpulumi.String(\"block\"),\n\t\t\t\t},\n\t\t\t\tPreUserRegistration: \u0026auth0.AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{\n\t\t\t\t\tShields: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"block\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tPreChangePassword: \u0026auth0.AttackProtectionBreachedPasswordDetectionPreChangePasswordArgs{\n\t\t\t\t\tShields: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"block\"),\n\t\t\t\t\t\tpulumi.String(\"admin_notification\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.AttackProtection;\nimport com.pulumi.auth0.AttackProtectionArgs;\nimport com.pulumi.auth0.inputs.AttackProtectionSuspiciousIpThrottlingArgs;\nimport com.pulumi.auth0.inputs.AttackProtectionSuspiciousIpThrottlingPreLoginArgs;\nimport com.pulumi.auth0.inputs.AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs;\nimport com.pulumi.auth0.inputs.AttackProtectionBruteForceProtectionArgs;\nimport com.pulumi.auth0.inputs.AttackProtectionBreachedPasswordDetectionArgs;\nimport com.pulumi.auth0.inputs.AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs;\nimport com.pulumi.auth0.inputs.AttackProtectionBreachedPasswordDetectionPreChangePasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myProtection = new AttackProtection(\"myProtection\", AttackProtectionArgs.builder()\n            .suspiciousIpThrottling(AttackProtectionSuspiciousIpThrottlingArgs.builder()\n                .enabled(true)\n                .shields(                \n                    \"admin_notification\",\n                    \"block\")\n                .allowlists(\"192.168.1.1\")\n                .preLogin(AttackProtectionSuspiciousIpThrottlingPreLoginArgs.builder()\n                    .maxAttempts(100)\n                    .rate(864000)\n                    .build())\n                .preUserRegistration(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs.builder()\n                    .maxAttempts(50)\n                    .rate(1200)\n                    .build())\n                .build())\n            .bruteForceProtection(AttackProtectionBruteForceProtectionArgs.builder()\n                .allowlists(\"127.0.0.1\")\n                .enabled(true)\n                .maxAttempts(5)\n                .mode(\"count_per_identifier_and_ip\")\n                .shields(                \n                    \"block\",\n                    \"user_notification\")\n                .build())\n            .breachedPasswordDetection(AttackProtectionBreachedPasswordDetectionArgs.builder()\n                .adminNotificationFrequencies(\"daily\")\n                .enabled(true)\n                .method(\"standard\")\n                .shields(                \n                    \"admin_notification\",\n                    \"block\")\n                .preUserRegistration(AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs.builder()\n                    .shields(\"block\")\n                    .build())\n                .preChangePassword(AttackProtectionBreachedPasswordDetectionPreChangePasswordArgs.builder()\n                    .shields(                    \n                        \"block\",\n                        \"admin_notification\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myProtection:\n    type: auth0:AttackProtection\n    name: my_protection\n    properties:\n      suspiciousIpThrottling:\n        enabled: true\n        shields:\n          - admin_notification\n          - block\n        allowlists:\n          - 192.168.1.1\n        preLogin:\n          maxAttempts: 100\n          rate: 864000\n        preUserRegistration:\n          maxAttempts: 50\n          rate: 1200\n      bruteForceProtection:\n        allowlists:\n          - 127.0.0.1\n        enabled: true\n        maxAttempts: 5\n        mode: count_per_identifier_and_ip\n        shields:\n          - block\n          - user_notification\n      breachedPasswordDetection:\n        adminNotificationFrequencies:\n          - daily\n        enabled: true\n        method: standard\n        shields:\n          - admin_notification\n          - block\n        preUserRegistration:\n          shields:\n            - block\n        preChangePassword:\n          shields:\n            - block\n            - admin_notification\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAs this is not a resource identifiable by an ID within the Auth0 Management API,\n\nattack_protection can be imported using a random string.\n\nWe recommend [Version 4 UUID](https://www.uuidgenerator.net/version4)\n\nExample:\n\n```sh\n$ pulumi import auth0:index/attackProtection:AttackProtection my_protection \"24940d4b-4bd4-44e7-894e-f92e4de36a40\"\n```\n\n",
            "properties": {
                "breachedPasswordDetection": {
                    "$ref": "#/types/auth0:index/AttackProtectionBreachedPasswordDetection:AttackProtectionBreachedPasswordDetection",
                    "description": "Breached password detection protects your applications from bad actors logging in with stolen credentials.\n"
                },
                "bruteForceProtection": {
                    "$ref": "#/types/auth0:index/AttackProtectionBruteForceProtection:AttackProtectionBruteForceProtection",
                    "description": "Brute-force protection safeguards against a single IP address attacking a single user account.\n"
                },
                "suspiciousIpThrottling": {
                    "$ref": "#/types/auth0:index/AttackProtectionSuspiciousIpThrottling:AttackProtectionSuspiciousIpThrottling",
                    "description": "Suspicious IP throttling blocks traffic from any IP address that rapidly attempts too many logins or signups.\n"
                }
            },
            "required": [
                "breachedPasswordDetection",
                "bruteForceProtection",
                "suspiciousIpThrottling"
            ],
            "inputProperties": {
                "breachedPasswordDetection": {
                    "$ref": "#/types/auth0:index/AttackProtectionBreachedPasswordDetection:AttackProtectionBreachedPasswordDetection",
                    "description": "Breached password detection protects your applications from bad actors logging in with stolen credentials.\n"
                },
                "bruteForceProtection": {
                    "$ref": "#/types/auth0:index/AttackProtectionBruteForceProtection:AttackProtectionBruteForceProtection",
                    "description": "Brute-force protection safeguards against a single IP address attacking a single user account.\n"
                },
                "suspiciousIpThrottling": {
                    "$ref": "#/types/auth0:index/AttackProtectionSuspiciousIpThrottling:AttackProtectionSuspiciousIpThrottling",
                    "description": "Suspicious IP throttling blocks traffic from any IP address that rapidly attempts too many logins or signups.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttackProtection resources.\n",
                "properties": {
                    "breachedPasswordDetection": {
                        "$ref": "#/types/auth0:index/AttackProtectionBreachedPasswordDetection:AttackProtectionBreachedPasswordDetection",
                        "description": "Breached password detection protects your applications from bad actors logging in with stolen credentials.\n"
                    },
                    "bruteForceProtection": {
                        "$ref": "#/types/auth0:index/AttackProtectionBruteForceProtection:AttackProtectionBruteForceProtection",
                        "description": "Brute-force protection safeguards against a single IP address attacking a single user account.\n"
                    },
                    "suspiciousIpThrottling": {
                        "$ref": "#/types/auth0:index/AttackProtectionSuspiciousIpThrottling:AttackProtectionSuspiciousIpThrottling",
                        "description": "Suspicious IP throttling blocks traffic from any IP address that rapidly attempts too many logins or signups.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/branding:Branding": {
            "description": "This resource allows you to manage branding within your Auth0 tenant. Auth0 can be customized with a look and feel that aligns with your organization's brand requirements and user expectations.\n\n## Import\n\nAs this is not a resource identifiable by an ID within the Auth0 Management API,\n\nbranding can be imported using a random string.\n\nWe recommend [Version 4 UUID](https://www.uuidgenerator.net/version4)\n\nExample:\n\n```sh\n$ pulumi import auth0:index/branding:Branding my_brand \"22f4f21b-017a-319d-92e7-2291c1ca36c4\"\n```\n\n",
            "properties": {
                "colors": {
                    "$ref": "#/types/auth0:index/BrandingColors:BrandingColors",
                    "description": "Configuration settings for colors for branding.\n"
                },
                "faviconUrl": {
                    "type": "string",
                    "description": "URL for the favicon.\n"
                },
                "font": {
                    "$ref": "#/types/auth0:index/BrandingFont:BrandingFont",
                    "description": "Configuration settings to customize the font.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of logo for branding.\n"
                },
                "universalLogin": {
                    "$ref": "#/types/auth0:index/BrandingUniversalLogin:BrandingUniversalLogin",
                    "description": "Configuration settings for Universal Login.\n"
                }
            },
            "required": [
                "colors",
                "faviconUrl",
                "logoUrl"
            ],
            "inputProperties": {
                "colors": {
                    "$ref": "#/types/auth0:index/BrandingColors:BrandingColors",
                    "description": "Configuration settings for colors for branding.\n"
                },
                "faviconUrl": {
                    "type": "string",
                    "description": "URL for the favicon.\n"
                },
                "font": {
                    "$ref": "#/types/auth0:index/BrandingFont:BrandingFont",
                    "description": "Configuration settings to customize the font.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of logo for branding.\n"
                },
                "universalLogin": {
                    "$ref": "#/types/auth0:index/BrandingUniversalLogin:BrandingUniversalLogin",
                    "description": "Configuration settings for Universal Login.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Branding resources.\n",
                "properties": {
                    "colors": {
                        "$ref": "#/types/auth0:index/BrandingColors:BrandingColors",
                        "description": "Configuration settings for colors for branding.\n"
                    },
                    "faviconUrl": {
                        "type": "string",
                        "description": "URL for the favicon.\n"
                    },
                    "font": {
                        "$ref": "#/types/auth0:index/BrandingFont:BrandingFont",
                        "description": "Configuration settings to customize the font.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "URL of logo for branding.\n"
                    },
                    "universalLogin": {
                        "$ref": "#/types/auth0:index/BrandingUniversalLogin:BrandingUniversalLogin",
                        "description": "Configuration settings for Universal Login.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/brandingTheme:BrandingTheme": {
            "description": "This resource allows you to manage branding themes for your Universal Login page within your Auth0 tenant.\n\n## Import\n\nThis resource can be imported by specifying the Branding Theme ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/brandingTheme:BrandingTheme my_theme \"XXXXXXXXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "borders": {
                    "$ref": "#/types/auth0:index/BrandingThemeBorders:BrandingThemeBorders"
                },
                "colors": {
                    "$ref": "#/types/auth0:index/BrandingThemeColors:BrandingThemeColors"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the branding theme.\n"
                },
                "fonts": {
                    "$ref": "#/types/auth0:index/BrandingThemeFonts:BrandingThemeFonts"
                },
                "pageBackground": {
                    "$ref": "#/types/auth0:index/BrandingThemePageBackground:BrandingThemePageBackground"
                },
                "widget": {
                    "$ref": "#/types/auth0:index/BrandingThemeWidget:BrandingThemeWidget"
                }
            },
            "required": [
                "borders",
                "colors",
                "fonts",
                "pageBackground",
                "widget"
            ],
            "inputProperties": {
                "borders": {
                    "$ref": "#/types/auth0:index/BrandingThemeBorders:BrandingThemeBorders"
                },
                "colors": {
                    "$ref": "#/types/auth0:index/BrandingThemeColors:BrandingThemeColors"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name for the branding theme.\n"
                },
                "fonts": {
                    "$ref": "#/types/auth0:index/BrandingThemeFonts:BrandingThemeFonts"
                },
                "pageBackground": {
                    "$ref": "#/types/auth0:index/BrandingThemePageBackground:BrandingThemePageBackground"
                },
                "widget": {
                    "$ref": "#/types/auth0:index/BrandingThemeWidget:BrandingThemeWidget"
                }
            },
            "requiredInputs": [
                "borders",
                "colors",
                "fonts",
                "pageBackground",
                "widget"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BrandingTheme resources.\n",
                "properties": {
                    "borders": {
                        "$ref": "#/types/auth0:index/BrandingThemeBorders:BrandingThemeBorders"
                    },
                    "colors": {
                        "$ref": "#/types/auth0:index/BrandingThemeColors:BrandingThemeColors"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name for the branding theme.\n"
                    },
                    "fonts": {
                        "$ref": "#/types/auth0:index/BrandingThemeFonts:BrandingThemeFonts"
                    },
                    "pageBackground": {
                        "$ref": "#/types/auth0:index/BrandingThemePageBackground:BrandingThemePageBackground"
                    },
                    "widget": {
                        "$ref": "#/types/auth0:index/BrandingThemeWidget:BrandingThemeWidget"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/client:Client": {
            "description": "With this resource, you can set up applications that use Auth0 for authentication and configure allowed callback URLs and secrets for these applications.\n\n## Import\n\nThis resource can be imported by specifying the client ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/client:Client my_client \"AaiyAPdpYdesoKnqjj8HJqRn4T5titww\"\n```\n\n",
            "properties": {
                "addons": {
                    "$ref": "#/types/auth0:index/ClientAddons:ClientAddons",
                    "description": "Addons enabled for this client and their associated configurations.\n"
                },
                "allowedClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.\n"
                },
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that Auth0 may redirect to after logout.\n"
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.\n"
                },
                "appType": {
                    "type": "string",
                    "description": "Type of application the client represents. Possible values are: \u003cspan pulumi-lang-nodejs=\"`native`\" pulumi-lang-dotnet=\"`Native`\" pulumi-lang-go=\"`native`\" pulumi-lang-python=\"`native`\" pulumi-lang-yaml=\"`native`\" pulumi-lang-java=\"`native`\"\u003e`native`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`spa`\" pulumi-lang-dotnet=\"`Spa`\" pulumi-lang-go=\"`spa`\" pulumi-lang-python=\"`spa`\" pulumi-lang-yaml=\"`spa`\" pulumi-lang-java=\"`spa`\"\u003e`spa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`regularWeb`\" pulumi-lang-dotnet=\"`RegularWeb`\" pulumi-lang-go=\"`regularWeb`\" pulumi-lang-python=\"`regular_web`\" pulumi-lang-yaml=\"`regularWeb`\" pulumi-lang-java=\"`regularWeb`\"\u003e`regular_web`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nonInteractive`\" pulumi-lang-dotnet=\"`NonInteractive`\" pulumi-lang-go=\"`nonInteractive`\" pulumi-lang-python=\"`non_interactive`\" pulumi-lang-yaml=\"`nonInteractive`\" pulumi-lang-java=\"`nonInteractive`\"\u003e`non_interactive`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resourceServer`\" pulumi-lang-dotnet=\"`ResourceServer`\" pulumi-lang-go=\"`resourceServer`\" pulumi-lang-python=\"`resource_server`\" pulumi-lang-yaml=\"`resourceServer`\" pulumi-lang-java=\"`resourceServer`\"\u003e`resource_server`\u003c/span\u003e,\u003cspan pulumi-lang-nodejs=\"`ssoIntegration`\" pulumi-lang-dotnet=\"`SsoIntegration`\" pulumi-lang-go=\"`ssoIntegration`\" pulumi-lang-python=\"`sso_integration`\" pulumi-lang-yaml=\"`ssoIntegration`\" pulumi-lang-java=\"`ssoIntegration`\"\u003e`sso_integration`\u003c/span\u003e. Specific SSO integrations types accepted as well are: \u003cspan pulumi-lang-nodejs=\"`rms`\" pulumi-lang-dotnet=\"`Rms`\" pulumi-lang-go=\"`rms`\" pulumi-lang-python=\"`rms`\" pulumi-lang-yaml=\"`rms`\" pulumi-lang-java=\"`rms`\"\u003e`rms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`box`\" pulumi-lang-dotnet=\"`Box`\" pulumi-lang-go=\"`box`\" pulumi-lang-python=\"`box`\" pulumi-lang-yaml=\"`box`\" pulumi-lang-java=\"`box`\"\u003e`box`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cloudbees`\" pulumi-lang-dotnet=\"`Cloudbees`\" pulumi-lang-go=\"`cloudbees`\" pulumi-lang-python=\"`cloudbees`\" pulumi-lang-yaml=\"`cloudbees`\" pulumi-lang-java=\"`cloudbees`\"\u003e`cloudbees`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`concur`\" pulumi-lang-dotnet=\"`Concur`\" pulumi-lang-go=\"`concur`\" pulumi-lang-python=\"`concur`\" pulumi-lang-yaml=\"`concur`\" pulumi-lang-java=\"`concur`\"\u003e`concur`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`dropbox`\" pulumi-lang-dotnet=\"`Dropbox`\" pulumi-lang-go=\"`dropbox`\" pulumi-lang-python=\"`dropbox`\" pulumi-lang-yaml=\"`dropbox`\" pulumi-lang-java=\"`dropbox`\"\u003e`dropbox`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mscrm`\" pulumi-lang-dotnet=\"`Mscrm`\" pulumi-lang-go=\"`mscrm`\" pulumi-lang-python=\"`mscrm`\" pulumi-lang-yaml=\"`mscrm`\" pulumi-lang-java=\"`mscrm`\"\u003e`mscrm`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`echosign`\" pulumi-lang-dotnet=\"`Echosign`\" pulumi-lang-go=\"`echosign`\" pulumi-lang-python=\"`echosign`\" pulumi-lang-yaml=\"`echosign`\" pulumi-lang-java=\"`echosign`\"\u003e`echosign`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`egnyte`\" pulumi-lang-dotnet=\"`Egnyte`\" pulumi-lang-go=\"`egnyte`\" pulumi-lang-python=\"`egnyte`\" pulumi-lang-yaml=\"`egnyte`\" pulumi-lang-java=\"`egnyte`\"\u003e`egnyte`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`newrelic`\" pulumi-lang-dotnet=\"`Newrelic`\" pulumi-lang-go=\"`newrelic`\" pulumi-lang-python=\"`newrelic`\" pulumi-lang-yaml=\"`newrelic`\" pulumi-lang-java=\"`newrelic`\"\u003e`newrelic`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`office365`\" pulumi-lang-dotnet=\"`Office365`\" pulumi-lang-go=\"`office365`\" pulumi-lang-python=\"`office365`\" pulumi-lang-yaml=\"`office365`\" pulumi-lang-java=\"`office365`\"\u003e`office365`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`salesforce`\" pulumi-lang-dotnet=\"`Salesforce`\" pulumi-lang-go=\"`salesforce`\" pulumi-lang-python=\"`salesforce`\" pulumi-lang-yaml=\"`salesforce`\" pulumi-lang-java=\"`salesforce`\"\u003e`salesforce`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sentry`\" pulumi-lang-dotnet=\"`Sentry`\" pulumi-lang-go=\"`sentry`\" pulumi-lang-python=\"`sentry`\" pulumi-lang-yaml=\"`sentry`\" pulumi-lang-java=\"`sentry`\"\u003e`sentry`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sharepoint`\" pulumi-lang-dotnet=\"`Sharepoint`\" pulumi-lang-go=\"`sharepoint`\" pulumi-lang-python=\"`sharepoint`\" pulumi-lang-yaml=\"`sharepoint`\" pulumi-lang-java=\"`sharepoint`\"\u003e`sharepoint`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`slack`\" pulumi-lang-dotnet=\"`Slack`\" pulumi-lang-go=\"`slack`\" pulumi-lang-python=\"`slack`\" pulumi-lang-yaml=\"`slack`\" pulumi-lang-java=\"`slack`\"\u003e`slack`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`springcm`\" pulumi-lang-dotnet=\"`Springcm`\" pulumi-lang-go=\"`springcm`\" pulumi-lang-python=\"`springcm`\" pulumi-lang-yaml=\"`springcm`\" pulumi-lang-java=\"`springcm`\"\u003e`springcm`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zendesk`\" pulumi-lang-dotnet=\"`Zendesk`\" pulumi-lang-go=\"`zendesk`\" pulumi-lang-python=\"`zendesk`\" pulumi-lang-yaml=\"`zendesk`\" pulumi-lang-java=\"`zendesk`\"\u003e`zendesk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e.\n"
                },
                "callbacks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.\n"
                },
                "clientAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The ID of the client.\n"
                },
                "clientMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?\"/\\()\u003c\u003e@ [Tab] [Space]`.\n"
                },
                "complianceLevel": {
                    "type": "string",
                    "description": "Defines the compliance level for this client, which may restrict it's capabilities. Can be one of \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fapi1AdvPkjPar`\" pulumi-lang-dotnet=\"`Fapi1AdvPkjPar`\" pulumi-lang-go=\"`fapi1AdvPkjPar`\" pulumi-lang-python=\"`fapi1_adv_pkj_par`\" pulumi-lang-yaml=\"`fapi1AdvPkjPar`\" pulumi-lang-java=\"`fapi1AdvPkjPar`\"\u003e`fapi1_adv_pkj_par`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fapi1AdvMtlsPar`\" pulumi-lang-dotnet=\"`Fapi1AdvMtlsPar`\" pulumi-lang-go=\"`fapi1AdvMtlsPar`\" pulumi-lang-python=\"`fapi1_adv_mtls_par`\" pulumi-lang-yaml=\"`fapi1AdvMtlsPar`\" pulumi-lang-java=\"`fapi1AdvMtlsPar`\"\u003e`fapi1_adv_mtls_par`\u003c/span\u003e.\n"
                },
                "crossOriginAuth": {
                    "type": "boolean",
                    "description": "Whether this client can be used to make cross-origin authentication requests (\u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e) or it is not allowed to make such requests (\u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e).\n"
                },
                "crossOriginLoc": {
                    "type": "string",
                    "description": "URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.\n"
                },
                "customLoginPage": {
                    "type": "string",
                    "description": "The content (HTML, CSS, JS) of the custom login page.\n"
                },
                "customLoginPageOn": {
                    "type": "boolean",
                    "description": "Indicates whether a custom login page is to be used.\n"
                },
                "defaultOrganization": {
                    "$ref": "#/types/auth0:index/ClientDefaultOrganization:ClientDefaultOrganization",
                    "description": "Configure and associate an organization with the Client\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the purpose of the client.\n",
                    "default": "Managed by Pulumi"
                },
                "encryptionKey": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Encryption used for WS-Fed responses with this client.\n"
                },
                "formTemplate": {
                    "type": "string",
                    "description": "HTML form template to be used for WS-Federation.\n"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Types of grants that this client is authorized to use.\n"
                },
                "initiateLoginUri": {
                    "type": "string",
                    "description": "Initiate login URI. Must be HTTPS or an empty string.\n"
                },
                "isFirstParty": {
                    "type": "boolean",
                    "description": "Indicates whether this client is a first-party client.Defaults to true from the API\n"
                },
                "isTokenEndpointIpHeaderTrusted": {
                    "type": "boolean",
                    "description": "Indicates whether the token endpoint IP header is trusted. Requires the authentication method to be set to \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e. Setting this property when creating the resource, will default the authentication method to \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e. To change the authentication method to \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e use the \u003cspan pulumi-lang-nodejs=\"`auth0.ClientCredentials`\" pulumi-lang-dotnet=\"`auth0.ClientCredentials`\" pulumi-lang-go=\"`ClientCredentials`\" pulumi-lang-python=\"`ClientCredentials`\" pulumi-lang-yaml=\"`auth0.ClientCredentials`\" pulumi-lang-java=\"`auth0.ClientCredentials`\"\u003e`auth0.ClientCredentials`\u003c/span\u003e resource.\n"
                },
                "jwtConfiguration": {
                    "$ref": "#/types/auth0:index/ClientJwtConfiguration:ClientJwtConfiguration",
                    "description": "Configuration settings for the JWTs issued for this client.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.\n"
                },
                "mobile": {
                    "$ref": "#/types/auth0:index/ClientMobile:ClientMobile",
                    "description": "Additional configuration for native mobile apps.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the client.\n"
                },
                "nativeSocialLogin": {
                    "$ref": "#/types/auth0:index/ClientNativeSocialLogin:ClientNativeSocialLogin",
                    "description": "Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e in order to change the \u003cspan pulumi-lang-nodejs=\"`appType`\" pulumi-lang-dotnet=\"`AppType`\" pulumi-lang-go=\"`appType`\" pulumi-lang-python=\"`app_type`\" pulumi-lang-yaml=\"`appType`\" pulumi-lang-java=\"`appType`\"\u003e`app_type`\u003c/span\u003e.\n"
                },
                "oidcBackchannelLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`oidcLogout`\" pulumi-lang-dotnet=\"`OidcLogout`\" pulumi-lang-go=\"`oidcLogout`\" pulumi-lang-python=\"`oidc_logout`\" pulumi-lang-yaml=\"`oidcLogout`\" pulumi-lang-java=\"`oidcLogout`\"\u003e`oidc_logout`\u003c/span\u003e for managing OIDC backchannel logout URLs."
                },
                "oidcConformant": {
                    "type": "boolean",
                    "description": "Indicates whether this client will conform to strict OIDC specifications.\n"
                },
                "oidcLogout": {
                    "$ref": "#/types/auth0:index/ClientOidcLogout:ClientOidcLogout",
                    "description": "Configure OIDC logout for the Client\n"
                },
                "organizationDiscoveryMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Methods for discovering organizations during the pre*login*prompt. Can include \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e (allows users to find their organization by entering their email address) and/or \u003cspan pulumi-lang-nodejs=\"`organizationName`\" pulumi-lang-dotnet=\"`OrganizationName`\" pulumi-lang-go=\"`organizationName`\" pulumi-lang-python=\"`organization_name`\" pulumi-lang-yaml=\"`organizationName`\" pulumi-lang-java=\"`organizationName`\"\u003e`organization_name`\u003c/span\u003e (requires users to enter the organization name directly). These methods can be combined. Setting this property requires that \u003cspan pulumi-lang-nodejs=\"`organizationRequireBehavior`\" pulumi-lang-dotnet=\"`OrganizationRequireBehavior`\" pulumi-lang-go=\"`organizationRequireBehavior`\" pulumi-lang-python=\"`organization_require_behavior`\" pulumi-lang-yaml=\"`organizationRequireBehavior`\" pulumi-lang-java=\"`organizationRequireBehavior`\"\u003e`organization_require_behavior`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`preLoginPrompt`\" pulumi-lang-dotnet=\"`PreLoginPrompt`\" pulumi-lang-go=\"`preLoginPrompt`\" pulumi-lang-python=\"`pre_login_prompt`\" pulumi-lang-yaml=\"`preLoginPrompt`\" pulumi-lang-java=\"`preLoginPrompt`\"\u003e`pre_login_prompt`\u003c/span\u003e.\n"
                },
                "organizationRequireBehavior": {
                    "type": "string",
                    "description": "Defines how to proceed during an authentication transaction when \u003cspan pulumi-lang-nodejs=\"`organizationUsage \" pulumi-lang-dotnet=\"`OrganizationUsage \" pulumi-lang-go=\"`organizationUsage \" pulumi-lang-python=\"`organization_usage \" pulumi-lang-yaml=\"`organizationUsage \" pulumi-lang-java=\"`organizationUsage \"\u003e`organization_usage \u003c/span\u003e= \"require\"`. Can be \u003cspan pulumi-lang-nodejs=\"`noPrompt`\" pulumi-lang-dotnet=\"`NoPrompt`\" pulumi-lang-go=\"`noPrompt`\" pulumi-lang-python=\"`no_prompt`\" pulumi-lang-yaml=\"`noPrompt`\" pulumi-lang-java=\"`noPrompt`\"\u003e`no_prompt`\u003c/span\u003e (default), \u003cspan pulumi-lang-nodejs=\"`preLoginPrompt`\" pulumi-lang-dotnet=\"`PreLoginPrompt`\" pulumi-lang-go=\"`preLoginPrompt`\" pulumi-lang-python=\"`pre_login_prompt`\" pulumi-lang-yaml=\"`preLoginPrompt`\" pulumi-lang-java=\"`preLoginPrompt`\"\u003e`pre_login_prompt`\u003c/span\u003e or  \u003cspan pulumi-lang-nodejs=\"`postLoginPrompt`\" pulumi-lang-dotnet=\"`PostLoginPrompt`\" pulumi-lang-go=\"`postLoginPrompt`\" pulumi-lang-python=\"`post_login_prompt`\" pulumi-lang-yaml=\"`postLoginPrompt`\" pulumi-lang-java=\"`postLoginPrompt`\"\u003e`post_login_prompt`\u003c/span\u003e.\n"
                },
                "organizationUsage": {
                    "type": "string",
                    "description": "Defines how to proceed during an authentication transaction with regards to an organization. Can be \u003cspan pulumi-lang-nodejs=\"`deny`\" pulumi-lang-dotnet=\"`Deny`\" pulumi-lang-go=\"`deny`\" pulumi-lang-python=\"`deny`\" pulumi-lang-yaml=\"`deny`\" pulumi-lang-java=\"`deny`\"\u003e`deny`\u003c/span\u003e (default), \u003cspan pulumi-lang-nodejs=\"`allow`\" pulumi-lang-dotnet=\"`Allow`\" pulumi-lang-go=\"`allow`\" pulumi-lang-python=\"`allow`\" pulumi-lang-yaml=\"`allow`\" pulumi-lang-java=\"`allow`\"\u003e`allow`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`require`\" pulumi-lang-dotnet=\"`Require`\" pulumi-lang-go=\"`require`\" pulumi-lang-python=\"`require`\" pulumi-lang-yaml=\"`require`\" pulumi-lang-java=\"`require`\"\u003e`require`\u003c/span\u003e.\n"
                },
                "refreshToken": {
                    "$ref": "#/types/auth0:index/ClientRefreshToken:ClientRefreshToken",
                    "description": "Configuration settings for the refresh tokens issued for this client.\n"
                },
                "requireProofOfPossession": {
                    "type": "boolean",
                    "description": "Makes the use of Proof-of-Possession mandatory for this client.\n"
                },
                "requirePushedAuthorizationRequests": {
                    "type": "boolean",
                    "description": "Makes the use of Pushed Authorization Requests mandatory for this client. This feature currently needs to be enabled on the tenant in order to make use of it.\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "The identifier of a resource server that client is associated withThis property can be sent only when app*type=resource*server.This property can not be changed, once the client is created.\n"
                },
                "sessionTransfer": {
                    "$ref": "#/types/auth0:index/ClientSessionTransfer:ClientSessionTransfer"
                },
                "signingKeys": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.\n",
                    "secret": true
                },
                "skipNonVerifiableCallbackUriConfirmationPrompt": {
                    "type": "string",
                    "description": "Indicates whether the confirmation prompt appears when using non-verifiable callback URIs. Set to true to skip the prompt, false to show it, or null to unset. Accepts (true/false/null) or (\"true\"/\"false\"/\"null\")\n"
                },
                "sso": {
                    "type": "boolean",
                    "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).\n"
                },
                "ssoDisabled": {
                    "type": "boolean",
                    "description": "Indicates whether or not SSO is disabled.\n"
                },
                "tokenExchange": {
                    "$ref": "#/types/auth0:index/ClientTokenExchange:ClientTokenExchange",
                    "description": "Allows configuration for token exchange\n"
                },
                "tokenQuota": {
                    "$ref": "#/types/auth0:index/ClientTokenQuota:ClientTokenQuota",
                    "description": "The token quota configuration.\n"
                },
                "webOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that represent valid web origins for use with web message response mode.\n"
                }
            },
            "required": [
                "clientId",
                "customLoginPageOn",
                "defaultOrganization",
                "description",
                "grantTypes",
                "isFirstParty",
                "isTokenEndpointIpHeaderTrusted",
                "jwtConfiguration",
                "mobile",
                "name",
                "nativeSocialLogin",
                "oidcBackchannelLogoutUrls",
                "oidcConformant",
                "oidcLogout",
                "refreshToken",
                "signingKeys"
            ],
            "inputProperties": {
                "addons": {
                    "$ref": "#/types/auth0:index/ClientAddons:ClientAddons",
                    "description": "Addons enabled for this client and their associated configurations.\n"
                },
                "allowedClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.\n"
                },
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that Auth0 may redirect to after logout.\n"
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.\n"
                },
                "appType": {
                    "type": "string",
                    "description": "Type of application the client represents. Possible values are: \u003cspan pulumi-lang-nodejs=\"`native`\" pulumi-lang-dotnet=\"`Native`\" pulumi-lang-go=\"`native`\" pulumi-lang-python=\"`native`\" pulumi-lang-yaml=\"`native`\" pulumi-lang-java=\"`native`\"\u003e`native`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`spa`\" pulumi-lang-dotnet=\"`Spa`\" pulumi-lang-go=\"`spa`\" pulumi-lang-python=\"`spa`\" pulumi-lang-yaml=\"`spa`\" pulumi-lang-java=\"`spa`\"\u003e`spa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`regularWeb`\" pulumi-lang-dotnet=\"`RegularWeb`\" pulumi-lang-go=\"`regularWeb`\" pulumi-lang-python=\"`regular_web`\" pulumi-lang-yaml=\"`regularWeb`\" pulumi-lang-java=\"`regularWeb`\"\u003e`regular_web`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nonInteractive`\" pulumi-lang-dotnet=\"`NonInteractive`\" pulumi-lang-go=\"`nonInteractive`\" pulumi-lang-python=\"`non_interactive`\" pulumi-lang-yaml=\"`nonInteractive`\" pulumi-lang-java=\"`nonInteractive`\"\u003e`non_interactive`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resourceServer`\" pulumi-lang-dotnet=\"`ResourceServer`\" pulumi-lang-go=\"`resourceServer`\" pulumi-lang-python=\"`resource_server`\" pulumi-lang-yaml=\"`resourceServer`\" pulumi-lang-java=\"`resourceServer`\"\u003e`resource_server`\u003c/span\u003e,\u003cspan pulumi-lang-nodejs=\"`ssoIntegration`\" pulumi-lang-dotnet=\"`SsoIntegration`\" pulumi-lang-go=\"`ssoIntegration`\" pulumi-lang-python=\"`sso_integration`\" pulumi-lang-yaml=\"`ssoIntegration`\" pulumi-lang-java=\"`ssoIntegration`\"\u003e`sso_integration`\u003c/span\u003e. Specific SSO integrations types accepted as well are: \u003cspan pulumi-lang-nodejs=\"`rms`\" pulumi-lang-dotnet=\"`Rms`\" pulumi-lang-go=\"`rms`\" pulumi-lang-python=\"`rms`\" pulumi-lang-yaml=\"`rms`\" pulumi-lang-java=\"`rms`\"\u003e`rms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`box`\" pulumi-lang-dotnet=\"`Box`\" pulumi-lang-go=\"`box`\" pulumi-lang-python=\"`box`\" pulumi-lang-yaml=\"`box`\" pulumi-lang-java=\"`box`\"\u003e`box`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cloudbees`\" pulumi-lang-dotnet=\"`Cloudbees`\" pulumi-lang-go=\"`cloudbees`\" pulumi-lang-python=\"`cloudbees`\" pulumi-lang-yaml=\"`cloudbees`\" pulumi-lang-java=\"`cloudbees`\"\u003e`cloudbees`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`concur`\" pulumi-lang-dotnet=\"`Concur`\" pulumi-lang-go=\"`concur`\" pulumi-lang-python=\"`concur`\" pulumi-lang-yaml=\"`concur`\" pulumi-lang-java=\"`concur`\"\u003e`concur`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`dropbox`\" pulumi-lang-dotnet=\"`Dropbox`\" pulumi-lang-go=\"`dropbox`\" pulumi-lang-python=\"`dropbox`\" pulumi-lang-yaml=\"`dropbox`\" pulumi-lang-java=\"`dropbox`\"\u003e`dropbox`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mscrm`\" pulumi-lang-dotnet=\"`Mscrm`\" pulumi-lang-go=\"`mscrm`\" pulumi-lang-python=\"`mscrm`\" pulumi-lang-yaml=\"`mscrm`\" pulumi-lang-java=\"`mscrm`\"\u003e`mscrm`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`echosign`\" pulumi-lang-dotnet=\"`Echosign`\" pulumi-lang-go=\"`echosign`\" pulumi-lang-python=\"`echosign`\" pulumi-lang-yaml=\"`echosign`\" pulumi-lang-java=\"`echosign`\"\u003e`echosign`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`egnyte`\" pulumi-lang-dotnet=\"`Egnyte`\" pulumi-lang-go=\"`egnyte`\" pulumi-lang-python=\"`egnyte`\" pulumi-lang-yaml=\"`egnyte`\" pulumi-lang-java=\"`egnyte`\"\u003e`egnyte`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`newrelic`\" pulumi-lang-dotnet=\"`Newrelic`\" pulumi-lang-go=\"`newrelic`\" pulumi-lang-python=\"`newrelic`\" pulumi-lang-yaml=\"`newrelic`\" pulumi-lang-java=\"`newrelic`\"\u003e`newrelic`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`office365`\" pulumi-lang-dotnet=\"`Office365`\" pulumi-lang-go=\"`office365`\" pulumi-lang-python=\"`office365`\" pulumi-lang-yaml=\"`office365`\" pulumi-lang-java=\"`office365`\"\u003e`office365`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`salesforce`\" pulumi-lang-dotnet=\"`Salesforce`\" pulumi-lang-go=\"`salesforce`\" pulumi-lang-python=\"`salesforce`\" pulumi-lang-yaml=\"`salesforce`\" pulumi-lang-java=\"`salesforce`\"\u003e`salesforce`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sentry`\" pulumi-lang-dotnet=\"`Sentry`\" pulumi-lang-go=\"`sentry`\" pulumi-lang-python=\"`sentry`\" pulumi-lang-yaml=\"`sentry`\" pulumi-lang-java=\"`sentry`\"\u003e`sentry`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sharepoint`\" pulumi-lang-dotnet=\"`Sharepoint`\" pulumi-lang-go=\"`sharepoint`\" pulumi-lang-python=\"`sharepoint`\" pulumi-lang-yaml=\"`sharepoint`\" pulumi-lang-java=\"`sharepoint`\"\u003e`sharepoint`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`slack`\" pulumi-lang-dotnet=\"`Slack`\" pulumi-lang-go=\"`slack`\" pulumi-lang-python=\"`slack`\" pulumi-lang-yaml=\"`slack`\" pulumi-lang-java=\"`slack`\"\u003e`slack`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`springcm`\" pulumi-lang-dotnet=\"`Springcm`\" pulumi-lang-go=\"`springcm`\" pulumi-lang-python=\"`springcm`\" pulumi-lang-yaml=\"`springcm`\" pulumi-lang-java=\"`springcm`\"\u003e`springcm`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zendesk`\" pulumi-lang-dotnet=\"`Zendesk`\" pulumi-lang-go=\"`zendesk`\" pulumi-lang-python=\"`zendesk`\" pulumi-lang-yaml=\"`zendesk`\" pulumi-lang-java=\"`zendesk`\"\u003e`zendesk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e.\n"
                },
                "callbacks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.\n"
                },
                "clientAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon.\n"
                },
                "clientMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?\"/\\()\u003c\u003e@ [Tab] [Space]`.\n"
                },
                "complianceLevel": {
                    "type": "string",
                    "description": "Defines the compliance level for this client, which may restrict it's capabilities. Can be one of \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fapi1AdvPkjPar`\" pulumi-lang-dotnet=\"`Fapi1AdvPkjPar`\" pulumi-lang-go=\"`fapi1AdvPkjPar`\" pulumi-lang-python=\"`fapi1_adv_pkj_par`\" pulumi-lang-yaml=\"`fapi1AdvPkjPar`\" pulumi-lang-java=\"`fapi1AdvPkjPar`\"\u003e`fapi1_adv_pkj_par`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fapi1AdvMtlsPar`\" pulumi-lang-dotnet=\"`Fapi1AdvMtlsPar`\" pulumi-lang-go=\"`fapi1AdvMtlsPar`\" pulumi-lang-python=\"`fapi1_adv_mtls_par`\" pulumi-lang-yaml=\"`fapi1AdvMtlsPar`\" pulumi-lang-java=\"`fapi1AdvMtlsPar`\"\u003e`fapi1_adv_mtls_par`\u003c/span\u003e.\n"
                },
                "crossOriginAuth": {
                    "type": "boolean",
                    "description": "Whether this client can be used to make cross-origin authentication requests (\u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e) or it is not allowed to make such requests (\u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e).\n"
                },
                "crossOriginLoc": {
                    "type": "string",
                    "description": "URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.\n"
                },
                "customLoginPage": {
                    "type": "string",
                    "description": "The content (HTML, CSS, JS) of the custom login page.\n"
                },
                "customLoginPageOn": {
                    "type": "boolean",
                    "description": "Indicates whether a custom login page is to be used.\n"
                },
                "defaultOrganization": {
                    "$ref": "#/types/auth0:index/ClientDefaultOrganization:ClientDefaultOrganization",
                    "description": "Configure and associate an organization with the Client\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the purpose of the client.\n",
                    "default": "Managed by Pulumi"
                },
                "encryptionKey": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Encryption used for WS-Fed responses with this client.\n"
                },
                "formTemplate": {
                    "type": "string",
                    "description": "HTML form template to be used for WS-Federation.\n"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Types of grants that this client is authorized to use.\n"
                },
                "initiateLoginUri": {
                    "type": "string",
                    "description": "Initiate login URI. Must be HTTPS or an empty string.\n"
                },
                "isFirstParty": {
                    "type": "boolean",
                    "description": "Indicates whether this client is a first-party client.Defaults to true from the API\n"
                },
                "isTokenEndpointIpHeaderTrusted": {
                    "type": "boolean",
                    "description": "Indicates whether the token endpoint IP header is trusted. Requires the authentication method to be set to \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e. Setting this property when creating the resource, will default the authentication method to \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e. To change the authentication method to \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e use the \u003cspan pulumi-lang-nodejs=\"`auth0.ClientCredentials`\" pulumi-lang-dotnet=\"`auth0.ClientCredentials`\" pulumi-lang-go=\"`ClientCredentials`\" pulumi-lang-python=\"`ClientCredentials`\" pulumi-lang-yaml=\"`auth0.ClientCredentials`\" pulumi-lang-java=\"`auth0.ClientCredentials`\"\u003e`auth0.ClientCredentials`\u003c/span\u003e resource.\n"
                },
                "jwtConfiguration": {
                    "$ref": "#/types/auth0:index/ClientJwtConfiguration:ClientJwtConfiguration",
                    "description": "Configuration settings for the JWTs issued for this client.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.\n"
                },
                "mobile": {
                    "$ref": "#/types/auth0:index/ClientMobile:ClientMobile",
                    "description": "Additional configuration for native mobile apps.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the client.\n"
                },
                "nativeSocialLogin": {
                    "$ref": "#/types/auth0:index/ClientNativeSocialLogin:ClientNativeSocialLogin",
                    "description": "Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e in order to change the \u003cspan pulumi-lang-nodejs=\"`appType`\" pulumi-lang-dotnet=\"`AppType`\" pulumi-lang-go=\"`appType`\" pulumi-lang-python=\"`app_type`\" pulumi-lang-yaml=\"`appType`\" pulumi-lang-java=\"`appType`\"\u003e`app_type`\u003c/span\u003e.\n"
                },
                "oidcBackchannelLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`oidcLogout`\" pulumi-lang-dotnet=\"`OidcLogout`\" pulumi-lang-go=\"`oidcLogout`\" pulumi-lang-python=\"`oidc_logout`\" pulumi-lang-yaml=\"`oidcLogout`\" pulumi-lang-java=\"`oidcLogout`\"\u003e`oidc_logout`\u003c/span\u003e for managing OIDC backchannel logout URLs."
                },
                "oidcConformant": {
                    "type": "boolean",
                    "description": "Indicates whether this client will conform to strict OIDC specifications.\n"
                },
                "oidcLogout": {
                    "$ref": "#/types/auth0:index/ClientOidcLogout:ClientOidcLogout",
                    "description": "Configure OIDC logout for the Client\n"
                },
                "organizationDiscoveryMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Methods for discovering organizations during the pre*login*prompt. Can include \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e (allows users to find their organization by entering their email address) and/or \u003cspan pulumi-lang-nodejs=\"`organizationName`\" pulumi-lang-dotnet=\"`OrganizationName`\" pulumi-lang-go=\"`organizationName`\" pulumi-lang-python=\"`organization_name`\" pulumi-lang-yaml=\"`organizationName`\" pulumi-lang-java=\"`organizationName`\"\u003e`organization_name`\u003c/span\u003e (requires users to enter the organization name directly). These methods can be combined. Setting this property requires that \u003cspan pulumi-lang-nodejs=\"`organizationRequireBehavior`\" pulumi-lang-dotnet=\"`OrganizationRequireBehavior`\" pulumi-lang-go=\"`organizationRequireBehavior`\" pulumi-lang-python=\"`organization_require_behavior`\" pulumi-lang-yaml=\"`organizationRequireBehavior`\" pulumi-lang-java=\"`organizationRequireBehavior`\"\u003e`organization_require_behavior`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`preLoginPrompt`\" pulumi-lang-dotnet=\"`PreLoginPrompt`\" pulumi-lang-go=\"`preLoginPrompt`\" pulumi-lang-python=\"`pre_login_prompt`\" pulumi-lang-yaml=\"`preLoginPrompt`\" pulumi-lang-java=\"`preLoginPrompt`\"\u003e`pre_login_prompt`\u003c/span\u003e.\n"
                },
                "organizationRequireBehavior": {
                    "type": "string",
                    "description": "Defines how to proceed during an authentication transaction when \u003cspan pulumi-lang-nodejs=\"`organizationUsage \" pulumi-lang-dotnet=\"`OrganizationUsage \" pulumi-lang-go=\"`organizationUsage \" pulumi-lang-python=\"`organization_usage \" pulumi-lang-yaml=\"`organizationUsage \" pulumi-lang-java=\"`organizationUsage \"\u003e`organization_usage \u003c/span\u003e= \"require\"`. Can be \u003cspan pulumi-lang-nodejs=\"`noPrompt`\" pulumi-lang-dotnet=\"`NoPrompt`\" pulumi-lang-go=\"`noPrompt`\" pulumi-lang-python=\"`no_prompt`\" pulumi-lang-yaml=\"`noPrompt`\" pulumi-lang-java=\"`noPrompt`\"\u003e`no_prompt`\u003c/span\u003e (default), \u003cspan pulumi-lang-nodejs=\"`preLoginPrompt`\" pulumi-lang-dotnet=\"`PreLoginPrompt`\" pulumi-lang-go=\"`preLoginPrompt`\" pulumi-lang-python=\"`pre_login_prompt`\" pulumi-lang-yaml=\"`preLoginPrompt`\" pulumi-lang-java=\"`preLoginPrompt`\"\u003e`pre_login_prompt`\u003c/span\u003e or  \u003cspan pulumi-lang-nodejs=\"`postLoginPrompt`\" pulumi-lang-dotnet=\"`PostLoginPrompt`\" pulumi-lang-go=\"`postLoginPrompt`\" pulumi-lang-python=\"`post_login_prompt`\" pulumi-lang-yaml=\"`postLoginPrompt`\" pulumi-lang-java=\"`postLoginPrompt`\"\u003e`post_login_prompt`\u003c/span\u003e.\n"
                },
                "organizationUsage": {
                    "type": "string",
                    "description": "Defines how to proceed during an authentication transaction with regards to an organization. Can be \u003cspan pulumi-lang-nodejs=\"`deny`\" pulumi-lang-dotnet=\"`Deny`\" pulumi-lang-go=\"`deny`\" pulumi-lang-python=\"`deny`\" pulumi-lang-yaml=\"`deny`\" pulumi-lang-java=\"`deny`\"\u003e`deny`\u003c/span\u003e (default), \u003cspan pulumi-lang-nodejs=\"`allow`\" pulumi-lang-dotnet=\"`Allow`\" pulumi-lang-go=\"`allow`\" pulumi-lang-python=\"`allow`\" pulumi-lang-yaml=\"`allow`\" pulumi-lang-java=\"`allow`\"\u003e`allow`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`require`\" pulumi-lang-dotnet=\"`Require`\" pulumi-lang-go=\"`require`\" pulumi-lang-python=\"`require`\" pulumi-lang-yaml=\"`require`\" pulumi-lang-java=\"`require`\"\u003e`require`\u003c/span\u003e.\n"
                },
                "refreshToken": {
                    "$ref": "#/types/auth0:index/ClientRefreshToken:ClientRefreshToken",
                    "description": "Configuration settings for the refresh tokens issued for this client.\n"
                },
                "requireProofOfPossession": {
                    "type": "boolean",
                    "description": "Makes the use of Proof-of-Possession mandatory for this client.\n"
                },
                "requirePushedAuthorizationRequests": {
                    "type": "boolean",
                    "description": "Makes the use of Pushed Authorization Requests mandatory for this client. This feature currently needs to be enabled on the tenant in order to make use of it.\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "The identifier of a resource server that client is associated withThis property can be sent only when app*type=resource*server.This property can not be changed, once the client is created.\n"
                },
                "sessionTransfer": {
                    "$ref": "#/types/auth0:index/ClientSessionTransfer:ClientSessionTransfer"
                },
                "skipNonVerifiableCallbackUriConfirmationPrompt": {
                    "type": "string",
                    "description": "Indicates whether the confirmation prompt appears when using non-verifiable callback URIs. Set to true to skip the prompt, false to show it, or null to unset. Accepts (true/false/null) or (\"true\"/\"false\"/\"null\")\n"
                },
                "sso": {
                    "type": "boolean",
                    "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).\n"
                },
                "ssoDisabled": {
                    "type": "boolean",
                    "description": "Indicates whether or not SSO is disabled.\n"
                },
                "tokenExchange": {
                    "$ref": "#/types/auth0:index/ClientTokenExchange:ClientTokenExchange",
                    "description": "Allows configuration for token exchange\n"
                },
                "tokenQuota": {
                    "$ref": "#/types/auth0:index/ClientTokenQuota:ClientTokenQuota",
                    "description": "The token quota configuration.\n"
                },
                "webOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that represent valid web origins for use with web message response mode.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Client resources.\n",
                "properties": {
                    "addons": {
                        "$ref": "#/types/auth0:index/ClientAddons:ClientAddons",
                        "description": "Addons enabled for this client and their associated configurations.\n"
                    },
                    "allowedClients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.\n"
                    },
                    "allowedLogoutUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URLs that Auth0 may redirect to after logout.\n"
                    },
                    "allowedOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.\n"
                    },
                    "appType": {
                        "type": "string",
                        "description": "Type of application the client represents. Possible values are: \u003cspan pulumi-lang-nodejs=\"`native`\" pulumi-lang-dotnet=\"`Native`\" pulumi-lang-go=\"`native`\" pulumi-lang-python=\"`native`\" pulumi-lang-yaml=\"`native`\" pulumi-lang-java=\"`native`\"\u003e`native`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`spa`\" pulumi-lang-dotnet=\"`Spa`\" pulumi-lang-go=\"`spa`\" pulumi-lang-python=\"`spa`\" pulumi-lang-yaml=\"`spa`\" pulumi-lang-java=\"`spa`\"\u003e`spa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`regularWeb`\" pulumi-lang-dotnet=\"`RegularWeb`\" pulumi-lang-go=\"`regularWeb`\" pulumi-lang-python=\"`regular_web`\" pulumi-lang-yaml=\"`regularWeb`\" pulumi-lang-java=\"`regularWeb`\"\u003e`regular_web`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nonInteractive`\" pulumi-lang-dotnet=\"`NonInteractive`\" pulumi-lang-go=\"`nonInteractive`\" pulumi-lang-python=\"`non_interactive`\" pulumi-lang-yaml=\"`nonInteractive`\" pulumi-lang-java=\"`nonInteractive`\"\u003e`non_interactive`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resourceServer`\" pulumi-lang-dotnet=\"`ResourceServer`\" pulumi-lang-go=\"`resourceServer`\" pulumi-lang-python=\"`resource_server`\" pulumi-lang-yaml=\"`resourceServer`\" pulumi-lang-java=\"`resourceServer`\"\u003e`resource_server`\u003c/span\u003e,\u003cspan pulumi-lang-nodejs=\"`ssoIntegration`\" pulumi-lang-dotnet=\"`SsoIntegration`\" pulumi-lang-go=\"`ssoIntegration`\" pulumi-lang-python=\"`sso_integration`\" pulumi-lang-yaml=\"`ssoIntegration`\" pulumi-lang-java=\"`ssoIntegration`\"\u003e`sso_integration`\u003c/span\u003e. Specific SSO integrations types accepted as well are: \u003cspan pulumi-lang-nodejs=\"`rms`\" pulumi-lang-dotnet=\"`Rms`\" pulumi-lang-go=\"`rms`\" pulumi-lang-python=\"`rms`\" pulumi-lang-yaml=\"`rms`\" pulumi-lang-java=\"`rms`\"\u003e`rms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`box`\" pulumi-lang-dotnet=\"`Box`\" pulumi-lang-go=\"`box`\" pulumi-lang-python=\"`box`\" pulumi-lang-yaml=\"`box`\" pulumi-lang-java=\"`box`\"\u003e`box`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cloudbees`\" pulumi-lang-dotnet=\"`Cloudbees`\" pulumi-lang-go=\"`cloudbees`\" pulumi-lang-python=\"`cloudbees`\" pulumi-lang-yaml=\"`cloudbees`\" pulumi-lang-java=\"`cloudbees`\"\u003e`cloudbees`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`concur`\" pulumi-lang-dotnet=\"`Concur`\" pulumi-lang-go=\"`concur`\" pulumi-lang-python=\"`concur`\" pulumi-lang-yaml=\"`concur`\" pulumi-lang-java=\"`concur`\"\u003e`concur`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`dropbox`\" pulumi-lang-dotnet=\"`Dropbox`\" pulumi-lang-go=\"`dropbox`\" pulumi-lang-python=\"`dropbox`\" pulumi-lang-yaml=\"`dropbox`\" pulumi-lang-java=\"`dropbox`\"\u003e`dropbox`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mscrm`\" pulumi-lang-dotnet=\"`Mscrm`\" pulumi-lang-go=\"`mscrm`\" pulumi-lang-python=\"`mscrm`\" pulumi-lang-yaml=\"`mscrm`\" pulumi-lang-java=\"`mscrm`\"\u003e`mscrm`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`echosign`\" pulumi-lang-dotnet=\"`Echosign`\" pulumi-lang-go=\"`echosign`\" pulumi-lang-python=\"`echosign`\" pulumi-lang-yaml=\"`echosign`\" pulumi-lang-java=\"`echosign`\"\u003e`echosign`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`egnyte`\" pulumi-lang-dotnet=\"`Egnyte`\" pulumi-lang-go=\"`egnyte`\" pulumi-lang-python=\"`egnyte`\" pulumi-lang-yaml=\"`egnyte`\" pulumi-lang-java=\"`egnyte`\"\u003e`egnyte`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`newrelic`\" pulumi-lang-dotnet=\"`Newrelic`\" pulumi-lang-go=\"`newrelic`\" pulumi-lang-python=\"`newrelic`\" pulumi-lang-yaml=\"`newrelic`\" pulumi-lang-java=\"`newrelic`\"\u003e`newrelic`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`office365`\" pulumi-lang-dotnet=\"`Office365`\" pulumi-lang-go=\"`office365`\" pulumi-lang-python=\"`office365`\" pulumi-lang-yaml=\"`office365`\" pulumi-lang-java=\"`office365`\"\u003e`office365`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`salesforce`\" pulumi-lang-dotnet=\"`Salesforce`\" pulumi-lang-go=\"`salesforce`\" pulumi-lang-python=\"`salesforce`\" pulumi-lang-yaml=\"`salesforce`\" pulumi-lang-java=\"`salesforce`\"\u003e`salesforce`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sentry`\" pulumi-lang-dotnet=\"`Sentry`\" pulumi-lang-go=\"`sentry`\" pulumi-lang-python=\"`sentry`\" pulumi-lang-yaml=\"`sentry`\" pulumi-lang-java=\"`sentry`\"\u003e`sentry`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sharepoint`\" pulumi-lang-dotnet=\"`Sharepoint`\" pulumi-lang-go=\"`sharepoint`\" pulumi-lang-python=\"`sharepoint`\" pulumi-lang-yaml=\"`sharepoint`\" pulumi-lang-java=\"`sharepoint`\"\u003e`sharepoint`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`slack`\" pulumi-lang-dotnet=\"`Slack`\" pulumi-lang-go=\"`slack`\" pulumi-lang-python=\"`slack`\" pulumi-lang-yaml=\"`slack`\" pulumi-lang-java=\"`slack`\"\u003e`slack`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`springcm`\" pulumi-lang-dotnet=\"`Springcm`\" pulumi-lang-go=\"`springcm`\" pulumi-lang-python=\"`springcm`\" pulumi-lang-yaml=\"`springcm`\" pulumi-lang-java=\"`springcm`\"\u003e`springcm`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zendesk`\" pulumi-lang-dotnet=\"`Zendesk`\" pulumi-lang-go=\"`zendesk`\" pulumi-lang-python=\"`zendesk`\" pulumi-lang-yaml=\"`zendesk`\" pulumi-lang-java=\"`zendesk`\"\u003e`zendesk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e.\n"
                    },
                    "callbacks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.\n"
                    },
                    "clientAliases": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "The ID of the client.\n"
                    },
                    "clientMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?\"/\\()\u003c\u003e@ [Tab] [Space]`.\n"
                    },
                    "complianceLevel": {
                        "type": "string",
                        "description": "Defines the compliance level for this client, which may restrict it's capabilities. Can be one of \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fapi1AdvPkjPar`\" pulumi-lang-dotnet=\"`Fapi1AdvPkjPar`\" pulumi-lang-go=\"`fapi1AdvPkjPar`\" pulumi-lang-python=\"`fapi1_adv_pkj_par`\" pulumi-lang-yaml=\"`fapi1AdvPkjPar`\" pulumi-lang-java=\"`fapi1AdvPkjPar`\"\u003e`fapi1_adv_pkj_par`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fapi1AdvMtlsPar`\" pulumi-lang-dotnet=\"`Fapi1AdvMtlsPar`\" pulumi-lang-go=\"`fapi1AdvMtlsPar`\" pulumi-lang-python=\"`fapi1_adv_mtls_par`\" pulumi-lang-yaml=\"`fapi1AdvMtlsPar`\" pulumi-lang-java=\"`fapi1AdvMtlsPar`\"\u003e`fapi1_adv_mtls_par`\u003c/span\u003e.\n"
                    },
                    "crossOriginAuth": {
                        "type": "boolean",
                        "description": "Whether this client can be used to make cross-origin authentication requests (\u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e) or it is not allowed to make such requests (\u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e).\n"
                    },
                    "crossOriginLoc": {
                        "type": "string",
                        "description": "URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.\n"
                    },
                    "customLoginPage": {
                        "type": "string",
                        "description": "The content (HTML, CSS, JS) of the custom login page.\n"
                    },
                    "customLoginPageOn": {
                        "type": "boolean",
                        "description": "Indicates whether a custom login page is to be used.\n"
                    },
                    "defaultOrganization": {
                        "$ref": "#/types/auth0:index/ClientDefaultOrganization:ClientDefaultOrganization",
                        "description": "Configure and associate an organization with the Client\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the purpose of the client.\n",
                        "default": "Managed by Pulumi"
                    },
                    "encryptionKey": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Encryption used for WS-Fed responses with this client.\n"
                    },
                    "formTemplate": {
                        "type": "string",
                        "description": "HTML form template to be used for WS-Federation.\n"
                    },
                    "grantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Types of grants that this client is authorized to use.\n"
                    },
                    "initiateLoginUri": {
                        "type": "string",
                        "description": "Initiate login URI. Must be HTTPS or an empty string.\n"
                    },
                    "isFirstParty": {
                        "type": "boolean",
                        "description": "Indicates whether this client is a first-party client.Defaults to true from the API\n"
                    },
                    "isTokenEndpointIpHeaderTrusted": {
                        "type": "boolean",
                        "description": "Indicates whether the token endpoint IP header is trusted. Requires the authentication method to be set to \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e. Setting this property when creating the resource, will default the authentication method to \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e. To change the authentication method to \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e use the \u003cspan pulumi-lang-nodejs=\"`auth0.ClientCredentials`\" pulumi-lang-dotnet=\"`auth0.ClientCredentials`\" pulumi-lang-go=\"`ClientCredentials`\" pulumi-lang-python=\"`ClientCredentials`\" pulumi-lang-yaml=\"`auth0.ClientCredentials`\" pulumi-lang-java=\"`auth0.ClientCredentials`\"\u003e`auth0.ClientCredentials`\u003c/span\u003e resource.\n"
                    },
                    "jwtConfiguration": {
                        "$ref": "#/types/auth0:index/ClientJwtConfiguration:ClientJwtConfiguration",
                        "description": "Configuration settings for the JWTs issued for this client.\n"
                    },
                    "logoUri": {
                        "type": "string",
                        "description": "URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.\n"
                    },
                    "mobile": {
                        "$ref": "#/types/auth0:index/ClientMobile:ClientMobile",
                        "description": "Additional configuration for native mobile apps.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the client.\n"
                    },
                    "nativeSocialLogin": {
                        "$ref": "#/types/auth0:index/ClientNativeSocialLogin:ClientNativeSocialLogin",
                        "description": "Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e in order to change the \u003cspan pulumi-lang-nodejs=\"`appType`\" pulumi-lang-dotnet=\"`AppType`\" pulumi-lang-go=\"`appType`\" pulumi-lang-python=\"`app_type`\" pulumi-lang-yaml=\"`appType`\" pulumi-lang-java=\"`appType`\"\u003e`app_type`\u003c/span\u003e.\n"
                    },
                    "oidcBackchannelLogoutUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.\n",
                        "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`oidcLogout`\" pulumi-lang-dotnet=\"`OidcLogout`\" pulumi-lang-go=\"`oidcLogout`\" pulumi-lang-python=\"`oidc_logout`\" pulumi-lang-yaml=\"`oidcLogout`\" pulumi-lang-java=\"`oidcLogout`\"\u003e`oidc_logout`\u003c/span\u003e for managing OIDC backchannel logout URLs."
                    },
                    "oidcConformant": {
                        "type": "boolean",
                        "description": "Indicates whether this client will conform to strict OIDC specifications.\n"
                    },
                    "oidcLogout": {
                        "$ref": "#/types/auth0:index/ClientOidcLogout:ClientOidcLogout",
                        "description": "Configure OIDC logout for the Client\n"
                    },
                    "organizationDiscoveryMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Methods for discovering organizations during the pre*login*prompt. Can include \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e (allows users to find their organization by entering their email address) and/or \u003cspan pulumi-lang-nodejs=\"`organizationName`\" pulumi-lang-dotnet=\"`OrganizationName`\" pulumi-lang-go=\"`organizationName`\" pulumi-lang-python=\"`organization_name`\" pulumi-lang-yaml=\"`organizationName`\" pulumi-lang-java=\"`organizationName`\"\u003e`organization_name`\u003c/span\u003e (requires users to enter the organization name directly). These methods can be combined. Setting this property requires that \u003cspan pulumi-lang-nodejs=\"`organizationRequireBehavior`\" pulumi-lang-dotnet=\"`OrganizationRequireBehavior`\" pulumi-lang-go=\"`organizationRequireBehavior`\" pulumi-lang-python=\"`organization_require_behavior`\" pulumi-lang-yaml=\"`organizationRequireBehavior`\" pulumi-lang-java=\"`organizationRequireBehavior`\"\u003e`organization_require_behavior`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`preLoginPrompt`\" pulumi-lang-dotnet=\"`PreLoginPrompt`\" pulumi-lang-go=\"`preLoginPrompt`\" pulumi-lang-python=\"`pre_login_prompt`\" pulumi-lang-yaml=\"`preLoginPrompt`\" pulumi-lang-java=\"`preLoginPrompt`\"\u003e`pre_login_prompt`\u003c/span\u003e.\n"
                    },
                    "organizationRequireBehavior": {
                        "type": "string",
                        "description": "Defines how to proceed during an authentication transaction when \u003cspan pulumi-lang-nodejs=\"`organizationUsage \" pulumi-lang-dotnet=\"`OrganizationUsage \" pulumi-lang-go=\"`organizationUsage \" pulumi-lang-python=\"`organization_usage \" pulumi-lang-yaml=\"`organizationUsage \" pulumi-lang-java=\"`organizationUsage \"\u003e`organization_usage \u003c/span\u003e= \"require\"`. Can be \u003cspan pulumi-lang-nodejs=\"`noPrompt`\" pulumi-lang-dotnet=\"`NoPrompt`\" pulumi-lang-go=\"`noPrompt`\" pulumi-lang-python=\"`no_prompt`\" pulumi-lang-yaml=\"`noPrompt`\" pulumi-lang-java=\"`noPrompt`\"\u003e`no_prompt`\u003c/span\u003e (default), \u003cspan pulumi-lang-nodejs=\"`preLoginPrompt`\" pulumi-lang-dotnet=\"`PreLoginPrompt`\" pulumi-lang-go=\"`preLoginPrompt`\" pulumi-lang-python=\"`pre_login_prompt`\" pulumi-lang-yaml=\"`preLoginPrompt`\" pulumi-lang-java=\"`preLoginPrompt`\"\u003e`pre_login_prompt`\u003c/span\u003e or  \u003cspan pulumi-lang-nodejs=\"`postLoginPrompt`\" pulumi-lang-dotnet=\"`PostLoginPrompt`\" pulumi-lang-go=\"`postLoginPrompt`\" pulumi-lang-python=\"`post_login_prompt`\" pulumi-lang-yaml=\"`postLoginPrompt`\" pulumi-lang-java=\"`postLoginPrompt`\"\u003e`post_login_prompt`\u003c/span\u003e.\n"
                    },
                    "organizationUsage": {
                        "type": "string",
                        "description": "Defines how to proceed during an authentication transaction with regards to an organization. Can be \u003cspan pulumi-lang-nodejs=\"`deny`\" pulumi-lang-dotnet=\"`Deny`\" pulumi-lang-go=\"`deny`\" pulumi-lang-python=\"`deny`\" pulumi-lang-yaml=\"`deny`\" pulumi-lang-java=\"`deny`\"\u003e`deny`\u003c/span\u003e (default), \u003cspan pulumi-lang-nodejs=\"`allow`\" pulumi-lang-dotnet=\"`Allow`\" pulumi-lang-go=\"`allow`\" pulumi-lang-python=\"`allow`\" pulumi-lang-yaml=\"`allow`\" pulumi-lang-java=\"`allow`\"\u003e`allow`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`require`\" pulumi-lang-dotnet=\"`Require`\" pulumi-lang-go=\"`require`\" pulumi-lang-python=\"`require`\" pulumi-lang-yaml=\"`require`\" pulumi-lang-java=\"`require`\"\u003e`require`\u003c/span\u003e.\n"
                    },
                    "refreshToken": {
                        "$ref": "#/types/auth0:index/ClientRefreshToken:ClientRefreshToken",
                        "description": "Configuration settings for the refresh tokens issued for this client.\n"
                    },
                    "requireProofOfPossession": {
                        "type": "boolean",
                        "description": "Makes the use of Proof-of-Possession mandatory for this client.\n"
                    },
                    "requirePushedAuthorizationRequests": {
                        "type": "boolean",
                        "description": "Makes the use of Pushed Authorization Requests mandatory for this client. This feature currently needs to be enabled on the tenant in order to make use of it.\n"
                    },
                    "resourceServerIdentifier": {
                        "type": "string",
                        "description": "The identifier of a resource server that client is associated withThis property can be sent only when app*type=resource*server.This property can not be changed, once the client is created.\n"
                    },
                    "sessionTransfer": {
                        "$ref": "#/types/auth0:index/ClientSessionTransfer:ClientSessionTransfer"
                    },
                    "signingKeys": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "description": "List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.\n",
                        "secret": true
                    },
                    "skipNonVerifiableCallbackUriConfirmationPrompt": {
                        "type": "string",
                        "description": "Indicates whether the confirmation prompt appears when using non-verifiable callback URIs. Set to true to skip the prompt, false to show it, or null to unset. Accepts (true/false/null) or (\"true\"/\"false\"/\"null\")\n"
                    },
                    "sso": {
                        "type": "boolean",
                        "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).\n"
                    },
                    "ssoDisabled": {
                        "type": "boolean",
                        "description": "Indicates whether or not SSO is disabled.\n"
                    },
                    "tokenExchange": {
                        "$ref": "#/types/auth0:index/ClientTokenExchange:ClientTokenExchange",
                        "description": "Allows configuration for token exchange\n"
                    },
                    "tokenQuota": {
                        "$ref": "#/types/auth0:index/ClientTokenQuota:ClientTokenQuota",
                        "description": "The token quota configuration.\n"
                    },
                    "webOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URLs that represent valid web origins for use with web message response mode.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/clientCredentials:ClientCredentials": {
            "description": "With this resource, you can configure the method to use when making requests to any endpoint that requires this client to authenticate.\n\n\u003e Refer to the client secret rotation guide\nfor instructions on how to rotate client secrets with zero downtime.\n\n## Import\n\nThis resource can be imported by specifying the client ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/clientCredentials:ClientCredentials my_creds \"AaiyAPdpYdesoKnqjj8HJqRn4T5titww\"\n```\n\n~\u003e Importing this resource when the `authentication_method` is set to `private_key_jwt` will force the resource to be recreated.\n\nThis is to be expected, because the pem file can't be checked for differences.\n\n",
            "properties": {
                "authenticationMethod": {
                    "type": "string",
                    "description": "Configure the method to use when making requests to any endpoint that requires this client to authenticate. Options include \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e (public client without a client secret), \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e (confidential client using HTTP POST parameters), \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e (confidential client using HTTP Basic), \u003cspan pulumi-lang-nodejs=\"`privateKeyJwt`\" pulumi-lang-dotnet=\"`PrivateKeyJwt`\" pulumi-lang-go=\"`privateKeyJwt`\" pulumi-lang-python=\"`private_key_jwt`\" pulumi-lang-yaml=\"`privateKeyJwt`\" pulumi-lang-java=\"`privateKeyJwt`\"\u003e`private_key_jwt`\u003c/span\u003e (confidential client using a Private Key JWT), \u003cspan pulumi-lang-nodejs=\"`tlsClientAuth`\" pulumi-lang-dotnet=\"`TlsClientAuth`\" pulumi-lang-go=\"`tlsClientAuth`\" pulumi-lang-python=\"`tls_client_auth`\" pulumi-lang-yaml=\"`tlsClientAuth`\" pulumi-lang-java=\"`tlsClientAuth`\"\u003e`tls_client_auth`\u003c/span\u003e (confidential client using CA-based mTLS authentication), \u003cspan pulumi-lang-nodejs=\"`selfSignedTlsClientAuth`\" pulumi-lang-dotnet=\"`SelfSignedTlsClientAuth`\" pulumi-lang-go=\"`selfSignedTlsClientAuth`\" pulumi-lang-python=\"`self_signed_tls_client_auth`\" pulumi-lang-yaml=\"`selfSignedTlsClientAuth`\" pulumi-lang-java=\"`selfSignedTlsClientAuth`\"\u003e`self_signed_tls_client_auth`\u003c/span\u003e (confidential client using mTLS authentication utilizing a self-signed certificate).\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The ID of the client for which to configure the authentication method.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "privateKeyJwt": {
                    "$ref": "#/types/auth0:index/ClientCredentialsPrivateKeyJwt:ClientCredentialsPrivateKeyJwt",
                    "description": "Defines \u003cspan pulumi-lang-nodejs=\"`privateKeyJwt`\" pulumi-lang-dotnet=\"`PrivateKeyJwt`\" pulumi-lang-go=\"`privateKeyJwt`\" pulumi-lang-python=\"`private_key_jwt`\" pulumi-lang-yaml=\"`privateKeyJwt`\" pulumi-lang-java=\"`privateKeyJwt`\"\u003e`private_key_jwt`\u003c/span\u003e client authentication method.\n"
                },
                "selfSignedTlsClientAuth": {
                    "$ref": "#/types/auth0:index/ClientCredentialsSelfSignedTlsClientAuth:ClientCredentialsSelfSignedTlsClientAuth",
                    "description": "Defines \u003cspan pulumi-lang-nodejs=\"`tlsClientAuth`\" pulumi-lang-dotnet=\"`TlsClientAuth`\" pulumi-lang-go=\"`tlsClientAuth`\" pulumi-lang-python=\"`tls_client_auth`\" pulumi-lang-yaml=\"`tlsClientAuth`\" pulumi-lang-java=\"`tlsClientAuth`\"\u003e`tls_client_auth`\u003c/span\u003e client authentication method.\n"
                },
                "signedRequestObject": {
                    "$ref": "#/types/auth0:index/ClientCredentialsSignedRequestObject:ClientCredentialsSignedRequestObject",
                    "description": "Configuration for JWT-secured Authorization Requests(JAR).\n"
                },
                "tlsClientAuth": {
                    "$ref": "#/types/auth0:index/ClientCredentialsTlsClientAuth:ClientCredentialsTlsClientAuth",
                    "description": "Defines \u003cspan pulumi-lang-nodejs=\"`tlsClientAuth`\" pulumi-lang-dotnet=\"`TlsClientAuth`\" pulumi-lang-go=\"`tlsClientAuth`\" pulumi-lang-python=\"`tls_client_auth`\" pulumi-lang-yaml=\"`tlsClientAuth`\" pulumi-lang-java=\"`tlsClientAuth`\"\u003e`tls_client_auth`\u003c/span\u003e client authentication method.\n"
                }
            },
            "required": [
                "authenticationMethod",
                "clientId",
                "clientSecret"
            ],
            "inputProperties": {
                "authenticationMethod": {
                    "type": "string",
                    "description": "Configure the method to use when making requests to any endpoint that requires this client to authenticate. Options include \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e (public client without a client secret), \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e (confidential client using HTTP POST parameters), \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e (confidential client using HTTP Basic), \u003cspan pulumi-lang-nodejs=\"`privateKeyJwt`\" pulumi-lang-dotnet=\"`PrivateKeyJwt`\" pulumi-lang-go=\"`privateKeyJwt`\" pulumi-lang-python=\"`private_key_jwt`\" pulumi-lang-yaml=\"`privateKeyJwt`\" pulumi-lang-java=\"`privateKeyJwt`\"\u003e`private_key_jwt`\u003c/span\u003e (confidential client using a Private Key JWT), \u003cspan pulumi-lang-nodejs=\"`tlsClientAuth`\" pulumi-lang-dotnet=\"`TlsClientAuth`\" pulumi-lang-go=\"`tlsClientAuth`\" pulumi-lang-python=\"`tls_client_auth`\" pulumi-lang-yaml=\"`tlsClientAuth`\" pulumi-lang-java=\"`tlsClientAuth`\"\u003e`tls_client_auth`\u003c/span\u003e (confidential client using CA-based mTLS authentication), \u003cspan pulumi-lang-nodejs=\"`selfSignedTlsClientAuth`\" pulumi-lang-dotnet=\"`SelfSignedTlsClientAuth`\" pulumi-lang-go=\"`selfSignedTlsClientAuth`\" pulumi-lang-python=\"`self_signed_tls_client_auth`\" pulumi-lang-yaml=\"`selfSignedTlsClientAuth`\" pulumi-lang-java=\"`selfSignedTlsClientAuth`\"\u003e`self_signed_tls_client_auth`\u003c/span\u003e (confidential client using mTLS authentication utilizing a self-signed certificate).\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The ID of the client for which to configure the authentication method.\n",
                    "willReplaceOnChanges": true
                },
                "clientSecret": {
                    "type": "string",
                    "secret": true
                },
                "privateKeyJwt": {
                    "$ref": "#/types/auth0:index/ClientCredentialsPrivateKeyJwt:ClientCredentialsPrivateKeyJwt",
                    "description": "Defines \u003cspan pulumi-lang-nodejs=\"`privateKeyJwt`\" pulumi-lang-dotnet=\"`PrivateKeyJwt`\" pulumi-lang-go=\"`privateKeyJwt`\" pulumi-lang-python=\"`private_key_jwt`\" pulumi-lang-yaml=\"`privateKeyJwt`\" pulumi-lang-java=\"`privateKeyJwt`\"\u003e`private_key_jwt`\u003c/span\u003e client authentication method.\n"
                },
                "selfSignedTlsClientAuth": {
                    "$ref": "#/types/auth0:index/ClientCredentialsSelfSignedTlsClientAuth:ClientCredentialsSelfSignedTlsClientAuth",
                    "description": "Defines \u003cspan pulumi-lang-nodejs=\"`tlsClientAuth`\" pulumi-lang-dotnet=\"`TlsClientAuth`\" pulumi-lang-go=\"`tlsClientAuth`\" pulumi-lang-python=\"`tls_client_auth`\" pulumi-lang-yaml=\"`tlsClientAuth`\" pulumi-lang-java=\"`tlsClientAuth`\"\u003e`tls_client_auth`\u003c/span\u003e client authentication method.\n"
                },
                "signedRequestObject": {
                    "$ref": "#/types/auth0:index/ClientCredentialsSignedRequestObject:ClientCredentialsSignedRequestObject",
                    "description": "Configuration for JWT-secured Authorization Requests(JAR).\n"
                },
                "tlsClientAuth": {
                    "$ref": "#/types/auth0:index/ClientCredentialsTlsClientAuth:ClientCredentialsTlsClientAuth",
                    "description": "Defines \u003cspan pulumi-lang-nodejs=\"`tlsClientAuth`\" pulumi-lang-dotnet=\"`TlsClientAuth`\" pulumi-lang-go=\"`tlsClientAuth`\" pulumi-lang-python=\"`tls_client_auth`\" pulumi-lang-yaml=\"`tlsClientAuth`\" pulumi-lang-java=\"`tlsClientAuth`\"\u003e`tls_client_auth`\u003c/span\u003e client authentication method.\n"
                }
            },
            "requiredInputs": [
                "clientId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClientCredentials resources.\n",
                "properties": {
                    "authenticationMethod": {
                        "type": "string",
                        "description": "Configure the method to use when making requests to any endpoint that requires this client to authenticate. Options include \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e (public client without a client secret), \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e (confidential client using HTTP POST parameters), \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e (confidential client using HTTP Basic), \u003cspan pulumi-lang-nodejs=\"`privateKeyJwt`\" pulumi-lang-dotnet=\"`PrivateKeyJwt`\" pulumi-lang-go=\"`privateKeyJwt`\" pulumi-lang-python=\"`private_key_jwt`\" pulumi-lang-yaml=\"`privateKeyJwt`\" pulumi-lang-java=\"`privateKeyJwt`\"\u003e`private_key_jwt`\u003c/span\u003e (confidential client using a Private Key JWT), \u003cspan pulumi-lang-nodejs=\"`tlsClientAuth`\" pulumi-lang-dotnet=\"`TlsClientAuth`\" pulumi-lang-go=\"`tlsClientAuth`\" pulumi-lang-python=\"`tls_client_auth`\" pulumi-lang-yaml=\"`tlsClientAuth`\" pulumi-lang-java=\"`tlsClientAuth`\"\u003e`tls_client_auth`\u003c/span\u003e (confidential client using CA-based mTLS authentication), \u003cspan pulumi-lang-nodejs=\"`selfSignedTlsClientAuth`\" pulumi-lang-dotnet=\"`SelfSignedTlsClientAuth`\" pulumi-lang-go=\"`selfSignedTlsClientAuth`\" pulumi-lang-python=\"`self_signed_tls_client_auth`\" pulumi-lang-yaml=\"`selfSignedTlsClientAuth`\" pulumi-lang-java=\"`selfSignedTlsClientAuth`\"\u003e`self_signed_tls_client_auth`\u003c/span\u003e (confidential client using mTLS authentication utilizing a self-signed certificate).\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "The ID of the client for which to configure the authentication method.\n",
                        "willReplaceOnChanges": true
                    },
                    "clientSecret": {
                        "type": "string",
                        "secret": true
                    },
                    "privateKeyJwt": {
                        "$ref": "#/types/auth0:index/ClientCredentialsPrivateKeyJwt:ClientCredentialsPrivateKeyJwt",
                        "description": "Defines \u003cspan pulumi-lang-nodejs=\"`privateKeyJwt`\" pulumi-lang-dotnet=\"`PrivateKeyJwt`\" pulumi-lang-go=\"`privateKeyJwt`\" pulumi-lang-python=\"`private_key_jwt`\" pulumi-lang-yaml=\"`privateKeyJwt`\" pulumi-lang-java=\"`privateKeyJwt`\"\u003e`private_key_jwt`\u003c/span\u003e client authentication method.\n"
                    },
                    "selfSignedTlsClientAuth": {
                        "$ref": "#/types/auth0:index/ClientCredentialsSelfSignedTlsClientAuth:ClientCredentialsSelfSignedTlsClientAuth",
                        "description": "Defines \u003cspan pulumi-lang-nodejs=\"`tlsClientAuth`\" pulumi-lang-dotnet=\"`TlsClientAuth`\" pulumi-lang-go=\"`tlsClientAuth`\" pulumi-lang-python=\"`tls_client_auth`\" pulumi-lang-yaml=\"`tlsClientAuth`\" pulumi-lang-java=\"`tlsClientAuth`\"\u003e`tls_client_auth`\u003c/span\u003e client authentication method.\n"
                    },
                    "signedRequestObject": {
                        "$ref": "#/types/auth0:index/ClientCredentialsSignedRequestObject:ClientCredentialsSignedRequestObject",
                        "description": "Configuration for JWT-secured Authorization Requests(JAR).\n"
                    },
                    "tlsClientAuth": {
                        "$ref": "#/types/auth0:index/ClientCredentialsTlsClientAuth:ClientCredentialsTlsClientAuth",
                        "description": "Defines \u003cspan pulumi-lang-nodejs=\"`tlsClientAuth`\" pulumi-lang-dotnet=\"`TlsClientAuth`\" pulumi-lang-go=\"`tlsClientAuth`\" pulumi-lang-python=\"`tls_client_auth`\" pulumi-lang-yaml=\"`tlsClientAuth`\" pulumi-lang-java=\"`tlsClientAuth`\"\u003e`tls_client_auth`\u003c/span\u003e client authentication method.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/clientGrant:ClientGrant": {
            "description": "Auth0 uses various grant types, or methods by which you grant limited access to your resources to another entity without exposing credentials. The OAuth 2.0 protocol supports several types of grants, which allow different types of access. This resource allows you to create and manage client grants used with configured Auth0 clients.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// The following example grants a client the \"create:foo\" and \"create:bar\" permissions (scopes).\nconst myClient = new auth0.Client(\"my_client\", {name: \"Example Application - Client Grant (Managed by Terraform)\"});\nconst myResourceServer = new auth0.ResourceServer(\"my_resource_server\", {\n    name: \"Example Resource Server - Client Grant (Managed by Terraform)\",\n    identifier: \"https://api.example.com/client-grant\",\n    authorizationDetails: [\n        {\n            type: \"payment\",\n        },\n        {\n            type: \"shipping\",\n        },\n    ],\n    subjectTypeAuthorization: {\n        user: {\n            policy: \"allow_all\",\n        },\n        client: {\n            policy: \"require_client_grant\",\n        },\n    },\n});\nconst myScopes = new auth0.ResourceServerScopes(\"my_scopes\", {\n    resourceServerIdentifier: myResourceServer.identifier,\n    scopes: [\n        {\n            name: \"read:foo\",\n            description: \"Can read Foo\",\n        },\n        {\n            name: \"create:foo\",\n            description: \"Can create Foo\",\n        },\n    ],\n}, {\n    dependsOn: [myResourceServer],\n});\nconst myClientGrant = new auth0.ClientGrant(\"my_client_grant\", {\n    clientId: myClient.id,\n    audience: myResourceServer.identifier,\n    scopes: [\n        \"create:foo\",\n        \"read:foo\",\n    ],\n    subjectType: \"user\",\n    authorizationDetailsTypes: [\n        \"payment\",\n        \"shipping\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# The following example grants a client the \"create:foo\" and \"create:bar\" permissions (scopes).\nmy_client = auth0.Client(\"my_client\", name=\"Example Application - Client Grant (Managed by Terraform)\")\nmy_resource_server = auth0.ResourceServer(\"my_resource_server\",\n    name=\"Example Resource Server - Client Grant (Managed by Terraform)\",\n    identifier=\"https://api.example.com/client-grant\",\n    authorization_details=[\n        {\n            \"type\": \"payment\",\n        },\n        {\n            \"type\": \"shipping\",\n        },\n    ],\n    subject_type_authorization={\n        \"user\": {\n            \"policy\": \"allow_all\",\n        },\n        \"client\": {\n            \"policy\": \"require_client_grant\",\n        },\n    })\nmy_scopes = auth0.ResourceServerScopes(\"my_scopes\",\n    resource_server_identifier=my_resource_server.identifier,\n    scopes=[\n        {\n            \"name\": \"read:foo\",\n            \"description\": \"Can read Foo\",\n        },\n        {\n            \"name\": \"create:foo\",\n            \"description\": \"Can create Foo\",\n        },\n    ],\n    opts = pulumi.ResourceOptions(depends_on=[my_resource_server]))\nmy_client_grant = auth0.ClientGrant(\"my_client_grant\",\n    client_id=my_client.id,\n    audience=my_resource_server.identifier,\n    scopes=[\n        \"create:foo\",\n        \"read:foo\",\n    ],\n    subject_type=\"user\",\n    authorization_details_types=[\n        \"payment\",\n        \"shipping\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // The following example grants a client the \"create:foo\" and \"create:bar\" permissions (scopes).\n    var myClient = new Auth0.Client(\"my_client\", new()\n    {\n        Name = \"Example Application - Client Grant (Managed by Terraform)\",\n    });\n\n    var myResourceServer = new Auth0.ResourceServer(\"my_resource_server\", new()\n    {\n        Name = \"Example Resource Server - Client Grant (Managed by Terraform)\",\n        Identifier = \"https://api.example.com/client-grant\",\n        AuthorizationDetails = new[]\n        {\n            new Auth0.Inputs.ResourceServerAuthorizationDetailArgs\n            {\n                Type = \"payment\",\n            },\n            new Auth0.Inputs.ResourceServerAuthorizationDetailArgs\n            {\n                Type = \"shipping\",\n            },\n        },\n        SubjectTypeAuthorization = new Auth0.Inputs.ResourceServerSubjectTypeAuthorizationArgs\n        {\n            User = new Auth0.Inputs.ResourceServerSubjectTypeAuthorizationUserArgs\n            {\n                Policy = \"allow_all\",\n            },\n            Client = new Auth0.Inputs.ResourceServerSubjectTypeAuthorizationClientArgs\n            {\n                Policy = \"require_client_grant\",\n            },\n        },\n    });\n\n    var myScopes = new Auth0.ResourceServerScopes(\"my_scopes\", new()\n    {\n        ResourceServerIdentifier = myResourceServer.Identifier,\n        Scopes = new[]\n        {\n            new Auth0.Inputs.ResourceServerScopesScopeArgs\n            {\n                Name = \"read:foo\",\n                Description = \"Can read Foo\",\n            },\n            new Auth0.Inputs.ResourceServerScopesScopeArgs\n            {\n                Name = \"create:foo\",\n                Description = \"Can create Foo\",\n            },\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            myResourceServer,\n        },\n    });\n\n    var myClientGrant = new Auth0.ClientGrant(\"my_client_grant\", new()\n    {\n        ClientId = myClient.Id,\n        Audience = myResourceServer.Identifier,\n        Scopes = new[]\n        {\n            \"create:foo\",\n            \"read:foo\",\n        },\n        SubjectType = \"user\",\n        AuthorizationDetailsTypes = new[]\n        {\n            \"payment\",\n            \"shipping\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// The following example grants a client the \"create:foo\" and \"create:bar\" permissions (scopes).\n\t\tmyClient, err := auth0.NewClient(ctx, \"my_client\", \u0026auth0.ClientArgs{\n\t\t\tName: pulumi.String(\"Example Application - Client Grant (Managed by Terraform)\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyResourceServer, err := auth0.NewResourceServer(ctx, \"my_resource_server\", \u0026auth0.ResourceServerArgs{\n\t\t\tName:       pulumi.String(\"Example Resource Server - Client Grant (Managed by Terraform)\"),\n\t\t\tIdentifier: pulumi.String(\"https://api.example.com/client-grant\"),\n\t\t\tAuthorizationDetails: auth0.ResourceServerAuthorizationDetailArray{\n\t\t\t\t\u0026auth0.ResourceServerAuthorizationDetailArgs{\n\t\t\t\t\tType: pulumi.String(\"payment\"),\n\t\t\t\t},\n\t\t\t\t\u0026auth0.ResourceServerAuthorizationDetailArgs{\n\t\t\t\t\tType: pulumi.String(\"shipping\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSubjectTypeAuthorization: \u0026auth0.ResourceServerSubjectTypeAuthorizationArgs{\n\t\t\t\tUser: \u0026auth0.ResourceServerSubjectTypeAuthorizationUserArgs{\n\t\t\t\t\tPolicy: pulumi.String(\"allow_all\"),\n\t\t\t\t},\n\t\t\t\tClient: \u0026auth0.ResourceServerSubjectTypeAuthorizationClientArgs{\n\t\t\t\t\tPolicy: pulumi.String(\"require_client_grant\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewResourceServerScopes(ctx, \"my_scopes\", \u0026auth0.ResourceServerScopesArgs{\n\t\t\tResourceServerIdentifier: myResourceServer.Identifier,\n\t\t\tScopes: auth0.ResourceServerScopesScopeArray{\n\t\t\t\t\u0026auth0.ResourceServerScopesScopeArgs{\n\t\t\t\t\tName:        pulumi.String(\"read:foo\"),\n\t\t\t\t\tDescription: pulumi.String(\"Can read Foo\"),\n\t\t\t\t},\n\t\t\t\t\u0026auth0.ResourceServerScopesScopeArgs{\n\t\t\t\t\tName:        pulumi.String(\"create:foo\"),\n\t\t\t\t\tDescription: pulumi.String(\"Can create Foo\"),\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tmyResourceServer,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewClientGrant(ctx, \"my_client_grant\", \u0026auth0.ClientGrantArgs{\n\t\t\tClientId: myClient.ID(),\n\t\t\tAudience: myResourceServer.Identifier,\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"create:foo\"),\n\t\t\t\tpulumi.String(\"read:foo\"),\n\t\t\t},\n\t\t\tSubjectType: pulumi.String(\"user\"),\n\t\t\tAuthorizationDetailsTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"payment\"),\n\t\t\t\tpulumi.String(\"shipping\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Client;\nimport com.pulumi.auth0.ClientArgs;\nimport com.pulumi.auth0.ResourceServer;\nimport com.pulumi.auth0.ResourceServerArgs;\nimport com.pulumi.auth0.inputs.ResourceServerAuthorizationDetailArgs;\nimport com.pulumi.auth0.inputs.ResourceServerSubjectTypeAuthorizationArgs;\nimport com.pulumi.auth0.inputs.ResourceServerSubjectTypeAuthorizationUserArgs;\nimport com.pulumi.auth0.inputs.ResourceServerSubjectTypeAuthorizationClientArgs;\nimport com.pulumi.auth0.ResourceServerScopes;\nimport com.pulumi.auth0.ResourceServerScopesArgs;\nimport com.pulumi.auth0.inputs.ResourceServerScopesScopeArgs;\nimport com.pulumi.auth0.ClientGrant;\nimport com.pulumi.auth0.ClientGrantArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // The following example grants a client the \"create:foo\" and \"create:bar\" permissions (scopes).\n        var myClient = new Client(\"myClient\", ClientArgs.builder()\n            .name(\"Example Application - Client Grant (Managed by Terraform)\")\n            .build());\n\n        var myResourceServer = new ResourceServer(\"myResourceServer\", ResourceServerArgs.builder()\n            .name(\"Example Resource Server - Client Grant (Managed by Terraform)\")\n            .identifier(\"https://api.example.com/client-grant\")\n            .authorizationDetails(            \n                ResourceServerAuthorizationDetailArgs.builder()\n                    .type(\"payment\")\n                    .build(),\n                ResourceServerAuthorizationDetailArgs.builder()\n                    .type(\"shipping\")\n                    .build())\n            .subjectTypeAuthorization(ResourceServerSubjectTypeAuthorizationArgs.builder()\n                .user(ResourceServerSubjectTypeAuthorizationUserArgs.builder()\n                    .policy(\"allow_all\")\n                    .build())\n                .client(ResourceServerSubjectTypeAuthorizationClientArgs.builder()\n                    .policy(\"require_client_grant\")\n                    .build())\n                .build())\n            .build());\n\n        var myScopes = new ResourceServerScopes(\"myScopes\", ResourceServerScopesArgs.builder()\n            .resourceServerIdentifier(myResourceServer.identifier())\n            .scopes(            \n                ResourceServerScopesScopeArgs.builder()\n                    .name(\"read:foo\")\n                    .description(\"Can read Foo\")\n                    .build(),\n                ResourceServerScopesScopeArgs.builder()\n                    .name(\"create:foo\")\n                    .description(\"Can create Foo\")\n                    .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(myResourceServer)\n                .build());\n\n        var myClientGrant = new ClientGrant(\"myClientGrant\", ClientGrantArgs.builder()\n            .clientId(myClient.id())\n            .audience(myResourceServer.identifier())\n            .scopes(            \n                \"create:foo\",\n                \"read:foo\")\n            .subjectType(\"user\")\n            .authorizationDetailsTypes(            \n                \"payment\",\n                \"shipping\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # The following example grants a client the \"create:foo\" and \"create:bar\" permissions (scopes).\n  myClient:\n    type: auth0:Client\n    name: my_client\n    properties:\n      name: Example Application - Client Grant (Managed by Terraform)\n  myResourceServer:\n    type: auth0:ResourceServer\n    name: my_resource_server\n    properties:\n      name: Example Resource Server - Client Grant (Managed by Terraform)\n      identifier: https://api.example.com/client-grant\n      authorizationDetails:\n        - type: payment\n        - type: shipping\n      subjectTypeAuthorization:\n        user:\n          policy: allow_all\n        client:\n          policy: require_client_grant\n  myScopes:\n    type: auth0:ResourceServerScopes\n    name: my_scopes\n    properties:\n      resourceServerIdentifier: ${myResourceServer.identifier}\n      scopes:\n        - name: read:foo\n          description: Can read Foo\n        - name: create:foo\n          description: Can create Foo\n    options:\n      dependsOn:\n        - ${myResourceServer}\n  myClientGrant:\n    type: auth0:ClientGrant\n    name: my_client_grant\n    properties:\n      clientId: ${myClient.id}\n      audience: ${myResourceServer.identifier}\n      scopes:\n        - create:foo\n        - read:foo\n      subjectType: user\n      authorizationDetailsTypes:\n        - payment\n        - shipping\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the client grant ID.\n\nYou can find this within the Management Dashboard in Application -\u003e APIs -\u003e Expand the required API.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/clientGrant:ClientGrant my_client_grant \"cgr_XXXXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "allowAnyOrganization": {
                    "type": "boolean",
                    "description": "If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Audience or API Identifier for this grant.\n"
                },
                "authorizationDetailsTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the types of authorization details allowed for this client grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "ID of the client for this grant.\n"
                },
                "organizationUsage": {
                    "type": "string",
                    "description": "Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Permissions (scopes) included in this grant.\n"
                },
                "subjectType": {
                    "type": "string",
                    "description": "Defines the type of subject for this grant. Can be one of \u003cspan pulumi-lang-nodejs=\"`client`\" pulumi-lang-dotnet=\"`Client`\" pulumi-lang-go=\"`client`\" pulumi-lang-python=\"`client`\" pulumi-lang-yaml=\"`client`\" pulumi-lang-java=\"`client`\"\u003e`client`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`user`\" pulumi-lang-dotnet=\"`User`\" pulumi-lang-go=\"`user`\" pulumi-lang-python=\"`user`\" pulumi-lang-yaml=\"`user`\" pulumi-lang-java=\"`user`\"\u003e`user`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`client`\" pulumi-lang-dotnet=\"`Client`\" pulumi-lang-go=\"`client`\" pulumi-lang-python=\"`client`\" pulumi-lang-yaml=\"`client`\" pulumi-lang-java=\"`client`\"\u003e`client`\u003c/span\u003e when not defined.\n"
                }
            },
            "required": [
                "audience",
                "clientId",
                "scopes",
                "subjectType"
            ],
            "inputProperties": {
                "allowAnyOrganization": {
                    "type": "boolean",
                    "description": "If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.\n"
                },
                "audience": {
                    "type": "string",
                    "description": "Audience or API Identifier for this grant.\n",
                    "willReplaceOnChanges": true
                },
                "authorizationDetailsTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the types of authorization details allowed for this client grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "ID of the client for this grant.\n",
                    "willReplaceOnChanges": true
                },
                "organizationUsage": {
                    "type": "string",
                    "description": "Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Permissions (scopes) included in this grant.\n"
                },
                "subjectType": {
                    "type": "string",
                    "description": "Defines the type of subject for this grant. Can be one of \u003cspan pulumi-lang-nodejs=\"`client`\" pulumi-lang-dotnet=\"`Client`\" pulumi-lang-go=\"`client`\" pulumi-lang-python=\"`client`\" pulumi-lang-yaml=\"`client`\" pulumi-lang-java=\"`client`\"\u003e`client`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`user`\" pulumi-lang-dotnet=\"`User`\" pulumi-lang-go=\"`user`\" pulumi-lang-python=\"`user`\" pulumi-lang-yaml=\"`user`\" pulumi-lang-java=\"`user`\"\u003e`user`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`client`\" pulumi-lang-dotnet=\"`Client`\" pulumi-lang-go=\"`client`\" pulumi-lang-python=\"`client`\" pulumi-lang-yaml=\"`client`\" pulumi-lang-java=\"`client`\"\u003e`client`\u003c/span\u003e when not defined.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "audience",
                "clientId",
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClientGrant resources.\n",
                "properties": {
                    "allowAnyOrganization": {
                        "type": "boolean",
                        "description": "If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.\n"
                    },
                    "audience": {
                        "type": "string",
                        "description": "Audience or API Identifier for this grant.\n",
                        "willReplaceOnChanges": true
                    },
                    "authorizationDetailsTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the types of authorization details allowed for this client grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "ID of the client for this grant.\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationUsage": {
                        "type": "string",
                        "description": "Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Permissions (scopes) included in this grant.\n"
                    },
                    "subjectType": {
                        "type": "string",
                        "description": "Defines the type of subject for this grant. Can be one of \u003cspan pulumi-lang-nodejs=\"`client`\" pulumi-lang-dotnet=\"`Client`\" pulumi-lang-go=\"`client`\" pulumi-lang-python=\"`client`\" pulumi-lang-yaml=\"`client`\" pulumi-lang-java=\"`client`\"\u003e`client`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`user`\" pulumi-lang-dotnet=\"`User`\" pulumi-lang-go=\"`user`\" pulumi-lang-python=\"`user`\" pulumi-lang-yaml=\"`user`\" pulumi-lang-java=\"`user`\"\u003e`user`\u003c/span\u003e. Defaults to \u003cspan pulumi-lang-nodejs=\"`client`\" pulumi-lang-dotnet=\"`Client`\" pulumi-lang-go=\"`client`\" pulumi-lang-python=\"`client`\" pulumi-lang-yaml=\"`client`\" pulumi-lang-java=\"`client`\"\u003e`client`\u003c/span\u003e when not defined.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/connection:Connection": {
            "description": "With Auth0, you can define sources of users, otherwise known as connections, which may include identity providers (such as Google or LinkedIn), databases, or passwordless authentication methods. This resource allows you to configure and manage connections to be used with your clients and users.\n\n\u003e The Auth0 dashboard displays only one connection per social provider. Although the Auth0 Management API allows the\ncreation of multiple connections per strategy, the additional connections may not be visible in the Auth0 dashboard.\n\n\u003e When updating the \u003cspan pulumi-lang-nodejs=\"`options`\" pulumi-lang-dotnet=\"`Options`\" pulumi-lang-go=\"`options`\" pulumi-lang-python=\"`options`\" pulumi-lang-yaml=\"`options`\" pulumi-lang-java=\"`options`\"\u003e`options`\u003c/span\u003e parameter, ensure that all nested fields within the \u003cspan pulumi-lang-nodejs=\"`options`\" pulumi-lang-dotnet=\"`Options`\" pulumi-lang-go=\"`options`\" pulumi-lang-python=\"`options`\" pulumi-lang-yaml=\"`options`\" pulumi-lang-java=\"`options`\"\u003e`options`\u003c/span\u003e schema are explicitly defined. Failing to do so may result in the loss of existing configurations.\n\n## Example Usage\n\n### Auth0 Connection\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of an Auth0 connection.\nconst myConnection = new auth0.Connection(\"my_connection\", {\n    name: \"Example-Connection\",\n    isDomainConnection: true,\n    strategy: \"auth0\",\n    metadata: {\n        key1: \"foo\",\n        key2: \"bar\",\n    },\n    options: {\n        passwordPolicy: \"excellent\",\n        bruteForceProtection: true,\n        strategyVersion: 2,\n        enabledDatabaseCustomization: true,\n        importMode: false,\n        requiresUsername: true,\n        disableSignup: false,\n        customScripts: {\n            get_user: `        function getByEmail(email, callback) {\n          return callback(new Error(\\\\\"Whoops!\\\\\"));\n        }\n`,\n        },\n        configuration: {\n            foo: \"bar\",\n            bar: \"baz\",\n        },\n        upstreamParams: JSON.stringify({\n            screen_name: {\n                alias: \"login_hint\",\n            },\n        }),\n        passwordHistories: [{\n            enable: true,\n            size: 3,\n        }],\n        passwordNoPersonalInfo: {\n            enable: true,\n        },\n        passwordDictionary: {\n            enable: true,\n            dictionaries: [\n                \"password\",\n                \"admin\",\n                \"1234\",\n            ],\n        },\n        passwordComplexityOptions: {\n            minLength: 12,\n        },\n        validation: {\n            username: {\n                min: 10,\n                max: 40,\n            },\n        },\n        mfa: {\n            active: true,\n            returnEnrollSettings: true,\n        },\n        authenticationMethods: [{\n            passkey: {\n                enabled: true,\n            },\n            password: {\n                enabled: true,\n            },\n        }],\n        passkeyOptions: {\n            challengeUi: \"both\",\n            localEnrollmentEnabled: true,\n            progressiveEnrollmentEnabled: true,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\n# This is an example of an Auth0 connection.\nmy_connection = auth0.Connection(\"my_connection\",\n    name=\"Example-Connection\",\n    is_domain_connection=True,\n    strategy=\"auth0\",\n    metadata={\n        \"key1\": \"foo\",\n        \"key2\": \"bar\",\n    },\n    options={\n        \"password_policy\": \"excellent\",\n        \"brute_force_protection\": True,\n        \"strategy_version\": 2,\n        \"enabled_database_customization\": True,\n        \"import_mode\": False,\n        \"requires_username\": True,\n        \"disable_signup\": False,\n        \"custom_scripts\": {\n            \"get_user\": \"\"\"        function getByEmail(email, callback) {\n          return callback(new Error(\\\"Whoops!\\\"));\n        }\n\"\"\",\n        },\n        \"configuration\": {\n            \"foo\": \"bar\",\n            \"bar\": \"baz\",\n        },\n        \"upstream_params\": json.dumps({\n            \"screen_name\": {\n                \"alias\": \"login_hint\",\n            },\n        }),\n        \"password_histories\": [{\n            \"enable\": True,\n            \"size\": 3,\n        }],\n        \"password_no_personal_info\": {\n            \"enable\": True,\n        },\n        \"password_dictionary\": {\n            \"enable\": True,\n            \"dictionaries\": [\n                \"password\",\n                \"admin\",\n                \"1234\",\n            ],\n        },\n        \"password_complexity_options\": {\n            \"min_length\": 12,\n        },\n        \"validation\": {\n            \"username\": {\n                \"min\": 10,\n                \"max\": 40,\n            },\n        },\n        \"mfa\": {\n            \"active\": True,\n            \"return_enroll_settings\": True,\n        },\n        \"authentication_methods\": [{\n            \"passkey\": {\n                \"enabled\": True,\n            },\n            \"password\": {\n                \"enabled\": True,\n            },\n        }],\n        \"passkey_options\": {\n            \"challenge_ui\": \"both\",\n            \"local_enrollment_enabled\": True,\n            \"progressive_enrollment_enabled\": True,\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of an Auth0 connection.\n    var myConnection = new Auth0.Connection(\"my_connection\", new()\n    {\n        Name = \"Example-Connection\",\n        IsDomainConnection = true,\n        Strategy = \"auth0\",\n        Metadata = \n        {\n            { \"key1\", \"foo\" },\n            { \"key2\", \"bar\" },\n        },\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            PasswordPolicy = \"excellent\",\n            BruteForceProtection = true,\n            StrategyVersion = 2,\n            EnabledDatabaseCustomization = true,\n            ImportMode = false,\n            RequiresUsername = true,\n            DisableSignup = false,\n            CustomScripts = \n            {\n                { \"get_user\", @\"        function getByEmail(email, callback) {\n          return callback(new Error(\\\"\"Whoops!\\\"\"));\n        }\n\" },\n            },\n            Configuration = \n            {\n                { \"foo\", \"bar\" },\n                { \"bar\", \"baz\" },\n            },\n            UpstreamParams = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"screen_name\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"alias\"] = \"login_hint\",\n                },\n            }),\n            PasswordHistories = new[]\n            {\n                new Auth0.Inputs.ConnectionOptionsPasswordHistoryArgs\n                {\n                    Enable = true,\n                    Size = 3,\n                },\n            },\n            PasswordNoPersonalInfo = new Auth0.Inputs.ConnectionOptionsPasswordNoPersonalInfoArgs\n            {\n                Enable = true,\n            },\n            PasswordDictionary = new Auth0.Inputs.ConnectionOptionsPasswordDictionaryArgs\n            {\n                Enable = true,\n                Dictionaries = new[]\n                {\n                    \"password\",\n                    \"admin\",\n                    \"1234\",\n                },\n            },\n            PasswordComplexityOptions = new Auth0.Inputs.ConnectionOptionsPasswordComplexityOptionsArgs\n            {\n                MinLength = 12,\n            },\n            Validation = new Auth0.Inputs.ConnectionOptionsValidationArgs\n            {\n                Username = new Auth0.Inputs.ConnectionOptionsValidationUsernameArgs\n                {\n                    Min = 10,\n                    Max = 40,\n                },\n            },\n            Mfa = new Auth0.Inputs.ConnectionOptionsMfaArgs\n            {\n                Active = true,\n                ReturnEnrollSettings = true,\n            },\n            AuthenticationMethods = new[]\n            {\n                new Auth0.Inputs.ConnectionOptionsAuthenticationMethodArgs\n                {\n                    Passkey = new Auth0.Inputs.ConnectionOptionsAuthenticationMethodPasskeyArgs\n                    {\n                        Enabled = true,\n                    },\n                    Password = new Auth0.Inputs.ConnectionOptionsAuthenticationMethodPasswordArgs\n                    {\n                        Enabled = true,\n                    },\n                },\n            },\n            PasskeyOptions = new Auth0.Inputs.ConnectionOptionsPasskeyOptionsArgs\n            {\n                ChallengeUi = \"both\",\n                LocalEnrollmentEnabled = true,\n                ProgressiveEnrollmentEnabled = true,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"screen_name\": map[string]interface{}{\n\t\t\t\t\"alias\": \"login_hint\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t// This is an example of an Auth0 connection.\n\t\t_, err = auth0.NewConnection(ctx, \"my_connection\", \u0026auth0.ConnectionArgs{\n\t\t\tName:               pulumi.String(\"Example-Connection\"),\n\t\t\tIsDomainConnection: pulumi.Bool(true),\n\t\t\tStrategy:           pulumi.String(\"auth0\"),\n\t\t\tMetadata: pulumi.StringMap{\n\t\t\t\t\"key1\": pulumi.String(\"foo\"),\n\t\t\t\t\"key2\": pulumi.String(\"bar\"),\n\t\t\t},\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tPasswordPolicy:               pulumi.String(\"excellent\"),\n\t\t\t\tBruteForceProtection:         pulumi.Bool(true),\n\t\t\t\tStrategyVersion:              pulumi.Int(2),\n\t\t\t\tEnabledDatabaseCustomization: pulumi.Bool(true),\n\t\t\t\tImportMode:                   pulumi.Bool(false),\n\t\t\t\tRequiresUsername:             pulumi.Bool(true),\n\t\t\t\tDisableSignup:                pulumi.Bool(false),\n\t\t\t\tCustomScripts: pulumi.StringMap{\n\t\t\t\t\t\"get_user\": pulumi.String(\"        function getByEmail(email, callback) {\\n          return callback(new Error(\\\\\\\"Whoops!\\\\\\\"));\\n        }\\n\"),\n\t\t\t\t},\n\t\t\t\tConfiguration: pulumi.StringMap{\n\t\t\t\t\t\"foo\": pulumi.String(\"bar\"),\n\t\t\t\t\t\"bar\": pulumi.String(\"baz\"),\n\t\t\t\t},\n\t\t\t\tUpstreamParams: pulumi.String(json0),\n\t\t\t\tPasswordHistories: auth0.ConnectionOptionsPasswordHistoryArray{\n\t\t\t\t\t\u0026auth0.ConnectionOptionsPasswordHistoryArgs{\n\t\t\t\t\t\tEnable: pulumi.Bool(true),\n\t\t\t\t\t\tSize:   pulumi.Int(3),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tPasswordNoPersonalInfo: \u0026auth0.ConnectionOptionsPasswordNoPersonalInfoArgs{\n\t\t\t\t\tEnable: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\tPasswordDictionary: \u0026auth0.ConnectionOptionsPasswordDictionaryArgs{\n\t\t\t\t\tEnable: pulumi.Bool(true),\n\t\t\t\t\tDictionaries: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"password\"),\n\t\t\t\t\t\tpulumi.String(\"admin\"),\n\t\t\t\t\t\tpulumi.String(\"1234\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tPasswordComplexityOptions: \u0026auth0.ConnectionOptionsPasswordComplexityOptionsArgs{\n\t\t\t\t\tMinLength: pulumi.Int(12),\n\t\t\t\t},\n\t\t\t\tValidation: \u0026auth0.ConnectionOptionsValidationArgs{\n\t\t\t\t\tUsername: \u0026auth0.ConnectionOptionsValidationUsernameArgs{\n\t\t\t\t\t\tMin: pulumi.Int(10),\n\t\t\t\t\t\tMax: pulumi.Int(40),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMfa: \u0026auth0.ConnectionOptionsMfaArgs{\n\t\t\t\t\tActive:               pulumi.Bool(true),\n\t\t\t\t\tReturnEnrollSettings: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\tAuthenticationMethods: auth0.ConnectionOptionsAuthenticationMethodArray{\n\t\t\t\t\t\u0026auth0.ConnectionOptionsAuthenticationMethodArgs{\n\t\t\t\t\t\tPasskey: \u0026auth0.ConnectionOptionsAuthenticationMethodPasskeyArgs{\n\t\t\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tPassword: \u0026auth0.ConnectionOptionsAuthenticationMethodPasswordArgs{\n\t\t\t\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tPasskeyOptions: \u0026auth0.ConnectionOptionsPasskeyOptionsArgs{\n\t\t\t\t\tChallengeUi:                  pulumi.String(\"both\"),\n\t\t\t\t\tLocalEnrollmentEnabled:       pulumi.Bool(true),\n\t\t\t\t\tProgressiveEnrollmentEnabled: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsPasswordNoPersonalInfoArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsPasswordDictionaryArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsPasswordComplexityOptionsArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsValidationArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsValidationUsernameArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsMfaArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsPasskeyOptionsArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of an Auth0 connection.\n        var myConnection = new Connection(\"myConnection\", ConnectionArgs.builder()\n            .name(\"Example-Connection\")\n            .isDomainConnection(true)\n            .strategy(\"auth0\")\n            .metadata(Map.ofEntries(\n                Map.entry(\"key1\", \"foo\"),\n                Map.entry(\"key2\", \"bar\")\n            ))\n            .options(ConnectionOptionsArgs.builder()\n                .passwordPolicy(\"excellent\")\n                .bruteForceProtection(true)\n                .strategyVersion(2)\n                .enabledDatabaseCustomization(true)\n                .importMode(false)\n                .requiresUsername(true)\n                .disableSignup(false)\n                .customScripts(Map.of(\"get_user\", \"\"\"\n        function getByEmail(email, callback) {\n          return callback(new Error(\\\"Whoops!\\\"));\n        }\n                \"\"\"))\n                .configuration(Map.ofEntries(\n                    Map.entry(\"foo\", \"bar\"),\n                    Map.entry(\"bar\", \"baz\")\n                ))\n                .upstreamParams(serializeJson(\n                    jsonObject(\n                        jsonProperty(\"screen_name\", jsonObject(\n                            jsonProperty(\"alias\", \"login_hint\")\n                        ))\n                    )))\n                .passwordHistories(ConnectionOptionsPasswordHistoryArgs.builder()\n                    .enable(true)\n                    .size(3)\n                    .build())\n                .passwordNoPersonalInfo(ConnectionOptionsPasswordNoPersonalInfoArgs.builder()\n                    .enable(true)\n                    .build())\n                .passwordDictionary(ConnectionOptionsPasswordDictionaryArgs.builder()\n                    .enable(true)\n                    .dictionaries(                    \n                        \"password\",\n                        \"admin\",\n                        \"1234\")\n                    .build())\n                .passwordComplexityOptions(ConnectionOptionsPasswordComplexityOptionsArgs.builder()\n                    .minLength(12)\n                    .build())\n                .validation(ConnectionOptionsValidationArgs.builder()\n                    .username(ConnectionOptionsValidationUsernameArgs.builder()\n                        .min(10)\n                        .max(40)\n                        .build())\n                    .build())\n                .mfa(ConnectionOptionsMfaArgs.builder()\n                    .active(true)\n                    .returnEnrollSettings(true)\n                    .build())\n                .authenticationMethods(ConnectionOptionsAuthenticationMethodArgs.builder()\n                    .passkey(ConnectionOptionsAuthenticationMethodPasskeyArgs.builder()\n                        .enabled(true)\n                        .build())\n                    .password(ConnectionOptionsAuthenticationMethodPasswordArgs.builder()\n                        .enabled(true)\n                        .build())\n                    .build())\n                .passkeyOptions(ConnectionOptionsPasskeyOptionsArgs.builder()\n                    .challengeUi(\"both\")\n                    .localEnrollmentEnabled(true)\n                    .progressiveEnrollmentEnabled(true)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of an Auth0 connection.\n  myConnection:\n    type: auth0:Connection\n    name: my_connection\n    properties:\n      name: Example-Connection\n      isDomainConnection: true\n      strategy: auth0\n      metadata:\n        key1: foo\n        key2: bar\n      options:\n        passwordPolicy: excellent\n        bruteForceProtection: true\n        strategyVersion: 2\n        enabledDatabaseCustomization: true\n        importMode: false\n        requiresUsername: true\n        disableSignup: false\n        customScripts:\n          get_user: |2\n                    function getByEmail(email, callback) {\n                      return callback(new Error(\\\"Whoops!\\\"));\n                    }\n        configuration:\n          foo: bar\n          bar: baz\n        upstreamParams:\n          fn::toJSON:\n            screen_name:\n              alias: login_hint\n        passwordHistories:\n          - enable: true\n            size: 3\n        passwordNoPersonalInfo:\n          enable: true\n        passwordDictionary:\n          enable: true\n          dictionaries:\n            - password\n            - admin\n            - '1234'\n        passwordComplexityOptions:\n          minLength: 12\n        validation:\n          username:\n            min: 10\n            max: 40\n        mfa:\n          active: true\n          returnEnrollSettings: true\n        authenticationMethods:\n          - passkey:\n              enabled: true\n            password:\n              enabled: true\n        passkeyOptions:\n          challengeUi: both\n          localEnrollmentEnabled: true\n          progressiveEnrollmentEnabled: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Google OAuth2 Connection\n\n\u003e Your Auth0 account may be pre-configured with a `google-oauth2` connection.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of a Google OAuth2 connection.\nconst googleOauth2 = new auth0.Connection(\"google_oauth2\", {\n    name: \"Google-OAuth2-Connection\",\n    strategy: \"google-oauth2\",\n    options: {\n        clientId: \"\u003cclient-id\u003e\",\n        clientSecret: \"\u003cclient-secret\u003e\",\n        allowedAudiences: [\n            \"example.com\",\n            \"api.example.com\",\n        ],\n        scopes: [\n            \"email\",\n            \"profile\",\n            \"gmail\",\n            \"youtube\",\n        ],\n        setUserRootAttributes: \"on_each_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example of a Google OAuth2 connection.\ngoogle_oauth2 = auth0.Connection(\"google_oauth2\",\n    name=\"Google-OAuth2-Connection\",\n    strategy=\"google-oauth2\",\n    options={\n        \"client_id\": \"\u003cclient-id\u003e\",\n        \"client_secret\": \"\u003cclient-secret\u003e\",\n        \"allowed_audiences\": [\n            \"example.com\",\n            \"api.example.com\",\n        ],\n        \"scopes\": [\n            \"email\",\n            \"profile\",\n            \"gmail\",\n            \"youtube\",\n        ],\n        \"set_user_root_attributes\": \"on_each_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of a Google OAuth2 connection.\n    var googleOauth2 = new Auth0.Connection(\"google_oauth2\", new()\n    {\n        Name = \"Google-OAuth2-Connection\",\n        Strategy = \"google-oauth2\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"\u003cclient-id\u003e\",\n            ClientSecret = \"\u003cclient-secret\u003e\",\n            AllowedAudiences = new[]\n            {\n                \"example.com\",\n                \"api.example.com\",\n            },\n            Scopes = new[]\n            {\n                \"email\",\n                \"profile\",\n                \"gmail\",\n                \"youtube\",\n            },\n            SetUserRootAttributes = \"on_each_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example of a Google OAuth2 connection.\n\t\t_, err := auth0.NewConnection(ctx, \"google_oauth2\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"Google-OAuth2-Connection\"),\n\t\t\tStrategy: pulumi.String(\"google-oauth2\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:     pulumi.String(\"\u003cclient-id\u003e\"),\n\t\t\t\tClientSecret: pulumi.String(\"\u003cclient-secret\u003e\"),\n\t\t\t\tAllowedAudiences: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t\t\tpulumi.String(\"api.example.com\"),\n\t\t\t\t},\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"email\"),\n\t\t\t\t\tpulumi.String(\"profile\"),\n\t\t\t\t\tpulumi.String(\"gmail\"),\n\t\t\t\t\tpulumi.String(\"youtube\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_each_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of a Google OAuth2 connection.\n        var googleOauth2 = new Connection(\"googleOauth2\", ConnectionArgs.builder()\n            .name(\"Google-OAuth2-Connection\")\n            .strategy(\"google-oauth2\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"\u003cclient-id\u003e\")\n                .clientSecret(\"\u003cclient-secret\u003e\")\n                .allowedAudiences(                \n                    \"example.com\",\n                    \"api.example.com\")\n                .scopes(                \n                    \"email\",\n                    \"profile\",\n                    \"gmail\",\n                    \"youtube\")\n                .setUserRootAttributes(\"on_each_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of a Google OAuth2 connection.\n  googleOauth2:\n    type: auth0:Connection\n    name: google_oauth2\n    properties:\n      name: Google-OAuth2-Connection\n      strategy: google-oauth2\n      options:\n        clientId: \u003cclient-id\u003e\n        clientSecret: \u003cclient-secret\u003e\n        allowedAudiences:\n          - example.com\n          - api.example.com\n        scopes:\n          - email\n          - profile\n          - gmail\n          - youtube\n        setUserRootAttributes: on_each_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Google Apps\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst googleApps = new auth0.Connection(\"google_apps\", {\n    name: \"connection-google-apps\",\n    isDomainConnection: false,\n    strategy: \"google-apps\",\n    showAsButton: false,\n    options: {\n        clientId: \"\",\n        clientSecret: \"\",\n        domain: \"example.com\",\n        tenantDomain: \"example.com\",\n        domainAliases: [\n            \"example.com\",\n            \"api.example.com\",\n        ],\n        apiEnableUsers: true,\n        scopes: [\n            \"ext_profile\",\n            \"ext_groups\",\n        ],\n        iconUrl: \"https://example.com/assets/logo.png\",\n        upstreamParams: JSON.stringify({\n            screen_name: {\n                alias: \"login_hint\",\n            },\n        }),\n        setUserRootAttributes: \"on_each_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\ngoogle_apps = auth0.Connection(\"google_apps\",\n    name=\"connection-google-apps\",\n    is_domain_connection=False,\n    strategy=\"google-apps\",\n    show_as_button=False,\n    options={\n        \"client_id\": \"\",\n        \"client_secret\": \"\",\n        \"domain\": \"example.com\",\n        \"tenant_domain\": \"example.com\",\n        \"domain_aliases\": [\n            \"example.com\",\n            \"api.example.com\",\n        ],\n        \"api_enable_users\": True,\n        \"scopes\": [\n            \"ext_profile\",\n            \"ext_groups\",\n        ],\n        \"icon_url\": \"https://example.com/assets/logo.png\",\n        \"upstream_params\": json.dumps({\n            \"screen_name\": {\n                \"alias\": \"login_hint\",\n            },\n        }),\n        \"set_user_root_attributes\": \"on_each_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var googleApps = new Auth0.Connection(\"google_apps\", new()\n    {\n        Name = \"connection-google-apps\",\n        IsDomainConnection = false,\n        Strategy = \"google-apps\",\n        ShowAsButton = false,\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"\",\n            ClientSecret = \"\",\n            Domain = \"example.com\",\n            TenantDomain = \"example.com\",\n            DomainAliases = new[]\n            {\n                \"example.com\",\n                \"api.example.com\",\n            },\n            ApiEnableUsers = true,\n            Scopes = new[]\n            {\n                \"ext_profile\",\n                \"ext_groups\",\n            },\n            IconUrl = \"https://example.com/assets/logo.png\",\n            UpstreamParams = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"screen_name\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"alias\"] = \"login_hint\",\n                },\n            }),\n            SetUserRootAttributes = \"on_each_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"screen_name\": map[string]interface{}{\n\t\t\t\t\"alias\": \"login_hint\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = auth0.NewConnection(ctx, \"google_apps\", \u0026auth0.ConnectionArgs{\n\t\t\tName:               pulumi.String(\"connection-google-apps\"),\n\t\t\tIsDomainConnection: pulumi.Bool(false),\n\t\t\tStrategy:           pulumi.String(\"google-apps\"),\n\t\t\tShowAsButton:       pulumi.Bool(false),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:     pulumi.String(\"\"),\n\t\t\t\tClientSecret: pulumi.String(\"\"),\n\t\t\t\tDomain:       pulumi.String(\"example.com\"),\n\t\t\t\tTenantDomain: pulumi.String(\"example.com\"),\n\t\t\t\tDomainAliases: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t\t\tpulumi.String(\"api.example.com\"),\n\t\t\t\t},\n\t\t\t\tApiEnableUsers: pulumi.Bool(true),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ext_profile\"),\n\t\t\t\t\tpulumi.String(\"ext_groups\"),\n\t\t\t\t},\n\t\t\t\tIconUrl:               pulumi.String(\"https://example.com/assets/logo.png\"),\n\t\t\t\tUpstreamParams:        pulumi.String(json0),\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_each_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var googleApps = new Connection(\"googleApps\", ConnectionArgs.builder()\n            .name(\"connection-google-apps\")\n            .isDomainConnection(false)\n            .strategy(\"google-apps\")\n            .showAsButton(false)\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"\")\n                .clientSecret(\"\")\n                .domain(\"example.com\")\n                .tenantDomain(\"example.com\")\n                .domainAliases(                \n                    \"example.com\",\n                    \"api.example.com\")\n                .apiEnableUsers(true)\n                .scopes(                \n                    \"ext_profile\",\n                    \"ext_groups\")\n                .iconUrl(\"https://example.com/assets/logo.png\")\n                .upstreamParams(serializeJson(\n                    jsonObject(\n                        jsonProperty(\"screen_name\", jsonObject(\n                            jsonProperty(\"alias\", \"login_hint\")\n                        ))\n                    )))\n                .setUserRootAttributes(\"on_each_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  googleApps:\n    type: auth0:Connection\n    name: google_apps\n    properties:\n      name: connection-google-apps\n      isDomainConnection: false\n      strategy: google-apps\n      showAsButton: false\n      options:\n        clientId: \"\"\n        clientSecret: \"\"\n        domain: example.com\n        tenantDomain: example.com\n        domainAliases:\n          - example.com\n          - api.example.com\n        apiEnableUsers: true\n        scopes:\n          - ext_profile\n          - ext_groups\n        iconUrl: https://example.com/assets/logo.png\n        upstreamParams:\n          fn::toJSON:\n            screen_name:\n              alias: login_hint\n        setUserRootAttributes: on_each_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Facebook Connection\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of a Facebook connection.\nconst facebook = new auth0.Connection(\"facebook\", {\n    name: \"Facebook-Connection\",\n    strategy: \"facebook\",\n    options: {\n        clientId: \"\u003cclient-id\u003e\",\n        clientSecret: \"\u003cclient-secret\u003e\",\n        scopes: [\n            \"public_profile\",\n            \"email\",\n            \"groups_access_member_info\",\n            \"user_birthday\",\n        ],\n        setUserRootAttributes: \"on_each_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example of a Facebook connection.\nfacebook = auth0.Connection(\"facebook\",\n    name=\"Facebook-Connection\",\n    strategy=\"facebook\",\n    options={\n        \"client_id\": \"\u003cclient-id\u003e\",\n        \"client_secret\": \"\u003cclient-secret\u003e\",\n        \"scopes\": [\n            \"public_profile\",\n            \"email\",\n            \"groups_access_member_info\",\n            \"user_birthday\",\n        ],\n        \"set_user_root_attributes\": \"on_each_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of a Facebook connection.\n    var facebook = new Auth0.Connection(\"facebook\", new()\n    {\n        Name = \"Facebook-Connection\",\n        Strategy = \"facebook\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"\u003cclient-id\u003e\",\n            ClientSecret = \"\u003cclient-secret\u003e\",\n            Scopes = new[]\n            {\n                \"public_profile\",\n                \"email\",\n                \"groups_access_member_info\",\n                \"user_birthday\",\n            },\n            SetUserRootAttributes = \"on_each_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example of a Facebook connection.\n\t\t_, err := auth0.NewConnection(ctx, \"facebook\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"Facebook-Connection\"),\n\t\t\tStrategy: pulumi.String(\"facebook\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:     pulumi.String(\"\u003cclient-id\u003e\"),\n\t\t\t\tClientSecret: pulumi.String(\"\u003cclient-secret\u003e\"),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"public_profile\"),\n\t\t\t\t\tpulumi.String(\"email\"),\n\t\t\t\t\tpulumi.String(\"groups_access_member_info\"),\n\t\t\t\t\tpulumi.String(\"user_birthday\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_each_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of a Facebook connection.\n        var facebook = new Connection(\"facebook\", ConnectionArgs.builder()\n            .name(\"Facebook-Connection\")\n            .strategy(\"facebook\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"\u003cclient-id\u003e\")\n                .clientSecret(\"\u003cclient-secret\u003e\")\n                .scopes(                \n                    \"public_profile\",\n                    \"email\",\n                    \"groups_access_member_info\",\n                    \"user_birthday\")\n                .setUserRootAttributes(\"on_each_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of a Facebook connection.\n  facebook:\n    type: auth0:Connection\n    properties:\n      name: Facebook-Connection\n      strategy: facebook\n      options:\n        clientId: \u003cclient-id\u003e\n        clientSecret: \u003cclient-secret\u003e\n        scopes:\n          - public_profile\n          - email\n          - groups_access_member_info\n          - user_birthday\n        setUserRootAttributes: on_each_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Apple Connection\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of an Apple connection.\nconst apple = new auth0.Connection(\"apple\", {\n    name: \"Apple-Connection\",\n    strategy: \"apple\",\n    options: {\n        clientId: \"\u003cclient-id\u003e\",\n        clientSecret: `-----BEGIN PRIVATE KEY-----\nMIHBAgEAMA0GCSqGSIb3DQEBAQUABIGsMIGpAgEAA\n-----END PRIVATE KEY-----`,\n        teamId: \"\u003cteam-id\u003e\",\n        keyId: \"\u003ckey-id\u003e\",\n        scopes: [\n            \"email\",\n            \"name\",\n        ],\n        setUserRootAttributes: \"on_first_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example of an Apple connection.\napple = auth0.Connection(\"apple\",\n    name=\"Apple-Connection\",\n    strategy=\"apple\",\n    options={\n        \"client_id\": \"\u003cclient-id\u003e\",\n        \"client_secret\": \"\"\"-----BEGIN PRIVATE KEY-----\nMIHBAgEAMA0GCSqGSIb3DQEBAQUABIGsMIGpAgEAA\n-----END PRIVATE KEY-----\"\"\",\n        \"team_id\": \"\u003cteam-id\u003e\",\n        \"key_id\": \"\u003ckey-id\u003e\",\n        \"scopes\": [\n            \"email\",\n            \"name\",\n        ],\n        \"set_user_root_attributes\": \"on_first_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of an Apple connection.\n    var apple = new Auth0.Connection(\"apple\", new()\n    {\n        Name = \"Apple-Connection\",\n        Strategy = \"apple\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"\u003cclient-id\u003e\",\n            ClientSecret = @\"-----BEGIN PRIVATE KEY-----\nMIHBAgEAMA0GCSqGSIb3DQEBAQUABIGsMIGpAgEAA\n-----END PRIVATE KEY-----\",\n            TeamId = \"\u003cteam-id\u003e\",\n            KeyId = \"\u003ckey-id\u003e\",\n            Scopes = new[]\n            {\n                \"email\",\n                \"name\",\n            },\n            SetUserRootAttributes = \"on_first_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example of an Apple connection.\n\t\t_, err := auth0.NewConnection(ctx, \"apple\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"Apple-Connection\"),\n\t\t\tStrategy: pulumi.String(\"apple\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:     pulumi.String(\"\u003cclient-id\u003e\"),\n\t\t\t\tClientSecret: pulumi.String(\"-----BEGIN PRIVATE KEY-----\\nMIHBAgEAMA0GCSqGSIb3DQEBAQUABIGsMIGpAgEAA\\n-----END PRIVATE KEY-----\"),\n\t\t\t\tTeamId:       pulumi.String(\"\u003cteam-id\u003e\"),\n\t\t\t\tKeyId:        pulumi.String(\"\u003ckey-id\u003e\"),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"email\"),\n\t\t\t\t\tpulumi.String(\"name\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_first_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of an Apple connection.\n        var apple = new Connection(\"apple\", ConnectionArgs.builder()\n            .name(\"Apple-Connection\")\n            .strategy(\"apple\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"\u003cclient-id\u003e\")\n                .clientSecret(\"\"\"\n-----BEGIN PRIVATE KEY-----\nMIHBAgEAMA0GCSqGSIb3DQEBAQUABIGsMIGpAgEAA\n-----END PRIVATE KEY-----                \"\"\")\n                .teamId(\"\u003cteam-id\u003e\")\n                .keyId(\"\u003ckey-id\u003e\")\n                .scopes(                \n                    \"email\",\n                    \"name\")\n                .setUserRootAttributes(\"on_first_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of an Apple connection.\n  apple:\n    type: auth0:Connection\n    properties:\n      name: Apple-Connection\n      strategy: apple\n      options:\n        clientId: \u003cclient-id\u003e\n        clientSecret: |-\n          -----BEGIN PRIVATE KEY-----\n          MIHBAgEAMA0GCSqGSIb3DQEBAQUABIGsMIGpAgEAA\n          -----END PRIVATE KEY-----\n        teamId: \u003cteam-id\u003e\n        keyId: \u003ckey-id\u003e\n        scopes:\n          - email\n          - name\n        setUserRootAttributes: on_first_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### LinkedIn Connection\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of an LinkedIn connection.\nconst linkedin = new auth0.Connection(\"linkedin\", {\n    name: \"Linkedin-Connection\",\n    strategy: \"linkedin\",\n    options: {\n        clientId: \"\u003cclient-id\u003e\",\n        clientSecret: \"\u003cclient-secret\u003e\",\n        strategyVersion: 2,\n        scopes: [\n            \"basic_profile\",\n            \"profile\",\n            \"email\",\n        ],\n        setUserRootAttributes: \"on_each_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example of an LinkedIn connection.\nlinkedin = auth0.Connection(\"linkedin\",\n    name=\"Linkedin-Connection\",\n    strategy=\"linkedin\",\n    options={\n        \"client_id\": \"\u003cclient-id\u003e\",\n        \"client_secret\": \"\u003cclient-secret\u003e\",\n        \"strategy_version\": 2,\n        \"scopes\": [\n            \"basic_profile\",\n            \"profile\",\n            \"email\",\n        ],\n        \"set_user_root_attributes\": \"on_each_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of an LinkedIn connection.\n    var linkedin = new Auth0.Connection(\"linkedin\", new()\n    {\n        Name = \"Linkedin-Connection\",\n        Strategy = \"linkedin\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"\u003cclient-id\u003e\",\n            ClientSecret = \"\u003cclient-secret\u003e\",\n            StrategyVersion = 2,\n            Scopes = new[]\n            {\n                \"basic_profile\",\n                \"profile\",\n                \"email\",\n            },\n            SetUserRootAttributes = \"on_each_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example of an LinkedIn connection.\n\t\t_, err := auth0.NewConnection(ctx, \"linkedin\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"Linkedin-Connection\"),\n\t\t\tStrategy: pulumi.String(\"linkedin\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:        pulumi.String(\"\u003cclient-id\u003e\"),\n\t\t\t\tClientSecret:    pulumi.String(\"\u003cclient-secret\u003e\"),\n\t\t\t\tStrategyVersion: pulumi.Int(2),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"basic_profile\"),\n\t\t\t\t\tpulumi.String(\"profile\"),\n\t\t\t\t\tpulumi.String(\"email\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_each_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of an LinkedIn connection.\n        var linkedin = new Connection(\"linkedin\", ConnectionArgs.builder()\n            .name(\"Linkedin-Connection\")\n            .strategy(\"linkedin\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"\u003cclient-id\u003e\")\n                .clientSecret(\"\u003cclient-secret\u003e\")\n                .strategyVersion(2)\n                .scopes(                \n                    \"basic_profile\",\n                    \"profile\",\n                    \"email\")\n                .setUserRootAttributes(\"on_each_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of an LinkedIn connection.\n  linkedin:\n    type: auth0:Connection\n    properties:\n      name: Linkedin-Connection\n      strategy: linkedin\n      options:\n        clientId: \u003cclient-id\u003e\n        clientSecret: \u003cclient-secret\u003e\n        strategyVersion: 2\n        scopes:\n          - basic_profile\n          - profile\n          - email\n        setUserRootAttributes: on_each_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### GitHub Connection\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of an GitHub connection.\nconst github = new auth0.Connection(\"github\", {\n    name: \"GitHub-Connection\",\n    strategy: \"github\",\n    options: {\n        clientId: \"\u003cclient-id\u003e\",\n        clientSecret: \"\u003cclient-secret\u003e\",\n        scopes: [\n            \"email\",\n            \"profile\",\n            \"public_repo\",\n            \"repo\",\n        ],\n        setUserRootAttributes: \"on_each_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example of an GitHub connection.\ngithub = auth0.Connection(\"github\",\n    name=\"GitHub-Connection\",\n    strategy=\"github\",\n    options={\n        \"client_id\": \"\u003cclient-id\u003e\",\n        \"client_secret\": \"\u003cclient-secret\u003e\",\n        \"scopes\": [\n            \"email\",\n            \"profile\",\n            \"public_repo\",\n            \"repo\",\n        ],\n        \"set_user_root_attributes\": \"on_each_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of an GitHub connection.\n    var github = new Auth0.Connection(\"github\", new()\n    {\n        Name = \"GitHub-Connection\",\n        Strategy = \"github\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"\u003cclient-id\u003e\",\n            ClientSecret = \"\u003cclient-secret\u003e\",\n            Scopes = new[]\n            {\n                \"email\",\n                \"profile\",\n                \"public_repo\",\n                \"repo\",\n            },\n            SetUserRootAttributes = \"on_each_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example of an GitHub connection.\n\t\t_, err := auth0.NewConnection(ctx, \"github\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"GitHub-Connection\"),\n\t\t\tStrategy: pulumi.String(\"github\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:     pulumi.String(\"\u003cclient-id\u003e\"),\n\t\t\t\tClientSecret: pulumi.String(\"\u003cclient-secret\u003e\"),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"email\"),\n\t\t\t\t\tpulumi.String(\"profile\"),\n\t\t\t\t\tpulumi.String(\"public_repo\"),\n\t\t\t\t\tpulumi.String(\"repo\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_each_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of an GitHub connection.\n        var github = new Connection(\"github\", ConnectionArgs.builder()\n            .name(\"GitHub-Connection\")\n            .strategy(\"github\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"\u003cclient-id\u003e\")\n                .clientSecret(\"\u003cclient-secret\u003e\")\n                .scopes(                \n                    \"email\",\n                    \"profile\",\n                    \"public_repo\",\n                    \"repo\")\n                .setUserRootAttributes(\"on_each_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of an GitHub connection.\n  github:\n    type: auth0:Connection\n    properties:\n      name: GitHub-Connection\n      strategy: github\n      options:\n        clientId: \u003cclient-id\u003e\n        clientSecret: \u003cclient-secret\u003e\n        scopes:\n          - email\n          - profile\n          - public_repo\n          - repo\n        setUserRootAttributes: on_each_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### SalesForce Connection\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of an SalesForce connection.\nconst salesforce = new auth0.Connection(\"salesforce\", {\n    name: \"Salesforce-Connection\",\n    strategy: \"salesforce\",\n    options: {\n        clientId: \"\u003cclient-id\u003e\",\n        clientSecret: \"\u003cclient-secret\u003e\",\n        communityBaseUrl: \"https://salesforce.example.com\",\n        scopes: [\n            \"openid\",\n            \"email\",\n        ],\n        setUserRootAttributes: \"on_first_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example of an SalesForce connection.\nsalesforce = auth0.Connection(\"salesforce\",\n    name=\"Salesforce-Connection\",\n    strategy=\"salesforce\",\n    options={\n        \"client_id\": \"\u003cclient-id\u003e\",\n        \"client_secret\": \"\u003cclient-secret\u003e\",\n        \"community_base_url\": \"https://salesforce.example.com\",\n        \"scopes\": [\n            \"openid\",\n            \"email\",\n        ],\n        \"set_user_root_attributes\": \"on_first_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of an SalesForce connection.\n    var salesforce = new Auth0.Connection(\"salesforce\", new()\n    {\n        Name = \"Salesforce-Connection\",\n        Strategy = \"salesforce\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"\u003cclient-id\u003e\",\n            ClientSecret = \"\u003cclient-secret\u003e\",\n            CommunityBaseUrl = \"https://salesforce.example.com\",\n            Scopes = new[]\n            {\n                \"openid\",\n                \"email\",\n            },\n            SetUserRootAttributes = \"on_first_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example of an SalesForce connection.\n\t\t_, err := auth0.NewConnection(ctx, \"salesforce\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"Salesforce-Connection\"),\n\t\t\tStrategy: pulumi.String(\"salesforce\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:         pulumi.String(\"\u003cclient-id\u003e\"),\n\t\t\t\tClientSecret:     pulumi.String(\"\u003cclient-secret\u003e\"),\n\t\t\t\tCommunityBaseUrl: pulumi.String(\"https://salesforce.example.com\"),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"openid\"),\n\t\t\t\t\tpulumi.String(\"email\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_first_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of an SalesForce connection.\n        var salesforce = new Connection(\"salesforce\", ConnectionArgs.builder()\n            .name(\"Salesforce-Connection\")\n            .strategy(\"salesforce\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"\u003cclient-id\u003e\")\n                .clientSecret(\"\u003cclient-secret\u003e\")\n                .communityBaseUrl(\"https://salesforce.example.com\")\n                .scopes(                \n                    \"openid\",\n                    \"email\")\n                .setUserRootAttributes(\"on_first_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of an SalesForce connection.\n  salesforce:\n    type: auth0:Connection\n    properties:\n      name: Salesforce-Connection\n      strategy: salesforce\n      options:\n        clientId: \u003cclient-id\u003e\n        clientSecret: \u003cclient-secret\u003e\n        communityBaseUrl: https://salesforce.example.com\n        scopes:\n          - openid\n          - email\n        setUserRootAttributes: on_first_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### OAuth2 Connection\n\nAlso applies to following connection strategies: \u003cspan pulumi-lang-nodejs=\"`dropbox`\" pulumi-lang-dotnet=\"`Dropbox`\" pulumi-lang-go=\"`dropbox`\" pulumi-lang-python=\"`dropbox`\" pulumi-lang-yaml=\"`dropbox`\" pulumi-lang-java=\"`dropbox`\"\u003e`dropbox`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`bitbucket`\" pulumi-lang-dotnet=\"`Bitbucket`\" pulumi-lang-go=\"`bitbucket`\" pulumi-lang-python=\"`bitbucket`\" pulumi-lang-yaml=\"`bitbucket`\" pulumi-lang-java=\"`bitbucket`\"\u003e`bitbucket`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`paypal`\" pulumi-lang-dotnet=\"`Paypal`\" pulumi-lang-go=\"`paypal`\" pulumi-lang-python=\"`paypal`\" pulumi-lang-yaml=\"`paypal`\" pulumi-lang-java=\"`paypal`\"\u003e`paypal`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`twitter`\" pulumi-lang-dotnet=\"`Twitter`\" pulumi-lang-go=\"`twitter`\" pulumi-lang-python=\"`twitter`\" pulumi-lang-yaml=\"`twitter`\" pulumi-lang-java=\"`twitter`\"\u003e`twitter`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`amazon`\" pulumi-lang-dotnet=\"`Amazon`\" pulumi-lang-go=\"`amazon`\" pulumi-lang-python=\"`amazon`\" pulumi-lang-yaml=\"`amazon`\" pulumi-lang-java=\"`amazon`\"\u003e`amazon`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`yahoo`\" pulumi-lang-dotnet=\"`Yahoo`\" pulumi-lang-go=\"`yahoo`\" pulumi-lang-python=\"`yahoo`\" pulumi-lang-yaml=\"`yahoo`\" pulumi-lang-java=\"`yahoo`\"\u003e`yahoo`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`box`\" pulumi-lang-dotnet=\"`Box`\" pulumi-lang-go=\"`box`\" pulumi-lang-python=\"`box`\" pulumi-lang-yaml=\"`box`\" pulumi-lang-java=\"`box`\"\u003e`box`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`wordpress`\" pulumi-lang-dotnet=\"`Wordpress`\" pulumi-lang-go=\"`wordpress`\" pulumi-lang-python=\"`wordpress`\" pulumi-lang-yaml=\"`wordpress`\" pulumi-lang-java=\"`wordpress`\"\u003e`wordpress`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`shopify`\" pulumi-lang-dotnet=\"`Shopify`\" pulumi-lang-go=\"`shopify`\" pulumi-lang-python=\"`shopify`\" pulumi-lang-yaml=\"`shopify`\" pulumi-lang-java=\"`shopify`\"\u003e`shopify`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of an OAuth2 connection.\nconst oauth2 = new auth0.Connection(\"oauth2\", {\n    name: \"OAuth2-Connection\",\n    strategy: \"oauth2\",\n    options: {\n        clientId: \"\u003cclient-id\u003e\",\n        clientSecret: \"\u003cclient-secret\u003e\",\n        strategyVersion: 2,\n        scopes: [\n            \"basic_profile\",\n            \"profile\",\n            \"email\",\n        ],\n        tokenEndpoint: \"https://auth.example.com/oauth2/token\",\n        authorizationEndpoint: \"https://auth.example.com/oauth2/authorize\",\n        pkceEnabled: true,\n        iconUrl: \"https://auth.example.com/assets/logo.png\",\n        customHeaders: [\n            {\n                header: \"bar\",\n                value: \"foo\",\n            },\n            {\n                header: \"foo\",\n                value: \"bar\",\n            },\n        ],\n        scripts: {\n            fetchUserProfile: `        function fetchUserProfile(accessToken, context, callback) {\n          return callback(new Error(\\\\\"Whoops!\\\\\"));\n        }\n`,\n        },\n        setUserRootAttributes: \"on_each_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example of an OAuth2 connection.\noauth2 = auth0.Connection(\"oauth2\",\n    name=\"OAuth2-Connection\",\n    strategy=\"oauth2\",\n    options={\n        \"client_id\": \"\u003cclient-id\u003e\",\n        \"client_secret\": \"\u003cclient-secret\u003e\",\n        \"strategy_version\": 2,\n        \"scopes\": [\n            \"basic_profile\",\n            \"profile\",\n            \"email\",\n        ],\n        \"token_endpoint\": \"https://auth.example.com/oauth2/token\",\n        \"authorization_endpoint\": \"https://auth.example.com/oauth2/authorize\",\n        \"pkce_enabled\": True,\n        \"icon_url\": \"https://auth.example.com/assets/logo.png\",\n        \"custom_headers\": [\n            {\n                \"header\": \"bar\",\n                \"value\": \"foo\",\n            },\n            {\n                \"header\": \"foo\",\n                \"value\": \"bar\",\n            },\n        ],\n        \"scripts\": {\n            \"fetchUserProfile\": \"\"\"        function fetchUserProfile(accessToken, context, callback) {\n          return callback(new Error(\\\"Whoops!\\\"));\n        }\n\"\"\",\n        },\n        \"set_user_root_attributes\": \"on_each_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of an OAuth2 connection.\n    var oauth2 = new Auth0.Connection(\"oauth2\", new()\n    {\n        Name = \"OAuth2-Connection\",\n        Strategy = \"oauth2\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"\u003cclient-id\u003e\",\n            ClientSecret = \"\u003cclient-secret\u003e\",\n            StrategyVersion = 2,\n            Scopes = new[]\n            {\n                \"basic_profile\",\n                \"profile\",\n                \"email\",\n            },\n            TokenEndpoint = \"https://auth.example.com/oauth2/token\",\n            AuthorizationEndpoint = \"https://auth.example.com/oauth2/authorize\",\n            PkceEnabled = true,\n            IconUrl = \"https://auth.example.com/assets/logo.png\",\n            CustomHeaders = new[]\n            {\n                new Auth0.Inputs.ConnectionOptionsCustomHeaderArgs\n                {\n                    Header = \"bar\",\n                    Value = \"foo\",\n                },\n                new Auth0.Inputs.ConnectionOptionsCustomHeaderArgs\n                {\n                    Header = \"foo\",\n                    Value = \"bar\",\n                },\n            },\n            Scripts = \n            {\n                { \"fetchUserProfile\", @\"        function fetchUserProfile(accessToken, context, callback) {\n          return callback(new Error(\\\"\"Whoops!\\\"\"));\n        }\n\" },\n            },\n            SetUserRootAttributes = \"on_each_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example of an OAuth2 connection.\n\t\t_, err := auth0.NewConnection(ctx, \"oauth2\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"OAuth2-Connection\"),\n\t\t\tStrategy: pulumi.String(\"oauth2\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:        pulumi.String(\"\u003cclient-id\u003e\"),\n\t\t\t\tClientSecret:    pulumi.String(\"\u003cclient-secret\u003e\"),\n\t\t\t\tStrategyVersion: pulumi.Int(2),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"basic_profile\"),\n\t\t\t\t\tpulumi.String(\"profile\"),\n\t\t\t\t\tpulumi.String(\"email\"),\n\t\t\t\t},\n\t\t\t\tTokenEndpoint:         pulumi.String(\"https://auth.example.com/oauth2/token\"),\n\t\t\t\tAuthorizationEndpoint: pulumi.String(\"https://auth.example.com/oauth2/authorize\"),\n\t\t\t\tPkceEnabled:           pulumi.Bool(true),\n\t\t\t\tIconUrl:               pulumi.String(\"https://auth.example.com/assets/logo.png\"),\n\t\t\t\tCustomHeaders: auth0.ConnectionOptionsCustomHeaderArray{\n\t\t\t\t\t\u0026auth0.ConnectionOptionsCustomHeaderArgs{\n\t\t\t\t\t\tHeader: pulumi.String(\"bar\"),\n\t\t\t\t\t\tValue:  pulumi.String(\"foo\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026auth0.ConnectionOptionsCustomHeaderArgs{\n\t\t\t\t\t\tHeader: pulumi.String(\"foo\"),\n\t\t\t\t\t\tValue:  pulumi.String(\"bar\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tScripts: pulumi.StringMap{\n\t\t\t\t\t\"fetchUserProfile\": pulumi.String(\"        function fetchUserProfile(accessToken, context, callback) {\\n          return callback(new Error(\\\\\\\"Whoops!\\\\\\\"));\\n        }\\n\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_each_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of an OAuth2 connection.\n        var oauth2 = new Connection(\"oauth2\", ConnectionArgs.builder()\n            .name(\"OAuth2-Connection\")\n            .strategy(\"oauth2\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"\u003cclient-id\u003e\")\n                .clientSecret(\"\u003cclient-secret\u003e\")\n                .strategyVersion(2)\n                .scopes(                \n                    \"basic_profile\",\n                    \"profile\",\n                    \"email\")\n                .tokenEndpoint(\"https://auth.example.com/oauth2/token\")\n                .authorizationEndpoint(\"https://auth.example.com/oauth2/authorize\")\n                .pkceEnabled(true)\n                .iconUrl(\"https://auth.example.com/assets/logo.png\")\n                .customHeaders(                \n                    ConnectionOptionsCustomHeaderArgs.builder()\n                        .header(\"bar\")\n                        .value(\"foo\")\n                        .build(),\n                    ConnectionOptionsCustomHeaderArgs.builder()\n                        .header(\"foo\")\n                        .value(\"bar\")\n                        .build())\n                .scripts(Map.of(\"fetchUserProfile\", \"\"\"\n        function fetchUserProfile(accessToken, context, callback) {\n          return callback(new Error(\\\"Whoops!\\\"));\n        }\n                \"\"\"))\n                .setUserRootAttributes(\"on_each_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of an OAuth2 connection.\n  oauth2:\n    type: auth0:Connection\n    properties:\n      name: OAuth2-Connection\n      strategy: oauth2\n      options:\n        clientId: \u003cclient-id\u003e\n        clientSecret: \u003cclient-secret\u003e\n        strategyVersion: 2\n        scopes:\n          - basic_profile\n          - profile\n          - email\n        tokenEndpoint: https://auth.example.com/oauth2/token\n        authorizationEndpoint: https://auth.example.com/oauth2/authorize\n        pkceEnabled: true\n        iconUrl: https://auth.example.com/assets/logo.png\n        customHeaders:\n          - header: bar\n            value: foo\n          - header: foo\n            value: bar\n        scripts:\n          fetchUserProfile: |2\n                    function fetchUserProfile(accessToken, context, callback) {\n                      return callback(new Error(\\\"Whoops!\\\"));\n                    }\n        setUserRootAttributes: on_each_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Active Directory (AD)\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst ad = new auth0.Connection(\"ad\", {\n    name: \"connection-active-directory\",\n    displayName: \"Active Directory Connection\",\n    strategy: \"ad\",\n    showAsButton: true,\n    options: {\n        disableSelfServiceChangePassword: true,\n        bruteForceProtection: true,\n        tenantDomain: \"example.com\",\n        strategyVersion: 2,\n        iconUrl: \"https://example.com/assets/logo.png\",\n        domainAliases: [\n            \"example.com\",\n            \"api.example.com\",\n        ],\n        ips: [\n            \"192.168.1.1\",\n            \"192.168.1.2\",\n        ],\n        setUserRootAttributes: \"on_each_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n        upstreamParams: JSON.stringify({\n            screen_name: {\n                alias: \"login_hint\",\n            },\n        }),\n        useCertAuth: false,\n        useKerberos: false,\n        disableCache: false,\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\nad = auth0.Connection(\"ad\",\n    name=\"connection-active-directory\",\n    display_name=\"Active Directory Connection\",\n    strategy=\"ad\",\n    show_as_button=True,\n    options={\n        \"disable_self_service_change_password\": True,\n        \"brute_force_protection\": True,\n        \"tenant_domain\": \"example.com\",\n        \"strategy_version\": 2,\n        \"icon_url\": \"https://example.com/assets/logo.png\",\n        \"domain_aliases\": [\n            \"example.com\",\n            \"api.example.com\",\n        ],\n        \"ips\": [\n            \"192.168.1.1\",\n            \"192.168.1.2\",\n        ],\n        \"set_user_root_attributes\": \"on_each_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n        \"upstream_params\": json.dumps({\n            \"screen_name\": {\n                \"alias\": \"login_hint\",\n            },\n        }),\n        \"use_cert_auth\": False,\n        \"use_kerberos\": False,\n        \"disable_cache\": False,\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ad = new Auth0.Connection(\"ad\", new()\n    {\n        Name = \"connection-active-directory\",\n        DisplayName = \"Active Directory Connection\",\n        Strategy = \"ad\",\n        ShowAsButton = true,\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            DisableSelfServiceChangePassword = true,\n            BruteForceProtection = true,\n            TenantDomain = \"example.com\",\n            StrategyVersion = 2,\n            IconUrl = \"https://example.com/assets/logo.png\",\n            DomainAliases = new[]\n            {\n                \"example.com\",\n                \"api.example.com\",\n            },\n            Ips = new[]\n            {\n                \"192.168.1.1\",\n                \"192.168.1.2\",\n            },\n            SetUserRootAttributes = \"on_each_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n            UpstreamParams = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"screen_name\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"alias\"] = \"login_hint\",\n                },\n            }),\n            UseCertAuth = false,\n            UseKerberos = false,\n            DisableCache = false,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"screen_name\": map[string]interface{}{\n\t\t\t\t\"alias\": \"login_hint\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = auth0.NewConnection(ctx, \"ad\", \u0026auth0.ConnectionArgs{\n\t\t\tName:         pulumi.String(\"connection-active-directory\"),\n\t\t\tDisplayName:  pulumi.String(\"Active Directory Connection\"),\n\t\t\tStrategy:     pulumi.String(\"ad\"),\n\t\t\tShowAsButton: pulumi.Bool(true),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tDisableSelfServiceChangePassword: pulumi.Bool(true),\n\t\t\t\tBruteForceProtection:             pulumi.Bool(true),\n\t\t\t\tTenantDomain:                     pulumi.String(\"example.com\"),\n\t\t\t\tStrategyVersion:                  pulumi.Int(2),\n\t\t\t\tIconUrl:                          pulumi.String(\"https://example.com/assets/logo.png\"),\n\t\t\t\tDomainAliases: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t\t\tpulumi.String(\"api.example.com\"),\n\t\t\t\t},\n\t\t\t\tIps: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"192.168.1.1\"),\n\t\t\t\t\tpulumi.String(\"192.168.1.2\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_each_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t\tUpstreamParams: pulumi.String(json0),\n\t\t\t\tUseCertAuth:    pulumi.Bool(false),\n\t\t\t\tUseKerberos:    pulumi.Bool(false),\n\t\t\t\tDisableCache:   pulumi.Bool(false),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var ad = new Connection(\"ad\", ConnectionArgs.builder()\n            .name(\"connection-active-directory\")\n            .displayName(\"Active Directory Connection\")\n            .strategy(\"ad\")\n            .showAsButton(true)\n            .options(ConnectionOptionsArgs.builder()\n                .disableSelfServiceChangePassword(true)\n                .bruteForceProtection(true)\n                .tenantDomain(\"example.com\")\n                .strategyVersion(2)\n                .iconUrl(\"https://example.com/assets/logo.png\")\n                .domainAliases(                \n                    \"example.com\",\n                    \"api.example.com\")\n                .ips(                \n                    \"192.168.1.1\",\n                    \"192.168.1.2\")\n                .setUserRootAttributes(\"on_each_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .upstreamParams(serializeJson(\n                    jsonObject(\n                        jsonProperty(\"screen_name\", jsonObject(\n                            jsonProperty(\"alias\", \"login_hint\")\n                        ))\n                    )))\n                .useCertAuth(false)\n                .useKerberos(false)\n                .disableCache(false)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ad:\n    type: auth0:Connection\n    properties:\n      name: connection-active-directory\n      displayName: Active Directory Connection\n      strategy: ad\n      showAsButton: true\n      options:\n        disableSelfServiceChangePassword: true\n        bruteForceProtection: true\n        tenantDomain: example.com\n        strategyVersion: 2\n        iconUrl: https://example.com/assets/logo.png\n        domainAliases:\n          - example.com\n          - api.example.com\n        ips:\n          - 192.168.1.1\n          - 192.168.1.2\n        setUserRootAttributes: on_each_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n        upstreamParams:\n          fn::toJSON:\n            screen_name:\n              alias: login_hint\n        useCertAuth: false\n        useKerberos: false\n        disableCache: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Azure AD Connection\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst azureAd = new auth0.Connection(\"azure_ad\", {\n    name: \"connection-azure-ad\",\n    strategy: \"waad\",\n    showAsButton: true,\n    options: {\n        identityApi: \"azure-active-directory-v1.0\",\n        clientId: \"123456\",\n        clientSecret: \"123456\",\n        strategyVersion: 2,\n        userIdAttribute: \"oid\",\n        appId: \"app-id-123\",\n        tenantDomain: \"example.onmicrosoft.com\",\n        domain: \"example.onmicrosoft.com\",\n        domainAliases: [\n            \"example.com\",\n            \"api.example.com\",\n        ],\n        iconUrl: \"https://example.onmicrosoft.com/assets/logo.png\",\n        useWsfed: false,\n        waadProtocol: \"openid-connect\",\n        waadCommonEndpoint: false,\n        maxGroupsToRetrieve: \"250\",\n        apiEnableUsers: true,\n        scopes: [\n            \"basic_profile\",\n            \"ext_groups\",\n            \"ext_profile\",\n        ],\n        setUserRootAttributes: \"on_each_login\",\n        shouldTrustEmailVerifiedConnection: \"never_set_emails_as_verified\",\n        upstreamParams: JSON.stringify({\n            screen_name: {\n                alias: \"login_hint\",\n            },\n        }),\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\nazure_ad = auth0.Connection(\"azure_ad\",\n    name=\"connection-azure-ad\",\n    strategy=\"waad\",\n    show_as_button=True,\n    options={\n        \"identity_api\": \"azure-active-directory-v1.0\",\n        \"client_id\": \"123456\",\n        \"client_secret\": \"123456\",\n        \"strategy_version\": 2,\n        \"user_id_attribute\": \"oid\",\n        \"app_id\": \"app-id-123\",\n        \"tenant_domain\": \"example.onmicrosoft.com\",\n        \"domain\": \"example.onmicrosoft.com\",\n        \"domain_aliases\": [\n            \"example.com\",\n            \"api.example.com\",\n        ],\n        \"icon_url\": \"https://example.onmicrosoft.com/assets/logo.png\",\n        \"use_wsfed\": False,\n        \"waad_protocol\": \"openid-connect\",\n        \"waad_common_endpoint\": False,\n        \"max_groups_to_retrieve\": \"250\",\n        \"api_enable_users\": True,\n        \"scopes\": [\n            \"basic_profile\",\n            \"ext_groups\",\n            \"ext_profile\",\n        ],\n        \"set_user_root_attributes\": \"on_each_login\",\n        \"should_trust_email_verified_connection\": \"never_set_emails_as_verified\",\n        \"upstream_params\": json.dumps({\n            \"screen_name\": {\n                \"alias\": \"login_hint\",\n            },\n        }),\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var azureAd = new Auth0.Connection(\"azure_ad\", new()\n    {\n        Name = \"connection-azure-ad\",\n        Strategy = \"waad\",\n        ShowAsButton = true,\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            IdentityApi = \"azure-active-directory-v1.0\",\n            ClientId = \"123456\",\n            ClientSecret = \"123456\",\n            StrategyVersion = 2,\n            UserIdAttribute = \"oid\",\n            AppId = \"app-id-123\",\n            TenantDomain = \"example.onmicrosoft.com\",\n            Domain = \"example.onmicrosoft.com\",\n            DomainAliases = new[]\n            {\n                \"example.com\",\n                \"api.example.com\",\n            },\n            IconUrl = \"https://example.onmicrosoft.com/assets/logo.png\",\n            UseWsfed = false,\n            WaadProtocol = \"openid-connect\",\n            WaadCommonEndpoint = false,\n            MaxGroupsToRetrieve = \"250\",\n            ApiEnableUsers = true,\n            Scopes = new[]\n            {\n                \"basic_profile\",\n                \"ext_groups\",\n                \"ext_profile\",\n            },\n            SetUserRootAttributes = \"on_each_login\",\n            ShouldTrustEmailVerifiedConnection = \"never_set_emails_as_verified\",\n            UpstreamParams = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"screen_name\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"alias\"] = \"login_hint\",\n                },\n            }),\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"screen_name\": map[string]interface{}{\n\t\t\t\t\"alias\": \"login_hint\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = auth0.NewConnection(ctx, \"azure_ad\", \u0026auth0.ConnectionArgs{\n\t\t\tName:         pulumi.String(\"connection-azure-ad\"),\n\t\t\tStrategy:     pulumi.String(\"waad\"),\n\t\t\tShowAsButton: pulumi.Bool(true),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tIdentityApi:     pulumi.String(\"azure-active-directory-v1.0\"),\n\t\t\t\tClientId:        pulumi.String(\"123456\"),\n\t\t\t\tClientSecret:    pulumi.String(\"123456\"),\n\t\t\t\tStrategyVersion: pulumi.Int(2),\n\t\t\t\tUserIdAttribute: pulumi.String(\"oid\"),\n\t\t\t\tAppId:           pulumi.String(\"app-id-123\"),\n\t\t\t\tTenantDomain:    pulumi.String(\"example.onmicrosoft.com\"),\n\t\t\t\tDomain:          pulumi.String(\"example.onmicrosoft.com\"),\n\t\t\t\tDomainAliases: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t\t\tpulumi.String(\"api.example.com\"),\n\t\t\t\t},\n\t\t\t\tIconUrl:             pulumi.String(\"https://example.onmicrosoft.com/assets/logo.png\"),\n\t\t\t\tUseWsfed:            pulumi.Bool(false),\n\t\t\t\tWaadProtocol:        pulumi.String(\"openid-connect\"),\n\t\t\t\tWaadCommonEndpoint:  pulumi.Bool(false),\n\t\t\t\tMaxGroupsToRetrieve: pulumi.String(\"250\"),\n\t\t\t\tApiEnableUsers:      pulumi.Bool(true),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"basic_profile\"),\n\t\t\t\t\tpulumi.String(\"ext_groups\"),\n\t\t\t\t\tpulumi.String(\"ext_profile\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes:              pulumi.String(\"on_each_login\"),\n\t\t\t\tShouldTrustEmailVerifiedConnection: pulumi.String(\"never_set_emails_as_verified\"),\n\t\t\t\tUpstreamParams:                     pulumi.String(json0),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var azureAd = new Connection(\"azureAd\", ConnectionArgs.builder()\n            .name(\"connection-azure-ad\")\n            .strategy(\"waad\")\n            .showAsButton(true)\n            .options(ConnectionOptionsArgs.builder()\n                .identityApi(\"azure-active-directory-v1.0\")\n                .clientId(\"123456\")\n                .clientSecret(\"123456\")\n                .strategyVersion(2)\n                .userIdAttribute(\"oid\")\n                .appId(\"app-id-123\")\n                .tenantDomain(\"example.onmicrosoft.com\")\n                .domain(\"example.onmicrosoft.com\")\n                .domainAliases(                \n                    \"example.com\",\n                    \"api.example.com\")\n                .iconUrl(\"https://example.onmicrosoft.com/assets/logo.png\")\n                .useWsfed(false)\n                .waadProtocol(\"openid-connect\")\n                .waadCommonEndpoint(false)\n                .maxGroupsToRetrieve(\"250\")\n                .apiEnableUsers(true)\n                .scopes(                \n                    \"basic_profile\",\n                    \"ext_groups\",\n                    \"ext_profile\")\n                .setUserRootAttributes(\"on_each_login\")\n                .shouldTrustEmailVerifiedConnection(\"never_set_emails_as_verified\")\n                .upstreamParams(serializeJson(\n                    jsonObject(\n                        jsonProperty(\"screen_name\", jsonObject(\n                            jsonProperty(\"alias\", \"login_hint\")\n                        ))\n                    )))\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  azureAd:\n    type: auth0:Connection\n    name: azure_ad\n    properties:\n      name: connection-azure-ad\n      strategy: waad\n      showAsButton: true\n      options:\n        identityApi: azure-active-directory-v1.0\n        clientId: '123456'\n        clientSecret: '123456'\n        strategyVersion: 2\n        userIdAttribute: oid\n        appId: app-id-123\n        tenantDomain: example.onmicrosoft.com\n        domain: example.onmicrosoft.com\n        domainAliases:\n          - example.com\n          - api.example.com\n        iconUrl: https://example.onmicrosoft.com/assets/logo.png\n        useWsfed: false\n        waadProtocol: openid-connect\n        waadCommonEndpoint: false\n        maxGroupsToRetrieve: 250\n        apiEnableUsers: true\n        scopes:\n          - basic_profile\n          - ext_groups\n          - ext_profile\n        setUserRootAttributes: on_each_login\n        shouldTrustEmailVerifiedConnection: never_set_emails_as_verified\n        upstreamParams:\n          fn::toJSON:\n            screen_name:\n              alias: login_hint\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Email Connection\n\n\u003e To be able to see this in the management dashboard as well, the name of the connection must be set to \"email\".\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of an Email connection.\nconst passwordlessEmail = new auth0.Connection(\"passwordless_email\", {\n    strategy: \"email\",\n    name: \"email\",\n    options: {\n        name: \"email\",\n        from: \"{{ application.name }} \u003croot@auth0.com\u003e\",\n        subject: \"Welcome to {{ application.name }}\",\n        syntax: \"liquid\",\n        template: \"\u003chtml\u003eThis is the body of the email\u003c/html\u003e\",\n        disableSignup: false,\n        bruteForceProtection: true,\n        setUserRootAttributes: \"on_each_login\",\n        nonPersistentAttrs: [],\n        authParams: {\n            scope: \"openid email profile offline_access\",\n            response_type: \"code\",\n        },\n        totp: {\n            timeStep: 300,\n            length: 6,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example of an Email connection.\npasswordless_email = auth0.Connection(\"passwordless_email\",\n    strategy=\"email\",\n    name=\"email\",\n    options={\n        \"name\": \"email\",\n        \"from_\": \"{{ application.name }} \u003croot@auth0.com\u003e\",\n        \"subject\": \"Welcome to {{ application.name }}\",\n        \"syntax\": \"liquid\",\n        \"template\": \"\u003chtml\u003eThis is the body of the email\u003c/html\u003e\",\n        \"disable_signup\": False,\n        \"brute_force_protection\": True,\n        \"set_user_root_attributes\": \"on_each_login\",\n        \"non_persistent_attrs\": [],\n        \"auth_params\": {\n            \"scope\": \"openid email profile offline_access\",\n            \"response_type\": \"code\",\n        },\n        \"totp\": {\n            \"time_step\": 300,\n            \"length\": 6,\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of an Email connection.\n    var passwordlessEmail = new Auth0.Connection(\"passwordless_email\", new()\n    {\n        Strategy = \"email\",\n        Name = \"email\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            Name = \"email\",\n            From = \"{{ application.name }} \u003croot@auth0.com\u003e\",\n            Subject = \"Welcome to {{ application.name }}\",\n            Syntax = \"liquid\",\n            Template = \"\u003chtml\u003eThis is the body of the email\u003c/html\u003e\",\n            DisableSignup = false,\n            BruteForceProtection = true,\n            SetUserRootAttributes = \"on_each_login\",\n            NonPersistentAttrs = new() { },\n            AuthParams = \n            {\n                { \"scope\", \"openid email profile offline_access\" },\n                { \"response_type\", \"code\" },\n            },\n            Totp = new Auth0.Inputs.ConnectionOptionsTotpArgs\n            {\n                TimeStep = 300,\n                Length = 6,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example of an Email connection.\n\t\t_, err := auth0.NewConnection(ctx, \"passwordless_email\", \u0026auth0.ConnectionArgs{\n\t\t\tStrategy: pulumi.String(\"email\"),\n\t\t\tName:     pulumi.String(\"email\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tName:                  pulumi.String(\"email\"),\n\t\t\t\tFrom:                  pulumi.String(\"{{ application.name }} \u003croot@auth0.com\u003e\"),\n\t\t\t\tSubject:               pulumi.String(\"Welcome to {{ application.name }}\"),\n\t\t\t\tSyntax:                pulumi.String(\"liquid\"),\n\t\t\t\tTemplate:              pulumi.String(\"\u003chtml\u003eThis is the body of the email\u003c/html\u003e\"),\n\t\t\t\tDisableSignup:         pulumi.Bool(false),\n\t\t\t\tBruteForceProtection:  pulumi.Bool(true),\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_each_login\"),\n\t\t\t\tNonPersistentAttrs:    pulumi.StringArray{},\n\t\t\t\tAuthParams: pulumi.StringMap{\n\t\t\t\t\t\"scope\":         pulumi.String(\"openid email profile offline_access\"),\n\t\t\t\t\t\"response_type\": pulumi.String(\"code\"),\n\t\t\t\t},\n\t\t\t\tTotp: \u0026auth0.ConnectionOptionsTotpArgs{\n\t\t\t\t\tTimeStep: pulumi.Int(300),\n\t\t\t\t\tLength:   pulumi.Int(6),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsTotpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of an Email connection.\n        var passwordlessEmail = new Connection(\"passwordlessEmail\", ConnectionArgs.builder()\n            .strategy(\"email\")\n            .name(\"email\")\n            .options(ConnectionOptionsArgs.builder()\n                .name(\"email\")\n                .from(\"{{ application.name }} \u003croot@auth0.com\u003e\")\n                .subject(\"Welcome to {{ application.name }}\")\n                .syntax(\"liquid\")\n                .template(\"\u003chtml\u003eThis is the body of the email\u003c/html\u003e\")\n                .disableSignup(false)\n                .bruteForceProtection(true)\n                .setUserRootAttributes(\"on_each_login\")\n                .nonPersistentAttrs()\n                .authParams(Map.ofEntries(\n                    Map.entry(\"scope\", \"openid email profile offline_access\"),\n                    Map.entry(\"response_type\", \"code\")\n                ))\n                .totp(ConnectionOptionsTotpArgs.builder()\n                    .timeStep(300)\n                    .length(6)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of an Email connection.\n  passwordlessEmail:\n    type: auth0:Connection\n    name: passwordless_email\n    properties:\n      strategy: email\n      name: email\n      options:\n        name: email\n        from: '{{ application.name }} \u003croot@auth0.com\u003e'\n        subject: Welcome to {{ application.name }}\n        syntax: liquid\n        template: \u003chtml\u003eThis is the body of the email\u003c/html\u003e\n        disableSignup: false\n        bruteForceProtection: true\n        setUserRootAttributes: on_each_login\n        nonPersistentAttrs: []\n        authParams:\n          scope: openid email profile offline_access\n          response_type: code\n        totp:\n          timeStep: 300\n          length: 6\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### SAML Connection\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of a SAML connection.\nconst samlp = new auth0.Connection(\"samlp\", {\n    name: \"SAML-Connection\",\n    strategy: \"samlp\",\n    options: {\n        debug: false,\n        signingCert: \"\u003csigning-certificate\u003e\",\n        signInEndpoint: \"https://saml.provider/sign_in\",\n        signOutEndpoint: \"https://saml.provider/sign_out\",\n        globalTokenRevocationJwtIss: \"issuer.example.com\",\n        globalTokenRevocationJwtSub: \"user123\",\n        disableSignOut: true,\n        strategyVersion: 2,\n        tenantDomain: \"example.com\",\n        domainAliases: [\n            \"example.com\",\n            \"alias.example.com\",\n        ],\n        protocolBinding: \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\",\n        requestTemplate: `\u003csamlp:AuthnRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"\n@@AssertServiceURLAndDestination@@\n    ID=\"@@ID@@\"\n    IssueInstant=\"@@IssueInstant@@\"\n    ProtocolBinding=\"@@ProtocolBinding@@\" Version=\"2.0\"\u003e\n    \u003csaml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"\u003e@@Issuer@@\u003c/saml:Issuer\u003e\n\u003c/samlp:AuthnRequest\u003e`,\n        userIdAttribute: \"https://saml.provider/imi/ns/identity-200810\",\n        signatureAlgorithm: \"rsa-sha256\",\n        digestAlgorithm: \"sha256\",\n        iconUrl: \"https://saml.provider/assets/logo.png\",\n        entityId: \"\u003centity_id\u003e\",\n        metadataXml: `    \u003c?xml version=\\\\\"1.0\\\\\"?\u003e\n    \u003cmd:EntityDescriptor xmlns:md=\\\\\"urn:oasis:names:tc:SAML:2.0:metadata\\\\\" xmlns:ds=\\\\\"http://www.w3.org/2000/09/xmldsig#\\\\\" entityID=\\\\\"https://example.com\\\\\"\u003e\n      \u003cmd:IDPSSODescriptor protocolSupportEnumeration=\\\\\"urn:oasis:names:tc:SAML:2.0:protocol\\\\\"\u003e\n        \u003cmd:SingleLogoutService Binding=\\\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\\\" Location=\\\\\"https://saml.provider/sign_out\\\\\"/\u003e\n        \u003cmd:SingleSignOnService Binding=\\\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\\\" Location=\\\\\"https://saml.provider/sign_in\\\\\"/\u003e\n      \u003c/md:IDPSSODescriptor\u003e\n    \u003c/md:EntityDescriptor\u003e\n`,\n        metadataUrl: \"https://saml.provider/imi/ns/FederationMetadata.xml\",\n        fieldsMap: JSON.stringify({\n            name: [\n                \"name\",\n                \"nameidentifier\",\n            ],\n            email: [\n                \"emailaddress\",\n                \"nameidentifier\",\n            ],\n            family_name: \"surname\",\n        }),\n        signingKey: {\n            key: `-----BEGIN PRIVATE KEY-----\n...{your private key here}...\n-----END PRIVATE KEY-----`,\n            cert: `-----BEGIN CERTIFICATE-----\n...{your public key cert here}...\n-----END CERTIFICATE-----`,\n        },\n        decryptionKey: {\n            key: `-----BEGIN PRIVATE KEY-----\n...{your private key here}...\n-----END PRIVATE KEY-----`,\n            cert: `-----BEGIN CERTIFICATE-----\n...{your public key cert here}...\n-----END CERTIFICATE-----`,\n        },\n        idpInitiated: {\n            clientId: \"client_id\",\n            clientProtocol: \"samlp\",\n            clientAuthorizeQuery: \"type=code\u0026timeout=30\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\n# This is an example of a SAML connection.\nsamlp = auth0.Connection(\"samlp\",\n    name=\"SAML-Connection\",\n    strategy=\"samlp\",\n    options={\n        \"debug\": False,\n        \"signing_cert\": \"\u003csigning-certificate\u003e\",\n        \"sign_in_endpoint\": \"https://saml.provider/sign_in\",\n        \"sign_out_endpoint\": \"https://saml.provider/sign_out\",\n        \"global_token_revocation_jwt_iss\": \"issuer.example.com\",\n        \"global_token_revocation_jwt_sub\": \"user123\",\n        \"disable_sign_out\": True,\n        \"strategy_version\": 2,\n        \"tenant_domain\": \"example.com\",\n        \"domain_aliases\": [\n            \"example.com\",\n            \"alias.example.com\",\n        ],\n        \"protocol_binding\": \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\",\n        \"request_template\": \"\"\"\u003csamlp:AuthnRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"\n@@AssertServiceURLAndDestination@@\n    ID=\"@@ID@@\"\n    IssueInstant=\"@@IssueInstant@@\"\n    ProtocolBinding=\"@@ProtocolBinding@@\" Version=\"2.0\"\u003e\n    \u003csaml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"\u003e@@Issuer@@\u003c/saml:Issuer\u003e\n\u003c/samlp:AuthnRequest\u003e\"\"\",\n        \"user_id_attribute\": \"https://saml.provider/imi/ns/identity-200810\",\n        \"signature_algorithm\": \"rsa-sha256\",\n        \"digest_algorithm\": \"sha256\",\n        \"icon_url\": \"https://saml.provider/assets/logo.png\",\n        \"entity_id\": \"\u003centity_id\u003e\",\n        \"metadata_xml\": \"\"\"    \u003c?xml version=\\\"1.0\\\"?\u003e\n    \u003cmd:EntityDescriptor xmlns:md=\\\"urn:oasis:names:tc:SAML:2.0:metadata\\\" xmlns:ds=\\\"http://www.w3.org/2000/09/xmldsig#\\\" entityID=\\\"https://example.com\\\"\u003e\n      \u003cmd:IDPSSODescriptor protocolSupportEnumeration=\\\"urn:oasis:names:tc:SAML:2.0:protocol\\\"\u003e\n        \u003cmd:SingleLogoutService Binding=\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\" Location=\\\"https://saml.provider/sign_out\\\"/\u003e\n        \u003cmd:SingleSignOnService Binding=\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\" Location=\\\"https://saml.provider/sign_in\\\"/\u003e\n      \u003c/md:IDPSSODescriptor\u003e\n    \u003c/md:EntityDescriptor\u003e\n\"\"\",\n        \"metadata_url\": \"https://saml.provider/imi/ns/FederationMetadata.xml\",\n        \"fields_map\": json.dumps({\n            \"name\": [\n                \"name\",\n                \"nameidentifier\",\n            ],\n            \"email\": [\n                \"emailaddress\",\n                \"nameidentifier\",\n            ],\n            \"family_name\": \"surname\",\n        }),\n        \"signing_key\": {\n            \"key\": \"\"\"-----BEGIN PRIVATE KEY-----\n...{your private key here}...\n-----END PRIVATE KEY-----\"\"\",\n            \"cert\": \"\"\"-----BEGIN CERTIFICATE-----\n...{your public key cert here}...\n-----END CERTIFICATE-----\"\"\",\n        },\n        \"decryption_key\": {\n            \"key\": \"\"\"-----BEGIN PRIVATE KEY-----\n...{your private key here}...\n-----END PRIVATE KEY-----\"\"\",\n            \"cert\": \"\"\"-----BEGIN CERTIFICATE-----\n...{your public key cert here}...\n-----END CERTIFICATE-----\"\"\",\n        },\n        \"idp_initiated\": {\n            \"client_id\": \"client_id\",\n            \"client_protocol\": \"samlp\",\n            \"client_authorize_query\": \"type=code\u0026timeout=30\",\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of a SAML connection.\n    var samlp = new Auth0.Connection(\"samlp\", new()\n    {\n        Name = \"SAML-Connection\",\n        Strategy = \"samlp\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            Debug = false,\n            SigningCert = \"\u003csigning-certificate\u003e\",\n            SignInEndpoint = \"https://saml.provider/sign_in\",\n            SignOutEndpoint = \"https://saml.provider/sign_out\",\n            GlobalTokenRevocationJwtIss = \"issuer.example.com\",\n            GlobalTokenRevocationJwtSub = \"user123\",\n            DisableSignOut = true,\n            StrategyVersion = 2,\n            TenantDomain = \"example.com\",\n            DomainAliases = new[]\n            {\n                \"example.com\",\n                \"alias.example.com\",\n            },\n            ProtocolBinding = \"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\",\n            RequestTemplate = @\"\u003csamlp:AuthnRequest xmlns:samlp=\"\"urn:oasis:names:tc:SAML:2.0:protocol\"\"\n@@AssertServiceURLAndDestination@@\n    ID=\"\"@@ID@@\"\"\n    IssueInstant=\"\"@@IssueInstant@@\"\"\n    ProtocolBinding=\"\"@@ProtocolBinding@@\"\" Version=\"\"2.0\"\"\u003e\n    \u003csaml:Issuer xmlns:saml=\"\"urn:oasis:names:tc:SAML:2.0:assertion\"\"\u003e@@Issuer@@\u003c/saml:Issuer\u003e\n\u003c/samlp:AuthnRequest\u003e\",\n            UserIdAttribute = \"https://saml.provider/imi/ns/identity-200810\",\n            SignatureAlgorithm = \"rsa-sha256\",\n            DigestAlgorithm = \"sha256\",\n            IconUrl = \"https://saml.provider/assets/logo.png\",\n            EntityId = \"\u003centity_id\u003e\",\n            MetadataXml = @\"    \u003c?xml version=\\\"\"1.0\\\"\"?\u003e\n    \u003cmd:EntityDescriptor xmlns:md=\\\"\"urn:oasis:names:tc:SAML:2.0:metadata\\\"\" xmlns:ds=\\\"\"http://www.w3.org/2000/09/xmldsig#\\\"\" entityID=\\\"\"https://example.com\\\"\"\u003e\n      \u003cmd:IDPSSODescriptor protocolSupportEnumeration=\\\"\"urn:oasis:names:tc:SAML:2.0:protocol\\\"\"\u003e\n        \u003cmd:SingleLogoutService Binding=\\\"\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\"\" Location=\\\"\"https://saml.provider/sign_out\\\"\"/\u003e\n        \u003cmd:SingleSignOnService Binding=\\\"\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\"\" Location=\\\"\"https://saml.provider/sign_in\\\"\"/\u003e\n      \u003c/md:IDPSSODescriptor\u003e\n    \u003c/md:EntityDescriptor\u003e\n\",\n            MetadataUrl = \"https://saml.provider/imi/ns/FederationMetadata.xml\",\n            FieldsMap = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"name\"] = new[]\n                {\n                    \"name\",\n                    \"nameidentifier\",\n                },\n                [\"email\"] = new[]\n                {\n                    \"emailaddress\",\n                    \"nameidentifier\",\n                },\n                [\"family_name\"] = \"surname\",\n            }),\n            SigningKey = new Auth0.Inputs.ConnectionOptionsSigningKeyArgs\n            {\n                Key = @\"-----BEGIN PRIVATE KEY-----\n...{your private key here}...\n-----END PRIVATE KEY-----\",\n                Cert = @\"-----BEGIN CERTIFICATE-----\n...{your public key cert here}...\n-----END CERTIFICATE-----\",\n            },\n            DecryptionKey = new Auth0.Inputs.ConnectionOptionsDecryptionKeyArgs\n            {\n                Key = @\"-----BEGIN PRIVATE KEY-----\n...{your private key here}...\n-----END PRIVATE KEY-----\",\n                Cert = @\"-----BEGIN CERTIFICATE-----\n...{your public key cert here}...\n-----END CERTIFICATE-----\",\n            },\n            IdpInitiated = new Auth0.Inputs.ConnectionOptionsIdpInitiatedArgs\n            {\n                ClientId = \"client_id\",\n                ClientProtocol = \"samlp\",\n                ClientAuthorizeQuery = \"type=code\u0026timeout=30\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"name\": []string{\n\t\t\t\t\"name\",\n\t\t\t\t\"nameidentifier\",\n\t\t\t},\n\t\t\t\"email\": []string{\n\t\t\t\t\"emailaddress\",\n\t\t\t\t\"nameidentifier\",\n\t\t\t},\n\t\t\t\"family_name\": \"surname\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t// This is an example of a SAML connection.\n\t\t_, err = auth0.NewConnection(ctx, \"samlp\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"SAML-Connection\"),\n\t\t\tStrategy: pulumi.String(\"samlp\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tDebug:                       pulumi.Bool(false),\n\t\t\t\tSigningCert:                 pulumi.String(\"\u003csigning-certificate\u003e\"),\n\t\t\t\tSignInEndpoint:              pulumi.String(\"https://saml.provider/sign_in\"),\n\t\t\t\tSignOutEndpoint:             pulumi.String(\"https://saml.provider/sign_out\"),\n\t\t\t\tGlobalTokenRevocationJwtIss: pulumi.String(\"issuer.example.com\"),\n\t\t\t\tGlobalTokenRevocationJwtSub: pulumi.String(\"user123\"),\n\t\t\t\tDisableSignOut:              pulumi.Bool(true),\n\t\t\t\tStrategyVersion:             pulumi.Int(2),\n\t\t\t\tTenantDomain:                pulumi.String(\"example.com\"),\n\t\t\t\tDomainAliases: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t\t\tpulumi.String(\"alias.example.com\"),\n\t\t\t\t},\n\t\t\t\tProtocolBinding: pulumi.String(\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\"),\n\t\t\t\tRequestTemplate: pulumi.String(`\u003csamlp:AuthnRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"\n@@AssertServiceURLAndDestination@@\n    ID=\"@@ID@@\"\n    IssueInstant=\"@@IssueInstant@@\"\n    ProtocolBinding=\"@@ProtocolBinding@@\" Version=\"2.0\"\u003e\n    \u003csaml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"\u003e@@Issuer@@\u003c/saml:Issuer\u003e\n\u003c/samlp:AuthnRequest\u003e`),\n\t\t\t\tUserIdAttribute:    pulumi.String(\"https://saml.provider/imi/ns/identity-200810\"),\n\t\t\t\tSignatureAlgorithm: pulumi.String(\"rsa-sha256\"),\n\t\t\t\tDigestAlgorithm:    pulumi.String(\"sha256\"),\n\t\t\t\tIconUrl:            pulumi.String(\"https://saml.provider/assets/logo.png\"),\n\t\t\t\tEntityId:           pulumi.String(\"\u003centity_id\u003e\"),\n\t\t\t\tMetadataXml: pulumi.String(`    \u003c?xml version=\\\"1.0\\\"?\u003e\n    \u003cmd:EntityDescriptor xmlns:md=\\\"urn:oasis:names:tc:SAML:2.0:metadata\\\" xmlns:ds=\\\"http://www.w3.org/2000/09/xmldsig#\\\" entityID=\\\"https://example.com\\\"\u003e\n      \u003cmd:IDPSSODescriptor protocolSupportEnumeration=\\\"urn:oasis:names:tc:SAML:2.0:protocol\\\"\u003e\n        \u003cmd:SingleLogoutService Binding=\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\" Location=\\\"https://saml.provider/sign_out\\\"/\u003e\n        \u003cmd:SingleSignOnService Binding=\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\" Location=\\\"https://saml.provider/sign_in\\\"/\u003e\n      \u003c/md:IDPSSODescriptor\u003e\n    \u003c/md:EntityDescriptor\u003e\n`),\n\t\t\t\tMetadataUrl: pulumi.String(\"https://saml.provider/imi/ns/FederationMetadata.xml\"),\n\t\t\t\tFieldsMap:   pulumi.String(json0),\n\t\t\t\tSigningKey: \u0026auth0.ConnectionOptionsSigningKeyArgs{\n\t\t\t\t\tKey:  pulumi.String(\"-----BEGIN PRIVATE KEY-----\\n...{your private key here}...\\n-----END PRIVATE KEY-----\"),\n\t\t\t\t\tCert: pulumi.String(\"-----BEGIN CERTIFICATE-----\\n...{your public key cert here}...\\n-----END CERTIFICATE-----\"),\n\t\t\t\t},\n\t\t\t\tDecryptionKey: \u0026auth0.ConnectionOptionsDecryptionKeyArgs{\n\t\t\t\t\tKey:  pulumi.String(\"-----BEGIN PRIVATE KEY-----\\n...{your private key here}...\\n-----END PRIVATE KEY-----\"),\n\t\t\t\t\tCert: pulumi.String(\"-----BEGIN CERTIFICATE-----\\n...{your public key cert here}...\\n-----END CERTIFICATE-----\"),\n\t\t\t\t},\n\t\t\t\tIdpInitiated: \u0026auth0.ConnectionOptionsIdpInitiatedArgs{\n\t\t\t\t\tClientId:             pulumi.String(\"client_id\"),\n\t\t\t\t\tClientProtocol:       pulumi.String(\"samlp\"),\n\t\t\t\t\tClientAuthorizeQuery: pulumi.String(\"type=code\u0026timeout=30\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsSigningKeyArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsDecryptionKeyArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsIdpInitiatedArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of a SAML connection.\n        var samlp = new Connection(\"samlp\", ConnectionArgs.builder()\n            .name(\"SAML-Connection\")\n            .strategy(\"samlp\")\n            .options(ConnectionOptionsArgs.builder()\n                .debug(false)\n                .signingCert(\"\u003csigning-certificate\u003e\")\n                .signInEndpoint(\"https://saml.provider/sign_in\")\n                .signOutEndpoint(\"https://saml.provider/sign_out\")\n                .globalTokenRevocationJwtIss(\"issuer.example.com\")\n                .globalTokenRevocationJwtSub(\"user123\")\n                .disableSignOut(true)\n                .strategyVersion(2)\n                .tenantDomain(\"example.com\")\n                .domainAliases(                \n                    \"example.com\",\n                    \"alias.example.com\")\n                .protocolBinding(\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\")\n                .requestTemplate(\"\"\"\n\u003csamlp:AuthnRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"\n@@AssertServiceURLAndDestination@@\n    ID=\"@@ID@@\"\n    IssueInstant=\"@@IssueInstant@@\"\n    ProtocolBinding=\"@@ProtocolBinding@@\" Version=\"2.0\"\u003e\n    \u003csaml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"\u003e@@Issuer@@\u003c/saml:Issuer\u003e\n\u003c/samlp:AuthnRequest\u003e                \"\"\")\n                .userIdAttribute(\"https://saml.provider/imi/ns/identity-200810\")\n                .signatureAlgorithm(\"rsa-sha256\")\n                .digestAlgorithm(\"sha256\")\n                .iconUrl(\"https://saml.provider/assets/logo.png\")\n                .entityId(\"\u003centity_id\u003e\")\n                .metadataXml(\"\"\"\n    \u003c?xml version=\\\"1.0\\\"?\u003e\n    \u003cmd:EntityDescriptor xmlns:md=\\\"urn:oasis:names:tc:SAML:2.0:metadata\\\" xmlns:ds=\\\"http://www.w3.org/2000/09/xmldsig#\\\" entityID=\\\"https://example.com\\\"\u003e\n      \u003cmd:IDPSSODescriptor protocolSupportEnumeration=\\\"urn:oasis:names:tc:SAML:2.0:protocol\\\"\u003e\n        \u003cmd:SingleLogoutService Binding=\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\" Location=\\\"https://saml.provider/sign_out\\\"/\u003e\n        \u003cmd:SingleSignOnService Binding=\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\" Location=\\\"https://saml.provider/sign_in\\\"/\u003e\n      \u003c/md:IDPSSODescriptor\u003e\n    \u003c/md:EntityDescriptor\u003e\n                \"\"\")\n                .metadataUrl(\"https://saml.provider/imi/ns/FederationMetadata.xml\")\n                .fieldsMap(serializeJson(\n                    jsonObject(\n                        jsonProperty(\"name\", jsonArray(\n                            \"name\", \n                            \"nameidentifier\"\n                        )),\n                        jsonProperty(\"email\", jsonArray(\n                            \"emailaddress\", \n                            \"nameidentifier\"\n                        )),\n                        jsonProperty(\"family_name\", \"surname\")\n                    )))\n                .signingKey(ConnectionOptionsSigningKeyArgs.builder()\n                    .key(\"\"\"\n-----BEGIN PRIVATE KEY-----\n...{your private key here}...\n-----END PRIVATE KEY-----                    \"\"\")\n                    .cert(\"\"\"\n-----BEGIN CERTIFICATE-----\n...{your public key cert here}...\n-----END CERTIFICATE-----                    \"\"\")\n                    .build())\n                .decryptionKey(ConnectionOptionsDecryptionKeyArgs.builder()\n                    .key(\"\"\"\n-----BEGIN PRIVATE KEY-----\n...{your private key here}...\n-----END PRIVATE KEY-----                    \"\"\")\n                    .cert(\"\"\"\n-----BEGIN CERTIFICATE-----\n...{your public key cert here}...\n-----END CERTIFICATE-----                    \"\"\")\n                    .build())\n                .idpInitiated(ConnectionOptionsIdpInitiatedArgs.builder()\n                    .clientId(\"client_id\")\n                    .clientProtocol(\"samlp\")\n                    .clientAuthorizeQuery(\"type=code\u0026timeout=30\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of a SAML connection.\n  samlp:\n    type: auth0:Connection\n    properties:\n      name: SAML-Connection\n      strategy: samlp\n      options:\n        debug: false\n        signingCert: \u003csigning-certificate\u003e\n        signInEndpoint: https://saml.provider/sign_in\n        signOutEndpoint: https://saml.provider/sign_out\n        globalTokenRevocationJwtIss: issuer.example.com\n        globalTokenRevocationJwtSub: user123\n        disableSignOut: true\n        strategyVersion: 2\n        tenantDomain: example.com\n        domainAliases:\n          - example.com\n          - alias.example.com\n        protocolBinding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\n        requestTemplate: |-\n          \u003csamlp:AuthnRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"\n          @@AssertServiceURLAndDestination@@\n              ID=\"@@ID@@\"\n              IssueInstant=\"@@IssueInstant@@\"\n              ProtocolBinding=\"@@ProtocolBinding@@\" Version=\"2.0\"\u003e\n              \u003csaml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\"\u003e@@Issuer@@\u003c/saml:Issuer\u003e\n          \u003c/samlp:AuthnRequest\u003e\n        userIdAttribute: https://saml.provider/imi/ns/identity-200810\n        signatureAlgorithm: rsa-sha256\n        digestAlgorithm: sha256\n        iconUrl: https://saml.provider/assets/logo.png\n        entityId: \u003centity_id\u003e\n        metadataXml: |2\n              \u003c?xml version=\\\"1.0\\\"?\u003e\n              \u003cmd:EntityDescriptor xmlns:md=\\\"urn:oasis:names:tc:SAML:2.0:metadata\\\" xmlns:ds=\\\"http://www.w3.org/2000/09/xmldsig#\\\" entityID=\\\"https://example.com\\\"\u003e\n                \u003cmd:IDPSSODescriptor protocolSupportEnumeration=\\\"urn:oasis:names:tc:SAML:2.0:protocol\\\"\u003e\n                  \u003cmd:SingleLogoutService Binding=\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\" Location=\\\"https://saml.provider/sign_out\\\"/\u003e\n                  \u003cmd:SingleSignOnService Binding=\\\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\\\" Location=\\\"https://saml.provider/sign_in\\\"/\u003e\n                \u003c/md:IDPSSODescriptor\u003e\n              \u003c/md:EntityDescriptor\u003e\n        metadataUrl: https://saml.provider/imi/ns/FederationMetadata.xml\n        fieldsMap:\n          fn::toJSON:\n            name:\n              - name\n              - nameidentifier\n            email:\n              - emailaddress\n              - nameidentifier\n            family_name: surname\n        signingKey:\n          key: |-\n            -----BEGIN PRIVATE KEY-----\n            ...{your private key here}...\n            -----END PRIVATE KEY-----\n          cert: |-\n            -----BEGIN CERTIFICATE-----\n            ...{your public key cert here}...\n            -----END CERTIFICATE-----\n        decryptionKey:\n          key: |-\n            -----BEGIN PRIVATE KEY-----\n            ...{your private key here}...\n            -----END PRIVATE KEY-----\n          cert: |-\n            -----BEGIN CERTIFICATE-----\n            ...{your public key cert here}...\n            -----END CERTIFICATE-----\n        idpInitiated:\n          clientId: client_id\n          clientProtocol: samlp\n          clientAuthorizeQuery: type=code\u0026timeout=30\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### WindowsLive Connection\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of a WindowsLive connection.\nconst windowslive = new auth0.Connection(\"windowslive\", {\n    name: \"Windowslive-Connection\",\n    strategy: \"windowslive\",\n    options: {\n        clientId: \"\u003cclient-id\u003e\",\n        clientSecret: \"\u003cclient-secret\u003e\",\n        strategyVersion: 2,\n        scopes: [\n            \"signin\",\n            \"graph_user\",\n        ],\n        setUserRootAttributes: \"on_first_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example of a WindowsLive connection.\nwindowslive = auth0.Connection(\"windowslive\",\n    name=\"Windowslive-Connection\",\n    strategy=\"windowslive\",\n    options={\n        \"client_id\": \"\u003cclient-id\u003e\",\n        \"client_secret\": \"\u003cclient-secret\u003e\",\n        \"strategy_version\": 2,\n        \"scopes\": [\n            \"signin\",\n            \"graph_user\",\n        ],\n        \"set_user_root_attributes\": \"on_first_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of a WindowsLive connection.\n    var windowslive = new Auth0.Connection(\"windowslive\", new()\n    {\n        Name = \"Windowslive-Connection\",\n        Strategy = \"windowslive\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"\u003cclient-id\u003e\",\n            ClientSecret = \"\u003cclient-secret\u003e\",\n            StrategyVersion = 2,\n            Scopes = new[]\n            {\n                \"signin\",\n                \"graph_user\",\n            },\n            SetUserRootAttributes = \"on_first_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example of a WindowsLive connection.\n\t\t_, err := auth0.NewConnection(ctx, \"windowslive\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"Windowslive-Connection\"),\n\t\t\tStrategy: pulumi.String(\"windowslive\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:        pulumi.String(\"\u003cclient-id\u003e\"),\n\t\t\t\tClientSecret:    pulumi.String(\"\u003cclient-secret\u003e\"),\n\t\t\t\tStrategyVersion: pulumi.Int(2),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"signin\"),\n\t\t\t\t\tpulumi.String(\"graph_user\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_first_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of a WindowsLive connection.\n        var windowslive = new Connection(\"windowslive\", ConnectionArgs.builder()\n            .name(\"Windowslive-Connection\")\n            .strategy(\"windowslive\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"\u003cclient-id\u003e\")\n                .clientSecret(\"\u003cclient-secret\u003e\")\n                .strategyVersion(2)\n                .scopes(                \n                    \"signin\",\n                    \"graph_user\")\n                .setUserRootAttributes(\"on_first_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of a WindowsLive connection.\n  windowslive:\n    type: auth0:Connection\n    properties:\n      name: Windowslive-Connection\n      strategy: windowslive\n      options:\n        clientId: \u003cclient-id\u003e\n        clientSecret: \u003cclient-secret\u003e\n        strategyVersion: 2\n        scopes:\n          - signin\n          - graph_user\n        setUserRootAttributes: on_first_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### OIDC Connection\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of an OIDC connection.\nconst oidc = new auth0.Connection(\"oidc\", {\n    name: \"oidc-connection\",\n    displayName: \"OIDC Connection\",\n    strategy: \"oidc\",\n    showAsButton: false,\n    options: {\n        clientId: \"1234567\",\n        clientSecret: \"1234567\",\n        domainAliases: [\"example.com\"],\n        tenantDomain: \"\",\n        iconUrl: \"https://example.com/assets/logo.png\",\n        type: \"back_channel\",\n        issuer: \"https://www.paypalobjects.com\",\n        jwksUri: \"https://api.paypal.com/v1/oauth2/certs\",\n        discoveryUrl: \"https://www.paypalobjects.com/.well-known/openid-configuration\",\n        tokenEndpoint: \"https://api.paypal.com/v1/oauth2/token\",\n        userinfoEndpoint: \"https://api.paypal.com/v1/oauth2/token/userinfo\",\n        authorizationEndpoint: \"https://www.paypal.com/signin/authorize\",\n        scopes: [\n            \"openid\",\n            \"email\",\n        ],\n        setUserRootAttributes: \"on_first_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n        connectionSettings: {\n            pkce: \"auto\",\n        },\n        attributeMap: {\n            mappingMode: \"use_map\",\n            userinfoScope: \"openid email profile groups\",\n            attributes: JSON.stringify({\n                name: \"${context.tokenset.name}\",\n                email: \"${context.tokenset.email}\",\n                email_verified: \"${context.tokenset.email_verified}\",\n                nickname: \"${context.tokenset.nickname}\",\n                picture: \"${context.tokenset.picture}\",\n                given_name: \"${context.tokenset.given_name}\",\n                family_name: \"${context.tokenset.family_name}\",\n            }),\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\n# This is an example of an OIDC connection.\noidc = auth0.Connection(\"oidc\",\n    name=\"oidc-connection\",\n    display_name=\"OIDC Connection\",\n    strategy=\"oidc\",\n    show_as_button=False,\n    options={\n        \"client_id\": \"1234567\",\n        \"client_secret\": \"1234567\",\n        \"domain_aliases\": [\"example.com\"],\n        \"tenant_domain\": \"\",\n        \"icon_url\": \"https://example.com/assets/logo.png\",\n        \"type\": \"back_channel\",\n        \"issuer\": \"https://www.paypalobjects.com\",\n        \"jwks_uri\": \"https://api.paypal.com/v1/oauth2/certs\",\n        \"discovery_url\": \"https://www.paypalobjects.com/.well-known/openid-configuration\",\n        \"token_endpoint\": \"https://api.paypal.com/v1/oauth2/token\",\n        \"userinfo_endpoint\": \"https://api.paypal.com/v1/oauth2/token/userinfo\",\n        \"authorization_endpoint\": \"https://www.paypal.com/signin/authorize\",\n        \"scopes\": [\n            \"openid\",\n            \"email\",\n        ],\n        \"set_user_root_attributes\": \"on_first_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n        \"connection_settings\": {\n            \"pkce\": \"auto\",\n        },\n        \"attribute_map\": {\n            \"mapping_mode\": \"use_map\",\n            \"userinfo_scope\": \"openid email profile groups\",\n            \"attributes\": json.dumps({\n                \"name\": \"${context.tokenset.name}\",\n                \"email\": \"${context.tokenset.email}\",\n                \"email_verified\": \"${context.tokenset.email_verified}\",\n                \"nickname\": \"${context.tokenset.nickname}\",\n                \"picture\": \"${context.tokenset.picture}\",\n                \"given_name\": \"${context.tokenset.given_name}\",\n                \"family_name\": \"${context.tokenset.family_name}\",\n            }),\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of an OIDC connection.\n    var oidc = new Auth0.Connection(\"oidc\", new()\n    {\n        Name = \"oidc-connection\",\n        DisplayName = \"OIDC Connection\",\n        Strategy = \"oidc\",\n        ShowAsButton = false,\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"1234567\",\n            ClientSecret = \"1234567\",\n            DomainAliases = new[]\n            {\n                \"example.com\",\n            },\n            TenantDomain = \"\",\n            IconUrl = \"https://example.com/assets/logo.png\",\n            Type = \"back_channel\",\n            Issuer = \"https://www.paypalobjects.com\",\n            JwksUri = \"https://api.paypal.com/v1/oauth2/certs\",\n            DiscoveryUrl = \"https://www.paypalobjects.com/.well-known/openid-configuration\",\n            TokenEndpoint = \"https://api.paypal.com/v1/oauth2/token\",\n            UserinfoEndpoint = \"https://api.paypal.com/v1/oauth2/token/userinfo\",\n            AuthorizationEndpoint = \"https://www.paypal.com/signin/authorize\",\n            Scopes = new[]\n            {\n                \"openid\",\n                \"email\",\n            },\n            SetUserRootAttributes = \"on_first_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n            ConnectionSettings = new Auth0.Inputs.ConnectionOptionsConnectionSettingsArgs\n            {\n                Pkce = \"auto\",\n            },\n            AttributeMap = new Auth0.Inputs.ConnectionOptionsAttributeMapArgs\n            {\n                MappingMode = \"use_map\",\n                UserinfoScope = \"openid email profile groups\",\n                Attributes = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"name\"] = \"${context.tokenset.name}\",\n                    [\"email\"] = \"${context.tokenset.email}\",\n                    [\"email_verified\"] = \"${context.tokenset.email_verified}\",\n                    [\"nickname\"] = \"${context.tokenset.nickname}\",\n                    [\"picture\"] = \"${context.tokenset.picture}\",\n                    [\"given_name\"] = \"${context.tokenset.given_name}\",\n                    [\"family_name\"] = \"${context.tokenset.family_name}\",\n                }),\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"name\":           \"${context.tokenset.name}\",\n\t\t\t\"email\":          \"${context.tokenset.email}\",\n\t\t\t\"email_verified\": \"${context.tokenset.email_verified}\",\n\t\t\t\"nickname\":       \"${context.tokenset.nickname}\",\n\t\t\t\"picture\":        \"${context.tokenset.picture}\",\n\t\t\t\"given_name\":     \"${context.tokenset.given_name}\",\n\t\t\t\"family_name\":    \"${context.tokenset.family_name}\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t// This is an example of an OIDC connection.\n\t\t_, err = auth0.NewConnection(ctx, \"oidc\", \u0026auth0.ConnectionArgs{\n\t\t\tName:         pulumi.String(\"oidc-connection\"),\n\t\t\tDisplayName:  pulumi.String(\"OIDC Connection\"),\n\t\t\tStrategy:     pulumi.String(\"oidc\"),\n\t\t\tShowAsButton: pulumi.Bool(false),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:     pulumi.String(\"1234567\"),\n\t\t\t\tClientSecret: pulumi.String(\"1234567\"),\n\t\t\t\tDomainAliases: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t\t},\n\t\t\t\tTenantDomain:          pulumi.String(\"\"),\n\t\t\t\tIconUrl:               pulumi.String(\"https://example.com/assets/logo.png\"),\n\t\t\t\tType:                  pulumi.String(\"back_channel\"),\n\t\t\t\tIssuer:                pulumi.String(\"https://www.paypalobjects.com\"),\n\t\t\t\tJwksUri:               pulumi.String(\"https://api.paypal.com/v1/oauth2/certs\"),\n\t\t\t\tDiscoveryUrl:          pulumi.String(\"https://www.paypalobjects.com/.well-known/openid-configuration\"),\n\t\t\t\tTokenEndpoint:         pulumi.String(\"https://api.paypal.com/v1/oauth2/token\"),\n\t\t\t\tUserinfoEndpoint:      pulumi.String(\"https://api.paypal.com/v1/oauth2/token/userinfo\"),\n\t\t\t\tAuthorizationEndpoint: pulumi.String(\"https://www.paypal.com/signin/authorize\"),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"openid\"),\n\t\t\t\t\tpulumi.String(\"email\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_first_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t\tConnectionSettings: \u0026auth0.ConnectionOptionsConnectionSettingsArgs{\n\t\t\t\t\tPkce: pulumi.String(\"auto\"),\n\t\t\t\t},\n\t\t\t\tAttributeMap: \u0026auth0.ConnectionOptionsAttributeMapArgs{\n\t\t\t\t\tMappingMode:   pulumi.String(\"use_map\"),\n\t\t\t\t\tUserinfoScope: pulumi.String(\"openid email profile groups\"),\n\t\t\t\t\tAttributes:    pulumi.String(json0),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsConnectionSettingsArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsAttributeMapArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of an OIDC connection.\n        var oidc = new Connection(\"oidc\", ConnectionArgs.builder()\n            .name(\"oidc-connection\")\n            .displayName(\"OIDC Connection\")\n            .strategy(\"oidc\")\n            .showAsButton(false)\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"1234567\")\n                .clientSecret(\"1234567\")\n                .domainAliases(\"example.com\")\n                .tenantDomain(\"\")\n                .iconUrl(\"https://example.com/assets/logo.png\")\n                .type(\"back_channel\")\n                .issuer(\"https://www.paypalobjects.com\")\n                .jwksUri(\"https://api.paypal.com/v1/oauth2/certs\")\n                .discoveryUrl(\"https://www.paypalobjects.com/.well-known/openid-configuration\")\n                .tokenEndpoint(\"https://api.paypal.com/v1/oauth2/token\")\n                .userinfoEndpoint(\"https://api.paypal.com/v1/oauth2/token/userinfo\")\n                .authorizationEndpoint(\"https://www.paypal.com/signin/authorize\")\n                .scopes(                \n                    \"openid\",\n                    \"email\")\n                .setUserRootAttributes(\"on_first_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .connectionSettings(ConnectionOptionsConnectionSettingsArgs.builder()\n                    .pkce(\"auto\")\n                    .build())\n                .attributeMap(ConnectionOptionsAttributeMapArgs.builder()\n                    .mappingMode(\"use_map\")\n                    .userinfoScope(\"openid email profile groups\")\n                    .attributes(serializeJson(\n                        jsonObject(\n                            jsonProperty(\"name\", \"${context.tokenset.name}\"),\n                            jsonProperty(\"email\", \"${context.tokenset.email}\"),\n                            jsonProperty(\"email_verified\", \"${context.tokenset.email_verified}\"),\n                            jsonProperty(\"nickname\", \"${context.tokenset.nickname}\"),\n                            jsonProperty(\"picture\", \"${context.tokenset.picture}\"),\n                            jsonProperty(\"given_name\", \"${context.tokenset.given_name}\"),\n                            jsonProperty(\"family_name\", \"${context.tokenset.family_name}\")\n                        )))\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of an OIDC connection.\n  oidc:\n    type: auth0:Connection\n    properties:\n      name: oidc-connection\n      displayName: OIDC Connection\n      strategy: oidc\n      showAsButton: false\n      options:\n        clientId: '1234567'\n        clientSecret: '1234567'\n        domainAliases:\n          - example.com\n        tenantDomain: \"\"\n        iconUrl: https://example.com/assets/logo.png\n        type: back_channel\n        issuer: https://www.paypalobjects.com\n        jwksUri: https://api.paypal.com/v1/oauth2/certs\n        discoveryUrl: https://www.paypalobjects.com/.well-known/openid-configuration\n        tokenEndpoint: https://api.paypal.com/v1/oauth2/token\n        userinfoEndpoint: https://api.paypal.com/v1/oauth2/token/userinfo\n        authorizationEndpoint: https://www.paypal.com/signin/authorize\n        scopes:\n          - openid\n          - email\n        setUserRootAttributes: on_first_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n        connectionSettings:\n          pkce: auto\n        attributeMap:\n          mappingMode: use_map\n          userinfoScope: openid email profile groups\n          attributes:\n            fn::toJSON:\n              name: $${context.tokenset.name}\n              email: $${context.tokenset.email}\n              email_verified: $${context.tokenset.email_verified}\n              nickname: $${context.tokenset.nickname}\n              picture: $${context.tokenset.picture}\n              given_name: $${context.tokenset.given_name}\n              family_name: $${context.tokenset.family_name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Okta Connection\n\n!\u003e When configuring an Okta Workforce connection, the \u003cspan pulumi-lang-nodejs=\"`scopes`\" pulumi-lang-dotnet=\"`Scopes`\" pulumi-lang-go=\"`scopes`\" pulumi-lang-python=\"`scopes`\" pulumi-lang-yaml=\"`scopes`\" pulumi-lang-java=\"`scopes`\"\u003e`scopes`\u003c/span\u003e attribute must be explicitly set. If omitted, the connection may not function correctly.\nTo ensure proper behavior, always specify:  `scopes = [\"openid\", \"profile\", \"email\"]`\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of an Okta Workforce connection.\nconst okta = new auth0.Connection(\"okta\", {\n    name: \"okta-connection\",\n    displayName: \"Okta Workforce Connection\",\n    strategy: \"okta\",\n    showAsButton: false,\n    options: {\n        clientId: \"1234567\",\n        clientSecret: \"1234567\",\n        domain: \"example.okta.com\",\n        domainAliases: [\"example.com\"],\n        issuer: \"https://example.okta.com\",\n        jwksUri: \"https://example.okta.com/oauth2/v1/keys\",\n        tokenEndpoint: \"https://example.okta.com/oauth2/v1/token\",\n        userinfoEndpoint: \"https://example.okta.com/oauth2/v1/userinfo\",\n        authorizationEndpoint: \"https://example.okta.com/oauth2/v1/authorize\",\n        scopes: [\n            \"openid\",\n            \"profile\",\n            \"email\",\n        ],\n        setUserRootAttributes: \"on_first_login\",\n        nonPersistentAttrs: [\n            \"ethnicity\",\n            \"gender\",\n        ],\n        upstreamParams: JSON.stringify({\n            screen_name: {\n                alias: \"login_hint\",\n            },\n        }),\n        connectionSettings: {\n            pkce: \"auto\",\n        },\n        attributeMap: {\n            mappingMode: \"basic_profile\",\n            userinfoScope: \"openid email profile groups\",\n            attributes: JSON.stringify({\n                name: \"${context.tokenset.name}\",\n                email: \"${context.tokenset.email}\",\n                email_verified: \"${context.tokenset.email_verified}\",\n                nickname: \"${context.tokenset.nickname}\",\n                picture: \"${context.tokenset.picture}\",\n                given_name: \"${context.tokenset.given_name}\",\n                family_name: \"${context.tokenset.family_name}\",\n            }),\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\n# This is an example of an Okta Workforce connection.\nokta = auth0.Connection(\"okta\",\n    name=\"okta-connection\",\n    display_name=\"Okta Workforce Connection\",\n    strategy=\"okta\",\n    show_as_button=False,\n    options={\n        \"client_id\": \"1234567\",\n        \"client_secret\": \"1234567\",\n        \"domain\": \"example.okta.com\",\n        \"domain_aliases\": [\"example.com\"],\n        \"issuer\": \"https://example.okta.com\",\n        \"jwks_uri\": \"https://example.okta.com/oauth2/v1/keys\",\n        \"token_endpoint\": \"https://example.okta.com/oauth2/v1/token\",\n        \"userinfo_endpoint\": \"https://example.okta.com/oauth2/v1/userinfo\",\n        \"authorization_endpoint\": \"https://example.okta.com/oauth2/v1/authorize\",\n        \"scopes\": [\n            \"openid\",\n            \"profile\",\n            \"email\",\n        ],\n        \"set_user_root_attributes\": \"on_first_login\",\n        \"non_persistent_attrs\": [\n            \"ethnicity\",\n            \"gender\",\n        ],\n        \"upstream_params\": json.dumps({\n            \"screen_name\": {\n                \"alias\": \"login_hint\",\n            },\n        }),\n        \"connection_settings\": {\n            \"pkce\": \"auto\",\n        },\n        \"attribute_map\": {\n            \"mapping_mode\": \"basic_profile\",\n            \"userinfo_scope\": \"openid email profile groups\",\n            \"attributes\": json.dumps({\n                \"name\": \"${context.tokenset.name}\",\n                \"email\": \"${context.tokenset.email}\",\n                \"email_verified\": \"${context.tokenset.email_verified}\",\n                \"nickname\": \"${context.tokenset.nickname}\",\n                \"picture\": \"${context.tokenset.picture}\",\n                \"given_name\": \"${context.tokenset.given_name}\",\n                \"family_name\": \"${context.tokenset.family_name}\",\n            }),\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of an Okta Workforce connection.\n    var okta = new Auth0.Connection(\"okta\", new()\n    {\n        Name = \"okta-connection\",\n        DisplayName = \"Okta Workforce Connection\",\n        Strategy = \"okta\",\n        ShowAsButton = false,\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"1234567\",\n            ClientSecret = \"1234567\",\n            Domain = \"example.okta.com\",\n            DomainAliases = new[]\n            {\n                \"example.com\",\n            },\n            Issuer = \"https://example.okta.com\",\n            JwksUri = \"https://example.okta.com/oauth2/v1/keys\",\n            TokenEndpoint = \"https://example.okta.com/oauth2/v1/token\",\n            UserinfoEndpoint = \"https://example.okta.com/oauth2/v1/userinfo\",\n            AuthorizationEndpoint = \"https://example.okta.com/oauth2/v1/authorize\",\n            Scopes = new[]\n            {\n                \"openid\",\n                \"profile\",\n                \"email\",\n            },\n            SetUserRootAttributes = \"on_first_login\",\n            NonPersistentAttrs = new[]\n            {\n                \"ethnicity\",\n                \"gender\",\n            },\n            UpstreamParams = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n            {\n                [\"screen_name\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"alias\"] = \"login_hint\",\n                },\n            }),\n            ConnectionSettings = new Auth0.Inputs.ConnectionOptionsConnectionSettingsArgs\n            {\n                Pkce = \"auto\",\n            },\n            AttributeMap = new Auth0.Inputs.ConnectionOptionsAttributeMapArgs\n            {\n                MappingMode = \"basic_profile\",\n                UserinfoScope = \"openid email profile groups\",\n                Attributes = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"name\"] = \"${context.tokenset.name}\",\n                    [\"email\"] = \"${context.tokenset.email}\",\n                    [\"email_verified\"] = \"${context.tokenset.email_verified}\",\n                    [\"nickname\"] = \"${context.tokenset.nickname}\",\n                    [\"picture\"] = \"${context.tokenset.picture}\",\n                    [\"given_name\"] = \"${context.tokenset.given_name}\",\n                    [\"family_name\"] = \"${context.tokenset.family_name}\",\n                }),\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"screen_name\": map[string]interface{}{\n\t\t\t\t\"alias\": \"login_hint\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"name\":           \"${context.tokenset.name}\",\n\t\t\t\"email\":          \"${context.tokenset.email}\",\n\t\t\t\"email_verified\": \"${context.tokenset.email_verified}\",\n\t\t\t\"nickname\":       \"${context.tokenset.nickname}\",\n\t\t\t\"picture\":        \"${context.tokenset.picture}\",\n\t\t\t\"given_name\":     \"${context.tokenset.given_name}\",\n\t\t\t\"family_name\":    \"${context.tokenset.family_name}\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\t// This is an example of an Okta Workforce connection.\n\t\t_, err = auth0.NewConnection(ctx, \"okta\", \u0026auth0.ConnectionArgs{\n\t\t\tName:         pulumi.String(\"okta-connection\"),\n\t\t\tDisplayName:  pulumi.String(\"Okta Workforce Connection\"),\n\t\t\tStrategy:     pulumi.String(\"okta\"),\n\t\t\tShowAsButton: pulumi.Bool(false),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:     pulumi.String(\"1234567\"),\n\t\t\t\tClientSecret: pulumi.String(\"1234567\"),\n\t\t\t\tDomain:       pulumi.String(\"example.okta.com\"),\n\t\t\t\tDomainAliases: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"example.com\"),\n\t\t\t\t},\n\t\t\t\tIssuer:                pulumi.String(\"https://example.okta.com\"),\n\t\t\t\tJwksUri:               pulumi.String(\"https://example.okta.com/oauth2/v1/keys\"),\n\t\t\t\tTokenEndpoint:         pulumi.String(\"https://example.okta.com/oauth2/v1/token\"),\n\t\t\t\tUserinfoEndpoint:      pulumi.String(\"https://example.okta.com/oauth2/v1/userinfo\"),\n\t\t\t\tAuthorizationEndpoint: pulumi.String(\"https://example.okta.com/oauth2/v1/authorize\"),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"openid\"),\n\t\t\t\t\tpulumi.String(\"profile\"),\n\t\t\t\t\tpulumi.String(\"email\"),\n\t\t\t\t},\n\t\t\t\tSetUserRootAttributes: pulumi.String(\"on_first_login\"),\n\t\t\t\tNonPersistentAttrs: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ethnicity\"),\n\t\t\t\t\tpulumi.String(\"gender\"),\n\t\t\t\t},\n\t\t\t\tUpstreamParams: pulumi.String(json0),\n\t\t\t\tConnectionSettings: \u0026auth0.ConnectionOptionsConnectionSettingsArgs{\n\t\t\t\t\tPkce: pulumi.String(\"auto\"),\n\t\t\t\t},\n\t\t\t\tAttributeMap: \u0026auth0.ConnectionOptionsAttributeMapArgs{\n\t\t\t\t\tMappingMode:   pulumi.String(\"basic_profile\"),\n\t\t\t\t\tUserinfoScope: pulumi.String(\"openid email profile groups\"),\n\t\t\t\t\tAttributes:    pulumi.String(json1),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsConnectionSettingsArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsAttributeMapArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of an Okta Workforce connection.\n        var okta = new Connection(\"okta\", ConnectionArgs.builder()\n            .name(\"okta-connection\")\n            .displayName(\"Okta Workforce Connection\")\n            .strategy(\"okta\")\n            .showAsButton(false)\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"1234567\")\n                .clientSecret(\"1234567\")\n                .domain(\"example.okta.com\")\n                .domainAliases(\"example.com\")\n                .issuer(\"https://example.okta.com\")\n                .jwksUri(\"https://example.okta.com/oauth2/v1/keys\")\n                .tokenEndpoint(\"https://example.okta.com/oauth2/v1/token\")\n                .userinfoEndpoint(\"https://example.okta.com/oauth2/v1/userinfo\")\n                .authorizationEndpoint(\"https://example.okta.com/oauth2/v1/authorize\")\n                .scopes(                \n                    \"openid\",\n                    \"profile\",\n                    \"email\")\n                .setUserRootAttributes(\"on_first_login\")\n                .nonPersistentAttrs(                \n                    \"ethnicity\",\n                    \"gender\")\n                .upstreamParams(serializeJson(\n                    jsonObject(\n                        jsonProperty(\"screen_name\", jsonObject(\n                            jsonProperty(\"alias\", \"login_hint\")\n                        ))\n                    )))\n                .connectionSettings(ConnectionOptionsConnectionSettingsArgs.builder()\n                    .pkce(\"auto\")\n                    .build())\n                .attributeMap(ConnectionOptionsAttributeMapArgs.builder()\n                    .mappingMode(\"basic_profile\")\n                    .userinfoScope(\"openid email profile groups\")\n                    .attributes(serializeJson(\n                        jsonObject(\n                            jsonProperty(\"name\", \"${context.tokenset.name}\"),\n                            jsonProperty(\"email\", \"${context.tokenset.email}\"),\n                            jsonProperty(\"email_verified\", \"${context.tokenset.email_verified}\"),\n                            jsonProperty(\"nickname\", \"${context.tokenset.nickname}\"),\n                            jsonProperty(\"picture\", \"${context.tokenset.picture}\"),\n                            jsonProperty(\"given_name\", \"${context.tokenset.given_name}\"),\n                            jsonProperty(\"family_name\", \"${context.tokenset.family_name}\")\n                        )))\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of an Okta Workforce connection.\n  okta:\n    type: auth0:Connection\n    properties:\n      name: okta-connection\n      displayName: Okta Workforce Connection\n      strategy: okta\n      showAsButton: false\n      options:\n        clientId: '1234567'\n        clientSecret: '1234567'\n        domain: example.okta.com\n        domainAliases:\n          - example.com\n        issuer: https://example.okta.com\n        jwksUri: https://example.okta.com/oauth2/v1/keys\n        tokenEndpoint: https://example.okta.com/oauth2/v1/token\n        userinfoEndpoint: https://example.okta.com/oauth2/v1/userinfo\n        authorizationEndpoint: https://example.okta.com/oauth2/v1/authorize\n        scopes:\n          - openid\n          - profile\n          - email\n        setUserRootAttributes: on_first_login\n        nonPersistentAttrs:\n          - ethnicity\n          - gender\n        upstreamParams:\n          fn::toJSON:\n            screen_name:\n              alias: login_hint\n        connectionSettings:\n          pkce: auto\n        attributeMap:\n          mappingMode: basic_profile\n          userinfoScope: openid email profile groups\n          attributes:\n            fn::toJSON:\n              name: $${context.tokenset.name}\n              email: $${context.tokenset.email}\n              email_verified: $${context.tokenset.email_verified}\n              nickname: $${context.tokenset.nickname}\n              picture: $${context.tokenset.picture}\n              given_name: $${context.tokenset.given_name}\n              family_name: $${context.tokenset.family_name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the connection ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/connection:Connection google \"con_a17f21fdb24d48a0\"\n```\n\n",
            "properties": {
                "authentication": {
                    "$ref": "#/types/auth0:index/ConnectionAuthentication:ConnectionAuthentication",
                    "description": "Configure the purpose of a connection to be used for authentication during login.\n"
                },
                "connectedAccounts": {
                    "$ref": "#/types/auth0:index/ConnectionConnectedAccounts:ConnectionConnectedAccounts",
                    "description": "Configure the purpose of a connection to be used for connected accounts and Token Vault.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name used in login screen.\n"
                },
                "isDomainConnection": {
                    "type": "boolean",
                    "description": "Indicates whether the connection is domain level.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the connection, in the form of a map of string values (max 255 chars).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection. This value is immutable and changing it requires the creation of a new resource.\n"
                },
                "options": {
                    "$ref": "#/types/auth0:index/ConnectionOptions:ConnectionOptions",
                    "description": "Configuration settings for connection options.\n"
                },
                "realms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the realms for which the connection will be used (e.g., email domains). If not specified, the connection name is added as the realm.\n"
                },
                "showAsButton": {
                    "type": "boolean",
                    "description": "Display connection as a button. Only available on enterprise connections.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "Type of the connection, which indicates the identity provider.\n"
                }
            },
            "required": [
                "authentication",
                "connectedAccounts",
                "displayName",
                "isDomainConnection",
                "name",
                "options",
                "realms",
                "strategy"
            ],
            "inputProperties": {
                "authentication": {
                    "$ref": "#/types/auth0:index/ConnectionAuthentication:ConnectionAuthentication",
                    "description": "Configure the purpose of a connection to be used for authentication during login.\n"
                },
                "connectedAccounts": {
                    "$ref": "#/types/auth0:index/ConnectionConnectedAccounts:ConnectionConnectedAccounts",
                    "description": "Configure the purpose of a connection to be used for connected accounts and Token Vault.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name used in login screen.\n"
                },
                "isDomainConnection": {
                    "type": "boolean",
                    "description": "Indicates whether the connection is domain level.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the connection, in the form of a map of string values (max 255 chars).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection. This value is immutable and changing it requires the creation of a new resource.\n",
                    "willReplaceOnChanges": true
                },
                "options": {
                    "$ref": "#/types/auth0:index/ConnectionOptions:ConnectionOptions",
                    "description": "Configuration settings for connection options.\n"
                },
                "realms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the realms for which the connection will be used (e.g., email domains). If not specified, the connection name is added as the realm.\n"
                },
                "showAsButton": {
                    "type": "boolean",
                    "description": "Display connection as a button. Only available on enterprise connections.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "Type of the connection, which indicates the identity provider.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Connection resources.\n",
                "properties": {
                    "authentication": {
                        "$ref": "#/types/auth0:index/ConnectionAuthentication:ConnectionAuthentication",
                        "description": "Configure the purpose of a connection to be used for authentication during login.\n"
                    },
                    "connectedAccounts": {
                        "$ref": "#/types/auth0:index/ConnectionConnectedAccounts:ConnectionConnectedAccounts",
                        "description": "Configure the purpose of a connection to be used for connected accounts and Token Vault.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name used in login screen.\n"
                    },
                    "isDomainConnection": {
                        "type": "boolean",
                        "description": "Indicates whether the connection is domain level.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata associated with the connection, in the form of a map of string values (max 255 chars).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the connection. This value is immutable and changing it requires the creation of a new resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "options": {
                        "$ref": "#/types/auth0:index/ConnectionOptions:ConnectionOptions",
                        "description": "Configuration settings for connection options.\n"
                    },
                    "realms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the realms for which the connection will be used (e.g., email domains). If not specified, the connection name is added as the realm.\n"
                    },
                    "showAsButton": {
                        "type": "boolean",
                        "description": "Display connection as a button. Only available on enterprise connections.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "Type of the connection, which indicates the identity provider.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/connectionClient:ConnectionClient": {
            "description": "With this resource, you can enable a single client on a connection.\n\n!\u003e This resource appends an enabled client to a connection. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.ConnectionClients`\" pulumi-lang-dotnet=\"`auth0.ConnectionClients`\" pulumi-lang-go=\"`ConnectionClients`\" pulumi-lang-python=\"`ConnectionClients`\" pulumi-lang-yaml=\"`auth0.ConnectionClients`\" pulumi-lang-java=\"`auth0.ConnectionClients`\"\u003e`auth0.ConnectionClients`\u003c/span\u003e resource\nmanages all the clients enabled for a connection. To avoid potential issues, it is recommended not to use this\nresource in conjunction with the \u003cspan pulumi-lang-nodejs=\"`auth0.ConnectionClients`\" pulumi-lang-dotnet=\"`auth0.ConnectionClients`\" pulumi-lang-go=\"`ConnectionClients`\" pulumi-lang-python=\"`ConnectionClients`\" pulumi-lang-yaml=\"`auth0.ConnectionClients`\" pulumi-lang-java=\"`auth0.ConnectionClients`\"\u003e`auth0.ConnectionClients`\u003c/span\u003e resource when managing enabled clients for the\nsame connection id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myConn = new auth0.Connection(\"my_conn\", {\n    name: \"My-Auth0-Connection\",\n    strategy: \"auth0\",\n});\nconst myClient = new auth0.Client(\"my_client\", {name: \"My-Auth0-Client\"});\n// One connection to one client association.\n// To prevent issues, avoid using this resource together with the `auth0_connection_clients` resource.\nconst myConnClientAssoc = new auth0.ConnectionClient(\"my_conn_client_assoc\", {\n    connectionId: myConn.id,\n    clientId: myClient.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_conn = auth0.Connection(\"my_conn\",\n    name=\"My-Auth0-Connection\",\n    strategy=\"auth0\")\nmy_client = auth0.Client(\"my_client\", name=\"My-Auth0-Client\")\n# One connection to one client association.\n# To prevent issues, avoid using this resource together with the `auth0_connection_clients` resource.\nmy_conn_client_assoc = auth0.ConnectionClient(\"my_conn_client_assoc\",\n    connection_id=my_conn.id,\n    client_id=my_client.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myConn = new Auth0.Connection(\"my_conn\", new()\n    {\n        Name = \"My-Auth0-Connection\",\n        Strategy = \"auth0\",\n    });\n\n    var myClient = new Auth0.Client(\"my_client\", new()\n    {\n        Name = \"My-Auth0-Client\",\n    });\n\n    // One connection to one client association.\n    // To prevent issues, avoid using this resource together with the `auth0_connection_clients` resource.\n    var myConnClientAssoc = new Auth0.ConnectionClient(\"my_conn_client_assoc\", new()\n    {\n        ConnectionId = myConn.Id,\n        ClientId = myClient.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyConn, err := auth0.NewConnection(ctx, \"my_conn\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"My-Auth0-Connection\"),\n\t\t\tStrategy: pulumi.String(\"auth0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyClient, err := auth0.NewClient(ctx, \"my_client\", \u0026auth0.ClientArgs{\n\t\t\tName: pulumi.String(\"My-Auth0-Client\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// One connection to one client association.\n\t\t// To prevent issues, avoid using this resource together with the `auth0_connection_clients` resource.\n\t\t_, err = auth0.NewConnectionClient(ctx, \"my_conn_client_assoc\", \u0026auth0.ConnectionClientArgs{\n\t\t\tConnectionId: myConn.ID(),\n\t\t\tClientId:     myClient.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.Client;\nimport com.pulumi.auth0.ClientArgs;\nimport com.pulumi.auth0.ConnectionClient;\nimport com.pulumi.auth0.ConnectionClientArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myConn = new Connection(\"myConn\", ConnectionArgs.builder()\n            .name(\"My-Auth0-Connection\")\n            .strategy(\"auth0\")\n            .build());\n\n        var myClient = new Client(\"myClient\", ClientArgs.builder()\n            .name(\"My-Auth0-Client\")\n            .build());\n\n        // One connection to one client association.\n        // To prevent issues, avoid using this resource together with the `auth0_connection_clients` resource.\n        var myConnClientAssoc = new ConnectionClient(\"myConnClientAssoc\", ConnectionClientArgs.builder()\n            .connectionId(myConn.id())\n            .clientId(myClient.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myConn:\n    type: auth0:Connection\n    name: my_conn\n    properties:\n      name: My-Auth0-Connection\n      strategy: auth0\n  myClient:\n    type: auth0:Client\n    name: my_client\n    properties:\n      name: My-Auth0-Client\n  # One connection to one client association.\n  # To prevent issues, avoid using this resource together with the `auth0_connection_clients` resource.\n  myConnClientAssoc:\n    type: auth0:ConnectionClient\n    name: my_conn_client_assoc\n    properties:\n      connectionId: ${myConn.id}\n      clientId: ${myClient.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\nconnection ID and client ID separated by \"::\" (note the double colon)\n\n\u003cconnectionID\u003e::\u003cclientID\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/connectionClient:ConnectionClient my_conn_client_assoc \"con_XXXXX::XXXXXXXX\"\n```\n\n",
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "ID of the client for which the connection is enabled.\n"
                },
                "connectionId": {
                    "type": "string",
                    "description": "ID of the connection on which to enable the client.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the connection on which to enable the client.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy of the connection on which to enable the client.\n"
                }
            },
            "required": [
                "clientId",
                "connectionId",
                "name",
                "strategy"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string",
                    "description": "ID of the client for which the connection is enabled.\n",
                    "willReplaceOnChanges": true
                },
                "connectionId": {
                    "type": "string",
                    "description": "ID of the connection on which to enable the client.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clientId",
                "connectionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConnectionClient resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "ID of the client for which the connection is enabled.\n",
                        "willReplaceOnChanges": true
                    },
                    "connectionId": {
                        "type": "string",
                        "description": "ID of the connection on which to enable the client.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the connection on which to enable the client.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "The strategy of the connection on which to enable the client.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/connectionClients:ConnectionClients": {
            "description": "With this resource, you can manage all of the enabled clients on a connection.\n\n!\u003e This resource manages all the enabled clients for a connection. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.ConnectionClient`\" pulumi-lang-dotnet=\"`auth0.ConnectionClient`\" pulumi-lang-go=\"`ConnectionClient`\" pulumi-lang-python=\"`ConnectionClient`\" pulumi-lang-yaml=\"`auth0.ConnectionClient`\" pulumi-lang-java=\"`auth0.ConnectionClient`\"\u003e`auth0.ConnectionClient`\u003c/span\u003e resource\nappends an enabled client to a connection. To avoid potential issues, it is recommended not to use this\nresource in conjunction with the \u003cspan pulumi-lang-nodejs=\"`auth0.ConnectionClient`\" pulumi-lang-dotnet=\"`auth0.ConnectionClient`\" pulumi-lang-go=\"`ConnectionClient`\" pulumi-lang-python=\"`ConnectionClient`\" pulumi-lang-yaml=\"`auth0.ConnectionClient`\" pulumi-lang-java=\"`auth0.ConnectionClient`\"\u003e`auth0.ConnectionClient`\u003c/span\u003e resource when managing enabled clients for the same\nconnection id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myConn = new auth0.Connection(\"my_conn\", {\n    name: \"My-Auth0-Connection\",\n    strategy: \"auth0\",\n});\nconst myFirstClient = new auth0.Client(\"my_first_client\", {name: \"My-First-Auth0-Client\"});\nconst mySecondClient = new auth0.Client(\"my_second_client\", {name: \"My-Second-Auth0-Client\"});\n// One connection to many clients association.\n// To prevent issues, avoid using this resource together with the `auth0_connection_client` resource.\nconst myConnClientsAssoc = new auth0.ConnectionClients(\"my_conn_clients_assoc\", {\n    connectionId: myConn.id,\n    enabledClients: [\n        myFirstClient.id,\n        mySecondClient.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_conn = auth0.Connection(\"my_conn\",\n    name=\"My-Auth0-Connection\",\n    strategy=\"auth0\")\nmy_first_client = auth0.Client(\"my_first_client\", name=\"My-First-Auth0-Client\")\nmy_second_client = auth0.Client(\"my_second_client\", name=\"My-Second-Auth0-Client\")\n# One connection to many clients association.\n# To prevent issues, avoid using this resource together with the `auth0_connection_client` resource.\nmy_conn_clients_assoc = auth0.ConnectionClients(\"my_conn_clients_assoc\",\n    connection_id=my_conn.id,\n    enabled_clients=[\n        my_first_client.id,\n        my_second_client.id,\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myConn = new Auth0.Connection(\"my_conn\", new()\n    {\n        Name = \"My-Auth0-Connection\",\n        Strategy = \"auth0\",\n    });\n\n    var myFirstClient = new Auth0.Client(\"my_first_client\", new()\n    {\n        Name = \"My-First-Auth0-Client\",\n    });\n\n    var mySecondClient = new Auth0.Client(\"my_second_client\", new()\n    {\n        Name = \"My-Second-Auth0-Client\",\n    });\n\n    // One connection to many clients association.\n    // To prevent issues, avoid using this resource together with the `auth0_connection_client` resource.\n    var myConnClientsAssoc = new Auth0.ConnectionClients(\"my_conn_clients_assoc\", new()\n    {\n        ConnectionId = myConn.Id,\n        EnabledClients = new[]\n        {\n            myFirstClient.Id,\n            mySecondClient.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyConn, err := auth0.NewConnection(ctx, \"my_conn\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"My-Auth0-Connection\"),\n\t\t\tStrategy: pulumi.String(\"auth0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyFirstClient, err := auth0.NewClient(ctx, \"my_first_client\", \u0026auth0.ClientArgs{\n\t\t\tName: pulumi.String(\"My-First-Auth0-Client\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmySecondClient, err := auth0.NewClient(ctx, \"my_second_client\", \u0026auth0.ClientArgs{\n\t\t\tName: pulumi.String(\"My-Second-Auth0-Client\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// One connection to many clients association.\n\t\t// To prevent issues, avoid using this resource together with the `auth0_connection_client` resource.\n\t\t_, err = auth0.NewConnectionClients(ctx, \"my_conn_clients_assoc\", \u0026auth0.ConnectionClientsArgs{\n\t\t\tConnectionId: myConn.ID(),\n\t\t\tEnabledClients: pulumi.StringArray{\n\t\t\t\tmyFirstClient.ID(),\n\t\t\t\tmySecondClient.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.Client;\nimport com.pulumi.auth0.ClientArgs;\nimport com.pulumi.auth0.ConnectionClients;\nimport com.pulumi.auth0.ConnectionClientsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myConn = new Connection(\"myConn\", ConnectionArgs.builder()\n            .name(\"My-Auth0-Connection\")\n            .strategy(\"auth0\")\n            .build());\n\n        var myFirstClient = new Client(\"myFirstClient\", ClientArgs.builder()\n            .name(\"My-First-Auth0-Client\")\n            .build());\n\n        var mySecondClient = new Client(\"mySecondClient\", ClientArgs.builder()\n            .name(\"My-Second-Auth0-Client\")\n            .build());\n\n        // One connection to many clients association.\n        // To prevent issues, avoid using this resource together with the `auth0_connection_client` resource.\n        var myConnClientsAssoc = new ConnectionClients(\"myConnClientsAssoc\", ConnectionClientsArgs.builder()\n            .connectionId(myConn.id())\n            .enabledClients(            \n                myFirstClient.id(),\n                mySecondClient.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myConn:\n    type: auth0:Connection\n    name: my_conn\n    properties:\n      name: My-Auth0-Connection\n      strategy: auth0\n  myFirstClient:\n    type: auth0:Client\n    name: my_first_client\n    properties:\n      name: My-First-Auth0-Client\n  mySecondClient:\n    type: auth0:Client\n    name: my_second_client\n    properties:\n      name: My-Second-Auth0-Client\n  # One connection to many clients association.\n  # To prevent issues, avoid using this resource together with the `auth0_connection_client` resource.\n  myConnClientsAssoc:\n    type: auth0:ConnectionClients\n    name: my_conn_clients_assoc\n    properties:\n      connectionId: ${myConn.id}\n      enabledClients:\n        - ${myFirstClient.id}\n        - ${mySecondClient.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the Connection ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/connectionClients:ConnectionClients my_conn_clients_assoc \"con_XXXXX\"\n```\n\n",
            "properties": {
                "connectionId": {
                    "type": "string",
                    "description": "ID of the connection on which to enable the client.\n"
                },
                "enabledClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the clients for which the connection is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the connection on which to enable the client.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy of the connection on which to enable the client.\n"
                }
            },
            "required": [
                "connectionId",
                "enabledClients",
                "name",
                "strategy"
            ],
            "inputProperties": {
                "connectionId": {
                    "type": "string",
                    "description": "ID of the connection on which to enable the client.\n",
                    "willReplaceOnChanges": true
                },
                "enabledClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the clients for which the connection is enabled.\n"
                }
            },
            "requiredInputs": [
                "connectionId",
                "enabledClients"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConnectionClients resources.\n",
                "properties": {
                    "connectionId": {
                        "type": "string",
                        "description": "ID of the connection on which to enable the client.\n",
                        "willReplaceOnChanges": true
                    },
                    "enabledClients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IDs of the clients for which the connection is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the connection on which to enable the client.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "The strategy of the connection on which to enable the client.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/connectionKeys:ConnectionKeys": {
            "description": "Client Assertion JWT is a more secure alternative to client secret authentication for OIDC and Okta Workforce connections. It uses a signed JWT instead of a shared secret to authenticate the client. The resource only supports key rotation. Use the\u003cspan pulumi-lang-nodejs=\" auth0.ConnectionKeys \" pulumi-lang-dotnet=\" auth0.ConnectionKeys \" pulumi-lang-go=\" ConnectionKeys \" pulumi-lang-python=\" ConnectionKeys \" pulumi-lang-yaml=\" auth0.ConnectionKeys \" pulumi-lang-java=\" auth0.ConnectionKeys \"\u003e auth0.ConnectionKeys \u003c/span\u003edata source to read existing keys. Removing the resource from configuration will NOT DELETE the key.\n\n!\u003e The triggers field is only a placeholder for an arbitrary map used to signal the provider\nto perform a key rotation whenever any update is made.\nIf the resource is removed from the configuration, the keys will not be deleted.\n\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myClient = new auth0.Client(\"my_client\", {name: \"My-Auth0-Client\"});\nconst oidc = new auth0.Connection(\"oidc\", {\n    name: \"OIDC-Connection\",\n    strategy: \"oidc\",\n    options: {\n        clientId: myClient.id,\n        scopes: [\n            \"ext_nested_groups\",\n            \"openid\",\n        ],\n        issuer: \"https://example.com\",\n        authorizationEndpoint: \"https://example.com\",\n        jwksUri: \"https://example.com/jwks\",\n        type: \"front_channel\",\n        discoveryUrl: \"https://www.paypalobjects.com/.well-known/openid-configuration\",\n        tokenEndpointAuthMethod: \"private_key_jwt\",\n        tokenEndpointAuthSigningAlg: \"RS256\",\n    },\n});\n// Resource used to rotate the keys for above OIDC connection\nconst myKeys = new auth0.ConnectionKeys(\"my_keys\", {\n    connectionId: oidc.id,\n    triggers: {\n        version: \"1\",\n        date: \"2023-10-01T00:00:00Z\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_client = auth0.Client(\"my_client\", name=\"My-Auth0-Client\")\noidc = auth0.Connection(\"oidc\",\n    name=\"OIDC-Connection\",\n    strategy=\"oidc\",\n    options={\n        \"client_id\": my_client.id,\n        \"scopes\": [\n            \"ext_nested_groups\",\n            \"openid\",\n        ],\n        \"issuer\": \"https://example.com\",\n        \"authorization_endpoint\": \"https://example.com\",\n        \"jwks_uri\": \"https://example.com/jwks\",\n        \"type\": \"front_channel\",\n        \"discovery_url\": \"https://www.paypalobjects.com/.well-known/openid-configuration\",\n        \"token_endpoint_auth_method\": \"private_key_jwt\",\n        \"token_endpoint_auth_signing_alg\": \"RS256\",\n    })\n# Resource used to rotate the keys for above OIDC connection\nmy_keys = auth0.ConnectionKeys(\"my_keys\",\n    connection_id=oidc.id,\n    triggers={\n        \"version\": \"1\",\n        \"date\": \"2023-10-01T00:00:00Z\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myClient = new Auth0.Client(\"my_client\", new()\n    {\n        Name = \"My-Auth0-Client\",\n    });\n\n    var oidc = new Auth0.Connection(\"oidc\", new()\n    {\n        Name = \"OIDC-Connection\",\n        Strategy = \"oidc\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = myClient.Id,\n            Scopes = new[]\n            {\n                \"ext_nested_groups\",\n                \"openid\",\n            },\n            Issuer = \"https://example.com\",\n            AuthorizationEndpoint = \"https://example.com\",\n            JwksUri = \"https://example.com/jwks\",\n            Type = \"front_channel\",\n            DiscoveryUrl = \"https://www.paypalobjects.com/.well-known/openid-configuration\",\n            TokenEndpointAuthMethod = \"private_key_jwt\",\n            TokenEndpointAuthSigningAlg = \"RS256\",\n        },\n    });\n\n    // Resource used to rotate the keys for above OIDC connection\n    var myKeys = new Auth0.ConnectionKeys(\"my_keys\", new()\n    {\n        ConnectionId = oidc.Id,\n        Triggers = \n        {\n            { \"version\", \"1\" },\n            { \"date\", \"2023-10-01T00:00:00Z\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyClient, err := auth0.NewClient(ctx, \"my_client\", \u0026auth0.ClientArgs{\n\t\t\tName: pulumi.String(\"My-Auth0-Client\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\toidc, err := auth0.NewConnection(ctx, \"oidc\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"OIDC-Connection\"),\n\t\t\tStrategy: pulumi.String(\"oidc\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId: myClient.ID(),\n\t\t\t\tScopes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"ext_nested_groups\"),\n\t\t\t\t\tpulumi.String(\"openid\"),\n\t\t\t\t},\n\t\t\t\tIssuer:                      pulumi.String(\"https://example.com\"),\n\t\t\t\tAuthorizationEndpoint:       pulumi.String(\"https://example.com\"),\n\t\t\t\tJwksUri:                     pulumi.String(\"https://example.com/jwks\"),\n\t\t\t\tType:                        pulumi.String(\"front_channel\"),\n\t\t\t\tDiscoveryUrl:                pulumi.String(\"https://www.paypalobjects.com/.well-known/openid-configuration\"),\n\t\t\t\tTokenEndpointAuthMethod:     pulumi.String(\"private_key_jwt\"),\n\t\t\t\tTokenEndpointAuthSigningAlg: pulumi.String(\"RS256\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Resource used to rotate the keys for above OIDC connection\n\t\t_, err = auth0.NewConnectionKeys(ctx, \"my_keys\", \u0026auth0.ConnectionKeysArgs{\n\t\t\tConnectionId: oidc.ID(),\n\t\t\tTriggers: pulumi.StringMap{\n\t\t\t\t\"version\": pulumi.String(\"1\"),\n\t\t\t\t\"date\":    pulumi.String(\"2023-10-01T00:00:00Z\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Client;\nimport com.pulumi.auth0.ClientArgs;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport com.pulumi.auth0.ConnectionKeys;\nimport com.pulumi.auth0.ConnectionKeysArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myClient = new Client(\"myClient\", ClientArgs.builder()\n            .name(\"My-Auth0-Client\")\n            .build());\n\n        var oidc = new Connection(\"oidc\", ConnectionArgs.builder()\n            .name(\"OIDC-Connection\")\n            .strategy(\"oidc\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(myClient.id())\n                .scopes(                \n                    \"ext_nested_groups\",\n                    \"openid\")\n                .issuer(\"https://example.com\")\n                .authorizationEndpoint(\"https://example.com\")\n                .jwksUri(\"https://example.com/jwks\")\n                .type(\"front_channel\")\n                .discoveryUrl(\"https://www.paypalobjects.com/.well-known/openid-configuration\")\n                .tokenEndpointAuthMethod(\"private_key_jwt\")\n                .tokenEndpointAuthSigningAlg(\"RS256\")\n                .build())\n            .build());\n\n        // Resource used to rotate the keys for above OIDC connection\n        var myKeys = new ConnectionKeys(\"myKeys\", ConnectionKeysArgs.builder()\n            .connectionId(oidc.id())\n            .triggers(Map.ofEntries(\n                Map.entry(\"version\", \"1\"),\n                Map.entry(\"date\", \"2023-10-01T00:00:00Z\")\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myClient:\n    type: auth0:Client\n    name: my_client\n    properties:\n      name: My-Auth0-Client\n  oidc:\n    type: auth0:Connection\n    properties:\n      name: OIDC-Connection\n      strategy: oidc\n      options:\n        clientId: ${myClient.id}\n        scopes:\n          - ext_nested_groups\n          - openid\n        issuer: https://example.com\n        authorizationEndpoint: https://example.com\n        jwksUri: https://example.com/jwks\n        type: front_channel\n        discoveryUrl: https://www.paypalobjects.com/.well-known/openid-configuration\n        tokenEndpointAuthMethod: private_key_jwt\n        tokenEndpointAuthSigningAlg: RS256\n  # Resource used to rotate the keys for above OIDC connection\n  myKeys:\n    type: auth0:ConnectionKeys\n    name: my_keys\n    properties:\n      connectionId: ${oidc.id}\n      triggers:\n        version: '1'\n        date: 2023-10-01T00:00:00Z\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The signing key algorithm.\n"
                },
                "cert": {
                    "type": "string",
                    "description": "The public certificate of the signing key.\n"
                },
                "connectionId": {
                    "type": "string"
                },
                "current": {
                    "type": "boolean",
                    "description": "True if the key is the current key.\n"
                },
                "currentSince": {
                    "type": "string",
                    "description": "The date and time when the key became the current key.\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "The certificate fingerprint.\n"
                },
                "keyUse": {
                    "type": "string",
                    "description": "The signing key use, whether for encryption or signing.\n"
                },
                "kid": {
                    "type": "string",
                    "description": "The key ID of the signing key.\n"
                },
                "next": {
                    "type": "boolean",
                    "description": "True if the key is the next key.\n"
                },
                "pkcs": {
                    "type": "string",
                    "description": "The public certificate of the signing key in PKCS7 format.\n"
                },
                "previous": {
                    "type": "boolean",
                    "description": "True if the key is the previous key.\n"
                },
                "subjectDn": {
                    "type": "string",
                    "description": "The subject distinguished name (DN) of the certificate.\n"
                },
                "thumbprint": {
                    "type": "string",
                    "description": "The certificate thumbprint.\n"
                },
                "triggers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "This is an arbitrary map, which when edited shall perform rotation of keys for the corresponding connection. It can host keys like version, timestamp of last rotation etc.The field has no association with API\n"
                }
            },
            "required": [
                "algorithm",
                "cert",
                "connectionId",
                "current",
                "currentSince",
                "fingerprint",
                "keyUse",
                "kid",
                "next",
                "pkcs",
                "previous",
                "subjectDn",
                "thumbprint",
                "triggers"
            ],
            "inputProperties": {
                "connectionId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "triggers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "This is an arbitrary map, which when edited shall perform rotation of keys for the corresponding connection. It can host keys like version, timestamp of last rotation etc.The field has no association with API\n"
                }
            },
            "requiredInputs": [
                "connectionId",
                "triggers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConnectionKeys resources.\n",
                "properties": {
                    "algorithm": {
                        "type": "string",
                        "description": "The signing key algorithm.\n"
                    },
                    "cert": {
                        "type": "string",
                        "description": "The public certificate of the signing key.\n"
                    },
                    "connectionId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "current": {
                        "type": "boolean",
                        "description": "True if the key is the current key.\n"
                    },
                    "currentSince": {
                        "type": "string",
                        "description": "The date and time when the key became the current key.\n"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "The certificate fingerprint.\n"
                    },
                    "keyUse": {
                        "type": "string",
                        "description": "The signing key use, whether for encryption or signing.\n"
                    },
                    "kid": {
                        "type": "string",
                        "description": "The key ID of the signing key.\n"
                    },
                    "next": {
                        "type": "boolean",
                        "description": "True if the key is the next key.\n"
                    },
                    "pkcs": {
                        "type": "string",
                        "description": "The public certificate of the signing key in PKCS7 format.\n"
                    },
                    "previous": {
                        "type": "boolean",
                        "description": "True if the key is the previous key.\n"
                    },
                    "subjectDn": {
                        "type": "string",
                        "description": "The subject distinguished name (DN) of the certificate.\n"
                    },
                    "thumbprint": {
                        "type": "string",
                        "description": "The certificate thumbprint.\n"
                    },
                    "triggers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "This is an arbitrary map, which when edited shall perform rotation of keys for the corresponding connection. It can host keys like version, timestamp of last rotation etc.The field has no association with API\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/connectionScimConfiguration:ConnectionScimConfiguration": {
            "description": "With this resource, you can configure [SCIM(System for Cross-domain Identity Management)](https://simplecloud.info/) support for `SAML` and `OpenID Connect` Enterprise connections.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myEnterpriseConnection = new auth0.Connection(\"my_enterprise_connection\", {\n    name: \"my-enterprise-connection\",\n    displayName: \"My Enterprise Connection\",\n    strategy: \"okta\",\n    options: {\n        clientId: \"1234567\",\n        clientSecret: \"1234567\",\n        issuer: \"https://example.okta.com\",\n        jwksUri: \"https://example.okta.com/oauth2/v1/keys\",\n        tokenEndpoint: \"https://example.okta.com/oauth2/v1/token\",\n        authorizationEndpoint: \"https://example.okta.com/oauth2/v1/authorize\",\n    },\n});\nconst myEnterpriseConnection2 = new auth0.Connection(\"my_enterprise_connection_2\", {\n    name: \"my-enterprise-connection-2\",\n    displayName: \"My Enterprise Connection 2\",\n    strategy: \"okta\",\n    options: {\n        clientId: \"1234567\",\n        clientSecret: \"1234567\",\n        issuer: \"https://example.okta.com\",\n        jwksUri: \"https://example.okta.com/oauth2/v1/keys\",\n        tokenEndpoint: \"https://example.okta.com/oauth2/v1/token\",\n        authorizationEndpoint: \"https://example.okta.com/oauth2/v1/authorize\",\n    },\n});\n// A resource for configuring an Auth0 Connection SCIM Configuration, using default values.\n// Only one can be specified for a connection.\nconst myConnScimConfigurationDefault = new auth0.ConnectionScimConfiguration(\"my_conn_scim_configuration_default\", {connectionId: myEnterpriseConnection.id});\n// A resource for configuring an Auth0 Connection SCIM Configuration, specifying `user_id_attribute` and `mapping`.\n// Only one can be specified for a connection.\nconst myConnScimConfiguration = new auth0.ConnectionScimConfiguration(\"my_conn_scim_configuration\", {\n    connectionId: myEnterpriseConnection2.id,\n    userIdAttribute: \"attribute1\",\n    mappings: [\n        {\n            auth0: \"auth0_attribute1\",\n            scim: \"sacim_attribute1\",\n        },\n        {\n            auth0: \"auth0_attribute2\",\n            scim: \"sacim_attribute2\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_enterprise_connection = auth0.Connection(\"my_enterprise_connection\",\n    name=\"my-enterprise-connection\",\n    display_name=\"My Enterprise Connection\",\n    strategy=\"okta\",\n    options={\n        \"client_id\": \"1234567\",\n        \"client_secret\": \"1234567\",\n        \"issuer\": \"https://example.okta.com\",\n        \"jwks_uri\": \"https://example.okta.com/oauth2/v1/keys\",\n        \"token_endpoint\": \"https://example.okta.com/oauth2/v1/token\",\n        \"authorization_endpoint\": \"https://example.okta.com/oauth2/v1/authorize\",\n    })\nmy_enterprise_connection2 = auth0.Connection(\"my_enterprise_connection_2\",\n    name=\"my-enterprise-connection-2\",\n    display_name=\"My Enterprise Connection 2\",\n    strategy=\"okta\",\n    options={\n        \"client_id\": \"1234567\",\n        \"client_secret\": \"1234567\",\n        \"issuer\": \"https://example.okta.com\",\n        \"jwks_uri\": \"https://example.okta.com/oauth2/v1/keys\",\n        \"token_endpoint\": \"https://example.okta.com/oauth2/v1/token\",\n        \"authorization_endpoint\": \"https://example.okta.com/oauth2/v1/authorize\",\n    })\n# A resource for configuring an Auth0 Connection SCIM Configuration, using default values.\n# Only one can be specified for a connection.\nmy_conn_scim_configuration_default = auth0.ConnectionScimConfiguration(\"my_conn_scim_configuration_default\", connection_id=my_enterprise_connection.id)\n# A resource for configuring an Auth0 Connection SCIM Configuration, specifying `user_id_attribute` and `mapping`.\n# Only one can be specified for a connection.\nmy_conn_scim_configuration = auth0.ConnectionScimConfiguration(\"my_conn_scim_configuration\",\n    connection_id=my_enterprise_connection2.id,\n    user_id_attribute=\"attribute1\",\n    mappings=[\n        {\n            \"auth0\": \"auth0_attribute1\",\n            \"scim\": \"sacim_attribute1\",\n        },\n        {\n            \"auth0\": \"auth0_attribute2\",\n            \"scim\": \"sacim_attribute2\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myEnterpriseConnection = new Auth0.Connection(\"my_enterprise_connection\", new()\n    {\n        Name = \"my-enterprise-connection\",\n        DisplayName = \"My Enterprise Connection\",\n        Strategy = \"okta\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"1234567\",\n            ClientSecret = \"1234567\",\n            Issuer = \"https://example.okta.com\",\n            JwksUri = \"https://example.okta.com/oauth2/v1/keys\",\n            TokenEndpoint = \"https://example.okta.com/oauth2/v1/token\",\n            AuthorizationEndpoint = \"https://example.okta.com/oauth2/v1/authorize\",\n        },\n    });\n\n    var myEnterpriseConnection2 = new Auth0.Connection(\"my_enterprise_connection_2\", new()\n    {\n        Name = \"my-enterprise-connection-2\",\n        DisplayName = \"My Enterprise Connection 2\",\n        Strategy = \"okta\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"1234567\",\n            ClientSecret = \"1234567\",\n            Issuer = \"https://example.okta.com\",\n            JwksUri = \"https://example.okta.com/oauth2/v1/keys\",\n            TokenEndpoint = \"https://example.okta.com/oauth2/v1/token\",\n            AuthorizationEndpoint = \"https://example.okta.com/oauth2/v1/authorize\",\n        },\n    });\n\n    // A resource for configuring an Auth0 Connection SCIM Configuration, using default values.\n    // Only one can be specified for a connection.\n    var myConnScimConfigurationDefault = new Auth0.ConnectionScimConfiguration(\"my_conn_scim_configuration_default\", new()\n    {\n        ConnectionId = myEnterpriseConnection.Id,\n    });\n\n    // A resource for configuring an Auth0 Connection SCIM Configuration, specifying `user_id_attribute` and `mapping`.\n    // Only one can be specified for a connection.\n    var myConnScimConfiguration = new Auth0.ConnectionScimConfiguration(\"my_conn_scim_configuration\", new()\n    {\n        ConnectionId = myEnterpriseConnection2.Id,\n        UserIdAttribute = \"attribute1\",\n        Mappings = new[]\n        {\n            new Auth0.Inputs.ConnectionScimConfigurationMappingArgs\n            {\n                Auth0 = \"auth0_attribute1\",\n                Scim = \"sacim_attribute1\",\n            },\n            new Auth0.Inputs.ConnectionScimConfigurationMappingArgs\n            {\n                Auth0 = \"auth0_attribute2\",\n                Scim = \"sacim_attribute2\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyEnterpriseConnection, err := auth0.NewConnection(ctx, \"my_enterprise_connection\", \u0026auth0.ConnectionArgs{\n\t\t\tName:        pulumi.String(\"my-enterprise-connection\"),\n\t\t\tDisplayName: pulumi.String(\"My Enterprise Connection\"),\n\t\t\tStrategy:    pulumi.String(\"okta\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:              pulumi.String(\"1234567\"),\n\t\t\t\tClientSecret:          pulumi.String(\"1234567\"),\n\t\t\t\tIssuer:                pulumi.String(\"https://example.okta.com\"),\n\t\t\t\tJwksUri:               pulumi.String(\"https://example.okta.com/oauth2/v1/keys\"),\n\t\t\t\tTokenEndpoint:         pulumi.String(\"https://example.okta.com/oauth2/v1/token\"),\n\t\t\t\tAuthorizationEndpoint: pulumi.String(\"https://example.okta.com/oauth2/v1/authorize\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyEnterpriseConnection2, err := auth0.NewConnection(ctx, \"my_enterprise_connection_2\", \u0026auth0.ConnectionArgs{\n\t\t\tName:        pulumi.String(\"my-enterprise-connection-2\"),\n\t\t\tDisplayName: pulumi.String(\"My Enterprise Connection 2\"),\n\t\t\tStrategy:    pulumi.String(\"okta\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:              pulumi.String(\"1234567\"),\n\t\t\t\tClientSecret:          pulumi.String(\"1234567\"),\n\t\t\t\tIssuer:                pulumi.String(\"https://example.okta.com\"),\n\t\t\t\tJwksUri:               pulumi.String(\"https://example.okta.com/oauth2/v1/keys\"),\n\t\t\t\tTokenEndpoint:         pulumi.String(\"https://example.okta.com/oauth2/v1/token\"),\n\t\t\t\tAuthorizationEndpoint: pulumi.String(\"https://example.okta.com/oauth2/v1/authorize\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// A resource for configuring an Auth0 Connection SCIM Configuration, using default values.\n\t\t// Only one can be specified for a connection.\n\t\t_, err = auth0.NewConnectionScimConfiguration(ctx, \"my_conn_scim_configuration_default\", \u0026auth0.ConnectionScimConfigurationArgs{\n\t\t\tConnectionId: myEnterpriseConnection.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// A resource for configuring an Auth0 Connection SCIM Configuration, specifying `user_id_attribute` and `mapping`.\n\t\t// Only one can be specified for a connection.\n\t\t_, err = auth0.NewConnectionScimConfiguration(ctx, \"my_conn_scim_configuration\", \u0026auth0.ConnectionScimConfigurationArgs{\n\t\t\tConnectionId:    myEnterpriseConnection2.ID(),\n\t\t\tUserIdAttribute: pulumi.String(\"attribute1\"),\n\t\t\tMappings: auth0.ConnectionScimConfigurationMappingArray{\n\t\t\t\t\u0026auth0.ConnectionScimConfigurationMappingArgs{\n\t\t\t\t\tAuth0: pulumi.String(\"auth0_attribute1\"),\n\t\t\t\t\tScim:  pulumi.String(\"sacim_attribute1\"),\n\t\t\t\t},\n\t\t\t\t\u0026auth0.ConnectionScimConfigurationMappingArgs{\n\t\t\t\t\tAuth0: pulumi.String(\"auth0_attribute2\"),\n\t\t\t\t\tScim:  pulumi.String(\"sacim_attribute2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport com.pulumi.auth0.ConnectionScimConfiguration;\nimport com.pulumi.auth0.ConnectionScimConfigurationArgs;\nimport com.pulumi.auth0.inputs.ConnectionScimConfigurationMappingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myEnterpriseConnection = new Connection(\"myEnterpriseConnection\", ConnectionArgs.builder()\n            .name(\"my-enterprise-connection\")\n            .displayName(\"My Enterprise Connection\")\n            .strategy(\"okta\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"1234567\")\n                .clientSecret(\"1234567\")\n                .issuer(\"https://example.okta.com\")\n                .jwksUri(\"https://example.okta.com/oauth2/v1/keys\")\n                .tokenEndpoint(\"https://example.okta.com/oauth2/v1/token\")\n                .authorizationEndpoint(\"https://example.okta.com/oauth2/v1/authorize\")\n                .build())\n            .build());\n\n        var myEnterpriseConnection2 = new Connection(\"myEnterpriseConnection2\", ConnectionArgs.builder()\n            .name(\"my-enterprise-connection-2\")\n            .displayName(\"My Enterprise Connection 2\")\n            .strategy(\"okta\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"1234567\")\n                .clientSecret(\"1234567\")\n                .issuer(\"https://example.okta.com\")\n                .jwksUri(\"https://example.okta.com/oauth2/v1/keys\")\n                .tokenEndpoint(\"https://example.okta.com/oauth2/v1/token\")\n                .authorizationEndpoint(\"https://example.okta.com/oauth2/v1/authorize\")\n                .build())\n            .build());\n\n        // A resource for configuring an Auth0 Connection SCIM Configuration, using default values.\n        // Only one can be specified for a connection.\n        var myConnScimConfigurationDefault = new ConnectionScimConfiguration(\"myConnScimConfigurationDefault\", ConnectionScimConfigurationArgs.builder()\n            .connectionId(myEnterpriseConnection.id())\n            .build());\n\n        // A resource for configuring an Auth0 Connection SCIM Configuration, specifying `user_id_attribute` and `mapping`.\n        // Only one can be specified for a connection.\n        var myConnScimConfiguration = new ConnectionScimConfiguration(\"myConnScimConfiguration\", ConnectionScimConfigurationArgs.builder()\n            .connectionId(myEnterpriseConnection2.id())\n            .userIdAttribute(\"attribute1\")\n            .mappings(            \n                ConnectionScimConfigurationMappingArgs.builder()\n                    .auth0(\"auth0_attribute1\")\n                    .scim(\"sacim_attribute1\")\n                    .build(),\n                ConnectionScimConfigurationMappingArgs.builder()\n                    .auth0(\"auth0_attribute2\")\n                    .scim(\"sacim_attribute2\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myEnterpriseConnection:\n    type: auth0:Connection\n    name: my_enterprise_connection\n    properties:\n      name: my-enterprise-connection\n      displayName: My Enterprise Connection\n      strategy: okta\n      options:\n        clientId: '1234567'\n        clientSecret: '1234567'\n        issuer: https://example.okta.com\n        jwksUri: https://example.okta.com/oauth2/v1/keys\n        tokenEndpoint: https://example.okta.com/oauth2/v1/token\n        authorizationEndpoint: https://example.okta.com/oauth2/v1/authorize\n  myEnterpriseConnection2:\n    type: auth0:Connection\n    name: my_enterprise_connection_2\n    properties:\n      name: my-enterprise-connection-2\n      displayName: My Enterprise Connection 2\n      strategy: okta\n      options:\n        clientId: '1234567'\n        clientSecret: '1234567'\n        issuer: https://example.okta.com\n        jwksUri: https://example.okta.com/oauth2/v1/keys\n        tokenEndpoint: https://example.okta.com/oauth2/v1/token\n        authorizationEndpoint: https://example.okta.com/oauth2/v1/authorize\n  # A resource for configuring an Auth0 Connection SCIM Configuration, using default values.\n  # Only one can be specified for a connection.\n  myConnScimConfigurationDefault:\n    type: auth0:ConnectionScimConfiguration\n    name: my_conn_scim_configuration_default\n    properties:\n      connectionId: ${myEnterpriseConnection.id}\n  # A resource for configuring an Auth0 Connection SCIM Configuration, specifying `user_id_attribute` and `mapping`.\n  # Only one can be specified for a connection.\n  myConnScimConfiguration:\n    type: auth0:ConnectionScimConfiguration\n    name: my_conn_scim_configuration\n    properties:\n      connectionId: ${myEnterpriseConnection2.id}\n      userIdAttribute: attribute1\n      mappings:\n        - auth0: auth0_attribute1\n          scim: sacim_attribute1\n        - auth0: auth0_attribute2\n          scim: sacim_attribute2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the connection ID \u003cconnectionID\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/connectionScimConfiguration:ConnectionScimConfiguration my_conn_scim_conf \"con_XXXXX\"\n```\n\n",
            "properties": {
                "connectionId": {
                    "type": "string",
                    "description": "ID of the connection for this SCIM configuration.\n"
                },
                "connectionName": {
                    "type": "string",
                    "description": "Name of the connection for this SCIM configuration.\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionScimConfigurationMapping:ConnectionScimConfigurationMapping"
                    },
                    "description": "Mapping between Auth0 attributes and SCIM attributes. If \u003cspan pulumi-lang-nodejs=\"`userIdAttribute`\" pulumi-lang-dotnet=\"`UserIdAttribute`\" pulumi-lang-go=\"`userIdAttribute`\" pulumi-lang-python=\"`user_id_attribute`\" pulumi-lang-yaml=\"`userIdAttribute`\" pulumi-lang-java=\"`userIdAttribute`\"\u003e`user_id_attribute`\u003c/span\u003e is set, \u003cspan pulumi-lang-nodejs=\"`mapping`\" pulumi-lang-dotnet=\"`Mapping`\" pulumi-lang-go=\"`mapping`\" pulumi-lang-python=\"`mapping`\" pulumi-lang-yaml=\"`mapping`\" pulumi-lang-java=\"`mapping`\"\u003e`mapping`\u003c/span\u003e must be set as well.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "Schema of the connection for this SCIM configuration.\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Name of the tenant for this SCIM configuration.\n"
                },
                "userIdAttribute": {
                    "type": "string",
                    "description": "User ID attribute for generation unique of user ids. If \u003cspan pulumi-lang-nodejs=\"`userIdAttribute`\" pulumi-lang-dotnet=\"`UserIdAttribute`\" pulumi-lang-go=\"`userIdAttribute`\" pulumi-lang-python=\"`user_id_attribute`\" pulumi-lang-yaml=\"`userIdAttribute`\" pulumi-lang-java=\"`userIdAttribute`\"\u003e`user_id_attribute`\u003c/span\u003e is set, \u003cspan pulumi-lang-nodejs=\"`mapping`\" pulumi-lang-dotnet=\"`Mapping`\" pulumi-lang-go=\"`mapping`\" pulumi-lang-python=\"`mapping`\" pulumi-lang-yaml=\"`mapping`\" pulumi-lang-java=\"`mapping`\"\u003e`mapping`\u003c/span\u003e must be set as well. Defaults to `userName` for SAML connections and `externalId` for OIDC connections.\n"
                }
            },
            "required": [
                "connectionId",
                "connectionName",
                "mappings",
                "strategy",
                "tenantName",
                "userIdAttribute"
            ],
            "inputProperties": {
                "connectionId": {
                    "type": "string",
                    "description": "ID of the connection for this SCIM configuration.\n",
                    "willReplaceOnChanges": true
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionScimConfigurationMapping:ConnectionScimConfigurationMapping"
                    },
                    "description": "Mapping between Auth0 attributes and SCIM attributes. If \u003cspan pulumi-lang-nodejs=\"`userIdAttribute`\" pulumi-lang-dotnet=\"`UserIdAttribute`\" pulumi-lang-go=\"`userIdAttribute`\" pulumi-lang-python=\"`user_id_attribute`\" pulumi-lang-yaml=\"`userIdAttribute`\" pulumi-lang-java=\"`userIdAttribute`\"\u003e`user_id_attribute`\u003c/span\u003e is set, \u003cspan pulumi-lang-nodejs=\"`mapping`\" pulumi-lang-dotnet=\"`Mapping`\" pulumi-lang-go=\"`mapping`\" pulumi-lang-python=\"`mapping`\" pulumi-lang-yaml=\"`mapping`\" pulumi-lang-java=\"`mapping`\"\u003e`mapping`\u003c/span\u003e must be set as well.\n"
                },
                "userIdAttribute": {
                    "type": "string",
                    "description": "User ID attribute for generation unique of user ids. If \u003cspan pulumi-lang-nodejs=\"`userIdAttribute`\" pulumi-lang-dotnet=\"`UserIdAttribute`\" pulumi-lang-go=\"`userIdAttribute`\" pulumi-lang-python=\"`user_id_attribute`\" pulumi-lang-yaml=\"`userIdAttribute`\" pulumi-lang-java=\"`userIdAttribute`\"\u003e`user_id_attribute`\u003c/span\u003e is set, \u003cspan pulumi-lang-nodejs=\"`mapping`\" pulumi-lang-dotnet=\"`Mapping`\" pulumi-lang-go=\"`mapping`\" pulumi-lang-python=\"`mapping`\" pulumi-lang-yaml=\"`mapping`\" pulumi-lang-java=\"`mapping`\"\u003e`mapping`\u003c/span\u003e must be set as well. Defaults to `userName` for SAML connections and `externalId` for OIDC connections.\n"
                }
            },
            "requiredInputs": [
                "connectionId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConnectionScimConfiguration resources.\n",
                "properties": {
                    "connectionId": {
                        "type": "string",
                        "description": "ID of the connection for this SCIM configuration.\n",
                        "willReplaceOnChanges": true
                    },
                    "connectionName": {
                        "type": "string",
                        "description": "Name of the connection for this SCIM configuration.\n"
                    },
                    "mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/ConnectionScimConfigurationMapping:ConnectionScimConfigurationMapping"
                        },
                        "description": "Mapping between Auth0 attributes and SCIM attributes. If \u003cspan pulumi-lang-nodejs=\"`userIdAttribute`\" pulumi-lang-dotnet=\"`UserIdAttribute`\" pulumi-lang-go=\"`userIdAttribute`\" pulumi-lang-python=\"`user_id_attribute`\" pulumi-lang-yaml=\"`userIdAttribute`\" pulumi-lang-java=\"`userIdAttribute`\"\u003e`user_id_attribute`\u003c/span\u003e is set, \u003cspan pulumi-lang-nodejs=\"`mapping`\" pulumi-lang-dotnet=\"`Mapping`\" pulumi-lang-go=\"`mapping`\" pulumi-lang-python=\"`mapping`\" pulumi-lang-yaml=\"`mapping`\" pulumi-lang-java=\"`mapping`\"\u003e`mapping`\u003c/span\u003e must be set as well.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "Schema of the connection for this SCIM configuration.\n"
                    },
                    "tenantName": {
                        "type": "string",
                        "description": "Name of the tenant for this SCIM configuration.\n"
                    },
                    "userIdAttribute": {
                        "type": "string",
                        "description": "User ID attribute for generation unique of user ids. If \u003cspan pulumi-lang-nodejs=\"`userIdAttribute`\" pulumi-lang-dotnet=\"`UserIdAttribute`\" pulumi-lang-go=\"`userIdAttribute`\" pulumi-lang-python=\"`user_id_attribute`\" pulumi-lang-yaml=\"`userIdAttribute`\" pulumi-lang-java=\"`userIdAttribute`\"\u003e`user_id_attribute`\u003c/span\u003e is set, \u003cspan pulumi-lang-nodejs=\"`mapping`\" pulumi-lang-dotnet=\"`Mapping`\" pulumi-lang-go=\"`mapping`\" pulumi-lang-python=\"`mapping`\" pulumi-lang-yaml=\"`mapping`\" pulumi-lang-java=\"`mapping`\"\u003e`mapping`\u003c/span\u003e must be set as well. Defaults to `userName` for SAML connections and `externalId` for OIDC connections.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/customDomain:CustomDomain": {
            "description": "With Auth0, you can use a custom domain to maintain a consistent user experience. This resource allows you to create and manage a custom domain within your Auth0 tenant.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myCustomDomain = new auth0.CustomDomain(\"my_custom_domain\", {\n    domain: \"auth.example.com\",\n    type: \"auth0_managed_certs\",\n    tlsPolicy: \"recommended\",\n    domainMetadata: {\n        key1: \"value1\",\n        key2: \"value2\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_custom_domain = auth0.CustomDomain(\"my_custom_domain\",\n    domain=\"auth.example.com\",\n    type=\"auth0_managed_certs\",\n    tls_policy=\"recommended\",\n    domain_metadata={\n        \"key1\": \"value1\",\n        \"key2\": \"value2\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myCustomDomain = new Auth0.CustomDomain(\"my_custom_domain\", new()\n    {\n        Domain = \"auth.example.com\",\n        Type = \"auth0_managed_certs\",\n        TlsPolicy = \"recommended\",\n        DomainMetadata = \n        {\n            { \"key1\", \"value1\" },\n            { \"key2\", \"value2\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewCustomDomain(ctx, \"my_custom_domain\", \u0026auth0.CustomDomainArgs{\n\t\t\tDomain:    pulumi.String(\"auth.example.com\"),\n\t\t\tType:      pulumi.String(\"auth0_managed_certs\"),\n\t\t\tTlsPolicy: pulumi.String(\"recommended\"),\n\t\t\tDomainMetadata: pulumi.StringMap{\n\t\t\t\t\"key1\": pulumi.String(\"value1\"),\n\t\t\t\t\"key2\": pulumi.String(\"value2\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.CustomDomain;\nimport com.pulumi.auth0.CustomDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myCustomDomain = new CustomDomain(\"myCustomDomain\", CustomDomainArgs.builder()\n            .domain(\"auth.example.com\")\n            .type(\"auth0_managed_certs\")\n            .tlsPolicy(\"recommended\")\n            .domainMetadata(Map.ofEntries(\n                Map.entry(\"key1\", \"value1\"),\n                Map.entry(\"key2\", \"value2\")\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myCustomDomain:\n    type: auth0:CustomDomain\n    name: my_custom_domain\n    properties:\n      domain: auth.example.com\n      type: auth0_managed_certs\n      tlsPolicy: recommended\n      domainMetadata:\n        key1: value1\n        key2: value2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nCustom domains can be imported using their ID.\n\nYou can find existing custom domain IDs using the Auth0 Management API.\n\nhttps://auth0.com/docs/api/management/v2#!/Custom_Domains/get_custom_domains\n\nExample:\n\n```sh\n$ pulumi import auth0:index/customDomain:CustomDomain my_custom_domain \"cd_XXXXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "certificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/CustomDomainCertificate:CustomDomainCertificate"
                    },
                    "description": "The Custom Domain certificate.\n"
                },
                "customClientIpHeader": {
                    "type": "string",
                    "description": "The HTTP header to fetch the client's IP address. Cannot be set on\u003cspan pulumi-lang-nodejs=\" auth0Managed \" pulumi-lang-dotnet=\" Auth0Managed \" pulumi-lang-go=\" auth0Managed \" pulumi-lang-python=\" auth0_managed \" pulumi-lang-yaml=\" auth0Managed \" pulumi-lang-java=\" auth0Managed \"\u003e auth0_managed \u003c/span\u003edomains.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Name of the custom domain.\n"
                },
                "domainMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the Custom Domain. Maximum of 10 metadata properties allowed.\n"
                },
                "originDomainName": {
                    "type": "string",
                    "description": "Once the configuration status is \u003cspan pulumi-lang-nodejs=\"`ready`\" pulumi-lang-dotnet=\"`Ready`\" pulumi-lang-go=\"`ready`\" pulumi-lang-python=\"`ready`\" pulumi-lang-yaml=\"`ready`\" pulumi-lang-java=\"`ready`\"\u003e`ready`\u003c/span\u003e, the DNS name of the Auth0 origin server that handles traffic for the custom domain.\n"
                },
                "primary": {
                    "type": "boolean",
                    "description": "Indicates whether this is a primary domain.\n",
                    "deprecationMessage": "Primary field is no longer used and will be removed in a future release."
                },
                "status": {
                    "type": "string",
                    "description": "Configuration status for the custom domain. Options include \u003cspan pulumi-lang-nodejs=\"`disabled`\" pulumi-lang-dotnet=\"`Disabled`\" pulumi-lang-go=\"`disabled`\" pulumi-lang-python=\"`disabled`\" pulumi-lang-yaml=\"`disabled`\" pulumi-lang-java=\"`disabled`\"\u003e`disabled`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pending`\" pulumi-lang-dotnet=\"`Pending`\" pulumi-lang-go=\"`pending`\" pulumi-lang-python=\"`pending`\" pulumi-lang-yaml=\"`pending`\" pulumi-lang-java=\"`pending`\"\u003e`pending`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pendingVerification`\" pulumi-lang-dotnet=\"`PendingVerification`\" pulumi-lang-go=\"`pendingVerification`\" pulumi-lang-python=\"`pending_verification`\" pulumi-lang-yaml=\"`pendingVerification`\" pulumi-lang-java=\"`pendingVerification`\"\u003e`pending_verification`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`ready`\" pulumi-lang-dotnet=\"`Ready`\" pulumi-lang-go=\"`ready`\" pulumi-lang-python=\"`ready`\" pulumi-lang-yaml=\"`ready`\" pulumi-lang-java=\"`ready`\"\u003e`ready`\u003c/span\u003e.\n"
                },
                "tlsPolicy": {
                    "type": "string",
                    "description": "TLS policy for the custom domain. Available options are: \u003cspan pulumi-lang-nodejs=\"`compatible`\" pulumi-lang-dotnet=\"`Compatible`\" pulumi-lang-go=\"`compatible`\" pulumi-lang-python=\"`compatible`\" pulumi-lang-yaml=\"`compatible`\" pulumi-lang-java=\"`compatible`\"\u003e`compatible`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`recommended`\" pulumi-lang-dotnet=\"`Recommended`\" pulumi-lang-go=\"`recommended`\" pulumi-lang-python=\"`recommended`\" pulumi-lang-yaml=\"`recommended`\" pulumi-lang-java=\"`recommended`\"\u003e`recommended`\u003c/span\u003e. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on\u003cspan pulumi-lang-nodejs=\" selfManaged \" pulumi-lang-dotnet=\" SelfManaged \" pulumi-lang-go=\" selfManaged \" pulumi-lang-python=\" self_managed \" pulumi-lang-yaml=\" selfManaged \" pulumi-lang-java=\" selfManaged \"\u003e self_managed \u003c/span\u003edomains.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Provisioning type for the custom domain. Options include \u003cspan pulumi-lang-nodejs=\"`auth0ManagedCerts`\" pulumi-lang-dotnet=\"`Auth0ManagedCerts`\" pulumi-lang-go=\"`auth0ManagedCerts`\" pulumi-lang-python=\"`auth0_managed_certs`\" pulumi-lang-yaml=\"`auth0ManagedCerts`\" pulumi-lang-java=\"`auth0ManagedCerts`\"\u003e`auth0_managed_certs`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`selfManagedCerts`\" pulumi-lang-dotnet=\"`SelfManagedCerts`\" pulumi-lang-go=\"`selfManagedCerts`\" pulumi-lang-python=\"`self_managed_certs`\" pulumi-lang-yaml=\"`selfManagedCerts`\" pulumi-lang-java=\"`selfManagedCerts`\"\u003e`self_managed_certs`\u003c/span\u003e.\n"
                },
                "verifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/CustomDomainVerification:CustomDomainVerification"
                    },
                    "description": "Configuration settings for verification.\n"
                }
            },
            "required": [
                "certificates",
                "domain",
                "originDomainName",
                "primary",
                "status",
                "tlsPolicy",
                "type",
                "verifications"
            ],
            "inputProperties": {
                "customClientIpHeader": {
                    "type": "string",
                    "description": "The HTTP header to fetch the client's IP address. Cannot be set on\u003cspan pulumi-lang-nodejs=\" auth0Managed \" pulumi-lang-dotnet=\" Auth0Managed \" pulumi-lang-go=\" auth0Managed \" pulumi-lang-python=\" auth0_managed \" pulumi-lang-yaml=\" auth0Managed \" pulumi-lang-java=\" auth0Managed \"\u003e auth0_managed \u003c/span\u003edomains.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Name of the custom domain.\n",
                    "willReplaceOnChanges": true
                },
                "domainMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the Custom Domain. Maximum of 10 metadata properties allowed.\n"
                },
                "tlsPolicy": {
                    "type": "string",
                    "description": "TLS policy for the custom domain. Available options are: \u003cspan pulumi-lang-nodejs=\"`compatible`\" pulumi-lang-dotnet=\"`Compatible`\" pulumi-lang-go=\"`compatible`\" pulumi-lang-python=\"`compatible`\" pulumi-lang-yaml=\"`compatible`\" pulumi-lang-java=\"`compatible`\"\u003e`compatible`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`recommended`\" pulumi-lang-dotnet=\"`Recommended`\" pulumi-lang-go=\"`recommended`\" pulumi-lang-python=\"`recommended`\" pulumi-lang-yaml=\"`recommended`\" pulumi-lang-java=\"`recommended`\"\u003e`recommended`\u003c/span\u003e. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on\u003cspan pulumi-lang-nodejs=\" selfManaged \" pulumi-lang-dotnet=\" SelfManaged \" pulumi-lang-go=\" selfManaged \" pulumi-lang-python=\" self_managed \" pulumi-lang-yaml=\" selfManaged \" pulumi-lang-java=\" selfManaged \"\u003e self_managed \u003c/span\u003edomains.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Provisioning type for the custom domain. Options include \u003cspan pulumi-lang-nodejs=\"`auth0ManagedCerts`\" pulumi-lang-dotnet=\"`Auth0ManagedCerts`\" pulumi-lang-go=\"`auth0ManagedCerts`\" pulumi-lang-python=\"`auth0_managed_certs`\" pulumi-lang-yaml=\"`auth0ManagedCerts`\" pulumi-lang-java=\"`auth0ManagedCerts`\"\u003e`auth0_managed_certs`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`selfManagedCerts`\" pulumi-lang-dotnet=\"`SelfManagedCerts`\" pulumi-lang-go=\"`selfManagedCerts`\" pulumi-lang-python=\"`self_managed_certs`\" pulumi-lang-yaml=\"`selfManagedCerts`\" pulumi-lang-java=\"`selfManagedCerts`\"\u003e`self_managed_certs`\u003c/span\u003e.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomDomain resources.\n",
                "properties": {
                    "certificates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/CustomDomainCertificate:CustomDomainCertificate"
                        },
                        "description": "The Custom Domain certificate.\n"
                    },
                    "customClientIpHeader": {
                        "type": "string",
                        "description": "The HTTP header to fetch the client's IP address. Cannot be set on\u003cspan pulumi-lang-nodejs=\" auth0Managed \" pulumi-lang-dotnet=\" Auth0Managed \" pulumi-lang-go=\" auth0Managed \" pulumi-lang-python=\" auth0_managed \" pulumi-lang-yaml=\" auth0Managed \" pulumi-lang-java=\" auth0Managed \"\u003e auth0_managed \u003c/span\u003edomains.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "Name of the custom domain.\n",
                        "willReplaceOnChanges": true
                    },
                    "domainMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata associated with the Custom Domain. Maximum of 10 metadata properties allowed.\n"
                    },
                    "originDomainName": {
                        "type": "string",
                        "description": "Once the configuration status is \u003cspan pulumi-lang-nodejs=\"`ready`\" pulumi-lang-dotnet=\"`Ready`\" pulumi-lang-go=\"`ready`\" pulumi-lang-python=\"`ready`\" pulumi-lang-yaml=\"`ready`\" pulumi-lang-java=\"`ready`\"\u003e`ready`\u003c/span\u003e, the DNS name of the Auth0 origin server that handles traffic for the custom domain.\n"
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Indicates whether this is a primary domain.\n",
                        "deprecationMessage": "Primary field is no longer used and will be removed in a future release."
                    },
                    "status": {
                        "type": "string",
                        "description": "Configuration status for the custom domain. Options include \u003cspan pulumi-lang-nodejs=\"`disabled`\" pulumi-lang-dotnet=\"`Disabled`\" pulumi-lang-go=\"`disabled`\" pulumi-lang-python=\"`disabled`\" pulumi-lang-yaml=\"`disabled`\" pulumi-lang-java=\"`disabled`\"\u003e`disabled`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pending`\" pulumi-lang-dotnet=\"`Pending`\" pulumi-lang-go=\"`pending`\" pulumi-lang-python=\"`pending`\" pulumi-lang-yaml=\"`pending`\" pulumi-lang-java=\"`pending`\"\u003e`pending`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pendingVerification`\" pulumi-lang-dotnet=\"`PendingVerification`\" pulumi-lang-go=\"`pendingVerification`\" pulumi-lang-python=\"`pending_verification`\" pulumi-lang-yaml=\"`pendingVerification`\" pulumi-lang-java=\"`pendingVerification`\"\u003e`pending_verification`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`ready`\" pulumi-lang-dotnet=\"`Ready`\" pulumi-lang-go=\"`ready`\" pulumi-lang-python=\"`ready`\" pulumi-lang-yaml=\"`ready`\" pulumi-lang-java=\"`ready`\"\u003e`ready`\u003c/span\u003e.\n"
                    },
                    "tlsPolicy": {
                        "type": "string",
                        "description": "TLS policy for the custom domain. Available options are: \u003cspan pulumi-lang-nodejs=\"`compatible`\" pulumi-lang-dotnet=\"`Compatible`\" pulumi-lang-go=\"`compatible`\" pulumi-lang-python=\"`compatible`\" pulumi-lang-yaml=\"`compatible`\" pulumi-lang-java=\"`compatible`\"\u003e`compatible`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`recommended`\" pulumi-lang-dotnet=\"`Recommended`\" pulumi-lang-go=\"`recommended`\" pulumi-lang-python=\"`recommended`\" pulumi-lang-yaml=\"`recommended`\" pulumi-lang-java=\"`recommended`\"\u003e`recommended`\u003c/span\u003e. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on\u003cspan pulumi-lang-nodejs=\" selfManaged \" pulumi-lang-dotnet=\" SelfManaged \" pulumi-lang-go=\" selfManaged \" pulumi-lang-python=\" self_managed \" pulumi-lang-yaml=\" selfManaged \" pulumi-lang-java=\" selfManaged \"\u003e self_managed \u003c/span\u003edomains.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Provisioning type for the custom domain. Options include \u003cspan pulumi-lang-nodejs=\"`auth0ManagedCerts`\" pulumi-lang-dotnet=\"`Auth0ManagedCerts`\" pulumi-lang-go=\"`auth0ManagedCerts`\" pulumi-lang-python=\"`auth0_managed_certs`\" pulumi-lang-yaml=\"`auth0ManagedCerts`\" pulumi-lang-java=\"`auth0ManagedCerts`\"\u003e`auth0_managed_certs`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`selfManagedCerts`\" pulumi-lang-dotnet=\"`SelfManagedCerts`\" pulumi-lang-go=\"`selfManagedCerts`\" pulumi-lang-python=\"`self_managed_certs`\" pulumi-lang-yaml=\"`selfManagedCerts`\" pulumi-lang-java=\"`selfManagedCerts`\"\u003e`self_managed_certs`\u003c/span\u003e.\n",
                        "willReplaceOnChanges": true
                    },
                    "verifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/CustomDomainVerification:CustomDomainVerification"
                        },
                        "description": "Configuration settings for verification.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/customDomainVerification:CustomDomainVerification": {
            "description": "With Auth0, you can use a custom domain to maintain a consistent user experience. This is a three-step process; you must configure the custom domain in Auth0, then create a DNS record for the domain, then verify the DNS record in Auth0. This resource allows for automating the verification part of the process.\n\n## Import\n\nYou can import this resource using the custom domain ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/customDomainVerification:CustomDomainVerification my_custom_domain_verification \"cd_XXXXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "cnameApiKey": {
                    "type": "string",
                    "secret": true
                },
                "customDomainId": {
                    "type": "string",
                    "description": "ID of the custom domain resource.\n"
                },
                "originDomainName": {
                    "type": "string",
                    "description": "The DNS name of the Auth0 origin server that handles traffic for the custom domain.\n"
                }
            },
            "required": [
                "cnameApiKey",
                "customDomainId",
                "originDomainName"
            ],
            "inputProperties": {
                "customDomainId": {
                    "type": "string",
                    "description": "ID of the custom domain resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "customDomainId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomDomainVerification resources.\n",
                "properties": {
                    "cnameApiKey": {
                        "type": "string",
                        "secret": true
                    },
                    "customDomainId": {
                        "type": "string",
                        "description": "ID of the custom domain resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "originDomainName": {
                        "type": "string",
                        "description": "The DNS name of the Auth0 origin server that handles traffic for the custom domain.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/emailProvider:EmailProvider": {
            "description": "With Auth0, you can have standard welcome, password reset, and account verification email-based workflows built right into Auth0. This resource allows you to configure email providers, so you can route all emails that are part of Auth0's authentication workflows through the supported high-volume email service of your choice.\n\n!\u003e This resource manages to create a max of 1 email provider for a tenant.\nTo avoid potential issues, it is recommended not to try creating multiple email providers on the same tenant.\n\n!\u003e If you are using the \u003cspan pulumi-lang-nodejs=\"`auth0.EmailProvider`\" pulumi-lang-dotnet=\"`auth0.EmailProvider`\" pulumi-lang-go=\"`EmailProvider`\" pulumi-lang-python=\"`EmailProvider`\" pulumi-lang-yaml=\"`auth0.EmailProvider`\" pulumi-lang-java=\"`auth0.EmailProvider`\"\u003e`auth0.EmailProvider`\u003c/span\u003e resource to create a \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e email provider, you must ensure an action is created first with `custom-email-provider` as the\u003cspan pulumi-lang-nodejs=\" supportedTriggers\n\" pulumi-lang-dotnet=\" SupportedTriggers\n\" pulumi-lang-go=\" supportedTriggers\n\" pulumi-lang-python=\" supported_triggers\n\" pulumi-lang-yaml=\" supportedTriggers\n\" pulumi-lang-java=\" supportedTriggers\n\"\u003e supported_triggers\n\u003c/span\u003e\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example on how to set up the email provider with Amazon SES.\nconst amazonSesEmailProvider = new auth0.EmailProvider(\"amazon_ses_email_provider\", {\n    name: \"ses\",\n    enabled: true,\n    defaultFromAddress: \"accounts@example.com\",\n    credentials: {\n        accessKeyId: \"AKIAXXXXXXXXXXXXXXXX\",\n        secretAccessKey: \"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        region: \"us-east-1\",\n    },\n});\n// This is an example on how to set up the email provider with SMTP.\nconst smtpEmailProvider = new auth0.EmailProvider(\"smtp_email_provider\", {\n    name: \"smtp\",\n    enabled: true,\n    defaultFromAddress: \"accounts@example.com\",\n    credentials: {\n        smtpHost: \"your.smtp.host.com\",\n        smtpPort: 583,\n        smtpUser: \"SMTP Username\",\n        smtpPass: \"SMTP Password\",\n    },\n});\n// This is an example on how to set up the email provider with Sendgrid.\nconst sendgridEmailProvider = new auth0.EmailProvider(\"sendgrid_email_provider\", {\n    name: \"sendgrid\",\n    enabled: true,\n    defaultFromAddress: \"accounts@example.com\",\n    credentials: {\n        apiKey: \"secretAPIKey\",\n    },\n});\n// This is an example on how to set up the email provider with Azure CS.\nconst azureCsEmailProvider = new auth0.EmailProvider(\"azure_cs_email_provider\", {\n    name: \"azure_cs\",\n    enabled: true,\n    defaultFromAddress: \"accounts@example.com\",\n    credentials: {\n        azureCsConnectionString: \"azure_cs_connection_string\",\n    },\n});\n// This is an example on how to set up the email provider with MS365.\nconst ms365EmailProvider = new auth0.EmailProvider(\"ms365_email_provider\", {\n    name: \"ms365\",\n    enabled: true,\n    defaultFromAddress: \"accounts@example.com\",\n    credentials: {\n        ms365TenantId: \"ms365_tenant_id\",\n        ms365ClientId: \"ms365_client_id\",\n        ms365ClientSecret: \"ms365_client_secret\",\n    },\n});\n// Below is an example of how to set up a custom email provider.\n// The action with custom-email-provider as supported_triggers is a prerequisite.\nconst customEmailProviderAction = new auth0.Action(\"custom_email_provider_action\", {\n    name: \"custom-email-provider-action\",\n    runtime: \"node18\",\n    deploy: true,\n    code: `/**\n * Handler to be executed while sending an email notification.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {CustomEmailProviderAPI} api - Methods and utilities to help change the behavior of sending a email notification.\n */\n exports.onExecuteCustomEmailProvider = async (event, api) =\u003e {\n  // Code goes here\n  console.log(event);\n  return;\n };\n`,\n    supportedTriggers: {\n        id: \"custom-email-provider\",\n        version: \"v1\",\n    },\n});\nconst customEmailProvider = new auth0.EmailProvider(\"custom_email_provider\", {\n    name: \"custom\",\n    enabled: true,\n    defaultFromAddress: \"accounts@example.com\",\n    credentials: {},\n}, {\n    dependsOn: [customEmailProviderAction],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example on how to set up the email provider with Amazon SES.\namazon_ses_email_provider = auth0.EmailProvider(\"amazon_ses_email_provider\",\n    name=\"ses\",\n    enabled=True,\n    default_from_address=\"accounts@example.com\",\n    credentials={\n        \"access_key_id\": \"AKIAXXXXXXXXXXXXXXXX\",\n        \"secret_access_key\": \"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"region\": \"us-east-1\",\n    })\n# This is an example on how to set up the email provider with SMTP.\nsmtp_email_provider = auth0.EmailProvider(\"smtp_email_provider\",\n    name=\"smtp\",\n    enabled=True,\n    default_from_address=\"accounts@example.com\",\n    credentials={\n        \"smtp_host\": \"your.smtp.host.com\",\n        \"smtp_port\": 583,\n        \"smtp_user\": \"SMTP Username\",\n        \"smtp_pass\": \"SMTP Password\",\n    })\n# This is an example on how to set up the email provider with Sendgrid.\nsendgrid_email_provider = auth0.EmailProvider(\"sendgrid_email_provider\",\n    name=\"sendgrid\",\n    enabled=True,\n    default_from_address=\"accounts@example.com\",\n    credentials={\n        \"api_key\": \"secretAPIKey\",\n    })\n# This is an example on how to set up the email provider with Azure CS.\nazure_cs_email_provider = auth0.EmailProvider(\"azure_cs_email_provider\",\n    name=\"azure_cs\",\n    enabled=True,\n    default_from_address=\"accounts@example.com\",\n    credentials={\n        \"azure_cs_connection_string\": \"azure_cs_connection_string\",\n    })\n# This is an example on how to set up the email provider with MS365.\nms365_email_provider = auth0.EmailProvider(\"ms365_email_provider\",\n    name=\"ms365\",\n    enabled=True,\n    default_from_address=\"accounts@example.com\",\n    credentials={\n        \"ms365_tenant_id\": \"ms365_tenant_id\",\n        \"ms365_client_id\": \"ms365_client_id\",\n        \"ms365_client_secret\": \"ms365_client_secret\",\n    })\n# Below is an example of how to set up a custom email provider.\n# The action with custom-email-provider as supported_triggers is a prerequisite.\ncustom_email_provider_action = auth0.Action(\"custom_email_provider_action\",\n    name=\"custom-email-provider-action\",\n    runtime=\"node18\",\n    deploy=True,\n    code=\"\"\"/**\n * Handler to be executed while sending an email notification.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {CustomEmailProviderAPI} api - Methods and utilities to help change the behavior of sending a email notification.\n */\n exports.onExecuteCustomEmailProvider = async (event, api) =\u003e {\n  // Code goes here\n  console.log(event);\n  return;\n };\n\"\"\",\n    supported_triggers={\n        \"id\": \"custom-email-provider\",\n        \"version\": \"v1\",\n    })\ncustom_email_provider = auth0.EmailProvider(\"custom_email_provider\",\n    name=\"custom\",\n    enabled=True,\n    default_from_address=\"accounts@example.com\",\n    credentials={},\n    opts = pulumi.ResourceOptions(depends_on=[custom_email_provider_action]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example on how to set up the email provider with Amazon SES.\n    var amazonSesEmailProvider = new Auth0.EmailProvider(\"amazon_ses_email_provider\", new()\n    {\n        Name = \"ses\",\n        Enabled = true,\n        DefaultFromAddress = \"accounts@example.com\",\n        Credentials = new Auth0.Inputs.EmailProviderCredentialsArgs\n        {\n            AccessKeyId = \"AKIAXXXXXXXXXXXXXXXX\",\n            SecretAccessKey = \"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n            Region = \"us-east-1\",\n        },\n    });\n\n    // This is an example on how to set up the email provider with SMTP.\n    var smtpEmailProvider = new Auth0.EmailProvider(\"smtp_email_provider\", new()\n    {\n        Name = \"smtp\",\n        Enabled = true,\n        DefaultFromAddress = \"accounts@example.com\",\n        Credentials = new Auth0.Inputs.EmailProviderCredentialsArgs\n        {\n            SmtpHost = \"your.smtp.host.com\",\n            SmtpPort = 583,\n            SmtpUser = \"SMTP Username\",\n            SmtpPass = \"SMTP Password\",\n        },\n    });\n\n    // This is an example on how to set up the email provider with Sendgrid.\n    var sendgridEmailProvider = new Auth0.EmailProvider(\"sendgrid_email_provider\", new()\n    {\n        Name = \"sendgrid\",\n        Enabled = true,\n        DefaultFromAddress = \"accounts@example.com\",\n        Credentials = new Auth0.Inputs.EmailProviderCredentialsArgs\n        {\n            ApiKey = \"secretAPIKey\",\n        },\n    });\n\n    // This is an example on how to set up the email provider with Azure CS.\n    var azureCsEmailProvider = new Auth0.EmailProvider(\"azure_cs_email_provider\", new()\n    {\n        Name = \"azure_cs\",\n        Enabled = true,\n        DefaultFromAddress = \"accounts@example.com\",\n        Credentials = new Auth0.Inputs.EmailProviderCredentialsArgs\n        {\n            AzureCsConnectionString = \"azure_cs_connection_string\",\n        },\n    });\n\n    // This is an example on how to set up the email provider with MS365.\n    var ms365EmailProvider = new Auth0.EmailProvider(\"ms365_email_provider\", new()\n    {\n        Name = \"ms365\",\n        Enabled = true,\n        DefaultFromAddress = \"accounts@example.com\",\n        Credentials = new Auth0.Inputs.EmailProviderCredentialsArgs\n        {\n            Ms365TenantId = \"ms365_tenant_id\",\n            Ms365ClientId = \"ms365_client_id\",\n            Ms365ClientSecret = \"ms365_client_secret\",\n        },\n    });\n\n    // Below is an example of how to set up a custom email provider.\n    // The action with custom-email-provider as supported_triggers is a prerequisite.\n    var customEmailProviderAction = new Auth0.Action(\"custom_email_provider_action\", new()\n    {\n        Name = \"custom-email-provider-action\",\n        Runtime = \"node18\",\n        Deploy = true,\n        Code = @\"/**\n * Handler to be executed while sending an email notification.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {CustomEmailProviderAPI} api - Methods and utilities to help change the behavior of sending a email notification.\n */\n exports.onExecuteCustomEmailProvider = async (event, api) =\u003e {\n  // Code goes here\n  console.log(event);\n  return;\n };\n\",\n        SupportedTriggers = new Auth0.Inputs.ActionSupportedTriggersArgs\n        {\n            Id = \"custom-email-provider\",\n            Version = \"v1\",\n        },\n    });\n\n    var customEmailProvider = new Auth0.EmailProvider(\"custom_email_provider\", new()\n    {\n        Name = \"custom\",\n        Enabled = true,\n        DefaultFromAddress = \"accounts@example.com\",\n        Credentials = null,\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            customEmailProviderAction,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example on how to set up the email provider with Amazon SES.\n\t\t_, err := auth0.NewEmailProvider(ctx, \"amazon_ses_email_provider\", \u0026auth0.EmailProviderArgs{\n\t\t\tName:               pulumi.String(\"ses\"),\n\t\t\tEnabled:            pulumi.Bool(true),\n\t\t\tDefaultFromAddress: pulumi.String(\"accounts@example.com\"),\n\t\t\tCredentials: \u0026auth0.EmailProviderCredentialsArgs{\n\t\t\t\tAccessKeyId:     pulumi.String(\"AKIAXXXXXXXXXXXXXXXX\"),\n\t\t\t\tSecretAccessKey: pulumi.String(\"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\t\tRegion:          pulumi.String(\"us-east-1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// This is an example on how to set up the email provider with SMTP.\n\t\t_, err = auth0.NewEmailProvider(ctx, \"smtp_email_provider\", \u0026auth0.EmailProviderArgs{\n\t\t\tName:               pulumi.String(\"smtp\"),\n\t\t\tEnabled:            pulumi.Bool(true),\n\t\t\tDefaultFromAddress: pulumi.String(\"accounts@example.com\"),\n\t\t\tCredentials: \u0026auth0.EmailProviderCredentialsArgs{\n\t\t\t\tSmtpHost: pulumi.String(\"your.smtp.host.com\"),\n\t\t\t\tSmtpPort: pulumi.Int(583),\n\t\t\t\tSmtpUser: pulumi.String(\"SMTP Username\"),\n\t\t\t\tSmtpPass: pulumi.String(\"SMTP Password\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// This is an example on how to set up the email provider with Sendgrid.\n\t\t_, err = auth0.NewEmailProvider(ctx, \"sendgrid_email_provider\", \u0026auth0.EmailProviderArgs{\n\t\t\tName:               pulumi.String(\"sendgrid\"),\n\t\t\tEnabled:            pulumi.Bool(true),\n\t\t\tDefaultFromAddress: pulumi.String(\"accounts@example.com\"),\n\t\t\tCredentials: \u0026auth0.EmailProviderCredentialsArgs{\n\t\t\t\tApiKey: pulumi.String(\"secretAPIKey\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// This is an example on how to set up the email provider with Azure CS.\n\t\t_, err = auth0.NewEmailProvider(ctx, \"azure_cs_email_provider\", \u0026auth0.EmailProviderArgs{\n\t\t\tName:               pulumi.String(\"azure_cs\"),\n\t\t\tEnabled:            pulumi.Bool(true),\n\t\t\tDefaultFromAddress: pulumi.String(\"accounts@example.com\"),\n\t\t\tCredentials: \u0026auth0.EmailProviderCredentialsArgs{\n\t\t\t\tAzureCsConnectionString: pulumi.String(\"azure_cs_connection_string\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// This is an example on how to set up the email provider with MS365.\n\t\t_, err = auth0.NewEmailProvider(ctx, \"ms365_email_provider\", \u0026auth0.EmailProviderArgs{\n\t\t\tName:               pulumi.String(\"ms365\"),\n\t\t\tEnabled:            pulumi.Bool(true),\n\t\t\tDefaultFromAddress: pulumi.String(\"accounts@example.com\"),\n\t\t\tCredentials: \u0026auth0.EmailProviderCredentialsArgs{\n\t\t\t\tMs365TenantId:     pulumi.String(\"ms365_tenant_id\"),\n\t\t\t\tMs365ClientId:     pulumi.String(\"ms365_client_id\"),\n\t\t\t\tMs365ClientSecret: pulumi.String(\"ms365_client_secret\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Below is an example of how to set up a custom email provider.\n\t\t// The action with custom-email-provider as supported_triggers is a prerequisite.\n\t\tcustomEmailProviderAction, err := auth0.NewAction(ctx, \"custom_email_provider_action\", \u0026auth0.ActionArgs{\n\t\t\tName:    pulumi.String(\"custom-email-provider-action\"),\n\t\t\tRuntime: pulumi.String(\"node18\"),\n\t\t\tDeploy:  pulumi.Bool(true),\n\t\t\tCode: pulumi.String(`/**\n * Handler to be executed while sending an email notification.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {CustomEmailProviderAPI} api - Methods and utilities to help change the behavior of sending a email notification.\n */\n exports.onExecuteCustomEmailProvider = async (event, api) =\u003e {\n  // Code goes here\n  console.log(event);\n  return;\n };\n`),\n\t\t\tSupportedTriggers: \u0026auth0.ActionSupportedTriggersArgs{\n\t\t\t\tId:      pulumi.String(\"custom-email-provider\"),\n\t\t\t\tVersion: pulumi.String(\"v1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewEmailProvider(ctx, \"custom_email_provider\", \u0026auth0.EmailProviderArgs{\n\t\t\tName:               pulumi.String(\"custom\"),\n\t\t\tEnabled:            pulumi.Bool(true),\n\t\t\tDefaultFromAddress: pulumi.String(\"accounts@example.com\"),\n\t\t\tCredentials:        \u0026auth0.EmailProviderCredentialsArgs{},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tcustomEmailProviderAction,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.EmailProvider;\nimport com.pulumi.auth0.EmailProviderArgs;\nimport com.pulumi.auth0.inputs.EmailProviderCredentialsArgs;\nimport com.pulumi.auth0.Action;\nimport com.pulumi.auth0.ActionArgs;\nimport com.pulumi.auth0.inputs.ActionSupportedTriggersArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example on how to set up the email provider with Amazon SES.\n        var amazonSesEmailProvider = new EmailProvider(\"amazonSesEmailProvider\", EmailProviderArgs.builder()\n            .name(\"ses\")\n            .enabled(true)\n            .defaultFromAddress(\"accounts@example.com\")\n            .credentials(EmailProviderCredentialsArgs.builder()\n                .accessKeyId(\"AKIAXXXXXXXXXXXXXXXX\")\n                .secretAccessKey(\"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n                .region(\"us-east-1\")\n                .build())\n            .build());\n\n        // This is an example on how to set up the email provider with SMTP.\n        var smtpEmailProvider = new EmailProvider(\"smtpEmailProvider\", EmailProviderArgs.builder()\n            .name(\"smtp\")\n            .enabled(true)\n            .defaultFromAddress(\"accounts@example.com\")\n            .credentials(EmailProviderCredentialsArgs.builder()\n                .smtpHost(\"your.smtp.host.com\")\n                .smtpPort(583)\n                .smtpUser(\"SMTP Username\")\n                .smtpPass(\"SMTP Password\")\n                .build())\n            .build());\n\n        // This is an example on how to set up the email provider with Sendgrid.\n        var sendgridEmailProvider = new EmailProvider(\"sendgridEmailProvider\", EmailProviderArgs.builder()\n            .name(\"sendgrid\")\n            .enabled(true)\n            .defaultFromAddress(\"accounts@example.com\")\n            .credentials(EmailProviderCredentialsArgs.builder()\n                .apiKey(\"secretAPIKey\")\n                .build())\n            .build());\n\n        // This is an example on how to set up the email provider with Azure CS.\n        var azureCsEmailProvider = new EmailProvider(\"azureCsEmailProvider\", EmailProviderArgs.builder()\n            .name(\"azure_cs\")\n            .enabled(true)\n            .defaultFromAddress(\"accounts@example.com\")\n            .credentials(EmailProviderCredentialsArgs.builder()\n                .azureCsConnectionString(\"azure_cs_connection_string\")\n                .build())\n            .build());\n\n        // This is an example on how to set up the email provider with MS365.\n        var ms365EmailProvider = new EmailProvider(\"ms365EmailProvider\", EmailProviderArgs.builder()\n            .name(\"ms365\")\n            .enabled(true)\n            .defaultFromAddress(\"accounts@example.com\")\n            .credentials(EmailProviderCredentialsArgs.builder()\n                .ms365TenantId(\"ms365_tenant_id\")\n                .ms365ClientId(\"ms365_client_id\")\n                .ms365ClientSecret(\"ms365_client_secret\")\n                .build())\n            .build());\n\n        // Below is an example of how to set up a custom email provider.\n        // The action with custom-email-provider as supported_triggers is a prerequisite.\n        var customEmailProviderAction = new Action(\"customEmailProviderAction\", ActionArgs.builder()\n            .name(\"custom-email-provider-action\")\n            .runtime(\"node18\")\n            .deploy(true)\n            .code(\"\"\"\n/**\n * Handler to be executed while sending an email notification.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {CustomEmailProviderAPI} api - Methods and utilities to help change the behavior of sending a email notification.\n */\n exports.onExecuteCustomEmailProvider = async (event, api) =\u003e {\n  // Code goes here\n  console.log(event);\n  return;\n };\n            \"\"\")\n            .supportedTriggers(ActionSupportedTriggersArgs.builder()\n                .id(\"custom-email-provider\")\n                .version(\"v1\")\n                .build())\n            .build());\n\n        var customEmailProvider = new EmailProvider(\"customEmailProvider\", EmailProviderArgs.builder()\n            .name(\"custom\")\n            .enabled(true)\n            .defaultFromAddress(\"accounts@example.com\")\n            .credentials(EmailProviderCredentialsArgs.builder()\n                .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(customEmailProviderAction)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example on how to set up the email provider with Amazon SES.\n  amazonSesEmailProvider:\n    type: auth0:EmailProvider\n    name: amazon_ses_email_provider\n    properties:\n      name: ses\n      enabled: true\n      defaultFromAddress: accounts@example.com\n      credentials:\n        accessKeyId: AKIAXXXXXXXXXXXXXXXX\n        secretAccessKey: 7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        region: us-east-1\n  # This is an example on how to set up the email provider with SMTP.\n  smtpEmailProvider:\n    type: auth0:EmailProvider\n    name: smtp_email_provider\n    properties:\n      name: smtp\n      enabled: true\n      defaultFromAddress: accounts@example.com\n      credentials:\n        smtpHost: your.smtp.host.com\n        smtpPort: 583\n        smtpUser: SMTP Username\n        smtpPass: SMTP Password\n  # This is an example on how to set up the email provider with Sendgrid.\n  sendgridEmailProvider:\n    type: auth0:EmailProvider\n    name: sendgrid_email_provider\n    properties:\n      name: sendgrid\n      enabled: true\n      defaultFromAddress: accounts@example.com\n      credentials:\n        apiKey: secretAPIKey\n  # This is an example on how to set up the email provider with Azure CS.\n  azureCsEmailProvider:\n    type: auth0:EmailProvider\n    name: azure_cs_email_provider\n    properties:\n      name: azure_cs\n      enabled: true\n      defaultFromAddress: accounts@example.com\n      credentials:\n        azureCsConnectionString: azure_cs_connection_string\n  # This is an example on how to set up the email provider with MS365.\n  ms365EmailProvider:\n    type: auth0:EmailProvider\n    name: ms365_email_provider\n    properties:\n      name: ms365\n      enabled: true\n      defaultFromAddress: accounts@example.com\n      credentials:\n        ms365TenantId: ms365_tenant_id\n        ms365ClientId: ms365_client_id\n        ms365ClientSecret: ms365_client_secret\n  # Below is an example of how to set up a custom email provider.\n  # The action with custom-email-provider as supported_triggers is a prerequisite.\n  customEmailProviderAction:\n    type: auth0:Action\n    name: custom_email_provider_action\n    properties:\n      name: custom-email-provider-action\n      runtime: node18\n      deploy: true\n      code: |\n        /**\n         * Handler to be executed while sending an email notification.\n         *\n         * @param {Event} event - Details about the user and the context in which they are logging in.\n         * @param {CustomEmailProviderAPI} api - Methods and utilities to help change the behavior of sending a email notification.\n         */\n         exports.onExecuteCustomEmailProvider = async (event, api) =\u003e {\n          // Code goes here\n          console.log(event);\n          return;\n         };\n      supportedTriggers:\n        id: custom-email-provider\n        version: v1\n  customEmailProvider:\n    type: auth0:EmailProvider\n    name: custom_email_provider\n    properties:\n      name: custom\n      enabled: true\n      defaultFromAddress: accounts@example.com\n      credentials: {}\n    options:\n      dependsOn:\n        - ${customEmailProviderAction}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAs this is not a resource identifiable by an ID within the Auth0 Management API,\n\nemail can be imported using a random string.\n\nWe recommend [Version 4 UUID](https://www.uuidgenerator.net/version4)\n\nExample:\n\n```sh\n$ pulumi import auth0:index/emailProvider:EmailProvider my_email_provider \"b4213dc2-2eed-42c3-9516-c6131a9ce0b0\"\n```\n\n",
            "properties": {
                "credentials": {
                    "$ref": "#/types/auth0:index/EmailProviderCredentials:EmailProviderCredentials",
                    "description": "Configuration settings for the credentials for the email provider.\n"
                },
                "defaultFromAddress": {
                    "type": "string",
                    "description": "Email address to use as the sender when no other \"from\" address is specified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the email provider is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the email provider. Options include \u003cspan pulumi-lang-nodejs=\"`azureCs`\" pulumi-lang-dotnet=\"`AzureCs`\" pulumi-lang-go=\"`azureCs`\" pulumi-lang-python=\"`azure_cs`\" pulumi-lang-yaml=\"`azureCs`\" pulumi-lang-java=\"`azureCs`\"\u003e`azure_cs`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mailgun`\" pulumi-lang-dotnet=\"`Mailgun`\" pulumi-lang-go=\"`mailgun`\" pulumi-lang-python=\"`mailgun`\" pulumi-lang-yaml=\"`mailgun`\" pulumi-lang-java=\"`mailgun`\"\u003e`mailgun`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mandrill`\" pulumi-lang-dotnet=\"`Mandrill`\" pulumi-lang-go=\"`mandrill`\" pulumi-lang-python=\"`mandrill`\" pulumi-lang-yaml=\"`mandrill`\" pulumi-lang-java=\"`mandrill`\"\u003e`mandrill`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ms365`\" pulumi-lang-dotnet=\"`Ms365`\" pulumi-lang-go=\"`ms365`\" pulumi-lang-python=\"`ms365`\" pulumi-lang-yaml=\"`ms365`\" pulumi-lang-java=\"`ms365`\"\u003e`ms365`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sendgrid`\" pulumi-lang-dotnet=\"`Sendgrid`\" pulumi-lang-go=\"`sendgrid`\" pulumi-lang-python=\"`sendgrid`\" pulumi-lang-yaml=\"`sendgrid`\" pulumi-lang-java=\"`sendgrid`\"\u003e`sendgrid`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ses`\" pulumi-lang-dotnet=\"`Ses`\" pulumi-lang-go=\"`ses`\" pulumi-lang-python=\"`ses`\" pulumi-lang-yaml=\"`ses`\" pulumi-lang-java=\"`ses`\"\u003e`ses`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`smtp`\" pulumi-lang-dotnet=\"`Smtp`\" pulumi-lang-go=\"`smtp`\" pulumi-lang-python=\"`smtp`\" pulumi-lang-yaml=\"`smtp`\" pulumi-lang-java=\"`smtp`\"\u003e`smtp`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`sparkpost`\" pulumi-lang-dotnet=\"`Sparkpost`\" pulumi-lang-go=\"`sparkpost`\" pulumi-lang-python=\"`sparkpost`\" pulumi-lang-yaml=\"`sparkpost`\" pulumi-lang-java=\"`sparkpost`\"\u003e`sparkpost`\u003c/span\u003e.\n"
                },
                "settings": {
                    "$ref": "#/types/auth0:index/EmailProviderSettings:EmailProviderSettings",
                    "description": "Specific email provider settings.\n"
                }
            },
            "required": [
                "credentials",
                "defaultFromAddress",
                "name",
                "settings"
            ],
            "inputProperties": {
                "credentials": {
                    "$ref": "#/types/auth0:index/EmailProviderCredentials:EmailProviderCredentials",
                    "description": "Configuration settings for the credentials for the email provider.\n"
                },
                "defaultFromAddress": {
                    "type": "string",
                    "description": "Email address to use as the sender when no other \"from\" address is specified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the email provider is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the email provider. Options include \u003cspan pulumi-lang-nodejs=\"`azureCs`\" pulumi-lang-dotnet=\"`AzureCs`\" pulumi-lang-go=\"`azureCs`\" pulumi-lang-python=\"`azure_cs`\" pulumi-lang-yaml=\"`azureCs`\" pulumi-lang-java=\"`azureCs`\"\u003e`azure_cs`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mailgun`\" pulumi-lang-dotnet=\"`Mailgun`\" pulumi-lang-go=\"`mailgun`\" pulumi-lang-python=\"`mailgun`\" pulumi-lang-yaml=\"`mailgun`\" pulumi-lang-java=\"`mailgun`\"\u003e`mailgun`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mandrill`\" pulumi-lang-dotnet=\"`Mandrill`\" pulumi-lang-go=\"`mandrill`\" pulumi-lang-python=\"`mandrill`\" pulumi-lang-yaml=\"`mandrill`\" pulumi-lang-java=\"`mandrill`\"\u003e`mandrill`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ms365`\" pulumi-lang-dotnet=\"`Ms365`\" pulumi-lang-go=\"`ms365`\" pulumi-lang-python=\"`ms365`\" pulumi-lang-yaml=\"`ms365`\" pulumi-lang-java=\"`ms365`\"\u003e`ms365`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sendgrid`\" pulumi-lang-dotnet=\"`Sendgrid`\" pulumi-lang-go=\"`sendgrid`\" pulumi-lang-python=\"`sendgrid`\" pulumi-lang-yaml=\"`sendgrid`\" pulumi-lang-java=\"`sendgrid`\"\u003e`sendgrid`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ses`\" pulumi-lang-dotnet=\"`Ses`\" pulumi-lang-go=\"`ses`\" pulumi-lang-python=\"`ses`\" pulumi-lang-yaml=\"`ses`\" pulumi-lang-java=\"`ses`\"\u003e`ses`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`smtp`\" pulumi-lang-dotnet=\"`Smtp`\" pulumi-lang-go=\"`smtp`\" pulumi-lang-python=\"`smtp`\" pulumi-lang-yaml=\"`smtp`\" pulumi-lang-java=\"`smtp`\"\u003e`smtp`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`sparkpost`\" pulumi-lang-dotnet=\"`Sparkpost`\" pulumi-lang-go=\"`sparkpost`\" pulumi-lang-python=\"`sparkpost`\" pulumi-lang-yaml=\"`sparkpost`\" pulumi-lang-java=\"`sparkpost`\"\u003e`sparkpost`\u003c/span\u003e.\n"
                },
                "settings": {
                    "$ref": "#/types/auth0:index/EmailProviderSettings:EmailProviderSettings",
                    "description": "Specific email provider settings.\n"
                }
            },
            "requiredInputs": [
                "credentials",
                "defaultFromAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailProvider resources.\n",
                "properties": {
                    "credentials": {
                        "$ref": "#/types/auth0:index/EmailProviderCredentials:EmailProviderCredentials",
                        "description": "Configuration settings for the credentials for the email provider.\n"
                    },
                    "defaultFromAddress": {
                        "type": "string",
                        "description": "Email address to use as the sender when no other \"from\" address is specified.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates whether the email provider is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the email provider. Options include \u003cspan pulumi-lang-nodejs=\"`azureCs`\" pulumi-lang-dotnet=\"`AzureCs`\" pulumi-lang-go=\"`azureCs`\" pulumi-lang-python=\"`azure_cs`\" pulumi-lang-yaml=\"`azureCs`\" pulumi-lang-java=\"`azureCs`\"\u003e`azure_cs`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mailgun`\" pulumi-lang-dotnet=\"`Mailgun`\" pulumi-lang-go=\"`mailgun`\" pulumi-lang-python=\"`mailgun`\" pulumi-lang-yaml=\"`mailgun`\" pulumi-lang-java=\"`mailgun`\"\u003e`mailgun`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mandrill`\" pulumi-lang-dotnet=\"`Mandrill`\" pulumi-lang-go=\"`mandrill`\" pulumi-lang-python=\"`mandrill`\" pulumi-lang-yaml=\"`mandrill`\" pulumi-lang-java=\"`mandrill`\"\u003e`mandrill`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ms365`\" pulumi-lang-dotnet=\"`Ms365`\" pulumi-lang-go=\"`ms365`\" pulumi-lang-python=\"`ms365`\" pulumi-lang-yaml=\"`ms365`\" pulumi-lang-java=\"`ms365`\"\u003e`ms365`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sendgrid`\" pulumi-lang-dotnet=\"`Sendgrid`\" pulumi-lang-go=\"`sendgrid`\" pulumi-lang-python=\"`sendgrid`\" pulumi-lang-yaml=\"`sendgrid`\" pulumi-lang-java=\"`sendgrid`\"\u003e`sendgrid`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ses`\" pulumi-lang-dotnet=\"`Ses`\" pulumi-lang-go=\"`ses`\" pulumi-lang-python=\"`ses`\" pulumi-lang-yaml=\"`ses`\" pulumi-lang-java=\"`ses`\"\u003e`ses`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`smtp`\" pulumi-lang-dotnet=\"`Smtp`\" pulumi-lang-go=\"`smtp`\" pulumi-lang-python=\"`smtp`\" pulumi-lang-yaml=\"`smtp`\" pulumi-lang-java=\"`smtp`\"\u003e`smtp`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`sparkpost`\" pulumi-lang-dotnet=\"`Sparkpost`\" pulumi-lang-go=\"`sparkpost`\" pulumi-lang-python=\"`sparkpost`\" pulumi-lang-yaml=\"`sparkpost`\" pulumi-lang-java=\"`sparkpost`\"\u003e`sparkpost`\u003c/span\u003e.\n"
                    },
                    "settings": {
                        "$ref": "#/types/auth0:index/EmailProviderSettings:EmailProviderSettings",
                        "description": "Specific email provider settings.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/emailTemplate:EmailTemplate": {
            "description": "With Auth0, you can have standard welcome, password reset, and account verification email-based workflows built right into Auth0. This resource allows you to configure email templates to customize the look, feel, and sender identities of emails sent by Auth0. Used in conjunction with configured email providers.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myEmailProvider = new auth0.EmailProvider(\"my_email_provider\", {\n    name: \"ses\",\n    enabled: true,\n    defaultFromAddress: \"accounts@example.com\",\n    credentials: {\n        accessKeyId: \"AKIAXXXXXXXXXXXXXXXX\",\n        secretAccessKey: \"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        region: \"us-east-1\",\n    },\n});\nconst myEmailTemplate = new auth0.EmailTemplate(\"my_email_template\", {\n    template: \"welcome_email\",\n    body: \"\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eWelcome!\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\",\n    from: \"welcome@example.com\",\n    resultUrl: \"https://example.com/welcome\",\n    subject: \"Welcome\",\n    syntax: \"liquid\",\n    urlLifetimeInSeconds: 3600,\n    enabled: true,\n}, {\n    dependsOn: [myEmailProvider],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_email_provider = auth0.EmailProvider(\"my_email_provider\",\n    name=\"ses\",\n    enabled=True,\n    default_from_address=\"accounts@example.com\",\n    credentials={\n        \"access_key_id\": \"AKIAXXXXXXXXXXXXXXXX\",\n        \"secret_access_key\": \"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"region\": \"us-east-1\",\n    })\nmy_email_template = auth0.EmailTemplate(\"my_email_template\",\n    template=\"welcome_email\",\n    body=\"\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eWelcome!\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\",\n    from_=\"welcome@example.com\",\n    result_url=\"https://example.com/welcome\",\n    subject=\"Welcome\",\n    syntax=\"liquid\",\n    url_lifetime_in_seconds=3600,\n    enabled=True,\n    opts = pulumi.ResourceOptions(depends_on=[my_email_provider]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myEmailProvider = new Auth0.EmailProvider(\"my_email_provider\", new()\n    {\n        Name = \"ses\",\n        Enabled = true,\n        DefaultFromAddress = \"accounts@example.com\",\n        Credentials = new Auth0.Inputs.EmailProviderCredentialsArgs\n        {\n            AccessKeyId = \"AKIAXXXXXXXXXXXXXXXX\",\n            SecretAccessKey = \"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n            Region = \"us-east-1\",\n        },\n    });\n\n    var myEmailTemplate = new Auth0.EmailTemplate(\"my_email_template\", new()\n    {\n        Template = \"welcome_email\",\n        Body = \"\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eWelcome!\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\",\n        From = \"welcome@example.com\",\n        ResultUrl = \"https://example.com/welcome\",\n        Subject = \"Welcome\",\n        Syntax = \"liquid\",\n        UrlLifetimeInSeconds = 3600,\n        Enabled = true,\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            myEmailProvider,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyEmailProvider, err := auth0.NewEmailProvider(ctx, \"my_email_provider\", \u0026auth0.EmailProviderArgs{\n\t\t\tName:               pulumi.String(\"ses\"),\n\t\t\tEnabled:            pulumi.Bool(true),\n\t\t\tDefaultFromAddress: pulumi.String(\"accounts@example.com\"),\n\t\t\tCredentials: \u0026auth0.EmailProviderCredentialsArgs{\n\t\t\t\tAccessKeyId:     pulumi.String(\"AKIAXXXXXXXXXXXXXXXX\"),\n\t\t\t\tSecretAccessKey: pulumi.String(\"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\t\tRegion:          pulumi.String(\"us-east-1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewEmailTemplate(ctx, \"my_email_template\", \u0026auth0.EmailTemplateArgs{\n\t\t\tTemplate:             pulumi.String(\"welcome_email\"),\n\t\t\tBody:                 pulumi.String(\"\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eWelcome!\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\"),\n\t\t\tFrom:                 pulumi.String(\"welcome@example.com\"),\n\t\t\tResultUrl:            pulumi.String(\"https://example.com/welcome\"),\n\t\t\tSubject:              pulumi.String(\"Welcome\"),\n\t\t\tSyntax:               pulumi.String(\"liquid\"),\n\t\t\tUrlLifetimeInSeconds: pulumi.Int(3600),\n\t\t\tEnabled:              pulumi.Bool(true),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tmyEmailProvider,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.EmailProvider;\nimport com.pulumi.auth0.EmailProviderArgs;\nimport com.pulumi.auth0.inputs.EmailProviderCredentialsArgs;\nimport com.pulumi.auth0.EmailTemplate;\nimport com.pulumi.auth0.EmailTemplateArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myEmailProvider = new EmailProvider(\"myEmailProvider\", EmailProviderArgs.builder()\n            .name(\"ses\")\n            .enabled(true)\n            .defaultFromAddress(\"accounts@example.com\")\n            .credentials(EmailProviderCredentialsArgs.builder()\n                .accessKeyId(\"AKIAXXXXXXXXXXXXXXXX\")\n                .secretAccessKey(\"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n                .region(\"us-east-1\")\n                .build())\n            .build());\n\n        var myEmailTemplate = new EmailTemplate(\"myEmailTemplate\", EmailTemplateArgs.builder()\n            .template(\"welcome_email\")\n            .body(\"\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eWelcome!\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\")\n            .from(\"welcome@example.com\")\n            .resultUrl(\"https://example.com/welcome\")\n            .subject(\"Welcome\")\n            .syntax(\"liquid\")\n            .urlLifetimeInSeconds(3600)\n            .enabled(true)\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(myEmailProvider)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myEmailProvider:\n    type: auth0:EmailProvider\n    name: my_email_provider\n    properties:\n      name: ses\n      enabled: true\n      defaultFromAddress: accounts@example.com\n      credentials:\n        accessKeyId: AKIAXXXXXXXXXXXXXXXX\n        secretAccessKey: 7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        region: us-east-1\n  myEmailTemplate:\n    type: auth0:EmailTemplate\n    name: my_email_template\n    properties:\n      template: welcome_email\n      body: \u003chtml\u003e\u003cbody\u003e\u003ch1\u003eWelcome!\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\n      from: welcome@example.com\n      resultUrl: https://example.com/welcome\n      subject: Welcome\n      syntax: liquid\n      urlLifetimeInSeconds: 3600\n      enabled: true\n    options:\n      dependsOn:\n        - ${myEmailProvider}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the pre-defined template name.\n\nThese names are `verify_email`, `verify_email_by_code`, `reset_email`, `reset_email_by_code`,\n\n`welcome_email`, `blocked_account`, `stolen_credentials`, `enrollment_email`,\n\n`mfa_oob_code`, `user_invitation`, and `async_approval`.\n\nThe names `change_password`, and `password_reset` are also supported\n\nfor legacy scenarios.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/emailTemplate:EmailTemplate my_email_template \"welcome_email\"\n```\n\n",
            "properties": {
                "body": {
                    "type": "string",
                    "description": "Body of the email template. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the template is enabled.\n"
                },
                "from": {
                    "type": "string",
                    "description": "Email address to use as the sender. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).\n"
                },
                "includeEmailInRedirect": {
                    "type": "boolean",
                    "description": "Whether the \u003cspan pulumi-lang-nodejs=\"`resetEmail`\" pulumi-lang-dotnet=\"`ResetEmail`\" pulumi-lang-go=\"`resetEmail`\" pulumi-lang-python=\"`reset_email`\" pulumi-lang-yaml=\"`resetEmail`\" pulumi-lang-java=\"`resetEmail`\"\u003e`reset_email`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`verifyEmail`\" pulumi-lang-dotnet=\"`VerifyEmail`\" pulumi-lang-go=\"`verifyEmail`\" pulumi-lang-python=\"`verify_email`\" pulumi-lang-yaml=\"`verifyEmail`\" pulumi-lang-java=\"`verifyEmail`\"\u003e`verify_email`\u003c/span\u003e templates should include the user's email address as the email parameter in the `returnUrl` (true) or whether no email address should be included in the redirect (false). Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "resultUrl": {
                    "type": "string",
                    "description": "URL to redirect the user to after a successful action. [Learn more](https://auth0.com/docs/customize/email/email-templates#configure-template-fields).\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Subject line of the email. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).\n"
                },
                "syntax": {
                    "type": "string",
                    "description": "Syntax of the template body. You can use either text or HTML with Liquid syntax.\n"
                },
                "template": {
                    "type": "string",
                    "description": "Template name. Options include \u003cspan pulumi-lang-nodejs=\"`verifyEmail`\" pulumi-lang-dotnet=\"`VerifyEmail`\" pulumi-lang-go=\"`verifyEmail`\" pulumi-lang-python=\"`verify_email`\" pulumi-lang-yaml=\"`verifyEmail`\" pulumi-lang-java=\"`verifyEmail`\"\u003e`verify_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`verifyEmailByCode`\" pulumi-lang-dotnet=\"`VerifyEmailByCode`\" pulumi-lang-go=\"`verifyEmailByCode`\" pulumi-lang-python=\"`verify_email_by_code`\" pulumi-lang-yaml=\"`verifyEmailByCode`\" pulumi-lang-java=\"`verifyEmailByCode`\"\u003e`verify_email_by_code`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resetEmail`\" pulumi-lang-dotnet=\"`ResetEmail`\" pulumi-lang-go=\"`resetEmail`\" pulumi-lang-python=\"`reset_email`\" pulumi-lang-yaml=\"`resetEmail`\" pulumi-lang-java=\"`resetEmail`\"\u003e`reset_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resetEmailByCode`\" pulumi-lang-dotnet=\"`ResetEmailByCode`\" pulumi-lang-go=\"`resetEmailByCode`\" pulumi-lang-python=\"`reset_email_by_code`\" pulumi-lang-yaml=\"`resetEmailByCode`\" pulumi-lang-java=\"`resetEmailByCode`\"\u003e`reset_email_by_code`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`welcomeEmail`\" pulumi-lang-dotnet=\"`WelcomeEmail`\" pulumi-lang-go=\"`welcomeEmail`\" pulumi-lang-python=\"`welcome_email`\" pulumi-lang-yaml=\"`welcomeEmail`\" pulumi-lang-java=\"`welcomeEmail`\"\u003e`welcome_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`blockedAccount`\" pulumi-lang-dotnet=\"`BlockedAccount`\" pulumi-lang-go=\"`blockedAccount`\" pulumi-lang-python=\"`blocked_account`\" pulumi-lang-yaml=\"`blockedAccount`\" pulumi-lang-java=\"`blockedAccount`\"\u003e`blocked_account`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`stolenCredentials`\" pulumi-lang-dotnet=\"`StolenCredentials`\" pulumi-lang-go=\"`stolenCredentials`\" pulumi-lang-python=\"`stolen_credentials`\" pulumi-lang-yaml=\"`stolenCredentials`\" pulumi-lang-java=\"`stolenCredentials`\"\u003e`stolen_credentials`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`enrollmentEmail`\" pulumi-lang-dotnet=\"`EnrollmentEmail`\" pulumi-lang-go=\"`enrollmentEmail`\" pulumi-lang-python=\"`enrollment_email`\" pulumi-lang-yaml=\"`enrollmentEmail`\" pulumi-lang-java=\"`enrollmentEmail`\"\u003e`enrollment_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mfaOobCode`\" pulumi-lang-dotnet=\"`MfaOobCode`\" pulumi-lang-go=\"`mfaOobCode`\" pulumi-lang-python=\"`mfa_oob_code`\" pulumi-lang-yaml=\"`mfaOobCode`\" pulumi-lang-java=\"`mfaOobCode`\"\u003e`mfa_oob_code`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`userInvitation`\" pulumi-lang-dotnet=\"`UserInvitation`\" pulumi-lang-go=\"`userInvitation`\" pulumi-lang-python=\"`user_invitation`\" pulumi-lang-yaml=\"`userInvitation`\" pulumi-lang-java=\"`userInvitation`\"\u003e`user_invitation`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`changePassword`\" pulumi-lang-dotnet=\"`ChangePassword`\" pulumi-lang-go=\"`changePassword`\" pulumi-lang-python=\"`change_password`\" pulumi-lang-yaml=\"`changePassword`\" pulumi-lang-java=\"`changePassword`\"\u003e`change_password`\u003c/span\u003e (legacy), \u003cspan pulumi-lang-nodejs=\"`passwordReset`\" pulumi-lang-dotnet=\"`PasswordReset`\" pulumi-lang-go=\"`passwordReset`\" pulumi-lang-python=\"`password_reset`\" pulumi-lang-yaml=\"`passwordReset`\" pulumi-lang-java=\"`passwordReset`\"\u003e`password_reset`\u003c/span\u003e (legacy), or \u003cspan pulumi-lang-nodejs=\"`asyncApproval`\" pulumi-lang-dotnet=\"`AsyncApproval`\" pulumi-lang-go=\"`asyncApproval`\" pulumi-lang-python=\"`async_approval`\" pulumi-lang-yaml=\"`asyncApproval`\" pulumi-lang-java=\"`asyncApproval`\"\u003e`async_approval`\u003c/span\u003e.\n"
                },
                "urlLifetimeInSeconds": {
                    "type": "integer",
                    "description": "Number of seconds during which the link within the email will be valid.\n"
                }
            },
            "required": [
                "body",
                "enabled",
                "from",
                "includeEmailInRedirect",
                "subject",
                "syntax",
                "template"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "description": "Body of the email template. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the template is enabled.\n"
                },
                "from": {
                    "type": "string",
                    "description": "Email address to use as the sender. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).\n"
                },
                "includeEmailInRedirect": {
                    "type": "boolean",
                    "description": "Whether the \u003cspan pulumi-lang-nodejs=\"`resetEmail`\" pulumi-lang-dotnet=\"`ResetEmail`\" pulumi-lang-go=\"`resetEmail`\" pulumi-lang-python=\"`reset_email`\" pulumi-lang-yaml=\"`resetEmail`\" pulumi-lang-java=\"`resetEmail`\"\u003e`reset_email`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`verifyEmail`\" pulumi-lang-dotnet=\"`VerifyEmail`\" pulumi-lang-go=\"`verifyEmail`\" pulumi-lang-python=\"`verify_email`\" pulumi-lang-yaml=\"`verifyEmail`\" pulumi-lang-java=\"`verifyEmail`\"\u003e`verify_email`\u003c/span\u003e templates should include the user's email address as the email parameter in the `returnUrl` (true) or whether no email address should be included in the redirect (false). Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "resultUrl": {
                    "type": "string",
                    "description": "URL to redirect the user to after a successful action. [Learn more](https://auth0.com/docs/customize/email/email-templates#configure-template-fields).\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Subject line of the email. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).\n"
                },
                "syntax": {
                    "type": "string",
                    "description": "Syntax of the template body. You can use either text or HTML with Liquid syntax.\n"
                },
                "template": {
                    "type": "string",
                    "description": "Template name. Options include \u003cspan pulumi-lang-nodejs=\"`verifyEmail`\" pulumi-lang-dotnet=\"`VerifyEmail`\" pulumi-lang-go=\"`verifyEmail`\" pulumi-lang-python=\"`verify_email`\" pulumi-lang-yaml=\"`verifyEmail`\" pulumi-lang-java=\"`verifyEmail`\"\u003e`verify_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`verifyEmailByCode`\" pulumi-lang-dotnet=\"`VerifyEmailByCode`\" pulumi-lang-go=\"`verifyEmailByCode`\" pulumi-lang-python=\"`verify_email_by_code`\" pulumi-lang-yaml=\"`verifyEmailByCode`\" pulumi-lang-java=\"`verifyEmailByCode`\"\u003e`verify_email_by_code`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resetEmail`\" pulumi-lang-dotnet=\"`ResetEmail`\" pulumi-lang-go=\"`resetEmail`\" pulumi-lang-python=\"`reset_email`\" pulumi-lang-yaml=\"`resetEmail`\" pulumi-lang-java=\"`resetEmail`\"\u003e`reset_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resetEmailByCode`\" pulumi-lang-dotnet=\"`ResetEmailByCode`\" pulumi-lang-go=\"`resetEmailByCode`\" pulumi-lang-python=\"`reset_email_by_code`\" pulumi-lang-yaml=\"`resetEmailByCode`\" pulumi-lang-java=\"`resetEmailByCode`\"\u003e`reset_email_by_code`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`welcomeEmail`\" pulumi-lang-dotnet=\"`WelcomeEmail`\" pulumi-lang-go=\"`welcomeEmail`\" pulumi-lang-python=\"`welcome_email`\" pulumi-lang-yaml=\"`welcomeEmail`\" pulumi-lang-java=\"`welcomeEmail`\"\u003e`welcome_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`blockedAccount`\" pulumi-lang-dotnet=\"`BlockedAccount`\" pulumi-lang-go=\"`blockedAccount`\" pulumi-lang-python=\"`blocked_account`\" pulumi-lang-yaml=\"`blockedAccount`\" pulumi-lang-java=\"`blockedAccount`\"\u003e`blocked_account`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`stolenCredentials`\" pulumi-lang-dotnet=\"`StolenCredentials`\" pulumi-lang-go=\"`stolenCredentials`\" pulumi-lang-python=\"`stolen_credentials`\" pulumi-lang-yaml=\"`stolenCredentials`\" pulumi-lang-java=\"`stolenCredentials`\"\u003e`stolen_credentials`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`enrollmentEmail`\" pulumi-lang-dotnet=\"`EnrollmentEmail`\" pulumi-lang-go=\"`enrollmentEmail`\" pulumi-lang-python=\"`enrollment_email`\" pulumi-lang-yaml=\"`enrollmentEmail`\" pulumi-lang-java=\"`enrollmentEmail`\"\u003e`enrollment_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mfaOobCode`\" pulumi-lang-dotnet=\"`MfaOobCode`\" pulumi-lang-go=\"`mfaOobCode`\" pulumi-lang-python=\"`mfa_oob_code`\" pulumi-lang-yaml=\"`mfaOobCode`\" pulumi-lang-java=\"`mfaOobCode`\"\u003e`mfa_oob_code`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`userInvitation`\" pulumi-lang-dotnet=\"`UserInvitation`\" pulumi-lang-go=\"`userInvitation`\" pulumi-lang-python=\"`user_invitation`\" pulumi-lang-yaml=\"`userInvitation`\" pulumi-lang-java=\"`userInvitation`\"\u003e`user_invitation`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`changePassword`\" pulumi-lang-dotnet=\"`ChangePassword`\" pulumi-lang-go=\"`changePassword`\" pulumi-lang-python=\"`change_password`\" pulumi-lang-yaml=\"`changePassword`\" pulumi-lang-java=\"`changePassword`\"\u003e`change_password`\u003c/span\u003e (legacy), \u003cspan pulumi-lang-nodejs=\"`passwordReset`\" pulumi-lang-dotnet=\"`PasswordReset`\" pulumi-lang-go=\"`passwordReset`\" pulumi-lang-python=\"`password_reset`\" pulumi-lang-yaml=\"`passwordReset`\" pulumi-lang-java=\"`passwordReset`\"\u003e`password_reset`\u003c/span\u003e (legacy), or \u003cspan pulumi-lang-nodejs=\"`asyncApproval`\" pulumi-lang-dotnet=\"`AsyncApproval`\" pulumi-lang-go=\"`asyncApproval`\" pulumi-lang-python=\"`async_approval`\" pulumi-lang-yaml=\"`asyncApproval`\" pulumi-lang-java=\"`asyncApproval`\"\u003e`async_approval`\u003c/span\u003e.\n"
                },
                "urlLifetimeInSeconds": {
                    "type": "integer",
                    "description": "Number of seconds during which the link within the email will be valid.\n"
                }
            },
            "requiredInputs": [
                "body",
                "enabled",
                "from",
                "subject",
                "syntax",
                "template"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailTemplate resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "Body of the email template. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates whether the template is enabled.\n"
                    },
                    "from": {
                        "type": "string",
                        "description": "Email address to use as the sender. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).\n"
                    },
                    "includeEmailInRedirect": {
                        "type": "boolean",
                        "description": "Whether the \u003cspan pulumi-lang-nodejs=\"`resetEmail`\" pulumi-lang-dotnet=\"`ResetEmail`\" pulumi-lang-go=\"`resetEmail`\" pulumi-lang-python=\"`reset_email`\" pulumi-lang-yaml=\"`resetEmail`\" pulumi-lang-java=\"`resetEmail`\"\u003e`reset_email`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`verifyEmail`\" pulumi-lang-dotnet=\"`VerifyEmail`\" pulumi-lang-go=\"`verifyEmail`\" pulumi-lang-python=\"`verify_email`\" pulumi-lang-yaml=\"`verifyEmail`\" pulumi-lang-java=\"`verifyEmail`\"\u003e`verify_email`\u003c/span\u003e templates should include the user's email address as the email parameter in the `returnUrl` (true) or whether no email address should be included in the redirect (false). Defaults to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                    },
                    "resultUrl": {
                        "type": "string",
                        "description": "URL to redirect the user to after a successful action. [Learn more](https://auth0.com/docs/customize/email/email-templates#configure-template-fields).\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject line of the email. You can include [common variables](https://auth0.com/docs/customize/email/email-templates#common-variables).\n"
                    },
                    "syntax": {
                        "type": "string",
                        "description": "Syntax of the template body. You can use either text or HTML with Liquid syntax.\n"
                    },
                    "template": {
                        "type": "string",
                        "description": "Template name. Options include \u003cspan pulumi-lang-nodejs=\"`verifyEmail`\" pulumi-lang-dotnet=\"`VerifyEmail`\" pulumi-lang-go=\"`verifyEmail`\" pulumi-lang-python=\"`verify_email`\" pulumi-lang-yaml=\"`verifyEmail`\" pulumi-lang-java=\"`verifyEmail`\"\u003e`verify_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`verifyEmailByCode`\" pulumi-lang-dotnet=\"`VerifyEmailByCode`\" pulumi-lang-go=\"`verifyEmailByCode`\" pulumi-lang-python=\"`verify_email_by_code`\" pulumi-lang-yaml=\"`verifyEmailByCode`\" pulumi-lang-java=\"`verifyEmailByCode`\"\u003e`verify_email_by_code`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resetEmail`\" pulumi-lang-dotnet=\"`ResetEmail`\" pulumi-lang-go=\"`resetEmail`\" pulumi-lang-python=\"`reset_email`\" pulumi-lang-yaml=\"`resetEmail`\" pulumi-lang-java=\"`resetEmail`\"\u003e`reset_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resetEmailByCode`\" pulumi-lang-dotnet=\"`ResetEmailByCode`\" pulumi-lang-go=\"`resetEmailByCode`\" pulumi-lang-python=\"`reset_email_by_code`\" pulumi-lang-yaml=\"`resetEmailByCode`\" pulumi-lang-java=\"`resetEmailByCode`\"\u003e`reset_email_by_code`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`welcomeEmail`\" pulumi-lang-dotnet=\"`WelcomeEmail`\" pulumi-lang-go=\"`welcomeEmail`\" pulumi-lang-python=\"`welcome_email`\" pulumi-lang-yaml=\"`welcomeEmail`\" pulumi-lang-java=\"`welcomeEmail`\"\u003e`welcome_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`blockedAccount`\" pulumi-lang-dotnet=\"`BlockedAccount`\" pulumi-lang-go=\"`blockedAccount`\" pulumi-lang-python=\"`blocked_account`\" pulumi-lang-yaml=\"`blockedAccount`\" pulumi-lang-java=\"`blockedAccount`\"\u003e`blocked_account`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`stolenCredentials`\" pulumi-lang-dotnet=\"`StolenCredentials`\" pulumi-lang-go=\"`stolenCredentials`\" pulumi-lang-python=\"`stolen_credentials`\" pulumi-lang-yaml=\"`stolenCredentials`\" pulumi-lang-java=\"`stolenCredentials`\"\u003e`stolen_credentials`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`enrollmentEmail`\" pulumi-lang-dotnet=\"`EnrollmentEmail`\" pulumi-lang-go=\"`enrollmentEmail`\" pulumi-lang-python=\"`enrollment_email`\" pulumi-lang-yaml=\"`enrollmentEmail`\" pulumi-lang-java=\"`enrollmentEmail`\"\u003e`enrollment_email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mfaOobCode`\" pulumi-lang-dotnet=\"`MfaOobCode`\" pulumi-lang-go=\"`mfaOobCode`\" pulumi-lang-python=\"`mfa_oob_code`\" pulumi-lang-yaml=\"`mfaOobCode`\" pulumi-lang-java=\"`mfaOobCode`\"\u003e`mfa_oob_code`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`userInvitation`\" pulumi-lang-dotnet=\"`UserInvitation`\" pulumi-lang-go=\"`userInvitation`\" pulumi-lang-python=\"`user_invitation`\" pulumi-lang-yaml=\"`userInvitation`\" pulumi-lang-java=\"`userInvitation`\"\u003e`user_invitation`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`changePassword`\" pulumi-lang-dotnet=\"`ChangePassword`\" pulumi-lang-go=\"`changePassword`\" pulumi-lang-python=\"`change_password`\" pulumi-lang-yaml=\"`changePassword`\" pulumi-lang-java=\"`changePassword`\"\u003e`change_password`\u003c/span\u003e (legacy), \u003cspan pulumi-lang-nodejs=\"`passwordReset`\" pulumi-lang-dotnet=\"`PasswordReset`\" pulumi-lang-go=\"`passwordReset`\" pulumi-lang-python=\"`password_reset`\" pulumi-lang-yaml=\"`passwordReset`\" pulumi-lang-java=\"`passwordReset`\"\u003e`password_reset`\u003c/span\u003e (legacy), or \u003cspan pulumi-lang-nodejs=\"`asyncApproval`\" pulumi-lang-dotnet=\"`AsyncApproval`\" pulumi-lang-go=\"`asyncApproval`\" pulumi-lang-python=\"`async_approval`\" pulumi-lang-yaml=\"`asyncApproval`\" pulumi-lang-java=\"`asyncApproval`\"\u003e`async_approval`\u003c/span\u003e.\n"
                    },
                    "urlLifetimeInSeconds": {
                        "type": "integer",
                        "description": "Number of seconds during which the link within the email will be valid.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/encryptionKeyManager:EncryptionKeyManager": {
            "description": "Resource to allow the rekeying of your tenant master key.\n\n",
            "properties": {
                "customerProvidedRootKey": {
                    "$ref": "#/types/auth0:index/EncryptionKeyManagerCustomerProvidedRootKey:EncryptionKeyManagerCustomerProvidedRootKey",
                    "description": "This attribute is used for provisioning the customer provided root key. To initiate the provisioning process, create a new empty \u003cspan pulumi-lang-nodejs=\"`customerProvidedRootKey`\" pulumi-lang-dotnet=\"`CustomerProvidedRootKey`\" pulumi-lang-go=\"`customerProvidedRootKey`\" pulumi-lang-python=\"`customer_provided_root_key`\" pulumi-lang-yaml=\"`customerProvidedRootKey`\" pulumi-lang-java=\"`customerProvidedRootKey`\"\u003e`customer_provided_root_key`\u003c/span\u003e block. After applying this, the \u003cspan pulumi-lang-nodejs=\"`publicWrappingKey`\" pulumi-lang-dotnet=\"`PublicWrappingKey`\" pulumi-lang-go=\"`publicWrappingKey`\" pulumi-lang-python=\"`public_wrapping_key`\" pulumi-lang-yaml=\"`publicWrappingKey`\" pulumi-lang-java=\"`publicWrappingKey`\"\u003e`public_wrapping_key`\u003c/span\u003e can be retreived from the resource, and the new root key should be generated by the customer and wrapped with the wrapping key, then base64-encoded and added as the \u003cspan pulumi-lang-nodejs=\"`wrappedKey`\" pulumi-lang-dotnet=\"`WrappedKey`\" pulumi-lang-go=\"`wrappedKey`\" pulumi-lang-python=\"`wrapped_key`\" pulumi-lang-yaml=\"`wrappedKey`\" pulumi-lang-java=\"`wrappedKey`\"\u003e`wrapped_key`\u003c/span\u003e attribute.\n"
                },
                "encryptionKeys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/EncryptionKeyManagerEncryptionKey:EncryptionKeyManagerEncryptionKey"
                    },
                    "description": "All encryption keys.\n"
                },
                "keyRotationId": {
                    "type": "string",
                    "description": "If this value is changed, the encryption keys will be rotated. A UUID is recommended for the \u003cspan pulumi-lang-nodejs=\"`keyRotationId`\" pulumi-lang-dotnet=\"`KeyRotationId`\" pulumi-lang-go=\"`keyRotationId`\" pulumi-lang-python=\"`key_rotation_id`\" pulumi-lang-yaml=\"`keyRotationId`\" pulumi-lang-java=\"`keyRotationId`\"\u003e`key_rotation_id`\u003c/span\u003e.\n"
                }
            },
            "required": [
                "encryptionKeys"
            ],
            "inputProperties": {
                "customerProvidedRootKey": {
                    "$ref": "#/types/auth0:index/EncryptionKeyManagerCustomerProvidedRootKey:EncryptionKeyManagerCustomerProvidedRootKey",
                    "description": "This attribute is used for provisioning the customer provided root key. To initiate the provisioning process, create a new empty \u003cspan pulumi-lang-nodejs=\"`customerProvidedRootKey`\" pulumi-lang-dotnet=\"`CustomerProvidedRootKey`\" pulumi-lang-go=\"`customerProvidedRootKey`\" pulumi-lang-python=\"`customer_provided_root_key`\" pulumi-lang-yaml=\"`customerProvidedRootKey`\" pulumi-lang-java=\"`customerProvidedRootKey`\"\u003e`customer_provided_root_key`\u003c/span\u003e block. After applying this, the \u003cspan pulumi-lang-nodejs=\"`publicWrappingKey`\" pulumi-lang-dotnet=\"`PublicWrappingKey`\" pulumi-lang-go=\"`publicWrappingKey`\" pulumi-lang-python=\"`public_wrapping_key`\" pulumi-lang-yaml=\"`publicWrappingKey`\" pulumi-lang-java=\"`publicWrappingKey`\"\u003e`public_wrapping_key`\u003c/span\u003e can be retreived from the resource, and the new root key should be generated by the customer and wrapped with the wrapping key, then base64-encoded and added as the \u003cspan pulumi-lang-nodejs=\"`wrappedKey`\" pulumi-lang-dotnet=\"`WrappedKey`\" pulumi-lang-go=\"`wrappedKey`\" pulumi-lang-python=\"`wrapped_key`\" pulumi-lang-yaml=\"`wrappedKey`\" pulumi-lang-java=\"`wrappedKey`\"\u003e`wrapped_key`\u003c/span\u003e attribute.\n"
                },
                "keyRotationId": {
                    "type": "string",
                    "description": "If this value is changed, the encryption keys will be rotated. A UUID is recommended for the \u003cspan pulumi-lang-nodejs=\"`keyRotationId`\" pulumi-lang-dotnet=\"`KeyRotationId`\" pulumi-lang-go=\"`keyRotationId`\" pulumi-lang-python=\"`key_rotation_id`\" pulumi-lang-yaml=\"`keyRotationId`\" pulumi-lang-java=\"`keyRotationId`\"\u003e`key_rotation_id`\u003c/span\u003e.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EncryptionKeyManager resources.\n",
                "properties": {
                    "customerProvidedRootKey": {
                        "$ref": "#/types/auth0:index/EncryptionKeyManagerCustomerProvidedRootKey:EncryptionKeyManagerCustomerProvidedRootKey",
                        "description": "This attribute is used for provisioning the customer provided root key. To initiate the provisioning process, create a new empty \u003cspan pulumi-lang-nodejs=\"`customerProvidedRootKey`\" pulumi-lang-dotnet=\"`CustomerProvidedRootKey`\" pulumi-lang-go=\"`customerProvidedRootKey`\" pulumi-lang-python=\"`customer_provided_root_key`\" pulumi-lang-yaml=\"`customerProvidedRootKey`\" pulumi-lang-java=\"`customerProvidedRootKey`\"\u003e`customer_provided_root_key`\u003c/span\u003e block. After applying this, the \u003cspan pulumi-lang-nodejs=\"`publicWrappingKey`\" pulumi-lang-dotnet=\"`PublicWrappingKey`\" pulumi-lang-go=\"`publicWrappingKey`\" pulumi-lang-python=\"`public_wrapping_key`\" pulumi-lang-yaml=\"`publicWrappingKey`\" pulumi-lang-java=\"`publicWrappingKey`\"\u003e`public_wrapping_key`\u003c/span\u003e can be retreived from the resource, and the new root key should be generated by the customer and wrapped with the wrapping key, then base64-encoded and added as the \u003cspan pulumi-lang-nodejs=\"`wrappedKey`\" pulumi-lang-dotnet=\"`WrappedKey`\" pulumi-lang-go=\"`wrappedKey`\" pulumi-lang-python=\"`wrapped_key`\" pulumi-lang-yaml=\"`wrappedKey`\" pulumi-lang-java=\"`wrappedKey`\"\u003e`wrapped_key`\u003c/span\u003e attribute.\n"
                    },
                    "encryptionKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/EncryptionKeyManagerEncryptionKey:EncryptionKeyManagerEncryptionKey"
                        },
                        "description": "All encryption keys.\n"
                    },
                    "keyRotationId": {
                        "type": "string",
                        "description": "If this value is changed, the encryption keys will be rotated. A UUID is recommended for the \u003cspan pulumi-lang-nodejs=\"`keyRotationId`\" pulumi-lang-dotnet=\"`KeyRotationId`\" pulumi-lang-go=\"`keyRotationId`\" pulumi-lang-python=\"`key_rotation_id`\" pulumi-lang-yaml=\"`keyRotationId`\" pulumi-lang-java=\"`keyRotationId`\"\u003e`key_rotation_id`\u003c/span\u003e.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/eventStream:EventStream": {
            "description": "Allows you to manage Auth0 Event Streams.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Creates an event stream of type eventbridge\nconst myEventStreamEventBridge = new auth0.EventStream(\"my_event_stream_event_bridge\", {\n    name: \"my-eventbridge\",\n    destinationType: \"eventbridge\",\n    subscriptions: [\n        \"user.created\",\n        \"user.updated\",\n    ],\n    eventbridgeConfiguration: {\n        awsAccountId: \"242849305777\",\n        awsRegion: \"us-east-1\",\n    },\n});\n// Creates an event stream of type webhook\nconst myEventStreamWebhook = new auth0.EventStream(\"my_event_stream_webhook\", {\n    name: \"my-webhook\",\n    destinationType: \"webhook\",\n    subscriptions: [\n        \"user.created\",\n        \"user.updated\",\n    ],\n    webhookConfiguration: {\n        webhookEndpoint: \"https://eof28wtn4v4506o.m.pipedream.net\",\n        webhookAuthorization: {\n            method: \"bearer\",\n            token: \"123456789\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# Creates an event stream of type eventbridge\nmy_event_stream_event_bridge = auth0.EventStream(\"my_event_stream_event_bridge\",\n    name=\"my-eventbridge\",\n    destination_type=\"eventbridge\",\n    subscriptions=[\n        \"user.created\",\n        \"user.updated\",\n    ],\n    eventbridge_configuration={\n        \"aws_account_id\": \"242849305777\",\n        \"aws_region\": \"us-east-1\",\n    })\n# Creates an event stream of type webhook\nmy_event_stream_webhook = auth0.EventStream(\"my_event_stream_webhook\",\n    name=\"my-webhook\",\n    destination_type=\"webhook\",\n    subscriptions=[\n        \"user.created\",\n        \"user.updated\",\n    ],\n    webhook_configuration={\n        \"webhook_endpoint\": \"https://eof28wtn4v4506o.m.pipedream.net\",\n        \"webhook_authorization\": {\n            \"method\": \"bearer\",\n            \"token\": \"123456789\",\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Creates an event stream of type eventbridge\n    var myEventStreamEventBridge = new Auth0.EventStream(\"my_event_stream_event_bridge\", new()\n    {\n        Name = \"my-eventbridge\",\n        DestinationType = \"eventbridge\",\n        Subscriptions = new[]\n        {\n            \"user.created\",\n            \"user.updated\",\n        },\n        EventbridgeConfiguration = new Auth0.Inputs.EventStreamEventbridgeConfigurationArgs\n        {\n            AwsAccountId = \"242849305777\",\n            AwsRegion = \"us-east-1\",\n        },\n    });\n\n    // Creates an event stream of type webhook\n    var myEventStreamWebhook = new Auth0.EventStream(\"my_event_stream_webhook\", new()\n    {\n        Name = \"my-webhook\",\n        DestinationType = \"webhook\",\n        Subscriptions = new[]\n        {\n            \"user.created\",\n            \"user.updated\",\n        },\n        WebhookConfiguration = new Auth0.Inputs.EventStreamWebhookConfigurationArgs\n        {\n            WebhookEndpoint = \"https://eof28wtn4v4506o.m.pipedream.net\",\n            WebhookAuthorization = new Auth0.Inputs.EventStreamWebhookConfigurationWebhookAuthorizationArgs\n            {\n                Method = \"bearer\",\n                Token = \"123456789\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Creates an event stream of type eventbridge\n\t\t_, err := auth0.NewEventStream(ctx, \"my_event_stream_event_bridge\", \u0026auth0.EventStreamArgs{\n\t\t\tName:            pulumi.String(\"my-eventbridge\"),\n\t\t\tDestinationType: pulumi.String(\"eventbridge\"),\n\t\t\tSubscriptions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user.created\"),\n\t\t\t\tpulumi.String(\"user.updated\"),\n\t\t\t},\n\t\t\tEventbridgeConfiguration: \u0026auth0.EventStreamEventbridgeConfigurationArgs{\n\t\t\t\tAwsAccountId: pulumi.String(\"242849305777\"),\n\t\t\t\tAwsRegion:    pulumi.String(\"us-east-1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Creates an event stream of type webhook\n\t\t_, err = auth0.NewEventStream(ctx, \"my_event_stream_webhook\", \u0026auth0.EventStreamArgs{\n\t\t\tName:            pulumi.String(\"my-webhook\"),\n\t\t\tDestinationType: pulumi.String(\"webhook\"),\n\t\t\tSubscriptions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user.created\"),\n\t\t\t\tpulumi.String(\"user.updated\"),\n\t\t\t},\n\t\t\tWebhookConfiguration: \u0026auth0.EventStreamWebhookConfigurationArgs{\n\t\t\t\tWebhookEndpoint: pulumi.String(\"https://eof28wtn4v4506o.m.pipedream.net\"),\n\t\t\t\tWebhookAuthorization: \u0026auth0.EventStreamWebhookConfigurationWebhookAuthorizationArgs{\n\t\t\t\t\tMethod: pulumi.String(\"bearer\"),\n\t\t\t\t\tToken:  pulumi.String(\"123456789\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.EventStream;\nimport com.pulumi.auth0.EventStreamArgs;\nimport com.pulumi.auth0.inputs.EventStreamEventbridgeConfigurationArgs;\nimport com.pulumi.auth0.inputs.EventStreamWebhookConfigurationArgs;\nimport com.pulumi.auth0.inputs.EventStreamWebhookConfigurationWebhookAuthorizationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Creates an event stream of type eventbridge\n        var myEventStreamEventBridge = new EventStream(\"myEventStreamEventBridge\", EventStreamArgs.builder()\n            .name(\"my-eventbridge\")\n            .destinationType(\"eventbridge\")\n            .subscriptions(            \n                \"user.created\",\n                \"user.updated\")\n            .eventbridgeConfiguration(EventStreamEventbridgeConfigurationArgs.builder()\n                .awsAccountId(\"242849305777\")\n                .awsRegion(\"us-east-1\")\n                .build())\n            .build());\n\n        // Creates an event stream of type webhook\n        var myEventStreamWebhook = new EventStream(\"myEventStreamWebhook\", EventStreamArgs.builder()\n            .name(\"my-webhook\")\n            .destinationType(\"webhook\")\n            .subscriptions(            \n                \"user.created\",\n                \"user.updated\")\n            .webhookConfiguration(EventStreamWebhookConfigurationArgs.builder()\n                .webhookEndpoint(\"https://eof28wtn4v4506o.m.pipedream.net\")\n                .webhookAuthorization(EventStreamWebhookConfigurationWebhookAuthorizationArgs.builder()\n                    .method(\"bearer\")\n                    .token(\"123456789\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Creates an event stream of type eventbridge\n  myEventStreamEventBridge:\n    type: auth0:EventStream\n    name: my_event_stream_event_bridge\n    properties:\n      name: my-eventbridge\n      destinationType: eventbridge\n      subscriptions:\n        - user.created\n        - user.updated\n      eventbridgeConfiguration:\n        awsAccountId: '242849305777'\n        awsRegion: us-east-1\n  # Creates an event stream of type webhook\n  myEventStreamWebhook:\n    type: auth0:EventStream\n    name: my_event_stream_webhook\n    properties:\n      name: my-webhook\n      destinationType: webhook\n      subscriptions:\n        - user.created\n        - user.updated\n      webhookConfiguration:\n        webhookEndpoint: https://eof28wtn4v4506o.m.pipedream.net\n        webhookAuthorization:\n          method: bearer\n          token: '123456789'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the Event Stream ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/eventStream:EventStream my_stream \"est_XXXXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp when the stream was created.\n"
                },
                "destinationType": {
                    "type": "string",
                    "description": "The type of event stream destination (either 'eventbridge' or 'webhook').\n"
                },
                "eventbridgeConfiguration": {
                    "$ref": "#/types/auth0:index/EventStreamEventbridgeConfiguration:EventStreamEventbridgeConfiguration",
                    "description": "Configuration for the EventBridge destination. This block is only applicable when \u003cspan pulumi-lang-nodejs=\"`destinationType`\" pulumi-lang-dotnet=\"`DestinationType`\" pulumi-lang-go=\"`destinationType`\" pulumi-lang-python=\"`destination_type`\" pulumi-lang-yaml=\"`destinationType`\" pulumi-lang-java=\"`destinationType`\"\u003e`destination_type`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`eventbridge`\" pulumi-lang-dotnet=\"`Eventbridge`\" pulumi-lang-go=\"`eventbridge`\" pulumi-lang-python=\"`eventbridge`\" pulumi-lang-yaml=\"`eventbridge`\" pulumi-lang-java=\"`eventbridge`\"\u003e`eventbridge`\u003c/span\u003e. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the event stream.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the event stream.\n"
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of event types this stream is subscribed to.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 timestamp when the stream was last updated.\n"
                },
                "webhookConfiguration": {
                    "$ref": "#/types/auth0:index/EventStreamWebhookConfiguration:EventStreamWebhookConfiguration",
                    "description": "Configuration for the Webhook destination. This block is only applicable when \u003cspan pulumi-lang-nodejs=\"`destinationType`\" pulumi-lang-dotnet=\"`DestinationType`\" pulumi-lang-go=\"`destinationType`\" pulumi-lang-python=\"`destination_type`\" pulumi-lang-yaml=\"`destinationType`\" pulumi-lang-java=\"`destinationType`\"\u003e`destination_type`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`webhook`\" pulumi-lang-dotnet=\"`Webhook`\" pulumi-lang-go=\"`webhook`\" pulumi-lang-python=\"`webhook`\" pulumi-lang-yaml=\"`webhook`\" pulumi-lang-java=\"`webhook`\"\u003e`webhook`\u003c/span\u003e. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.\n"
                }
            },
            "required": [
                "createdAt",
                "destinationType",
                "name",
                "status",
                "subscriptions",
                "updatedAt"
            ],
            "inputProperties": {
                "destinationType": {
                    "type": "string",
                    "description": "The type of event stream destination (either 'eventbridge' or 'webhook').\n",
                    "willReplaceOnChanges": true
                },
                "eventbridgeConfiguration": {
                    "$ref": "#/types/auth0:index/EventStreamEventbridgeConfiguration:EventStreamEventbridgeConfiguration",
                    "description": "Configuration for the EventBridge destination. This block is only applicable when \u003cspan pulumi-lang-nodejs=\"`destinationType`\" pulumi-lang-dotnet=\"`DestinationType`\" pulumi-lang-go=\"`destinationType`\" pulumi-lang-python=\"`destination_type`\" pulumi-lang-yaml=\"`destinationType`\" pulumi-lang-java=\"`destinationType`\"\u003e`destination_type`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`eventbridge`\" pulumi-lang-dotnet=\"`Eventbridge`\" pulumi-lang-go=\"`eventbridge`\" pulumi-lang-python=\"`eventbridge`\" pulumi-lang-yaml=\"`eventbridge`\" pulumi-lang-java=\"`eventbridge`\"\u003e`eventbridge`\u003c/span\u003e. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the event stream.\n"
                },
                "subscriptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of event types this stream is subscribed to.\n"
                },
                "webhookConfiguration": {
                    "$ref": "#/types/auth0:index/EventStreamWebhookConfiguration:EventStreamWebhookConfiguration",
                    "description": "Configuration for the Webhook destination. This block is only applicable when \u003cspan pulumi-lang-nodejs=\"`destinationType`\" pulumi-lang-dotnet=\"`DestinationType`\" pulumi-lang-go=\"`destinationType`\" pulumi-lang-python=\"`destination_type`\" pulumi-lang-yaml=\"`destinationType`\" pulumi-lang-java=\"`destinationType`\"\u003e`destination_type`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`webhook`\" pulumi-lang-dotnet=\"`Webhook`\" pulumi-lang-go=\"`webhook`\" pulumi-lang-python=\"`webhook`\" pulumi-lang-yaml=\"`webhook`\" pulumi-lang-java=\"`webhook`\"\u003e`webhook`\u003c/span\u003e. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.\n"
                }
            },
            "requiredInputs": [
                "destinationType",
                "subscriptions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventStream resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The ISO 8601 timestamp when the stream was created.\n"
                    },
                    "destinationType": {
                        "type": "string",
                        "description": "The type of event stream destination (either 'eventbridge' or 'webhook').\n",
                        "willReplaceOnChanges": true
                    },
                    "eventbridgeConfiguration": {
                        "$ref": "#/types/auth0:index/EventStreamEventbridgeConfiguration:EventStreamEventbridgeConfiguration",
                        "description": "Configuration for the EventBridge destination. This block is only applicable when \u003cspan pulumi-lang-nodejs=\"`destinationType`\" pulumi-lang-dotnet=\"`DestinationType`\" pulumi-lang-go=\"`destinationType`\" pulumi-lang-python=\"`destination_type`\" pulumi-lang-yaml=\"`destinationType`\" pulumi-lang-java=\"`destinationType`\"\u003e`destination_type`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`eventbridge`\" pulumi-lang-dotnet=\"`Eventbridge`\" pulumi-lang-go=\"`eventbridge`\" pulumi-lang-python=\"`eventbridge`\" pulumi-lang-yaml=\"`eventbridge`\" pulumi-lang-java=\"`eventbridge`\"\u003e`eventbridge`\u003c/span\u003e. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the event stream.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the event stream.\n"
                    },
                    "subscriptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of event types this stream is subscribed to.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The ISO 8601 timestamp when the stream was last updated.\n"
                    },
                    "webhookConfiguration": {
                        "$ref": "#/types/auth0:index/EventStreamWebhookConfiguration:EventStreamWebhookConfiguration",
                        "description": "Configuration for the Webhook destination. This block is only applicable when \u003cspan pulumi-lang-nodejs=\"`destinationType`\" pulumi-lang-dotnet=\"`DestinationType`\" pulumi-lang-go=\"`destinationType`\" pulumi-lang-python=\"`destination_type`\" pulumi-lang-yaml=\"`destinationType`\" pulumi-lang-java=\"`destinationType`\"\u003e`destination_type`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`webhook`\" pulumi-lang-dotnet=\"`Webhook`\" pulumi-lang-go=\"`webhook`\" pulumi-lang-python=\"`webhook`\" pulumi-lang-yaml=\"`webhook`\" pulumi-lang-java=\"`webhook`\"\u003e`webhook`\u003c/span\u003e. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/flow:Flow": {
            "description": "With this resource, you can create and manage Flows for a tenant.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Example:\nconst myFlow = new auth0.Flow(\"my_flow\", {\n    actions: JSON.stringify([{\n        action: \"UPDATE_USER\",\n        alias: \"user meta data\",\n        allow_failure: false,\n        id: \"update_user_PmSa\",\n        mask_output: false,\n        params: {\n            changes: {\n                user_metadata: {\n                    full_name: \"{{fields.full_name}}\",\n                },\n            },\n            connection_id: \"\u003cvault_connection_id\u003e\",\n            user_id: \"{{context.user.user_id}}\",\n        },\n        type: \"AUTH0\",\n    }]),\n    name: \"Flow KYC update data\",\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\n# Example:\nmy_flow = auth0.Flow(\"my_flow\",\n    actions=json.dumps([{\n        \"action\": \"UPDATE_USER\",\n        \"alias\": \"user meta data\",\n        \"allow_failure\": False,\n        \"id\": \"update_user_PmSa\",\n        \"mask_output\": False,\n        \"params\": {\n            \"changes\": {\n                \"user_metadata\": {\n                    \"full_name\": \"{{fields.full_name}}\",\n                },\n            },\n            \"connection_id\": \"\u003cvault_connection_id\u003e\",\n            \"user_id\": \"{{context.user.user_id}}\",\n        },\n        \"type\": \"AUTH0\",\n    }]),\n    name=\"Flow KYC update data\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example:\n    var myFlow = new Auth0.Flow(\"my_flow\", new()\n    {\n        Actions = JsonSerializer.Serialize(new[]\n        {\n            new Dictionary\u003cstring, object?\u003e\n            {\n                [\"action\"] = \"UPDATE_USER\",\n                [\"alias\"] = \"user meta data\",\n                [\"allow_failure\"] = false,\n                [\"id\"] = \"update_user_PmSa\",\n                [\"mask_output\"] = false,\n                [\"params\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"changes\"] = new Dictionary\u003cstring, object?\u003e\n                    {\n                        [\"user_metadata\"] = new Dictionary\u003cstring, object?\u003e\n                        {\n                            [\"full_name\"] = \"{{fields.full_name}}\",\n                        },\n                    },\n                    [\"connection_id\"] = \"\u003cvault_connection_id\u003e\",\n                    [\"user_id\"] = \"{{context.user.user_id}}\",\n                },\n                [\"type\"] = \"AUTH0\",\n            },\n        }),\n        Name = \"Flow KYC update data\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal([]map[string]interface{}{\n\t\t\tmap[string]interface{}{\n\t\t\t\t\"action\":        \"UPDATE_USER\",\n\t\t\t\t\"alias\":         \"user meta data\",\n\t\t\t\t\"allow_failure\": false,\n\t\t\t\t\"id\":            \"update_user_PmSa\",\n\t\t\t\t\"mask_output\":   false,\n\t\t\t\t\"params\": map[string]interface{}{\n\t\t\t\t\t\"changes\": map[string]interface{}{\n\t\t\t\t\t\t\"user_metadata\": map[string]interface{}{\n\t\t\t\t\t\t\t\"full_name\": \"{{fields.full_name}}\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"connection_id\": \"\u003cvault_connection_id\u003e\",\n\t\t\t\t\t\"user_id\":       \"{{context.user.user_id}}\",\n\t\t\t\t},\n\t\t\t\t\"type\": \"AUTH0\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t// Example:\n\t\t_, err = auth0.NewFlow(ctx, \"my_flow\", \u0026auth0.FlowArgs{\n\t\t\tActions: pulumi.String(json0),\n\t\t\tName:    pulumi.String(\"Flow KYC update data\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Flow;\nimport com.pulumi.auth0.FlowArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Example:\n        var myFlow = new Flow(\"myFlow\", FlowArgs.builder()\n            .actions(serializeJson(\n                jsonArray(jsonObject(\n                    jsonProperty(\"action\", \"UPDATE_USER\"),\n                    jsonProperty(\"alias\", \"user meta data\"),\n                    jsonProperty(\"allow_failure\", false),\n                    jsonProperty(\"id\", \"update_user_PmSa\"),\n                    jsonProperty(\"mask_output\", false),\n                    jsonProperty(\"params\", jsonObject(\n                        jsonProperty(\"changes\", jsonObject(\n                            jsonProperty(\"user_metadata\", jsonObject(\n                                jsonProperty(\"full_name\", \"{{fields.full_name}}\")\n                            ))\n                        )),\n                        jsonProperty(\"connection_id\", \"\u003cvault_connection_id\u003e\"),\n                        jsonProperty(\"user_id\", \"{{context.user.user_id}}\")\n                    )),\n                    jsonProperty(\"type\", \"AUTH0\")\n                ))))\n            .name(\"Flow KYC update data\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example:\n  myFlow:\n    type: auth0:Flow\n    name: my_flow\n    properties:\n      actions:\n        fn::toJSON:\n          - action: UPDATE_USER\n            alias: user meta data\n            allow_failure: false\n            id: update_user_PmSa\n            mask_output: false\n            params:\n              changes:\n                user_metadata:\n                  full_name: '{{fields.full_name}}'\n              connection_id: \u003cvault_connection_id\u003e\n              user_id: '{{context.user.user_id}}'\n            type: AUTH0\n      name: Flow KYC update data\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the flow ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/flow:Flow my_flow \"af_4JwsAjokf6DpK8xJCkTRjK\"\n```\n\n",
            "properties": {
                "actions": {
                    "type": "string",
                    "description": "Actions of the flow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the flow.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "actions": {
                    "type": "string",
                    "description": "Actions of the flow.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the flow.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Flow resources.\n",
                "properties": {
                    "actions": {
                        "type": "string",
                        "description": "Actions of the flow.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the flow.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/flowVaultConnection:FlowVaultConnection": {
            "description": "With this resource, you can create and manage flow vault connections for a tenant.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Example:\nconst myConnection = new auth0.FlowVaultConnection(\"my_connection\", {\n    appId: \"AUTH0\",\n    name: \"Auth0 M2M Connection\",\n    setup: {\n        client_id: \"******************\",\n        client_secret: \"*********************************\",\n        domain: \"*****************************\",\n        type: \"OAUTH_APP\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# Example:\nmy_connection = auth0.FlowVaultConnection(\"my_connection\",\n    app_id=\"AUTH0\",\n    name=\"Auth0 M2M Connection\",\n    setup={\n        \"client_id\": \"******************\",\n        \"client_secret\": \"*********************************\",\n        \"domain\": \"*****************************\",\n        \"type\": \"OAUTH_APP\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example:\n    var myConnection = new Auth0.FlowVaultConnection(\"my_connection\", new()\n    {\n        AppId = \"AUTH0\",\n        Name = \"Auth0 M2M Connection\",\n        Setup = \n        {\n            { \"client_id\", \"******************\" },\n            { \"client_secret\", \"*********************************\" },\n            { \"domain\", \"*****************************\" },\n            { \"type\", \"OAUTH_APP\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Example:\n\t\t_, err := auth0.NewFlowVaultConnection(ctx, \"my_connection\", \u0026auth0.FlowVaultConnectionArgs{\n\t\t\tAppId: pulumi.String(\"AUTH0\"),\n\t\t\tName:  pulumi.String(\"Auth0 M2M Connection\"),\n\t\t\tSetup: pulumi.StringMap{\n\t\t\t\t\"client_id\":     pulumi.String(\"******************\"),\n\t\t\t\t\"client_secret\": pulumi.String(\"*********************************\"),\n\t\t\t\t\"domain\":        pulumi.String(\"*****************************\"),\n\t\t\t\t\"type\":          pulumi.String(\"OAUTH_APP\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.FlowVaultConnection;\nimport com.pulumi.auth0.FlowVaultConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Example:\n        var myConnection = new FlowVaultConnection(\"myConnection\", FlowVaultConnectionArgs.builder()\n            .appId(\"AUTH0\")\n            .name(\"Auth0 M2M Connection\")\n            .setup(Map.ofEntries(\n                Map.entry(\"client_id\", \"******************\"),\n                Map.entry(\"client_secret\", \"*********************************\"),\n                Map.entry(\"domain\", \"*****************************\"),\n                Map.entry(\"type\", \"OAUTH_APP\")\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example:\n  myConnection:\n    type: auth0:FlowVaultConnection\n    name: my_connection\n    properties:\n      appId: AUTH0\n      name: Auth0 M2M Connection\n      setup:\n        client_id: '******************'\n        client_secret: '*********************************'\n        domain: '*****************************'\n        type: OAUTH_APP\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the flow vault connection ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/flowVaultConnection:FlowVaultConnection my_connection \"ac_42HT5oiobDyUs8ASwEEWK0\"\n```\n\n",
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "Custom account name of the vault connection.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "App identifier of the vault connection.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Environment of the vault connection.\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "Fingerprint of the vault connection.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the vault connection.\n"
                },
                "ready": {
                    "type": "boolean",
                    "description": "Indicates if the vault connection is configured.\n"
                },
                "setup": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Configuration of the vault connection. (Mapping information must be provided as key/value pairs)\n",
                    "secret": true
                }
            },
            "required": [
                "appId",
                "fingerprint",
                "name",
                "ready"
            ],
            "inputProperties": {
                "accountName": {
                    "type": "string",
                    "description": "Custom account name of the vault connection.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "App identifier of the vault connection.\n"
                },
                "environment": {
                    "type": "string",
                    "description": "Environment of the vault connection.\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "Fingerprint of the vault connection.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the vault connection.\n"
                },
                "setup": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Configuration of the vault connection. (Mapping information must be provided as key/value pairs)\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "appId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FlowVaultConnection resources.\n",
                "properties": {
                    "accountName": {
                        "type": "string",
                        "description": "Custom account name of the vault connection.\n"
                    },
                    "appId": {
                        "type": "string",
                        "description": "App identifier of the vault connection.\n"
                    },
                    "environment": {
                        "type": "string",
                        "description": "Environment of the vault connection.\n"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "Fingerprint of the vault connection.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the vault connection.\n"
                    },
                    "ready": {
                        "type": "boolean",
                        "description": "Indicates if the vault connection is configured.\n"
                    },
                    "setup": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Configuration of the vault connection. (Mapping information must be provided as key/value pairs)\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/form:Form": {
            "description": "With this resource, you can create and manage Forms for a tenant.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Example:\nconst myForm = new auth0.Form(\"my_form\", {\n    name: \"My KYC Form\",\n    start: JSON.stringify({\n        coordinates: {\n            x: 0,\n            y: 0,\n        },\n        next_node: \"step_ggeX\",\n    }),\n    nodes: JSON.stringify([{\n        alias: \"New step\",\n        config: {\n            components: [\n                {\n                    category: \"FIELD\",\n                    config: {\n                        max_length: 50,\n                        min_length: 1,\n                        multiline: false,\n                    },\n                    id: \"full_name\",\n                    label: \"Your Name\",\n                    required: true,\n                    sensitive: false,\n                    type: \"TEXT\",\n                },\n                {\n                    category: \"BLOCK\",\n                    config: {\n                        text: \"Continue\",\n                    },\n                    id: \"next_button_3FbA\",\n                    type: \"NEXT_BUTTON\",\n                },\n            ],\n            next_node: \"$ending\",\n        },\n        coordinates: {\n            x: 500,\n            y: 0,\n        },\n        id: \"step_ggeX\",\n        type: \"STEP\",\n    }]),\n    ending: JSON.stringify({\n        after_submit: {\n            flow_id: \"\u003cmy_flow_id\u003e\",\n        },\n        coordinates: {\n            x: 1250,\n            y: 0,\n        },\n        resume_flow: true,\n    }),\n    style: JSON.stringify({\n        css: `h1 {\n  color: white;\n  text-align: center;\n}`,\n    }),\n    translations: JSON.stringify({\n        es: {\n            components: {\n                rich_text_uctu: {\n                    config: {\n                        content: \"\u003ch2\u003eHelp us verify your personal information\u003c/h2\u003e\u003cp\u003eWe want to learn more about you so that we can validate and protect your account...\u003c/p\u003e\",\n                    },\n                },\n            },\n            messages: {\n                custom: {},\n                errors: {\n                    ERR_ACCEPTANCE_REQUIRED: \"Por favor, marca este campo para continuar.\",\n                },\n            },\n        },\n    }),\n    messages: [{\n        errors: JSON.stringify({\n            ERR_REQUIRED_PROPERTY: \"This field is required for user kyc.\",\n        }),\n    }],\n    languages: [{\n        \"default\": \"en\",\n        primary: \"en\",\n    }],\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\n# Example:\nmy_form = auth0.Form(\"my_form\",\n    name=\"My KYC Form\",\n    start=json.dumps({\n        \"coordinates\": {\n            \"x\": 0,\n            \"y\": 0,\n        },\n        \"next_node\": \"step_ggeX\",\n    }),\n    nodes=json.dumps([{\n        \"alias\": \"New step\",\n        \"config\": {\n            \"components\": [\n                {\n                    \"category\": \"FIELD\",\n                    \"config\": {\n                        \"max_length\": 50,\n                        \"min_length\": 1,\n                        \"multiline\": False,\n                    },\n                    \"id\": \"full_name\",\n                    \"label\": \"Your Name\",\n                    \"required\": True,\n                    \"sensitive\": False,\n                    \"type\": \"TEXT\",\n                },\n                {\n                    \"category\": \"BLOCK\",\n                    \"config\": {\n                        \"text\": \"Continue\",\n                    },\n                    \"id\": \"next_button_3FbA\",\n                    \"type\": \"NEXT_BUTTON\",\n                },\n            ],\n            \"next_node\": \"$ending\",\n        },\n        \"coordinates\": {\n            \"x\": 500,\n            \"y\": 0,\n        },\n        \"id\": \"step_ggeX\",\n        \"type\": \"STEP\",\n    }]),\n    ending=json.dumps({\n        \"after_submit\": {\n            \"flow_id\": \"\u003cmy_flow_id\u003e\",\n        },\n        \"coordinates\": {\n            \"x\": 1250,\n            \"y\": 0,\n        },\n        \"resume_flow\": True,\n    }),\n    style=json.dumps({\n        \"css\": \"\"\"h1 {\n  color: white;\n  text-align: center;\n}\"\"\",\n    }),\n    translations=json.dumps({\n        \"es\": {\n            \"components\": {\n                \"rich_text_uctu\": {\n                    \"config\": {\n                        \"content\": \"\u003ch2\u003eHelp us verify your personal information\u003c/h2\u003e\u003cp\u003eWe want to learn more about you so that we can validate and protect your account...\u003c/p\u003e\",\n                    },\n                },\n            },\n            \"messages\": {\n                \"custom\": {},\n                \"errors\": {\n                    \"ERR_ACCEPTANCE_REQUIRED\": \"Por favor, marca este campo para continuar.\",\n                },\n            },\n        },\n    }),\n    messages=[{\n        \"errors\": json.dumps({\n            \"ERR_REQUIRED_PROPERTY\": \"This field is required for user kyc.\",\n        }),\n    }],\n    languages=[{\n        \"default\": \"en\",\n        \"primary\": \"en\",\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example:\n    var myForm = new Auth0.Form(\"my_form\", new()\n    {\n        Name = \"My KYC Form\",\n        Start = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"coordinates\"] = new Dictionary\u003cstring, object?\u003e\n            {\n                [\"x\"] = 0,\n                [\"y\"] = 0,\n            },\n            [\"next_node\"] = \"step_ggeX\",\n        }),\n        Nodes = JsonSerializer.Serialize(new[]\n        {\n            new Dictionary\u003cstring, object?\u003e\n            {\n                [\"alias\"] = \"New step\",\n                [\"config\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"components\"] = new[]\n                    {\n                        new Dictionary\u003cstring, object?\u003e\n                        {\n                            [\"category\"] = \"FIELD\",\n                            [\"config\"] = new Dictionary\u003cstring, object?\u003e\n                            {\n                                [\"max_length\"] = 50,\n                                [\"min_length\"] = 1,\n                                [\"multiline\"] = false,\n                            },\n                            [\"id\"] = \"full_name\",\n                            [\"label\"] = \"Your Name\",\n                            [\"required\"] = true,\n                            [\"sensitive\"] = false,\n                            [\"type\"] = \"TEXT\",\n                        },\n                        new Dictionary\u003cstring, object?\u003e\n                        {\n                            [\"category\"] = \"BLOCK\",\n                            [\"config\"] = new Dictionary\u003cstring, object?\u003e\n                            {\n                                [\"text\"] = \"Continue\",\n                            },\n                            [\"id\"] = \"next_button_3FbA\",\n                            [\"type\"] = \"NEXT_BUTTON\",\n                        },\n                    },\n                    [\"next_node\"] = \"$ending\",\n                },\n                [\"coordinates\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"x\"] = 500,\n                    [\"y\"] = 0,\n                },\n                [\"id\"] = \"step_ggeX\",\n                [\"type\"] = \"STEP\",\n            },\n        }),\n        Ending = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"after_submit\"] = new Dictionary\u003cstring, object?\u003e\n            {\n                [\"flow_id\"] = \"\u003cmy_flow_id\u003e\",\n            },\n            [\"coordinates\"] = new Dictionary\u003cstring, object?\u003e\n            {\n                [\"x\"] = 1250,\n                [\"y\"] = 0,\n            },\n            [\"resume_flow\"] = true,\n        }),\n        Style = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"css\"] = @\"h1 {\n  color: white;\n  text-align: center;\n}\",\n        }),\n        Translations = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"es\"] = new Dictionary\u003cstring, object?\u003e\n            {\n                [\"components\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"rich_text_uctu\"] = new Dictionary\u003cstring, object?\u003e\n                    {\n                        [\"config\"] = new Dictionary\u003cstring, object?\u003e\n                        {\n                            [\"content\"] = \"\u003ch2\u003eHelp us verify your personal information\u003c/h2\u003e\u003cp\u003eWe want to learn more about you so that we can validate and protect your account...\u003c/p\u003e\",\n                        },\n                    },\n                },\n                [\"messages\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"custom\"] = new Dictionary\u003cstring, object?\u003e\n                    {\n                    },\n                    [\"errors\"] = new Dictionary\u003cstring, object?\u003e\n                    {\n                        [\"ERR_ACCEPTANCE_REQUIRED\"] = \"Por favor, marca este campo para continuar.\",\n                    },\n                },\n            },\n        }),\n        Messages = new[]\n        {\n            new Auth0.Inputs.FormMessageArgs\n            {\n                Errors = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"ERR_REQUIRED_PROPERTY\"] = \"This field is required for user kyc.\",\n                }),\n            },\n        },\n        Languages = new[]\n        {\n            new Auth0.Inputs.FormLanguageArgs\n            {\n                Default = \"en\",\n                Primary = \"en\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"coordinates\": map[string]interface{}{\n\t\t\t\t\"x\": 0,\n\t\t\t\t\"y\": 0,\n\t\t\t},\n\t\t\t\"next_node\": \"step_ggeX\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\ttmpJSON1, err := json.Marshal([]map[string]interface{}{\n\t\t\tmap[string]interface{}{\n\t\t\t\t\"alias\": \"New step\",\n\t\t\t\t\"config\": map[string]interface{}{\n\t\t\t\t\t\"components\": []interface{}{\n\t\t\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\t\t\"category\": \"FIELD\",\n\t\t\t\t\t\t\t\"config\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\"max_length\": 50,\n\t\t\t\t\t\t\t\t\"min_length\": 1,\n\t\t\t\t\t\t\t\t\"multiline\":  false,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"id\":        \"full_name\",\n\t\t\t\t\t\t\t\"label\":     \"Your Name\",\n\t\t\t\t\t\t\t\"required\":  true,\n\t\t\t\t\t\t\t\"sensitive\": false,\n\t\t\t\t\t\t\t\"type\":      \"TEXT\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\t\t\"category\": \"BLOCK\",\n\t\t\t\t\t\t\t\"config\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\"text\": \"Continue\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"id\":   \"next_button_3FbA\",\n\t\t\t\t\t\t\t\"type\": \"NEXT_BUTTON\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t\"next_node\": \"$ending\",\n\t\t\t\t},\n\t\t\t\t\"coordinates\": map[string]interface{}{\n\t\t\t\t\t\"x\": 500,\n\t\t\t\t\t\"y\": 0,\n\t\t\t\t},\n\t\t\t\t\"id\":   \"step_ggeX\",\n\t\t\t\t\"type\": \"STEP\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\ttmpJSON2, err := json.Marshal(map[string]interface{}{\n\t\t\t\"after_submit\": map[string]interface{}{\n\t\t\t\t\"flow_id\": \"\u003cmy_flow_id\u003e\",\n\t\t\t},\n\t\t\t\"coordinates\": map[string]interface{}{\n\t\t\t\t\"x\": 1250,\n\t\t\t\t\"y\": 0,\n\t\t\t},\n\t\t\t\"resume_flow\": true,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson2 := string(tmpJSON2)\n\t\ttmpJSON3, err := json.Marshal(map[string]interface{}{\n\t\t\t\"css\": \"h1 {\\n  color: white;\\n  text-align: center;\\n}\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson3 := string(tmpJSON3)\n\t\ttmpJSON4, err := json.Marshal(map[string]interface{}{\n\t\t\t\"es\": map[string]interface{}{\n\t\t\t\t\"components\": map[string]interface{}{\n\t\t\t\t\t\"rich_text_uctu\": map[string]interface{}{\n\t\t\t\t\t\t\"config\": map[string]interface{}{\n\t\t\t\t\t\t\t\"content\": \"\u003ch2\u003eHelp us verify your personal information\u003c/h2\u003e\u003cp\u003eWe want to learn more about you so that we can validate and protect your account...\u003c/p\u003e\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\"messages\": map[string]interface{}{\n\t\t\t\t\t\"custom\": map[string]interface{}{},\n\t\t\t\t\t\"errors\": map[string]interface{}{\n\t\t\t\t\t\t\"ERR_ACCEPTANCE_REQUIRED\": \"Por favor, marca este campo para continuar.\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson4 := string(tmpJSON4)\n\t\ttmpJSON5, err := json.Marshal(map[string]interface{}{\n\t\t\t\"ERR_REQUIRED_PROPERTY\": \"This field is required for user kyc.\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson5 := string(tmpJSON5)\n\t\t// Example:\n\t\t_, err = auth0.NewForm(ctx, \"my_form\", \u0026auth0.FormArgs{\n\t\t\tName:         pulumi.String(\"My KYC Form\"),\n\t\t\tStart:        pulumi.String(json0),\n\t\t\tNodes:        pulumi.String(json1),\n\t\t\tEnding:       pulumi.String(json2),\n\t\t\tStyle:        pulumi.String(json3),\n\t\t\tTranslations: pulumi.String(json4),\n\t\t\tMessages: auth0.FormMessageArray{\n\t\t\t\t\u0026auth0.FormMessageArgs{\n\t\t\t\t\tErrors: pulumi.String(json5),\n\t\t\t\t},\n\t\t\t},\n\t\t\tLanguages: auth0.FormLanguageArray{\n\t\t\t\t\u0026auth0.FormLanguageArgs{\n\t\t\t\t\tDefault: pulumi.String(\"en\"),\n\t\t\t\t\tPrimary: pulumi.String(\"en\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Form;\nimport com.pulumi.auth0.FormArgs;\nimport com.pulumi.auth0.inputs.FormMessageArgs;\nimport com.pulumi.auth0.inputs.FormLanguageArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Example:\n        var myForm = new Form(\"myForm\", FormArgs.builder()\n            .name(\"My KYC Form\")\n            .start(serializeJson(\n                jsonObject(\n                    jsonProperty(\"coordinates\", jsonObject(\n                        jsonProperty(\"x\", 0),\n                        jsonProperty(\"y\", 0)\n                    )),\n                    jsonProperty(\"next_node\", \"step_ggeX\")\n                )))\n            .nodes(serializeJson(\n                jsonArray(jsonObject(\n                    jsonProperty(\"alias\", \"New step\"),\n                    jsonProperty(\"config\", jsonObject(\n                        jsonProperty(\"components\", jsonArray(\n                            jsonObject(\n                                jsonProperty(\"category\", \"FIELD\"),\n                                jsonProperty(\"config\", jsonObject(\n                                    jsonProperty(\"max_length\", 50),\n                                    jsonProperty(\"min_length\", 1),\n                                    jsonProperty(\"multiline\", false)\n                                )),\n                                jsonProperty(\"id\", \"full_name\"),\n                                jsonProperty(\"label\", \"Your Name\"),\n                                jsonProperty(\"required\", true),\n                                jsonProperty(\"sensitive\", false),\n                                jsonProperty(\"type\", \"TEXT\")\n                            ), \n                            jsonObject(\n                                jsonProperty(\"category\", \"BLOCK\"),\n                                jsonProperty(\"config\", jsonObject(\n                                    jsonProperty(\"text\", \"Continue\")\n                                )),\n                                jsonProperty(\"id\", \"next_button_3FbA\"),\n                                jsonProperty(\"type\", \"NEXT_BUTTON\")\n                            )\n                        )),\n                        jsonProperty(\"next_node\", \"$ending\")\n                    )),\n                    jsonProperty(\"coordinates\", jsonObject(\n                        jsonProperty(\"x\", 500),\n                        jsonProperty(\"y\", 0)\n                    )),\n                    jsonProperty(\"id\", \"step_ggeX\"),\n                    jsonProperty(\"type\", \"STEP\")\n                ))))\n            .ending(serializeJson(\n                jsonObject(\n                    jsonProperty(\"after_submit\", jsonObject(\n                        jsonProperty(\"flow_id\", \"\u003cmy_flow_id\u003e\")\n                    )),\n                    jsonProperty(\"coordinates\", jsonObject(\n                        jsonProperty(\"x\", 1250),\n                        jsonProperty(\"y\", 0)\n                    )),\n                    jsonProperty(\"resume_flow\", true)\n                )))\n            .style(serializeJson(\n                jsonObject(\n                    jsonProperty(\"css\", \"\"\"\nh1 {\n  color: white;\n  text-align: center;\n}                    \"\"\")\n                )))\n            .translations(serializeJson(\n                jsonObject(\n                    jsonProperty(\"es\", jsonObject(\n                        jsonProperty(\"components\", jsonObject(\n                            jsonProperty(\"rich_text_uctu\", jsonObject(\n                                jsonProperty(\"config\", jsonObject(\n                                    jsonProperty(\"content\", \"\u003ch2\u003eHelp us verify your personal information\u003c/h2\u003e\u003cp\u003eWe want to learn more about you so that we can validate and protect your account...\u003c/p\u003e\")\n                                ))\n                            ))\n                        )),\n                        jsonProperty(\"messages\", jsonObject(\n                            jsonProperty(\"custom\", jsonObject(\n\n                            )),\n                            jsonProperty(\"errors\", jsonObject(\n                                jsonProperty(\"ERR_ACCEPTANCE_REQUIRED\", \"Por favor, marca este campo para continuar.\")\n                            ))\n                        ))\n                    ))\n                )))\n            .messages(FormMessageArgs.builder()\n                .errors(serializeJson(\n                    jsonObject(\n                        jsonProperty(\"ERR_REQUIRED_PROPERTY\", \"This field is required for user kyc.\")\n                    )))\n                .build())\n            .languages(FormLanguageArgs.builder()\n                .default_(\"en\")\n                .primary(\"en\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example:\n  myForm:\n    type: auth0:Form\n    name: my_form\n    properties:\n      name: My KYC Form\n      start:\n        fn::toJSON:\n          coordinates:\n            x: 0\n            y: 0\n          next_node: step_ggeX\n      nodes:\n        fn::toJSON:\n          - alias: New step\n            config:\n              components:\n                - category: FIELD\n                  config:\n                    max_length: 50\n                    min_length: 1\n                    multiline: false\n                  id: full_name\n                  label: Your Name\n                  required: true\n                  sensitive: false\n                  type: TEXT\n                - category: BLOCK\n                  config:\n                    text: Continue\n                  id: next_button_3FbA\n                  type: NEXT_BUTTON\n              next_node: $ending\n            coordinates:\n              x: 500\n              y: 0\n            id: step_ggeX\n            type: STEP\n      ending:\n        fn::toJSON:\n          after_submit:\n            flow_id: \u003cmy_flow_id\u003e\n          coordinates:\n            x: 1250\n            y: 0\n          resume_flow: true\n      style:\n        fn::toJSON:\n          css: |-\n            h1 {\n              color: white;\n              text-align: center;\n            }\n      translations:\n        fn::toJSON:\n          es:\n            components:\n              rich_text_uctu:\n                config:\n                  content: \u003ch2\u003eHelp us verify your personal information\u003c/h2\u003e\u003cp\u003eWe want to learn more about you so that we can validate and protect your account...\u003c/p\u003e\n            messages:\n              custom: {}\n              errors:\n                ERR_ACCEPTANCE_REQUIRED: Por favor, marca este campo para continuar.\n      messages:\n        - errors:\n            fn::toJSON:\n              ERR_REQUIRED_PROPERTY: This field is required for user kyc.\n      languages:\n        - default: en\n          primary: en\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the form ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/form:Form my_form \"ap_ojkKbiPMG6J5E5VCKdeCzK\"\n```\n\n",
            "properties": {
                "ending": {
                    "type": "string",
                    "description": "Submission configuration of the form. (JSON encoded)\n"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/FormLanguage:FormLanguage"
                    },
                    "description": "Language specific configuration for the form.\n"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/FormMessage:FormMessage"
                    },
                    "description": "Message specific configuration for the form.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the form.\n"
                },
                "nodes": {
                    "type": "string",
                    "description": "Nodes of the form. (JSON encoded)\n"
                },
                "start": {
                    "type": "string",
                    "description": "Input setup of the form. (JSON encoded)\n"
                },
                "style": {
                    "type": "string",
                    "description": "Style specific configuration for the form. (JSON encoded)\n"
                },
                "translations": {
                    "type": "string",
                    "description": "Translations of the form. (JSON encoded)\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "ending": {
                    "type": "string",
                    "description": "Submission configuration of the form. (JSON encoded)\n"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/FormLanguage:FormLanguage"
                    },
                    "description": "Language specific configuration for the form.\n"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/FormMessage:FormMessage"
                    },
                    "description": "Message specific configuration for the form.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the form.\n"
                },
                "nodes": {
                    "type": "string",
                    "description": "Nodes of the form. (JSON encoded)\n"
                },
                "start": {
                    "type": "string",
                    "description": "Input setup of the form. (JSON encoded)\n"
                },
                "style": {
                    "type": "string",
                    "description": "Style specific configuration for the form. (JSON encoded)\n"
                },
                "translations": {
                    "type": "string",
                    "description": "Translations of the form. (JSON encoded)\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Form resources.\n",
                "properties": {
                    "ending": {
                        "type": "string",
                        "description": "Submission configuration of the form. (JSON encoded)\n"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/FormLanguage:FormLanguage"
                        },
                        "description": "Language specific configuration for the form.\n"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/FormMessage:FormMessage"
                        },
                        "description": "Message specific configuration for the form.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the form.\n"
                    },
                    "nodes": {
                        "type": "string",
                        "description": "Nodes of the form. (JSON encoded)\n"
                    },
                    "start": {
                        "type": "string",
                        "description": "Input setup of the form. (JSON encoded)\n"
                    },
                    "style": {
                        "type": "string",
                        "description": "Style specific configuration for the form. (JSON encoded)\n"
                    },
                    "translations": {
                        "type": "string",
                        "description": "Translations of the form. (JSON encoded)\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/guardian:Guardian": {
            "description": "Multi-Factor Authentication works by requiring additional factors during the login process to prevent unauthorized access. With this resource you can configure some options available for MFA.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myGuardian = new auth0.Guardian(\"my_guardian\", {\n    policy: \"all-applications\",\n    email: true,\n    otp: true,\n    recoveryCode: true,\n    webauthnPlatform: {\n        enabled: true,\n    },\n    webauthnRoaming: {\n        enabled: true,\n        userVerification: \"required\",\n    },\n    phone: {\n        enabled: true,\n        provider: \"auth0\",\n        messageTypes: [\n            \"sms\",\n            \"voice\",\n        ],\n        options: {\n            enrollmentMessage: \"{{code}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment.\",\n            verificationMessage: \"{{code}} is your verification code for {{tenant.friendly_name}}.\",\n        },\n    },\n    push: {\n        enabled: true,\n        provider: \"sns\",\n        amazonSns: {\n            awsAccessKeyId: \"test1\",\n            awsRegion: \"us-west-1\",\n            awsSecretAccessKey: \"secretKey\",\n            snsApnsPlatformApplicationArn: \"test_arn\",\n            snsGcmPlatformApplicationArn: \"test_arn\",\n        },\n        customApp: {\n            appName: \"CustomApp\",\n            appleAppLink: \"https://itunes.apple.com/us/app/my-app/id123121\",\n            googleAppLink: \"https://play.google.com/store/apps/details?id=com.my.app\",\n        },\n    },\n    duo: {\n        enabled: true,\n        integrationKey: \"someKey\",\n        secretKey: \"someSecret\",\n        hostname: \"api-hostname\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_guardian = auth0.Guardian(\"my_guardian\",\n    policy=\"all-applications\",\n    email=True,\n    otp=True,\n    recovery_code=True,\n    webauthn_platform={\n        \"enabled\": True,\n    },\n    webauthn_roaming={\n        \"enabled\": True,\n        \"user_verification\": \"required\",\n    },\n    phone={\n        \"enabled\": True,\n        \"provider\": \"auth0\",\n        \"message_types\": [\n            \"sms\",\n            \"voice\",\n        ],\n        \"options\": {\n            \"enrollment_message\": \"{{code}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment.\",\n            \"verification_message\": \"{{code}} is your verification code for {{tenant.friendly_name}}.\",\n        },\n    },\n    push={\n        \"enabled\": True,\n        \"provider\": \"sns\",\n        \"amazon_sns\": {\n            \"aws_access_key_id\": \"test1\",\n            \"aws_region\": \"us-west-1\",\n            \"aws_secret_access_key\": \"secretKey\",\n            \"sns_apns_platform_application_arn\": \"test_arn\",\n            \"sns_gcm_platform_application_arn\": \"test_arn\",\n        },\n        \"custom_app\": {\n            \"app_name\": \"CustomApp\",\n            \"apple_app_link\": \"https://itunes.apple.com/us/app/my-app/id123121\",\n            \"google_app_link\": \"https://play.google.com/store/apps/details?id=com.my.app\",\n        },\n    },\n    duo={\n        \"enabled\": True,\n        \"integration_key\": \"someKey\",\n        \"secret_key\": \"someSecret\",\n        \"hostname\": \"api-hostname\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myGuardian = new Auth0.Guardian(\"my_guardian\", new()\n    {\n        Policy = \"all-applications\",\n        Email = true,\n        Otp = true,\n        RecoveryCode = true,\n        WebauthnPlatform = new Auth0.Inputs.GuardianWebauthnPlatformArgs\n        {\n            Enabled = true,\n        },\n        WebauthnRoaming = new Auth0.Inputs.GuardianWebauthnRoamingArgs\n        {\n            Enabled = true,\n            UserVerification = \"required\",\n        },\n        Phone = new Auth0.Inputs.GuardianPhoneArgs\n        {\n            Enabled = true,\n            Provider = \"auth0\",\n            MessageTypes = new[]\n            {\n                \"sms\",\n                \"voice\",\n            },\n            Options = new Auth0.Inputs.GuardianPhoneOptionsArgs\n            {\n                EnrollmentMessage = \"{{code}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment.\",\n                VerificationMessage = \"{{code}} is your verification code for {{tenant.friendly_name}}.\",\n            },\n        },\n        Push = new Auth0.Inputs.GuardianPushArgs\n        {\n            Enabled = true,\n            Provider = \"sns\",\n            AmazonSns = new Auth0.Inputs.GuardianPushAmazonSnsArgs\n            {\n                AwsAccessKeyId = \"test1\",\n                AwsRegion = \"us-west-1\",\n                AwsSecretAccessKey = \"secretKey\",\n                SnsApnsPlatformApplicationArn = \"test_arn\",\n                SnsGcmPlatformApplicationArn = \"test_arn\",\n            },\n            CustomApp = new Auth0.Inputs.GuardianPushCustomAppArgs\n            {\n                AppName = \"CustomApp\",\n                AppleAppLink = \"https://itunes.apple.com/us/app/my-app/id123121\",\n                GoogleAppLink = \"https://play.google.com/store/apps/details?id=com.my.app\",\n            },\n        },\n        Duo = new Auth0.Inputs.GuardianDuoArgs\n        {\n            Enabled = true,\n            IntegrationKey = \"someKey\",\n            SecretKey = \"someSecret\",\n            Hostname = \"api-hostname\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewGuardian(ctx, \"my_guardian\", \u0026auth0.GuardianArgs{\n\t\t\tPolicy:       pulumi.String(\"all-applications\"),\n\t\t\tEmail:        pulumi.Bool(true),\n\t\t\tOtp:          pulumi.Bool(true),\n\t\t\tRecoveryCode: pulumi.Bool(true),\n\t\t\tWebauthnPlatform: \u0026auth0.GuardianWebauthnPlatformArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t},\n\t\t\tWebauthnRoaming: \u0026auth0.GuardianWebauthnRoamingArgs{\n\t\t\t\tEnabled:          pulumi.Bool(true),\n\t\t\t\tUserVerification: pulumi.String(\"required\"),\n\t\t\t},\n\t\t\tPhone: \u0026auth0.GuardianPhoneArgs{\n\t\t\t\tEnabled:  pulumi.Bool(true),\n\t\t\t\tProvider: pulumi.String(\"auth0\"),\n\t\t\t\tMessageTypes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"sms\"),\n\t\t\t\t\tpulumi.String(\"voice\"),\n\t\t\t\t},\n\t\t\t\tOptions: \u0026auth0.GuardianPhoneOptionsArgs{\n\t\t\t\t\tEnrollmentMessage:   pulumi.String(\"{{code}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment.\"),\n\t\t\t\t\tVerificationMessage: pulumi.String(\"{{code}} is your verification code for {{tenant.friendly_name}}.\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPush: \u0026auth0.GuardianPushArgs{\n\t\t\t\tEnabled:  pulumi.Bool(true),\n\t\t\t\tProvider: pulumi.String(\"sns\"),\n\t\t\t\tAmazonSns: \u0026auth0.GuardianPushAmazonSnsArgs{\n\t\t\t\t\tAwsAccessKeyId:                pulumi.String(\"test1\"),\n\t\t\t\t\tAwsRegion:                     pulumi.String(\"us-west-1\"),\n\t\t\t\t\tAwsSecretAccessKey:            pulumi.String(\"secretKey\"),\n\t\t\t\t\tSnsApnsPlatformApplicationArn: pulumi.String(\"test_arn\"),\n\t\t\t\t\tSnsGcmPlatformApplicationArn:  pulumi.String(\"test_arn\"),\n\t\t\t\t},\n\t\t\t\tCustomApp: \u0026auth0.GuardianPushCustomAppArgs{\n\t\t\t\t\tAppName:       pulumi.String(\"CustomApp\"),\n\t\t\t\t\tAppleAppLink:  pulumi.String(\"https://itunes.apple.com/us/app/my-app/id123121\"),\n\t\t\t\t\tGoogleAppLink: pulumi.String(\"https://play.google.com/store/apps/details?id=com.my.app\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tDuo: \u0026auth0.GuardianDuoArgs{\n\t\t\t\tEnabled:        pulumi.Bool(true),\n\t\t\t\tIntegrationKey: pulumi.String(\"someKey\"),\n\t\t\t\tSecretKey:      pulumi.String(\"someSecret\"),\n\t\t\t\tHostname:       pulumi.String(\"api-hostname\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Guardian;\nimport com.pulumi.auth0.GuardianArgs;\nimport com.pulumi.auth0.inputs.GuardianWebauthnPlatformArgs;\nimport com.pulumi.auth0.inputs.GuardianWebauthnRoamingArgs;\nimport com.pulumi.auth0.inputs.GuardianPhoneArgs;\nimport com.pulumi.auth0.inputs.GuardianPhoneOptionsArgs;\nimport com.pulumi.auth0.inputs.GuardianPushArgs;\nimport com.pulumi.auth0.inputs.GuardianPushAmazonSnsArgs;\nimport com.pulumi.auth0.inputs.GuardianPushCustomAppArgs;\nimport com.pulumi.auth0.inputs.GuardianDuoArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myGuardian = new Guardian(\"myGuardian\", GuardianArgs.builder()\n            .policy(\"all-applications\")\n            .email(true)\n            .otp(true)\n            .recoveryCode(true)\n            .webauthnPlatform(GuardianWebauthnPlatformArgs.builder()\n                .enabled(true)\n                .build())\n            .webauthnRoaming(GuardianWebauthnRoamingArgs.builder()\n                .enabled(true)\n                .userVerification(\"required\")\n                .build())\n            .phone(GuardianPhoneArgs.builder()\n                .enabled(true)\n                .provider(\"auth0\")\n                .messageTypes(                \n                    \"sms\",\n                    \"voice\")\n                .options(GuardianPhoneOptionsArgs.builder()\n                    .enrollmentMessage(\"{{code}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment.\")\n                    .verificationMessage(\"{{code}} is your verification code for {{tenant.friendly_name}}.\")\n                    .build())\n                .build())\n            .push(GuardianPushArgs.builder()\n                .enabled(true)\n                .provider(\"sns\")\n                .amazonSns(GuardianPushAmazonSnsArgs.builder()\n                    .awsAccessKeyId(\"test1\")\n                    .awsRegion(\"us-west-1\")\n                    .awsSecretAccessKey(\"secretKey\")\n                    .snsApnsPlatformApplicationArn(\"test_arn\")\n                    .snsGcmPlatformApplicationArn(\"test_arn\")\n                    .build())\n                .customApp(GuardianPushCustomAppArgs.builder()\n                    .appName(\"CustomApp\")\n                    .appleAppLink(\"https://itunes.apple.com/us/app/my-app/id123121\")\n                    .googleAppLink(\"https://play.google.com/store/apps/details?id=com.my.app\")\n                    .build())\n                .build())\n            .duo(GuardianDuoArgs.builder()\n                .enabled(true)\n                .integrationKey(\"someKey\")\n                .secretKey(\"someSecret\")\n                .hostname(\"api-hostname\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myGuardian:\n    type: auth0:Guardian\n    name: my_guardian\n    properties:\n      policy: all-applications\n      email: true\n      otp: true\n      recoveryCode: true\n      webauthnPlatform:\n        enabled: true\n      webauthnRoaming:\n        enabled: true\n        userVerification: required\n      phone:\n        enabled: true\n        provider: auth0\n        messageTypes:\n          - sms\n          - voice\n        options:\n          enrollmentMessage: '{{code}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment.'\n          verificationMessage: '{{code}} is your verification code for {{tenant.friendly_name}}.'\n      push:\n        enabled: true\n        provider: sns\n        amazonSns:\n          awsAccessKeyId: test1\n          awsRegion: us-west-1\n          awsSecretAccessKey: secretKey\n          snsApnsPlatformApplicationArn: test_arn\n          snsGcmPlatformApplicationArn: test_arn\n        customApp:\n          appName: CustomApp\n          appleAppLink: https://itunes.apple.com/us/app/my-app/id123121\n          googleAppLink: https://play.google.com/store/apps/details?id=com.my.app\n      duo:\n        enabled: true\n        integrationKey: someKey\n        secretKey: someSecret\n        hostname: api-hostname\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAs this is not a resource identifiable by an ID within the Auth0 Management API,\n\nguardian can be imported using a random string.\n\nWe recommend [Version 4 UUID](https://www.uuidgenerator.net/version4)\n\nExample:\n\n```sh\n$ pulumi import auth0:index/guardian:Guardian my_guardian \"24940d4b-4bd4-44e7-894e-f92e4de36a40\"\n```\n\n",
            "properties": {
                "duo": {
                    "$ref": "#/types/auth0:index/GuardianDuo:GuardianDuo",
                    "description": "Configuration settings for the Duo MFA. If this block is present, Duo MFA will be enabled, and disabled otherwise.\n"
                },
                "email": {
                    "type": "boolean",
                    "description": "Indicates whether email MFA is enabled.\n"
                },
                "otp": {
                    "type": "boolean",
                    "description": "Indicates whether one time password MFA is enabled.\n"
                },
                "phone": {
                    "$ref": "#/types/auth0:index/GuardianPhone:GuardianPhone",
                    "description": "Configuration settings for the phone MFA. If this block is present, Phone MFA will be enabled, and disabled otherwise.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "Policy to use. Available options are \u003cspan pulumi-lang-nodejs=\"`never`\" pulumi-lang-dotnet=\"`Never`\" pulumi-lang-go=\"`never`\" pulumi-lang-python=\"`never`\" pulumi-lang-yaml=\"`never`\" pulumi-lang-java=\"`never`\"\u003e`never`\u003c/span\u003e, `all-applications` and `confidence-score`.\n"
                },
                "push": {
                    "$ref": "#/types/auth0:index/GuardianPush:GuardianPush",
                    "description": "Configuration settings for the Push MFA. If this block is present, Push MFA will be enabled, and disabled otherwise.\n"
                },
                "recoveryCode": {
                    "type": "boolean",
                    "description": "Indicates whether recovery code MFA is enabled.\n"
                },
                "webauthnPlatform": {
                    "$ref": "#/types/auth0:index/GuardianWebauthnPlatform:GuardianWebauthnPlatform",
                    "description": "Configuration settings for the WebAuthn with FIDO Device Biometrics MFA. If this block is present, WebAuthn with FIDO Device Biometrics MFA will be enabled, and disabled otherwise.\n"
                },
                "webauthnRoaming": {
                    "$ref": "#/types/auth0:index/GuardianWebauthnRoaming:GuardianWebauthnRoaming",
                    "description": "Configuration settings for the WebAuthn with FIDO Security Keys MFA. If this block is present, WebAuthn with FIDO Security Keys MFA will be enabled, and disabled otherwise.\n"
                }
            },
            "required": [
                "duo",
                "phone",
                "policy",
                "push",
                "webauthnPlatform",
                "webauthnRoaming"
            ],
            "inputProperties": {
                "duo": {
                    "$ref": "#/types/auth0:index/GuardianDuo:GuardianDuo",
                    "description": "Configuration settings for the Duo MFA. If this block is present, Duo MFA will be enabled, and disabled otherwise.\n"
                },
                "email": {
                    "type": "boolean",
                    "description": "Indicates whether email MFA is enabled.\n"
                },
                "otp": {
                    "type": "boolean",
                    "description": "Indicates whether one time password MFA is enabled.\n"
                },
                "phone": {
                    "$ref": "#/types/auth0:index/GuardianPhone:GuardianPhone",
                    "description": "Configuration settings for the phone MFA. If this block is present, Phone MFA will be enabled, and disabled otherwise.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "Policy to use. Available options are \u003cspan pulumi-lang-nodejs=\"`never`\" pulumi-lang-dotnet=\"`Never`\" pulumi-lang-go=\"`never`\" pulumi-lang-python=\"`never`\" pulumi-lang-yaml=\"`never`\" pulumi-lang-java=\"`never`\"\u003e`never`\u003c/span\u003e, `all-applications` and `confidence-score`.\n"
                },
                "push": {
                    "$ref": "#/types/auth0:index/GuardianPush:GuardianPush",
                    "description": "Configuration settings for the Push MFA. If this block is present, Push MFA will be enabled, and disabled otherwise.\n"
                },
                "recoveryCode": {
                    "type": "boolean",
                    "description": "Indicates whether recovery code MFA is enabled.\n"
                },
                "webauthnPlatform": {
                    "$ref": "#/types/auth0:index/GuardianWebauthnPlatform:GuardianWebauthnPlatform",
                    "description": "Configuration settings for the WebAuthn with FIDO Device Biometrics MFA. If this block is present, WebAuthn with FIDO Device Biometrics MFA will be enabled, and disabled otherwise.\n"
                },
                "webauthnRoaming": {
                    "$ref": "#/types/auth0:index/GuardianWebauthnRoaming:GuardianWebauthnRoaming",
                    "description": "Configuration settings for the WebAuthn with FIDO Security Keys MFA. If this block is present, WebAuthn with FIDO Security Keys MFA will be enabled, and disabled otherwise.\n"
                }
            },
            "requiredInputs": [
                "policy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Guardian resources.\n",
                "properties": {
                    "duo": {
                        "$ref": "#/types/auth0:index/GuardianDuo:GuardianDuo",
                        "description": "Configuration settings for the Duo MFA. If this block is present, Duo MFA will be enabled, and disabled otherwise.\n"
                    },
                    "email": {
                        "type": "boolean",
                        "description": "Indicates whether email MFA is enabled.\n"
                    },
                    "otp": {
                        "type": "boolean",
                        "description": "Indicates whether one time password MFA is enabled.\n"
                    },
                    "phone": {
                        "$ref": "#/types/auth0:index/GuardianPhone:GuardianPhone",
                        "description": "Configuration settings for the phone MFA. If this block is present, Phone MFA will be enabled, and disabled otherwise.\n"
                    },
                    "policy": {
                        "type": "string",
                        "description": "Policy to use. Available options are \u003cspan pulumi-lang-nodejs=\"`never`\" pulumi-lang-dotnet=\"`Never`\" pulumi-lang-go=\"`never`\" pulumi-lang-python=\"`never`\" pulumi-lang-yaml=\"`never`\" pulumi-lang-java=\"`never`\"\u003e`never`\u003c/span\u003e, `all-applications` and `confidence-score`.\n"
                    },
                    "push": {
                        "$ref": "#/types/auth0:index/GuardianPush:GuardianPush",
                        "description": "Configuration settings for the Push MFA. If this block is present, Push MFA will be enabled, and disabled otherwise.\n"
                    },
                    "recoveryCode": {
                        "type": "boolean",
                        "description": "Indicates whether recovery code MFA is enabled.\n"
                    },
                    "webauthnPlatform": {
                        "$ref": "#/types/auth0:index/GuardianWebauthnPlatform:GuardianWebauthnPlatform",
                        "description": "Configuration settings for the WebAuthn with FIDO Device Biometrics MFA. If this block is present, WebAuthn with FIDO Device Biometrics MFA will be enabled, and disabled otherwise.\n"
                    },
                    "webauthnRoaming": {
                        "$ref": "#/types/auth0:index/GuardianWebauthnRoaming:GuardianWebauthnRoaming",
                        "description": "Configuration settings for the WebAuthn with FIDO Security Keys MFA. If this block is present, WebAuthn with FIDO Security Keys MFA will be enabled, and disabled otherwise.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/hook:Hook": {
            "description": "Hooks are secure, self-contained functions that allow you to customize the behavior of Auth0 when executed for selected extensibility points of the Auth0 platform. Auth0 invokes Hooks during runtime to execute your custom Node.js code. Depending on the extensibility point, you can use hooks with Database Connections and/or Passwordless Connections.\n\n!\u003e This resource is deprecated. Refer to the [guide on how to migrate from hooks to actions](https://auth0.com/docs/customize/actions/migrate/migrate-from-hooks-to-actions) and manage your actions using the \u003cspan pulumi-lang-nodejs=\"`auth0.Action`\" pulumi-lang-dotnet=\"`auth0.Action`\" pulumi-lang-go=\"`Action`\" pulumi-lang-python=\"`Action`\" pulumi-lang-yaml=\"`auth0.Action`\" pulumi-lang-java=\"`auth0.Action`\"\u003e`auth0.Action`\u003c/span\u003e resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myHook = new auth0.Hook(\"my_hook\", {\n    name: \"My Pre User Registration Hook\",\n    script: `    function (user, context, callback) {\n      callback(null, { user });\n    }\n`,\n    triggerId: \"pre-user-registration\",\n    enabled: true,\n    secrets: {\n        foo: \"bar\",\n    },\n    dependencies: {\n        auth0: \"2.30.0\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_hook = auth0.Hook(\"my_hook\",\n    name=\"My Pre User Registration Hook\",\n    script=\"\"\"    function (user, context, callback) {\n      callback(null, { user });\n    }\n\"\"\",\n    trigger_id=\"pre-user-registration\",\n    enabled=True,\n    secrets={\n        \"foo\": \"bar\",\n    },\n    dependencies={\n        \"auth0\": \"2.30.0\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myHook = new Auth0.Hook(\"my_hook\", new()\n    {\n        Name = \"My Pre User Registration Hook\",\n        Script = @\"    function (user, context, callback) {\n      callback(null, { user });\n    }\n\",\n        TriggerId = \"pre-user-registration\",\n        Enabled = true,\n        Secrets = \n        {\n            { \"foo\", \"bar\" },\n        },\n        Dependencies = \n        {\n            { \"auth0\", \"2.30.0\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewHook(ctx, \"my_hook\", \u0026auth0.HookArgs{\n\t\t\tName:      pulumi.String(\"My Pre User Registration Hook\"),\n\t\t\tScript:    pulumi.String(\"    function (user, context, callback) {\\n      callback(null, { user });\\n    }\\n\"),\n\t\t\tTriggerId: pulumi.String(\"pre-user-registration\"),\n\t\t\tEnabled:   pulumi.Bool(true),\n\t\t\tSecrets: pulumi.StringMap{\n\t\t\t\t\"foo\": pulumi.String(\"bar\"),\n\t\t\t},\n\t\t\tDependencies: pulumi.StringMap{\n\t\t\t\t\"auth0\": pulumi.String(\"2.30.0\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Hook;\nimport com.pulumi.auth0.HookArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myHook = new Hook(\"myHook\", HookArgs.builder()\n            .name(\"My Pre User Registration Hook\")\n            .script(\"\"\"\n    function (user, context, callback) {\n      callback(null, { user });\n    }\n            \"\"\")\n            .triggerId(\"pre-user-registration\")\n            .enabled(true)\n            .secrets(Map.of(\"foo\", \"bar\"))\n            .dependencies(Map.of(\"auth0\", \"2.30.0\"))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myHook:\n    type: auth0:Hook\n    name: my_hook\n    properties:\n      name: My Pre User Registration Hook\n      script: |2\n            function (user, context, callback) {\n              callback(null, { user });\n            }\n      triggerId: pre-user-registration\n      enabled: true\n      secrets:\n        foo: bar\n      dependencies:\n        auth0: 2.30.0\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the hook ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/hook:Hook my_hook \"00001\"\n```\n\n",
            "properties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Dependencies of this hook used by the WebTask server.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the hook is enabled, or disabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of this hook.\n"
                },
                "script": {
                    "type": "string",
                    "description": "Code to be executed when this hook runs.\n"
                },
                "secrets": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The secrets associated with the hook.\n",
                    "secret": true
                },
                "triggerId": {
                    "type": "string",
                    "description": "Execution stage of this rule. Can be credentials-exchange, pre-user-registration, post-user-registration, post-change-password, or send-phone-message.\n"
                }
            },
            "required": [
                "enabled",
                "name",
                "script",
                "triggerId"
            ],
            "inputProperties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Dependencies of this hook used by the WebTask server.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the hook is enabled, or disabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of this hook.\n"
                },
                "script": {
                    "type": "string",
                    "description": "Code to be executed when this hook runs.\n"
                },
                "secrets": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The secrets associated with the hook.\n",
                    "secret": true
                },
                "triggerId": {
                    "type": "string",
                    "description": "Execution stage of this rule. Can be credentials-exchange, pre-user-registration, post-user-registration, post-change-password, or send-phone-message.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "script",
                "triggerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Hook resources.\n",
                "properties": {
                    "dependencies": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Dependencies of this hook used by the WebTask server.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the hook is enabled, or disabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of this hook.\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "Code to be executed when this hook runs.\n"
                    },
                    "secrets": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The secrets associated with the hook.\n",
                        "secret": true
                    },
                    "triggerId": {
                        "type": "string",
                        "description": "Execution stage of this rule. Can be credentials-exchange, pre-user-registration, post-user-registration, post-change-password, or send-phone-message.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/logStream:LogStream": {
            "description": "With this resource, you can manage your Auth0 log streams.\n\n!\u003e isPriority is a field that can be set while the resource is being created.\nThis cannot be updated once set. Updating the value might result in a noisy plan.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example of an http log stream.\nconst myWebhook = new auth0.LogStream(\"my_webhook\", {\n    name: \"HTTP log stream\",\n    type: \"http\",\n    filters: [\n        {\n            type: \"category\",\n            name: \"auth.login.fail\",\n        },\n        {\n            type: \"category\",\n            name: \"auth.signup.fail\",\n        },\n    ],\n    sink: {\n        httpEndpoint: \"https://example.com/logs\",\n        httpContentType: \"application/json\",\n        httpContentFormat: \"JSONOBJECT\",\n        httpAuthorization: \"AKIAXXXXXXXXXXXXXXXX\",\n        httpCustomHeaders: [{\n            header: \"foo\",\n            value: \"bar\",\n        }],\n    },\n});\n// This is an example of an Amazon EventBridge log stream.\nconst exampleAws = new auth0.LogStream(\"example_aws\", {\n    name: \"AWS Eventbridge\",\n    type: \"eventbridge\",\n    status: \"active\",\n    sink: {\n        awsAccountId: \"my_account_id\",\n        awsRegion: \"us-east-2\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example of an http log stream.\nmy_webhook = auth0.LogStream(\"my_webhook\",\n    name=\"HTTP log stream\",\n    type=\"http\",\n    filters=[\n        {\n            \"type\": \"category\",\n            \"name\": \"auth.login.fail\",\n        },\n        {\n            \"type\": \"category\",\n            \"name\": \"auth.signup.fail\",\n        },\n    ],\n    sink={\n        \"http_endpoint\": \"https://example.com/logs\",\n        \"http_content_type\": \"application/json\",\n        \"http_content_format\": \"JSONOBJECT\",\n        \"http_authorization\": \"AKIAXXXXXXXXXXXXXXXX\",\n        \"http_custom_headers\": [{\n            \"header\": \"foo\",\n            \"value\": \"bar\",\n        }],\n    })\n# This is an example of an Amazon EventBridge log stream.\nexample_aws = auth0.LogStream(\"example_aws\",\n    name=\"AWS Eventbridge\",\n    type=\"eventbridge\",\n    status=\"active\",\n    sink={\n        \"aws_account_id\": \"my_account_id\",\n        \"aws_region\": \"us-east-2\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example of an http log stream.\n    var myWebhook = new Auth0.LogStream(\"my_webhook\", new()\n    {\n        Name = \"HTTP log stream\",\n        Type = \"http\",\n        Filters = new[]\n        {\n            \n            {\n                { \"type\", \"category\" },\n                { \"name\", \"auth.login.fail\" },\n            },\n            \n            {\n                { \"type\", \"category\" },\n                { \"name\", \"auth.signup.fail\" },\n            },\n        },\n        Sink = new Auth0.Inputs.LogStreamSinkArgs\n        {\n            HttpEndpoint = \"https://example.com/logs\",\n            HttpContentType = \"application/json\",\n            HttpContentFormat = \"JSONOBJECT\",\n            HttpAuthorization = \"AKIAXXXXXXXXXXXXXXXX\",\n            HttpCustomHeaders = new[]\n            {\n                \n                {\n                    { \"header\", \"foo\" },\n                    { \"value\", \"bar\" },\n                },\n            },\n        },\n    });\n\n    // This is an example of an Amazon EventBridge log stream.\n    var exampleAws = new Auth0.LogStream(\"example_aws\", new()\n    {\n        Name = \"AWS Eventbridge\",\n        Type = \"eventbridge\",\n        Status = \"active\",\n        Sink = new Auth0.Inputs.LogStreamSinkArgs\n        {\n            AwsAccountId = \"my_account_id\",\n            AwsRegion = \"us-east-2\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example of an http log stream.\n\t\t_, err := auth0.NewLogStream(ctx, \"my_webhook\", \u0026auth0.LogStreamArgs{\n\t\t\tName: pulumi.String(\"HTTP log stream\"),\n\t\t\tType: pulumi.String(\"http\"),\n\t\t\tFilters: pulumi.StringMapArray{\n\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\"type\": pulumi.String(\"category\"),\n\t\t\t\t\t\"name\": pulumi.String(\"auth.login.fail\"),\n\t\t\t\t},\n\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\"type\": pulumi.String(\"category\"),\n\t\t\t\t\t\"name\": pulumi.String(\"auth.signup.fail\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSink: \u0026auth0.LogStreamSinkArgs{\n\t\t\t\tHttpEndpoint:      pulumi.String(\"https://example.com/logs\"),\n\t\t\t\tHttpContentType:   pulumi.String(\"application/json\"),\n\t\t\t\tHttpContentFormat: pulumi.String(\"JSONOBJECT\"),\n\t\t\t\tHttpAuthorization: pulumi.String(\"AKIAXXXXXXXXXXXXXXXX\"),\n\t\t\t\tHttpCustomHeaders: pulumi.StringMapArray{\n\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\"header\": pulumi.String(\"foo\"),\n\t\t\t\t\t\t\"value\":  pulumi.String(\"bar\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// This is an example of an Amazon EventBridge log stream.\n\t\t_, err = auth0.NewLogStream(ctx, \"example_aws\", \u0026auth0.LogStreamArgs{\n\t\t\tName:   pulumi.String(\"AWS Eventbridge\"),\n\t\t\tType:   pulumi.String(\"eventbridge\"),\n\t\t\tStatus: pulumi.String(\"active\"),\n\t\t\tSink: \u0026auth0.LogStreamSinkArgs{\n\t\t\t\tAwsAccountId: pulumi.String(\"my_account_id\"),\n\t\t\t\tAwsRegion:    pulumi.String(\"us-east-2\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.LogStream;\nimport com.pulumi.auth0.LogStreamArgs;\nimport com.pulumi.auth0.inputs.LogStreamSinkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example of an http log stream.\n        var myWebhook = new LogStream(\"myWebhook\", LogStreamArgs.builder()\n            .name(\"HTTP log stream\")\n            .type(\"http\")\n            .filters(            \n                Map.ofEntries(\n                    Map.entry(\"type\", \"category\"),\n                    Map.entry(\"name\", \"auth.login.fail\")\n                ),\n                Map.ofEntries(\n                    Map.entry(\"type\", \"category\"),\n                    Map.entry(\"name\", \"auth.signup.fail\")\n                ))\n            .sink(LogStreamSinkArgs.builder()\n                .httpEndpoint(\"https://example.com/logs\")\n                .httpContentType(\"application/json\")\n                .httpContentFormat(\"JSONOBJECT\")\n                .httpAuthorization(\"AKIAXXXXXXXXXXXXXXXX\")\n                .httpCustomHeaders(Map.ofEntries(\n                    Map.entry(\"header\", \"foo\"),\n                    Map.entry(\"value\", \"bar\")\n                ))\n                .build())\n            .build());\n\n        // This is an example of an Amazon EventBridge log stream.\n        var exampleAws = new LogStream(\"exampleAws\", LogStreamArgs.builder()\n            .name(\"AWS Eventbridge\")\n            .type(\"eventbridge\")\n            .status(\"active\")\n            .sink(LogStreamSinkArgs.builder()\n                .awsAccountId(\"my_account_id\")\n                .awsRegion(\"us-east-2\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example of an http log stream.\n  myWebhook:\n    type: auth0:LogStream\n    name: my_webhook\n    properties:\n      name: HTTP log stream\n      type: http\n      filters:\n        - type: category\n          name: auth.login.fail\n        - type: category\n          name: auth.signup.fail\n      sink:\n        httpEndpoint: https://example.com/logs\n        httpContentType: application/json\n        httpContentFormat: JSONOBJECT\n        httpAuthorization: AKIAXXXXXXXXXXXXXXXX\n        httpCustomHeaders:\n          - header: foo\n            value: bar\n  # This is an example of an Amazon EventBridge log stream.\n  exampleAws:\n    type: auth0:LogStream\n    name: example_aws\n    properties:\n      name: AWS Eventbridge\n      type: eventbridge\n      status: active\n      sink:\n        awsAccountId: my_account_id\n        awsRegion: us-east-2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the log stream ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/logStream:LogStream example \"lst_XXXXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "Only logs events matching these filters will be delivered by the stream. If omitted or empty, all events will be delivered. Filters available: `auth.ancillary.fail`, `auth.ancillary.success`, `auth.login.fail`, `auth.login.notification`, `auth.login.success`, `auth.logout.fail`, `auth.logout.success`, `auth.signup.fail`, `auth.signup.success`, `auth.silent_auth.fail`, `auth.silent_auth.success`, `auth.token_exchange.fail`, `auth.token_exchange.success`, `management.fail`, `management.success`, `system.notification`, `user.fail`, `user.notification`, `user.success`, \u003cspan pulumi-lang-nodejs=\"`other`\" pulumi-lang-dotnet=\"`Other`\" pulumi-lang-go=\"`other`\" pulumi-lang-python=\"`other`\" pulumi-lang-yaml=\"`other`\" pulumi-lang-java=\"`other`\"\u003e`other`\u003c/span\u003e.\n"
                },
                "isPriority": {
                    "type": "boolean",
                    "description": "Set True for priority log streams, False for non-priority\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the log stream.\n"
                },
                "piiConfig": {
                    "$ref": "#/types/auth0:index/LogStreamPiiConfig:LogStreamPiiConfig",
                    "description": "Configuration for PII (Personally Identifiable Information) handling.\n"
                },
                "sink": {
                    "$ref": "#/types/auth0:index/LogStreamSink:LogStreamSink",
                    "description": "The sink configuration for the log stream.\n"
                },
                "startFrom": {
                    "type": "string",
                    "description": "The optional datetime (ISO 8601) to start streaming logs from.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the log stream. Options are \"active\", \"paused\", \"suspended\".\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the log stream, which indicates the sink provider. Options include: \u003cspan pulumi-lang-nodejs=\"`eventbridge`\" pulumi-lang-dotnet=\"`Eventbridge`\" pulumi-lang-go=\"`eventbridge`\" pulumi-lang-python=\"`eventbridge`\" pulumi-lang-yaml=\"`eventbridge`\" pulumi-lang-java=\"`eventbridge`\"\u003e`eventbridge`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`eventgrid`\" pulumi-lang-dotnet=\"`Eventgrid`\" pulumi-lang-go=\"`eventgrid`\" pulumi-lang-python=\"`eventgrid`\" pulumi-lang-yaml=\"`eventgrid`\" pulumi-lang-java=\"`eventgrid`\"\u003e`eventgrid`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`datadog`\" pulumi-lang-dotnet=\"`Datadog`\" pulumi-lang-go=\"`datadog`\" pulumi-lang-python=\"`datadog`\" pulumi-lang-yaml=\"`datadog`\" pulumi-lang-java=\"`datadog`\"\u003e`datadog`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`splunk`\" pulumi-lang-dotnet=\"`Splunk`\" pulumi-lang-go=\"`splunk`\" pulumi-lang-python=\"`splunk`\" pulumi-lang-yaml=\"`splunk`\" pulumi-lang-java=\"`splunk`\"\u003e`splunk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sumo`\" pulumi-lang-dotnet=\"`Sumo`\" pulumi-lang-go=\"`sumo`\" pulumi-lang-python=\"`sumo`\" pulumi-lang-yaml=\"`sumo`\" pulumi-lang-java=\"`sumo`\"\u003e`sumo`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mixpanel`\" pulumi-lang-dotnet=\"`Mixpanel`\" pulumi-lang-go=\"`mixpanel`\" pulumi-lang-python=\"`mixpanel`\" pulumi-lang-yaml=\"`mixpanel`\" pulumi-lang-java=\"`mixpanel`\"\u003e`mixpanel`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`segment`\" pulumi-lang-dotnet=\"`Segment`\" pulumi-lang-go=\"`segment`\" pulumi-lang-python=\"`segment`\" pulumi-lang-yaml=\"`segment`\" pulumi-lang-java=\"`segment`\"\u003e`segment`\u003c/span\u003e.\n"
                }
            },
            "required": [
                "filters",
                "name",
                "sink",
                "status",
                "type"
            ],
            "inputProperties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "Only logs events matching these filters will be delivered by the stream. If omitted or empty, all events will be delivered. Filters available: `auth.ancillary.fail`, `auth.ancillary.success`, `auth.login.fail`, `auth.login.notification`, `auth.login.success`, `auth.logout.fail`, `auth.logout.success`, `auth.signup.fail`, `auth.signup.success`, `auth.silent_auth.fail`, `auth.silent_auth.success`, `auth.token_exchange.fail`, `auth.token_exchange.success`, `management.fail`, `management.success`, `system.notification`, `user.fail`, `user.notification`, `user.success`, \u003cspan pulumi-lang-nodejs=\"`other`\" pulumi-lang-dotnet=\"`Other`\" pulumi-lang-go=\"`other`\" pulumi-lang-python=\"`other`\" pulumi-lang-yaml=\"`other`\" pulumi-lang-java=\"`other`\"\u003e`other`\u003c/span\u003e.\n"
                },
                "isPriority": {
                    "type": "boolean",
                    "description": "Set True for priority log streams, False for non-priority\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the log stream.\n"
                },
                "piiConfig": {
                    "$ref": "#/types/auth0:index/LogStreamPiiConfig:LogStreamPiiConfig",
                    "description": "Configuration for PII (Personally Identifiable Information) handling.\n"
                },
                "sink": {
                    "$ref": "#/types/auth0:index/LogStreamSink:LogStreamSink",
                    "description": "The sink configuration for the log stream.\n"
                },
                "startFrom": {
                    "type": "string",
                    "description": "The optional datetime (ISO 8601) to start streaming logs from.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the log stream. Options are \"active\", \"paused\", \"suspended\".\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the log stream, which indicates the sink provider. Options include: \u003cspan pulumi-lang-nodejs=\"`eventbridge`\" pulumi-lang-dotnet=\"`Eventbridge`\" pulumi-lang-go=\"`eventbridge`\" pulumi-lang-python=\"`eventbridge`\" pulumi-lang-yaml=\"`eventbridge`\" pulumi-lang-java=\"`eventbridge`\"\u003e`eventbridge`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`eventgrid`\" pulumi-lang-dotnet=\"`Eventgrid`\" pulumi-lang-go=\"`eventgrid`\" pulumi-lang-python=\"`eventgrid`\" pulumi-lang-yaml=\"`eventgrid`\" pulumi-lang-java=\"`eventgrid`\"\u003e`eventgrid`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`datadog`\" pulumi-lang-dotnet=\"`Datadog`\" pulumi-lang-go=\"`datadog`\" pulumi-lang-python=\"`datadog`\" pulumi-lang-yaml=\"`datadog`\" pulumi-lang-java=\"`datadog`\"\u003e`datadog`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`splunk`\" pulumi-lang-dotnet=\"`Splunk`\" pulumi-lang-go=\"`splunk`\" pulumi-lang-python=\"`splunk`\" pulumi-lang-yaml=\"`splunk`\" pulumi-lang-java=\"`splunk`\"\u003e`splunk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sumo`\" pulumi-lang-dotnet=\"`Sumo`\" pulumi-lang-go=\"`sumo`\" pulumi-lang-python=\"`sumo`\" pulumi-lang-yaml=\"`sumo`\" pulumi-lang-java=\"`sumo`\"\u003e`sumo`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mixpanel`\" pulumi-lang-dotnet=\"`Mixpanel`\" pulumi-lang-go=\"`mixpanel`\" pulumi-lang-python=\"`mixpanel`\" pulumi-lang-yaml=\"`mixpanel`\" pulumi-lang-java=\"`mixpanel`\"\u003e`mixpanel`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`segment`\" pulumi-lang-dotnet=\"`Segment`\" pulumi-lang-go=\"`segment`\" pulumi-lang-python=\"`segment`\" pulumi-lang-yaml=\"`segment`\" pulumi-lang-java=\"`segment`\"\u003e`segment`\u003c/span\u003e.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "sink",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogStream resources.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "description": "Only logs events matching these filters will be delivered by the stream. If omitted or empty, all events will be delivered. Filters available: `auth.ancillary.fail`, `auth.ancillary.success`, `auth.login.fail`, `auth.login.notification`, `auth.login.success`, `auth.logout.fail`, `auth.logout.success`, `auth.signup.fail`, `auth.signup.success`, `auth.silent_auth.fail`, `auth.silent_auth.success`, `auth.token_exchange.fail`, `auth.token_exchange.success`, `management.fail`, `management.success`, `system.notification`, `user.fail`, `user.notification`, `user.success`, \u003cspan pulumi-lang-nodejs=\"`other`\" pulumi-lang-dotnet=\"`Other`\" pulumi-lang-go=\"`other`\" pulumi-lang-python=\"`other`\" pulumi-lang-yaml=\"`other`\" pulumi-lang-java=\"`other`\"\u003e`other`\u003c/span\u003e.\n"
                    },
                    "isPriority": {
                        "type": "boolean",
                        "description": "Set True for priority log streams, False for non-priority\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the log stream.\n"
                    },
                    "piiConfig": {
                        "$ref": "#/types/auth0:index/LogStreamPiiConfig:LogStreamPiiConfig",
                        "description": "Configuration for PII (Personally Identifiable Information) handling.\n"
                    },
                    "sink": {
                        "$ref": "#/types/auth0:index/LogStreamSink:LogStreamSink",
                        "description": "The sink configuration for the log stream.\n"
                    },
                    "startFrom": {
                        "type": "string",
                        "description": "The optional datetime (ISO 8601) to start streaming logs from.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the log stream. Options are \"active\", \"paused\", \"suspended\".\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the log stream, which indicates the sink provider. Options include: \u003cspan pulumi-lang-nodejs=\"`eventbridge`\" pulumi-lang-dotnet=\"`Eventbridge`\" pulumi-lang-go=\"`eventbridge`\" pulumi-lang-python=\"`eventbridge`\" pulumi-lang-yaml=\"`eventbridge`\" pulumi-lang-java=\"`eventbridge`\"\u003e`eventbridge`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`eventgrid`\" pulumi-lang-dotnet=\"`Eventgrid`\" pulumi-lang-go=\"`eventgrid`\" pulumi-lang-python=\"`eventgrid`\" pulumi-lang-yaml=\"`eventgrid`\" pulumi-lang-java=\"`eventgrid`\"\u003e`eventgrid`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`http`\" pulumi-lang-dotnet=\"`Http`\" pulumi-lang-go=\"`http`\" pulumi-lang-python=\"`http`\" pulumi-lang-yaml=\"`http`\" pulumi-lang-java=\"`http`\"\u003e`http`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`datadog`\" pulumi-lang-dotnet=\"`Datadog`\" pulumi-lang-go=\"`datadog`\" pulumi-lang-python=\"`datadog`\" pulumi-lang-yaml=\"`datadog`\" pulumi-lang-java=\"`datadog`\"\u003e`datadog`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`splunk`\" pulumi-lang-dotnet=\"`Splunk`\" pulumi-lang-go=\"`splunk`\" pulumi-lang-python=\"`splunk`\" pulumi-lang-yaml=\"`splunk`\" pulumi-lang-java=\"`splunk`\"\u003e`splunk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sumo`\" pulumi-lang-dotnet=\"`Sumo`\" pulumi-lang-go=\"`sumo`\" pulumi-lang-python=\"`sumo`\" pulumi-lang-yaml=\"`sumo`\" pulumi-lang-java=\"`sumo`\"\u003e`sumo`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mixpanel`\" pulumi-lang-dotnet=\"`Mixpanel`\" pulumi-lang-go=\"`mixpanel`\" pulumi-lang-python=\"`mixpanel`\" pulumi-lang-yaml=\"`mixpanel`\" pulumi-lang-java=\"`mixpanel`\"\u003e`mixpanel`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`segment`\" pulumi-lang-dotnet=\"`Segment`\" pulumi-lang-go=\"`segment`\" pulumi-lang-python=\"`segment`\" pulumi-lang-yaml=\"`segment`\" pulumi-lang-java=\"`segment`\"\u003e`segment`\u003c/span\u003e.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/networkAcl:NetworkAcl": {
            "description": "With this resource, you can create and manage NetworkACLs for a tenant.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Example of auth0_network_acl with match criteria\nconst myNetworkAclMatch = new auth0.NetworkAcl(\"my_network_acl_match\", {\n    description: \"Example with match network ACL\",\n    active: true,\n    priority: 1,\n    rule: {\n        action: {\n            allow: true,\n        },\n        scope: \"management\",\n        match: {\n            geoCountryCodes: [\n                \"US\",\n                \"CA\",\n            ],\n            geoSubdivisionCodes: [\n                \"US-NY\",\n                \"CA-ON\",\n            ],\n        },\n    },\n});\n// Example of auth0_network_acl with not-match criteria\nconst myNetworkAclNotMatch = new auth0.NetworkAcl(\"my_network_acl_not_match\", {\n    description: \"Example with not match network ACL\",\n    active: true,\n    priority: 3,\n    rule: {\n        action: {\n            log: true,\n        },\n        scope: \"authentication\",\n        notMatch: {\n            asns: [9876],\n            ipv4Cidrs: [\n                \"192.168.1.0/24\",\n                \"10.0.0.0/8\",\n            ],\n            ipv6Cidrs: [\"2001:db8::/32\"],\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# Example of auth0_network_acl with match criteria\nmy_network_acl_match = auth0.NetworkAcl(\"my_network_acl_match\",\n    description=\"Example with match network ACL\",\n    active=True,\n    priority=1,\n    rule={\n        \"action\": {\n            \"allow\": True,\n        },\n        \"scope\": \"management\",\n        \"match\": {\n            \"geo_country_codes\": [\n                \"US\",\n                \"CA\",\n            ],\n            \"geo_subdivision_codes\": [\n                \"US-NY\",\n                \"CA-ON\",\n            ],\n        },\n    })\n# Example of auth0_network_acl with not-match criteria\nmy_network_acl_not_match = auth0.NetworkAcl(\"my_network_acl_not_match\",\n    description=\"Example with not match network ACL\",\n    active=True,\n    priority=3,\n    rule={\n        \"action\": {\n            \"log\": True,\n        },\n        \"scope\": \"authentication\",\n        \"not_match\": {\n            \"asns\": [9876],\n            \"ipv4_cidrs\": [\n                \"192.168.1.0/24\",\n                \"10.0.0.0/8\",\n            ],\n            \"ipv6_cidrs\": [\"2001:db8::/32\"],\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example of auth0_network_acl with match criteria\n    var myNetworkAclMatch = new Auth0.NetworkAcl(\"my_network_acl_match\", new()\n    {\n        Description = \"Example with match network ACL\",\n        Active = true,\n        Priority = 1,\n        Rule = new Auth0.Inputs.NetworkAclRuleArgs\n        {\n            Action = new Auth0.Inputs.NetworkAclRuleActionArgs\n            {\n                Allow = true,\n            },\n            Scope = \"management\",\n            Match = new Auth0.Inputs.NetworkAclRuleMatchArgs\n            {\n                GeoCountryCodes = new[]\n                {\n                    \"US\",\n                    \"CA\",\n                },\n                GeoSubdivisionCodes = new[]\n                {\n                    \"US-NY\",\n                    \"CA-ON\",\n                },\n            },\n        },\n    });\n\n    // Example of auth0_network_acl with not-match criteria\n    var myNetworkAclNotMatch = new Auth0.NetworkAcl(\"my_network_acl_not_match\", new()\n    {\n        Description = \"Example with not match network ACL\",\n        Active = true,\n        Priority = 3,\n        Rule = new Auth0.Inputs.NetworkAclRuleArgs\n        {\n            Action = new Auth0.Inputs.NetworkAclRuleActionArgs\n            {\n                Log = true,\n            },\n            Scope = \"authentication\",\n            NotMatch = new Auth0.Inputs.NetworkAclRuleNotMatchArgs\n            {\n                Asns = new[]\n                {\n                    9876,\n                },\n                Ipv4Cidrs = new[]\n                {\n                    \"192.168.1.0/24\",\n                    \"10.0.0.0/8\",\n                },\n                Ipv6Cidrs = new[]\n                {\n                    \"2001:db8::/32\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Example of auth0_network_acl with match criteria\n\t\t_, err := auth0.NewNetworkAcl(ctx, \"my_network_acl_match\", \u0026auth0.NetworkAclArgs{\n\t\t\tDescription: pulumi.String(\"Example with match network ACL\"),\n\t\t\tActive:      pulumi.Bool(true),\n\t\t\tPriority:    pulumi.Int(1),\n\t\t\tRule: \u0026auth0.NetworkAclRuleArgs{\n\t\t\t\tAction: \u0026auth0.NetworkAclRuleActionArgs{\n\t\t\t\t\tAllow: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\tScope: pulumi.String(\"management\"),\n\t\t\t\tMatch: \u0026auth0.NetworkAclRuleMatchArgs{\n\t\t\t\t\tGeoCountryCodes: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"US\"),\n\t\t\t\t\t\tpulumi.String(\"CA\"),\n\t\t\t\t\t},\n\t\t\t\t\tGeoSubdivisionCodes: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"US-NY\"),\n\t\t\t\t\t\tpulumi.String(\"CA-ON\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Example of auth0_network_acl with not-match criteria\n\t\t_, err = auth0.NewNetworkAcl(ctx, \"my_network_acl_not_match\", \u0026auth0.NetworkAclArgs{\n\t\t\tDescription: pulumi.String(\"Example with not match network ACL\"),\n\t\t\tActive:      pulumi.Bool(true),\n\t\t\tPriority:    pulumi.Int(3),\n\t\t\tRule: \u0026auth0.NetworkAclRuleArgs{\n\t\t\t\tAction: \u0026auth0.NetworkAclRuleActionArgs{\n\t\t\t\t\tLog: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\tScope: pulumi.String(\"authentication\"),\n\t\t\t\tNotMatch: \u0026auth0.NetworkAclRuleNotMatchArgs{\n\t\t\t\t\tAsns: pulumi.IntArray{\n\t\t\t\t\t\tpulumi.Int(9876),\n\t\t\t\t\t},\n\t\t\t\t\tIpv4Cidrs: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"192.168.1.0/24\"),\n\t\t\t\t\t\tpulumi.String(\"10.0.0.0/8\"),\n\t\t\t\t\t},\n\t\t\t\t\tIpv6Cidrs: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"2001:db8::/32\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.NetworkAcl;\nimport com.pulumi.auth0.NetworkAclArgs;\nimport com.pulumi.auth0.inputs.NetworkAclRuleArgs;\nimport com.pulumi.auth0.inputs.NetworkAclRuleActionArgs;\nimport com.pulumi.auth0.inputs.NetworkAclRuleMatchArgs;\nimport com.pulumi.auth0.inputs.NetworkAclRuleNotMatchArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Example of auth0_network_acl with match criteria\n        var myNetworkAclMatch = new NetworkAcl(\"myNetworkAclMatch\", NetworkAclArgs.builder()\n            .description(\"Example with match network ACL\")\n            .active(true)\n            .priority(1)\n            .rule(NetworkAclRuleArgs.builder()\n                .action(NetworkAclRuleActionArgs.builder()\n                    .allow(true)\n                    .build())\n                .scope(\"management\")\n                .match(NetworkAclRuleMatchArgs.builder()\n                    .geoCountryCodes(                    \n                        \"US\",\n                        \"CA\")\n                    .geoSubdivisionCodes(                    \n                        \"US-NY\",\n                        \"CA-ON\")\n                    .build())\n                .build())\n            .build());\n\n        // Example of auth0_network_acl with not-match criteria\n        var myNetworkAclNotMatch = new NetworkAcl(\"myNetworkAclNotMatch\", NetworkAclArgs.builder()\n            .description(\"Example with not match network ACL\")\n            .active(true)\n            .priority(3)\n            .rule(NetworkAclRuleArgs.builder()\n                .action(NetworkAclRuleActionArgs.builder()\n                    .log(true)\n                    .build())\n                .scope(\"authentication\")\n                .notMatch(NetworkAclRuleNotMatchArgs.builder()\n                    .asns(9876)\n                    .ipv4Cidrs(                    \n                        \"192.168.1.0/24\",\n                        \"10.0.0.0/8\")\n                    .ipv6Cidrs(\"2001:db8::/32\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example of auth0_network_acl with match criteria\n  myNetworkAclMatch:\n    type: auth0:NetworkAcl\n    name: my_network_acl_match\n    properties:\n      description: Example with match network ACL\n      active: true\n      priority: 1\n      rule:\n        action:\n          allow: true\n        scope: management\n        match:\n          geoCountryCodes:\n            - US\n            - CA\n          geoSubdivisionCodes:\n            - US-NY\n            - CA-ON\n  # Example of auth0_network_acl with not-match criteria\n  myNetworkAclNotMatch:\n    type: auth0:NetworkAcl\n    name: my_network_acl_not_match\n    properties:\n      description: Example with not match network ACL\n      active: true\n      priority: 3\n      rule:\n        action:\n          log: true\n        scope: authentication\n        notMatch:\n          asns:\n            - 9876\n          ipv4Cidrs:\n            - 192.168.1.0/24\n            - 10.0.0.0/8\n          ipv6Cidrs:\n            - 2001:db8::/32\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the network acl ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/networkAcl:NetworkAcl my_network_acl \"167f9a50-4444-3333-1111-ndfdaf953ab4\"\n```\n\n",
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the Network ACL is active\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Network ACL\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the Network ACL. Must be unique between 1 and 10.\n"
                },
                "rule": {
                    "$ref": "#/types/auth0:index/NetworkAclRule:NetworkAclRule",
                    "description": "The rule of the Network ACL\n"
                }
            },
            "required": [
                "active",
                "description",
                "priority",
                "rule"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the Network ACL is active\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the Network ACL\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the Network ACL. Must be unique between 1 and 10.\n"
                },
                "rule": {
                    "$ref": "#/types/auth0:index/NetworkAclRule:NetworkAclRule",
                    "description": "The rule of the Network ACL\n"
                }
            },
            "requiredInputs": [
                "active",
                "description",
                "priority",
                "rule"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkAcl resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether the Network ACL is active\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the Network ACL\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "The priority of the Network ACL. Must be unique between 1 and 10.\n"
                    },
                    "rule": {
                        "$ref": "#/types/auth0:index/NetworkAclRule:NetworkAclRule",
                        "description": "The rule of the Network ACL\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organization:Organization": {
            "description": "The Organizations feature represents a broad update to the Auth0 platform that allows our business-to-business (B2B) customers to better manage their partners and customers, and to customize the ways that end-users access their applications. Auth0 customers can use Organizations to:\n\n  - Represent their business customers and partners in Auth0 and manage their\n    membership.\n  - Configure branded, federated login flows for each business.\n  - Build administration capabilities into their products, using Organizations\n    APIs, so that those businesses can manage their own organizations.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myOrganization = new auth0.Organization(\"my_organization\", {\n    name: \"auth0-inc\",\n    displayName: \"Auth0 Inc.\",\n    branding: {\n        logoUrl: \"https://example.com/assets/icons/icon.png\",\n        colors: {\n            primary: \"#f2f2f2\",\n            page_background: \"#e1e1e1\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_organization = auth0.Organization(\"my_organization\",\n    name=\"auth0-inc\",\n    display_name=\"Auth0 Inc.\",\n    branding={\n        \"logo_url\": \"https://example.com/assets/icons/icon.png\",\n        \"colors\": {\n            \"primary\": \"#f2f2f2\",\n            \"page_background\": \"#e1e1e1\",\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myOrganization = new Auth0.Organization(\"my_organization\", new()\n    {\n        Name = \"auth0-inc\",\n        DisplayName = \"Auth0 Inc.\",\n        Branding = new Auth0.Inputs.OrganizationBrandingArgs\n        {\n            LogoUrl = \"https://example.com/assets/icons/icon.png\",\n            Colors = \n            {\n                { \"primary\", \"#f2f2f2\" },\n                { \"page_background\", \"#e1e1e1\" },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewOrganization(ctx, \"my_organization\", \u0026auth0.OrganizationArgs{\n\t\t\tName:        pulumi.String(\"auth0-inc\"),\n\t\t\tDisplayName: pulumi.String(\"Auth0 Inc.\"),\n\t\t\tBranding: \u0026auth0.OrganizationBrandingArgs{\n\t\t\t\tLogoUrl: pulumi.String(\"https://example.com/assets/icons/icon.png\"),\n\t\t\t\tColors: pulumi.StringMap{\n\t\t\t\t\t\"primary\":         pulumi.String(\"#f2f2f2\"),\n\t\t\t\t\t\"page_background\": pulumi.String(\"#e1e1e1\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Organization;\nimport com.pulumi.auth0.OrganizationArgs;\nimport com.pulumi.auth0.inputs.OrganizationBrandingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myOrganization = new Organization(\"myOrganization\", OrganizationArgs.builder()\n            .name(\"auth0-inc\")\n            .displayName(\"Auth0 Inc.\")\n            .branding(OrganizationBrandingArgs.builder()\n                .logoUrl(\"https://example.com/assets/icons/icon.png\")\n                .colors(Map.ofEntries(\n                    Map.entry(\"primary\", \"#f2f2f2\"),\n                    Map.entry(\"page_background\", \"#e1e1e1\")\n                ))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myOrganization:\n    type: auth0:Organization\n    name: my_organization\n    properties:\n      name: auth0-inc\n      displayName: Auth0 Inc.\n      branding:\n        logoUrl: https://example.com/assets/icons/icon.png\n        colors:\n          primary: '#f2f2f2'\n          page_background: '#e1e1e1'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the organization ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/organization:Organization my_organization \"org_XXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "branding": {
                    "$ref": "#/types/auth0:index/OrganizationBranding:OrganizationBranding",
                    "description": "Defines how to style the login pages.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Friendly name of this organization.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the organization. Maximum of 10 metadata properties allowed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this organization.\n"
                },
                "tokenQuota": {
                    "$ref": "#/types/auth0:index/OrganizationTokenQuota:OrganizationTokenQuota",
                    "description": "The token quota configuration.\n"
                }
            },
            "required": [
                "branding",
                "name"
            ],
            "inputProperties": {
                "branding": {
                    "$ref": "#/types/auth0:index/OrganizationBranding:OrganizationBranding",
                    "description": "Defines how to style the login pages.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Friendly name of this organization.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the organization. Maximum of 10 metadata properties allowed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this organization.\n"
                },
                "tokenQuota": {
                    "$ref": "#/types/auth0:index/OrganizationTokenQuota:OrganizationTokenQuota",
                    "description": "The token quota configuration.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Organization resources.\n",
                "properties": {
                    "branding": {
                        "$ref": "#/types/auth0:index/OrganizationBranding:OrganizationBranding",
                        "description": "Defines how to style the login pages.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Friendly name of this organization.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata associated with the organization. Maximum of 10 metadata properties allowed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this organization.\n"
                    },
                    "tokenQuota": {
                        "$ref": "#/types/auth0:index/OrganizationTokenQuota:OrganizationTokenQuota",
                        "description": "The token quota configuration.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organizationClientGrant:OrganizationClientGrant": {
            "description": "With this resource, you can manage a client grant associated with an organization.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Create an Organization\nconst myOrganization = new auth0.Organization(\"my_organization\", {\n    name: \"test-org-acceptance-testing\",\n    displayName: \"Test Org Acceptance Testing\",\n});\n// Create a Resource Server\nconst newResourceServer = new auth0.ResourceServer(\"new_resource_server\", {\n    name: \"Example API\",\n    identifier: \"https://api.travel00123.com/\",\n});\n// Create a Client by referencing the newly created organisation or by reference an existing one.\nconst myTestClient = new auth0.Client(\"my_test_client\", {\n    name: \"test_client\",\n    organizationUsage: \"allow\",\n    defaultOrganization: {\n        organizationId: myOrganization.id,\n        flows: [\"client_credentials\"],\n    },\n}, {\n    dependsOn: [\n        myOrganization,\n        newResourceServer,\n    ],\n});\n// Create a client grant which is associated with the client and resource server.\nconst myClientGrant = new auth0.ClientGrant(\"my_client_grant\", {\n    clientId: myTestClient.id,\n    audience: newResourceServer.identifier,\n    scopes: [\n        \"create:organization_client_grants\",\n        \"create:resource\",\n    ],\n    allowAnyOrganization: true,\n    organizationUsage: \"allow\",\n}, {\n    dependsOn: [\n        newResourceServer,\n        myTestClient,\n    ],\n});\n// Create the organization and client grant association\nconst associateOrgClientGrant = new auth0.OrganizationClientGrant(\"associate_org_client_grant\", {\n    organizationId: myOrganization.id,\n    grantId: myClientGrant.id,\n}, {\n    dependsOn: [myClientGrant],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# Create an Organization\nmy_organization = auth0.Organization(\"my_organization\",\n    name=\"test-org-acceptance-testing\",\n    display_name=\"Test Org Acceptance Testing\")\n# Create a Resource Server\nnew_resource_server = auth0.ResourceServer(\"new_resource_server\",\n    name=\"Example API\",\n    identifier=\"https://api.travel00123.com/\")\n# Create a Client by referencing the newly created organisation or by reference an existing one.\nmy_test_client = auth0.Client(\"my_test_client\",\n    name=\"test_client\",\n    organization_usage=\"allow\",\n    default_organization={\n        \"organization_id\": my_organization.id,\n        \"flows\": [\"client_credentials\"],\n    },\n    opts = pulumi.ResourceOptions(depends_on=[\n            my_organization,\n            new_resource_server,\n        ]))\n# Create a client grant which is associated with the client and resource server.\nmy_client_grant = auth0.ClientGrant(\"my_client_grant\",\n    client_id=my_test_client.id,\n    audience=new_resource_server.identifier,\n    scopes=[\n        \"create:organization_client_grants\",\n        \"create:resource\",\n    ],\n    allow_any_organization=True,\n    organization_usage=\"allow\",\n    opts = pulumi.ResourceOptions(depends_on=[\n            new_resource_server,\n            my_test_client,\n        ]))\n# Create the organization and client grant association\nassociate_org_client_grant = auth0.OrganizationClientGrant(\"associate_org_client_grant\",\n    organization_id=my_organization.id,\n    grant_id=my_client_grant.id,\n    opts = pulumi.ResourceOptions(depends_on=[my_client_grant]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create an Organization\n    var myOrganization = new Auth0.Organization(\"my_organization\", new()\n    {\n        Name = \"test-org-acceptance-testing\",\n        DisplayName = \"Test Org Acceptance Testing\",\n    });\n\n    // Create a Resource Server\n    var newResourceServer = new Auth0.ResourceServer(\"new_resource_server\", new()\n    {\n        Name = \"Example API\",\n        Identifier = \"https://api.travel00123.com/\",\n    });\n\n    // Create a Client by referencing the newly created organisation or by reference an existing one.\n    var myTestClient = new Auth0.Client(\"my_test_client\", new()\n    {\n        Name = \"test_client\",\n        OrganizationUsage = \"allow\",\n        DefaultOrganization = new Auth0.Inputs.ClientDefaultOrganizationArgs\n        {\n            OrganizationId = myOrganization.Id,\n            Flows = new[]\n            {\n                \"client_credentials\",\n            },\n        },\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            myOrganization,\n            newResourceServer,\n        },\n    });\n\n    // Create a client grant which is associated with the client and resource server.\n    var myClientGrant = new Auth0.ClientGrant(\"my_client_grant\", new()\n    {\n        ClientId = myTestClient.Id,\n        Audience = newResourceServer.Identifier,\n        Scopes = new[]\n        {\n            \"create:organization_client_grants\",\n            \"create:resource\",\n        },\n        AllowAnyOrganization = true,\n        OrganizationUsage = \"allow\",\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            newResourceServer,\n            myTestClient,\n        },\n    });\n\n    // Create the organization and client grant association\n    var associateOrgClientGrant = new Auth0.OrganizationClientGrant(\"associate_org_client_grant\", new()\n    {\n        OrganizationId = myOrganization.Id,\n        GrantId = myClientGrant.Id,\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            myClientGrant,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Create an Organization\n\t\tmyOrganization, err := auth0.NewOrganization(ctx, \"my_organization\", \u0026auth0.OrganizationArgs{\n\t\t\tName:        pulumi.String(\"test-org-acceptance-testing\"),\n\t\t\tDisplayName: pulumi.String(\"Test Org Acceptance Testing\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a Resource Server\n\t\tnewResourceServer, err := auth0.NewResourceServer(ctx, \"new_resource_server\", \u0026auth0.ResourceServerArgs{\n\t\t\tName:       pulumi.String(\"Example API\"),\n\t\t\tIdentifier: pulumi.String(\"https://api.travel00123.com/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a Client by referencing the newly created organisation or by reference an existing one.\n\t\tmyTestClient, err := auth0.NewClient(ctx, \"my_test_client\", \u0026auth0.ClientArgs{\n\t\t\tName:              pulumi.String(\"test_client\"),\n\t\t\tOrganizationUsage: pulumi.String(\"allow\"),\n\t\t\tDefaultOrganization: \u0026auth0.ClientDefaultOrganizationArgs{\n\t\t\t\tOrganizationId: myOrganization.ID(),\n\t\t\t\tFlows: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"client_credentials\"),\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tmyOrganization,\n\t\t\tnewResourceServer,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a client grant which is associated with the client and resource server.\n\t\tmyClientGrant, err := auth0.NewClientGrant(ctx, \"my_client_grant\", \u0026auth0.ClientGrantArgs{\n\t\t\tClientId: myTestClient.ID(),\n\t\t\tAudience: newResourceServer.Identifier,\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"create:organization_client_grants\"),\n\t\t\t\tpulumi.String(\"create:resource\"),\n\t\t\t},\n\t\t\tAllowAnyOrganization: pulumi.Bool(true),\n\t\t\tOrganizationUsage:    pulumi.String(\"allow\"),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tnewResourceServer,\n\t\t\tmyTestClient,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create the organization and client grant association\n\t\t_, err = auth0.NewOrganizationClientGrant(ctx, \"associate_org_client_grant\", \u0026auth0.OrganizationClientGrantArgs{\n\t\t\tOrganizationId: myOrganization.ID(),\n\t\t\tGrantId:        myClientGrant.ID(),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tmyClientGrant,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Organization;\nimport com.pulumi.auth0.OrganizationArgs;\nimport com.pulumi.auth0.ResourceServer;\nimport com.pulumi.auth0.ResourceServerArgs;\nimport com.pulumi.auth0.Client;\nimport com.pulumi.auth0.ClientArgs;\nimport com.pulumi.auth0.inputs.ClientDefaultOrganizationArgs;\nimport com.pulumi.auth0.ClientGrant;\nimport com.pulumi.auth0.ClientGrantArgs;\nimport com.pulumi.auth0.OrganizationClientGrant;\nimport com.pulumi.auth0.OrganizationClientGrantArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Create an Organization\n        var myOrganization = new Organization(\"myOrganization\", OrganizationArgs.builder()\n            .name(\"test-org-acceptance-testing\")\n            .displayName(\"Test Org Acceptance Testing\")\n            .build());\n\n        // Create a Resource Server\n        var newResourceServer = new ResourceServer(\"newResourceServer\", ResourceServerArgs.builder()\n            .name(\"Example API\")\n            .identifier(\"https://api.travel00123.com/\")\n            .build());\n\n        // Create a Client by referencing the newly created organisation or by reference an existing one.\n        var myTestClient = new Client(\"myTestClient\", ClientArgs.builder()\n            .name(\"test_client\")\n            .organizationUsage(\"allow\")\n            .defaultOrganization(ClientDefaultOrganizationArgs.builder()\n                .organizationId(myOrganization.id())\n                .flows(\"client_credentials\")\n                .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(                \n                    myOrganization,\n                    newResourceServer)\n                .build());\n\n        // Create a client grant which is associated with the client and resource server.\n        var myClientGrant = new ClientGrant(\"myClientGrant\", ClientGrantArgs.builder()\n            .clientId(myTestClient.id())\n            .audience(newResourceServer.identifier())\n            .scopes(            \n                \"create:organization_client_grants\",\n                \"create:resource\")\n            .allowAnyOrganization(true)\n            .organizationUsage(\"allow\")\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(                \n                    newResourceServer,\n                    myTestClient)\n                .build());\n\n        // Create the organization and client grant association\n        var associateOrgClientGrant = new OrganizationClientGrant(\"associateOrgClientGrant\", OrganizationClientGrantArgs.builder()\n            .organizationId(myOrganization.id())\n            .grantId(myClientGrant.id())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(myClientGrant)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create an Organization\n  myOrganization:\n    type: auth0:Organization\n    name: my_organization\n    properties:\n      name: test-org-acceptance-testing\n      displayName: Test Org Acceptance Testing\n  # Create a Resource Server\n  newResourceServer:\n    type: auth0:ResourceServer\n    name: new_resource_server\n    properties:\n      name: Example API\n      identifier: https://api.travel00123.com/\n  # Create a Client by referencing the newly created organisation or by reference an existing one.\n  myTestClient:\n    type: auth0:Client\n    name: my_test_client\n    properties:\n      name: test_client\n      organizationUsage: allow\n      defaultOrganization:\n        organizationId: ${myOrganization.id}\n        flows:\n          - client_credentials\n    options:\n      dependsOn:\n        - ${myOrganization}\n        - ${newResourceServer}\n  # Create a client grant which is associated with the client and resource server.\n  myClientGrant:\n    type: auth0:ClientGrant\n    name: my_client_grant\n    properties:\n      clientId: ${myTestClient.id}\n      audience: ${newResourceServer.identifier}\n      scopes:\n        - create:organization_client_grants\n        - create:resource\n      allowAnyOrganization: true\n      organizationUsage: allow\n    options:\n      dependsOn:\n        - ${newResourceServer}\n        - ${myTestClient}\n  # Create the organization and client grant association\n  associateOrgClientGrant:\n    type: auth0:OrganizationClientGrant\n    name: associate_org_client_grant\n    properties:\n      organizationId: ${myOrganization.id}\n      grantId: ${myClientGrant.id}\n    options:\n      dependsOn:\n        - ${myClientGrant}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\norganization ID and client grant ID separated by \"::\" (note the double colon)\n\n\u003corganizationID\u003e::\u003cclientGrantID\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/organizationClientGrant:OrganizationClientGrant my_org_client_grant \"org_XXXXX::cgr_XXXXX\"\n```\n\n",
            "properties": {
                "grantId": {
                    "type": "string",
                    "description": "A Client Grant ID to add to the organization.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to associate the client grant.\n"
                }
            },
            "required": [
                "grantId",
                "organizationId"
            ],
            "inputProperties": {
                "grantId": {
                    "type": "string",
                    "description": "A Client Grant ID to add to the organization.\n",
                    "willReplaceOnChanges": true
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to associate the client grant.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "grantId",
                "organizationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationClientGrant resources.\n",
                "properties": {
                    "grantId": {
                        "type": "string",
                        "description": "A Client Grant ID to add to the organization.\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization to associate the client grant.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organizationConnection:OrganizationConnection": {
            "description": "With this resource, you can manage enabled connections on an organization.\n\n!\u003e This resource appends a connection to an organization. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.OrganizationConnections`\" pulumi-lang-dotnet=\"`auth0.OrganizationConnections`\" pulumi-lang-go=\"`OrganizationConnections`\" pulumi-lang-python=\"`OrganizationConnections`\" pulumi-lang-yaml=\"`auth0.OrganizationConnections`\" pulumi-lang-java=\"`auth0.OrganizationConnections`\"\u003e`auth0.OrganizationConnections`\u003c/span\u003e resource\nmanages all the connections enabled for an organization. To avoid potential issues, it is recommended not to use this\nresource in conjunction with the \u003cspan pulumi-lang-nodejs=\"`auth0.OrganizationConnections`\" pulumi-lang-dotnet=\"`auth0.OrganizationConnections`\" pulumi-lang-go=\"`OrganizationConnections`\" pulumi-lang-python=\"`OrganizationConnections`\" pulumi-lang-yaml=\"`auth0.OrganizationConnections`\" pulumi-lang-java=\"`auth0.OrganizationConnections`\"\u003e`auth0.OrganizationConnections`\u003c/span\u003e resource when managing enabled connections for the\nsame organization id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myConnection = new auth0.Connection(\"my_connection\", {\n    name: \"My Connection\",\n    strategy: \"auth0\",\n});\nconst myOrganization = new auth0.Organization(\"my_organization\", {\n    name: \"my-organization\",\n    displayName: \"My Organization\",\n});\nconst myOrgConn = new auth0.OrganizationConnection(\"my_org_conn\", {\n    organizationId: myOrganization.id,\n    connectionId: myConnection.id,\n    assignMembershipOnLogin: true,\n    isSignupEnabled: false,\n    showAsButton: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_connection = auth0.Connection(\"my_connection\",\n    name=\"My Connection\",\n    strategy=\"auth0\")\nmy_organization = auth0.Organization(\"my_organization\",\n    name=\"my-organization\",\n    display_name=\"My Organization\")\nmy_org_conn = auth0.OrganizationConnection(\"my_org_conn\",\n    organization_id=my_organization.id,\n    connection_id=my_connection.id,\n    assign_membership_on_login=True,\n    is_signup_enabled=False,\n    show_as_button=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myConnection = new Auth0.Connection(\"my_connection\", new()\n    {\n        Name = \"My Connection\",\n        Strategy = \"auth0\",\n    });\n\n    var myOrganization = new Auth0.Organization(\"my_organization\", new()\n    {\n        Name = \"my-organization\",\n        DisplayName = \"My Organization\",\n    });\n\n    var myOrgConn = new Auth0.OrganizationConnection(\"my_org_conn\", new()\n    {\n        OrganizationId = myOrganization.Id,\n        ConnectionId = myConnection.Id,\n        AssignMembershipOnLogin = true,\n        IsSignupEnabled = false,\n        ShowAsButton = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyConnection, err := auth0.NewConnection(ctx, \"my_connection\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"My Connection\"),\n\t\t\tStrategy: pulumi.String(\"auth0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyOrganization, err := auth0.NewOrganization(ctx, \"my_organization\", \u0026auth0.OrganizationArgs{\n\t\t\tName:        pulumi.String(\"my-organization\"),\n\t\t\tDisplayName: pulumi.String(\"My Organization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewOrganizationConnection(ctx, \"my_org_conn\", \u0026auth0.OrganizationConnectionArgs{\n\t\t\tOrganizationId:          myOrganization.ID(),\n\t\t\tConnectionId:            myConnection.ID(),\n\t\t\tAssignMembershipOnLogin: pulumi.Bool(true),\n\t\t\tIsSignupEnabled:         pulumi.Bool(false),\n\t\t\tShowAsButton:            pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.Organization;\nimport com.pulumi.auth0.OrganizationArgs;\nimport com.pulumi.auth0.OrganizationConnection;\nimport com.pulumi.auth0.OrganizationConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myConnection = new Connection(\"myConnection\", ConnectionArgs.builder()\n            .name(\"My Connection\")\n            .strategy(\"auth0\")\n            .build());\n\n        var myOrganization = new Organization(\"myOrganization\", OrganizationArgs.builder()\n            .name(\"my-organization\")\n            .displayName(\"My Organization\")\n            .build());\n\n        var myOrgConn = new OrganizationConnection(\"myOrgConn\", OrganizationConnectionArgs.builder()\n            .organizationId(myOrganization.id())\n            .connectionId(myConnection.id())\n            .assignMembershipOnLogin(true)\n            .isSignupEnabled(false)\n            .showAsButton(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myConnection:\n    type: auth0:Connection\n    name: my_connection\n    properties:\n      name: My Connection\n      strategy: auth0\n  myOrganization:\n    type: auth0:Organization\n    name: my_organization\n    properties:\n      name: my-organization\n      displayName: My Organization\n  myOrgConn:\n    type: auth0:OrganizationConnection\n    name: my_org_conn\n    properties:\n      organizationId: ${myOrganization.id}\n      connectionId: ${myConnection.id}\n      assignMembershipOnLogin: true\n      isSignupEnabled: false\n      showAsButton: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\norganization ID and connection ID separated by \"::\" (note the double colon)\n\n\u003corganizationID\u003e::\u003cconnectionID\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/organizationConnection:OrganizationConnection my_org_conn \"org_XXXXX::con_XXXXX\"\n```\n\n",
            "properties": {
                "assignMembershipOnLogin": {
                    "type": "boolean",
                    "description": "When \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e, all users that log in with this connection will be automatically granted membership in the organization. When \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e, users must be granted membership in the organization before logging in with this connection.\n"
                },
                "connectionId": {
                    "type": "string",
                    "description": "The ID of the connection to enable for the organization.\n"
                },
                "isSignupEnabled": {
                    "type": "boolean",
                    "description": "Determines whether organization sign-up should be enabled for this organization connection. Only applicable for database connections. Note: \u003cspan pulumi-lang-nodejs=\"`isSignupEnabled`\" pulumi-lang-dotnet=\"`IsSignupEnabled`\" pulumi-lang-go=\"`isSignupEnabled`\" pulumi-lang-python=\"`is_signup_enabled`\" pulumi-lang-yaml=\"`isSignupEnabled`\" pulumi-lang-java=\"`isSignupEnabled`\"\u003e`is_signup_enabled`\u003c/span\u003e can only be \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e if \u003cspan pulumi-lang-nodejs=\"`assignMembershipOnLogin`\" pulumi-lang-dotnet=\"`AssignMembershipOnLogin`\" pulumi-lang-go=\"`assignMembershipOnLogin`\" pulumi-lang-python=\"`assign_membership_on_login`\" pulumi-lang-yaml=\"`assignMembershipOnLogin`\" pulumi-lang-java=\"`assignMembershipOnLogin`\"\u003e`assign_membership_on_login`\u003c/span\u003e is \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the enabled connection.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to enable the connection for.\n"
                },
                "showAsButton": {
                    "type": "boolean",
                    "description": "Determines whether a connection should be displayed on this organization’s login prompt. Only applicable for enterprise connections.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "The strategy of the enabled connection.\n"
                }
            },
            "required": [
                "connectionId",
                "name",
                "organizationId",
                "strategy"
            ],
            "inputProperties": {
                "assignMembershipOnLogin": {
                    "type": "boolean",
                    "description": "When \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e, all users that log in with this connection will be automatically granted membership in the organization. When \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e, users must be granted membership in the organization before logging in with this connection.\n"
                },
                "connectionId": {
                    "type": "string",
                    "description": "The ID of the connection to enable for the organization.\n"
                },
                "isSignupEnabled": {
                    "type": "boolean",
                    "description": "Determines whether organization sign-up should be enabled for this organization connection. Only applicable for database connections. Note: \u003cspan pulumi-lang-nodejs=\"`isSignupEnabled`\" pulumi-lang-dotnet=\"`IsSignupEnabled`\" pulumi-lang-go=\"`isSignupEnabled`\" pulumi-lang-python=\"`is_signup_enabled`\" pulumi-lang-yaml=\"`isSignupEnabled`\" pulumi-lang-java=\"`isSignupEnabled`\"\u003e`is_signup_enabled`\u003c/span\u003e can only be \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e if \u003cspan pulumi-lang-nodejs=\"`assignMembershipOnLogin`\" pulumi-lang-dotnet=\"`AssignMembershipOnLogin`\" pulumi-lang-go=\"`assignMembershipOnLogin`\" pulumi-lang-python=\"`assign_membership_on_login`\" pulumi-lang-yaml=\"`assignMembershipOnLogin`\" pulumi-lang-java=\"`assignMembershipOnLogin`\"\u003e`assign_membership_on_login`\u003c/span\u003e is \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to enable the connection for.\n"
                },
                "showAsButton": {
                    "type": "boolean",
                    "description": "Determines whether a connection should be displayed on this organization’s login prompt. Only applicable for enterprise connections.\n"
                }
            },
            "requiredInputs": [
                "connectionId",
                "organizationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationConnection resources.\n",
                "properties": {
                    "assignMembershipOnLogin": {
                        "type": "boolean",
                        "description": "When \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e, all users that log in with this connection will be automatically granted membership in the organization. When \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e, users must be granted membership in the organization before logging in with this connection.\n"
                    },
                    "connectionId": {
                        "type": "string",
                        "description": "The ID of the connection to enable for the organization.\n"
                    },
                    "isSignupEnabled": {
                        "type": "boolean",
                        "description": "Determines whether organization sign-up should be enabled for this organization connection. Only applicable for database connections. Note: \u003cspan pulumi-lang-nodejs=\"`isSignupEnabled`\" pulumi-lang-dotnet=\"`IsSignupEnabled`\" pulumi-lang-go=\"`isSignupEnabled`\" pulumi-lang-python=\"`is_signup_enabled`\" pulumi-lang-yaml=\"`isSignupEnabled`\" pulumi-lang-java=\"`isSignupEnabled`\"\u003e`is_signup_enabled`\u003c/span\u003e can only be \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e if \u003cspan pulumi-lang-nodejs=\"`assignMembershipOnLogin`\" pulumi-lang-dotnet=\"`AssignMembershipOnLogin`\" pulumi-lang-go=\"`assignMembershipOnLogin`\" pulumi-lang-python=\"`assign_membership_on_login`\" pulumi-lang-yaml=\"`assignMembershipOnLogin`\" pulumi-lang-java=\"`assignMembershipOnLogin`\"\u003e`assign_membership_on_login`\u003c/span\u003e is \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the enabled connection.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization to enable the connection for.\n"
                    },
                    "showAsButton": {
                        "type": "boolean",
                        "description": "Determines whether a connection should be displayed on this organization’s login prompt. Only applicable for enterprise connections.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "The strategy of the enabled connection.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organizationConnections:OrganizationConnections": {
            "description": "With this resource, you can manage enabled connections on an organization.\n\n!\u003e This resource manages all the connections enabled for an organization. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.OrganizationConnection`\" pulumi-lang-dotnet=\"`auth0.OrganizationConnection`\" pulumi-lang-go=\"`OrganizationConnection`\" pulumi-lang-python=\"`OrganizationConnection`\" pulumi-lang-yaml=\"`auth0.OrganizationConnection`\" pulumi-lang-java=\"`auth0.OrganizationConnection`\"\u003e`auth0.OrganizationConnection`\u003c/span\u003e\nresource appends a connection to an organization. To avoid potential issues, it is recommended not to use this\nresource in conjunction with the \u003cspan pulumi-lang-nodejs=\"`auth0.OrganizationConnection`\" pulumi-lang-dotnet=\"`auth0.OrganizationConnection`\" pulumi-lang-go=\"`OrganizationConnection`\" pulumi-lang-python=\"`OrganizationConnection`\" pulumi-lang-yaml=\"`auth0.OrganizationConnection`\" pulumi-lang-java=\"`auth0.OrganizationConnection`\"\u003e`auth0.OrganizationConnection`\u003c/span\u003e resource when managing connections for the same\norganization id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myConnection_1 = new auth0.Connection(\"my_connection-1\", {\n    name: \"My Connection 1\",\n    strategy: \"auth0\",\n});\nconst myConnection_2 = new auth0.Connection(\"my_connection-2\", {\n    name: \"My Connection 2\",\n    strategy: \"auth0\",\n});\nconst myOrganization = new auth0.Organization(\"my_organization\", {\n    name: \"my-organization\",\n    displayName: \"My Organization\",\n});\nconst one_to_many = new auth0.OrganizationConnections(\"one-to-many\", {\n    organizationId: myOrganization.id,\n    enabledConnections: [\n        {\n            connectionId: myConnection_1.id,\n            assignMembershipOnLogin: true,\n            isSignupEnabled: false,\n            showAsButton: true,\n        },\n        {\n            connectionId: myConnection_2.id,\n            assignMembershipOnLogin: true,\n            isSignupEnabled: false,\n            showAsButton: true,\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_connection_1 = auth0.Connection(\"my_connection-1\",\n    name=\"My Connection 1\",\n    strategy=\"auth0\")\nmy_connection_2 = auth0.Connection(\"my_connection-2\",\n    name=\"My Connection 2\",\n    strategy=\"auth0\")\nmy_organization = auth0.Organization(\"my_organization\",\n    name=\"my-organization\",\n    display_name=\"My Organization\")\none_to_many = auth0.OrganizationConnections(\"one-to-many\",\n    organization_id=my_organization.id,\n    enabled_connections=[\n        {\n            \"connection_id\": my_connection_1.id,\n            \"assign_membership_on_login\": True,\n            \"is_signup_enabled\": False,\n            \"show_as_button\": True,\n        },\n        {\n            \"connection_id\": my_connection_2.id,\n            \"assign_membership_on_login\": True,\n            \"is_signup_enabled\": False,\n            \"show_as_button\": True,\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myConnection_1 = new Auth0.Connection(\"my_connection-1\", new()\n    {\n        Name = \"My Connection 1\",\n        Strategy = \"auth0\",\n    });\n\n    var myConnection_2 = new Auth0.Connection(\"my_connection-2\", new()\n    {\n        Name = \"My Connection 2\",\n        Strategy = \"auth0\",\n    });\n\n    var myOrganization = new Auth0.Organization(\"my_organization\", new()\n    {\n        Name = \"my-organization\",\n        DisplayName = \"My Organization\",\n    });\n\n    var one_to_many = new Auth0.OrganizationConnections(\"one-to-many\", new()\n    {\n        OrganizationId = myOrganization.Id,\n        EnabledConnections = new[]\n        {\n            new Auth0.Inputs.OrganizationConnectionsEnabledConnectionArgs\n            {\n                ConnectionId = myConnection_1.Id,\n                AssignMembershipOnLogin = true,\n                IsSignupEnabled = false,\n                ShowAsButton = true,\n            },\n            new Auth0.Inputs.OrganizationConnectionsEnabledConnectionArgs\n            {\n                ConnectionId = myConnection_2.Id,\n                AssignMembershipOnLogin = true,\n                IsSignupEnabled = false,\n                ShowAsButton = true,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyConnection_1, err := auth0.NewConnection(ctx, \"my_connection-1\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"My Connection 1\"),\n\t\t\tStrategy: pulumi.String(\"auth0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyConnection_2, err := auth0.NewConnection(ctx, \"my_connection-2\", \u0026auth0.ConnectionArgs{\n\t\t\tName:     pulumi.String(\"My Connection 2\"),\n\t\t\tStrategy: pulumi.String(\"auth0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyOrganization, err := auth0.NewOrganization(ctx, \"my_organization\", \u0026auth0.OrganizationArgs{\n\t\t\tName:        pulumi.String(\"my-organization\"),\n\t\t\tDisplayName: pulumi.String(\"My Organization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewOrganizationConnections(ctx, \"one-to-many\", \u0026auth0.OrganizationConnectionsArgs{\n\t\t\tOrganizationId: myOrganization.ID(),\n\t\t\tEnabledConnections: auth0.OrganizationConnectionsEnabledConnectionArray{\n\t\t\t\t\u0026auth0.OrganizationConnectionsEnabledConnectionArgs{\n\t\t\t\t\tConnectionId:            myConnection_1.ID(),\n\t\t\t\t\tAssignMembershipOnLogin: pulumi.Bool(true),\n\t\t\t\t\tIsSignupEnabled:         pulumi.Bool(false),\n\t\t\t\t\tShowAsButton:            pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t\t\u0026auth0.OrganizationConnectionsEnabledConnectionArgs{\n\t\t\t\t\tConnectionId:            myConnection_2.ID(),\n\t\t\t\t\tAssignMembershipOnLogin: pulumi.Bool(true),\n\t\t\t\t\tIsSignupEnabled:         pulumi.Bool(false),\n\t\t\t\t\tShowAsButton:            pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.Organization;\nimport com.pulumi.auth0.OrganizationArgs;\nimport com.pulumi.auth0.OrganizationConnections;\nimport com.pulumi.auth0.OrganizationConnectionsArgs;\nimport com.pulumi.auth0.inputs.OrganizationConnectionsEnabledConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myConnection_1 = new Connection(\"myConnection-1\", ConnectionArgs.builder()\n            .name(\"My Connection 1\")\n            .strategy(\"auth0\")\n            .build());\n\n        var myConnection_2 = new Connection(\"myConnection-2\", ConnectionArgs.builder()\n            .name(\"My Connection 2\")\n            .strategy(\"auth0\")\n            .build());\n\n        var myOrganization = new Organization(\"myOrganization\", OrganizationArgs.builder()\n            .name(\"my-organization\")\n            .displayName(\"My Organization\")\n            .build());\n\n        var one_to_many = new OrganizationConnections(\"one-to-many\", OrganizationConnectionsArgs.builder()\n            .organizationId(myOrganization.id())\n            .enabledConnections(            \n                OrganizationConnectionsEnabledConnectionArgs.builder()\n                    .connectionId(myConnection_1.id())\n                    .assignMembershipOnLogin(true)\n                    .isSignupEnabled(false)\n                    .showAsButton(true)\n                    .build(),\n                OrganizationConnectionsEnabledConnectionArgs.builder()\n                    .connectionId(myConnection_2.id())\n                    .assignMembershipOnLogin(true)\n                    .isSignupEnabled(false)\n                    .showAsButton(true)\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myConnection-1:\n    type: auth0:Connection\n    name: my_connection-1\n    properties:\n      name: My Connection 1\n      strategy: auth0\n  myConnection-2:\n    type: auth0:Connection\n    name: my_connection-2\n    properties:\n      name: My Connection 2\n      strategy: auth0\n  myOrganization:\n    type: auth0:Organization\n    name: my_organization\n    properties:\n      name: my-organization\n      displayName: My Organization\n  one-to-many:\n    type: auth0:OrganizationConnections\n    properties:\n      organizationId: ${myOrganization.id}\n      enabledConnections:\n        - connectionId: ${[\"myConnection-1\"].id}\n          assignMembershipOnLogin: true\n          isSignupEnabled: false\n          showAsButton: true\n        - connectionId: ${[\"myConnection-2\"].id}\n          assignMembershipOnLogin: true\n          isSignupEnabled: false\n          showAsButton: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the organization ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/organizationConnections:OrganizationConnections my_org_conns \"org_XXXXX\"\n```\n\n",
            "properties": {
                "enabledConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/OrganizationConnectionsEnabledConnection:OrganizationConnectionsEnabledConnection"
                    },
                    "description": "Connections that are enabled for the organization.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "ID of the organization on which to enable the connections.\n"
                }
            },
            "required": [
                "enabledConnections",
                "organizationId"
            ],
            "inputProperties": {
                "enabledConnections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/OrganizationConnectionsEnabledConnection:OrganizationConnectionsEnabledConnection"
                    },
                    "description": "Connections that are enabled for the organization.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "ID of the organization on which to enable the connections.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "enabledConnections",
                "organizationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationConnections resources.\n",
                "properties": {
                    "enabledConnections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/OrganizationConnectionsEnabledConnection:OrganizationConnectionsEnabledConnection"
                        },
                        "description": "Connections that are enabled for the organization.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "ID of the organization on which to enable the connections.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organizationDiscoveryDomain:OrganizationDiscoveryDomain": {
            "description": "Manage organization discovery domains for Home Realm Discovery. These domains help automatically route users to the correct organization based on their email domain.\n",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The domain name for organization discovery.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Verification status. Must be either 'pending' or 'verified'.\n"
                },
                "verificationHost": {
                    "type": "string",
                    "description": "The full domain where the TXT record should be added.\n"
                },
                "verificationTxt": {
                    "type": "string",
                    "description": "TXT record value for domain verification.\n"
                }
            },
            "required": [
                "domain",
                "organizationId",
                "status",
                "verificationHost",
                "verificationTxt"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "description": "The domain name for organization discovery.\n",
                    "willReplaceOnChanges": true
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization.\n",
                    "willReplaceOnChanges": true
                },
                "status": {
                    "type": "string",
                    "description": "Verification status. Must be either 'pending' or 'verified'.\n"
                }
            },
            "requiredInputs": [
                "domain",
                "organizationId",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationDiscoveryDomain resources.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "The domain name for organization discovery.\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Verification status. Must be either 'pending' or 'verified'.\n"
                    },
                    "verificationHost": {
                        "type": "string",
                        "description": "The full domain where the TXT record should be added.\n"
                    },
                    "verificationTxt": {
                        "type": "string",
                        "description": "TXT record value for domain verification.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organizationDiscoveryDomains:OrganizationDiscoveryDomains": {
            "description": "With this resource, you can manage discovery domains on an organization.\n",
            "properties": {
                "discoveryDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/OrganizationDiscoveryDomainsDiscoveryDomain:OrganizationDiscoveryDomainsDiscoveryDomain"
                    },
                    "description": "Discovery domains that are configured for the organization.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "ID of the organization on which to manage the discovery domains.\n"
                }
            },
            "required": [
                "discoveryDomains",
                "organizationId"
            ],
            "inputProperties": {
                "discoveryDomains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/OrganizationDiscoveryDomainsDiscoveryDomain:OrganizationDiscoveryDomainsDiscoveryDomain"
                    },
                    "description": "Discovery domains that are configured for the organization.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "ID of the organization on which to manage the discovery domains.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "discoveryDomains",
                "organizationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationDiscoveryDomains resources.\n",
                "properties": {
                    "discoveryDomains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/OrganizationDiscoveryDomainsDiscoveryDomain:OrganizationDiscoveryDomainsDiscoveryDomain"
                        },
                        "description": "Discovery domains that are configured for the organization.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "ID of the organization on which to manage the discovery domains.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organizationMember:OrganizationMember": {
            "description": "This resource is used to manage the assignment of members and their roles within an organization.\n\n!\u003e This resource appends a member to an organization. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.OrganizationMembers`\" pulumi-lang-dotnet=\"`auth0.OrganizationMembers`\" pulumi-lang-go=\"`OrganizationMembers`\" pulumi-lang-python=\"`OrganizationMembers`\" pulumi-lang-yaml=\"`auth0.OrganizationMembers`\" pulumi-lang-java=\"`auth0.OrganizationMembers`\"\u003e`auth0.OrganizationMembers`\u003c/span\u003e resource manages\nall the members assigned to an organization. To avoid potential issues, it is recommended not to use this resource in\nconjunction with the \u003cspan pulumi-lang-nodejs=\"`auth0.OrganizationMembers`\" pulumi-lang-dotnet=\"`auth0.OrganizationMembers`\" pulumi-lang-go=\"`OrganizationMembers`\" pulumi-lang-python=\"`OrganizationMembers`\" pulumi-lang-yaml=\"`auth0.OrganizationMembers`\" pulumi-lang-java=\"`auth0.OrganizationMembers`\"\u003e`auth0.OrganizationMembers`\u003c/span\u003e resource when managing members for the same organization id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst user = new auth0.User(\"user\", {\n    email: \"test-user@auth0.com\",\n    connectionName: \"Username-Password-Authentication\",\n    emailVerified: true,\n    password: \"MyPass123$\",\n});\nconst myOrg = new auth0.Organization(\"my_org\", {\n    name: \"org-admin\",\n    displayName: \"Admin\",\n});\nconst myOrgMember = new auth0.OrganizationMember(\"my_org_member\", {\n    organizationId: myOrg.id,\n    userId: user.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nuser = auth0.User(\"user\",\n    email=\"test-user@auth0.com\",\n    connection_name=\"Username-Password-Authentication\",\n    email_verified=True,\n    password=\"MyPass123$\")\nmy_org = auth0.Organization(\"my_org\",\n    name=\"org-admin\",\n    display_name=\"Admin\")\nmy_org_member = auth0.OrganizationMember(\"my_org_member\",\n    organization_id=my_org.id,\n    user_id=user.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = new Auth0.User(\"user\", new()\n    {\n        Email = \"test-user@auth0.com\",\n        ConnectionName = \"Username-Password-Authentication\",\n        EmailVerified = true,\n        Password = \"MyPass123$\",\n    });\n\n    var myOrg = new Auth0.Organization(\"my_org\", new()\n    {\n        Name = \"org-admin\",\n        DisplayName = \"Admin\",\n    });\n\n    var myOrgMember = new Auth0.OrganizationMember(\"my_org_member\", new()\n    {\n        OrganizationId = myOrg.Id,\n        UserId = user.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser, err := auth0.NewUser(ctx, \"user\", \u0026auth0.UserArgs{\n\t\t\tEmail:          pulumi.String(\"test-user@auth0.com\"),\n\t\t\tConnectionName: pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tEmailVerified:  pulumi.Bool(true),\n\t\t\tPassword:       pulumi.String(\"MyPass123$\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyOrg, err := auth0.NewOrganization(ctx, \"my_org\", \u0026auth0.OrganizationArgs{\n\t\t\tName:        pulumi.String(\"org-admin\"),\n\t\t\tDisplayName: pulumi.String(\"Admin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewOrganizationMember(ctx, \"my_org_member\", \u0026auth0.OrganizationMemberArgs{\n\t\t\tOrganizationId: myOrg.ID(),\n\t\t\tUserId:         user.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.User;\nimport com.pulumi.auth0.UserArgs;\nimport com.pulumi.auth0.Organization;\nimport com.pulumi.auth0.OrganizationArgs;\nimport com.pulumi.auth0.OrganizationMember;\nimport com.pulumi.auth0.OrganizationMemberArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user = new User(\"user\", UserArgs.builder()\n            .email(\"test-user@auth0.com\")\n            .connectionName(\"Username-Password-Authentication\")\n            .emailVerified(true)\n            .password(\"MyPass123$\")\n            .build());\n\n        var myOrg = new Organization(\"myOrg\", OrganizationArgs.builder()\n            .name(\"org-admin\")\n            .displayName(\"Admin\")\n            .build());\n\n        var myOrgMember = new OrganizationMember(\"myOrgMember\", OrganizationMemberArgs.builder()\n            .organizationId(myOrg.id())\n            .userId(user.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: auth0:User\n    properties:\n      email: test-user@auth0.com\n      connectionName: Username-Password-Authentication\n      emailVerified: true\n      password: MyPass123$\n  myOrg:\n    type: auth0:Organization\n    name: my_org\n    properties:\n      name: org-admin\n      displayName: Admin\n  myOrgMember:\n    type: auth0:OrganizationMember\n    name: my_org_member\n    properties:\n      organizationId: ${myOrg.id}\n      userId: ${user.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\norganization ID and user ID separated by \"::\" (note the double colon)\n\n\u003corganizationID\u003e::\u003cuserID\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/organizationMember:OrganizationMember my_org_member \"org_XXXXX::auth0|XXXXX\"\n```\n\n",
            "properties": {
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to assign the member to.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user to add as an organization member.\n"
                }
            },
            "required": [
                "organizationId",
                "userId"
            ],
            "inputProperties": {
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to assign the member to.\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user to add as an organization member.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "organizationId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationMember resources.\n",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization to assign the member to.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user to add as an organization member.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organizationMemberRole:OrganizationMemberRole": {
            "description": "This resource is used to manage the roles assigned to an organization member.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst reader = new auth0.Role(\"reader\", {name: \"Reader\"});\nconst writer = new auth0.Role(\"writer\", {name: \"Writer\"});\nconst user = new auth0.User(\"user\", {\n    connectionName: \"Username-Password-Authentication\",\n    email: \"test-user@auth0.com\",\n    password: \"MyPass123$\",\n});\nconst myOrg = new auth0.Organization(\"my_org\", {\n    name: \"some-org\",\n    displayName: \"Some Org\",\n});\nconst myOrgMember = new auth0.OrganizationMember(\"my_org_member\", {\n    organizationId: myOrg.id,\n    userId: user.id,\n});\nconst role1 = new auth0.OrganizationMemberRole(\"role1\", {\n    organizationId: myOrg.id,\n    userId: user.id,\n    roleId: reader.id,\n});\nconst role2 = new auth0.OrganizationMemberRole(\"role2\", {\n    organizationId: myOrg.id,\n    userId: user.id,\n    roleId: writer.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nreader = auth0.Role(\"reader\", name=\"Reader\")\nwriter = auth0.Role(\"writer\", name=\"Writer\")\nuser = auth0.User(\"user\",\n    connection_name=\"Username-Password-Authentication\",\n    email=\"test-user@auth0.com\",\n    password=\"MyPass123$\")\nmy_org = auth0.Organization(\"my_org\",\n    name=\"some-org\",\n    display_name=\"Some Org\")\nmy_org_member = auth0.OrganizationMember(\"my_org_member\",\n    organization_id=my_org.id,\n    user_id=user.id)\nrole1 = auth0.OrganizationMemberRole(\"role1\",\n    organization_id=my_org.id,\n    user_id=user.id,\n    role_id=reader.id)\nrole2 = auth0.OrganizationMemberRole(\"role2\",\n    organization_id=my_org.id,\n    user_id=user.id,\n    role_id=writer.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var reader = new Auth0.Role(\"reader\", new()\n    {\n        Name = \"Reader\",\n    });\n\n    var writer = new Auth0.Role(\"writer\", new()\n    {\n        Name = \"Writer\",\n    });\n\n    var user = new Auth0.User(\"user\", new()\n    {\n        ConnectionName = \"Username-Password-Authentication\",\n        Email = \"test-user@auth0.com\",\n        Password = \"MyPass123$\",\n    });\n\n    var myOrg = new Auth0.Organization(\"my_org\", new()\n    {\n        Name = \"some-org\",\n        DisplayName = \"Some Org\",\n    });\n\n    var myOrgMember = new Auth0.OrganizationMember(\"my_org_member\", new()\n    {\n        OrganizationId = myOrg.Id,\n        UserId = user.Id,\n    });\n\n    var role1 = new Auth0.OrganizationMemberRole(\"role1\", new()\n    {\n        OrganizationId = myOrg.Id,\n        UserId = user.Id,\n        RoleId = reader.Id,\n    });\n\n    var role2 = new Auth0.OrganizationMemberRole(\"role2\", new()\n    {\n        OrganizationId = myOrg.Id,\n        UserId = user.Id,\n        RoleId = writer.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treader, err := auth0.NewRole(ctx, \"reader\", \u0026auth0.RoleArgs{\n\t\t\tName: pulumi.String(\"Reader\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\twriter, err := auth0.NewRole(ctx, \"writer\", \u0026auth0.RoleArgs{\n\t\t\tName: pulumi.String(\"Writer\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tuser, err := auth0.NewUser(ctx, \"user\", \u0026auth0.UserArgs{\n\t\t\tConnectionName: pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tEmail:          pulumi.String(\"test-user@auth0.com\"),\n\t\t\tPassword:       pulumi.String(\"MyPass123$\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyOrg, err := auth0.NewOrganization(ctx, \"my_org\", \u0026auth0.OrganizationArgs{\n\t\t\tName:        pulumi.String(\"some-org\"),\n\t\t\tDisplayName: pulumi.String(\"Some Org\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewOrganizationMember(ctx, \"my_org_member\", \u0026auth0.OrganizationMemberArgs{\n\t\t\tOrganizationId: myOrg.ID(),\n\t\t\tUserId:         user.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewOrganizationMemberRole(ctx, \"role1\", \u0026auth0.OrganizationMemberRoleArgs{\n\t\t\tOrganizationId: myOrg.ID(),\n\t\t\tUserId:         user.ID(),\n\t\t\tRoleId:         reader.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewOrganizationMemberRole(ctx, \"role2\", \u0026auth0.OrganizationMemberRoleArgs{\n\t\t\tOrganizationId: myOrg.ID(),\n\t\t\tUserId:         user.ID(),\n\t\t\tRoleId:         writer.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Role;\nimport com.pulumi.auth0.RoleArgs;\nimport com.pulumi.auth0.User;\nimport com.pulumi.auth0.UserArgs;\nimport com.pulumi.auth0.Organization;\nimport com.pulumi.auth0.OrganizationArgs;\nimport com.pulumi.auth0.OrganizationMember;\nimport com.pulumi.auth0.OrganizationMemberArgs;\nimport com.pulumi.auth0.OrganizationMemberRole;\nimport com.pulumi.auth0.OrganizationMemberRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var reader = new Role(\"reader\", RoleArgs.builder()\n            .name(\"Reader\")\n            .build());\n\n        var writer = new Role(\"writer\", RoleArgs.builder()\n            .name(\"Writer\")\n            .build());\n\n        var user = new User(\"user\", UserArgs.builder()\n            .connectionName(\"Username-Password-Authentication\")\n            .email(\"test-user@auth0.com\")\n            .password(\"MyPass123$\")\n            .build());\n\n        var myOrg = new Organization(\"myOrg\", OrganizationArgs.builder()\n            .name(\"some-org\")\n            .displayName(\"Some Org\")\n            .build());\n\n        var myOrgMember = new OrganizationMember(\"myOrgMember\", OrganizationMemberArgs.builder()\n            .organizationId(myOrg.id())\n            .userId(user.id())\n            .build());\n\n        var role1 = new OrganizationMemberRole(\"role1\", OrganizationMemberRoleArgs.builder()\n            .organizationId(myOrg.id())\n            .userId(user.id())\n            .roleId(reader.id())\n            .build());\n\n        var role2 = new OrganizationMemberRole(\"role2\", OrganizationMemberRoleArgs.builder()\n            .organizationId(myOrg.id())\n            .userId(user.id())\n            .roleId(writer.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  reader:\n    type: auth0:Role\n    properties:\n      name: Reader\n  writer:\n    type: auth0:Role\n    properties:\n      name: Writer\n  user:\n    type: auth0:User\n    properties:\n      connectionName: Username-Password-Authentication\n      email: test-user@auth0.com\n      password: MyPass123$\n  myOrg:\n    type: auth0:Organization\n    name: my_org\n    properties:\n      name: some-org\n      displayName: Some Org\n  myOrgMember:\n    type: auth0:OrganizationMember\n    name: my_org_member\n    properties:\n      organizationId: ${myOrg.id}\n      userId: ${user.id}\n  role1:\n    type: auth0:OrganizationMemberRole\n    properties:\n      organizationId: ${myOrg.id}\n      userId: ${user.id}\n      roleId: ${reader.id}\n  role2:\n    type: auth0:OrganizationMemberRole\n    properties:\n      organizationId: ${myOrg.id}\n      userId: ${user.id}\n      roleId: ${writer.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\norganization ID, user ID and role ID separated by \"::\" (note the double colon)\n\n\u003corganizationID\u003e::\u003cuserID\u003e::\u003croleID\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/organizationMemberRole:OrganizationMemberRole my_org_member_role \"org_XXXXX::auth0|XXXXX::role_XXXX\"\n```\n\n",
            "properties": {
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization.\n"
                },
                "roleDescription": {
                    "type": "string",
                    "description": "Description of the role.\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "The role ID to assign to the organization member.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Name of the role.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user ID of the organization member.\n"
                }
            },
            "required": [
                "organizationId",
                "roleDescription",
                "roleId",
                "roleName",
                "userId"
            ],
            "inputProperties": {
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization.\n",
                    "willReplaceOnChanges": true
                },
                "roleId": {
                    "type": "string",
                    "description": "The role ID to assign to the organization member.\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "The user ID of the organization member.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "organizationId",
                "roleId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationMemberRole resources.\n",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization.\n",
                        "willReplaceOnChanges": true
                    },
                    "roleDescription": {
                        "type": "string",
                        "description": "Description of the role.\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "The role ID to assign to the organization member.\n",
                        "willReplaceOnChanges": true
                    },
                    "roleName": {
                        "type": "string",
                        "description": "Name of the role.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The user ID of the organization member.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organizationMemberRoles:OrganizationMemberRoles": {
            "description": "This resource is used to manage the roles assigned to an organization member.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst reader = new auth0.Role(\"reader\", {name: \"Reader\"});\nconst writer = new auth0.Role(\"writer\", {name: \"Writer\"});\nconst user = new auth0.User(\"user\", {\n    connectionName: \"Username-Password-Authentication\",\n    email: \"test-user@auth0.com\",\n    password: \"MyPass123$\",\n});\nconst myOrg = new auth0.Organization(\"my_org\", {\n    name: \"some-org\",\n    displayName: \"Some Org\",\n});\nconst myOrgMember = new auth0.OrganizationMember(\"my_org_member\", {\n    organizationId: myOrg.id,\n    userId: user.id,\n});\nconst myOrgMemberRoles = new auth0.OrganizationMemberRoles(\"my_org_member_roles\", {\n    organizationId: myOrg.id,\n    userId: user.id,\n    roles: [\n        reader.id,\n        writer.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nreader = auth0.Role(\"reader\", name=\"Reader\")\nwriter = auth0.Role(\"writer\", name=\"Writer\")\nuser = auth0.User(\"user\",\n    connection_name=\"Username-Password-Authentication\",\n    email=\"test-user@auth0.com\",\n    password=\"MyPass123$\")\nmy_org = auth0.Organization(\"my_org\",\n    name=\"some-org\",\n    display_name=\"Some Org\")\nmy_org_member = auth0.OrganizationMember(\"my_org_member\",\n    organization_id=my_org.id,\n    user_id=user.id)\nmy_org_member_roles = auth0.OrganizationMemberRoles(\"my_org_member_roles\",\n    organization_id=my_org.id,\n    user_id=user.id,\n    roles=[\n        reader.id,\n        writer.id,\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var reader = new Auth0.Role(\"reader\", new()\n    {\n        Name = \"Reader\",\n    });\n\n    var writer = new Auth0.Role(\"writer\", new()\n    {\n        Name = \"Writer\",\n    });\n\n    var user = new Auth0.User(\"user\", new()\n    {\n        ConnectionName = \"Username-Password-Authentication\",\n        Email = \"test-user@auth0.com\",\n        Password = \"MyPass123$\",\n    });\n\n    var myOrg = new Auth0.Organization(\"my_org\", new()\n    {\n        Name = \"some-org\",\n        DisplayName = \"Some Org\",\n    });\n\n    var myOrgMember = new Auth0.OrganizationMember(\"my_org_member\", new()\n    {\n        OrganizationId = myOrg.Id,\n        UserId = user.Id,\n    });\n\n    var myOrgMemberRoles = new Auth0.OrganizationMemberRoles(\"my_org_member_roles\", new()\n    {\n        OrganizationId = myOrg.Id,\n        UserId = user.Id,\n        Roles = new[]\n        {\n            reader.Id,\n            writer.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treader, err := auth0.NewRole(ctx, \"reader\", \u0026auth0.RoleArgs{\n\t\t\tName: pulumi.String(\"Reader\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\twriter, err := auth0.NewRole(ctx, \"writer\", \u0026auth0.RoleArgs{\n\t\t\tName: pulumi.String(\"Writer\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tuser, err := auth0.NewUser(ctx, \"user\", \u0026auth0.UserArgs{\n\t\t\tConnectionName: pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tEmail:          pulumi.String(\"test-user@auth0.com\"),\n\t\t\tPassword:       pulumi.String(\"MyPass123$\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyOrg, err := auth0.NewOrganization(ctx, \"my_org\", \u0026auth0.OrganizationArgs{\n\t\t\tName:        pulumi.String(\"some-org\"),\n\t\t\tDisplayName: pulumi.String(\"Some Org\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewOrganizationMember(ctx, \"my_org_member\", \u0026auth0.OrganizationMemberArgs{\n\t\t\tOrganizationId: myOrg.ID(),\n\t\t\tUserId:         user.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewOrganizationMemberRoles(ctx, \"my_org_member_roles\", \u0026auth0.OrganizationMemberRolesArgs{\n\t\t\tOrganizationId: myOrg.ID(),\n\t\t\tUserId:         user.ID(),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\treader.ID(),\n\t\t\t\twriter.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Role;\nimport com.pulumi.auth0.RoleArgs;\nimport com.pulumi.auth0.User;\nimport com.pulumi.auth0.UserArgs;\nimport com.pulumi.auth0.Organization;\nimport com.pulumi.auth0.OrganizationArgs;\nimport com.pulumi.auth0.OrganizationMember;\nimport com.pulumi.auth0.OrganizationMemberArgs;\nimport com.pulumi.auth0.OrganizationMemberRoles;\nimport com.pulumi.auth0.OrganizationMemberRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var reader = new Role(\"reader\", RoleArgs.builder()\n            .name(\"Reader\")\n            .build());\n\n        var writer = new Role(\"writer\", RoleArgs.builder()\n            .name(\"Writer\")\n            .build());\n\n        var user = new User(\"user\", UserArgs.builder()\n            .connectionName(\"Username-Password-Authentication\")\n            .email(\"test-user@auth0.com\")\n            .password(\"MyPass123$\")\n            .build());\n\n        var myOrg = new Organization(\"myOrg\", OrganizationArgs.builder()\n            .name(\"some-org\")\n            .displayName(\"Some Org\")\n            .build());\n\n        var myOrgMember = new OrganizationMember(\"myOrgMember\", OrganizationMemberArgs.builder()\n            .organizationId(myOrg.id())\n            .userId(user.id())\n            .build());\n\n        var myOrgMemberRoles = new OrganizationMemberRoles(\"myOrgMemberRoles\", OrganizationMemberRolesArgs.builder()\n            .organizationId(myOrg.id())\n            .userId(user.id())\n            .roles(            \n                reader.id(),\n                writer.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  reader:\n    type: auth0:Role\n    properties:\n      name: Reader\n  writer:\n    type: auth0:Role\n    properties:\n      name: Writer\n  user:\n    type: auth0:User\n    properties:\n      connectionName: Username-Password-Authentication\n      email: test-user@auth0.com\n      password: MyPass123$\n  myOrg:\n    type: auth0:Organization\n    name: my_org\n    properties:\n      name: some-org\n      displayName: Some Org\n  myOrgMember:\n    type: auth0:OrganizationMember\n    name: my_org_member\n    properties:\n      organizationId: ${myOrg.id}\n      userId: ${user.id}\n  myOrgMemberRoles:\n    type: auth0:OrganizationMemberRoles\n    name: my_org_member_roles\n    properties:\n      organizationId: ${myOrg.id}\n      userId: ${user.id}\n      roles:\n        - ${reader.id}\n        - ${writer.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\norganization ID and user ID separated by \"::\" (note the double colon)\n\n\u003corganizationID\u003e::\u003cuserID\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/organizationMemberRoles:OrganizationMemberRoles my_org_member_roles \"org_XXXXX::auth0|XXXXX\"\n```\n\n",
            "properties": {
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The role ID(s) to assign to the organization member.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user ID of the organization member.\n"
                }
            },
            "required": [
                "organizationId",
                "roles",
                "userId"
            ],
            "inputProperties": {
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization.\n",
                    "willReplaceOnChanges": true
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The role ID(s) to assign to the organization member.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user ID of the organization member.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "organizationId",
                "roles",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationMemberRoles resources.\n",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization.\n",
                        "willReplaceOnChanges": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The role ID(s) to assign to the organization member.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The user ID of the organization member.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organizationMembers:OrganizationMembers": {
            "description": "This resource is used to manage members of an organization.\n\n!\u003e This resource manages all the members assigned to an organization. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.OrganizationMember`\" pulumi-lang-dotnet=\"`auth0.OrganizationMember`\" pulumi-lang-go=\"`OrganizationMember`\" pulumi-lang-python=\"`OrganizationMember`\" pulumi-lang-yaml=\"`auth0.OrganizationMember`\" pulumi-lang-java=\"`auth0.OrganizationMember`\"\u003e`auth0.OrganizationMember`\u003c/span\u003e\nresource only appends a member to an organization. To avoid potential issues, it is recommended not to use this\nresource in conjunction with the \u003cspan pulumi-lang-nodejs=\"`auth0.OrganizationMember`\" pulumi-lang-dotnet=\"`auth0.OrganizationMember`\" pulumi-lang-go=\"`OrganizationMember`\" pulumi-lang-python=\"`OrganizationMember`\" pulumi-lang-yaml=\"`auth0.OrganizationMember`\" pulumi-lang-java=\"`auth0.OrganizationMember`\"\u003e`auth0.OrganizationMember`\u003c/span\u003e resource when managing members for the same organization\nid.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst user1 = new auth0.User(\"user_1\", {\n    connectionName: \"Username-Password-Authentication\",\n    email: \"myuser1@auth0.com\",\n    password: \"MyPass123$\",\n});\nconst user2 = new auth0.User(\"user_2\", {\n    connectionName: \"Username-Password-Authentication\",\n    email: \"myuser2@auth0.com\",\n    password: \"MyPass123$\",\n});\nconst myOrg = new auth0.Organization(\"my_org\", {\n    name: \"some-org\",\n    displayName: \"Some Organization\",\n});\nconst myMembers = new auth0.OrganizationMembers(\"my_members\", {\n    organizationId: myOrg.id,\n    members: [\n        user1.id,\n        user2.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nuser1 = auth0.User(\"user_1\",\n    connection_name=\"Username-Password-Authentication\",\n    email=\"myuser1@auth0.com\",\n    password=\"MyPass123$\")\nuser2 = auth0.User(\"user_2\",\n    connection_name=\"Username-Password-Authentication\",\n    email=\"myuser2@auth0.com\",\n    password=\"MyPass123$\")\nmy_org = auth0.Organization(\"my_org\",\n    name=\"some-org\",\n    display_name=\"Some Organization\")\nmy_members = auth0.OrganizationMembers(\"my_members\",\n    organization_id=my_org.id,\n    members=[\n        user1.id,\n        user2.id,\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user1 = new Auth0.User(\"user_1\", new()\n    {\n        ConnectionName = \"Username-Password-Authentication\",\n        Email = \"myuser1@auth0.com\",\n        Password = \"MyPass123$\",\n    });\n\n    var user2 = new Auth0.User(\"user_2\", new()\n    {\n        ConnectionName = \"Username-Password-Authentication\",\n        Email = \"myuser2@auth0.com\",\n        Password = \"MyPass123$\",\n    });\n\n    var myOrg = new Auth0.Organization(\"my_org\", new()\n    {\n        Name = \"some-org\",\n        DisplayName = \"Some Organization\",\n    });\n\n    var myMembers = new Auth0.OrganizationMembers(\"my_members\", new()\n    {\n        OrganizationId = myOrg.Id,\n        Members = new[]\n        {\n            user1.Id,\n            user2.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser1, err := auth0.NewUser(ctx, \"user_1\", \u0026auth0.UserArgs{\n\t\t\tConnectionName: pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tEmail:          pulumi.String(\"myuser1@auth0.com\"),\n\t\t\tPassword:       pulumi.String(\"MyPass123$\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tuser2, err := auth0.NewUser(ctx, \"user_2\", \u0026auth0.UserArgs{\n\t\t\tConnectionName: pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tEmail:          pulumi.String(\"myuser2@auth0.com\"),\n\t\t\tPassword:       pulumi.String(\"MyPass123$\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyOrg, err := auth0.NewOrganization(ctx, \"my_org\", \u0026auth0.OrganizationArgs{\n\t\t\tName:        pulumi.String(\"some-org\"),\n\t\t\tDisplayName: pulumi.String(\"Some Organization\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewOrganizationMembers(ctx, \"my_members\", \u0026auth0.OrganizationMembersArgs{\n\t\t\tOrganizationId: myOrg.ID(),\n\t\t\tMembers: pulumi.StringArray{\n\t\t\t\tuser1.ID(),\n\t\t\t\tuser2.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.User;\nimport com.pulumi.auth0.UserArgs;\nimport com.pulumi.auth0.Organization;\nimport com.pulumi.auth0.OrganizationArgs;\nimport com.pulumi.auth0.OrganizationMembers;\nimport com.pulumi.auth0.OrganizationMembersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user1 = new User(\"user1\", UserArgs.builder()\n            .connectionName(\"Username-Password-Authentication\")\n            .email(\"myuser1@auth0.com\")\n            .password(\"MyPass123$\")\n            .build());\n\n        var user2 = new User(\"user2\", UserArgs.builder()\n            .connectionName(\"Username-Password-Authentication\")\n            .email(\"myuser2@auth0.com\")\n            .password(\"MyPass123$\")\n            .build());\n\n        var myOrg = new Organization(\"myOrg\", OrganizationArgs.builder()\n            .name(\"some-org\")\n            .displayName(\"Some Organization\")\n            .build());\n\n        var myMembers = new OrganizationMembers(\"myMembers\", OrganizationMembersArgs.builder()\n            .organizationId(myOrg.id())\n            .members(            \n                user1.id(),\n                user2.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user1:\n    type: auth0:User\n    name: user_1\n    properties:\n      connectionName: Username-Password-Authentication\n      email: myuser1@auth0.com\n      password: MyPass123$\n  user2:\n    type: auth0:User\n    name: user_2\n    properties:\n      connectionName: Username-Password-Authentication\n      email: myuser2@auth0.com\n      password: MyPass123$\n  myOrg:\n    type: auth0:Organization\n    name: my_org\n    properties:\n      name: some-org\n      displayName: Some Organization\n  myMembers:\n    type: auth0:OrganizationMembers\n    name: my_members\n    properties:\n      organizationId: ${myOrg.id}\n      members:\n        - ${user1.id}\n        - ${user2.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the organization ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/organizationMembers:OrganizationMembers my_org_members \"org_XXXXX\"\n```\n\n",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Add user ID(s) directly from the tenant to become members of the organization.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to assign the members to.\n"
                }
            },
            "required": [
                "members",
                "organizationId"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Add user ID(s) directly from the tenant to become members of the organization.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization to assign the members to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "members",
                "organizationId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OrganizationMembers resources.\n",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Add user ID(s) directly from the tenant to become members of the organization.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization to assign the members to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/pages:Pages": {
            "description": "With this resource you can manage custom HTML for the Login, Reset Password, Multi-Factor Authentication and Error pages.\n\n!\u003e The error block in\u003cspan pulumi-lang-nodejs=\" auth0.Pages \" pulumi-lang-dotnet=\" auth0.Pages \" pulumi-lang-go=\" Pages \" pulumi-lang-python=\" Pages \" pulumi-lang-yaml=\" auth0.Pages \" pulumi-lang-java=\" auth0.Pages \"\u003e auth0.Pages \u003c/span\u003eis not recommended when you're managing tenant settings via the\u003cspan pulumi-lang-nodejs=\" auth0.Tenant \" pulumi-lang-dotnet=\" auth0.Tenant \" pulumi-lang-go=\" Tenant \" pulumi-lang-python=\" Tenant \" pulumi-lang-yaml=\" auth0.Tenant \" pulumi-lang-java=\" auth0.Tenant \"\u003e auth0.Tenant \u003c/span\u003eresource.\nTo avoid conflicts, configure the\u003cspan pulumi-lang-nodejs=\" errorPage \" pulumi-lang-dotnet=\" ErrorPage \" pulumi-lang-go=\" errorPage \" pulumi-lang-python=\" error_page \" pulumi-lang-yaml=\" errorPage \" pulumi-lang-java=\" errorPage \"\u003e error_page \u003c/span\u003edirectly in\u003cspan pulumi-lang-nodejs=\" auth0.Tenant \" pulumi-lang-dotnet=\" auth0.Tenant \" pulumi-lang-go=\" Tenant \" pulumi-lang-python=\" Tenant \" pulumi-lang-yaml=\" auth0.Tenant \" pulumi-lang-java=\" auth0.Tenant \"\u003e auth0.Tenant \u003c/span\u003einstead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myPages = new auth0.Pages(\"my_pages\", {\n    login: {\n        enabled: true,\n        html: \"\u003chtml\u003e\u003cbody\u003eMy Custom Login Page\u003c/body\u003e\u003c/html\u003e\",\n    },\n    changePassword: {\n        enabled: true,\n        html: \"\u003chtml\u003e\u003cbody\u003eMy Custom Reset Password Page\u003c/body\u003e\u003c/html\u003e\",\n    },\n    guardianMfa: {\n        enabled: true,\n        html: \"\u003chtml\u003e\u003cbody\u003eMy Custom MFA Page\u003c/body\u003e\u003c/html\u003e\",\n    },\n    error: {\n        showLogLink: true,\n        html: \"\u003chtml\u003e\u003cbody\u003eMy Custom Error Page\u003c/body\u003e\u003c/html\u003e\",\n        url: \"https://example.com\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_pages = auth0.Pages(\"my_pages\",\n    login={\n        \"enabled\": True,\n        \"html\": \"\u003chtml\u003e\u003cbody\u003eMy Custom Login Page\u003c/body\u003e\u003c/html\u003e\",\n    },\n    change_password={\n        \"enabled\": True,\n        \"html\": \"\u003chtml\u003e\u003cbody\u003eMy Custom Reset Password Page\u003c/body\u003e\u003c/html\u003e\",\n    },\n    guardian_mfa={\n        \"enabled\": True,\n        \"html\": \"\u003chtml\u003e\u003cbody\u003eMy Custom MFA Page\u003c/body\u003e\u003c/html\u003e\",\n    },\n    error={\n        \"show_log_link\": True,\n        \"html\": \"\u003chtml\u003e\u003cbody\u003eMy Custom Error Page\u003c/body\u003e\u003c/html\u003e\",\n        \"url\": \"https://example.com\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myPages = new Auth0.Pages(\"my_pages\", new()\n    {\n        Login = new Auth0.Inputs.PagesLoginArgs\n        {\n            Enabled = true,\n            Html = \"\u003chtml\u003e\u003cbody\u003eMy Custom Login Page\u003c/body\u003e\u003c/html\u003e\",\n        },\n        ChangePassword = new Auth0.Inputs.PagesChangePasswordArgs\n        {\n            Enabled = true,\n            Html = \"\u003chtml\u003e\u003cbody\u003eMy Custom Reset Password Page\u003c/body\u003e\u003c/html\u003e\",\n        },\n        GuardianMfa = new Auth0.Inputs.PagesGuardianMfaArgs\n        {\n            Enabled = true,\n            Html = \"\u003chtml\u003e\u003cbody\u003eMy Custom MFA Page\u003c/body\u003e\u003c/html\u003e\",\n        },\n        Error = new Auth0.Inputs.PagesErrorArgs\n        {\n            ShowLogLink = true,\n            Html = \"\u003chtml\u003e\u003cbody\u003eMy Custom Error Page\u003c/body\u003e\u003c/html\u003e\",\n            Url = \"https://example.com\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewPages(ctx, \"my_pages\", \u0026auth0.PagesArgs{\n\t\t\tLogin: \u0026auth0.PagesLoginArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tHtml:    pulumi.String(\"\u003chtml\u003e\u003cbody\u003eMy Custom Login Page\u003c/body\u003e\u003c/html\u003e\"),\n\t\t\t},\n\t\t\tChangePassword: \u0026auth0.PagesChangePasswordArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tHtml:    pulumi.String(\"\u003chtml\u003e\u003cbody\u003eMy Custom Reset Password Page\u003c/body\u003e\u003c/html\u003e\"),\n\t\t\t},\n\t\t\tGuardianMfa: \u0026auth0.PagesGuardianMfaArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tHtml:    pulumi.String(\"\u003chtml\u003e\u003cbody\u003eMy Custom MFA Page\u003c/body\u003e\u003c/html\u003e\"),\n\t\t\t},\n\t\t\tError: \u0026auth0.PagesErrorArgs{\n\t\t\t\tShowLogLink: pulumi.Bool(true),\n\t\t\t\tHtml:        pulumi.String(\"\u003chtml\u003e\u003cbody\u003eMy Custom Error Page\u003c/body\u003e\u003c/html\u003e\"),\n\t\t\t\tUrl:         pulumi.String(\"https://example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Pages;\nimport com.pulumi.auth0.PagesArgs;\nimport com.pulumi.auth0.inputs.PagesLoginArgs;\nimport com.pulumi.auth0.inputs.PagesChangePasswordArgs;\nimport com.pulumi.auth0.inputs.PagesGuardianMfaArgs;\nimport com.pulumi.auth0.inputs.PagesErrorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myPages = new Pages(\"myPages\", PagesArgs.builder()\n            .login(PagesLoginArgs.builder()\n                .enabled(true)\n                .html(\"\u003chtml\u003e\u003cbody\u003eMy Custom Login Page\u003c/body\u003e\u003c/html\u003e\")\n                .build())\n            .changePassword(PagesChangePasswordArgs.builder()\n                .enabled(true)\n                .html(\"\u003chtml\u003e\u003cbody\u003eMy Custom Reset Password Page\u003c/body\u003e\u003c/html\u003e\")\n                .build())\n            .guardianMfa(PagesGuardianMfaArgs.builder()\n                .enabled(true)\n                .html(\"\u003chtml\u003e\u003cbody\u003eMy Custom MFA Page\u003c/body\u003e\u003c/html\u003e\")\n                .build())\n            .error(PagesErrorArgs.builder()\n                .showLogLink(true)\n                .html(\"\u003chtml\u003e\u003cbody\u003eMy Custom Error Page\u003c/body\u003e\u003c/html\u003e\")\n                .url(\"https://example.com\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myPages:\n    type: auth0:Pages\n    name: my_pages\n    properties:\n      login:\n        enabled: true\n        html: \u003chtml\u003e\u003cbody\u003eMy Custom Login Page\u003c/body\u003e\u003c/html\u003e\n      changePassword:\n        enabled: true\n        html: \u003chtml\u003e\u003cbody\u003eMy Custom Reset Password Page\u003c/body\u003e\u003c/html\u003e\n      guardianMfa:\n        enabled: true\n        html: \u003chtml\u003e\u003cbody\u003eMy Custom MFA Page\u003c/body\u003e\u003c/html\u003e\n      error:\n        showLogLink: true\n        html: \u003chtml\u003e\u003cbody\u003eMy Custom Error Page\u003c/body\u003e\u003c/html\u003e\n        url: https://example.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAs this is not a resource identifiable by an ID within the Auth0 Management API,\n\npages can be imported using a random string.\n\nWe recommend [Version 4 UUID](https://www.uuidgenerator.net/version4)\n\nExample:\n\n```sh\n$ pulumi import auth0:index/pages:Pages my_pages \"22f4f21b-017a-319d-92e7-2291c1ca36c4\"\n```\n\n",
            "properties": {
                "changePassword": {
                    "$ref": "#/types/auth0:index/PagesChangePassword:PagesChangePassword",
                    "description": "Configuration settings for customizing the Password Reset page.\n"
                },
                "error": {
                    "$ref": "#/types/auth0:index/PagesError:PagesError",
                    "description": "Configuration settings for the Error pages.\n"
                },
                "guardianMfa": {
                    "$ref": "#/types/auth0:index/PagesGuardianMfa:PagesGuardianMfa",
                    "description": "Configuration settings for customizing the Guardian Multi-Factor Authentication page.\n"
                },
                "login": {
                    "$ref": "#/types/auth0:index/PagesLogin:PagesLogin",
                    "description": "Configuration settings for customizing the Login page.\n"
                }
            },
            "required": [
                "changePassword",
                "error",
                "guardianMfa",
                "login"
            ],
            "inputProperties": {
                "changePassword": {
                    "$ref": "#/types/auth0:index/PagesChangePassword:PagesChangePassword",
                    "description": "Configuration settings for customizing the Password Reset page.\n"
                },
                "error": {
                    "$ref": "#/types/auth0:index/PagesError:PagesError",
                    "description": "Configuration settings for the Error pages.\n"
                },
                "guardianMfa": {
                    "$ref": "#/types/auth0:index/PagesGuardianMfa:PagesGuardianMfa",
                    "description": "Configuration settings for customizing the Guardian Multi-Factor Authentication page.\n"
                },
                "login": {
                    "$ref": "#/types/auth0:index/PagesLogin:PagesLogin",
                    "description": "Configuration settings for customizing the Login page.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pages resources.\n",
                "properties": {
                    "changePassword": {
                        "$ref": "#/types/auth0:index/PagesChangePassword:PagesChangePassword",
                        "description": "Configuration settings for customizing the Password Reset page.\n"
                    },
                    "error": {
                        "$ref": "#/types/auth0:index/PagesError:PagesError",
                        "description": "Configuration settings for the Error pages.\n"
                    },
                    "guardianMfa": {
                        "$ref": "#/types/auth0:index/PagesGuardianMfa:PagesGuardianMfa",
                        "description": "Configuration settings for customizing the Guardian Multi-Factor Authentication page.\n"
                    },
                    "login": {
                        "$ref": "#/types/auth0:index/PagesLogin:PagesLogin",
                        "description": "Configuration settings for customizing the Login page.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/phoneProvider:PhoneProvider": {
            "description": "Auth0 allows you to configure your own phone messaging provider to help you manage, monitor, and troubleshoot your SMS and voice communications. You can only configure one phone provider for all SMS and voice communications per tenant.\n\n!\u003e This resource manages to create a max of 1 phone provider for a tenant.\nTo avoid potential issues, it is recommended not to try creating multiple phone providers on the same tenant.\n\n!\u003e If you are using the \u003cspan pulumi-lang-nodejs=\"`auth0.PhoneProvider`\" pulumi-lang-dotnet=\"`auth0.PhoneProvider`\" pulumi-lang-go=\"`PhoneProvider`\" pulumi-lang-python=\"`PhoneProvider`\" pulumi-lang-yaml=\"`auth0.PhoneProvider`\" pulumi-lang-java=\"`auth0.PhoneProvider`\"\u003e`auth0.PhoneProvider`\u003c/span\u003e resource to create a \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e phone provider, you must ensure an action is created first with `custom-phone-provider` as the\u003cspan pulumi-lang-nodejs=\" supportedTriggers\n\" pulumi-lang-dotnet=\" SupportedTriggers\n\" pulumi-lang-go=\" supportedTriggers\n\" pulumi-lang-python=\" supported_triggers\n\" pulumi-lang-yaml=\" supportedTriggers\n\" pulumi-lang-java=\" supportedTriggers\n\"\u003e supported_triggers\n\u003c/span\u003e\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// This is an example on how to set up the phone provider with Twilio.\nconst twilioPhoneProvider = new auth0.PhoneProvider(\"twilio_phone_provider\", {\n    name: \"twilio\",\n    disabled: false,\n    credentials: {\n        authToken: \"secretAuthToken\",\n    },\n    configuration: {\n        deliveryMethods: [\n            \"text\",\n            \"voice\",\n        ],\n        defaultFrom: \"+1234567890\",\n        sid: \"ACXXXXXXXXXXXXXXXX\",\n        mssid: \"MSXXXXXXXXXXXXXXXX\",\n    },\n});\n// This is an example on how to set up the phone provider with a custom action.\n// Make sure a corresponding action exists with custom-phone-provider as supported triggers\nconst sendCustomPhone = new auth0.Action(\"send_custom_phone\", {\n    name: \"Custom Phone Provider\",\n    runtime: \"node18\",\n    deploy: true,\n    code: `/**\n * Handler to be executed while sending a phone notification\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {CustomPhoneProviderAPI} api - Methods and utilities to help change the behavior of sending a phone notification.\n */\nexports.onExecuteCustomPhoneProvider = async (event, api) =\u003e {\n    // Code goes here\n    return;\n};\n`,\n    supportedTriggers: {\n        id: \"custom-phone-provider\",\n        version: \"v1\",\n    },\n});\nconst customPhoneProvider = new auth0.PhoneProvider(\"custom_phone_provider\", {\n    name: \"custom\",\n    disabled: false,\n    configuration: {\n        deliveryMethods: [\n            \"text\",\n            \"voice\",\n        ],\n    },\n    credentials: {},\n}, {\n    dependsOn: [sendCustomPhone],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# This is an example on how to set up the phone provider with Twilio.\ntwilio_phone_provider = auth0.PhoneProvider(\"twilio_phone_provider\",\n    name=\"twilio\",\n    disabled=False,\n    credentials={\n        \"auth_token\": \"secretAuthToken\",\n    },\n    configuration={\n        \"delivery_methods\": [\n            \"text\",\n            \"voice\",\n        ],\n        \"default_from\": \"+1234567890\",\n        \"sid\": \"ACXXXXXXXXXXXXXXXX\",\n        \"mssid\": \"MSXXXXXXXXXXXXXXXX\",\n    })\n# This is an example on how to set up the phone provider with a custom action.\n# Make sure a corresponding action exists with custom-phone-provider as supported triggers\nsend_custom_phone = auth0.Action(\"send_custom_phone\",\n    name=\"Custom Phone Provider\",\n    runtime=\"node18\",\n    deploy=True,\n    code=\"\"\"/**\n * Handler to be executed while sending a phone notification\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {CustomPhoneProviderAPI} api - Methods and utilities to help change the behavior of sending a phone notification.\n */\nexports.onExecuteCustomPhoneProvider = async (event, api) =\u003e {\n    // Code goes here\n    return;\n};\n\"\"\",\n    supported_triggers={\n        \"id\": \"custom-phone-provider\",\n        \"version\": \"v1\",\n    })\ncustom_phone_provider = auth0.PhoneProvider(\"custom_phone_provider\",\n    name=\"custom\",\n    disabled=False,\n    configuration={\n        \"delivery_methods\": [\n            \"text\",\n            \"voice\",\n        ],\n    },\n    credentials={},\n    opts = pulumi.ResourceOptions(depends_on=[send_custom_phone]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // This is an example on how to set up the phone provider with Twilio.\n    var twilioPhoneProvider = new Auth0.PhoneProvider(\"twilio_phone_provider\", new()\n    {\n        Name = \"twilio\",\n        Disabled = false,\n        Credentials = new Auth0.Inputs.PhoneProviderCredentialsArgs\n        {\n            AuthToken = \"secretAuthToken\",\n        },\n        Configuration = new Auth0.Inputs.PhoneProviderConfigurationArgs\n        {\n            DeliveryMethods = new[]\n            {\n                \"text\",\n                \"voice\",\n            },\n            DefaultFrom = \"+1234567890\",\n            Sid = \"ACXXXXXXXXXXXXXXXX\",\n            Mssid = \"MSXXXXXXXXXXXXXXXX\",\n        },\n    });\n\n    // This is an example on how to set up the phone provider with a custom action.\n    // Make sure a corresponding action exists with custom-phone-provider as supported triggers\n    var sendCustomPhone = new Auth0.Action(\"send_custom_phone\", new()\n    {\n        Name = \"Custom Phone Provider\",\n        Runtime = \"node18\",\n        Deploy = true,\n        Code = @\"/**\n * Handler to be executed while sending a phone notification\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {CustomPhoneProviderAPI} api - Methods and utilities to help change the behavior of sending a phone notification.\n */\nexports.onExecuteCustomPhoneProvider = async (event, api) =\u003e {\n    // Code goes here\n    return;\n};\n\",\n        SupportedTriggers = new Auth0.Inputs.ActionSupportedTriggersArgs\n        {\n            Id = \"custom-phone-provider\",\n            Version = \"v1\",\n        },\n    });\n\n    var customPhoneProvider = new Auth0.PhoneProvider(\"custom_phone_provider\", new()\n    {\n        Name = \"custom\",\n        Disabled = false,\n        Configuration = new Auth0.Inputs.PhoneProviderConfigurationArgs\n        {\n            DeliveryMethods = new[]\n            {\n                \"text\",\n                \"voice\",\n            },\n        },\n        Credentials = null,\n    }, new CustomResourceOptions\n    {\n        DependsOn =\n        {\n            sendCustomPhone,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// This is an example on how to set up the phone provider with Twilio.\n\t\t_, err := auth0.NewPhoneProvider(ctx, \"twilio_phone_provider\", \u0026auth0.PhoneProviderArgs{\n\t\t\tName:     pulumi.String(\"twilio\"),\n\t\t\tDisabled: pulumi.Bool(false),\n\t\t\tCredentials: \u0026auth0.PhoneProviderCredentialsArgs{\n\t\t\t\tAuthToken: pulumi.String(\"secretAuthToken\"),\n\t\t\t},\n\t\t\tConfiguration: \u0026auth0.PhoneProviderConfigurationArgs{\n\t\t\t\tDeliveryMethods: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"text\"),\n\t\t\t\t\tpulumi.String(\"voice\"),\n\t\t\t\t},\n\t\t\t\tDefaultFrom: pulumi.String(\"+1234567890\"),\n\t\t\t\tSid:         pulumi.String(\"ACXXXXXXXXXXXXXXXX\"),\n\t\t\t\tMssid:       pulumi.String(\"MSXXXXXXXXXXXXXXXX\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// This is an example on how to set up the phone provider with a custom action.\n\t\t// Make sure a corresponding action exists with custom-phone-provider as supported triggers\n\t\tsendCustomPhone, err := auth0.NewAction(ctx, \"send_custom_phone\", \u0026auth0.ActionArgs{\n\t\t\tName:    pulumi.String(\"Custom Phone Provider\"),\n\t\t\tRuntime: pulumi.String(\"node18\"),\n\t\t\tDeploy:  pulumi.Bool(true),\n\t\t\tCode: pulumi.String(`/**\n * Handler to be executed while sending a phone notification\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {CustomPhoneProviderAPI} api - Methods and utilities to help change the behavior of sending a phone notification.\n */\nexports.onExecuteCustomPhoneProvider = async (event, api) =\u003e {\n    // Code goes here\n    return;\n};\n`),\n\t\t\tSupportedTriggers: \u0026auth0.ActionSupportedTriggersArgs{\n\t\t\t\tId:      pulumi.String(\"custom-phone-provider\"),\n\t\t\t\tVersion: pulumi.String(\"v1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewPhoneProvider(ctx, \"custom_phone_provider\", \u0026auth0.PhoneProviderArgs{\n\t\t\tName:     pulumi.String(\"custom\"),\n\t\t\tDisabled: pulumi.Bool(false),\n\t\t\tConfiguration: \u0026auth0.PhoneProviderConfigurationArgs{\n\t\t\t\tDeliveryMethods: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"text\"),\n\t\t\t\t\tpulumi.String(\"voice\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tCredentials: \u0026auth0.PhoneProviderCredentialsArgs{},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tsendCustomPhone,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.PhoneProvider;\nimport com.pulumi.auth0.PhoneProviderArgs;\nimport com.pulumi.auth0.inputs.PhoneProviderCredentialsArgs;\nimport com.pulumi.auth0.inputs.PhoneProviderConfigurationArgs;\nimport com.pulumi.auth0.Action;\nimport com.pulumi.auth0.ActionArgs;\nimport com.pulumi.auth0.inputs.ActionSupportedTriggersArgs;\nimport com.pulumi.resources.CustomResourceOptions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // This is an example on how to set up the phone provider with Twilio.\n        var twilioPhoneProvider = new PhoneProvider(\"twilioPhoneProvider\", PhoneProviderArgs.builder()\n            .name(\"twilio\")\n            .disabled(false)\n            .credentials(PhoneProviderCredentialsArgs.builder()\n                .authToken(\"secretAuthToken\")\n                .build())\n            .configuration(PhoneProviderConfigurationArgs.builder()\n                .deliveryMethods(                \n                    \"text\",\n                    \"voice\")\n                .defaultFrom(\"+1234567890\")\n                .sid(\"ACXXXXXXXXXXXXXXXX\")\n                .mssid(\"MSXXXXXXXXXXXXXXXX\")\n                .build())\n            .build());\n\n        // This is an example on how to set up the phone provider with a custom action.\n        // Make sure a corresponding action exists with custom-phone-provider as supported triggers\n        var sendCustomPhone = new Action(\"sendCustomPhone\", ActionArgs.builder()\n            .name(\"Custom Phone Provider\")\n            .runtime(\"node18\")\n            .deploy(true)\n            .code(\"\"\"\n/**\n * Handler to be executed while sending a phone notification\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {CustomPhoneProviderAPI} api - Methods and utilities to help change the behavior of sending a phone notification.\n */\nexports.onExecuteCustomPhoneProvider = async (event, api) =\u003e {\n    // Code goes here\n    return;\n};\n            \"\"\")\n            .supportedTriggers(ActionSupportedTriggersArgs.builder()\n                .id(\"custom-phone-provider\")\n                .version(\"v1\")\n                .build())\n            .build());\n\n        var customPhoneProvider = new PhoneProvider(\"customPhoneProvider\", PhoneProviderArgs.builder()\n            .name(\"custom\")\n            .disabled(false)\n            .configuration(PhoneProviderConfigurationArgs.builder()\n                .deliveryMethods(                \n                    \"text\",\n                    \"voice\")\n                .build())\n            .credentials(PhoneProviderCredentialsArgs.builder()\n                .build())\n            .build(), CustomResourceOptions.builder()\n                .dependsOn(sendCustomPhone)\n                .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # This is an example on how to set up the phone provider with Twilio.\n  twilioPhoneProvider:\n    type: auth0:PhoneProvider\n    name: twilio_phone_provider\n    properties:\n      name: twilio\n      disabled: false\n      credentials:\n        authToken: secretAuthToken\n      configuration:\n        deliveryMethods:\n          - text\n          - voice\n        defaultFrom: '+1234567890'\n        sid: ACXXXXXXXXXXXXXXXX\n        mssid: MSXXXXXXXXXXXXXXXX\n  # This is an example on how to set up the phone provider with a custom action.\n  # Make sure a corresponding action exists with custom-phone-provider as supported triggers\n  sendCustomPhone:\n    type: auth0:Action\n    name: send_custom_phone\n    properties:\n      name: Custom Phone Provider\n      runtime: node18\n      deploy: true\n      code: |\n        /**\n         * Handler to be executed while sending a phone notification\n         * @param {Event} event - Details about the user and the context in which they are logging in.\n         * @param {CustomPhoneProviderAPI} api - Methods and utilities to help change the behavior of sending a phone notification.\n         */\n        exports.onExecuteCustomPhoneProvider = async (event, api) =\u003e {\n            // Code goes here\n            return;\n        };\n      supportedTriggers:\n        id: custom-phone-provider\n        version: v1\n  customPhoneProvider:\n    type: auth0:PhoneProvider\n    name: custom_phone_provider\n    properties:\n      name: custom\n      disabled: false # Disable the default phone provider\n      configuration:\n        deliveryMethods:\n          - text\n          - voice\n      credentials: {}\n    options:\n      dependsOn:\n        - ${sendCustomPhone}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the phone Provider ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/phoneProvider:PhoneProvider my_phone_provider \"pro_XXXXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "channel": {
                    "type": "string",
                    "description": "The channel of the phone provider.\n"
                },
                "configuration": {
                    "$ref": "#/types/auth0:index/PhoneProviderConfiguration:PhoneProviderConfiguration",
                    "description": "Specific phone provider settings.\n"
                },
                "credentials": {
                    "$ref": "#/types/auth0:index/PhoneProviderCredentials:PhoneProviderCredentials",
                    "description": "Provider credentials required to use authenticate to the provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Indicates whether the phone provider is enabled (false) or disabled (true).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the phone provider. Options include \u003cspan pulumi-lang-nodejs=\"`twilio`\" pulumi-lang-dotnet=\"`Twilio`\" pulumi-lang-go=\"`twilio`\" pulumi-lang-python=\"`twilio`\" pulumi-lang-yaml=\"`twilio`\" pulumi-lang-java=\"`twilio`\"\u003e`twilio`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e.\n"
                },
                "tenant": {
                    "type": "string",
                    "description": "The tenant of the phone provider.\n"
                }
            },
            "required": [
                "channel",
                "configuration",
                "credentials",
                "name",
                "tenant"
            ],
            "inputProperties": {
                "configuration": {
                    "$ref": "#/types/auth0:index/PhoneProviderConfiguration:PhoneProviderConfiguration",
                    "description": "Specific phone provider settings.\n"
                },
                "credentials": {
                    "$ref": "#/types/auth0:index/PhoneProviderCredentials:PhoneProviderCredentials",
                    "description": "Provider credentials required to use authenticate to the provider.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Indicates whether the phone provider is enabled (false) or disabled (true).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the phone provider. Options include \u003cspan pulumi-lang-nodejs=\"`twilio`\" pulumi-lang-dotnet=\"`Twilio`\" pulumi-lang-go=\"`twilio`\" pulumi-lang-python=\"`twilio`\" pulumi-lang-yaml=\"`twilio`\" pulumi-lang-java=\"`twilio`\"\u003e`twilio`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e.\n"
                }
            },
            "requiredInputs": [
                "configuration",
                "credentials"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PhoneProvider resources.\n",
                "properties": {
                    "channel": {
                        "type": "string",
                        "description": "The channel of the phone provider.\n"
                    },
                    "configuration": {
                        "$ref": "#/types/auth0:index/PhoneProviderConfiguration:PhoneProviderConfiguration",
                        "description": "Specific phone provider settings.\n"
                    },
                    "credentials": {
                        "$ref": "#/types/auth0:index/PhoneProviderCredentials:PhoneProviderCredentials",
                        "description": "Provider credentials required to use authenticate to the provider.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Indicates whether the phone provider is enabled (false) or disabled (true).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the phone provider. Options include \u003cspan pulumi-lang-nodejs=\"`twilio`\" pulumi-lang-dotnet=\"`Twilio`\" pulumi-lang-go=\"`twilio`\" pulumi-lang-python=\"`twilio`\" pulumi-lang-yaml=\"`twilio`\" pulumi-lang-java=\"`twilio`\"\u003e`twilio`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e.\n"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The tenant of the phone provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/prompt:Prompt": {
            "description": "With this resource, you can manage your Auth0 prompts, including choosing the login experience version.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myPrompt = new auth0.Prompt(\"my_prompt\", {\n    universalLoginExperience: \"new\",\n    identifierFirst: false,\n    webauthnPlatformFirstFactor: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_prompt = auth0.Prompt(\"my_prompt\",\n    universal_login_experience=\"new\",\n    identifier_first=False,\n    webauthn_platform_first_factor=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myPrompt = new Auth0.Prompt(\"my_prompt\", new()\n    {\n        UniversalLoginExperience = \"new\",\n        IdentifierFirst = false,\n        WebauthnPlatformFirstFactor = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewPrompt(ctx, \"my_prompt\", \u0026auth0.PromptArgs{\n\t\t\tUniversalLoginExperience:    pulumi.String(\"new\"),\n\t\t\tIdentifierFirst:             pulumi.Bool(false),\n\t\t\tWebauthnPlatformFirstFactor: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Prompt;\nimport com.pulumi.auth0.PromptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myPrompt = new Prompt(\"myPrompt\", PromptArgs.builder()\n            .universalLoginExperience(\"new\")\n            .identifierFirst(false)\n            .webauthnPlatformFirstFactor(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myPrompt:\n    type: auth0:Prompt\n    name: my_prompt\n    properties:\n      universalLoginExperience: new\n      identifierFirst: false\n      webauthnPlatformFirstFactor: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAs this is not a resource identifiable by an ID within the Auth0 Management API,\n\nprompts can be imported using a random string.\n\nWe recommend [Version 4 UUID](https://www.uuidgenerator.net/version4)\n\nExample:\n\n```sh\n$ pulumi import auth0:index/prompt:Prompt my_prompt \"22f4f21b-017a-319d-92e7-2291c1ca36c4\"\n```\n\n",
            "properties": {
                "identifierFirst": {
                    "type": "boolean",
                    "description": "Indicates whether the identifier first is used when using the new Universal Login experience.\n"
                },
                "universalLoginExperience": {
                    "type": "string",
                    "description": "Which login experience to use. Options include \u003cspan pulumi-lang-nodejs=\"`classic`\" pulumi-lang-dotnet=\"`Classic`\" pulumi-lang-go=\"`classic`\" pulumi-lang-python=\"`classic`\" pulumi-lang-yaml=\"`classic`\" pulumi-lang-java=\"`classic`\"\u003e`classic`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`new`\" pulumi-lang-dotnet=\"`New`\" pulumi-lang-go=\"`new`\" pulumi-lang-python=\"`new`\" pulumi-lang-yaml=\"`new`\" pulumi-lang-java=\"`new`\"\u003e`new`\u003c/span\u003e.\n"
                },
                "webauthnPlatformFirstFactor": {
                    "type": "boolean",
                    "description": "Determines if the login screen uses identifier and biometrics first. Setting this property to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e, requires MFA factors enabled for enrollment; use the \u003cspan pulumi-lang-nodejs=\"`auth0.Guardian`\" pulumi-lang-dotnet=\"`auth0.Guardian`\" pulumi-lang-go=\"`Guardian`\" pulumi-lang-python=\"`Guardian`\" pulumi-lang-yaml=\"`auth0.Guardian`\" pulumi-lang-java=\"`auth0.Guardian`\"\u003e`auth0.Guardian`\u003c/span\u003e resource to set one up.\n"
                }
            },
            "required": [
                "identifierFirst",
                "universalLoginExperience",
                "webauthnPlatformFirstFactor"
            ],
            "inputProperties": {
                "identifierFirst": {
                    "type": "boolean",
                    "description": "Indicates whether the identifier first is used when using the new Universal Login experience.\n"
                },
                "universalLoginExperience": {
                    "type": "string",
                    "description": "Which login experience to use. Options include \u003cspan pulumi-lang-nodejs=\"`classic`\" pulumi-lang-dotnet=\"`Classic`\" pulumi-lang-go=\"`classic`\" pulumi-lang-python=\"`classic`\" pulumi-lang-yaml=\"`classic`\" pulumi-lang-java=\"`classic`\"\u003e`classic`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`new`\" pulumi-lang-dotnet=\"`New`\" pulumi-lang-go=\"`new`\" pulumi-lang-python=\"`new`\" pulumi-lang-yaml=\"`new`\" pulumi-lang-java=\"`new`\"\u003e`new`\u003c/span\u003e.\n"
                },
                "webauthnPlatformFirstFactor": {
                    "type": "boolean",
                    "description": "Determines if the login screen uses identifier and biometrics first. Setting this property to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e, requires MFA factors enabled for enrollment; use the \u003cspan pulumi-lang-nodejs=\"`auth0.Guardian`\" pulumi-lang-dotnet=\"`auth0.Guardian`\" pulumi-lang-go=\"`Guardian`\" pulumi-lang-python=\"`Guardian`\" pulumi-lang-yaml=\"`auth0.Guardian`\" pulumi-lang-java=\"`auth0.Guardian`\"\u003e`auth0.Guardian`\u003c/span\u003e resource to set one up.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Prompt resources.\n",
                "properties": {
                    "identifierFirst": {
                        "type": "boolean",
                        "description": "Indicates whether the identifier first is used when using the new Universal Login experience.\n"
                    },
                    "universalLoginExperience": {
                        "type": "string",
                        "description": "Which login experience to use. Options include \u003cspan pulumi-lang-nodejs=\"`classic`\" pulumi-lang-dotnet=\"`Classic`\" pulumi-lang-go=\"`classic`\" pulumi-lang-python=\"`classic`\" pulumi-lang-yaml=\"`classic`\" pulumi-lang-java=\"`classic`\"\u003e`classic`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`new`\" pulumi-lang-dotnet=\"`New`\" pulumi-lang-go=\"`new`\" pulumi-lang-python=\"`new`\" pulumi-lang-yaml=\"`new`\" pulumi-lang-java=\"`new`\"\u003e`new`\u003c/span\u003e.\n"
                    },
                    "webauthnPlatformFirstFactor": {
                        "type": "boolean",
                        "description": "Determines if the login screen uses identifier and biometrics first. Setting this property to \u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e, requires MFA factors enabled for enrollment; use the \u003cspan pulumi-lang-nodejs=\"`auth0.Guardian`\" pulumi-lang-dotnet=\"`auth0.Guardian`\" pulumi-lang-go=\"`Guardian`\" pulumi-lang-python=\"`Guardian`\" pulumi-lang-yaml=\"`auth0.Guardian`\" pulumi-lang-java=\"`auth0.Guardian`\"\u003e`auth0.Guardian`\u003c/span\u003e resource to set one up.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/promptCustomText:PromptCustomText": {
            "description": "With this resource, you can manage custom text on your Auth0 prompts. You can read more about custom texts [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst example = new auth0.PromptCustomText(\"example\", {\n    prompt: \"login\",\n    language: \"en\",\n    body: JSON.stringify({\n        login: {\n            alertListTitle: \"Alerts\",\n            buttonText: \"Continue\",\n            description: \"Login to\",\n            editEmailText: \"Edit\",\n            emailPlaceholder: \"Email address\",\n            federatedConnectionButtonText: \"Continue with ${connectionName}\",\n            footerLinkText: \"Sign up\",\n            footerText: \"Don't have an account?\",\n            forgotPasswordText: \"Forgot password?\",\n            invitationDescription: \"Log in to accept ${inviterName}'s invitation to join ${companyName} on ${clientName}.\",\n            invitationTitle: \"You've Been Invited!\",\n            logoAltText: \"${companyName}\",\n            pageTitle: \"Log in | ${clientName}\",\n            passwordPlaceholder: \"Password\",\n            separatorText: \"Or\",\n            signupActionLinkText: \"${footerLinkText}\",\n            signupActionText: \"${footerText}\",\n            title: \"Welcome\",\n            usernamePlaceholder: \"Username or email address\",\n        },\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\nexample = auth0.PromptCustomText(\"example\",\n    prompt=\"login\",\n    language=\"en\",\n    body=json.dumps({\n        \"login\": {\n            \"alertListTitle\": \"Alerts\",\n            \"buttonText\": \"Continue\",\n            \"description\": \"Login to\",\n            \"editEmailText\": \"Edit\",\n            \"emailPlaceholder\": \"Email address\",\n            \"federatedConnectionButtonText\": \"Continue with ${connectionName}\",\n            \"footerLinkText\": \"Sign up\",\n            \"footerText\": \"Don't have an account?\",\n            \"forgotPasswordText\": \"Forgot password?\",\n            \"invitationDescription\": \"Log in to accept ${inviterName}'s invitation to join ${companyName} on ${clientName}.\",\n            \"invitationTitle\": \"You've Been Invited!\",\n            \"logoAltText\": \"${companyName}\",\n            \"pageTitle\": \"Log in | ${clientName}\",\n            \"passwordPlaceholder\": \"Password\",\n            \"separatorText\": \"Or\",\n            \"signupActionLinkText\": \"${footerLinkText}\",\n            \"signupActionText\": \"${footerText}\",\n            \"title\": \"Welcome\",\n            \"usernamePlaceholder\": \"Username or email address\",\n        },\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Auth0.PromptCustomText(\"example\", new()\n    {\n        Prompt = \"login\",\n        Language = \"en\",\n        Body = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"login\"] = new Dictionary\u003cstring, object?\u003e\n            {\n                [\"alertListTitle\"] = \"Alerts\",\n                [\"buttonText\"] = \"Continue\",\n                [\"description\"] = \"Login to\",\n                [\"editEmailText\"] = \"Edit\",\n                [\"emailPlaceholder\"] = \"Email address\",\n                [\"federatedConnectionButtonText\"] = \"Continue with ${connectionName}\",\n                [\"footerLinkText\"] = \"Sign up\",\n                [\"footerText\"] = \"Don't have an account?\",\n                [\"forgotPasswordText\"] = \"Forgot password?\",\n                [\"invitationDescription\"] = \"Log in to accept ${inviterName}'s invitation to join ${companyName} on ${clientName}.\",\n                [\"invitationTitle\"] = \"You've Been Invited!\",\n                [\"logoAltText\"] = \"${companyName}\",\n                [\"pageTitle\"] = \"Log in | ${clientName}\",\n                [\"passwordPlaceholder\"] = \"Password\",\n                [\"separatorText\"] = \"Or\",\n                [\"signupActionLinkText\"] = \"${footerLinkText}\",\n                [\"signupActionText\"] = \"${footerText}\",\n                [\"title\"] = \"Welcome\",\n                [\"usernamePlaceholder\"] = \"Username or email address\",\n            },\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"login\": map[string]interface{}{\n\t\t\t\t\"alertListTitle\":                \"Alerts\",\n\t\t\t\t\"buttonText\":                    \"Continue\",\n\t\t\t\t\"description\":                   \"Login to\",\n\t\t\t\t\"editEmailText\":                 \"Edit\",\n\t\t\t\t\"emailPlaceholder\":              \"Email address\",\n\t\t\t\t\"federatedConnectionButtonText\": \"Continue with ${connectionName}\",\n\t\t\t\t\"footerLinkText\":                \"Sign up\",\n\t\t\t\t\"footerText\":                    \"Don't have an account?\",\n\t\t\t\t\"forgotPasswordText\":            \"Forgot password?\",\n\t\t\t\t\"invitationDescription\":         \"Log in to accept ${inviterName}'s invitation to join ${companyName} on ${clientName}.\",\n\t\t\t\t\"invitationTitle\":               \"You've Been Invited!\",\n\t\t\t\t\"logoAltText\":                   \"${companyName}\",\n\t\t\t\t\"pageTitle\":                     \"Log in | ${clientName}\",\n\t\t\t\t\"passwordPlaceholder\":           \"Password\",\n\t\t\t\t\"separatorText\":                 \"Or\",\n\t\t\t\t\"signupActionLinkText\":          \"${footerLinkText}\",\n\t\t\t\t\"signupActionText\":              \"${footerText}\",\n\t\t\t\t\"title\":                         \"Welcome\",\n\t\t\t\t\"usernamePlaceholder\":           \"Username or email address\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = auth0.NewPromptCustomText(ctx, \"example\", \u0026auth0.PromptCustomTextArgs{\n\t\t\tPrompt:   pulumi.String(\"login\"),\n\t\t\tLanguage: pulumi.String(\"en\"),\n\t\t\tBody:     pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.PromptCustomText;\nimport com.pulumi.auth0.PromptCustomTextArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new PromptCustomText(\"example\", PromptCustomTextArgs.builder()\n            .prompt(\"login\")\n            .language(\"en\")\n            .body(serializeJson(\n                jsonObject(\n                    jsonProperty(\"login\", jsonObject(\n                        jsonProperty(\"alertListTitle\", \"Alerts\"),\n                        jsonProperty(\"buttonText\", \"Continue\"),\n                        jsonProperty(\"description\", \"Login to\"),\n                        jsonProperty(\"editEmailText\", \"Edit\"),\n                        jsonProperty(\"emailPlaceholder\", \"Email address\"),\n                        jsonProperty(\"federatedConnectionButtonText\", \"Continue with ${connectionName}\"),\n                        jsonProperty(\"footerLinkText\", \"Sign up\"),\n                        jsonProperty(\"footerText\", \"Don't have an account?\"),\n                        jsonProperty(\"forgotPasswordText\", \"Forgot password?\"),\n                        jsonProperty(\"invitationDescription\", \"Log in to accept ${inviterName}'s invitation to join ${companyName} on ${clientName}.\"),\n                        jsonProperty(\"invitationTitle\", \"You've Been Invited!\"),\n                        jsonProperty(\"logoAltText\", \"${companyName}\"),\n                        jsonProperty(\"pageTitle\", \"Log in | ${clientName}\"),\n                        jsonProperty(\"passwordPlaceholder\", \"Password\"),\n                        jsonProperty(\"separatorText\", \"Or\"),\n                        jsonProperty(\"signupActionLinkText\", \"${footerLinkText}\"),\n                        jsonProperty(\"signupActionText\", \"${footerText}\"),\n                        jsonProperty(\"title\", \"Welcome\"),\n                        jsonProperty(\"usernamePlaceholder\", \"Username or email address\")\n                    ))\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: auth0:PromptCustomText\n    properties:\n      prompt: login\n      language: en\n      body:\n        fn::toJSON:\n          login:\n            alertListTitle: Alerts\n            buttonText: Continue\n            description: Login to\n            editEmailText: Edit\n            emailPlaceholder: Email address\n            federatedConnectionButtonText: Continue with $${connectionName}\n            footerLinkText: Sign up\n            footerText: Don't have an account?\n            forgotPasswordText: Forgot password?\n            invitationDescription: Log in to accept $${inviterName}'s invitation to join $${companyName} on $${clientName}.\n            invitationTitle: You've Been Invited!\n            logoAltText: $${companyName}\n            pageTitle: Log in | $${clientName}\n            passwordPlaceholder: Password\n            separatorText: Or\n            signupActionLinkText: $${footerLinkText}\n            signupActionText: $${footerText}\n            title: Welcome\n            usernamePlaceholder: Username or email address\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\nprompt and language separated by \"::\" (note the double colon)\n\n\u003cprompt\u003e::\u003clanguage\u003e\n\nExample\n\n```sh\n$ pulumi import auth0:index/promptCustomText:PromptCustomText example \"login::en\"\n```\n\n",
            "properties": {
                "body": {
                    "type": "string",
                    "description": "JSON containing the custom texts. You can check the options for each prompt [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts#prompt-values).\n"
                },
                "language": {
                    "type": "string",
                    "description": "Language of the custom text. Options include: \u003cspan pulumi-lang-nodejs=\"`am`\" pulumi-lang-dotnet=\"`Am`\" pulumi-lang-go=\"`am`\" pulumi-lang-python=\"`am`\" pulumi-lang-yaml=\"`am`\" pulumi-lang-java=\"`am`\"\u003e`am`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ar`\" pulumi-lang-dotnet=\"`Ar`\" pulumi-lang-go=\"`ar`\" pulumi-lang-python=\"`ar`\" pulumi-lang-yaml=\"`ar`\" pulumi-lang-java=\"`ar`\"\u003e`ar`\u003c/span\u003e, `ar-EG`, `ar-SA`, \u003cspan pulumi-lang-nodejs=\"`az`\" pulumi-lang-dotnet=\"`Az`\" pulumi-lang-go=\"`az`\" pulumi-lang-python=\"`az`\" pulumi-lang-yaml=\"`az`\" pulumi-lang-java=\"`az`\"\u003e`az`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`bg`\" pulumi-lang-dotnet=\"`Bg`\" pulumi-lang-go=\"`bg`\" pulumi-lang-python=\"`bg`\" pulumi-lang-yaml=\"`bg`\" pulumi-lang-java=\"`bg`\"\u003e`bg`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`bn`\" pulumi-lang-dotnet=\"`Bn`\" pulumi-lang-go=\"`bn`\" pulumi-lang-python=\"`bn`\" pulumi-lang-yaml=\"`bn`\" pulumi-lang-java=\"`bn`\"\u003e`bn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`bs`\" pulumi-lang-dotnet=\"`Bs`\" pulumi-lang-go=\"`bs`\" pulumi-lang-python=\"`bs`\" pulumi-lang-yaml=\"`bs`\" pulumi-lang-java=\"`bs`\"\u003e`bs`\u003c/span\u003e, `ca-ES`, \u003cspan pulumi-lang-nodejs=\"`cnr`\" pulumi-lang-dotnet=\"`Cnr`\" pulumi-lang-go=\"`cnr`\" pulumi-lang-python=\"`cnr`\" pulumi-lang-yaml=\"`cnr`\" pulumi-lang-java=\"`cnr`\"\u003e`cnr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cs`\" pulumi-lang-dotnet=\"`Cs`\" pulumi-lang-go=\"`cs`\" pulumi-lang-python=\"`cs`\" pulumi-lang-yaml=\"`cs`\" pulumi-lang-java=\"`cs`\"\u003e`cs`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cy`\" pulumi-lang-dotnet=\"`Cy`\" pulumi-lang-go=\"`cy`\" pulumi-lang-python=\"`cy`\" pulumi-lang-yaml=\"`cy`\" pulumi-lang-java=\"`cy`\"\u003e`cy`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`da`\" pulumi-lang-dotnet=\"`Da`\" pulumi-lang-go=\"`da`\" pulumi-lang-python=\"`da`\" pulumi-lang-yaml=\"`da`\" pulumi-lang-java=\"`da`\"\u003e`da`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`de`\" pulumi-lang-dotnet=\"`De`\" pulumi-lang-go=\"`de`\" pulumi-lang-python=\"`de`\" pulumi-lang-yaml=\"`de`\" pulumi-lang-java=\"`de`\"\u003e`de`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`el`\" pulumi-lang-dotnet=\"`El`\" pulumi-lang-go=\"`el`\" pulumi-lang-python=\"`el`\" pulumi-lang-yaml=\"`el`\" pulumi-lang-java=\"`el`\"\u003e`el`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`en`\" pulumi-lang-dotnet=\"`En`\" pulumi-lang-go=\"`en`\" pulumi-lang-python=\"`en`\" pulumi-lang-yaml=\"`en`\" pulumi-lang-java=\"`en`\"\u003e`en`\u003c/span\u003e, `en-CA`, \u003cspan pulumi-lang-nodejs=\"`es`\" pulumi-lang-dotnet=\"`Es`\" pulumi-lang-go=\"`es`\" pulumi-lang-python=\"`es`\" pulumi-lang-yaml=\"`es`\" pulumi-lang-java=\"`es`\"\u003e`es`\u003c/span\u003e, `es-419`, `es-AR`, `es-MX`, \u003cspan pulumi-lang-nodejs=\"`et`\" pulumi-lang-dotnet=\"`Et`\" pulumi-lang-go=\"`et`\" pulumi-lang-python=\"`et`\" pulumi-lang-yaml=\"`et`\" pulumi-lang-java=\"`et`\"\u003e`et`\u003c/span\u003e, `eu-ES`, \u003cspan pulumi-lang-nodejs=\"`fa`\" pulumi-lang-dotnet=\"`Fa`\" pulumi-lang-go=\"`fa`\" pulumi-lang-python=\"`fa`\" pulumi-lang-yaml=\"`fa`\" pulumi-lang-java=\"`fa`\"\u003e`fa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fi`\" pulumi-lang-dotnet=\"`Fi`\" pulumi-lang-go=\"`fi`\" pulumi-lang-python=\"`fi`\" pulumi-lang-yaml=\"`fi`\" pulumi-lang-java=\"`fi`\"\u003e`fi`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fr`\" pulumi-lang-dotnet=\"`Fr`\" pulumi-lang-go=\"`fr`\" pulumi-lang-python=\"`fr`\" pulumi-lang-yaml=\"`fr`\" pulumi-lang-java=\"`fr`\"\u003e`fr`\u003c/span\u003e, `fr-CA`, `fr-FR`, `gl-ES`, \u003cspan pulumi-lang-nodejs=\"`gu`\" pulumi-lang-dotnet=\"`Gu`\" pulumi-lang-go=\"`gu`\" pulumi-lang-python=\"`gu`\" pulumi-lang-yaml=\"`gu`\" pulumi-lang-java=\"`gu`\"\u003e`gu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`he`\" pulumi-lang-dotnet=\"`He`\" pulumi-lang-go=\"`he`\" pulumi-lang-python=\"`he`\" pulumi-lang-yaml=\"`he`\" pulumi-lang-java=\"`he`\"\u003e`he`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hi`\" pulumi-lang-dotnet=\"`Hi`\" pulumi-lang-go=\"`hi`\" pulumi-lang-python=\"`hi`\" pulumi-lang-yaml=\"`hi`\" pulumi-lang-java=\"`hi`\"\u003e`hi`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hr`\" pulumi-lang-dotnet=\"`Hr`\" pulumi-lang-go=\"`hr`\" pulumi-lang-python=\"`hr`\" pulumi-lang-yaml=\"`hr`\" pulumi-lang-java=\"`hr`\"\u003e`hr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hu`\" pulumi-lang-dotnet=\"`Hu`\" pulumi-lang-go=\"`hu`\" pulumi-lang-python=\"`hu`\" pulumi-lang-yaml=\"`hu`\" pulumi-lang-java=\"`hu`\"\u003e`hu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hy`\" pulumi-lang-dotnet=\"`Hy`\" pulumi-lang-go=\"`hy`\" pulumi-lang-python=\"`hy`\" pulumi-lang-yaml=\"`hy`\" pulumi-lang-java=\"`hy`\"\u003e`hy`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`is`\" pulumi-lang-dotnet=\"`Is`\" pulumi-lang-go=\"`is`\" pulumi-lang-python=\"`is`\" pulumi-lang-yaml=\"`is`\" pulumi-lang-java=\"`is`\"\u003e`is`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`it`\" pulumi-lang-dotnet=\"`It`\" pulumi-lang-go=\"`it`\" pulumi-lang-python=\"`it`\" pulumi-lang-yaml=\"`it`\" pulumi-lang-java=\"`it`\"\u003e`it`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ja`\" pulumi-lang-dotnet=\"`Ja`\" pulumi-lang-go=\"`ja`\" pulumi-lang-python=\"`ja`\" pulumi-lang-yaml=\"`ja`\" pulumi-lang-java=\"`ja`\"\u003e`ja`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ka`\" pulumi-lang-dotnet=\"`Ka`\" pulumi-lang-go=\"`ka`\" pulumi-lang-python=\"`ka`\" pulumi-lang-yaml=\"`ka`\" pulumi-lang-java=\"`ka`\"\u003e`ka`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`kk`\" pulumi-lang-dotnet=\"`Kk`\" pulumi-lang-go=\"`kk`\" pulumi-lang-python=\"`kk`\" pulumi-lang-yaml=\"`kk`\" pulumi-lang-java=\"`kk`\"\u003e`kk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`kn`\" pulumi-lang-dotnet=\"`Kn`\" pulumi-lang-go=\"`kn`\" pulumi-lang-python=\"`kn`\" pulumi-lang-yaml=\"`kn`\" pulumi-lang-java=\"`kn`\"\u003e`kn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ko`\" pulumi-lang-dotnet=\"`Ko`\" pulumi-lang-go=\"`ko`\" pulumi-lang-python=\"`ko`\" pulumi-lang-yaml=\"`ko`\" pulumi-lang-java=\"`ko`\"\u003e`ko`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`lt`\" pulumi-lang-dotnet=\"`Lt`\" pulumi-lang-go=\"`lt`\" pulumi-lang-python=\"`lt`\" pulumi-lang-yaml=\"`lt`\" pulumi-lang-java=\"`lt`\"\u003e`lt`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`lv`\" pulumi-lang-dotnet=\"`Lv`\" pulumi-lang-go=\"`lv`\" pulumi-lang-python=\"`lv`\" pulumi-lang-yaml=\"`lv`\" pulumi-lang-java=\"`lv`\"\u003e`lv`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mk`\" pulumi-lang-dotnet=\"`Mk`\" pulumi-lang-go=\"`mk`\" pulumi-lang-python=\"`mk`\" pulumi-lang-yaml=\"`mk`\" pulumi-lang-java=\"`mk`\"\u003e`mk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ml`\" pulumi-lang-dotnet=\"`Ml`\" pulumi-lang-go=\"`ml`\" pulumi-lang-python=\"`ml`\" pulumi-lang-yaml=\"`ml`\" pulumi-lang-java=\"`ml`\"\u003e`ml`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mn`\" pulumi-lang-dotnet=\"`Mn`\" pulumi-lang-go=\"`mn`\" pulumi-lang-python=\"`mn`\" pulumi-lang-yaml=\"`mn`\" pulumi-lang-java=\"`mn`\"\u003e`mn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mr`\" pulumi-lang-dotnet=\"`Mr`\" pulumi-lang-go=\"`mr`\" pulumi-lang-python=\"`mr`\" pulumi-lang-yaml=\"`mr`\" pulumi-lang-java=\"`mr`\"\u003e`mr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ms`\" pulumi-lang-dotnet=\"`Ms`\" pulumi-lang-go=\"`ms`\" pulumi-lang-python=\"`ms`\" pulumi-lang-yaml=\"`ms`\" pulumi-lang-java=\"`ms`\"\u003e`ms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`my`\" pulumi-lang-dotnet=\"`My`\" pulumi-lang-go=\"`my`\" pulumi-lang-python=\"`my`\" pulumi-lang-yaml=\"`my`\" pulumi-lang-java=\"`my`\"\u003e`my`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nb`\" pulumi-lang-dotnet=\"`Nb`\" pulumi-lang-go=\"`nb`\" pulumi-lang-python=\"`nb`\" pulumi-lang-yaml=\"`nb`\" pulumi-lang-java=\"`nb`\"\u003e`nb`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nl`\" pulumi-lang-dotnet=\"`Nl`\" pulumi-lang-go=\"`nl`\" pulumi-lang-python=\"`nl`\" pulumi-lang-yaml=\"`nl`\" pulumi-lang-java=\"`nl`\"\u003e`nl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nn`\" pulumi-lang-dotnet=\"`Nn`\" pulumi-lang-go=\"`nn`\" pulumi-lang-python=\"`nn`\" pulumi-lang-yaml=\"`nn`\" pulumi-lang-java=\"`nn`\"\u003e`nn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`no`\" pulumi-lang-dotnet=\"`No`\" pulumi-lang-go=\"`no`\" pulumi-lang-python=\"`no`\" pulumi-lang-yaml=\"`no`\" pulumi-lang-java=\"`no`\"\u003e`no`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pa`\" pulumi-lang-dotnet=\"`Pa`\" pulumi-lang-go=\"`pa`\" pulumi-lang-python=\"`pa`\" pulumi-lang-yaml=\"`pa`\" pulumi-lang-java=\"`pa`\"\u003e`pa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pl`\" pulumi-lang-dotnet=\"`Pl`\" pulumi-lang-go=\"`pl`\" pulumi-lang-python=\"`pl`\" pulumi-lang-yaml=\"`pl`\" pulumi-lang-java=\"`pl`\"\u003e`pl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pt`\" pulumi-lang-dotnet=\"`Pt`\" pulumi-lang-go=\"`pt`\" pulumi-lang-python=\"`pt`\" pulumi-lang-yaml=\"`pt`\" pulumi-lang-java=\"`pt`\"\u003e`pt`\u003c/span\u003e, `pt-BR`, `pt-PT`, \u003cspan pulumi-lang-nodejs=\"`ro`\" pulumi-lang-dotnet=\"`Ro`\" pulumi-lang-go=\"`ro`\" pulumi-lang-python=\"`ro`\" pulumi-lang-yaml=\"`ro`\" pulumi-lang-java=\"`ro`\"\u003e`ro`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ru`\" pulumi-lang-dotnet=\"`Ru`\" pulumi-lang-go=\"`ru`\" pulumi-lang-python=\"`ru`\" pulumi-lang-yaml=\"`ru`\" pulumi-lang-java=\"`ru`\"\u003e`ru`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sk`\" pulumi-lang-dotnet=\"`Sk`\" pulumi-lang-go=\"`sk`\" pulumi-lang-python=\"`sk`\" pulumi-lang-yaml=\"`sk`\" pulumi-lang-java=\"`sk`\"\u003e`sk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sl`\" pulumi-lang-dotnet=\"`Sl`\" pulumi-lang-go=\"`sl`\" pulumi-lang-python=\"`sl`\" pulumi-lang-yaml=\"`sl`\" pulumi-lang-java=\"`sl`\"\u003e`sl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`so`\" pulumi-lang-dotnet=\"`So`\" pulumi-lang-go=\"`so`\" pulumi-lang-python=\"`so`\" pulumi-lang-yaml=\"`so`\" pulumi-lang-java=\"`so`\"\u003e`so`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sq`\" pulumi-lang-dotnet=\"`Sq`\" pulumi-lang-go=\"`sq`\" pulumi-lang-python=\"`sq`\" pulumi-lang-yaml=\"`sq`\" pulumi-lang-java=\"`sq`\"\u003e`sq`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sr`\" pulumi-lang-dotnet=\"`Sr`\" pulumi-lang-go=\"`sr`\" pulumi-lang-python=\"`sr`\" pulumi-lang-yaml=\"`sr`\" pulumi-lang-java=\"`sr`\"\u003e`sr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sv`\" pulumi-lang-dotnet=\"`Sv`\" pulumi-lang-go=\"`sv`\" pulumi-lang-python=\"`sv`\" pulumi-lang-yaml=\"`sv`\" pulumi-lang-java=\"`sv`\"\u003e`sv`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sw`\" pulumi-lang-dotnet=\"`Sw`\" pulumi-lang-go=\"`sw`\" pulumi-lang-python=\"`sw`\" pulumi-lang-yaml=\"`sw`\" pulumi-lang-java=\"`sw`\"\u003e`sw`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ta`\" pulumi-lang-dotnet=\"`Ta`\" pulumi-lang-go=\"`ta`\" pulumi-lang-python=\"`ta`\" pulumi-lang-yaml=\"`ta`\" pulumi-lang-java=\"`ta`\"\u003e`ta`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`te`\" pulumi-lang-dotnet=\"`Te`\" pulumi-lang-go=\"`te`\" pulumi-lang-python=\"`te`\" pulumi-lang-yaml=\"`te`\" pulumi-lang-java=\"`te`\"\u003e`te`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`th`\" pulumi-lang-dotnet=\"`Th`\" pulumi-lang-go=\"`th`\" pulumi-lang-python=\"`th`\" pulumi-lang-yaml=\"`th`\" pulumi-lang-java=\"`th`\"\u003e`th`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tl`\" pulumi-lang-dotnet=\"`Tl`\" pulumi-lang-go=\"`tl`\" pulumi-lang-python=\"`tl`\" pulumi-lang-yaml=\"`tl`\" pulumi-lang-java=\"`tl`\"\u003e`tl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tr`\" pulumi-lang-dotnet=\"`Tr`\" pulumi-lang-go=\"`tr`\" pulumi-lang-python=\"`tr`\" pulumi-lang-yaml=\"`tr`\" pulumi-lang-java=\"`tr`\"\u003e`tr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`uk`\" pulumi-lang-dotnet=\"`Uk`\" pulumi-lang-go=\"`uk`\" pulumi-lang-python=\"`uk`\" pulumi-lang-yaml=\"`uk`\" pulumi-lang-java=\"`uk`\"\u003e`uk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ur`\" pulumi-lang-dotnet=\"`Ur`\" pulumi-lang-go=\"`ur`\" pulumi-lang-python=\"`ur`\" pulumi-lang-yaml=\"`ur`\" pulumi-lang-java=\"`ur`\"\u003e`ur`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`vi`\" pulumi-lang-dotnet=\"`Vi`\" pulumi-lang-go=\"`vi`\" pulumi-lang-python=\"`vi`\" pulumi-lang-yaml=\"`vi`\" pulumi-lang-java=\"`vi`\"\u003e`vi`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zgh`\" pulumi-lang-dotnet=\"`Zgh`\" pulumi-lang-go=\"`zgh`\" pulumi-lang-python=\"`zgh`\" pulumi-lang-yaml=\"`zgh`\" pulumi-lang-java=\"`zgh`\"\u003e`zgh`\u003c/span\u003e, `zh-CN`, `zh-HK`, `zh-TW`.\n"
                },
                "prompt": {
                    "type": "string",
                    "description": "The term \u003cspan pulumi-lang-nodejs=\"`prompt`\" pulumi-lang-dotnet=\"`Prompt`\" pulumi-lang-go=\"`prompt`\" pulumi-lang-python=\"`prompt`\" pulumi-lang-yaml=\"`prompt`\" pulumi-lang-java=\"`prompt`\"\u003e`prompt`\u003c/span\u003e is used to refer to a specific step in the login flow. Options include: \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-id`, `login-password`, `login-passwordless`, `login-email-verification`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, `reset-password`, `custom-form`, \u003cspan pulumi-lang-nodejs=\"`consent`\" pulumi-lang-dotnet=\"`Consent`\" pulumi-lang-go=\"`consent`\" pulumi-lang-python=\"`consent`\" pulumi-lang-yaml=\"`consent`\" pulumi-lang-java=\"`consent`\"\u003e`consent`\u003c/span\u003e, `customized-consent`, \u003cspan pulumi-lang-nodejs=\"`logout`\" pulumi-lang-dotnet=\"`Logout`\" pulumi-lang-go=\"`logout`\" pulumi-lang-python=\"`logout`\" pulumi-lang-yaml=\"`logout`\" pulumi-lang-java=\"`logout`\"\u003e`logout`\u003c/span\u003e, `mfa-push`, `mfa-otp`, `mfa-voice`, `mfa-phone`, `mfa-webauthn`, `mfa-sms`, `mfa-email`, `mfa-recovery-code`, \u003cspan pulumi-lang-nodejs=\"`mfa`\" pulumi-lang-dotnet=\"`Mfa`\" pulumi-lang-go=\"`mfa`\" pulumi-lang-python=\"`mfa`\" pulumi-lang-yaml=\"`mfa`\" pulumi-lang-java=\"`mfa`\"\u003e`mfa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`status`\" pulumi-lang-dotnet=\"`Status`\" pulumi-lang-go=\"`status`\" pulumi-lang-python=\"`status`\" pulumi-lang-yaml=\"`status`\" pulumi-lang-java=\"`status`\"\u003e`status`\u003c/span\u003e, `device-flow`, `email-verification`, `email-otp-challenge`, \u003cspan pulumi-lang-nodejs=\"`organizations`\" pulumi-lang-dotnet=\"`Organizations`\" pulumi-lang-go=\"`organizations`\" pulumi-lang-python=\"`organizations`\" pulumi-lang-yaml=\"`organizations`\" pulumi-lang-java=\"`organizations`\"\u003e`organizations`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`invitation`\" pulumi-lang-dotnet=\"`Invitation`\" pulumi-lang-go=\"`invitation`\" pulumi-lang-python=\"`invitation`\" pulumi-lang-yaml=\"`invitation`\" pulumi-lang-java=\"`invitation`\"\u003e`invitation`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`common`\" pulumi-lang-dotnet=\"`Common`\" pulumi-lang-go=\"`common`\" pulumi-lang-python=\"`common`\" pulumi-lang-yaml=\"`common`\" pulumi-lang-java=\"`common`\"\u003e`common`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`passkeys`\" pulumi-lang-dotnet=\"`Passkeys`\" pulumi-lang-go=\"`passkeys`\" pulumi-lang-python=\"`passkeys`\" pulumi-lang-yaml=\"`passkeys`\" pulumi-lang-java=\"`passkeys`\"\u003e`passkeys`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`captcha`\" pulumi-lang-dotnet=\"`Captcha`\" pulumi-lang-go=\"`captcha`\" pulumi-lang-python=\"`captcha`\" pulumi-lang-yaml=\"`captcha`\" pulumi-lang-java=\"`captcha`\"\u003e`captcha`\u003c/span\u003e, `brute-force-protection`.\n"
                }
            },
            "required": [
                "body",
                "language",
                "prompt"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "description": "JSON containing the custom texts. You can check the options for each prompt [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts#prompt-values).\n"
                },
                "language": {
                    "type": "string",
                    "description": "Language of the custom text. Options include: \u003cspan pulumi-lang-nodejs=\"`am`\" pulumi-lang-dotnet=\"`Am`\" pulumi-lang-go=\"`am`\" pulumi-lang-python=\"`am`\" pulumi-lang-yaml=\"`am`\" pulumi-lang-java=\"`am`\"\u003e`am`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ar`\" pulumi-lang-dotnet=\"`Ar`\" pulumi-lang-go=\"`ar`\" pulumi-lang-python=\"`ar`\" pulumi-lang-yaml=\"`ar`\" pulumi-lang-java=\"`ar`\"\u003e`ar`\u003c/span\u003e, `ar-EG`, `ar-SA`, \u003cspan pulumi-lang-nodejs=\"`az`\" pulumi-lang-dotnet=\"`Az`\" pulumi-lang-go=\"`az`\" pulumi-lang-python=\"`az`\" pulumi-lang-yaml=\"`az`\" pulumi-lang-java=\"`az`\"\u003e`az`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`bg`\" pulumi-lang-dotnet=\"`Bg`\" pulumi-lang-go=\"`bg`\" pulumi-lang-python=\"`bg`\" pulumi-lang-yaml=\"`bg`\" pulumi-lang-java=\"`bg`\"\u003e`bg`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`bn`\" pulumi-lang-dotnet=\"`Bn`\" pulumi-lang-go=\"`bn`\" pulumi-lang-python=\"`bn`\" pulumi-lang-yaml=\"`bn`\" pulumi-lang-java=\"`bn`\"\u003e`bn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`bs`\" pulumi-lang-dotnet=\"`Bs`\" pulumi-lang-go=\"`bs`\" pulumi-lang-python=\"`bs`\" pulumi-lang-yaml=\"`bs`\" pulumi-lang-java=\"`bs`\"\u003e`bs`\u003c/span\u003e, `ca-ES`, \u003cspan pulumi-lang-nodejs=\"`cnr`\" pulumi-lang-dotnet=\"`Cnr`\" pulumi-lang-go=\"`cnr`\" pulumi-lang-python=\"`cnr`\" pulumi-lang-yaml=\"`cnr`\" pulumi-lang-java=\"`cnr`\"\u003e`cnr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cs`\" pulumi-lang-dotnet=\"`Cs`\" pulumi-lang-go=\"`cs`\" pulumi-lang-python=\"`cs`\" pulumi-lang-yaml=\"`cs`\" pulumi-lang-java=\"`cs`\"\u003e`cs`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cy`\" pulumi-lang-dotnet=\"`Cy`\" pulumi-lang-go=\"`cy`\" pulumi-lang-python=\"`cy`\" pulumi-lang-yaml=\"`cy`\" pulumi-lang-java=\"`cy`\"\u003e`cy`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`da`\" pulumi-lang-dotnet=\"`Da`\" pulumi-lang-go=\"`da`\" pulumi-lang-python=\"`da`\" pulumi-lang-yaml=\"`da`\" pulumi-lang-java=\"`da`\"\u003e`da`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`de`\" pulumi-lang-dotnet=\"`De`\" pulumi-lang-go=\"`de`\" pulumi-lang-python=\"`de`\" pulumi-lang-yaml=\"`de`\" pulumi-lang-java=\"`de`\"\u003e`de`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`el`\" pulumi-lang-dotnet=\"`El`\" pulumi-lang-go=\"`el`\" pulumi-lang-python=\"`el`\" pulumi-lang-yaml=\"`el`\" pulumi-lang-java=\"`el`\"\u003e`el`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`en`\" pulumi-lang-dotnet=\"`En`\" pulumi-lang-go=\"`en`\" pulumi-lang-python=\"`en`\" pulumi-lang-yaml=\"`en`\" pulumi-lang-java=\"`en`\"\u003e`en`\u003c/span\u003e, `en-CA`, \u003cspan pulumi-lang-nodejs=\"`es`\" pulumi-lang-dotnet=\"`Es`\" pulumi-lang-go=\"`es`\" pulumi-lang-python=\"`es`\" pulumi-lang-yaml=\"`es`\" pulumi-lang-java=\"`es`\"\u003e`es`\u003c/span\u003e, `es-419`, `es-AR`, `es-MX`, \u003cspan pulumi-lang-nodejs=\"`et`\" pulumi-lang-dotnet=\"`Et`\" pulumi-lang-go=\"`et`\" pulumi-lang-python=\"`et`\" pulumi-lang-yaml=\"`et`\" pulumi-lang-java=\"`et`\"\u003e`et`\u003c/span\u003e, `eu-ES`, \u003cspan pulumi-lang-nodejs=\"`fa`\" pulumi-lang-dotnet=\"`Fa`\" pulumi-lang-go=\"`fa`\" pulumi-lang-python=\"`fa`\" pulumi-lang-yaml=\"`fa`\" pulumi-lang-java=\"`fa`\"\u003e`fa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fi`\" pulumi-lang-dotnet=\"`Fi`\" pulumi-lang-go=\"`fi`\" pulumi-lang-python=\"`fi`\" pulumi-lang-yaml=\"`fi`\" pulumi-lang-java=\"`fi`\"\u003e`fi`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fr`\" pulumi-lang-dotnet=\"`Fr`\" pulumi-lang-go=\"`fr`\" pulumi-lang-python=\"`fr`\" pulumi-lang-yaml=\"`fr`\" pulumi-lang-java=\"`fr`\"\u003e`fr`\u003c/span\u003e, `fr-CA`, `fr-FR`, `gl-ES`, \u003cspan pulumi-lang-nodejs=\"`gu`\" pulumi-lang-dotnet=\"`Gu`\" pulumi-lang-go=\"`gu`\" pulumi-lang-python=\"`gu`\" pulumi-lang-yaml=\"`gu`\" pulumi-lang-java=\"`gu`\"\u003e`gu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`he`\" pulumi-lang-dotnet=\"`He`\" pulumi-lang-go=\"`he`\" pulumi-lang-python=\"`he`\" pulumi-lang-yaml=\"`he`\" pulumi-lang-java=\"`he`\"\u003e`he`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hi`\" pulumi-lang-dotnet=\"`Hi`\" pulumi-lang-go=\"`hi`\" pulumi-lang-python=\"`hi`\" pulumi-lang-yaml=\"`hi`\" pulumi-lang-java=\"`hi`\"\u003e`hi`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hr`\" pulumi-lang-dotnet=\"`Hr`\" pulumi-lang-go=\"`hr`\" pulumi-lang-python=\"`hr`\" pulumi-lang-yaml=\"`hr`\" pulumi-lang-java=\"`hr`\"\u003e`hr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hu`\" pulumi-lang-dotnet=\"`Hu`\" pulumi-lang-go=\"`hu`\" pulumi-lang-python=\"`hu`\" pulumi-lang-yaml=\"`hu`\" pulumi-lang-java=\"`hu`\"\u003e`hu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hy`\" pulumi-lang-dotnet=\"`Hy`\" pulumi-lang-go=\"`hy`\" pulumi-lang-python=\"`hy`\" pulumi-lang-yaml=\"`hy`\" pulumi-lang-java=\"`hy`\"\u003e`hy`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`is`\" pulumi-lang-dotnet=\"`Is`\" pulumi-lang-go=\"`is`\" pulumi-lang-python=\"`is`\" pulumi-lang-yaml=\"`is`\" pulumi-lang-java=\"`is`\"\u003e`is`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`it`\" pulumi-lang-dotnet=\"`It`\" pulumi-lang-go=\"`it`\" pulumi-lang-python=\"`it`\" pulumi-lang-yaml=\"`it`\" pulumi-lang-java=\"`it`\"\u003e`it`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ja`\" pulumi-lang-dotnet=\"`Ja`\" pulumi-lang-go=\"`ja`\" pulumi-lang-python=\"`ja`\" pulumi-lang-yaml=\"`ja`\" pulumi-lang-java=\"`ja`\"\u003e`ja`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ka`\" pulumi-lang-dotnet=\"`Ka`\" pulumi-lang-go=\"`ka`\" pulumi-lang-python=\"`ka`\" pulumi-lang-yaml=\"`ka`\" pulumi-lang-java=\"`ka`\"\u003e`ka`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`kk`\" pulumi-lang-dotnet=\"`Kk`\" pulumi-lang-go=\"`kk`\" pulumi-lang-python=\"`kk`\" pulumi-lang-yaml=\"`kk`\" pulumi-lang-java=\"`kk`\"\u003e`kk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`kn`\" pulumi-lang-dotnet=\"`Kn`\" pulumi-lang-go=\"`kn`\" pulumi-lang-python=\"`kn`\" pulumi-lang-yaml=\"`kn`\" pulumi-lang-java=\"`kn`\"\u003e`kn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ko`\" pulumi-lang-dotnet=\"`Ko`\" pulumi-lang-go=\"`ko`\" pulumi-lang-python=\"`ko`\" pulumi-lang-yaml=\"`ko`\" pulumi-lang-java=\"`ko`\"\u003e`ko`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`lt`\" pulumi-lang-dotnet=\"`Lt`\" pulumi-lang-go=\"`lt`\" pulumi-lang-python=\"`lt`\" pulumi-lang-yaml=\"`lt`\" pulumi-lang-java=\"`lt`\"\u003e`lt`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`lv`\" pulumi-lang-dotnet=\"`Lv`\" pulumi-lang-go=\"`lv`\" pulumi-lang-python=\"`lv`\" pulumi-lang-yaml=\"`lv`\" pulumi-lang-java=\"`lv`\"\u003e`lv`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mk`\" pulumi-lang-dotnet=\"`Mk`\" pulumi-lang-go=\"`mk`\" pulumi-lang-python=\"`mk`\" pulumi-lang-yaml=\"`mk`\" pulumi-lang-java=\"`mk`\"\u003e`mk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ml`\" pulumi-lang-dotnet=\"`Ml`\" pulumi-lang-go=\"`ml`\" pulumi-lang-python=\"`ml`\" pulumi-lang-yaml=\"`ml`\" pulumi-lang-java=\"`ml`\"\u003e`ml`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mn`\" pulumi-lang-dotnet=\"`Mn`\" pulumi-lang-go=\"`mn`\" pulumi-lang-python=\"`mn`\" pulumi-lang-yaml=\"`mn`\" pulumi-lang-java=\"`mn`\"\u003e`mn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mr`\" pulumi-lang-dotnet=\"`Mr`\" pulumi-lang-go=\"`mr`\" pulumi-lang-python=\"`mr`\" pulumi-lang-yaml=\"`mr`\" pulumi-lang-java=\"`mr`\"\u003e`mr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ms`\" pulumi-lang-dotnet=\"`Ms`\" pulumi-lang-go=\"`ms`\" pulumi-lang-python=\"`ms`\" pulumi-lang-yaml=\"`ms`\" pulumi-lang-java=\"`ms`\"\u003e`ms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`my`\" pulumi-lang-dotnet=\"`My`\" pulumi-lang-go=\"`my`\" pulumi-lang-python=\"`my`\" pulumi-lang-yaml=\"`my`\" pulumi-lang-java=\"`my`\"\u003e`my`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nb`\" pulumi-lang-dotnet=\"`Nb`\" pulumi-lang-go=\"`nb`\" pulumi-lang-python=\"`nb`\" pulumi-lang-yaml=\"`nb`\" pulumi-lang-java=\"`nb`\"\u003e`nb`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nl`\" pulumi-lang-dotnet=\"`Nl`\" pulumi-lang-go=\"`nl`\" pulumi-lang-python=\"`nl`\" pulumi-lang-yaml=\"`nl`\" pulumi-lang-java=\"`nl`\"\u003e`nl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nn`\" pulumi-lang-dotnet=\"`Nn`\" pulumi-lang-go=\"`nn`\" pulumi-lang-python=\"`nn`\" pulumi-lang-yaml=\"`nn`\" pulumi-lang-java=\"`nn`\"\u003e`nn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`no`\" pulumi-lang-dotnet=\"`No`\" pulumi-lang-go=\"`no`\" pulumi-lang-python=\"`no`\" pulumi-lang-yaml=\"`no`\" pulumi-lang-java=\"`no`\"\u003e`no`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pa`\" pulumi-lang-dotnet=\"`Pa`\" pulumi-lang-go=\"`pa`\" pulumi-lang-python=\"`pa`\" pulumi-lang-yaml=\"`pa`\" pulumi-lang-java=\"`pa`\"\u003e`pa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pl`\" pulumi-lang-dotnet=\"`Pl`\" pulumi-lang-go=\"`pl`\" pulumi-lang-python=\"`pl`\" pulumi-lang-yaml=\"`pl`\" pulumi-lang-java=\"`pl`\"\u003e`pl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pt`\" pulumi-lang-dotnet=\"`Pt`\" pulumi-lang-go=\"`pt`\" pulumi-lang-python=\"`pt`\" pulumi-lang-yaml=\"`pt`\" pulumi-lang-java=\"`pt`\"\u003e`pt`\u003c/span\u003e, `pt-BR`, `pt-PT`, \u003cspan pulumi-lang-nodejs=\"`ro`\" pulumi-lang-dotnet=\"`Ro`\" pulumi-lang-go=\"`ro`\" pulumi-lang-python=\"`ro`\" pulumi-lang-yaml=\"`ro`\" pulumi-lang-java=\"`ro`\"\u003e`ro`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ru`\" pulumi-lang-dotnet=\"`Ru`\" pulumi-lang-go=\"`ru`\" pulumi-lang-python=\"`ru`\" pulumi-lang-yaml=\"`ru`\" pulumi-lang-java=\"`ru`\"\u003e`ru`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sk`\" pulumi-lang-dotnet=\"`Sk`\" pulumi-lang-go=\"`sk`\" pulumi-lang-python=\"`sk`\" pulumi-lang-yaml=\"`sk`\" pulumi-lang-java=\"`sk`\"\u003e`sk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sl`\" pulumi-lang-dotnet=\"`Sl`\" pulumi-lang-go=\"`sl`\" pulumi-lang-python=\"`sl`\" pulumi-lang-yaml=\"`sl`\" pulumi-lang-java=\"`sl`\"\u003e`sl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`so`\" pulumi-lang-dotnet=\"`So`\" pulumi-lang-go=\"`so`\" pulumi-lang-python=\"`so`\" pulumi-lang-yaml=\"`so`\" pulumi-lang-java=\"`so`\"\u003e`so`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sq`\" pulumi-lang-dotnet=\"`Sq`\" pulumi-lang-go=\"`sq`\" pulumi-lang-python=\"`sq`\" pulumi-lang-yaml=\"`sq`\" pulumi-lang-java=\"`sq`\"\u003e`sq`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sr`\" pulumi-lang-dotnet=\"`Sr`\" pulumi-lang-go=\"`sr`\" pulumi-lang-python=\"`sr`\" pulumi-lang-yaml=\"`sr`\" pulumi-lang-java=\"`sr`\"\u003e`sr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sv`\" pulumi-lang-dotnet=\"`Sv`\" pulumi-lang-go=\"`sv`\" pulumi-lang-python=\"`sv`\" pulumi-lang-yaml=\"`sv`\" pulumi-lang-java=\"`sv`\"\u003e`sv`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sw`\" pulumi-lang-dotnet=\"`Sw`\" pulumi-lang-go=\"`sw`\" pulumi-lang-python=\"`sw`\" pulumi-lang-yaml=\"`sw`\" pulumi-lang-java=\"`sw`\"\u003e`sw`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ta`\" pulumi-lang-dotnet=\"`Ta`\" pulumi-lang-go=\"`ta`\" pulumi-lang-python=\"`ta`\" pulumi-lang-yaml=\"`ta`\" pulumi-lang-java=\"`ta`\"\u003e`ta`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`te`\" pulumi-lang-dotnet=\"`Te`\" pulumi-lang-go=\"`te`\" pulumi-lang-python=\"`te`\" pulumi-lang-yaml=\"`te`\" pulumi-lang-java=\"`te`\"\u003e`te`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`th`\" pulumi-lang-dotnet=\"`Th`\" pulumi-lang-go=\"`th`\" pulumi-lang-python=\"`th`\" pulumi-lang-yaml=\"`th`\" pulumi-lang-java=\"`th`\"\u003e`th`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tl`\" pulumi-lang-dotnet=\"`Tl`\" pulumi-lang-go=\"`tl`\" pulumi-lang-python=\"`tl`\" pulumi-lang-yaml=\"`tl`\" pulumi-lang-java=\"`tl`\"\u003e`tl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tr`\" pulumi-lang-dotnet=\"`Tr`\" pulumi-lang-go=\"`tr`\" pulumi-lang-python=\"`tr`\" pulumi-lang-yaml=\"`tr`\" pulumi-lang-java=\"`tr`\"\u003e`tr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`uk`\" pulumi-lang-dotnet=\"`Uk`\" pulumi-lang-go=\"`uk`\" pulumi-lang-python=\"`uk`\" pulumi-lang-yaml=\"`uk`\" pulumi-lang-java=\"`uk`\"\u003e`uk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ur`\" pulumi-lang-dotnet=\"`Ur`\" pulumi-lang-go=\"`ur`\" pulumi-lang-python=\"`ur`\" pulumi-lang-yaml=\"`ur`\" pulumi-lang-java=\"`ur`\"\u003e`ur`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`vi`\" pulumi-lang-dotnet=\"`Vi`\" pulumi-lang-go=\"`vi`\" pulumi-lang-python=\"`vi`\" pulumi-lang-yaml=\"`vi`\" pulumi-lang-java=\"`vi`\"\u003e`vi`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zgh`\" pulumi-lang-dotnet=\"`Zgh`\" pulumi-lang-go=\"`zgh`\" pulumi-lang-python=\"`zgh`\" pulumi-lang-yaml=\"`zgh`\" pulumi-lang-java=\"`zgh`\"\u003e`zgh`\u003c/span\u003e, `zh-CN`, `zh-HK`, `zh-TW`.\n"
                },
                "prompt": {
                    "type": "string",
                    "description": "The term \u003cspan pulumi-lang-nodejs=\"`prompt`\" pulumi-lang-dotnet=\"`Prompt`\" pulumi-lang-go=\"`prompt`\" pulumi-lang-python=\"`prompt`\" pulumi-lang-yaml=\"`prompt`\" pulumi-lang-java=\"`prompt`\"\u003e`prompt`\u003c/span\u003e is used to refer to a specific step in the login flow. Options include: \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-id`, `login-password`, `login-passwordless`, `login-email-verification`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, `reset-password`, `custom-form`, \u003cspan pulumi-lang-nodejs=\"`consent`\" pulumi-lang-dotnet=\"`Consent`\" pulumi-lang-go=\"`consent`\" pulumi-lang-python=\"`consent`\" pulumi-lang-yaml=\"`consent`\" pulumi-lang-java=\"`consent`\"\u003e`consent`\u003c/span\u003e, `customized-consent`, \u003cspan pulumi-lang-nodejs=\"`logout`\" pulumi-lang-dotnet=\"`Logout`\" pulumi-lang-go=\"`logout`\" pulumi-lang-python=\"`logout`\" pulumi-lang-yaml=\"`logout`\" pulumi-lang-java=\"`logout`\"\u003e`logout`\u003c/span\u003e, `mfa-push`, `mfa-otp`, `mfa-voice`, `mfa-phone`, `mfa-webauthn`, `mfa-sms`, `mfa-email`, `mfa-recovery-code`, \u003cspan pulumi-lang-nodejs=\"`mfa`\" pulumi-lang-dotnet=\"`Mfa`\" pulumi-lang-go=\"`mfa`\" pulumi-lang-python=\"`mfa`\" pulumi-lang-yaml=\"`mfa`\" pulumi-lang-java=\"`mfa`\"\u003e`mfa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`status`\" pulumi-lang-dotnet=\"`Status`\" pulumi-lang-go=\"`status`\" pulumi-lang-python=\"`status`\" pulumi-lang-yaml=\"`status`\" pulumi-lang-java=\"`status`\"\u003e`status`\u003c/span\u003e, `device-flow`, `email-verification`, `email-otp-challenge`, \u003cspan pulumi-lang-nodejs=\"`organizations`\" pulumi-lang-dotnet=\"`Organizations`\" pulumi-lang-go=\"`organizations`\" pulumi-lang-python=\"`organizations`\" pulumi-lang-yaml=\"`organizations`\" pulumi-lang-java=\"`organizations`\"\u003e`organizations`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`invitation`\" pulumi-lang-dotnet=\"`Invitation`\" pulumi-lang-go=\"`invitation`\" pulumi-lang-python=\"`invitation`\" pulumi-lang-yaml=\"`invitation`\" pulumi-lang-java=\"`invitation`\"\u003e`invitation`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`common`\" pulumi-lang-dotnet=\"`Common`\" pulumi-lang-go=\"`common`\" pulumi-lang-python=\"`common`\" pulumi-lang-yaml=\"`common`\" pulumi-lang-java=\"`common`\"\u003e`common`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`passkeys`\" pulumi-lang-dotnet=\"`Passkeys`\" pulumi-lang-go=\"`passkeys`\" pulumi-lang-python=\"`passkeys`\" pulumi-lang-yaml=\"`passkeys`\" pulumi-lang-java=\"`passkeys`\"\u003e`passkeys`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`captcha`\" pulumi-lang-dotnet=\"`Captcha`\" pulumi-lang-go=\"`captcha`\" pulumi-lang-python=\"`captcha`\" pulumi-lang-yaml=\"`captcha`\" pulumi-lang-java=\"`captcha`\"\u003e`captcha`\u003c/span\u003e, `brute-force-protection`.\n"
                }
            },
            "requiredInputs": [
                "body",
                "language",
                "prompt"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PromptCustomText resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "JSON containing the custom texts. You can check the options for each prompt [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts#prompt-values).\n"
                    },
                    "language": {
                        "type": "string",
                        "description": "Language of the custom text. Options include: \u003cspan pulumi-lang-nodejs=\"`am`\" pulumi-lang-dotnet=\"`Am`\" pulumi-lang-go=\"`am`\" pulumi-lang-python=\"`am`\" pulumi-lang-yaml=\"`am`\" pulumi-lang-java=\"`am`\"\u003e`am`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ar`\" pulumi-lang-dotnet=\"`Ar`\" pulumi-lang-go=\"`ar`\" pulumi-lang-python=\"`ar`\" pulumi-lang-yaml=\"`ar`\" pulumi-lang-java=\"`ar`\"\u003e`ar`\u003c/span\u003e, `ar-EG`, `ar-SA`, \u003cspan pulumi-lang-nodejs=\"`az`\" pulumi-lang-dotnet=\"`Az`\" pulumi-lang-go=\"`az`\" pulumi-lang-python=\"`az`\" pulumi-lang-yaml=\"`az`\" pulumi-lang-java=\"`az`\"\u003e`az`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`bg`\" pulumi-lang-dotnet=\"`Bg`\" pulumi-lang-go=\"`bg`\" pulumi-lang-python=\"`bg`\" pulumi-lang-yaml=\"`bg`\" pulumi-lang-java=\"`bg`\"\u003e`bg`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`bn`\" pulumi-lang-dotnet=\"`Bn`\" pulumi-lang-go=\"`bn`\" pulumi-lang-python=\"`bn`\" pulumi-lang-yaml=\"`bn`\" pulumi-lang-java=\"`bn`\"\u003e`bn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`bs`\" pulumi-lang-dotnet=\"`Bs`\" pulumi-lang-go=\"`bs`\" pulumi-lang-python=\"`bs`\" pulumi-lang-yaml=\"`bs`\" pulumi-lang-java=\"`bs`\"\u003e`bs`\u003c/span\u003e, `ca-ES`, \u003cspan pulumi-lang-nodejs=\"`cnr`\" pulumi-lang-dotnet=\"`Cnr`\" pulumi-lang-go=\"`cnr`\" pulumi-lang-python=\"`cnr`\" pulumi-lang-yaml=\"`cnr`\" pulumi-lang-java=\"`cnr`\"\u003e`cnr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cs`\" pulumi-lang-dotnet=\"`Cs`\" pulumi-lang-go=\"`cs`\" pulumi-lang-python=\"`cs`\" pulumi-lang-yaml=\"`cs`\" pulumi-lang-java=\"`cs`\"\u003e`cs`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cy`\" pulumi-lang-dotnet=\"`Cy`\" pulumi-lang-go=\"`cy`\" pulumi-lang-python=\"`cy`\" pulumi-lang-yaml=\"`cy`\" pulumi-lang-java=\"`cy`\"\u003e`cy`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`da`\" pulumi-lang-dotnet=\"`Da`\" pulumi-lang-go=\"`da`\" pulumi-lang-python=\"`da`\" pulumi-lang-yaml=\"`da`\" pulumi-lang-java=\"`da`\"\u003e`da`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`de`\" pulumi-lang-dotnet=\"`De`\" pulumi-lang-go=\"`de`\" pulumi-lang-python=\"`de`\" pulumi-lang-yaml=\"`de`\" pulumi-lang-java=\"`de`\"\u003e`de`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`el`\" pulumi-lang-dotnet=\"`El`\" pulumi-lang-go=\"`el`\" pulumi-lang-python=\"`el`\" pulumi-lang-yaml=\"`el`\" pulumi-lang-java=\"`el`\"\u003e`el`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`en`\" pulumi-lang-dotnet=\"`En`\" pulumi-lang-go=\"`en`\" pulumi-lang-python=\"`en`\" pulumi-lang-yaml=\"`en`\" pulumi-lang-java=\"`en`\"\u003e`en`\u003c/span\u003e, `en-CA`, \u003cspan pulumi-lang-nodejs=\"`es`\" pulumi-lang-dotnet=\"`Es`\" pulumi-lang-go=\"`es`\" pulumi-lang-python=\"`es`\" pulumi-lang-yaml=\"`es`\" pulumi-lang-java=\"`es`\"\u003e`es`\u003c/span\u003e, `es-419`, `es-AR`, `es-MX`, \u003cspan pulumi-lang-nodejs=\"`et`\" pulumi-lang-dotnet=\"`Et`\" pulumi-lang-go=\"`et`\" pulumi-lang-python=\"`et`\" pulumi-lang-yaml=\"`et`\" pulumi-lang-java=\"`et`\"\u003e`et`\u003c/span\u003e, `eu-ES`, \u003cspan pulumi-lang-nodejs=\"`fa`\" pulumi-lang-dotnet=\"`Fa`\" pulumi-lang-go=\"`fa`\" pulumi-lang-python=\"`fa`\" pulumi-lang-yaml=\"`fa`\" pulumi-lang-java=\"`fa`\"\u003e`fa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fi`\" pulumi-lang-dotnet=\"`Fi`\" pulumi-lang-go=\"`fi`\" pulumi-lang-python=\"`fi`\" pulumi-lang-yaml=\"`fi`\" pulumi-lang-java=\"`fi`\"\u003e`fi`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fr`\" pulumi-lang-dotnet=\"`Fr`\" pulumi-lang-go=\"`fr`\" pulumi-lang-python=\"`fr`\" pulumi-lang-yaml=\"`fr`\" pulumi-lang-java=\"`fr`\"\u003e`fr`\u003c/span\u003e, `fr-CA`, `fr-FR`, `gl-ES`, \u003cspan pulumi-lang-nodejs=\"`gu`\" pulumi-lang-dotnet=\"`Gu`\" pulumi-lang-go=\"`gu`\" pulumi-lang-python=\"`gu`\" pulumi-lang-yaml=\"`gu`\" pulumi-lang-java=\"`gu`\"\u003e`gu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`he`\" pulumi-lang-dotnet=\"`He`\" pulumi-lang-go=\"`he`\" pulumi-lang-python=\"`he`\" pulumi-lang-yaml=\"`he`\" pulumi-lang-java=\"`he`\"\u003e`he`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hi`\" pulumi-lang-dotnet=\"`Hi`\" pulumi-lang-go=\"`hi`\" pulumi-lang-python=\"`hi`\" pulumi-lang-yaml=\"`hi`\" pulumi-lang-java=\"`hi`\"\u003e`hi`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hr`\" pulumi-lang-dotnet=\"`Hr`\" pulumi-lang-go=\"`hr`\" pulumi-lang-python=\"`hr`\" pulumi-lang-yaml=\"`hr`\" pulumi-lang-java=\"`hr`\"\u003e`hr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hu`\" pulumi-lang-dotnet=\"`Hu`\" pulumi-lang-go=\"`hu`\" pulumi-lang-python=\"`hu`\" pulumi-lang-yaml=\"`hu`\" pulumi-lang-java=\"`hu`\"\u003e`hu`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`hy`\" pulumi-lang-dotnet=\"`Hy`\" pulumi-lang-go=\"`hy`\" pulumi-lang-python=\"`hy`\" pulumi-lang-yaml=\"`hy`\" pulumi-lang-java=\"`hy`\"\u003e`hy`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`is`\" pulumi-lang-dotnet=\"`Is`\" pulumi-lang-go=\"`is`\" pulumi-lang-python=\"`is`\" pulumi-lang-yaml=\"`is`\" pulumi-lang-java=\"`is`\"\u003e`is`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`it`\" pulumi-lang-dotnet=\"`It`\" pulumi-lang-go=\"`it`\" pulumi-lang-python=\"`it`\" pulumi-lang-yaml=\"`it`\" pulumi-lang-java=\"`it`\"\u003e`it`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ja`\" pulumi-lang-dotnet=\"`Ja`\" pulumi-lang-go=\"`ja`\" pulumi-lang-python=\"`ja`\" pulumi-lang-yaml=\"`ja`\" pulumi-lang-java=\"`ja`\"\u003e`ja`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ka`\" pulumi-lang-dotnet=\"`Ka`\" pulumi-lang-go=\"`ka`\" pulumi-lang-python=\"`ka`\" pulumi-lang-yaml=\"`ka`\" pulumi-lang-java=\"`ka`\"\u003e`ka`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`kk`\" pulumi-lang-dotnet=\"`Kk`\" pulumi-lang-go=\"`kk`\" pulumi-lang-python=\"`kk`\" pulumi-lang-yaml=\"`kk`\" pulumi-lang-java=\"`kk`\"\u003e`kk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`kn`\" pulumi-lang-dotnet=\"`Kn`\" pulumi-lang-go=\"`kn`\" pulumi-lang-python=\"`kn`\" pulumi-lang-yaml=\"`kn`\" pulumi-lang-java=\"`kn`\"\u003e`kn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ko`\" pulumi-lang-dotnet=\"`Ko`\" pulumi-lang-go=\"`ko`\" pulumi-lang-python=\"`ko`\" pulumi-lang-yaml=\"`ko`\" pulumi-lang-java=\"`ko`\"\u003e`ko`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`lt`\" pulumi-lang-dotnet=\"`Lt`\" pulumi-lang-go=\"`lt`\" pulumi-lang-python=\"`lt`\" pulumi-lang-yaml=\"`lt`\" pulumi-lang-java=\"`lt`\"\u003e`lt`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`lv`\" pulumi-lang-dotnet=\"`Lv`\" pulumi-lang-go=\"`lv`\" pulumi-lang-python=\"`lv`\" pulumi-lang-yaml=\"`lv`\" pulumi-lang-java=\"`lv`\"\u003e`lv`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mk`\" pulumi-lang-dotnet=\"`Mk`\" pulumi-lang-go=\"`mk`\" pulumi-lang-python=\"`mk`\" pulumi-lang-yaml=\"`mk`\" pulumi-lang-java=\"`mk`\"\u003e`mk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ml`\" pulumi-lang-dotnet=\"`Ml`\" pulumi-lang-go=\"`ml`\" pulumi-lang-python=\"`ml`\" pulumi-lang-yaml=\"`ml`\" pulumi-lang-java=\"`ml`\"\u003e`ml`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mn`\" pulumi-lang-dotnet=\"`Mn`\" pulumi-lang-go=\"`mn`\" pulumi-lang-python=\"`mn`\" pulumi-lang-yaml=\"`mn`\" pulumi-lang-java=\"`mn`\"\u003e`mn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mr`\" pulumi-lang-dotnet=\"`Mr`\" pulumi-lang-go=\"`mr`\" pulumi-lang-python=\"`mr`\" pulumi-lang-yaml=\"`mr`\" pulumi-lang-java=\"`mr`\"\u003e`mr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ms`\" pulumi-lang-dotnet=\"`Ms`\" pulumi-lang-go=\"`ms`\" pulumi-lang-python=\"`ms`\" pulumi-lang-yaml=\"`ms`\" pulumi-lang-java=\"`ms`\"\u003e`ms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`my`\" pulumi-lang-dotnet=\"`My`\" pulumi-lang-go=\"`my`\" pulumi-lang-python=\"`my`\" pulumi-lang-yaml=\"`my`\" pulumi-lang-java=\"`my`\"\u003e`my`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nb`\" pulumi-lang-dotnet=\"`Nb`\" pulumi-lang-go=\"`nb`\" pulumi-lang-python=\"`nb`\" pulumi-lang-yaml=\"`nb`\" pulumi-lang-java=\"`nb`\"\u003e`nb`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nl`\" pulumi-lang-dotnet=\"`Nl`\" pulumi-lang-go=\"`nl`\" pulumi-lang-python=\"`nl`\" pulumi-lang-yaml=\"`nl`\" pulumi-lang-java=\"`nl`\"\u003e`nl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nn`\" pulumi-lang-dotnet=\"`Nn`\" pulumi-lang-go=\"`nn`\" pulumi-lang-python=\"`nn`\" pulumi-lang-yaml=\"`nn`\" pulumi-lang-java=\"`nn`\"\u003e`nn`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`no`\" pulumi-lang-dotnet=\"`No`\" pulumi-lang-go=\"`no`\" pulumi-lang-python=\"`no`\" pulumi-lang-yaml=\"`no`\" pulumi-lang-java=\"`no`\"\u003e`no`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pa`\" pulumi-lang-dotnet=\"`Pa`\" pulumi-lang-go=\"`pa`\" pulumi-lang-python=\"`pa`\" pulumi-lang-yaml=\"`pa`\" pulumi-lang-java=\"`pa`\"\u003e`pa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pl`\" pulumi-lang-dotnet=\"`Pl`\" pulumi-lang-go=\"`pl`\" pulumi-lang-python=\"`pl`\" pulumi-lang-yaml=\"`pl`\" pulumi-lang-java=\"`pl`\"\u003e`pl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pt`\" pulumi-lang-dotnet=\"`Pt`\" pulumi-lang-go=\"`pt`\" pulumi-lang-python=\"`pt`\" pulumi-lang-yaml=\"`pt`\" pulumi-lang-java=\"`pt`\"\u003e`pt`\u003c/span\u003e, `pt-BR`, `pt-PT`, \u003cspan pulumi-lang-nodejs=\"`ro`\" pulumi-lang-dotnet=\"`Ro`\" pulumi-lang-go=\"`ro`\" pulumi-lang-python=\"`ro`\" pulumi-lang-yaml=\"`ro`\" pulumi-lang-java=\"`ro`\"\u003e`ro`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ru`\" pulumi-lang-dotnet=\"`Ru`\" pulumi-lang-go=\"`ru`\" pulumi-lang-python=\"`ru`\" pulumi-lang-yaml=\"`ru`\" pulumi-lang-java=\"`ru`\"\u003e`ru`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sk`\" pulumi-lang-dotnet=\"`Sk`\" pulumi-lang-go=\"`sk`\" pulumi-lang-python=\"`sk`\" pulumi-lang-yaml=\"`sk`\" pulumi-lang-java=\"`sk`\"\u003e`sk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sl`\" pulumi-lang-dotnet=\"`Sl`\" pulumi-lang-go=\"`sl`\" pulumi-lang-python=\"`sl`\" pulumi-lang-yaml=\"`sl`\" pulumi-lang-java=\"`sl`\"\u003e`sl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`so`\" pulumi-lang-dotnet=\"`So`\" pulumi-lang-go=\"`so`\" pulumi-lang-python=\"`so`\" pulumi-lang-yaml=\"`so`\" pulumi-lang-java=\"`so`\"\u003e`so`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sq`\" pulumi-lang-dotnet=\"`Sq`\" pulumi-lang-go=\"`sq`\" pulumi-lang-python=\"`sq`\" pulumi-lang-yaml=\"`sq`\" pulumi-lang-java=\"`sq`\"\u003e`sq`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sr`\" pulumi-lang-dotnet=\"`Sr`\" pulumi-lang-go=\"`sr`\" pulumi-lang-python=\"`sr`\" pulumi-lang-yaml=\"`sr`\" pulumi-lang-java=\"`sr`\"\u003e`sr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sv`\" pulumi-lang-dotnet=\"`Sv`\" pulumi-lang-go=\"`sv`\" pulumi-lang-python=\"`sv`\" pulumi-lang-yaml=\"`sv`\" pulumi-lang-java=\"`sv`\"\u003e`sv`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sw`\" pulumi-lang-dotnet=\"`Sw`\" pulumi-lang-go=\"`sw`\" pulumi-lang-python=\"`sw`\" pulumi-lang-yaml=\"`sw`\" pulumi-lang-java=\"`sw`\"\u003e`sw`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ta`\" pulumi-lang-dotnet=\"`Ta`\" pulumi-lang-go=\"`ta`\" pulumi-lang-python=\"`ta`\" pulumi-lang-yaml=\"`ta`\" pulumi-lang-java=\"`ta`\"\u003e`ta`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`te`\" pulumi-lang-dotnet=\"`Te`\" pulumi-lang-go=\"`te`\" pulumi-lang-python=\"`te`\" pulumi-lang-yaml=\"`te`\" pulumi-lang-java=\"`te`\"\u003e`te`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`th`\" pulumi-lang-dotnet=\"`Th`\" pulumi-lang-go=\"`th`\" pulumi-lang-python=\"`th`\" pulumi-lang-yaml=\"`th`\" pulumi-lang-java=\"`th`\"\u003e`th`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tl`\" pulumi-lang-dotnet=\"`Tl`\" pulumi-lang-go=\"`tl`\" pulumi-lang-python=\"`tl`\" pulumi-lang-yaml=\"`tl`\" pulumi-lang-java=\"`tl`\"\u003e`tl`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`tr`\" pulumi-lang-dotnet=\"`Tr`\" pulumi-lang-go=\"`tr`\" pulumi-lang-python=\"`tr`\" pulumi-lang-yaml=\"`tr`\" pulumi-lang-java=\"`tr`\"\u003e`tr`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`uk`\" pulumi-lang-dotnet=\"`Uk`\" pulumi-lang-go=\"`uk`\" pulumi-lang-python=\"`uk`\" pulumi-lang-yaml=\"`uk`\" pulumi-lang-java=\"`uk`\"\u003e`uk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`ur`\" pulumi-lang-dotnet=\"`Ur`\" pulumi-lang-go=\"`ur`\" pulumi-lang-python=\"`ur`\" pulumi-lang-yaml=\"`ur`\" pulumi-lang-java=\"`ur`\"\u003e`ur`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`vi`\" pulumi-lang-dotnet=\"`Vi`\" pulumi-lang-go=\"`vi`\" pulumi-lang-python=\"`vi`\" pulumi-lang-yaml=\"`vi`\" pulumi-lang-java=\"`vi`\"\u003e`vi`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zgh`\" pulumi-lang-dotnet=\"`Zgh`\" pulumi-lang-go=\"`zgh`\" pulumi-lang-python=\"`zgh`\" pulumi-lang-yaml=\"`zgh`\" pulumi-lang-java=\"`zgh`\"\u003e`zgh`\u003c/span\u003e, `zh-CN`, `zh-HK`, `zh-TW`.\n"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The term \u003cspan pulumi-lang-nodejs=\"`prompt`\" pulumi-lang-dotnet=\"`Prompt`\" pulumi-lang-go=\"`prompt`\" pulumi-lang-python=\"`prompt`\" pulumi-lang-yaml=\"`prompt`\" pulumi-lang-java=\"`prompt`\"\u003e`prompt`\u003c/span\u003e is used to refer to a specific step in the login flow. Options include: \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-id`, `login-password`, `login-passwordless`, `login-email-verification`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, `reset-password`, `custom-form`, \u003cspan pulumi-lang-nodejs=\"`consent`\" pulumi-lang-dotnet=\"`Consent`\" pulumi-lang-go=\"`consent`\" pulumi-lang-python=\"`consent`\" pulumi-lang-yaml=\"`consent`\" pulumi-lang-java=\"`consent`\"\u003e`consent`\u003c/span\u003e, `customized-consent`, \u003cspan pulumi-lang-nodejs=\"`logout`\" pulumi-lang-dotnet=\"`Logout`\" pulumi-lang-go=\"`logout`\" pulumi-lang-python=\"`logout`\" pulumi-lang-yaml=\"`logout`\" pulumi-lang-java=\"`logout`\"\u003e`logout`\u003c/span\u003e, `mfa-push`, `mfa-otp`, `mfa-voice`, `mfa-phone`, `mfa-webauthn`, `mfa-sms`, `mfa-email`, `mfa-recovery-code`, \u003cspan pulumi-lang-nodejs=\"`mfa`\" pulumi-lang-dotnet=\"`Mfa`\" pulumi-lang-go=\"`mfa`\" pulumi-lang-python=\"`mfa`\" pulumi-lang-yaml=\"`mfa`\" pulumi-lang-java=\"`mfa`\"\u003e`mfa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`status`\" pulumi-lang-dotnet=\"`Status`\" pulumi-lang-go=\"`status`\" pulumi-lang-python=\"`status`\" pulumi-lang-yaml=\"`status`\" pulumi-lang-java=\"`status`\"\u003e`status`\u003c/span\u003e, `device-flow`, `email-verification`, `email-otp-challenge`, \u003cspan pulumi-lang-nodejs=\"`organizations`\" pulumi-lang-dotnet=\"`Organizations`\" pulumi-lang-go=\"`organizations`\" pulumi-lang-python=\"`organizations`\" pulumi-lang-yaml=\"`organizations`\" pulumi-lang-java=\"`organizations`\"\u003e`organizations`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`invitation`\" pulumi-lang-dotnet=\"`Invitation`\" pulumi-lang-go=\"`invitation`\" pulumi-lang-python=\"`invitation`\" pulumi-lang-yaml=\"`invitation`\" pulumi-lang-java=\"`invitation`\"\u003e`invitation`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`common`\" pulumi-lang-dotnet=\"`Common`\" pulumi-lang-go=\"`common`\" pulumi-lang-python=\"`common`\" pulumi-lang-yaml=\"`common`\" pulumi-lang-java=\"`common`\"\u003e`common`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`passkeys`\" pulumi-lang-dotnet=\"`Passkeys`\" pulumi-lang-go=\"`passkeys`\" pulumi-lang-python=\"`passkeys`\" pulumi-lang-yaml=\"`passkeys`\" pulumi-lang-java=\"`passkeys`\"\u003e`passkeys`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`captcha`\" pulumi-lang-dotnet=\"`Captcha`\" pulumi-lang-go=\"`captcha`\" pulumi-lang-python=\"`captcha`\" pulumi-lang-yaml=\"`captcha`\" pulumi-lang-java=\"`captcha`\"\u003e`captcha`\u003c/span\u003e, `brute-force-protection`.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/promptPartials:PromptPartials": {
            "description": "With this resource, you can manage a customized sign up and login experience by adding custom content, form elements and css/javascript. You can read more about this [here](https://auth0.com/docs/customize/universal-login-pages/customize-signup-and-login-prompts).\n\n!\u003e **Deprecated:** \u003cspan pulumi-lang-nodejs=\"`auth0.PromptPartials`\" pulumi-lang-dotnet=\"`auth0.PromptPartials`\" pulumi-lang-go=\"`PromptPartials`\" pulumi-lang-python=\"`PromptPartials`\" pulumi-lang-yaml=\"`auth0.PromptPartials`\" pulumi-lang-java=\"`auth0.PromptPartials`\"\u003e`auth0.PromptPartials`\u003c/span\u003e has been deprecated. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple\nprompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myLoginPromptPartials = new auth0.PromptPartials(\"my_login_prompt_partials\", {\n    prompt: \"login\",\n    formContentStart: \"\u003cdiv\u003eUpdated Form Content Start\u003c/div\u003e\",\n    formContentEnd: \"\u003cdiv\u003eUpdated Form Content End\u003c/div\u003e\",\n    formFooterStart: \"\u003cdiv\u003eUpdated Footer Start\u003c/div\u003e\",\n    formFooterEnd: \"\u003cdiv\u003eUpdated Footer End\u003c/div\u003e\",\n    secondaryActionsStart: \"\u003cdiv\u003eUpdated Secondary Actions Start\u003c/div\u003e\",\n    secondaryActionsEnd: \"\u003cdiv\u003eUpdated Secondary Actions End\u003c/div\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_login_prompt_partials = auth0.PromptPartials(\"my_login_prompt_partials\",\n    prompt=\"login\",\n    form_content_start=\"\u003cdiv\u003eUpdated Form Content Start\u003c/div\u003e\",\n    form_content_end=\"\u003cdiv\u003eUpdated Form Content End\u003c/div\u003e\",\n    form_footer_start=\"\u003cdiv\u003eUpdated Footer Start\u003c/div\u003e\",\n    form_footer_end=\"\u003cdiv\u003eUpdated Footer End\u003c/div\u003e\",\n    secondary_actions_start=\"\u003cdiv\u003eUpdated Secondary Actions Start\u003c/div\u003e\",\n    secondary_actions_end=\"\u003cdiv\u003eUpdated Secondary Actions End\u003c/div\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myLoginPromptPartials = new Auth0.PromptPartials(\"my_login_prompt_partials\", new()\n    {\n        Prompt = \"login\",\n        FormContentStart = \"\u003cdiv\u003eUpdated Form Content Start\u003c/div\u003e\",\n        FormContentEnd = \"\u003cdiv\u003eUpdated Form Content End\u003c/div\u003e\",\n        FormFooterStart = \"\u003cdiv\u003eUpdated Footer Start\u003c/div\u003e\",\n        FormFooterEnd = \"\u003cdiv\u003eUpdated Footer End\u003c/div\u003e\",\n        SecondaryActionsStart = \"\u003cdiv\u003eUpdated Secondary Actions Start\u003c/div\u003e\",\n        SecondaryActionsEnd = \"\u003cdiv\u003eUpdated Secondary Actions End\u003c/div\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewPromptPartials(ctx, \"my_login_prompt_partials\", \u0026auth0.PromptPartialsArgs{\n\t\t\tPrompt:                pulumi.String(\"login\"),\n\t\t\tFormContentStart:      pulumi.String(\"\u003cdiv\u003eUpdated Form Content Start\u003c/div\u003e\"),\n\t\t\tFormContentEnd:        pulumi.String(\"\u003cdiv\u003eUpdated Form Content End\u003c/div\u003e\"),\n\t\t\tFormFooterStart:       pulumi.String(\"\u003cdiv\u003eUpdated Footer Start\u003c/div\u003e\"),\n\t\t\tFormFooterEnd:         pulumi.String(\"\u003cdiv\u003eUpdated Footer End\u003c/div\u003e\"),\n\t\t\tSecondaryActionsStart: pulumi.String(\"\u003cdiv\u003eUpdated Secondary Actions Start\u003c/div\u003e\"),\n\t\t\tSecondaryActionsEnd:   pulumi.String(\"\u003cdiv\u003eUpdated Secondary Actions End\u003c/div\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.PromptPartials;\nimport com.pulumi.auth0.PromptPartialsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myLoginPromptPartials = new PromptPartials(\"myLoginPromptPartials\", PromptPartialsArgs.builder()\n            .prompt(\"login\")\n            .formContentStart(\"\u003cdiv\u003eUpdated Form Content Start\u003c/div\u003e\")\n            .formContentEnd(\"\u003cdiv\u003eUpdated Form Content End\u003c/div\u003e\")\n            .formFooterStart(\"\u003cdiv\u003eUpdated Footer Start\u003c/div\u003e\")\n            .formFooterEnd(\"\u003cdiv\u003eUpdated Footer End\u003c/div\u003e\")\n            .secondaryActionsStart(\"\u003cdiv\u003eUpdated Secondary Actions Start\u003c/div\u003e\")\n            .secondaryActionsEnd(\"\u003cdiv\u003eUpdated Secondary Actions End\u003c/div\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myLoginPromptPartials:\n    type: auth0:PromptPartials\n    name: my_login_prompt_partials\n    properties:\n      prompt: login\n      formContentStart: \u003cdiv\u003eUpdated Form Content Start\u003c/div\u003e\n      formContentEnd: \u003cdiv\u003eUpdated Form Content End\u003c/div\u003e\n      formFooterStart: \u003cdiv\u003eUpdated Footer Start\u003c/div\u003e\n      formFooterEnd: \u003cdiv\u003eUpdated Footer End\u003c/div\u003e\n      secondaryActionsStart: \u003cdiv\u003eUpdated Secondary Actions Start\u003c/div\u003e\n      secondaryActionsEnd: \u003cdiv\u003eUpdated Secondary Actions End\u003c/div\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the prompt name.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/promptPartials:PromptPartials my_login_prompt_partials \"login\"\n```\n\n",
            "properties": {
                "formContentEnd": {
                    "type": "string",
                    "description": "Content that goes at the end of the form.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "formContentStart": {
                    "type": "string",
                    "description": "Content that goes at the start of the form.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "formFooterEnd": {
                    "type": "string",
                    "description": "Footer content for the end of the footer.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "formFooterStart": {
                    "type": "string",
                    "description": "Footer content for the start of the footer.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "prompt": {
                    "type": "string",
                    "description": "The prompt that you are adding partials for. Options are: `login-id`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-password`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "secondaryActionsEnd": {
                    "type": "string",
                    "description": "Actions that go at the end of secondary actions.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "secondaryActionsStart": {
                    "type": "string",
                    "description": "Actions that go at the start of secondary actions.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                }
            },
            "required": [
                "prompt"
            ],
            "inputProperties": {
                "formContentEnd": {
                    "type": "string",
                    "description": "Content that goes at the end of the form.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "formContentStart": {
                    "type": "string",
                    "description": "Content that goes at the start of the form.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "formFooterEnd": {
                    "type": "string",
                    "description": "Footer content for the end of the footer.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "formFooterStart": {
                    "type": "string",
                    "description": "Footer content for the start of the footer.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "prompt": {
                    "type": "string",
                    "description": "The prompt that you are adding partials for. Options are: `login-id`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-password`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "secondaryActionsEnd": {
                    "type": "string",
                    "description": "Actions that go at the end of secondary actions.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                },
                "secondaryActionsStart": {
                    "type": "string",
                    "description": "Actions that go at the start of secondary actions.\n",
                    "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                }
            },
            "requiredInputs": [
                "prompt"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PromptPartials resources.\n",
                "properties": {
                    "formContentEnd": {
                        "type": "string",
                        "description": "Content that goes at the end of the form.\n",
                        "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                    },
                    "formContentStart": {
                        "type": "string",
                        "description": "Content that goes at the start of the form.\n",
                        "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                    },
                    "formFooterEnd": {
                        "type": "string",
                        "description": "Footer content for the end of the footer.\n",
                        "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                    },
                    "formFooterStart": {
                        "type": "string",
                        "description": "Footer content for the start of the footer.\n",
                        "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                    },
                    "prompt": {
                        "type": "string",
                        "description": "The prompt that you are adding partials for. Options are: `login-id`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-password`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.\n",
                        "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                    },
                    "secondaryActionsEnd": {
                        "type": "string",
                        "description": "Actions that go at the end of secondary actions.\n",
                        "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                    },
                    "secondaryActionsStart": {
                        "type": "string",
                        "description": "Actions that go at the start of secondary actions.\n",
                        "deprecationMessage": "This resource is deprecated and will be removed in the next major version. Please use \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e for managing multiple prompt screens or \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e for managing a single prompt screen, depending on your use case."
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/promptScreenPartial:PromptScreenPartial": {
            "description": "With this resource, you can manage a customized sign up and login experience by adding custom content, form elements and css/javascript. You can read more about this [here](https://auth0.com/docs/customize/universal-login-pages/customize-signup-and-login-prompts).\n\n!\u003e This resource appends a specific prompt screen to the list of prompt screens displayed to the user during the authentication flow.\n In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e resource manages the complete set of prompt screens that are displayed during the\n authentication flow. To avoid potential issues, it is recommended not to use this resource in conjunction with the\n \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartials`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartials`\" pulumi-lang-go=\"`PromptScreenPartials`\" pulumi-lang-python=\"`PromptScreenPartials`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartials`\" pulumi-lang-java=\"`auth0.PromptScreenPartials`\"\u003e`auth0.PromptScreenPartials`\u003c/span\u003e resource when managing prompt screens for the same prompt.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst login = new auth0.PromptScreenPartial(\"login\", {\n    promptType: \"login\",\n    screenName: \"login\",\n    insertionPoints: {\n        formContentStart: \"\u003cdiv\u003eForm Content Start\u003c/div\u003e\",\n        formContentEnd: \"\u003cdiv\u003eForm Content End\u003c/div\u003e\",\n    },\n});\nconst customized_consent = new auth0.PromptScreenPartial(\"customized-consent\", {\n    promptType: \"customized-consent\",\n    screenName: \"customized-consent\",\n    insertionPoints: {\n        formContent: \"\u003cdiv\u003eForm Content\u003c/div\u003e\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nlogin = auth0.PromptScreenPartial(\"login\",\n    prompt_type=\"login\",\n    screen_name=\"login\",\n    insertion_points={\n        \"form_content_start\": \"\u003cdiv\u003eForm Content Start\u003c/div\u003e\",\n        \"form_content_end\": \"\u003cdiv\u003eForm Content End\u003c/div\u003e\",\n    })\ncustomized_consent = auth0.PromptScreenPartial(\"customized-consent\",\n    prompt_type=\"customized-consent\",\n    screen_name=\"customized-consent\",\n    insertion_points={\n        \"form_content\": \"\u003cdiv\u003eForm Content\u003c/div\u003e\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var login = new Auth0.PromptScreenPartial(\"login\", new()\n    {\n        PromptType = \"login\",\n        ScreenName = \"login\",\n        InsertionPoints = new Auth0.Inputs.PromptScreenPartialInsertionPointsArgs\n        {\n            FormContentStart = \"\u003cdiv\u003eForm Content Start\u003c/div\u003e\",\n            FormContentEnd = \"\u003cdiv\u003eForm Content End\u003c/div\u003e\",\n        },\n    });\n\n    var customized_consent = new Auth0.PromptScreenPartial(\"customized-consent\", new()\n    {\n        PromptType = \"customized-consent\",\n        ScreenName = \"customized-consent\",\n        InsertionPoints = new Auth0.Inputs.PromptScreenPartialInsertionPointsArgs\n        {\n            FormContent = \"\u003cdiv\u003eForm Content\u003c/div\u003e\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewPromptScreenPartial(ctx, \"login\", \u0026auth0.PromptScreenPartialArgs{\n\t\t\tPromptType: pulumi.String(\"login\"),\n\t\t\tScreenName: pulumi.String(\"login\"),\n\t\t\tInsertionPoints: \u0026auth0.PromptScreenPartialInsertionPointsArgs{\n\t\t\t\tFormContentStart: pulumi.String(\"\u003cdiv\u003eForm Content Start\u003c/div\u003e\"),\n\t\t\t\tFormContentEnd:   pulumi.String(\"\u003cdiv\u003eForm Content End\u003c/div\u003e\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewPromptScreenPartial(ctx, \"customized-consent\", \u0026auth0.PromptScreenPartialArgs{\n\t\t\tPromptType: pulumi.String(\"customized-consent\"),\n\t\t\tScreenName: pulumi.String(\"customized-consent\"),\n\t\t\tInsertionPoints: \u0026auth0.PromptScreenPartialInsertionPointsArgs{\n\t\t\t\tFormContent: pulumi.String(\"\u003cdiv\u003eForm Content\u003c/div\u003e\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.PromptScreenPartial;\nimport com.pulumi.auth0.PromptScreenPartialArgs;\nimport com.pulumi.auth0.inputs.PromptScreenPartialInsertionPointsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var login = new PromptScreenPartial(\"login\", PromptScreenPartialArgs.builder()\n            .promptType(\"login\")\n            .screenName(\"login\")\n            .insertionPoints(PromptScreenPartialInsertionPointsArgs.builder()\n                .formContentStart(\"\u003cdiv\u003eForm Content Start\u003c/div\u003e\")\n                .formContentEnd(\"\u003cdiv\u003eForm Content End\u003c/div\u003e\")\n                .build())\n            .build());\n\n        var customized_consent = new PromptScreenPartial(\"customized-consent\", PromptScreenPartialArgs.builder()\n            .promptType(\"customized-consent\")\n            .screenName(\"customized-consent\")\n            .insertionPoints(PromptScreenPartialInsertionPointsArgs.builder()\n                .formContent(\"\u003cdiv\u003eForm Content\u003c/div\u003e\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  login:\n    type: auth0:PromptScreenPartial\n    properties:\n      promptType: login\n      screenName: login\n      insertionPoints:\n        formContentStart: \u003cdiv\u003eForm Content Start\u003c/div\u003e\n        formContentEnd: \u003cdiv\u003eForm Content End\u003c/div\u003e\n  customized-consent:\n    type: auth0:PromptScreenPartial\n    properties:\n      promptType: customized-consent\n      screenName: customized-consent\n      insertionPoints:\n        formContent: \u003cdiv\u003eForm Content\u003c/div\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the prompt name and screen_name.\n\nAs this is not a resource identifiable by an ID within the Auth0 Management API,\n\nlogin can be imported using the prompt name and screen name using the format:\n\nprompt_name:screen_name\n\nExample:\n\n```sh\n$ pulumi import auth0:index/promptScreenPartial:PromptScreenPartial login \"login:login\"\n```\n\n",
            "properties": {
                "insertionPoints": {
                    "$ref": "#/types/auth0:index/PromptScreenPartialInsertionPoints:PromptScreenPartialInsertionPoints",
                    "description": "The insertion points for the partials.\n"
                },
                "promptType": {
                    "type": "string",
                    "description": "The prompt that you are adding partials for. Options are: `login-id`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-password`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.\n"
                },
                "screenName": {
                    "type": "string",
                    "description": "The name of the screen associated with the partials\n"
                }
            },
            "required": [
                "promptType",
                "screenName"
            ],
            "inputProperties": {
                "insertionPoints": {
                    "$ref": "#/types/auth0:index/PromptScreenPartialInsertionPoints:PromptScreenPartialInsertionPoints",
                    "description": "The insertion points for the partials.\n"
                },
                "promptType": {
                    "type": "string",
                    "description": "The prompt that you are adding partials for. Options are: `login-id`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-password`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.\n"
                },
                "screenName": {
                    "type": "string",
                    "description": "The name of the screen associated with the partials\n"
                }
            },
            "requiredInputs": [
                "promptType",
                "screenName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PromptScreenPartial resources.\n",
                "properties": {
                    "insertionPoints": {
                        "$ref": "#/types/auth0:index/PromptScreenPartialInsertionPoints:PromptScreenPartialInsertionPoints",
                        "description": "The insertion points for the partials.\n"
                    },
                    "promptType": {
                        "type": "string",
                        "description": "The prompt that you are adding partials for. Options are: `login-id`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-password`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.\n"
                    },
                    "screenName": {
                        "type": "string",
                        "description": "The name of the screen associated with the partials\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/promptScreenPartials:PromptScreenPartials": {
            "description": "With this resource, you can manage a customized sign up and login experience by adding custom content, form elements and css/javascript. You can read more about this [here](https://auth0.com/docs/customize/universal-login-pages/customize-signup-and-login-prompts).\n\n!\u003e This resource manages the entire set of prompt screens enabled for a prompt. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e\nresource appends a specific prompt screen to the list of prompt screens displayed to the user during the authentication flow.\n To avoid potential issues, it is recommended not to use this resource in conjunction with the \u003cspan pulumi-lang-nodejs=\"`auth0.PromptScreenPartial`\" pulumi-lang-dotnet=\"`auth0.PromptScreenPartial`\" pulumi-lang-go=\"`PromptScreenPartial`\" pulumi-lang-python=\"`PromptScreenPartial`\" pulumi-lang-yaml=\"`auth0.PromptScreenPartial`\" pulumi-lang-java=\"`auth0.PromptScreenPartial`\"\u003e`auth0.PromptScreenPartial`\u003c/span\u003e\n resource when managing prompt screens for the same prompt.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst promptScreenPartials = new auth0.PromptScreenPartials(\"prompt_screen_partials\", {\n    promptType: \"login-passwordless\",\n    screenPartials: [\n        {\n            screenName: \"login-passwordless-email-code\",\n            insertionPoints: {\n                formContentStart: \"\u003cdiv\u003eForm Content Start\u003c/div\u003e\",\n                formContentEnd: \"\u003cdiv\u003eForm Content End\u003c/div\u003e\",\n            },\n        },\n        {\n            screenName: \"login-passwordless-sms-otp\",\n            insertionPoints: {\n                formContentStart: \"\u003cdiv\u003eForm Content Start\u003c/div\u003e\",\n                formContentEnd: \"\u003cdiv\u003eForm Content End\u003c/div\u003e\",\n            },\n        },\n    ],\n});\nconst customized_consent = new auth0.PromptScreenPartials(\"customized-consent\", {\n    promptType: \"customized-consent\",\n    screenPartials: [{\n        screenName: \"customized-consent\",\n        insertionPoints: {\n            formContent: \"\u003cdiv\u003eForm Content\u003c/div\u003e\",\n        },\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nprompt_screen_partials = auth0.PromptScreenPartials(\"prompt_screen_partials\",\n    prompt_type=\"login-passwordless\",\n    screen_partials=[\n        {\n            \"screen_name\": \"login-passwordless-email-code\",\n            \"insertion_points\": {\n                \"form_content_start\": \"\u003cdiv\u003eForm Content Start\u003c/div\u003e\",\n                \"form_content_end\": \"\u003cdiv\u003eForm Content End\u003c/div\u003e\",\n            },\n        },\n        {\n            \"screen_name\": \"login-passwordless-sms-otp\",\n            \"insertion_points\": {\n                \"form_content_start\": \"\u003cdiv\u003eForm Content Start\u003c/div\u003e\",\n                \"form_content_end\": \"\u003cdiv\u003eForm Content End\u003c/div\u003e\",\n            },\n        },\n    ])\ncustomized_consent = auth0.PromptScreenPartials(\"customized-consent\",\n    prompt_type=\"customized-consent\",\n    screen_partials=[{\n        \"screen_name\": \"customized-consent\",\n        \"insertion_points\": {\n            \"form_content\": \"\u003cdiv\u003eForm Content\u003c/div\u003e\",\n        },\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var promptScreenPartials = new Auth0.PromptScreenPartials(\"prompt_screen_partials\", new()\n    {\n        PromptType = \"login-passwordless\",\n        ScreenPartials = new[]\n        {\n            new Auth0.Inputs.PromptScreenPartialsScreenPartialArgs\n            {\n                ScreenName = \"login-passwordless-email-code\",\n                InsertionPoints = new Auth0.Inputs.PromptScreenPartialsScreenPartialInsertionPointsArgs\n                {\n                    FormContentStart = \"\u003cdiv\u003eForm Content Start\u003c/div\u003e\",\n                    FormContentEnd = \"\u003cdiv\u003eForm Content End\u003c/div\u003e\",\n                },\n            },\n            new Auth0.Inputs.PromptScreenPartialsScreenPartialArgs\n            {\n                ScreenName = \"login-passwordless-sms-otp\",\n                InsertionPoints = new Auth0.Inputs.PromptScreenPartialsScreenPartialInsertionPointsArgs\n                {\n                    FormContentStart = \"\u003cdiv\u003eForm Content Start\u003c/div\u003e\",\n                    FormContentEnd = \"\u003cdiv\u003eForm Content End\u003c/div\u003e\",\n                },\n            },\n        },\n    });\n\n    var customized_consent = new Auth0.PromptScreenPartials(\"customized-consent\", new()\n    {\n        PromptType = \"customized-consent\",\n        ScreenPartials = new[]\n        {\n            new Auth0.Inputs.PromptScreenPartialsScreenPartialArgs\n            {\n                ScreenName = \"customized-consent\",\n                InsertionPoints = new Auth0.Inputs.PromptScreenPartialsScreenPartialInsertionPointsArgs\n                {\n                    FormContent = \"\u003cdiv\u003eForm Content\u003c/div\u003e\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewPromptScreenPartials(ctx, \"prompt_screen_partials\", \u0026auth0.PromptScreenPartialsArgs{\n\t\t\tPromptType: pulumi.String(\"login-passwordless\"),\n\t\t\tScreenPartials: auth0.PromptScreenPartialsScreenPartialArray{\n\t\t\t\t\u0026auth0.PromptScreenPartialsScreenPartialArgs{\n\t\t\t\t\tScreenName: pulumi.String(\"login-passwordless-email-code\"),\n\t\t\t\t\tInsertionPoints: \u0026auth0.PromptScreenPartialsScreenPartialInsertionPointsArgs{\n\t\t\t\t\t\tFormContentStart: pulumi.String(\"\u003cdiv\u003eForm Content Start\u003c/div\u003e\"),\n\t\t\t\t\t\tFormContentEnd:   pulumi.String(\"\u003cdiv\u003eForm Content End\u003c/div\u003e\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026auth0.PromptScreenPartialsScreenPartialArgs{\n\t\t\t\t\tScreenName: pulumi.String(\"login-passwordless-sms-otp\"),\n\t\t\t\t\tInsertionPoints: \u0026auth0.PromptScreenPartialsScreenPartialInsertionPointsArgs{\n\t\t\t\t\t\tFormContentStart: pulumi.String(\"\u003cdiv\u003eForm Content Start\u003c/div\u003e\"),\n\t\t\t\t\t\tFormContentEnd:   pulumi.String(\"\u003cdiv\u003eForm Content End\u003c/div\u003e\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewPromptScreenPartials(ctx, \"customized-consent\", \u0026auth0.PromptScreenPartialsArgs{\n\t\t\tPromptType: pulumi.String(\"customized-consent\"),\n\t\t\tScreenPartials: auth0.PromptScreenPartialsScreenPartialArray{\n\t\t\t\t\u0026auth0.PromptScreenPartialsScreenPartialArgs{\n\t\t\t\t\tScreenName: pulumi.String(\"customized-consent\"),\n\t\t\t\t\tInsertionPoints: \u0026auth0.PromptScreenPartialsScreenPartialInsertionPointsArgs{\n\t\t\t\t\t\tFormContent: pulumi.String(\"\u003cdiv\u003eForm Content\u003c/div\u003e\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.PromptScreenPartials;\nimport com.pulumi.auth0.PromptScreenPartialsArgs;\nimport com.pulumi.auth0.inputs.PromptScreenPartialsScreenPartialArgs;\nimport com.pulumi.auth0.inputs.PromptScreenPartialsScreenPartialInsertionPointsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var promptScreenPartials = new PromptScreenPartials(\"promptScreenPartials\", PromptScreenPartialsArgs.builder()\n            .promptType(\"login-passwordless\")\n            .screenPartials(            \n                PromptScreenPartialsScreenPartialArgs.builder()\n                    .screenName(\"login-passwordless-email-code\")\n                    .insertionPoints(PromptScreenPartialsScreenPartialInsertionPointsArgs.builder()\n                        .formContentStart(\"\u003cdiv\u003eForm Content Start\u003c/div\u003e\")\n                        .formContentEnd(\"\u003cdiv\u003eForm Content End\u003c/div\u003e\")\n                        .build())\n                    .build(),\n                PromptScreenPartialsScreenPartialArgs.builder()\n                    .screenName(\"login-passwordless-sms-otp\")\n                    .insertionPoints(PromptScreenPartialsScreenPartialInsertionPointsArgs.builder()\n                        .formContentStart(\"\u003cdiv\u003eForm Content Start\u003c/div\u003e\")\n                        .formContentEnd(\"\u003cdiv\u003eForm Content End\u003c/div\u003e\")\n                        .build())\n                    .build())\n            .build());\n\n        var customized_consent = new PromptScreenPartials(\"customized-consent\", PromptScreenPartialsArgs.builder()\n            .promptType(\"customized-consent\")\n            .screenPartials(PromptScreenPartialsScreenPartialArgs.builder()\n                .screenName(\"customized-consent\")\n                .insertionPoints(PromptScreenPartialsScreenPartialInsertionPointsArgs.builder()\n                    .formContent(\"\u003cdiv\u003eForm Content\u003c/div\u003e\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  promptScreenPartials:\n    type: auth0:PromptScreenPartials\n    name: prompt_screen_partials\n    properties:\n      promptType: login-passwordless\n      screenPartials:\n        - screenName: login-passwordless-email-code\n          insertionPoints:\n            formContentStart: \u003cdiv\u003eForm Content Start\u003c/div\u003e\n            formContentEnd: \u003cdiv\u003eForm Content End\u003c/div\u003e\n        - screenName: login-passwordless-sms-otp\n          insertionPoints:\n            formContentStart: \u003cdiv\u003eForm Content Start\u003c/div\u003e\n            formContentEnd: \u003cdiv\u003eForm Content End\u003c/div\u003e\n  customized-consent:\n    type: auth0:PromptScreenPartials\n    properties:\n      promptType: customized-consent\n      screenPartials:\n        - screenName: customized-consent\n          insertionPoints:\n            formContent: \u003cdiv\u003eForm Content\u003c/div\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the prompt name.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/promptScreenPartials:PromptScreenPartials prompt_screen_partials \"login-passwordless\"\n```\n\n",
            "properties": {
                "promptType": {
                    "type": "string",
                    "description": "The prompt that you are adding partials for. Options are: `login-id`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-password`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.\n"
                },
                "screenPartials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/PromptScreenPartialsScreenPartial:PromptScreenPartialsScreenPartial"
                    }
                }
            },
            "required": [
                "promptType"
            ],
            "inputProperties": {
                "promptType": {
                    "type": "string",
                    "description": "The prompt that you are adding partials for. Options are: `login-id`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-password`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.\n"
                },
                "screenPartials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/PromptScreenPartialsScreenPartial:PromptScreenPartialsScreenPartial"
                    }
                }
            },
            "requiredInputs": [
                "promptType"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PromptScreenPartials resources.\n",
                "properties": {
                    "promptType": {
                        "type": "string",
                        "description": "The prompt that you are adding partials for. Options are: `login-id`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, `login-password`, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.\n"
                    },
                    "screenPartials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/PromptScreenPartialsScreenPartial:PromptScreenPartialsScreenPartial"
                        }
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/promptScreenRenderer:PromptScreenRenderer": {
            "description": "With this resource, you can Configure the render settings for a specific screen.You can read more about this [here](https://auth0.com/docs/customize/login-pages/advanced-customizations/getting-started/configure-acul-screens).\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst promptScreenRenderer = new auth0.PromptScreenRenderer(\"prompt_screen_renderer\", {\n    promptType: \"login-id\",\n    screenName: \"login-id\",\n    renderingMode: \"advanced\",\n    defaultHeadTagsDisabled: false,\n    contextConfigurations: [\n        \"branding.settings\",\n        \"branding.themes.default\",\n        \"client.logo_uri\",\n        \"client.description\",\n        \"client.metadata.key\",\n        \"organization.display_name\",\n        \"organization.branding\",\n        \"organization.metadata.key\",\n        \"screen.texts\",\n        \"tenant.name\",\n        \"tenant.friendly_name\",\n        \"tenant.enabled_locales\",\n        \"untrusted_data.submitted_form_data\",\n        \"untrusted_data.authorization_params.login_hint\",\n        \"untrusted_data.authorization_params.screen_hint\",\n        \"untrusted_data.authorization_params.ui_locales\",\n        \"untrusted_data.authorization_params.ext-key\",\n    ],\n    headTags: JSON.stringify([{\n        attributes: {\n            async: true,\n            defer: true,\n            integrity: [\"sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\"],\n            src: \"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\",\n        },\n        tag: \"script\",\n    }]),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\nprompt_screen_renderer = auth0.PromptScreenRenderer(\"prompt_screen_renderer\",\n    prompt_type=\"login-id\",\n    screen_name=\"login-id\",\n    rendering_mode=\"advanced\",\n    default_head_tags_disabled=False,\n    context_configurations=[\n        \"branding.settings\",\n        \"branding.themes.default\",\n        \"client.logo_uri\",\n        \"client.description\",\n        \"client.metadata.key\",\n        \"organization.display_name\",\n        \"organization.branding\",\n        \"organization.metadata.key\",\n        \"screen.texts\",\n        \"tenant.name\",\n        \"tenant.friendly_name\",\n        \"tenant.enabled_locales\",\n        \"untrusted_data.submitted_form_data\",\n        \"untrusted_data.authorization_params.login_hint\",\n        \"untrusted_data.authorization_params.screen_hint\",\n        \"untrusted_data.authorization_params.ui_locales\",\n        \"untrusted_data.authorization_params.ext-key\",\n    ],\n    head_tags=json.dumps([{\n        \"attributes\": {\n            \"async\": True,\n            \"defer\": True,\n            \"integrity\": [\"sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\"],\n            \"src\": \"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\",\n        },\n        \"tag\": \"script\",\n    }]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var promptScreenRenderer = new Auth0.PromptScreenRenderer(\"prompt_screen_renderer\", new()\n    {\n        PromptType = \"login-id\",\n        ScreenName = \"login-id\",\n        RenderingMode = \"advanced\",\n        DefaultHeadTagsDisabled = false,\n        ContextConfigurations = new[]\n        {\n            \"branding.settings\",\n            \"branding.themes.default\",\n            \"client.logo_uri\",\n            \"client.description\",\n            \"client.metadata.key\",\n            \"organization.display_name\",\n            \"organization.branding\",\n            \"organization.metadata.key\",\n            \"screen.texts\",\n            \"tenant.name\",\n            \"tenant.friendly_name\",\n            \"tenant.enabled_locales\",\n            \"untrusted_data.submitted_form_data\",\n            \"untrusted_data.authorization_params.login_hint\",\n            \"untrusted_data.authorization_params.screen_hint\",\n            \"untrusted_data.authorization_params.ui_locales\",\n            \"untrusted_data.authorization_params.ext-key\",\n        },\n        HeadTags = JsonSerializer.Serialize(new[]\n        {\n            new Dictionary\u003cstring, object?\u003e\n            {\n                [\"attributes\"] = new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"async\"] = true,\n                    [\"defer\"] = true,\n                    [\"integrity\"] = new[]\n                    {\n                        \"sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\",\n                    },\n                    [\"src\"] = \"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\",\n                },\n                [\"tag\"] = \"script\",\n            },\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal([]map[string]interface{}{\n\t\t\tmap[string]interface{}{\n\t\t\t\t\"attributes\": map[string]interface{}{\n\t\t\t\t\t\"async\": true,\n\t\t\t\t\t\"defer\": true,\n\t\t\t\t\t\"integrity\": []string{\n\t\t\t\t\t\t\"sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\",\n\t\t\t\t\t},\n\t\t\t\t\t\"src\": \"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\",\n\t\t\t\t},\n\t\t\t\t\"tag\": \"script\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = auth0.NewPromptScreenRenderer(ctx, \"prompt_screen_renderer\", \u0026auth0.PromptScreenRendererArgs{\n\t\t\tPromptType:              pulumi.String(\"login-id\"),\n\t\t\tScreenName:              pulumi.String(\"login-id\"),\n\t\t\tRenderingMode:           pulumi.String(\"advanced\"),\n\t\t\tDefaultHeadTagsDisabled: pulumi.Bool(false),\n\t\t\tContextConfigurations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"branding.settings\"),\n\t\t\t\tpulumi.String(\"branding.themes.default\"),\n\t\t\t\tpulumi.String(\"client.logo_uri\"),\n\t\t\t\tpulumi.String(\"client.description\"),\n\t\t\t\tpulumi.String(\"client.metadata.key\"),\n\t\t\t\tpulumi.String(\"organization.display_name\"),\n\t\t\t\tpulumi.String(\"organization.branding\"),\n\t\t\t\tpulumi.String(\"organization.metadata.key\"),\n\t\t\t\tpulumi.String(\"screen.texts\"),\n\t\t\t\tpulumi.String(\"tenant.name\"),\n\t\t\t\tpulumi.String(\"tenant.friendly_name\"),\n\t\t\t\tpulumi.String(\"tenant.enabled_locales\"),\n\t\t\t\tpulumi.String(\"untrusted_data.submitted_form_data\"),\n\t\t\t\tpulumi.String(\"untrusted_data.authorization_params.login_hint\"),\n\t\t\t\tpulumi.String(\"untrusted_data.authorization_params.screen_hint\"),\n\t\t\t\tpulumi.String(\"untrusted_data.authorization_params.ui_locales\"),\n\t\t\t\tpulumi.String(\"untrusted_data.authorization_params.ext-key\"),\n\t\t\t},\n\t\t\tHeadTags: pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.PromptScreenRenderer;\nimport com.pulumi.auth0.PromptScreenRendererArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var promptScreenRenderer = new PromptScreenRenderer(\"promptScreenRenderer\", PromptScreenRendererArgs.builder()\n            .promptType(\"login-id\")\n            .screenName(\"login-id\")\n            .renderingMode(\"advanced\")\n            .defaultHeadTagsDisabled(false)\n            .contextConfigurations(            \n                \"branding.settings\",\n                \"branding.themes.default\",\n                \"client.logo_uri\",\n                \"client.description\",\n                \"client.metadata.key\",\n                \"organization.display_name\",\n                \"organization.branding\",\n                \"organization.metadata.key\",\n                \"screen.texts\",\n                \"tenant.name\",\n                \"tenant.friendly_name\",\n                \"tenant.enabled_locales\",\n                \"untrusted_data.submitted_form_data\",\n                \"untrusted_data.authorization_params.login_hint\",\n                \"untrusted_data.authorization_params.screen_hint\",\n                \"untrusted_data.authorization_params.ui_locales\",\n                \"untrusted_data.authorization_params.ext-key\")\n            .headTags(serializeJson(\n                jsonArray(jsonObject(\n                    jsonProperty(\"attributes\", jsonObject(\n                        jsonProperty(\"async\", true),\n                        jsonProperty(\"defer\", true),\n                        jsonProperty(\"integrity\", jsonArray(\"sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\")),\n                        jsonProperty(\"src\", \"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\")\n                    )),\n                    jsonProperty(\"tag\", \"script\")\n                ))))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  promptScreenRenderer:\n    type: auth0:PromptScreenRenderer\n    name: prompt_screen_renderer\n    properties:\n      promptType: login-id\n      screenName: login-id\n      renderingMode: advanced\n      defaultHeadTagsDisabled: false\n      contextConfigurations:\n        - branding.settings\n        - branding.themes.default\n        - client.logo_uri\n        - client.description\n        - client.metadata.key\n        - organization.display_name\n        - organization.branding\n        - organization.metadata.key\n        - screen.texts\n        - tenant.name\n        - tenant.friendly_name\n        - tenant.enabled_locales\n        - untrusted_data.submitted_form_data\n        - untrusted_data.authorization_params.login_hint\n        - untrusted_data.authorization_params.screen_hint\n        - untrusted_data.authorization_params.ui_locales\n        - untrusted_data.authorization_params.ext-key\n      headTags:\n        fn::toJSON:\n          - attributes:\n              async: true\n              defer: true\n              integrity:\n                - sha512-v2CJ7UaYy4JwqLDIrZUI/4hqeoQieOmAZNXBeQyjo21dadnwR+8ZaIJVT8EE2iyI61OV8e6M8PP2/4hpQINQ/g==\n              src: https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js\n            tag: script\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the prompt name and screen_name.\n\nAs this is not a resource identifiable by an ID within the Auth0 Management API,\n\nlogin can be imported using the prompt name and screen name using the format:\n\nprompt_name:screen_name\n\nExample:\n\n```sh\n$ pulumi import auth0:index/promptScreenRenderer:PromptScreenRenderer auth0_prompt_screen_renderer \"login-id:login-id\"\n```\n\n",
            "properties": {
                "contextConfigurations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Context values to make available\n"
                },
                "defaultHeadTagsDisabled": {
                    "type": "boolean",
                    "description": "Override Universal Login default head tags\n"
                },
                "filters": {
                    "$ref": "#/types/auth0:index/PromptScreenRendererFilters:PromptScreenRendererFilters",
                    "description": "Optional filters to apply rendering rules to specific entities. \u003cspan pulumi-lang-nodejs=\"`matchType`\" pulumi-lang-dotnet=\"`MatchType`\" pulumi-lang-go=\"`matchType`\" pulumi-lang-python=\"`match_type`\" pulumi-lang-yaml=\"`matchType`\" pulumi-lang-java=\"`matchType`\"\u003e`match_type`\u003c/span\u003e and at least one of the entity arrays are required.\n"
                },
                "headTags": {
                    "type": "string",
                    "description": "An array of head tags\n"
                },
                "promptType": {
                    "type": "string",
                    "description": "The prompt that you are configuring settings for. Options are: `signup-id`, `signup-password`, `login-id`, `login-password`, `login-passwordless`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, \u003cspan pulumi-lang-nodejs=\"`passkeys`\" pulumi-lang-dotnet=\"`Passkeys`\" pulumi-lang-go=\"`passkeys`\" pulumi-lang-python=\"`passkeys`\" pulumi-lang-yaml=\"`passkeys`\" pulumi-lang-java=\"`passkeys`\"\u003e`passkeys`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`captcha`\" pulumi-lang-dotnet=\"`Captcha`\" pulumi-lang-go=\"`captcha`\" pulumi-lang-python=\"`captcha`\" pulumi-lang-yaml=\"`captcha`\" pulumi-lang-java=\"`captcha`\"\u003e`captcha`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `reset-password`, \u003cspan pulumi-lang-nodejs=\"`mfa`\" pulumi-lang-dotnet=\"`Mfa`\" pulumi-lang-go=\"`mfa`\" pulumi-lang-python=\"`mfa`\" pulumi-lang-yaml=\"`mfa`\" pulumi-lang-java=\"`mfa`\"\u003e`mfa`\u003c/span\u003e, `mfa-sms`, `mfa-email`, `mfa-push`, \u003cspan pulumi-lang-nodejs=\"`invitation`\" pulumi-lang-dotnet=\"`Invitation`\" pulumi-lang-go=\"`invitation`\" pulumi-lang-python=\"`invitation`\" pulumi-lang-yaml=\"`invitation`\" pulumi-lang-java=\"`invitation`\"\u003e`invitation`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`organizations`\" pulumi-lang-dotnet=\"`Organizations`\" pulumi-lang-go=\"`organizations`\" pulumi-lang-python=\"`organizations`\" pulumi-lang-yaml=\"`organizations`\" pulumi-lang-java=\"`organizations`\"\u003e`organizations`\u003c/span\u003e, `mfa-otp`, `device-flow`, `mfa-phone`, `mfa-voice`, `mfa-recovery-code`, \u003cspan pulumi-lang-nodejs=\"`common`\" pulumi-lang-dotnet=\"`Common`\" pulumi-lang-go=\"`common`\" pulumi-lang-python=\"`common`\" pulumi-lang-yaml=\"`common`\" pulumi-lang-java=\"`common`\"\u003e`common`\u003c/span\u003e, `email-verification`, `login-email-verification`, \u003cspan pulumi-lang-nodejs=\"`logout`\" pulumi-lang-dotnet=\"`Logout`\" pulumi-lang-go=\"`logout`\" pulumi-lang-python=\"`logout`\" pulumi-lang-yaml=\"`logout`\" pulumi-lang-java=\"`logout`\"\u003e`logout`\u003c/span\u003e, `mfa-webauthn`, \u003cspan pulumi-lang-nodejs=\"`consent`\" pulumi-lang-dotnet=\"`Consent`\" pulumi-lang-go=\"`consent`\" pulumi-lang-python=\"`consent`\" pulumi-lang-yaml=\"`consent`\" pulumi-lang-java=\"`consent`\"\u003e`consent`\u003c/span\u003e, `customized-consent`, `email-otp-challenge`.\n"
                },
                "renderingMode": {
                    "type": "string",
                    "description": "Rendering modeOptions are: \u003cspan pulumi-lang-nodejs=\"`standard`\" pulumi-lang-dotnet=\"`Standard`\" pulumi-lang-go=\"`standard`\" pulumi-lang-python=\"`standard`\" pulumi-lang-yaml=\"`standard`\" pulumi-lang-java=\"`standard`\"\u003e`standard`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`advanced`\" pulumi-lang-dotnet=\"`Advanced`\" pulumi-lang-go=\"`advanced`\" pulumi-lang-python=\"`advanced`\" pulumi-lang-yaml=\"`advanced`\" pulumi-lang-java=\"`advanced`\"\u003e`advanced`\u003c/span\u003e.\n"
                },
                "screenName": {
                    "type": "string",
                    "description": "The screen that you are configuring settings for. Options are: `signup-id`, `signup-password`, `login-id`, `login-password`, `login-passwordless-sms-otp`, `login-passwordless-email-code`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, `passkey-enrollment`, `passkey-enrollment-local`, `interstitial-captcha`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `reset-password-request`, `reset-password-email`, `reset-password`, `reset-password-success`, `reset-password-error`, `reset-password-mfa-email-challenge`, `reset-password-mfa-otp-challenge`, `reset-password-mfa-push-challenge-push`, `reset-password-mfa-sms-challenge`, `mfa-detect-browser-capabilities`, `mfa-enroll-result`, `mfa-begin-enroll-options`, `mfa-login-options`, `mfa-country-codes`, `mfa-sms-challenge`, `mfa-sms-enrollment`, `mfa-sms-list`, `mfa-email-challenge`, `mfa-email-list`, `mfa-push-challenge-push`, `mfa-push-enrollment-qr`, `mfa-push-list`, `mfa-push-welcome`, `accept-invitation`, `organization-selection`, `organization-picker`, `mfa-otp-challenge`, `mfa-otp-enrollment-code`, `mfa-otp-enrollment-qr`, `device-code-activation`, `device-code-activation-allowed`, `device-code-activation-denied`, `device-code-confirmation`, `mfa-phone-challenge`, `mfa-phone-enrollment`, `mfa-voice-challenge`, `mfa-voice-enrollment`, `reset-password-mfa-phone-challenge`, `reset-password-mfa-voice-challenge`, `mfa-recovery-code-challenge`, `mfa-recovery-code-enrollment`, `reset-password-mfa-recovery-code-challenge`, `redeem-ticket`, `mfa-recovery-code-challenge-new-code`, `email-verification-result`, `login-email-verification`, \u003cspan pulumi-lang-nodejs=\"`logout`\" pulumi-lang-dotnet=\"`Logout`\" pulumi-lang-go=\"`logout`\" pulumi-lang-python=\"`logout`\" pulumi-lang-yaml=\"`logout`\" pulumi-lang-java=\"`logout`\"\u003e`logout`\u003c/span\u003e, `logout-aborted`, `logout-complete`, `mfa-webauthn-change-key-nickname`, `mfa-webauthn-enrollment-success`, `mfa-webauthn-error`, `mfa-webauthn-platform-challenge`, `mfa-webauthn-platform-enrollment`, `mfa-webauthn-roaming-challenge`, `mfa-webauthn-roaming-enrollment`, `reset-password-mfa-webauthn-platform-challenge`, `reset-password-mfa-webauthn-roaming-challenge`, \u003cspan pulumi-lang-nodejs=\"`consent`\" pulumi-lang-dotnet=\"`Consent`\" pulumi-lang-go=\"`consent`\" pulumi-lang-python=\"`consent`\" pulumi-lang-yaml=\"`consent`\" pulumi-lang-java=\"`consent`\"\u003e`consent`\u003c/span\u003e, `customized-consent`, `email-otp-challenge`, `mfa-webauthn-not-available-error`.\n"
                },
                "tenant": {
                    "type": "string",
                    "description": "Tenant ID\n"
                },
                "usePageTemplate": {
                    "type": "boolean",
                    "description": "Use page template with ACUL\n"
                }
            },
            "required": [
                "contextConfigurations",
                "headTags",
                "promptType",
                "screenName",
                "tenant"
            ],
            "inputProperties": {
                "contextConfigurations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Context values to make available\n"
                },
                "defaultHeadTagsDisabled": {
                    "type": "boolean",
                    "description": "Override Universal Login default head tags\n"
                },
                "filters": {
                    "$ref": "#/types/auth0:index/PromptScreenRendererFilters:PromptScreenRendererFilters",
                    "description": "Optional filters to apply rendering rules to specific entities. \u003cspan pulumi-lang-nodejs=\"`matchType`\" pulumi-lang-dotnet=\"`MatchType`\" pulumi-lang-go=\"`matchType`\" pulumi-lang-python=\"`match_type`\" pulumi-lang-yaml=\"`matchType`\" pulumi-lang-java=\"`matchType`\"\u003e`match_type`\u003c/span\u003e and at least one of the entity arrays are required.\n"
                },
                "headTags": {
                    "type": "string",
                    "description": "An array of head tags\n"
                },
                "promptType": {
                    "type": "string",
                    "description": "The prompt that you are configuring settings for. Options are: `signup-id`, `signup-password`, `login-id`, `login-password`, `login-passwordless`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, \u003cspan pulumi-lang-nodejs=\"`passkeys`\" pulumi-lang-dotnet=\"`Passkeys`\" pulumi-lang-go=\"`passkeys`\" pulumi-lang-python=\"`passkeys`\" pulumi-lang-yaml=\"`passkeys`\" pulumi-lang-java=\"`passkeys`\"\u003e`passkeys`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`captcha`\" pulumi-lang-dotnet=\"`Captcha`\" pulumi-lang-go=\"`captcha`\" pulumi-lang-python=\"`captcha`\" pulumi-lang-yaml=\"`captcha`\" pulumi-lang-java=\"`captcha`\"\u003e`captcha`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `reset-password`, \u003cspan pulumi-lang-nodejs=\"`mfa`\" pulumi-lang-dotnet=\"`Mfa`\" pulumi-lang-go=\"`mfa`\" pulumi-lang-python=\"`mfa`\" pulumi-lang-yaml=\"`mfa`\" pulumi-lang-java=\"`mfa`\"\u003e`mfa`\u003c/span\u003e, `mfa-sms`, `mfa-email`, `mfa-push`, \u003cspan pulumi-lang-nodejs=\"`invitation`\" pulumi-lang-dotnet=\"`Invitation`\" pulumi-lang-go=\"`invitation`\" pulumi-lang-python=\"`invitation`\" pulumi-lang-yaml=\"`invitation`\" pulumi-lang-java=\"`invitation`\"\u003e`invitation`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`organizations`\" pulumi-lang-dotnet=\"`Organizations`\" pulumi-lang-go=\"`organizations`\" pulumi-lang-python=\"`organizations`\" pulumi-lang-yaml=\"`organizations`\" pulumi-lang-java=\"`organizations`\"\u003e`organizations`\u003c/span\u003e, `mfa-otp`, `device-flow`, `mfa-phone`, `mfa-voice`, `mfa-recovery-code`, \u003cspan pulumi-lang-nodejs=\"`common`\" pulumi-lang-dotnet=\"`Common`\" pulumi-lang-go=\"`common`\" pulumi-lang-python=\"`common`\" pulumi-lang-yaml=\"`common`\" pulumi-lang-java=\"`common`\"\u003e`common`\u003c/span\u003e, `email-verification`, `login-email-verification`, \u003cspan pulumi-lang-nodejs=\"`logout`\" pulumi-lang-dotnet=\"`Logout`\" pulumi-lang-go=\"`logout`\" pulumi-lang-python=\"`logout`\" pulumi-lang-yaml=\"`logout`\" pulumi-lang-java=\"`logout`\"\u003e`logout`\u003c/span\u003e, `mfa-webauthn`, \u003cspan pulumi-lang-nodejs=\"`consent`\" pulumi-lang-dotnet=\"`Consent`\" pulumi-lang-go=\"`consent`\" pulumi-lang-python=\"`consent`\" pulumi-lang-yaml=\"`consent`\" pulumi-lang-java=\"`consent`\"\u003e`consent`\u003c/span\u003e, `customized-consent`, `email-otp-challenge`.\n"
                },
                "renderingMode": {
                    "type": "string",
                    "description": "Rendering modeOptions are: \u003cspan pulumi-lang-nodejs=\"`standard`\" pulumi-lang-dotnet=\"`Standard`\" pulumi-lang-go=\"`standard`\" pulumi-lang-python=\"`standard`\" pulumi-lang-yaml=\"`standard`\" pulumi-lang-java=\"`standard`\"\u003e`standard`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`advanced`\" pulumi-lang-dotnet=\"`Advanced`\" pulumi-lang-go=\"`advanced`\" pulumi-lang-python=\"`advanced`\" pulumi-lang-yaml=\"`advanced`\" pulumi-lang-java=\"`advanced`\"\u003e`advanced`\u003c/span\u003e.\n"
                },
                "screenName": {
                    "type": "string",
                    "description": "The screen that you are configuring settings for. Options are: `signup-id`, `signup-password`, `login-id`, `login-password`, `login-passwordless-sms-otp`, `login-passwordless-email-code`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, `passkey-enrollment`, `passkey-enrollment-local`, `interstitial-captcha`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `reset-password-request`, `reset-password-email`, `reset-password`, `reset-password-success`, `reset-password-error`, `reset-password-mfa-email-challenge`, `reset-password-mfa-otp-challenge`, `reset-password-mfa-push-challenge-push`, `reset-password-mfa-sms-challenge`, `mfa-detect-browser-capabilities`, `mfa-enroll-result`, `mfa-begin-enroll-options`, `mfa-login-options`, `mfa-country-codes`, `mfa-sms-challenge`, `mfa-sms-enrollment`, `mfa-sms-list`, `mfa-email-challenge`, `mfa-email-list`, `mfa-push-challenge-push`, `mfa-push-enrollment-qr`, `mfa-push-list`, `mfa-push-welcome`, `accept-invitation`, `organization-selection`, `organization-picker`, `mfa-otp-challenge`, `mfa-otp-enrollment-code`, `mfa-otp-enrollment-qr`, `device-code-activation`, `device-code-activation-allowed`, `device-code-activation-denied`, `device-code-confirmation`, `mfa-phone-challenge`, `mfa-phone-enrollment`, `mfa-voice-challenge`, `mfa-voice-enrollment`, `reset-password-mfa-phone-challenge`, `reset-password-mfa-voice-challenge`, `mfa-recovery-code-challenge`, `mfa-recovery-code-enrollment`, `reset-password-mfa-recovery-code-challenge`, `redeem-ticket`, `mfa-recovery-code-challenge-new-code`, `email-verification-result`, `login-email-verification`, \u003cspan pulumi-lang-nodejs=\"`logout`\" pulumi-lang-dotnet=\"`Logout`\" pulumi-lang-go=\"`logout`\" pulumi-lang-python=\"`logout`\" pulumi-lang-yaml=\"`logout`\" pulumi-lang-java=\"`logout`\"\u003e`logout`\u003c/span\u003e, `logout-aborted`, `logout-complete`, `mfa-webauthn-change-key-nickname`, `mfa-webauthn-enrollment-success`, `mfa-webauthn-error`, `mfa-webauthn-platform-challenge`, `mfa-webauthn-platform-enrollment`, `mfa-webauthn-roaming-challenge`, `mfa-webauthn-roaming-enrollment`, `reset-password-mfa-webauthn-platform-challenge`, `reset-password-mfa-webauthn-roaming-challenge`, \u003cspan pulumi-lang-nodejs=\"`consent`\" pulumi-lang-dotnet=\"`Consent`\" pulumi-lang-go=\"`consent`\" pulumi-lang-python=\"`consent`\" pulumi-lang-yaml=\"`consent`\" pulumi-lang-java=\"`consent`\"\u003e`consent`\u003c/span\u003e, `customized-consent`, `email-otp-challenge`, `mfa-webauthn-not-available-error`.\n"
                },
                "usePageTemplate": {
                    "type": "boolean",
                    "description": "Use page template with ACUL\n"
                }
            },
            "requiredInputs": [
                "promptType",
                "screenName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PromptScreenRenderer resources.\n",
                "properties": {
                    "contextConfigurations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Context values to make available\n"
                    },
                    "defaultHeadTagsDisabled": {
                        "type": "boolean",
                        "description": "Override Universal Login default head tags\n"
                    },
                    "filters": {
                        "$ref": "#/types/auth0:index/PromptScreenRendererFilters:PromptScreenRendererFilters",
                        "description": "Optional filters to apply rendering rules to specific entities. \u003cspan pulumi-lang-nodejs=\"`matchType`\" pulumi-lang-dotnet=\"`MatchType`\" pulumi-lang-go=\"`matchType`\" pulumi-lang-python=\"`match_type`\" pulumi-lang-yaml=\"`matchType`\" pulumi-lang-java=\"`matchType`\"\u003e`match_type`\u003c/span\u003e and at least one of the entity arrays are required.\n"
                    },
                    "headTags": {
                        "type": "string",
                        "description": "An array of head tags\n"
                    },
                    "promptType": {
                        "type": "string",
                        "description": "The prompt that you are configuring settings for. Options are: `signup-id`, `signup-password`, `login-id`, `login-password`, `login-passwordless`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, \u003cspan pulumi-lang-nodejs=\"`passkeys`\" pulumi-lang-dotnet=\"`Passkeys`\" pulumi-lang-go=\"`passkeys`\" pulumi-lang-python=\"`passkeys`\" pulumi-lang-yaml=\"`passkeys`\" pulumi-lang-java=\"`passkeys`\"\u003e`passkeys`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`captcha`\" pulumi-lang-dotnet=\"`Captcha`\" pulumi-lang-go=\"`captcha`\" pulumi-lang-python=\"`captcha`\" pulumi-lang-yaml=\"`captcha`\" pulumi-lang-java=\"`captcha`\"\u003e`captcha`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `reset-password`, \u003cspan pulumi-lang-nodejs=\"`mfa`\" pulumi-lang-dotnet=\"`Mfa`\" pulumi-lang-go=\"`mfa`\" pulumi-lang-python=\"`mfa`\" pulumi-lang-yaml=\"`mfa`\" pulumi-lang-java=\"`mfa`\"\u003e`mfa`\u003c/span\u003e, `mfa-sms`, `mfa-email`, `mfa-push`, \u003cspan pulumi-lang-nodejs=\"`invitation`\" pulumi-lang-dotnet=\"`Invitation`\" pulumi-lang-go=\"`invitation`\" pulumi-lang-python=\"`invitation`\" pulumi-lang-yaml=\"`invitation`\" pulumi-lang-java=\"`invitation`\"\u003e`invitation`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`organizations`\" pulumi-lang-dotnet=\"`Organizations`\" pulumi-lang-go=\"`organizations`\" pulumi-lang-python=\"`organizations`\" pulumi-lang-yaml=\"`organizations`\" pulumi-lang-java=\"`organizations`\"\u003e`organizations`\u003c/span\u003e, `mfa-otp`, `device-flow`, `mfa-phone`, `mfa-voice`, `mfa-recovery-code`, \u003cspan pulumi-lang-nodejs=\"`common`\" pulumi-lang-dotnet=\"`Common`\" pulumi-lang-go=\"`common`\" pulumi-lang-python=\"`common`\" pulumi-lang-yaml=\"`common`\" pulumi-lang-java=\"`common`\"\u003e`common`\u003c/span\u003e, `email-verification`, `login-email-verification`, \u003cspan pulumi-lang-nodejs=\"`logout`\" pulumi-lang-dotnet=\"`Logout`\" pulumi-lang-go=\"`logout`\" pulumi-lang-python=\"`logout`\" pulumi-lang-yaml=\"`logout`\" pulumi-lang-java=\"`logout`\"\u003e`logout`\u003c/span\u003e, `mfa-webauthn`, \u003cspan pulumi-lang-nodejs=\"`consent`\" pulumi-lang-dotnet=\"`Consent`\" pulumi-lang-go=\"`consent`\" pulumi-lang-python=\"`consent`\" pulumi-lang-yaml=\"`consent`\" pulumi-lang-java=\"`consent`\"\u003e`consent`\u003c/span\u003e, `customized-consent`, `email-otp-challenge`.\n"
                    },
                    "renderingMode": {
                        "type": "string",
                        "description": "Rendering modeOptions are: \u003cspan pulumi-lang-nodejs=\"`standard`\" pulumi-lang-dotnet=\"`Standard`\" pulumi-lang-go=\"`standard`\" pulumi-lang-python=\"`standard`\" pulumi-lang-yaml=\"`standard`\" pulumi-lang-java=\"`standard`\"\u003e`standard`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`advanced`\" pulumi-lang-dotnet=\"`Advanced`\" pulumi-lang-go=\"`advanced`\" pulumi-lang-python=\"`advanced`\" pulumi-lang-yaml=\"`advanced`\" pulumi-lang-java=\"`advanced`\"\u003e`advanced`\u003c/span\u003e.\n"
                    },
                    "screenName": {
                        "type": "string",
                        "description": "The screen that you are configuring settings for. Options are: `signup-id`, `signup-password`, `login-id`, `login-password`, `login-passwordless-sms-otp`, `login-passwordless-email-code`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, `passkey-enrollment`, `passkey-enrollment-local`, `interstitial-captcha`, \u003cspan pulumi-lang-nodejs=\"`login`\" pulumi-lang-dotnet=\"`Login`\" pulumi-lang-go=\"`login`\" pulumi-lang-python=\"`login`\" pulumi-lang-yaml=\"`login`\" pulumi-lang-java=\"`login`\"\u003e`login`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`signup`\" pulumi-lang-dotnet=\"`Signup`\" pulumi-lang-go=\"`signup`\" pulumi-lang-python=\"`signup`\" pulumi-lang-yaml=\"`signup`\" pulumi-lang-java=\"`signup`\"\u003e`signup`\u003c/span\u003e, `reset-password-request`, `reset-password-email`, `reset-password`, `reset-password-success`, `reset-password-error`, `reset-password-mfa-email-challenge`, `reset-password-mfa-otp-challenge`, `reset-password-mfa-push-challenge-push`, `reset-password-mfa-sms-challenge`, `mfa-detect-browser-capabilities`, `mfa-enroll-result`, `mfa-begin-enroll-options`, `mfa-login-options`, `mfa-country-codes`, `mfa-sms-challenge`, `mfa-sms-enrollment`, `mfa-sms-list`, `mfa-email-challenge`, `mfa-email-list`, `mfa-push-challenge-push`, `mfa-push-enrollment-qr`, `mfa-push-list`, `mfa-push-welcome`, `accept-invitation`, `organization-selection`, `organization-picker`, `mfa-otp-challenge`, `mfa-otp-enrollment-code`, `mfa-otp-enrollment-qr`, `device-code-activation`, `device-code-activation-allowed`, `device-code-activation-denied`, `device-code-confirmation`, `mfa-phone-challenge`, `mfa-phone-enrollment`, `mfa-voice-challenge`, `mfa-voice-enrollment`, `reset-password-mfa-phone-challenge`, `reset-password-mfa-voice-challenge`, `mfa-recovery-code-challenge`, `mfa-recovery-code-enrollment`, `reset-password-mfa-recovery-code-challenge`, `redeem-ticket`, `mfa-recovery-code-challenge-new-code`, `email-verification-result`, `login-email-verification`, \u003cspan pulumi-lang-nodejs=\"`logout`\" pulumi-lang-dotnet=\"`Logout`\" pulumi-lang-go=\"`logout`\" pulumi-lang-python=\"`logout`\" pulumi-lang-yaml=\"`logout`\" pulumi-lang-java=\"`logout`\"\u003e`logout`\u003c/span\u003e, `logout-aborted`, `logout-complete`, `mfa-webauthn-change-key-nickname`, `mfa-webauthn-enrollment-success`, `mfa-webauthn-error`, `mfa-webauthn-platform-challenge`, `mfa-webauthn-platform-enrollment`, `mfa-webauthn-roaming-challenge`, `mfa-webauthn-roaming-enrollment`, `reset-password-mfa-webauthn-platform-challenge`, `reset-password-mfa-webauthn-roaming-challenge`, \u003cspan pulumi-lang-nodejs=\"`consent`\" pulumi-lang-dotnet=\"`Consent`\" pulumi-lang-go=\"`consent`\" pulumi-lang-python=\"`consent`\" pulumi-lang-yaml=\"`consent`\" pulumi-lang-java=\"`consent`\"\u003e`consent`\u003c/span\u003e, `customized-consent`, `email-otp-challenge`, `mfa-webauthn-not-available-error`.\n"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "Tenant ID\n"
                    },
                    "usePageTemplate": {
                        "type": "boolean",
                        "description": "Use page template with ACUL\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/resourceServer:ResourceServer": {
            "description": "With this resource, you can set up APIs that can be consumed from your authorized applications.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myResourceServer = new auth0.ResourceServer(\"my_resource_server\", {\n    name: \"Example Resource Server (Managed by Terraform)\",\n    identifier: \"https://api.example.com\",\n    signingAlg: \"RS256\",\n    allowOfflineAccess: true,\n    tokenLifetime: 8600,\n    skipConsentForVerifiableFirstPartyClients: true,\n    consentPolicy: \"transactional-authorization-with-mfa\",\n    tokenEncryption: {\n        format: \"compact-nested-jwe\",\n        encryptionKey: {\n            name: \"keyname\",\n            algorithm: \"RSA-OAEP-256\",\n            pem: `-----BEGIN CERTIFICATE-----\nMIIFWDCCA0ACCQDXqpBo3R...G9w0BAQsFADBuMQswCQYDVQQGEwJl\n-----END CERTIFICATE-----\n`,\n        },\n    },\n    authorizationDetails: [\n        {\n            type: \"payment\",\n        },\n        {\n            type: \"non-payment\",\n        },\n    ],\n    proofOfPossession: {\n        mechanism: \"mtls\",\n        required: true,\n    },\n    subjectTypeAuthorization: {\n        user: {\n            policy: \"allow_all\",\n        },\n        client: {\n            policy: \"require_client_grant\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_resource_server = auth0.ResourceServer(\"my_resource_server\",\n    name=\"Example Resource Server (Managed by Terraform)\",\n    identifier=\"https://api.example.com\",\n    signing_alg=\"RS256\",\n    allow_offline_access=True,\n    token_lifetime=8600,\n    skip_consent_for_verifiable_first_party_clients=True,\n    consent_policy=\"transactional-authorization-with-mfa\",\n    token_encryption={\n        \"format\": \"compact-nested-jwe\",\n        \"encryption_key\": {\n            \"name\": \"keyname\",\n            \"algorithm\": \"RSA-OAEP-256\",\n            \"pem\": \"\"\"-----BEGIN CERTIFICATE-----\nMIIFWDCCA0ACCQDXqpBo3R...G9w0BAQsFADBuMQswCQYDVQQGEwJl\n-----END CERTIFICATE-----\n\"\"\",\n        },\n    },\n    authorization_details=[\n        {\n            \"type\": \"payment\",\n        },\n        {\n            \"type\": \"non-payment\",\n        },\n    ],\n    proof_of_possession={\n        \"mechanism\": \"mtls\",\n        \"required\": True,\n    },\n    subject_type_authorization={\n        \"user\": {\n            \"policy\": \"allow_all\",\n        },\n        \"client\": {\n            \"policy\": \"require_client_grant\",\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myResourceServer = new Auth0.ResourceServer(\"my_resource_server\", new()\n    {\n        Name = \"Example Resource Server (Managed by Terraform)\",\n        Identifier = \"https://api.example.com\",\n        SigningAlg = \"RS256\",\n        AllowOfflineAccess = true,\n        TokenLifetime = 8600,\n        SkipConsentForVerifiableFirstPartyClients = true,\n        ConsentPolicy = \"transactional-authorization-with-mfa\",\n        TokenEncryption = new Auth0.Inputs.ResourceServerTokenEncryptionArgs\n        {\n            Format = \"compact-nested-jwe\",\n            EncryptionKey = new Auth0.Inputs.ResourceServerTokenEncryptionEncryptionKeyArgs\n            {\n                Name = \"keyname\",\n                Algorithm = \"RSA-OAEP-256\",\n                Pem = @\"-----BEGIN CERTIFICATE-----\nMIIFWDCCA0ACCQDXqpBo3R...G9w0BAQsFADBuMQswCQYDVQQGEwJl\n-----END CERTIFICATE-----\n\",\n            },\n        },\n        AuthorizationDetails = new[]\n        {\n            new Auth0.Inputs.ResourceServerAuthorizationDetailArgs\n            {\n                Type = \"payment\",\n            },\n            new Auth0.Inputs.ResourceServerAuthorizationDetailArgs\n            {\n                Type = \"non-payment\",\n            },\n        },\n        ProofOfPossession = new Auth0.Inputs.ResourceServerProofOfPossessionArgs\n        {\n            Mechanism = \"mtls\",\n            Required = true,\n        },\n        SubjectTypeAuthorization = new Auth0.Inputs.ResourceServerSubjectTypeAuthorizationArgs\n        {\n            User = new Auth0.Inputs.ResourceServerSubjectTypeAuthorizationUserArgs\n            {\n                Policy = \"allow_all\",\n            },\n            Client = new Auth0.Inputs.ResourceServerSubjectTypeAuthorizationClientArgs\n            {\n                Policy = \"require_client_grant\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewResourceServer(ctx, \"my_resource_server\", \u0026auth0.ResourceServerArgs{\n\t\t\tName:               pulumi.String(\"Example Resource Server (Managed by Terraform)\"),\n\t\t\tIdentifier:         pulumi.String(\"https://api.example.com\"),\n\t\t\tSigningAlg:         pulumi.String(\"RS256\"),\n\t\t\tAllowOfflineAccess: pulumi.Bool(true),\n\t\t\tTokenLifetime:      pulumi.Int(8600),\n\t\t\tSkipConsentForVerifiableFirstPartyClients: pulumi.Bool(true),\n\t\t\tConsentPolicy: pulumi.String(\"transactional-authorization-with-mfa\"),\n\t\t\tTokenEncryption: \u0026auth0.ResourceServerTokenEncryptionArgs{\n\t\t\t\tFormat: pulumi.String(\"compact-nested-jwe\"),\n\t\t\t\tEncryptionKey: \u0026auth0.ResourceServerTokenEncryptionEncryptionKeyArgs{\n\t\t\t\t\tName:      pulumi.String(\"keyname\"),\n\t\t\t\t\tAlgorithm: pulumi.String(\"RSA-OAEP-256\"),\n\t\t\t\t\tPem:       pulumi.String(\"-----BEGIN CERTIFICATE-----\\nMIIFWDCCA0ACCQDXqpBo3R...G9w0BAQsFADBuMQswCQYDVQQGEwJl\\n-----END CERTIFICATE-----\\n\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAuthorizationDetails: auth0.ResourceServerAuthorizationDetailArray{\n\t\t\t\t\u0026auth0.ResourceServerAuthorizationDetailArgs{\n\t\t\t\t\tType: pulumi.String(\"payment\"),\n\t\t\t\t},\n\t\t\t\t\u0026auth0.ResourceServerAuthorizationDetailArgs{\n\t\t\t\t\tType: pulumi.String(\"non-payment\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tProofOfPossession: \u0026auth0.ResourceServerProofOfPossessionArgs{\n\t\t\t\tMechanism: pulumi.String(\"mtls\"),\n\t\t\t\tRequired:  pulumi.Bool(true),\n\t\t\t},\n\t\t\tSubjectTypeAuthorization: \u0026auth0.ResourceServerSubjectTypeAuthorizationArgs{\n\t\t\t\tUser: \u0026auth0.ResourceServerSubjectTypeAuthorizationUserArgs{\n\t\t\t\t\tPolicy: pulumi.String(\"allow_all\"),\n\t\t\t\t},\n\t\t\t\tClient: \u0026auth0.ResourceServerSubjectTypeAuthorizationClientArgs{\n\t\t\t\t\tPolicy: pulumi.String(\"require_client_grant\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.ResourceServer;\nimport com.pulumi.auth0.ResourceServerArgs;\nimport com.pulumi.auth0.inputs.ResourceServerTokenEncryptionArgs;\nimport com.pulumi.auth0.inputs.ResourceServerTokenEncryptionEncryptionKeyArgs;\nimport com.pulumi.auth0.inputs.ResourceServerAuthorizationDetailArgs;\nimport com.pulumi.auth0.inputs.ResourceServerProofOfPossessionArgs;\nimport com.pulumi.auth0.inputs.ResourceServerSubjectTypeAuthorizationArgs;\nimport com.pulumi.auth0.inputs.ResourceServerSubjectTypeAuthorizationUserArgs;\nimport com.pulumi.auth0.inputs.ResourceServerSubjectTypeAuthorizationClientArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myResourceServer = new ResourceServer(\"myResourceServer\", ResourceServerArgs.builder()\n            .name(\"Example Resource Server (Managed by Terraform)\")\n            .identifier(\"https://api.example.com\")\n            .signingAlg(\"RS256\")\n            .allowOfflineAccess(true)\n            .tokenLifetime(8600)\n            .skipConsentForVerifiableFirstPartyClients(true)\n            .consentPolicy(\"transactional-authorization-with-mfa\")\n            .tokenEncryption(ResourceServerTokenEncryptionArgs.builder()\n                .format(\"compact-nested-jwe\")\n                .encryptionKey(ResourceServerTokenEncryptionEncryptionKeyArgs.builder()\n                    .name(\"keyname\")\n                    .algorithm(\"RSA-OAEP-256\")\n                    .pem(\"\"\"\n-----BEGIN CERTIFICATE-----\nMIIFWDCCA0ACCQDXqpBo3R...G9w0BAQsFADBuMQswCQYDVQQGEwJl\n-----END CERTIFICATE-----\n                    \"\"\")\n                    .build())\n                .build())\n            .authorizationDetails(            \n                ResourceServerAuthorizationDetailArgs.builder()\n                    .type(\"payment\")\n                    .build(),\n                ResourceServerAuthorizationDetailArgs.builder()\n                    .type(\"non-payment\")\n                    .build())\n            .proofOfPossession(ResourceServerProofOfPossessionArgs.builder()\n                .mechanism(\"mtls\")\n                .required(true)\n                .build())\n            .subjectTypeAuthorization(ResourceServerSubjectTypeAuthorizationArgs.builder()\n                .user(ResourceServerSubjectTypeAuthorizationUserArgs.builder()\n                    .policy(\"allow_all\")\n                    .build())\n                .client(ResourceServerSubjectTypeAuthorizationClientArgs.builder()\n                    .policy(\"require_client_grant\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myResourceServer:\n    type: auth0:ResourceServer\n    name: my_resource_server\n    properties:\n      name: Example Resource Server (Managed by Terraform)\n      identifier: https://api.example.com\n      signingAlg: RS256\n      allowOfflineAccess: true\n      tokenLifetime: 8600\n      skipConsentForVerifiableFirstPartyClients: true\n      consentPolicy: transactional-authorization-with-mfa\n      tokenEncryption:\n        format: compact-nested-jwe\n        encryptionKey:\n          name: keyname\n          algorithm: RSA-OAEP-256\n          pem: |\n            -----BEGIN CERTIFICATE-----\n            MIIFWDCCA0ACCQDXqpBo3R...G9w0BAQsFADBuMQswCQYDVQQGEwJl\n            -----END CERTIFICATE-----\n      authorizationDetails:\n        - type: payment\n        - type: non-payment\n      proofOfPossession:\n        mechanism: mtls\n        required: true\n      subjectTypeAuthorization:\n        user:\n          policy: allow_all\n        client:\n          policy: require_client_grant\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nExisting resource servers can be imported using their ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/resourceServer:ResourceServer my_resource_server \"XXXXXXXXXXXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "allowOfflineAccess": {
                    "type": "boolean",
                    "description": "Indicates whether refresh tokens can be issued for this resource server.\n"
                },
                "authorizationDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ResourceServerAuthorizationDetail:ResourceServerAuthorizationDetail"
                    },
                    "description": "Authorization details for this resource server.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The ID of the client associated with this resource server. If a client has been created and linked to this resource server, this field will be populated with that client's ID.\n"
                },
                "consentPolicy": {
                    "type": "string",
                    "description": "Consent policy for this resource server. Options include `transactional-authorization-with-mfa`, or \u003cspan pulumi-lang-nodejs=\"`null`\" pulumi-lang-dotnet=\"`Null`\" pulumi-lang-go=\"`null`\" pulumi-lang-python=\"`null`\" pulumi-lang-yaml=\"`null`\" pulumi-lang-java=\"`null`\"\u003e`null`\u003c/span\u003e to disable.\n"
                },
                "enforcePolicies": {
                    "type": "boolean",
                    "description": "If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "Unique identifier for the resource server. Used as the audience parameter for authorization calls. Cannot be changed once set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name for the resource server. Cannot include `\u003c` or `\u003e` characters.\n"
                },
                "proofOfPossession": {
                    "$ref": "#/types/auth0:index/ResourceServerProofOfPossession:ResourceServerProofOfPossession",
                    "description": "Configuration settings for proof-of-possession for this resource server.\n"
                },
                "signingAlg": {
                    "type": "string",
                    "description": "Algorithm used to sign JWTs. Options include `HS256`, `RS256`, and `PS256`.\n"
                },
                "signingSecret": {
                    "type": "string",
                    "description": "Secret used to sign tokens when using symmetric algorithms (HS256).\n"
                },
                "skipConsentForVerifiableFirstPartyClients": {
                    "type": "boolean",
                    "description": "Indicates whether to skip user consent for applications flagged as first party.\n"
                },
                "subjectTypeAuthorization": {
                    "$ref": "#/types/auth0:index/ResourceServerSubjectTypeAuthorization:ResourceServerSubjectTypeAuthorization",
                    "description": "Authorization policies for user and client flows.\n"
                },
                "tokenDialect": {
                    "type": "string",
                    "description": "Dialect of access tokens that should be issued for this resource server. Options include \u003cspan pulumi-lang-nodejs=\"`accessToken`\" pulumi-lang-dotnet=\"`AccessToken`\" pulumi-lang-go=\"`accessToken`\" pulumi-lang-python=\"`access_token`\" pulumi-lang-yaml=\"`accessToken`\" pulumi-lang-java=\"`accessToken`\"\u003e`access_token`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rfc9068Profile`\" pulumi-lang-dotnet=\"`Rfc9068Profile`\" pulumi-lang-go=\"`rfc9068Profile`\" pulumi-lang-python=\"`rfc9068_profile`\" pulumi-lang-yaml=\"`rfc9068Profile`\" pulumi-lang-java=\"`rfc9068Profile`\"\u003e`rfc9068_profile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`accessTokenAuthz`\" pulumi-lang-dotnet=\"`AccessTokenAuthz`\" pulumi-lang-go=\"`accessTokenAuthz`\" pulumi-lang-python=\"`access_token_authz`\" pulumi-lang-yaml=\"`accessTokenAuthz`\" pulumi-lang-java=\"`accessTokenAuthz`\"\u003e`access_token_authz`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`rfc9068ProfileAuthz`\" pulumi-lang-dotnet=\"`Rfc9068ProfileAuthz`\" pulumi-lang-go=\"`rfc9068ProfileAuthz`\" pulumi-lang-python=\"`rfc9068_profile_authz`\" pulumi-lang-yaml=\"`rfc9068ProfileAuthz`\" pulumi-lang-java=\"`rfc9068ProfileAuthz`\"\u003e`rfc9068_profile_authz`\u003c/span\u003e. \u003cspan pulumi-lang-nodejs=\"`accessToken`\" pulumi-lang-dotnet=\"`AccessToken`\" pulumi-lang-go=\"`accessToken`\" pulumi-lang-python=\"`access_token`\" pulumi-lang-yaml=\"`accessToken`\" pulumi-lang-java=\"`accessToken`\"\u003e`access_token`\u003c/span\u003e is a JWT containing standard Auth0 claims. \u003cspan pulumi-lang-nodejs=\"`rfc9068Profile`\" pulumi-lang-dotnet=\"`Rfc9068Profile`\" pulumi-lang-go=\"`rfc9068Profile`\" pulumi-lang-python=\"`rfc9068_profile`\" pulumi-lang-yaml=\"`rfc9068Profile`\" pulumi-lang-java=\"`rfc9068Profile`\"\u003e`rfc9068_profile`\u003c/span\u003e is a JWT conforming to the IETF JWT Access Token Profile. \u003cspan pulumi-lang-nodejs=\"`accessTokenAuthz`\" pulumi-lang-dotnet=\"`AccessTokenAuthz`\" pulumi-lang-go=\"`accessTokenAuthz`\" pulumi-lang-python=\"`access_token_authz`\" pulumi-lang-yaml=\"`accessTokenAuthz`\" pulumi-lang-java=\"`accessTokenAuthz`\"\u003e`access_token_authz`\u003c/span\u003e is a JWT containing standard Auth0 claims, including RBAC permissions claims. \u003cspan pulumi-lang-nodejs=\"`rfc9068ProfileAuthz`\" pulumi-lang-dotnet=\"`Rfc9068ProfileAuthz`\" pulumi-lang-go=\"`rfc9068ProfileAuthz`\" pulumi-lang-python=\"`rfc9068_profile_authz`\" pulumi-lang-yaml=\"`rfc9068ProfileAuthz`\" pulumi-lang-java=\"`rfc9068ProfileAuthz`\"\u003e`rfc9068_profile_authz`\u003c/span\u003e is a JWT conforming to the IETF JWT Access Token Profile, including RBAC permissions claims. RBAC permissions claims are available if RBAC (\u003cspan pulumi-lang-nodejs=\"`enforcePolicies`\" pulumi-lang-dotnet=\"`EnforcePolicies`\" pulumi-lang-go=\"`enforcePolicies`\" pulumi-lang-python=\"`enforce_policies`\" pulumi-lang-yaml=\"`enforcePolicies`\" pulumi-lang-java=\"`enforcePolicies`\"\u003e`enforce_policies`\u003c/span\u003e) is enabled for this API. For more details, refer to [Access Token Profiles](https://auth0.com/docs/secure/tokens/access-tokens/access-token-profiles).\n"
                },
                "tokenEncryption": {
                    "$ref": "#/types/auth0:index/ResourceServerTokenEncryption:ResourceServerTokenEncryption",
                    "description": "Configuration for JSON Web Encryption(JWE) of tokens for this resource server.\n"
                },
                "tokenLifetime": {
                    "type": "integer",
                    "description": "Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.\n"
                },
                "tokenLifetimeForWeb": {
                    "type": "integer",
                    "description": "Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the \u003cspan pulumi-lang-nodejs=\"`tokenLifetime`\" pulumi-lang-dotnet=\"`TokenLifetime`\" pulumi-lang-go=\"`tokenLifetime`\" pulumi-lang-python=\"`token_lifetime`\" pulumi-lang-yaml=\"`tokenLifetime`\" pulumi-lang-java=\"`tokenLifetime`\"\u003e`token_lifetime`\u003c/span\u003e value.\n"
                },
                "verificationLocation": {
                    "type": "string",
                    "description": "URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.\n"
                }
            },
            "required": [
                "authorizationDetails",
                "clientId",
                "consentPolicy",
                "enforcePolicies",
                "identifier",
                "name",
                "proofOfPossession",
                "signingAlg",
                "signingSecret",
                "skipConsentForVerifiableFirstPartyClients",
                "subjectTypeAuthorization",
                "tokenDialect",
                "tokenEncryption",
                "tokenLifetime",
                "tokenLifetimeForWeb"
            ],
            "inputProperties": {
                "allowOfflineAccess": {
                    "type": "boolean",
                    "description": "Indicates whether refresh tokens can be issued for this resource server.\n"
                },
                "authorizationDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ResourceServerAuthorizationDetail:ResourceServerAuthorizationDetail"
                    },
                    "description": "Authorization details for this resource server.\n"
                },
                "consentPolicy": {
                    "type": "string",
                    "description": "Consent policy for this resource server. Options include `transactional-authorization-with-mfa`, or \u003cspan pulumi-lang-nodejs=\"`null`\" pulumi-lang-dotnet=\"`Null`\" pulumi-lang-go=\"`null`\" pulumi-lang-python=\"`null`\" pulumi-lang-yaml=\"`null`\" pulumi-lang-java=\"`null`\"\u003e`null`\u003c/span\u003e to disable.\n"
                },
                "enforcePolicies": {
                    "type": "boolean",
                    "description": "If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "Unique identifier for the resource server. Used as the audience parameter for authorization calls. Cannot be changed once set.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Friendly name for the resource server. Cannot include `\u003c` or `\u003e` characters.\n"
                },
                "proofOfPossession": {
                    "$ref": "#/types/auth0:index/ResourceServerProofOfPossession:ResourceServerProofOfPossession",
                    "description": "Configuration settings for proof-of-possession for this resource server.\n"
                },
                "signingAlg": {
                    "type": "string",
                    "description": "Algorithm used to sign JWTs. Options include `HS256`, `RS256`, and `PS256`.\n"
                },
                "signingSecret": {
                    "type": "string",
                    "description": "Secret used to sign tokens when using symmetric algorithms (HS256).\n"
                },
                "skipConsentForVerifiableFirstPartyClients": {
                    "type": "boolean",
                    "description": "Indicates whether to skip user consent for applications flagged as first party.\n"
                },
                "subjectTypeAuthorization": {
                    "$ref": "#/types/auth0:index/ResourceServerSubjectTypeAuthorization:ResourceServerSubjectTypeAuthorization",
                    "description": "Authorization policies for user and client flows.\n"
                },
                "tokenDialect": {
                    "type": "string",
                    "description": "Dialect of access tokens that should be issued for this resource server. Options include \u003cspan pulumi-lang-nodejs=\"`accessToken`\" pulumi-lang-dotnet=\"`AccessToken`\" pulumi-lang-go=\"`accessToken`\" pulumi-lang-python=\"`access_token`\" pulumi-lang-yaml=\"`accessToken`\" pulumi-lang-java=\"`accessToken`\"\u003e`access_token`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rfc9068Profile`\" pulumi-lang-dotnet=\"`Rfc9068Profile`\" pulumi-lang-go=\"`rfc9068Profile`\" pulumi-lang-python=\"`rfc9068_profile`\" pulumi-lang-yaml=\"`rfc9068Profile`\" pulumi-lang-java=\"`rfc9068Profile`\"\u003e`rfc9068_profile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`accessTokenAuthz`\" pulumi-lang-dotnet=\"`AccessTokenAuthz`\" pulumi-lang-go=\"`accessTokenAuthz`\" pulumi-lang-python=\"`access_token_authz`\" pulumi-lang-yaml=\"`accessTokenAuthz`\" pulumi-lang-java=\"`accessTokenAuthz`\"\u003e`access_token_authz`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`rfc9068ProfileAuthz`\" pulumi-lang-dotnet=\"`Rfc9068ProfileAuthz`\" pulumi-lang-go=\"`rfc9068ProfileAuthz`\" pulumi-lang-python=\"`rfc9068_profile_authz`\" pulumi-lang-yaml=\"`rfc9068ProfileAuthz`\" pulumi-lang-java=\"`rfc9068ProfileAuthz`\"\u003e`rfc9068_profile_authz`\u003c/span\u003e. \u003cspan pulumi-lang-nodejs=\"`accessToken`\" pulumi-lang-dotnet=\"`AccessToken`\" pulumi-lang-go=\"`accessToken`\" pulumi-lang-python=\"`access_token`\" pulumi-lang-yaml=\"`accessToken`\" pulumi-lang-java=\"`accessToken`\"\u003e`access_token`\u003c/span\u003e is a JWT containing standard Auth0 claims. \u003cspan pulumi-lang-nodejs=\"`rfc9068Profile`\" pulumi-lang-dotnet=\"`Rfc9068Profile`\" pulumi-lang-go=\"`rfc9068Profile`\" pulumi-lang-python=\"`rfc9068_profile`\" pulumi-lang-yaml=\"`rfc9068Profile`\" pulumi-lang-java=\"`rfc9068Profile`\"\u003e`rfc9068_profile`\u003c/span\u003e is a JWT conforming to the IETF JWT Access Token Profile. \u003cspan pulumi-lang-nodejs=\"`accessTokenAuthz`\" pulumi-lang-dotnet=\"`AccessTokenAuthz`\" pulumi-lang-go=\"`accessTokenAuthz`\" pulumi-lang-python=\"`access_token_authz`\" pulumi-lang-yaml=\"`accessTokenAuthz`\" pulumi-lang-java=\"`accessTokenAuthz`\"\u003e`access_token_authz`\u003c/span\u003e is a JWT containing standard Auth0 claims, including RBAC permissions claims. \u003cspan pulumi-lang-nodejs=\"`rfc9068ProfileAuthz`\" pulumi-lang-dotnet=\"`Rfc9068ProfileAuthz`\" pulumi-lang-go=\"`rfc9068ProfileAuthz`\" pulumi-lang-python=\"`rfc9068_profile_authz`\" pulumi-lang-yaml=\"`rfc9068ProfileAuthz`\" pulumi-lang-java=\"`rfc9068ProfileAuthz`\"\u003e`rfc9068_profile_authz`\u003c/span\u003e is a JWT conforming to the IETF JWT Access Token Profile, including RBAC permissions claims. RBAC permissions claims are available if RBAC (\u003cspan pulumi-lang-nodejs=\"`enforcePolicies`\" pulumi-lang-dotnet=\"`EnforcePolicies`\" pulumi-lang-go=\"`enforcePolicies`\" pulumi-lang-python=\"`enforce_policies`\" pulumi-lang-yaml=\"`enforcePolicies`\" pulumi-lang-java=\"`enforcePolicies`\"\u003e`enforce_policies`\u003c/span\u003e) is enabled for this API. For more details, refer to [Access Token Profiles](https://auth0.com/docs/secure/tokens/access-tokens/access-token-profiles).\n"
                },
                "tokenEncryption": {
                    "$ref": "#/types/auth0:index/ResourceServerTokenEncryption:ResourceServerTokenEncryption",
                    "description": "Configuration for JSON Web Encryption(JWE) of tokens for this resource server.\n"
                },
                "tokenLifetime": {
                    "type": "integer",
                    "description": "Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.\n"
                },
                "tokenLifetimeForWeb": {
                    "type": "integer",
                    "description": "Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the \u003cspan pulumi-lang-nodejs=\"`tokenLifetime`\" pulumi-lang-dotnet=\"`TokenLifetime`\" pulumi-lang-go=\"`tokenLifetime`\" pulumi-lang-python=\"`token_lifetime`\" pulumi-lang-yaml=\"`tokenLifetime`\" pulumi-lang-java=\"`tokenLifetime`\"\u003e`token_lifetime`\u003c/span\u003e value.\n"
                },
                "verificationLocation": {
                    "type": "string",
                    "description": "URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.\n"
                }
            },
            "requiredInputs": [
                "identifier"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceServer resources.\n",
                "properties": {
                    "allowOfflineAccess": {
                        "type": "boolean",
                        "description": "Indicates whether refresh tokens can be issued for this resource server.\n"
                    },
                    "authorizationDetails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/ResourceServerAuthorizationDetail:ResourceServerAuthorizationDetail"
                        },
                        "description": "Authorization details for this resource server.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "The ID of the client associated with this resource server. If a client has been created and linked to this resource server, this field will be populated with that client's ID.\n"
                    },
                    "consentPolicy": {
                        "type": "string",
                        "description": "Consent policy for this resource server. Options include `transactional-authorization-with-mfa`, or \u003cspan pulumi-lang-nodejs=\"`null`\" pulumi-lang-dotnet=\"`Null`\" pulumi-lang-go=\"`null`\" pulumi-lang-python=\"`null`\" pulumi-lang-yaml=\"`null`\" pulumi-lang-java=\"`null`\"\u003e`null`\u003c/span\u003e to disable.\n"
                    },
                    "enforcePolicies": {
                        "type": "boolean",
                        "description": "If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "Unique identifier for the resource server. Used as the audience parameter for authorization calls. Cannot be changed once set.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Friendly name for the resource server. Cannot include `\u003c` or `\u003e` characters.\n"
                    },
                    "proofOfPossession": {
                        "$ref": "#/types/auth0:index/ResourceServerProofOfPossession:ResourceServerProofOfPossession",
                        "description": "Configuration settings for proof-of-possession for this resource server.\n"
                    },
                    "signingAlg": {
                        "type": "string",
                        "description": "Algorithm used to sign JWTs. Options include `HS256`, `RS256`, and `PS256`.\n"
                    },
                    "signingSecret": {
                        "type": "string",
                        "description": "Secret used to sign tokens when using symmetric algorithms (HS256).\n"
                    },
                    "skipConsentForVerifiableFirstPartyClients": {
                        "type": "boolean",
                        "description": "Indicates whether to skip user consent for applications flagged as first party.\n"
                    },
                    "subjectTypeAuthorization": {
                        "$ref": "#/types/auth0:index/ResourceServerSubjectTypeAuthorization:ResourceServerSubjectTypeAuthorization",
                        "description": "Authorization policies for user and client flows.\n"
                    },
                    "tokenDialect": {
                        "type": "string",
                        "description": "Dialect of access tokens that should be issued for this resource server. Options include \u003cspan pulumi-lang-nodejs=\"`accessToken`\" pulumi-lang-dotnet=\"`AccessToken`\" pulumi-lang-go=\"`accessToken`\" pulumi-lang-python=\"`access_token`\" pulumi-lang-yaml=\"`accessToken`\" pulumi-lang-java=\"`accessToken`\"\u003e`access_token`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rfc9068Profile`\" pulumi-lang-dotnet=\"`Rfc9068Profile`\" pulumi-lang-go=\"`rfc9068Profile`\" pulumi-lang-python=\"`rfc9068_profile`\" pulumi-lang-yaml=\"`rfc9068Profile`\" pulumi-lang-java=\"`rfc9068Profile`\"\u003e`rfc9068_profile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`accessTokenAuthz`\" pulumi-lang-dotnet=\"`AccessTokenAuthz`\" pulumi-lang-go=\"`accessTokenAuthz`\" pulumi-lang-python=\"`access_token_authz`\" pulumi-lang-yaml=\"`accessTokenAuthz`\" pulumi-lang-java=\"`accessTokenAuthz`\"\u003e`access_token_authz`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`rfc9068ProfileAuthz`\" pulumi-lang-dotnet=\"`Rfc9068ProfileAuthz`\" pulumi-lang-go=\"`rfc9068ProfileAuthz`\" pulumi-lang-python=\"`rfc9068_profile_authz`\" pulumi-lang-yaml=\"`rfc9068ProfileAuthz`\" pulumi-lang-java=\"`rfc9068ProfileAuthz`\"\u003e`rfc9068_profile_authz`\u003c/span\u003e. \u003cspan pulumi-lang-nodejs=\"`accessToken`\" pulumi-lang-dotnet=\"`AccessToken`\" pulumi-lang-go=\"`accessToken`\" pulumi-lang-python=\"`access_token`\" pulumi-lang-yaml=\"`accessToken`\" pulumi-lang-java=\"`accessToken`\"\u003e`access_token`\u003c/span\u003e is a JWT containing standard Auth0 claims. \u003cspan pulumi-lang-nodejs=\"`rfc9068Profile`\" pulumi-lang-dotnet=\"`Rfc9068Profile`\" pulumi-lang-go=\"`rfc9068Profile`\" pulumi-lang-python=\"`rfc9068_profile`\" pulumi-lang-yaml=\"`rfc9068Profile`\" pulumi-lang-java=\"`rfc9068Profile`\"\u003e`rfc9068_profile`\u003c/span\u003e is a JWT conforming to the IETF JWT Access Token Profile. \u003cspan pulumi-lang-nodejs=\"`accessTokenAuthz`\" pulumi-lang-dotnet=\"`AccessTokenAuthz`\" pulumi-lang-go=\"`accessTokenAuthz`\" pulumi-lang-python=\"`access_token_authz`\" pulumi-lang-yaml=\"`accessTokenAuthz`\" pulumi-lang-java=\"`accessTokenAuthz`\"\u003e`access_token_authz`\u003c/span\u003e is a JWT containing standard Auth0 claims, including RBAC permissions claims. \u003cspan pulumi-lang-nodejs=\"`rfc9068ProfileAuthz`\" pulumi-lang-dotnet=\"`Rfc9068ProfileAuthz`\" pulumi-lang-go=\"`rfc9068ProfileAuthz`\" pulumi-lang-python=\"`rfc9068_profile_authz`\" pulumi-lang-yaml=\"`rfc9068ProfileAuthz`\" pulumi-lang-java=\"`rfc9068ProfileAuthz`\"\u003e`rfc9068_profile_authz`\u003c/span\u003e is a JWT conforming to the IETF JWT Access Token Profile, including RBAC permissions claims. RBAC permissions claims are available if RBAC (\u003cspan pulumi-lang-nodejs=\"`enforcePolicies`\" pulumi-lang-dotnet=\"`EnforcePolicies`\" pulumi-lang-go=\"`enforcePolicies`\" pulumi-lang-python=\"`enforce_policies`\" pulumi-lang-yaml=\"`enforcePolicies`\" pulumi-lang-java=\"`enforcePolicies`\"\u003e`enforce_policies`\u003c/span\u003e) is enabled for this API. For more details, refer to [Access Token Profiles](https://auth0.com/docs/secure/tokens/access-tokens/access-token-profiles).\n"
                    },
                    "tokenEncryption": {
                        "$ref": "#/types/auth0:index/ResourceServerTokenEncryption:ResourceServerTokenEncryption",
                        "description": "Configuration for JSON Web Encryption(JWE) of tokens for this resource server.\n"
                    },
                    "tokenLifetime": {
                        "type": "integer",
                        "description": "Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.\n"
                    },
                    "tokenLifetimeForWeb": {
                        "type": "integer",
                        "description": "Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the \u003cspan pulumi-lang-nodejs=\"`tokenLifetime`\" pulumi-lang-dotnet=\"`TokenLifetime`\" pulumi-lang-go=\"`tokenLifetime`\" pulumi-lang-python=\"`token_lifetime`\" pulumi-lang-yaml=\"`tokenLifetime`\" pulumi-lang-java=\"`tokenLifetime`\"\u003e`token_lifetime`\u003c/span\u003e value.\n"
                    },
                    "verificationLocation": {
                        "type": "string",
                        "description": "URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/resourceServerScope:ResourceServerScope": {
            "description": "With this resource, you can manage scopes (permissions) associated with a resource server (API).\n\n!\u003e This resource appends a scope to a resource server. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.ResourceServerScopes`\" pulumi-lang-dotnet=\"`auth0.ResourceServerScopes`\" pulumi-lang-go=\"`ResourceServerScopes`\" pulumi-lang-python=\"`ResourceServerScopes`\" pulumi-lang-yaml=\"`auth0.ResourceServerScopes`\" pulumi-lang-java=\"`auth0.ResourceServerScopes`\"\u003e`auth0.ResourceServerScopes`\u003c/span\u003e resource manages\nall the scopes assigned to a resource server. To avoid potential issues, it is recommended not to use this resource in\nconjunction with the \u003cspan pulumi-lang-nodejs=\"`auth0.ResourceServerScopes`\" pulumi-lang-dotnet=\"`auth0.ResourceServerScopes`\" pulumi-lang-go=\"`ResourceServerScopes`\" pulumi-lang-python=\"`ResourceServerScopes`\" pulumi-lang-yaml=\"`auth0.ResourceServerScopes`\" pulumi-lang-java=\"`auth0.ResourceServerScopes`\"\u003e`auth0.ResourceServerScopes`\u003c/span\u003e resource when managing scopes for the same resource server id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst resourceServer = new auth0.ResourceServer(\"resource_server\", {\n    name: \"Example Resource Server (Managed by Terraform)\",\n    identifier: \"https://api.example.com\",\n});\nconst readPosts = new auth0.ResourceServerScope(\"read_posts\", {\n    resourceServerIdentifier: resourceServer.identifier,\n    scope: \"read:posts\",\n});\nconst writePosts = new auth0.ResourceServerScope(\"write_posts\", {\n    resourceServerIdentifier: resourceServer.identifier,\n    scope: \"write:posts\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nresource_server = auth0.ResourceServer(\"resource_server\",\n    name=\"Example Resource Server (Managed by Terraform)\",\n    identifier=\"https://api.example.com\")\nread_posts = auth0.ResourceServerScope(\"read_posts\",\n    resource_server_identifier=resource_server.identifier,\n    scope=\"read:posts\")\nwrite_posts = auth0.ResourceServerScope(\"write_posts\",\n    resource_server_identifier=resource_server.identifier,\n    scope=\"write:posts\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var resourceServer = new Auth0.ResourceServer(\"resource_server\", new()\n    {\n        Name = \"Example Resource Server (Managed by Terraform)\",\n        Identifier = \"https://api.example.com\",\n    });\n\n    var readPosts = new Auth0.ResourceServerScope(\"read_posts\", new()\n    {\n        ResourceServerIdentifier = resourceServer.Identifier,\n        Scope = \"read:posts\",\n    });\n\n    var writePosts = new Auth0.ResourceServerScope(\"write_posts\", new()\n    {\n        ResourceServerIdentifier = resourceServer.Identifier,\n        Scope = \"write:posts\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tresourceServer, err := auth0.NewResourceServer(ctx, \"resource_server\", \u0026auth0.ResourceServerArgs{\n\t\t\tName:       pulumi.String(\"Example Resource Server (Managed by Terraform)\"),\n\t\t\tIdentifier: pulumi.String(\"https://api.example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewResourceServerScope(ctx, \"read_posts\", \u0026auth0.ResourceServerScopeArgs{\n\t\t\tResourceServerIdentifier: resourceServer.Identifier,\n\t\t\tScope:                    pulumi.String(\"read:posts\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewResourceServerScope(ctx, \"write_posts\", \u0026auth0.ResourceServerScopeArgs{\n\t\t\tResourceServerIdentifier: resourceServer.Identifier,\n\t\t\tScope:                    pulumi.String(\"write:posts\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.ResourceServer;\nimport com.pulumi.auth0.ResourceServerArgs;\nimport com.pulumi.auth0.ResourceServerScope;\nimport com.pulumi.auth0.ResourceServerScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var resourceServer = new ResourceServer(\"resourceServer\", ResourceServerArgs.builder()\n            .name(\"Example Resource Server (Managed by Terraform)\")\n            .identifier(\"https://api.example.com\")\n            .build());\n\n        var readPosts = new ResourceServerScope(\"readPosts\", ResourceServerScopeArgs.builder()\n            .resourceServerIdentifier(resourceServer.identifier())\n            .scope(\"read:posts\")\n            .build());\n\n        var writePosts = new ResourceServerScope(\"writePosts\", ResourceServerScopeArgs.builder()\n            .resourceServerIdentifier(resourceServer.identifier())\n            .scope(\"write:posts\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  resourceServer:\n    type: auth0:ResourceServer\n    name: resource_server\n    properties:\n      name: Example Resource Server (Managed by Terraform)\n      identifier: https://api.example.com\n  readPosts:\n    type: auth0:ResourceServerScope\n    name: read_posts\n    properties:\n      resourceServerIdentifier: ${resourceServer.identifier}\n      scope: read:posts\n  writePosts:\n    type: auth0:ResourceServerScope\n    name: write_posts\n    properties:\n      resourceServerIdentifier: ${resourceServer.identifier}\n      scope: write:posts\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\nresource identifier and scope name separated by \"::\" (note the double colon)\n\n\u003cresourceServerIdentifier\u003e::\u003cscope\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/resourceServerScope:ResourceServerScope scope \"https://api.travel0.com/v1::read:posts\"\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the scope (permission).\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Identifier of the resource server that the scope (permission) is associated with.\n"
                },
                "scope": {
                    "type": "string",
                    "description": "Name of the scope (permission).\n"
                }
            },
            "required": [
                "resourceServerIdentifier",
                "scope"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the scope (permission).\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Identifier of the resource server that the scope (permission) is associated with.\n",
                    "willReplaceOnChanges": true
                },
                "scope": {
                    "type": "string",
                    "description": "Name of the scope (permission).\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "resourceServerIdentifier",
                "scope"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceServerScope resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the scope (permission).\n"
                    },
                    "resourceServerIdentifier": {
                        "type": "string",
                        "description": "Identifier of the resource server that the scope (permission) is associated with.\n",
                        "willReplaceOnChanges": true
                    },
                    "scope": {
                        "type": "string",
                        "description": "Name of the scope (permission).\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/resourceServerScopes:ResourceServerScopes": {
            "description": "With this resource, you can manage scopes (permissions) associated with a resource server (API).\n\n!\u003e This resource manages all the scopes assigned to a resource server. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.ResourceServerScope`\" pulumi-lang-dotnet=\"`auth0.ResourceServerScope`\" pulumi-lang-go=\"`ResourceServerScope`\" pulumi-lang-python=\"`ResourceServerScope`\" pulumi-lang-yaml=\"`auth0.ResourceServerScope`\" pulumi-lang-java=\"`auth0.ResourceServerScope`\"\u003e`auth0.ResourceServerScope`\u003c/span\u003e\nresource only appends a scope to a resource server. To avoid potential issues, it is recommended not to use this\nresource in conjunction with the \u003cspan pulumi-lang-nodejs=\"`auth0.ResourceServerScope`\" pulumi-lang-dotnet=\"`auth0.ResourceServerScope`\" pulumi-lang-go=\"`ResourceServerScope`\" pulumi-lang-python=\"`ResourceServerScope`\" pulumi-lang-yaml=\"`auth0.ResourceServerScope`\" pulumi-lang-java=\"`auth0.ResourceServerScope`\"\u003e`auth0.ResourceServerScope`\u003c/span\u003e resource when managing scopes for the same resource\nserver id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myApi = new auth0.ResourceServer(\"my_api\", {\n    name: \"Example Resource Server (Managed by Terraform)\",\n    identifier: \"https://api.example.com\",\n});\nconst myApiScopes = new auth0.ResourceServerScopes(\"my_api_scopes\", {\n    resourceServerIdentifier: myApi.identifier,\n    scopes: [\n        {\n            name: \"create:appointments\",\n            description: \"Ability to create appointments\",\n        },\n        {\n            name: \"read:appointments\",\n            description: \"Ability to read appointments\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_api = auth0.ResourceServer(\"my_api\",\n    name=\"Example Resource Server (Managed by Terraform)\",\n    identifier=\"https://api.example.com\")\nmy_api_scopes = auth0.ResourceServerScopes(\"my_api_scopes\",\n    resource_server_identifier=my_api.identifier,\n    scopes=[\n        {\n            \"name\": \"create:appointments\",\n            \"description\": \"Ability to create appointments\",\n        },\n        {\n            \"name\": \"read:appointments\",\n            \"description\": \"Ability to read appointments\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myApi = new Auth0.ResourceServer(\"my_api\", new()\n    {\n        Name = \"Example Resource Server (Managed by Terraform)\",\n        Identifier = \"https://api.example.com\",\n    });\n\n    var myApiScopes = new Auth0.ResourceServerScopes(\"my_api_scopes\", new()\n    {\n        ResourceServerIdentifier = myApi.Identifier,\n        Scopes = new[]\n        {\n            new Auth0.Inputs.ResourceServerScopesScopeArgs\n            {\n                Name = \"create:appointments\",\n                Description = \"Ability to create appointments\",\n            },\n            new Auth0.Inputs.ResourceServerScopesScopeArgs\n            {\n                Name = \"read:appointments\",\n                Description = \"Ability to read appointments\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyApi, err := auth0.NewResourceServer(ctx, \"my_api\", \u0026auth0.ResourceServerArgs{\n\t\t\tName:       pulumi.String(\"Example Resource Server (Managed by Terraform)\"),\n\t\t\tIdentifier: pulumi.String(\"https://api.example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewResourceServerScopes(ctx, \"my_api_scopes\", \u0026auth0.ResourceServerScopesArgs{\n\t\t\tResourceServerIdentifier: myApi.Identifier,\n\t\t\tScopes: auth0.ResourceServerScopesScopeArray{\n\t\t\t\t\u0026auth0.ResourceServerScopesScopeArgs{\n\t\t\t\t\tName:        pulumi.String(\"create:appointments\"),\n\t\t\t\t\tDescription: pulumi.String(\"Ability to create appointments\"),\n\t\t\t\t},\n\t\t\t\t\u0026auth0.ResourceServerScopesScopeArgs{\n\t\t\t\t\tName:        pulumi.String(\"read:appointments\"),\n\t\t\t\t\tDescription: pulumi.String(\"Ability to read appointments\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.ResourceServer;\nimport com.pulumi.auth0.ResourceServerArgs;\nimport com.pulumi.auth0.ResourceServerScopes;\nimport com.pulumi.auth0.ResourceServerScopesArgs;\nimport com.pulumi.auth0.inputs.ResourceServerScopesScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myApi = new ResourceServer(\"myApi\", ResourceServerArgs.builder()\n            .name(\"Example Resource Server (Managed by Terraform)\")\n            .identifier(\"https://api.example.com\")\n            .build());\n\n        var myApiScopes = new ResourceServerScopes(\"myApiScopes\", ResourceServerScopesArgs.builder()\n            .resourceServerIdentifier(myApi.identifier())\n            .scopes(            \n                ResourceServerScopesScopeArgs.builder()\n                    .name(\"create:appointments\")\n                    .description(\"Ability to create appointments\")\n                    .build(),\n                ResourceServerScopesScopeArgs.builder()\n                    .name(\"read:appointments\")\n                    .description(\"Ability to read appointments\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myApi:\n    type: auth0:ResourceServer\n    name: my_api\n    properties:\n      name: Example Resource Server (Managed by Terraform)\n      identifier: https://api.example.com\n  myApiScopes:\n    type: auth0:ResourceServerScopes\n    name: my_api_scopes\n    properties:\n      resourceServerIdentifier: ${myApi.identifier}\n      scopes:\n        - name: create:appointments\n          description: Ability to create appointments\n        - name: read:appointments\n          description: Ability to read appointments\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the resource server identifier.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/resourceServerScopes:ResourceServerScopes my_api_scopes \"https://api.travel0.com/v1\"\n```\n\n",
            "properties": {
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Identifier of the resource server that the scopes (permission) are associated with.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ResourceServerScopesScope:ResourceServerScopesScope"
                    }
                }
            },
            "required": [
                "resourceServerIdentifier",
                "scopes"
            ],
            "inputProperties": {
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Identifier of the resource server that the scopes (permission) are associated with.\n",
                    "willReplaceOnChanges": true
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ResourceServerScopesScope:ResourceServerScopesScope"
                    }
                }
            },
            "requiredInputs": [
                "resourceServerIdentifier",
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceServerScopes resources.\n",
                "properties": {
                    "resourceServerIdentifier": {
                        "type": "string",
                        "description": "Identifier of the resource server that the scopes (permission) are associated with.\n",
                        "willReplaceOnChanges": true
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/ResourceServerScopesScope:ResourceServerScopesScope"
                        }
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/riskAssessments:RiskAssessments": {
            "description": "Resource for managing general Risk Assessment settings.\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether risk assessment is enabled or not.\n"
                }
            },
            "required": [
                "enabled"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether risk assessment is enabled or not.\n"
                }
            },
            "requiredInputs": [
                "enabled"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RiskAssessments resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether risk assessment is enabled or not.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/riskAssessmentsNewDevice:RiskAssessmentsNewDevice": {
            "description": "Resource for managing Risk Assessment settings for new devices.\n",
            "properties": {
                "rememberFor": {
                    "type": "integer",
                    "description": "Length of time to remember devices for, in days\n"
                }
            },
            "required": [
                "rememberFor"
            ],
            "inputProperties": {
                "rememberFor": {
                    "type": "integer",
                    "description": "Length of time to remember devices for, in days\n"
                }
            },
            "requiredInputs": [
                "rememberFor"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RiskAssessmentsNewDevice resources.\n",
                "properties": {
                    "rememberFor": {
                        "type": "integer",
                        "description": "Length of time to remember devices for, in days\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/role:Role": {
            "description": "With this resource, you can create and manage collections of permissions that can be assigned to users, which are otherwise known as roles. Permissions (scopes) are created on \u003cspan pulumi-lang-nodejs=\"`auth0.ResourceServer`\" pulumi-lang-dotnet=\"`auth0.ResourceServer`\" pulumi-lang-go=\"`ResourceServer`\" pulumi-lang-python=\"`ResourceServer`\" pulumi-lang-yaml=\"`auth0.ResourceServer`\" pulumi-lang-java=\"`auth0.ResourceServer`\"\u003e`auth0.ResourceServer`\u003c/span\u003e, then associated with roles and optionally, users using this resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myRole = new auth0.Role(\"my_role\", {\n    name: \"My Role - (Managed by Terraform)\",\n    description: \"Role Description...\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_role = auth0.Role(\"my_role\",\n    name=\"My Role - (Managed by Terraform)\",\n    description=\"Role Description...\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myRole = new Auth0.Role(\"my_role\", new()\n    {\n        Name = \"My Role - (Managed by Terraform)\",\n        Description = \"Role Description...\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewRole(ctx, \"my_role\", \u0026auth0.RoleArgs{\n\t\t\tName:        pulumi.String(\"My Role - (Managed by Terraform)\"),\n\t\t\tDescription: pulumi.String(\"Role Description...\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Role;\nimport com.pulumi.auth0.RoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myRole = new Role(\"myRole\", RoleArgs.builder()\n            .name(\"My Role - (Managed by Terraform)\")\n            .description(\"Role Description...\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myRole:\n    type: auth0:Role\n    name: my_role\n    properties:\n      name: My Role - (Managed by Terraform)\n      description: Role Description...\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nExisting roles can be imported using their ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/role:Role my_role \"XXXXXXXXXXXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role.\n",
                    "default": "Managed by Pulumi"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                }
            },
            "required": [
                "description",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role.\n",
                    "default": "Managed by Pulumi"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the role.\n",
                        "default": "Managed by Pulumi"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/rolePermission:RolePermission": {
            "description": "With this resource, you can manage role permissions (1-1).\n\n!\u003e This resource appends a permission to a role. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.RolePermissions`\" pulumi-lang-dotnet=\"`auth0.RolePermissions`\" pulumi-lang-go=\"`RolePermissions`\" pulumi-lang-python=\"`RolePermissions`\" pulumi-lang-yaml=\"`auth0.RolePermissions`\" pulumi-lang-java=\"`auth0.RolePermissions`\"\u003e`auth0.RolePermissions`\u003c/span\u003e resource manages all the\npermissions assigned to a role. To avoid potential issues, it is recommended not to use this resource in conjunction\nwith the \u003cspan pulumi-lang-nodejs=\"`auth0.RolePermissions`\" pulumi-lang-dotnet=\"`auth0.RolePermissions`\" pulumi-lang-go=\"`RolePermissions`\" pulumi-lang-python=\"`RolePermissions`\" pulumi-lang-yaml=\"`auth0.RolePermissions`\" pulumi-lang-java=\"`auth0.RolePermissions`\"\u003e`auth0.RolePermissions`\u003c/span\u003e resource when managing permissions for the same role id.\n\n## Import\n\nThis resource can be imported by specifying the\n\nrole ID, resource identifier, and permission name separated by \"::\" (note the double colon)\n\n\u003croleID\u003e::\u003cresourceServerIdentifier\u003e::\u003cpermission\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/rolePermission:RolePermission permission \"rol_XXXXXXXXXXXXX::https://example.com::read:foo\"\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the permission.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Name of the permission.\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Identifier of the resource server that the permission is associated with.\n"
                },
                "resourceServerName": {
                    "type": "string",
                    "description": "Name of the resource server that the permission is associated with.\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "ID of the role to associate the permission to.\n"
                }
            },
            "required": [
                "description",
                "permission",
                "resourceServerIdentifier",
                "resourceServerName",
                "roleId"
            ],
            "inputProperties": {
                "permission": {
                    "type": "string",
                    "description": "Name of the permission.\n",
                    "willReplaceOnChanges": true
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Identifier of the resource server that the permission is associated with.\n",
                    "willReplaceOnChanges": true
                },
                "roleId": {
                    "type": "string",
                    "description": "ID of the role to associate the permission to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "permission",
                "resourceServerIdentifier",
                "roleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RolePermission resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the permission.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Name of the permission.\n",
                        "willReplaceOnChanges": true
                    },
                    "resourceServerIdentifier": {
                        "type": "string",
                        "description": "Identifier of the resource server that the permission is associated with.\n",
                        "willReplaceOnChanges": true
                    },
                    "resourceServerName": {
                        "type": "string",
                        "description": "Name of the resource server that the permission is associated with.\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "ID of the role to associate the permission to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/rolePermissions:RolePermissions": {
            "description": "With this resource, you can manage role permissions (1-many).\n\n!\u003e This resource manages all the permissions assigned to a role. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.RolePermission`\" pulumi-lang-dotnet=\"`auth0.RolePermission`\" pulumi-lang-go=\"`RolePermission`\" pulumi-lang-python=\"`RolePermission`\" pulumi-lang-yaml=\"`auth0.RolePermission`\" pulumi-lang-java=\"`auth0.RolePermission`\"\u003e`auth0.RolePermission`\u003c/span\u003e resource only\nappends a permission to a role. To avoid potential issues, it is recommended not to use this resource in conjunction\nwith the \u003cspan pulumi-lang-nodejs=\"`auth0.RolePermission`\" pulumi-lang-dotnet=\"`auth0.RolePermission`\" pulumi-lang-go=\"`RolePermission`\" pulumi-lang-python=\"`RolePermission`\" pulumi-lang-yaml=\"`auth0.RolePermission`\" pulumi-lang-java=\"`auth0.RolePermission`\"\u003e`auth0.RolePermission`\u003c/span\u003e resource when managing permissions for the same role id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Example:\nconst resourceServer = new auth0.ResourceServer(\"resource_server\", {\n    name: \"test\",\n    identifier: \"test.example.com\",\n});\nconst resourceServerScopes = new auth0.ResourceServerScopes(\"resource_server_scopes\", {\n    resourceServerIdentifier: resourceServer.identifier,\n    scopes: [\n        {\n            name: \"store:create\",\n        },\n        {\n            name: \"store:read\",\n        },\n        {\n            name: \"store:update\",\n        },\n        {\n            name: \"store:delete\",\n        },\n    ],\n});\nconst myRole = new auth0.Role(\"my_role\", {name: \"My Role\"});\nconst myRolePerms = new auth0.RolePermissions(\"my_role_perms\", {\n    permissions: resourceServer.identifier.apply(identifier =\u003e .map(entry =\u003e ({\n        name: entry.value.name,\n        resourceServerIdentifier: identifier,\n    }))),\n    roleId: myRole.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# Example:\nresource_server = auth0.ResourceServer(\"resource_server\",\n    name=\"test\",\n    identifier=\"test.example.com\")\nresource_server_scopes = auth0.ResourceServerScopes(\"resource_server_scopes\",\n    resource_server_identifier=resource_server.identifier,\n    scopes=[\n        {\n            \"name\": \"store:create\",\n        },\n        {\n            \"name\": \"store:read\",\n        },\n        {\n            \"name\": \"store:update\",\n        },\n        {\n            \"name\": \"store:delete\",\n        },\n    ])\nmy_role = auth0.Role(\"my_role\", name=\"My Role\")\nmy_role_perms = auth0.RolePermissions(\"my_role_perms\",\n    permissions=resource_server.identifier.apply(lambda identifier: [{\n        \"name\": entry[\"value\"].name,\n        \"resourceServerIdentifier\": identifier,\n    } for entry in resource_server_scopes.scopes.apply(lambda scopes: [{\"key\": k, \"value\": v} for k, v in scopes])]),\n    role_id=my_role.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example:\n    var resourceServer = new Auth0.ResourceServer(\"resource_server\", new()\n    {\n        Name = \"test\",\n        Identifier = \"test.example.com\",\n    });\n\n    var resourceServerScopes = new Auth0.ResourceServerScopes(\"resource_server_scopes\", new()\n    {\n        ResourceServerIdentifier = resourceServer.Identifier,\n        Scopes = new[]\n        {\n            new Auth0.Inputs.ResourceServerScopesScopeArgs\n            {\n                Name = \"store:create\",\n            },\n            new Auth0.Inputs.ResourceServerScopesScopeArgs\n            {\n                Name = \"store:read\",\n            },\n            new Auth0.Inputs.ResourceServerScopesScopeArgs\n            {\n                Name = \"store:update\",\n            },\n            new Auth0.Inputs.ResourceServerScopesScopeArgs\n            {\n                Name = \"store:delete\",\n            },\n        },\n    });\n\n    var myRole = new Auth0.Role(\"my_role\", new()\n    {\n        Name = \"My Role\",\n    });\n\n    var myRolePerms = new Auth0.RolePermissions(\"my_role_perms\", new()\n    {\n        Permissions = resourceServer.Identifier.Apply(identifier =\u003e ),\n        RoleId = myRole.Id,\n    });\n\n});\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the role ID\n\nExample:\n\n```sh\n$ pulumi import auth0:index/rolePermissions:RolePermissions all_role_permissions \"rol_XXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/RolePermissionsPermission:RolePermissionsPermission"
                    },
                    "description": "List of API permissions granted to the role.\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "ID of the role to associate the permission to.\n"
                }
            },
            "required": [
                "permissions",
                "roleId"
            ],
            "inputProperties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/RolePermissionsPermission:RolePermissionsPermission"
                    },
                    "description": "List of API permissions granted to the role.\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "ID of the role to associate the permission to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "permissions",
                "roleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RolePermissions resources.\n",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/RolePermissionsPermission:RolePermissionsPermission"
                        },
                        "description": "List of API permissions granted to the role.\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "ID of the role to associate the permission to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/rule:Rule": {
            "description": "With Auth0, you can create custom Javascript snippets that run in a secure, isolated sandbox as part of your authentication pipeline, which are otherwise known as rules. This resource allows you to create and manage rules. You can create global variable for use with rules by using the \u003cspan pulumi-lang-nodejs=\"`auth0.RuleConfig`\" pulumi-lang-dotnet=\"`auth0.RuleConfig`\" pulumi-lang-go=\"`RuleConfig`\" pulumi-lang-python=\"`RuleConfig`\" pulumi-lang-yaml=\"`auth0.RuleConfig`\" pulumi-lang-java=\"`auth0.RuleConfig`\"\u003e`auth0.RuleConfig`\u003c/span\u003e resource.\n\n!\u003e This resource is deprecated. Refer to the [guide on how to migrate from rules to actions](https://auth0.com/docs/customize/actions/migrate/migrate-from-rules-to-actions) and manage your actions using the \u003cspan pulumi-lang-nodejs=\"`auth0.Action`\" pulumi-lang-dotnet=\"`auth0.Action`\" pulumi-lang-go=\"`Action`\" pulumi-lang-python=\"`Action`\" pulumi-lang-yaml=\"`auth0.Action`\" pulumi-lang-java=\"`auth0.Action`\"\u003e`auth0.Action`\u003c/span\u003e resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myRule = new auth0.Rule(\"my_rule\", {\n    name: \"empty-rule\",\n    script: `    function (user, context, callback) {\n      callback(null, user, context);\n    }\n`,\n    enabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_rule = auth0.Rule(\"my_rule\",\n    name=\"empty-rule\",\n    script=\"\"\"    function (user, context, callback) {\n      callback(null, user, context);\n    }\n\"\"\",\n    enabled=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myRule = new Auth0.Rule(\"my_rule\", new()\n    {\n        Name = \"empty-rule\",\n        Script = @\"    function (user, context, callback) {\n      callback(null, user, context);\n    }\n\",\n        Enabled = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewRule(ctx, \"my_rule\", \u0026auth0.RuleArgs{\n\t\t\tName:    pulumi.String(\"empty-rule\"),\n\t\t\tScript:  pulumi.String(\"    function (user, context, callback) {\\n      callback(null, user, context);\\n    }\\n\"),\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Rule;\nimport com.pulumi.auth0.RuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myRule = new Rule(\"myRule\", RuleArgs.builder()\n            .name(\"empty-rule\")\n            .script(\"\"\"\n    function (user, context, callback) {\n      callback(null, user, context);\n    }\n            \"\"\")\n            .enabled(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myRule:\n    type: auth0:Rule\n    name: my_rule\n    properties:\n      name: empty-rule\n      script: |2\n            function (user, context, callback) {\n              callback(null, user, context);\n            }\n      enabled: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nExisting rules can be imported using their ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/rule:Rule my_rule \"rul_XXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the rule is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule. May only contain alphanumeric characters, spaces, and hyphens. May neither start nor end with hyphens or spaces.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Order in which the rule executes relative to other rules. Lower-valued rules execute first.\n"
                },
                "script": {
                    "type": "string",
                    "description": "Code to be executed when the rule runs.\n"
                }
            },
            "required": [
                "enabled",
                "name",
                "order",
                "script"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether the rule is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the rule. May only contain alphanumeric characters, spaces, and hyphens. May neither start nor end with hyphens or spaces.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Order in which the rule executes relative to other rules. Lower-valued rules execute first.\n"
                },
                "script": {
                    "type": "string",
                    "description": "Code to be executed when the rule runs.\n"
                }
            },
            "requiredInputs": [
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Rule resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Indicates whether the rule is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the rule. May only contain alphanumeric characters, spaces, and hyphens. May neither start nor end with hyphens or spaces.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Order in which the rule executes relative to other rules. Lower-valued rules execute first.\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "Code to be executed when the rule runs.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/ruleConfig:RuleConfig": {
            "description": "With Auth0, you can create custom Javascript snippets that run in a secure, isolated sandbox as part of your authentication pipeline, which are otherwise known as rules. This resource allows you to create and manage variables that are available to all rules via Auth0's global configuration object. Used in conjunction with configured rules.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myRule = new auth0.Rule(\"my_rule\", {\n    name: \"empty-rule\",\n    script: `    function (user, context, callback) {\n      callback(null, user, context);\n    }\n`,\n    enabled: true,\n});\nconst myRuleConfig = new auth0.RuleConfig(\"my_rule_config\", {\n    key: \"foo\",\n    value: \"bar\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_rule = auth0.Rule(\"my_rule\",\n    name=\"empty-rule\",\n    script=\"\"\"    function (user, context, callback) {\n      callback(null, user, context);\n    }\n\"\"\",\n    enabled=True)\nmy_rule_config = auth0.RuleConfig(\"my_rule_config\",\n    key=\"foo\",\n    value=\"bar\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myRule = new Auth0.Rule(\"my_rule\", new()\n    {\n        Name = \"empty-rule\",\n        Script = @\"    function (user, context, callback) {\n      callback(null, user, context);\n    }\n\",\n        Enabled = true,\n    });\n\n    var myRuleConfig = new Auth0.RuleConfig(\"my_rule_config\", new()\n    {\n        Key = \"foo\",\n        Value = \"bar\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewRule(ctx, \"my_rule\", \u0026auth0.RuleArgs{\n\t\t\tName:    pulumi.String(\"empty-rule\"),\n\t\t\tScript:  pulumi.String(\"    function (user, context, callback) {\\n      callback(null, user, context);\\n    }\\n\"),\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewRuleConfig(ctx, \"my_rule_config\", \u0026auth0.RuleConfigArgs{\n\t\t\tKey:   pulumi.String(\"foo\"),\n\t\t\tValue: pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Rule;\nimport com.pulumi.auth0.RuleArgs;\nimport com.pulumi.auth0.RuleConfig;\nimport com.pulumi.auth0.RuleConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myRule = new Rule(\"myRule\", RuleArgs.builder()\n            .name(\"empty-rule\")\n            .script(\"\"\"\n    function (user, context, callback) {\n      callback(null, user, context);\n    }\n            \"\"\")\n            .enabled(true)\n            .build());\n\n        var myRuleConfig = new RuleConfig(\"myRuleConfig\", RuleConfigArgs.builder()\n            .key(\"foo\")\n            .value(\"bar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myRule:\n    type: auth0:Rule\n    name: my_rule\n    properties:\n      name: empty-rule\n      script: |2\n            function (user, context, callback) {\n              callback(null, user, context);\n            }\n      enabled: true\n  myRuleConfig:\n    type: auth0:RuleConfig\n    name: my_rule_config\n    properties:\n      key: foo\n      value: bar\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nExisting rule configs can be imported using their key name.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/ruleConfig:RuleConfig my_rule_config \"foo\"\n```\n\n",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key for a rules configuration variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value for a rules configuration variable.\n",
                    "secret": true
                }
            },
            "required": [
                "key",
                "value"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "Key for a rules configuration variable.\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "string",
                    "description": "Value for a rules configuration variable.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "key",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleConfig resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Key for a rules configuration variable.\n",
                        "willReplaceOnChanges": true
                    },
                    "value": {
                        "type": "string",
                        "description": "Value for a rules configuration variable.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/selfServiceProfile:SelfServiceProfile": {
            "description": "With this resource, you can create and manage Self-Service Profile for a tenant.\n\n\u003e\u003cspan pulumi-lang-nodejs=\" userAttributeProfileId \" pulumi-lang-dotnet=\" UserAttributeProfileId \" pulumi-lang-go=\" userAttributeProfileId \" pulumi-lang-python=\" user_attribute_profile_id \" pulumi-lang-yaml=\" userAttributeProfileId \" pulumi-lang-java=\" userAttributeProfileId \"\u003e user_attribute_profile_id \u003c/span\u003efield only available for [EA](https://auth0.com/docs/troubleshoot/product-lifecycle/product-release-stages#early-access) users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst mySelfServiceProfile = new auth0.SelfServiceProfile(\"my_self_service_profile\", {\n    userAttributes: [{\n        name: \"sample-name\",\n        description: \"sample-description\",\n        isOptional: true,\n    }],\n    branding: {\n        logoUrl: \"https://mycompany.org/v2/logo.png\",\n        colors: {\n            primary: \"#0059d6\",\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_self_service_profile = auth0.SelfServiceProfile(\"my_self_service_profile\",\n    user_attributes=[{\n        \"name\": \"sample-name\",\n        \"description\": \"sample-description\",\n        \"is_optional\": True,\n    }],\n    branding={\n        \"logo_url\": \"https://mycompany.org/v2/logo.png\",\n        \"colors\": {\n            \"primary\": \"#0059d6\",\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mySelfServiceProfile = new Auth0.SelfServiceProfile(\"my_self_service_profile\", new()\n    {\n        UserAttributes = new[]\n        {\n            new Auth0.Inputs.SelfServiceProfileUserAttributeArgs\n            {\n                Name = \"sample-name\",\n                Description = \"sample-description\",\n                IsOptional = true,\n            },\n        },\n        Branding = new Auth0.Inputs.SelfServiceProfileBrandingArgs\n        {\n            LogoUrl = \"https://mycompany.org/v2/logo.png\",\n            Colors = new Auth0.Inputs.SelfServiceProfileBrandingColorsArgs\n            {\n                Primary = \"#0059d6\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewSelfServiceProfile(ctx, \"my_self_service_profile\", \u0026auth0.SelfServiceProfileArgs{\n\t\t\tUserAttributes: auth0.SelfServiceProfileUserAttributeArray{\n\t\t\t\t\u0026auth0.SelfServiceProfileUserAttributeArgs{\n\t\t\t\t\tName:        pulumi.String(\"sample-name\"),\n\t\t\t\t\tDescription: pulumi.String(\"sample-description\"),\n\t\t\t\t\tIsOptional:  pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t\tBranding: \u0026auth0.SelfServiceProfileBrandingArgs{\n\t\t\t\tLogoUrl: pulumi.String(\"https://mycompany.org/v2/logo.png\"),\n\t\t\t\tColors: \u0026auth0.SelfServiceProfileBrandingColorsArgs{\n\t\t\t\t\tPrimary: pulumi.String(\"#0059d6\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.SelfServiceProfile;\nimport com.pulumi.auth0.SelfServiceProfileArgs;\nimport com.pulumi.auth0.inputs.SelfServiceProfileUserAttributeArgs;\nimport com.pulumi.auth0.inputs.SelfServiceProfileBrandingArgs;\nimport com.pulumi.auth0.inputs.SelfServiceProfileBrandingColorsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mySelfServiceProfile = new SelfServiceProfile(\"mySelfServiceProfile\", SelfServiceProfileArgs.builder()\n            .userAttributes(SelfServiceProfileUserAttributeArgs.builder()\n                .name(\"sample-name\")\n                .description(\"sample-description\")\n                .isOptional(true)\n                .build())\n            .branding(SelfServiceProfileBrandingArgs.builder()\n                .logoUrl(\"https://mycompany.org/v2/logo.png\")\n                .colors(SelfServiceProfileBrandingColorsArgs.builder()\n                    .primary(\"#0059d6\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mySelfServiceProfile:\n    type: auth0:SelfServiceProfile\n    name: my_self_service_profile\n    properties:\n      userAttributes:\n        - name: sample-name\n          description: sample-description\n          isOptional: true\n      branding:\n        logoUrl: https://mycompany.org/v2/logo.png\n        colors:\n          primary: '#0059d6'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the id\n\nExample:\n\n```sh\n$ pulumi import auth0:index/selfServiceProfile:SelfServiceProfile id \"ssp_32oi5unksja93124\"\n```\n\n",
            "properties": {
                "allowedStrategies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IdP strategies that will be shown to users during the Self-Service SSO flow.\n"
                },
                "branding": {
                    "$ref": "#/types/auth0:index/SelfServiceProfileBranding:SelfServiceProfileBranding",
                    "description": "Field can be used to customize the look and feel of the wizard.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the profile was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the self-service Profile\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the self-service Profile\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the profile was updated.\n"
                },
                "userAttributeProfileId": {
                    "type": "string",
                    "description": "The ID of the user attribute profile to use for this self-service profile. Cannot be used with user_attributes.\n"
                },
                "userAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/SelfServiceProfileUserAttribute:SelfServiceProfileUserAttribute"
                    },
                    "description": "This array stores the mapping information that will be shown to the user during the SS-SSO flow. The user will be prompted to map the attributes on their identity provider to ensure the specified attributes get passed to Auth0. Cannot be used with user*attribute*profile*id.\n"
                }
            },
            "required": [
                "branding",
                "createdAt",
                "name",
                "updatedAt"
            ],
            "inputProperties": {
                "allowedStrategies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IdP strategies that will be shown to users during the Self-Service SSO flow.\n"
                },
                "branding": {
                    "$ref": "#/types/auth0:index/SelfServiceProfileBranding:SelfServiceProfileBranding",
                    "description": "Field can be used to customize the look and feel of the wizard.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the self-service Profile\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the self-service Profile\n"
                },
                "userAttributeProfileId": {
                    "type": "string",
                    "description": "The ID of the user attribute profile to use for this self-service profile. Cannot be used with user_attributes.\n"
                },
                "userAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/SelfServiceProfileUserAttribute:SelfServiceProfileUserAttribute"
                    },
                    "description": "This array stores the mapping information that will be shown to the user during the SS-SSO flow. The user will be prompted to map the attributes on their identity provider to ensure the specified attributes get passed to Auth0. Cannot be used with user*attribute*profile*id.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SelfServiceProfile resources.\n",
                "properties": {
                    "allowedStrategies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IdP strategies that will be shown to users during the Self-Service SSO flow.\n"
                    },
                    "branding": {
                        "$ref": "#/types/auth0:index/SelfServiceProfileBranding:SelfServiceProfileBranding",
                        "description": "Field can be used to customize the look and feel of the wizard.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The ISO 8601 formatted date the profile was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the self-service Profile\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the self-service Profile\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The ISO 8601 formatted date the profile was updated.\n"
                    },
                    "userAttributeProfileId": {
                        "type": "string",
                        "description": "The ID of the user attribute profile to use for this self-service profile. Cannot be used with user_attributes.\n"
                    },
                    "userAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/SelfServiceProfileUserAttribute:SelfServiceProfileUserAttribute"
                        },
                        "description": "This array stores the mapping information that will be shown to the user during the SS-SSO flow. The user will be prompted to map the attributes on their identity provider to ensure the specified attributes get passed to Auth0. Cannot be used with user*attribute*profile*id.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/selfServiceProfileCustomText:SelfServiceProfileCustomText": {
            "description": "With this resource, you can set custom text for Self-Service Profile\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst ssoCustomText = new auth0.SelfServiceProfileCustomText(\"sso_custom_text\", {\n    ssoId: \"some-sso-id\",\n    language: \"en\",\n    page: \"get-started\",\n    body: JSON.stringify({\n        introduction: \"Welcome! With only a few steps you'll be able to setup your new custom text.\",\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_auth0 as auth0\n\nsso_custom_text = auth0.SelfServiceProfileCustomText(\"sso_custom_text\",\n    sso_id=\"some-sso-id\",\n    language=\"en\",\n    page=\"get-started\",\n    body=json.dumps({\n        \"introduction\": \"Welcome! With only a few steps you'll be able to setup your new custom text.\",\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ssoCustomText = new Auth0.SelfServiceProfileCustomText(\"sso_custom_text\", new()\n    {\n        SsoId = \"some-sso-id\",\n        Language = \"en\",\n        Page = \"get-started\",\n        Body = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"introduction\"] = \"Welcome! With only a few steps you'll be able to setup your new custom text.\",\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"introduction\": \"Welcome! With only a few steps you'll be able to setup your new custom text.\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = auth0.NewSelfServiceProfileCustomText(ctx, \"sso_custom_text\", \u0026auth0.SelfServiceProfileCustomTextArgs{\n\t\t\tSsoId:    pulumi.String(\"some-sso-id\"),\n\t\t\tLanguage: pulumi.String(\"en\"),\n\t\t\tPage:     pulumi.String(\"get-started\"),\n\t\t\tBody:     pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.SelfServiceProfileCustomText;\nimport com.pulumi.auth0.SelfServiceProfileCustomTextArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var ssoCustomText = new SelfServiceProfileCustomText(\"ssoCustomText\", SelfServiceProfileCustomTextArgs.builder()\n            .ssoId(\"some-sso-id\")\n            .language(\"en\")\n            .page(\"get-started\")\n            .body(serializeJson(\n                jsonObject(\n                    jsonProperty(\"introduction\", \"Welcome! With only a few steps you'll be able to setup your new custom text.\")\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ssoCustomText:\n    type: auth0:SelfServiceProfileCustomText\n    name: sso_custom_text\n    properties:\n      ssoId: some-sso-id\n      language: en\n      page: get-started\n      body:\n        fn::toJSON:\n          introduction: Welcome! With only a few steps you'll be able to setup your new custom text.\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\nsso-profile-id, language and page separated by \"::\" (note the double colon)\n\n\u003csso-profile-id\u003e::\u003clanguage\u003e::\u003cpage\u003e\n\nExample\n\n```sh\n$ pulumi import auth0:index/selfServiceProfileCustomText:SelfServiceProfileCustomText example \"some-sso-id::en::get-started\"\n```\n\n",
            "properties": {
                "body": {
                    "type": "string",
                    "description": "The list of text keys and values to customize the self-service SSO page. Values can be plain text or rich HTML content limited to basic styling tags and hyperlinks\n"
                },
                "language": {
                    "type": "string",
                    "description": "The language of the custom text\n"
                },
                "page": {
                    "type": "string",
                    "description": "The page where the custom text is shown\n"
                },
                "ssoId": {
                    "type": "string",
                    "description": "The id of the self-service profile\n"
                }
            },
            "required": [
                "body",
                "language",
                "page",
                "ssoId"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "description": "The list of text keys and values to customize the self-service SSO page. Values can be plain text or rich HTML content limited to basic styling tags and hyperlinks\n"
                },
                "language": {
                    "type": "string",
                    "description": "The language of the custom text\n"
                },
                "page": {
                    "type": "string",
                    "description": "The page where the custom text is shown\n"
                },
                "ssoId": {
                    "type": "string",
                    "description": "The id of the self-service profile\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "body",
                "language",
                "page",
                "ssoId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SelfServiceProfileCustomText resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "The list of text keys and values to customize the self-service SSO page. Values can be plain text or rich HTML content limited to basic styling tags and hyperlinks\n"
                    },
                    "language": {
                        "type": "string",
                        "description": "The language of the custom text\n"
                    },
                    "page": {
                        "type": "string",
                        "description": "The page where the custom text is shown\n"
                    },
                    "ssoId": {
                        "type": "string",
                        "description": "The id of the self-service profile\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/tenant:Tenant": {
            "description": "With this resource, you can manage Auth0 tenants, including setting logos and support contact information, setting error pages, and configuring default tenant behaviors.\n\n\u003e Creating tenants through the Management API is not currently supported. Therefore, this resource can only\nmanage an existing tenant created through the Auth0 dashboard.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myTenant = new auth0.Tenant(\"my_tenant\", {\n    friendlyName: \"Tenant Name\",\n    pictureUrl: \"http://example.com/logo.png\",\n    supportEmail: \"support@example.com\",\n    supportUrl: \"http://example.com/support\",\n    allowedLogoutUrls: [\"http://example.com/logout\"],\n    sessionLifetime: 8760,\n    sandboxVersion: \"22\",\n    enabledLocales: [\"en\"],\n    defaultRedirectionUri: \"https://example.com/login\",\n    flags: {\n        disableClickjackProtectionHeaders: true,\n        enablePublicSignupUserExistsError: true,\n        useScopeDescriptionsForConsent: true,\n        noDiscloseEnterpriseConnections: false,\n        disableManagementApiSmsObfuscation: false,\n        disableFieldsMapFix: false,\n    },\n    sessionCookie: {\n        mode: \"non-persistent\",\n    },\n    sessions: {\n        oidcLogoutPromptEnabled: false,\n    },\n    errorPage: {\n        html: \"\u003chtml\u003e\u003c/html\u003e\",\n        showLogLink: false,\n        url: \"https://example.com/error\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_tenant = auth0.Tenant(\"my_tenant\",\n    friendly_name=\"Tenant Name\",\n    picture_url=\"http://example.com/logo.png\",\n    support_email=\"support@example.com\",\n    support_url=\"http://example.com/support\",\n    allowed_logout_urls=[\"http://example.com/logout\"],\n    session_lifetime=8760,\n    sandbox_version=\"22\",\n    enabled_locales=[\"en\"],\n    default_redirection_uri=\"https://example.com/login\",\n    flags={\n        \"disable_clickjack_protection_headers\": True,\n        \"enable_public_signup_user_exists_error\": True,\n        \"use_scope_descriptions_for_consent\": True,\n        \"no_disclose_enterprise_connections\": False,\n        \"disable_management_api_sms_obfuscation\": False,\n        \"disable_fields_map_fix\": False,\n    },\n    session_cookie={\n        \"mode\": \"non-persistent\",\n    },\n    sessions={\n        \"oidc_logout_prompt_enabled\": False,\n    },\n    error_page={\n        \"html\": \"\u003chtml\u003e\u003c/html\u003e\",\n        \"show_log_link\": False,\n        \"url\": \"https://example.com/error\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myTenant = new Auth0.Tenant(\"my_tenant\", new()\n    {\n        FriendlyName = \"Tenant Name\",\n        PictureUrl = \"http://example.com/logo.png\",\n        SupportEmail = \"support@example.com\",\n        SupportUrl = \"http://example.com/support\",\n        AllowedLogoutUrls = new[]\n        {\n            \"http://example.com/logout\",\n        },\n        SessionLifetime = 8760,\n        SandboxVersion = \"22\",\n        EnabledLocales = new[]\n        {\n            \"en\",\n        },\n        DefaultRedirectionUri = \"https://example.com/login\",\n        Flags = new Auth0.Inputs.TenantFlagsArgs\n        {\n            DisableClickjackProtectionHeaders = true,\n            EnablePublicSignupUserExistsError = true,\n            UseScopeDescriptionsForConsent = true,\n            NoDiscloseEnterpriseConnections = false,\n            DisableManagementApiSmsObfuscation = false,\n            DisableFieldsMapFix = false,\n        },\n        SessionCookie = new Auth0.Inputs.TenantSessionCookieArgs\n        {\n            Mode = \"non-persistent\",\n        },\n        Sessions = new Auth0.Inputs.TenantSessionsArgs\n        {\n            OidcLogoutPromptEnabled = false,\n        },\n        ErrorPage = new Auth0.Inputs.TenantErrorPageArgs\n        {\n            Html = \"\u003chtml\u003e\u003c/html\u003e\",\n            ShowLogLink = false,\n            Url = \"https://example.com/error\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewTenant(ctx, \"my_tenant\", \u0026auth0.TenantArgs{\n\t\t\tFriendlyName: pulumi.String(\"Tenant Name\"),\n\t\t\tPictureUrl:   pulumi.String(\"http://example.com/logo.png\"),\n\t\t\tSupportEmail: pulumi.String(\"support@example.com\"),\n\t\t\tSupportUrl:   pulumi.String(\"http://example.com/support\"),\n\t\t\tAllowedLogoutUrls: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"http://example.com/logout\"),\n\t\t\t},\n\t\t\tSessionLifetime: pulumi.Float64(8760),\n\t\t\tSandboxVersion:  pulumi.String(\"22\"),\n\t\t\tEnabledLocales: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"en\"),\n\t\t\t},\n\t\t\tDefaultRedirectionUri: pulumi.String(\"https://example.com/login\"),\n\t\t\tFlags: \u0026auth0.TenantFlagsArgs{\n\t\t\t\tDisableClickjackProtectionHeaders:  pulumi.Bool(true),\n\t\t\t\tEnablePublicSignupUserExistsError:  pulumi.Bool(true),\n\t\t\t\tUseScopeDescriptionsForConsent:     pulumi.Bool(true),\n\t\t\t\tNoDiscloseEnterpriseConnections:    pulumi.Bool(false),\n\t\t\t\tDisableManagementApiSmsObfuscation: pulumi.Bool(false),\n\t\t\t\tDisableFieldsMapFix:                pulumi.Bool(false),\n\t\t\t},\n\t\t\tSessionCookie: \u0026auth0.TenantSessionCookieArgs{\n\t\t\t\tMode: pulumi.String(\"non-persistent\"),\n\t\t\t},\n\t\t\tSessions: \u0026auth0.TenantSessionsArgs{\n\t\t\t\tOidcLogoutPromptEnabled: pulumi.Bool(false),\n\t\t\t},\n\t\t\tErrorPage: \u0026auth0.TenantErrorPageArgs{\n\t\t\t\tHtml:        pulumi.String(\"\u003chtml\u003e\u003c/html\u003e\"),\n\t\t\t\tShowLogLink: pulumi.Bool(false),\n\t\t\t\tUrl:         pulumi.String(\"https://example.com/error\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Tenant;\nimport com.pulumi.auth0.TenantArgs;\nimport com.pulumi.auth0.inputs.TenantFlagsArgs;\nimport com.pulumi.auth0.inputs.TenantSessionCookieArgs;\nimport com.pulumi.auth0.inputs.TenantSessionsArgs;\nimport com.pulumi.auth0.inputs.TenantErrorPageArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myTenant = new Tenant(\"myTenant\", TenantArgs.builder()\n            .friendlyName(\"Tenant Name\")\n            .pictureUrl(\"http://example.com/logo.png\")\n            .supportEmail(\"support@example.com\")\n            .supportUrl(\"http://example.com/support\")\n            .allowedLogoutUrls(\"http://example.com/logout\")\n            .sessionLifetime(8760.0)\n            .sandboxVersion(\"22\")\n            .enabledLocales(\"en\")\n            .defaultRedirectionUri(\"https://example.com/login\")\n            .flags(TenantFlagsArgs.builder()\n                .disableClickjackProtectionHeaders(true)\n                .enablePublicSignupUserExistsError(true)\n                .useScopeDescriptionsForConsent(true)\n                .noDiscloseEnterpriseConnections(false)\n                .disableManagementApiSmsObfuscation(false)\n                .disableFieldsMapFix(false)\n                .build())\n            .sessionCookie(TenantSessionCookieArgs.builder()\n                .mode(\"non-persistent\")\n                .build())\n            .sessions(TenantSessionsArgs.builder()\n                .oidcLogoutPromptEnabled(false)\n                .build())\n            .errorPage(TenantErrorPageArgs.builder()\n                .html(\"\u003chtml\u003e\u003c/html\u003e\")\n                .showLogLink(false)\n                .url(\"https://example.com/error\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myTenant:\n    type: auth0:Tenant\n    name: my_tenant\n    properties:\n      friendlyName: Tenant Name\n      pictureUrl: http://example.com/logo.png\n      supportEmail: support@example.com\n      supportUrl: http://example.com/support\n      allowedLogoutUrls:\n        - http://example.com/logout\n      sessionLifetime: 8760\n      sandboxVersion: '22'\n      enabledLocales:\n        - en\n      defaultRedirectionUri: https://example.com/login\n      flags:\n        disableClickjackProtectionHeaders: true\n        enablePublicSignupUserExistsError: true\n        useScopeDescriptionsForConsent: true\n        noDiscloseEnterpriseConnections: false\n        disableManagementApiSmsObfuscation: false\n        disableFieldsMapFix: false\n      sessionCookie:\n        mode: non-persistent\n      sessions:\n        oidcLogoutPromptEnabled: false\n      errorPage:\n        html: \u003chtml\u003e\u003c/html\u003e\n        showLogLink: false\n        url: https://example.com/error\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAs this is not a resource identifiable by an ID within the Auth0 Management API,\n\ntenant can be imported using a random string.\n\nWe recommend [Version 4 UUID](https://www.uuidgenerator.net/version4)\n\nExample:\n\n```sh\n$ pulumi import auth0:index/tenant:Tenant my_tenant \"82f4f21b-017a-319d-92e7-2291c1ca36c4\"\n```\n\n",
            "properties": {
                "acrValuesSupporteds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of supported ACR values.\n"
                },
                "allowOrganizationNameInAuthenticationApi": {
                    "type": "boolean",
                    "description": "Whether to accept an organization name instead of an ID on auth endpoints.\n"
                },
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that Auth0 may redirect to after logout.\n"
                },
                "customizeMfaInPostloginAction": {
                    "type": "boolean",
                    "description": "Whether to enable flexible factors for MFA in the PostLogin action.\n"
                },
                "defaultAudience": {
                    "type": "string",
                    "description": "API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.\n"
                },
                "defaultDirectory": {
                    "type": "string",
                    "description": "Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, \u003cspan pulumi-lang-nodejs=\"`ad`\" pulumi-lang-dotnet=\"`Ad`\" pulumi-lang-go=\"`ad`\" pulumi-lang-python=\"`ad`\" pulumi-lang-yaml=\"`ad`\" pulumi-lang-java=\"`ad`\"\u003e`ad`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`auth0`\" pulumi-lang-dotnet=\"`Auth0`\" pulumi-lang-go=\"`auth0`\" pulumi-lang-python=\"`auth0`\" pulumi-lang-yaml=\"`auth0`\" pulumi-lang-java=\"`auth0`\"\u003e`auth0`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sms`\" pulumi-lang-dotnet=\"`Sms`\" pulumi-lang-go=\"`sms`\" pulumi-lang-python=\"`sms`\" pulumi-lang-yaml=\"`sms`\" pulumi-lang-java=\"`sms`\"\u003e`sms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`waad`\" pulumi-lang-dotnet=\"`Waad`\" pulumi-lang-go=\"`waad`\" pulumi-lang-python=\"`waad`\" pulumi-lang-yaml=\"`waad`\" pulumi-lang-java=\"`waad`\"\u003e`waad`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`adfs`\" pulumi-lang-dotnet=\"`Adfs`\" pulumi-lang-go=\"`adfs`\" pulumi-lang-python=\"`adfs`\" pulumi-lang-yaml=\"`adfs`\" pulumi-lang-java=\"`adfs`\"\u003e`adfs`\u003c/span\u003e.\n"
                },
                "defaultRedirectionUri": {
                    "type": "string",
                    "description": "The default absolute redirection URI. Must be HTTPS or an empty string.\n"
                },
                "defaultTokenQuota": {
                    "$ref": "#/types/auth0:index/TenantDefaultTokenQuota:TenantDefaultTokenQuota",
                    "description": "Token Quota configuration.\n"
                },
                "disableAcrValuesSupported": {
                    "type": "boolean",
                    "description": "Disable list of supported ACR values.\n"
                },
                "enabledLocales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported locales for the user interface. The first locale in the list will be used to set the default locale.\n"
                },
                "errorPage": {
                    "$ref": "#/types/auth0:index/TenantErrorPage:TenantErrorPage",
                    "description": "Configuration for the error page\n"
                },
                "flags": {
                    "$ref": "#/types/auth0:index/TenantFlags:TenantFlags",
                    "description": "Configuration settings for tenant flags.\n"
                },
                "friendlyName": {
                    "type": "string",
                    "description": "Friendly name for the tenant.\n"
                },
                "idleSessionLifetime": {
                    "type": "number",
                    "description": "Number of hours during which a session can be inactive before the user must log in again.\n"
                },
                "mtls": {
                    "$ref": "#/types/auth0:index/TenantMtls:TenantMtls",
                    "description": "Configuration for mTLS.\n"
                },
                "oidcLogout": {
                    "$ref": "#/types/auth0:index/TenantOidcLogout:TenantOidcLogout",
                    "description": "Settings related to OIDC RP-initiated Logout.\n"
                },
                "pictureUrl": {
                    "type": "string",
                    "description": "URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.\n"
                },
                "pushedAuthorizationRequestsSupported": {
                    "type": "boolean",
                    "description": "Enable pushed authorization requests.\n"
                },
                "sandboxVersion": {
                    "type": "string",
                    "description": "Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0's functionality.\n"
                },
                "sessionCookie": {
                    "$ref": "#/types/auth0:index/TenantSessionCookie:TenantSessionCookie",
                    "description": "Alters behavior of tenant's session cookie. Contains a single \u003cspan pulumi-lang-nodejs=\"`mode`\" pulumi-lang-dotnet=\"`Mode`\" pulumi-lang-go=\"`mode`\" pulumi-lang-python=\"`mode`\" pulumi-lang-yaml=\"`mode`\" pulumi-lang-java=\"`mode`\"\u003e`mode`\u003c/span\u003e property.\n"
                },
                "sessionLifetime": {
                    "type": "number",
                    "description": "Number of hours during which a session will stay valid.\n"
                },
                "sessions": {
                    "$ref": "#/types/auth0:index/TenantSessions:TenantSessions",
                    "description": "Sessions related settings for the tenant.\n"
                },
                "skipNonVerifiableCallbackUriConfirmationPrompt": {
                    "type": "string",
                    "description": "Indicates whether the confirmation prompt appears when using non-verifiable callback URIs. Set to true to skip the prompt, false to show it, or null to unset. Accepts (true/false/null) or (\"true\"/\"false\"/\"null\")\n"
                },
                "supportEmail": {
                    "type": "string",
                    "description": "Support email address for authenticating users.\n"
                },
                "supportUrl": {
                    "type": "string",
                    "description": "Support URL for authenticating users.\n"
                }
            },
            "required": [
                "acrValuesSupporteds",
                "allowOrganizationNameInAuthenticationApi",
                "allowedLogoutUrls",
                "customizeMfaInPostloginAction",
                "defaultAudience",
                "defaultDirectory",
                "defaultRedirectionUri",
                "disableAcrValuesSupported",
                "enabledLocales",
                "flags",
                "friendlyName",
                "mtls",
                "oidcLogout",
                "pictureUrl",
                "pushedAuthorizationRequestsSupported",
                "sandboxVersion",
                "sessionCookie",
                "sessions",
                "supportEmail",
                "supportUrl"
            ],
            "inputProperties": {
                "acrValuesSupporteds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of supported ACR values.\n"
                },
                "allowOrganizationNameInAuthenticationApi": {
                    "type": "boolean",
                    "description": "Whether to accept an organization name instead of an ID on auth endpoints.\n"
                },
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "URLs that Auth0 may redirect to after logout.\n"
                },
                "customizeMfaInPostloginAction": {
                    "type": "boolean",
                    "description": "Whether to enable flexible factors for MFA in the PostLogin action.\n"
                },
                "defaultAudience": {
                    "type": "string",
                    "description": "API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.\n"
                },
                "defaultDirectory": {
                    "type": "string",
                    "description": "Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, \u003cspan pulumi-lang-nodejs=\"`ad`\" pulumi-lang-dotnet=\"`Ad`\" pulumi-lang-go=\"`ad`\" pulumi-lang-python=\"`ad`\" pulumi-lang-yaml=\"`ad`\" pulumi-lang-java=\"`ad`\"\u003e`ad`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`auth0`\" pulumi-lang-dotnet=\"`Auth0`\" pulumi-lang-go=\"`auth0`\" pulumi-lang-python=\"`auth0`\" pulumi-lang-yaml=\"`auth0`\" pulumi-lang-java=\"`auth0`\"\u003e`auth0`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sms`\" pulumi-lang-dotnet=\"`Sms`\" pulumi-lang-go=\"`sms`\" pulumi-lang-python=\"`sms`\" pulumi-lang-yaml=\"`sms`\" pulumi-lang-java=\"`sms`\"\u003e`sms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`waad`\" pulumi-lang-dotnet=\"`Waad`\" pulumi-lang-go=\"`waad`\" pulumi-lang-python=\"`waad`\" pulumi-lang-yaml=\"`waad`\" pulumi-lang-java=\"`waad`\"\u003e`waad`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`adfs`\" pulumi-lang-dotnet=\"`Adfs`\" pulumi-lang-go=\"`adfs`\" pulumi-lang-python=\"`adfs`\" pulumi-lang-yaml=\"`adfs`\" pulumi-lang-java=\"`adfs`\"\u003e`adfs`\u003c/span\u003e.\n"
                },
                "defaultRedirectionUri": {
                    "type": "string",
                    "description": "The default absolute redirection URI. Must be HTTPS or an empty string.\n"
                },
                "defaultTokenQuota": {
                    "$ref": "#/types/auth0:index/TenantDefaultTokenQuota:TenantDefaultTokenQuota",
                    "description": "Token Quota configuration.\n"
                },
                "disableAcrValuesSupported": {
                    "type": "boolean",
                    "description": "Disable list of supported ACR values.\n"
                },
                "enabledLocales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported locales for the user interface. The first locale in the list will be used to set the default locale.\n"
                },
                "errorPage": {
                    "$ref": "#/types/auth0:index/TenantErrorPage:TenantErrorPage",
                    "description": "Configuration for the error page\n"
                },
                "flags": {
                    "$ref": "#/types/auth0:index/TenantFlags:TenantFlags",
                    "description": "Configuration settings for tenant flags.\n"
                },
                "friendlyName": {
                    "type": "string",
                    "description": "Friendly name for the tenant.\n"
                },
                "idleSessionLifetime": {
                    "type": "number",
                    "description": "Number of hours during which a session can be inactive before the user must log in again.\n"
                },
                "mtls": {
                    "$ref": "#/types/auth0:index/TenantMtls:TenantMtls",
                    "description": "Configuration for mTLS.\n"
                },
                "oidcLogout": {
                    "$ref": "#/types/auth0:index/TenantOidcLogout:TenantOidcLogout",
                    "description": "Settings related to OIDC RP-initiated Logout.\n"
                },
                "pictureUrl": {
                    "type": "string",
                    "description": "URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.\n"
                },
                "pushedAuthorizationRequestsSupported": {
                    "type": "boolean",
                    "description": "Enable pushed authorization requests.\n"
                },
                "sandboxVersion": {
                    "type": "string",
                    "description": "Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0's functionality.\n"
                },
                "sessionCookie": {
                    "$ref": "#/types/auth0:index/TenantSessionCookie:TenantSessionCookie",
                    "description": "Alters behavior of tenant's session cookie. Contains a single \u003cspan pulumi-lang-nodejs=\"`mode`\" pulumi-lang-dotnet=\"`Mode`\" pulumi-lang-go=\"`mode`\" pulumi-lang-python=\"`mode`\" pulumi-lang-yaml=\"`mode`\" pulumi-lang-java=\"`mode`\"\u003e`mode`\u003c/span\u003e property.\n"
                },
                "sessionLifetime": {
                    "type": "number",
                    "description": "Number of hours during which a session will stay valid.\n"
                },
                "sessions": {
                    "$ref": "#/types/auth0:index/TenantSessions:TenantSessions",
                    "description": "Sessions related settings for the tenant.\n"
                },
                "skipNonVerifiableCallbackUriConfirmationPrompt": {
                    "type": "string",
                    "description": "Indicates whether the confirmation prompt appears when using non-verifiable callback URIs. Set to true to skip the prompt, false to show it, or null to unset. Accepts (true/false/null) or (\"true\"/\"false\"/\"null\")\n"
                },
                "supportEmail": {
                    "type": "string",
                    "description": "Support email address for authenticating users.\n"
                },
                "supportUrl": {
                    "type": "string",
                    "description": "Support URL for authenticating users.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tenant resources.\n",
                "properties": {
                    "acrValuesSupporteds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of supported ACR values.\n"
                    },
                    "allowOrganizationNameInAuthenticationApi": {
                        "type": "boolean",
                        "description": "Whether to accept an organization name instead of an ID on auth endpoints.\n"
                    },
                    "allowedLogoutUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "URLs that Auth0 may redirect to after logout.\n"
                    },
                    "customizeMfaInPostloginAction": {
                        "type": "boolean",
                        "description": "Whether to enable flexible factors for MFA in the PostLogin action.\n"
                    },
                    "defaultAudience": {
                        "type": "string",
                        "description": "API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.\n"
                    },
                    "defaultDirectory": {
                        "type": "string",
                        "description": "Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, \u003cspan pulumi-lang-nodejs=\"`ad`\" pulumi-lang-dotnet=\"`Ad`\" pulumi-lang-go=\"`ad`\" pulumi-lang-python=\"`ad`\" pulumi-lang-yaml=\"`ad`\" pulumi-lang-java=\"`ad`\"\u003e`ad`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`auth0`\" pulumi-lang-dotnet=\"`Auth0`\" pulumi-lang-go=\"`auth0`\" pulumi-lang-python=\"`auth0`\" pulumi-lang-yaml=\"`auth0`\" pulumi-lang-java=\"`auth0`\"\u003e`auth0`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sms`\" pulumi-lang-dotnet=\"`Sms`\" pulumi-lang-go=\"`sms`\" pulumi-lang-python=\"`sms`\" pulumi-lang-yaml=\"`sms`\" pulumi-lang-java=\"`sms`\"\u003e`sms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`waad`\" pulumi-lang-dotnet=\"`Waad`\" pulumi-lang-go=\"`waad`\" pulumi-lang-python=\"`waad`\" pulumi-lang-yaml=\"`waad`\" pulumi-lang-java=\"`waad`\"\u003e`waad`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`adfs`\" pulumi-lang-dotnet=\"`Adfs`\" pulumi-lang-go=\"`adfs`\" pulumi-lang-python=\"`adfs`\" pulumi-lang-yaml=\"`adfs`\" pulumi-lang-java=\"`adfs`\"\u003e`adfs`\u003c/span\u003e.\n"
                    },
                    "defaultRedirectionUri": {
                        "type": "string",
                        "description": "The default absolute redirection URI. Must be HTTPS or an empty string.\n"
                    },
                    "defaultTokenQuota": {
                        "$ref": "#/types/auth0:index/TenantDefaultTokenQuota:TenantDefaultTokenQuota",
                        "description": "Token Quota configuration.\n"
                    },
                    "disableAcrValuesSupported": {
                        "type": "boolean",
                        "description": "Disable list of supported ACR values.\n"
                    },
                    "enabledLocales": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Supported locales for the user interface. The first locale in the list will be used to set the default locale.\n"
                    },
                    "errorPage": {
                        "$ref": "#/types/auth0:index/TenantErrorPage:TenantErrorPage",
                        "description": "Configuration for the error page\n"
                    },
                    "flags": {
                        "$ref": "#/types/auth0:index/TenantFlags:TenantFlags",
                        "description": "Configuration settings for tenant flags.\n"
                    },
                    "friendlyName": {
                        "type": "string",
                        "description": "Friendly name for the tenant.\n"
                    },
                    "idleSessionLifetime": {
                        "type": "number",
                        "description": "Number of hours during which a session can be inactive before the user must log in again.\n"
                    },
                    "mtls": {
                        "$ref": "#/types/auth0:index/TenantMtls:TenantMtls",
                        "description": "Configuration for mTLS.\n"
                    },
                    "oidcLogout": {
                        "$ref": "#/types/auth0:index/TenantOidcLogout:TenantOidcLogout",
                        "description": "Settings related to OIDC RP-initiated Logout.\n"
                    },
                    "pictureUrl": {
                        "type": "string",
                        "description": "URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.\n"
                    },
                    "pushedAuthorizationRequestsSupported": {
                        "type": "boolean",
                        "description": "Enable pushed authorization requests.\n"
                    },
                    "sandboxVersion": {
                        "type": "string",
                        "description": "Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0's functionality.\n"
                    },
                    "sessionCookie": {
                        "$ref": "#/types/auth0:index/TenantSessionCookie:TenantSessionCookie",
                        "description": "Alters behavior of tenant's session cookie. Contains a single \u003cspan pulumi-lang-nodejs=\"`mode`\" pulumi-lang-dotnet=\"`Mode`\" pulumi-lang-go=\"`mode`\" pulumi-lang-python=\"`mode`\" pulumi-lang-yaml=\"`mode`\" pulumi-lang-java=\"`mode`\"\u003e`mode`\u003c/span\u003e property.\n"
                    },
                    "sessionLifetime": {
                        "type": "number",
                        "description": "Number of hours during which a session will stay valid.\n"
                    },
                    "sessions": {
                        "$ref": "#/types/auth0:index/TenantSessions:TenantSessions",
                        "description": "Sessions related settings for the tenant.\n"
                    },
                    "skipNonVerifiableCallbackUriConfirmationPrompt": {
                        "type": "string",
                        "description": "Indicates whether the confirmation prompt appears when using non-verifiable callback URIs. Set to true to skip the prompt, false to show it, or null to unset. Accepts (true/false/null) or (\"true\"/\"false\"/\"null\")\n"
                    },
                    "supportEmail": {
                        "type": "string",
                        "description": "Support email address for authenticating users.\n"
                    },
                    "supportUrl": {
                        "type": "string",
                        "description": "Support URL for authenticating users.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/tokenExchangeProfile:TokenExchangeProfile": {
            "description": "With this resource, you can manage Auth0 Custom Token Exchange Profiles\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Below action is created with custom-token-exchange as supported_triggers\n// This action is then linked using the action_id param to the token-exchange profile\nconst myAction = new auth0.Action(\"my_action\", {\n    name: \"TokenExchange-Action\",\n    code: `exports.onExecuteCustomTokenExchange = async (event, api) =\u003e {\n\\\\tconsole.log(\\\\\"foo\\\\\")\n};\\\\\"\n`,\n    deploy: true,\n    supportedTriggers: {\n        id: \"custom-token-exchange\",\n        version: \"v1\",\n    },\n});\nconst myTokenExchangeProfile = new auth0.TokenExchangeProfile(\"my_token_exchange_profile\", {\n    name: \"token-exchange-prof\",\n    subjectTokenType: \"https://acme.com/cis-token\",\n    actionId: myAction.id,\n    type: \"custom_authentication\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# Below action is created with custom-token-exchange as supported_triggers\n# This action is then linked using the action_id param to the token-exchange profile\nmy_action = auth0.Action(\"my_action\",\n    name=\"TokenExchange-Action\",\n    code=\"\"\"exports.onExecuteCustomTokenExchange = async (event, api) =\u003e {\n\\tconsole.log(\\\"foo\\\")\n};\\\"\n\"\"\",\n    deploy=True,\n    supported_triggers={\n        \"id\": \"custom-token-exchange\",\n        \"version\": \"v1\",\n    })\nmy_token_exchange_profile = auth0.TokenExchangeProfile(\"my_token_exchange_profile\",\n    name=\"token-exchange-prof\",\n    subject_token_type=\"https://acme.com/cis-token\",\n    action_id=my_action.id,\n    type=\"custom_authentication\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Below action is created with custom-token-exchange as supported_triggers\n    // This action is then linked using the action_id param to the token-exchange profile\n    var myAction = new Auth0.Action(\"my_action\", new()\n    {\n        Name = \"TokenExchange-Action\",\n        Code = @\"exports.onExecuteCustomTokenExchange = async (event, api) =\u003e {\n\\tconsole.log(\\\"\"foo\\\"\")\n};\\\"\"\n\",\n        Deploy = true,\n        SupportedTriggers = new Auth0.Inputs.ActionSupportedTriggersArgs\n        {\n            Id = \"custom-token-exchange\",\n            Version = \"v1\",\n        },\n    });\n\n    var myTokenExchangeProfile = new Auth0.TokenExchangeProfile(\"my_token_exchange_profile\", new()\n    {\n        Name = \"token-exchange-prof\",\n        SubjectTokenType = \"https://acme.com/cis-token\",\n        ActionId = myAction.Id,\n        Type = \"custom_authentication\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Below action is created with custom-token-exchange as supported_triggers\n\t\t// This action is then linked using the action_id param to the token-exchange profile\n\t\tmyAction, err := auth0.NewAction(ctx, \"my_action\", \u0026auth0.ActionArgs{\n\t\t\tName:   pulumi.String(\"TokenExchange-Action\"),\n\t\t\tCode:   pulumi.String(\"exports.onExecuteCustomTokenExchange = async (event, api) =\u003e {\\n\\\\tconsole.log(\\\\\\\"foo\\\\\\\")\\n};\\\\\\\"\\n\"),\n\t\t\tDeploy: pulumi.Bool(true),\n\t\t\tSupportedTriggers: \u0026auth0.ActionSupportedTriggersArgs{\n\t\t\t\tId:      pulumi.String(\"custom-token-exchange\"),\n\t\t\t\tVersion: pulumi.String(\"v1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewTokenExchangeProfile(ctx, \"my_token_exchange_profile\", \u0026auth0.TokenExchangeProfileArgs{\n\t\t\tName:             pulumi.String(\"token-exchange-prof\"),\n\t\t\tSubjectTokenType: pulumi.String(\"https://acme.com/cis-token\"),\n\t\t\tActionId:         myAction.ID(),\n\t\t\tType:             pulumi.String(\"custom_authentication\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Action;\nimport com.pulumi.auth0.ActionArgs;\nimport com.pulumi.auth0.inputs.ActionSupportedTriggersArgs;\nimport com.pulumi.auth0.TokenExchangeProfile;\nimport com.pulumi.auth0.TokenExchangeProfileArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Below action is created with custom-token-exchange as supported_triggers\n        // This action is then linked using the action_id param to the token-exchange profile\n        var myAction = new Action(\"myAction\", ActionArgs.builder()\n            .name(\"TokenExchange-Action\")\n            .code(\"\"\"\nexports.onExecuteCustomTokenExchange = async (event, api) =\u003e {\n\\tconsole.log(\\\"foo\\\")\n};\\\"\n            \"\"\")\n            .deploy(true)\n            .supportedTriggers(ActionSupportedTriggersArgs.builder()\n                .id(\"custom-token-exchange\")\n                .version(\"v1\")\n                .build())\n            .build());\n\n        var myTokenExchangeProfile = new TokenExchangeProfile(\"myTokenExchangeProfile\", TokenExchangeProfileArgs.builder()\n            .name(\"token-exchange-prof\")\n            .subjectTokenType(\"https://acme.com/cis-token\")\n            .actionId(myAction.id())\n            .type(\"custom_authentication\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myTokenExchangeProfile:\n    type: auth0:TokenExchangeProfile\n    name: my_token_exchange_profile\n    properties:\n      name: token-exchange-prof\n      subjectTokenType: https://acme.com/cis-token\n      actionId: ${myAction.id}\n      type: custom_authentication\n  # Below action is created with custom-token-exchange as supported_triggers\n  # This action is then linked using the action_id param to the token-exchange profile\n  myAction:\n    type: auth0:Action\n    name: my_action\n    properties:\n      name: TokenExchange-Action\n      code: |\n        exports.onExecuteCustomTokenExchange = async (event, api) =\u003e {\n        \\tconsole.log(\\\"foo\\\")\n        };\\\"\n      deploy: true\n      supportedTriggers:\n        id: custom-token-exchange\n        version: v1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the token exchange profile ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/tokenExchangeProfile:TokenExchangeProfile profile \"tep_XXXXXXXXXXXXXX\"\n```\n\n",
            "properties": {
                "actionId": {
                    "type": "string",
                    "description": "Unique identifier of the Action\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was created.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the token exchange profile.\n"
                },
                "subjectTokenType": {
                    "type": "string",
                    "description": "Type of the subject token\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the token exchange profile\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The ISO 8601 formatted date the credential was updated.\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "type",
                "updatedAt"
            ],
            "inputProperties": {
                "actionId": {
                    "type": "string",
                    "description": "Unique identifier of the Action\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the token exchange profile.\n"
                },
                "subjectTokenType": {
                    "type": "string",
                    "description": "Type of the subject token\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the token exchange profile\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TokenExchangeProfile resources.\n",
                "properties": {
                    "actionId": {
                        "type": "string",
                        "description": "Unique identifier of the Action\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The ISO 8601 formatted date the credential was created.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the token exchange profile.\n"
                    },
                    "subjectTokenType": {
                        "type": "string",
                        "description": "Type of the subject token\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the token exchange profile\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The ISO 8601 formatted date the credential was updated.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/triggerAction:TriggerAction": {
            "description": "With this resource, you can bind an action to a trigger. Once an action is created and deployed, it can be attached (i.e. bound) to a trigger so that it will be executed as part of a flow.\n\nOrdering of an action within a specific flow is not currently supported when using this resource; the action will get appended to the end of the flow. To precisely manage ordering, it is advised to either do so with the dashboard UI or with the \u003cspan pulumi-lang-nodejs=\"`auth0TriggerBindings`\" pulumi-lang-dotnet=\"`Auth0TriggerBindings`\" pulumi-lang-go=\"`auth0TriggerBindings`\" pulumi-lang-python=\"`auth0_trigger_bindings`\" pulumi-lang-yaml=\"`auth0TriggerBindings`\" pulumi-lang-java=\"`auth0TriggerBindings`\"\u003e`auth0_trigger_bindings`\u003c/span\u003e resource.\n\n!\u003e This resource appends an action to the trigger binding. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.TriggerActions`\" pulumi-lang-dotnet=\"`auth0.TriggerActions`\" pulumi-lang-go=\"`TriggerActions`\" pulumi-lang-python=\"`TriggerActions`\" pulumi-lang-yaml=\"`auth0.TriggerActions`\" pulumi-lang-java=\"`auth0.TriggerActions`\"\u003e`auth0.TriggerActions`\u003c/span\u003e resource manages all\nthe action bindings to a trigger. To avoid potential issues, it is recommended not to use this resource in conjunction\nwith the \u003cspan pulumi-lang-nodejs=\"`auth0.TriggerAction`\" pulumi-lang-dotnet=\"`auth0.TriggerAction`\" pulumi-lang-go=\"`TriggerAction`\" pulumi-lang-python=\"`TriggerAction`\" pulumi-lang-yaml=\"`auth0.TriggerAction`\" pulumi-lang-java=\"`auth0.TriggerAction`\"\u003e`auth0.TriggerAction`\u003c/span\u003e resource when binding actions to the same trigger.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst loginAlert = new auth0.Action(\"login_alert\", {\n    name: \"Alert after login\",\n    code: `exports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\\\"foo\\\\\");\n};\\\\\"\n`,\n    deploy: true,\n    supportedTriggers: {\n        id: \"post-login\",\n        version: \"v3\",\n    },\n});\nconst postLoginAlertAction = new auth0.TriggerAction(\"post_login_alert_action\", {\n    trigger: \"post-login\",\n    actionId: loginAlert.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nlogin_alert = auth0.Action(\"login_alert\",\n    name=\"Alert after login\",\n    code=\"\"\"exports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\"foo\\\");\n};\\\"\n\"\"\",\n    deploy=True,\n    supported_triggers={\n        \"id\": \"post-login\",\n        \"version\": \"v3\",\n    })\npost_login_alert_action = auth0.TriggerAction(\"post_login_alert_action\",\n    trigger=\"post-login\",\n    action_id=login_alert.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var loginAlert = new Auth0.Action(\"login_alert\", new()\n    {\n        Name = \"Alert after login\",\n        Code = @\"exports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\"\"foo\\\"\");\n};\\\"\"\n\",\n        Deploy = true,\n        SupportedTriggers = new Auth0.Inputs.ActionSupportedTriggersArgs\n        {\n            Id = \"post-login\",\n            Version = \"v3\",\n        },\n    });\n\n    var postLoginAlertAction = new Auth0.TriggerAction(\"post_login_alert_action\", new()\n    {\n        Trigger = \"post-login\",\n        ActionId = loginAlert.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tloginAlert, err := auth0.NewAction(ctx, \"login_alert\", \u0026auth0.ActionArgs{\n\t\t\tName:   pulumi.String(\"Alert after login\"),\n\t\t\tCode:   pulumi.String(\"exports.onContinuePostLogin = async (event, api) =\u003e {\\n  console.log(\\\\\\\"foo\\\\\\\");\\n};\\\\\\\"\\n\"),\n\t\t\tDeploy: pulumi.Bool(true),\n\t\t\tSupportedTriggers: \u0026auth0.ActionSupportedTriggersArgs{\n\t\t\t\tId:      pulumi.String(\"post-login\"),\n\t\t\t\tVersion: pulumi.String(\"v3\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewTriggerAction(ctx, \"post_login_alert_action\", \u0026auth0.TriggerActionArgs{\n\t\t\tTrigger:  pulumi.String(\"post-login\"),\n\t\t\tActionId: loginAlert.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Action;\nimport com.pulumi.auth0.ActionArgs;\nimport com.pulumi.auth0.inputs.ActionSupportedTriggersArgs;\nimport com.pulumi.auth0.TriggerAction;\nimport com.pulumi.auth0.TriggerActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var loginAlert = new Action(\"loginAlert\", ActionArgs.builder()\n            .name(\"Alert after login\")\n            .code(\"\"\"\nexports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\"foo\\\");\n};\\\"\n            \"\"\")\n            .deploy(true)\n            .supportedTriggers(ActionSupportedTriggersArgs.builder()\n                .id(\"post-login\")\n                .version(\"v3\")\n                .build())\n            .build());\n\n        var postLoginAlertAction = new TriggerAction(\"postLoginAlertAction\", TriggerActionArgs.builder()\n            .trigger(\"post-login\")\n            .actionId(loginAlert.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  loginAlert:\n    type: auth0:Action\n    name: login_alert\n    properties:\n      name: Alert after login\n      code: |\n        exports.onContinuePostLogin = async (event, api) =\u003e {\n          console.log(\\\"foo\\\");\n        };\\\"\n      deploy: true\n      supportedTriggers:\n        id: post-login\n        version: v3\n  postLoginAlertAction:\n    type: auth0:TriggerAction\n    name: post_login_alert_action\n    properties:\n      trigger: post-login\n      actionId: ${loginAlert.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\ntrigger and action ID separated by \"::\" (note the double colon)\n\n\u003ctrigger\u003e::\u003cactionID\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/triggerAction:TriggerAction post_login_action \"post-login::28b5c8fa-d371-5734-acf6-d0cf80ead918\"\n```\n\n",
            "properties": {
                "actionId": {
                    "type": "string",
                    "description": "The ID of the action to bind to the trigger.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The name for this action within the trigger. This can be useful for distinguishing between multiple instances of the same action bound to a trigger. Defaults to action name when not provided.\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The ID of the trigger to bind with. Available options: `post-login`, `credentials-exchange`, `pre-user-registration`, `post-user-registration`, `post-change-password`, `send-phone-message`, `password-reset-post-challenge`, `custom-email-provider`, `custom-phone-provider`.\n"
                }
            },
            "required": [
                "actionId",
                "displayName",
                "trigger"
            ],
            "inputProperties": {
                "actionId": {
                    "type": "string",
                    "description": "The ID of the action to bind to the trigger.\n",
                    "willReplaceOnChanges": true
                },
                "displayName": {
                    "type": "string",
                    "description": "The name for this action within the trigger. This can be useful for distinguishing between multiple instances of the same action bound to a trigger. Defaults to action name when not provided.\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The ID of the trigger to bind with. Available options: `post-login`, `credentials-exchange`, `pre-user-registration`, `post-user-registration`, `post-change-password`, `send-phone-message`, `password-reset-post-challenge`, `custom-email-provider`, `custom-phone-provider`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "actionId",
                "trigger"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TriggerAction resources.\n",
                "properties": {
                    "actionId": {
                        "type": "string",
                        "description": "The ID of the action to bind to the trigger.\n",
                        "willReplaceOnChanges": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The name for this action within the trigger. This can be useful for distinguishing between multiple instances of the same action bound to a trigger. Defaults to action name when not provided.\n"
                    },
                    "trigger": {
                        "type": "string",
                        "description": "The ID of the trigger to bind with. Available options: `post-login`, `credentials-exchange`, `pre-user-registration`, `post-user-registration`, `post-change-password`, `send-phone-message`, `password-reset-post-challenge`, `custom-email-provider`, `custom-phone-provider`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/triggerActions:TriggerActions": {
            "description": "With this resource, you can bind actions to a trigger. Once actions are created and deployed, they can be attached (i.e. bound) to a trigger so that it will be executed as part of a flow. The list of actions reflects the order in which they will be executed during the appropriate flow.\n\n!\u003e This resource manages all the action bindings to a trigger. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.TriggerAction`\" pulumi-lang-dotnet=\"`auth0.TriggerAction`\" pulumi-lang-go=\"`TriggerAction`\" pulumi-lang-python=\"`TriggerAction`\" pulumi-lang-yaml=\"`auth0.TriggerAction`\" pulumi-lang-java=\"`auth0.TriggerAction`\"\u003e`auth0.TriggerAction`\u003c/span\u003e resource only\nappends an action to the trigger binding. To avoid potential issues, it is recommended not to use this resource in\nconjunction with the \u003cspan pulumi-lang-nodejs=\"`auth0.TriggerAction`\" pulumi-lang-dotnet=\"`auth0.TriggerAction`\" pulumi-lang-go=\"`TriggerAction`\" pulumi-lang-python=\"`TriggerAction`\" pulumi-lang-yaml=\"`auth0.TriggerAction`\" pulumi-lang-java=\"`auth0.TriggerAction`\"\u003e`auth0.TriggerAction`\u003c/span\u003e resource when binding actions to the same trigger.\n\n\u003e The list of supported runtimes for a trigger are available via [Get triggers](https://auth0.com/docs/api/management/v2/actions/get-triggers)\n\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst actionFoo = new auth0.Action(\"action_foo\", {\n    name: \"Test Trigger Binding Foo\",\n    code: `exports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\\\"foo\\\\\");\n};\\\\\"\n`,\n    deploy: true,\n    supportedTriggers: {\n        id: \"post-login\",\n        version: \"v3\",\n    },\n});\nconst actionBar = new auth0.Action(\"action_bar\", {\n    name: \"Test Trigger Binding Bar\",\n    code: `exports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\\\"bar\\\\\");\n};\\\\\"\n`,\n    deploy: true,\n    supportedTriggers: {\n        id: \"post-login\",\n        version: \"v3\",\n    },\n});\nconst loginFlow = new auth0.TriggerActions(\"login_flow\", {\n    trigger: \"post-login\",\n    actions: [\n        {\n            id: actionFoo.id,\n            displayName: actionFoo.name,\n        },\n        {\n            id: actionBar.id,\n            displayName: actionBar.name,\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\naction_foo = auth0.Action(\"action_foo\",\n    name=\"Test Trigger Binding Foo\",\n    code=\"\"\"exports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\"foo\\\");\n};\\\"\n\"\"\",\n    deploy=True,\n    supported_triggers={\n        \"id\": \"post-login\",\n        \"version\": \"v3\",\n    })\naction_bar = auth0.Action(\"action_bar\",\n    name=\"Test Trigger Binding Bar\",\n    code=\"\"\"exports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\"bar\\\");\n};\\\"\n\"\"\",\n    deploy=True,\n    supported_triggers={\n        \"id\": \"post-login\",\n        \"version\": \"v3\",\n    })\nlogin_flow = auth0.TriggerActions(\"login_flow\",\n    trigger=\"post-login\",\n    actions=[\n        {\n            \"id\": action_foo.id,\n            \"display_name\": action_foo.name,\n        },\n        {\n            \"id\": action_bar.id,\n            \"display_name\": action_bar.name,\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var actionFoo = new Auth0.Action(\"action_foo\", new()\n    {\n        Name = \"Test Trigger Binding Foo\",\n        Code = @\"exports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\"\"foo\\\"\");\n};\\\"\"\n\",\n        Deploy = true,\n        SupportedTriggers = new Auth0.Inputs.ActionSupportedTriggersArgs\n        {\n            Id = \"post-login\",\n            Version = \"v3\",\n        },\n    });\n\n    var actionBar = new Auth0.Action(\"action_bar\", new()\n    {\n        Name = \"Test Trigger Binding Bar\",\n        Code = @\"exports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\"\"bar\\\"\");\n};\\\"\"\n\",\n        Deploy = true,\n        SupportedTriggers = new Auth0.Inputs.ActionSupportedTriggersArgs\n        {\n            Id = \"post-login\",\n            Version = \"v3\",\n        },\n    });\n\n    var loginFlow = new Auth0.TriggerActions(\"login_flow\", new()\n    {\n        Trigger = \"post-login\",\n        Actions = new[]\n        {\n            new Auth0.Inputs.TriggerActionsActionArgs\n            {\n                Id = actionFoo.Id,\n                DisplayName = actionFoo.Name,\n            },\n            new Auth0.Inputs.TriggerActionsActionArgs\n            {\n                Id = actionBar.Id,\n                DisplayName = actionBar.Name,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tactionFoo, err := auth0.NewAction(ctx, \"action_foo\", \u0026auth0.ActionArgs{\n\t\t\tName:   pulumi.String(\"Test Trigger Binding Foo\"),\n\t\t\tCode:   pulumi.String(\"exports.onContinuePostLogin = async (event, api) =\u003e {\\n  console.log(\\\\\\\"foo\\\\\\\");\\n};\\\\\\\"\\n\"),\n\t\t\tDeploy: pulumi.Bool(true),\n\t\t\tSupportedTriggers: \u0026auth0.ActionSupportedTriggersArgs{\n\t\t\t\tId:      pulumi.String(\"post-login\"),\n\t\t\t\tVersion: pulumi.String(\"v3\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tactionBar, err := auth0.NewAction(ctx, \"action_bar\", \u0026auth0.ActionArgs{\n\t\t\tName:   pulumi.String(\"Test Trigger Binding Bar\"),\n\t\t\tCode:   pulumi.String(\"exports.onContinuePostLogin = async (event, api) =\u003e {\\n  console.log(\\\\\\\"bar\\\\\\\");\\n};\\\\\\\"\\n\"),\n\t\t\tDeploy: pulumi.Bool(true),\n\t\t\tSupportedTriggers: \u0026auth0.ActionSupportedTriggersArgs{\n\t\t\t\tId:      pulumi.String(\"post-login\"),\n\t\t\t\tVersion: pulumi.String(\"v3\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewTriggerActions(ctx, \"login_flow\", \u0026auth0.TriggerActionsArgs{\n\t\t\tTrigger: pulumi.String(\"post-login\"),\n\t\t\tActions: auth0.TriggerActionsActionArray{\n\t\t\t\t\u0026auth0.TriggerActionsActionArgs{\n\t\t\t\t\tId:          actionFoo.ID(),\n\t\t\t\t\tDisplayName: actionFoo.Name,\n\t\t\t\t},\n\t\t\t\t\u0026auth0.TriggerActionsActionArgs{\n\t\t\t\t\tId:          actionBar.ID(),\n\t\t\t\t\tDisplayName: actionBar.Name,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Action;\nimport com.pulumi.auth0.ActionArgs;\nimport com.pulumi.auth0.inputs.ActionSupportedTriggersArgs;\nimport com.pulumi.auth0.TriggerActions;\nimport com.pulumi.auth0.TriggerActionsArgs;\nimport com.pulumi.auth0.inputs.TriggerActionsActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var actionFoo = new Action(\"actionFoo\", ActionArgs.builder()\n            .name(\"Test Trigger Binding Foo\")\n            .code(\"\"\"\nexports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\"foo\\\");\n};\\\"\n            \"\"\")\n            .deploy(true)\n            .supportedTriggers(ActionSupportedTriggersArgs.builder()\n                .id(\"post-login\")\n                .version(\"v3\")\n                .build())\n            .build());\n\n        var actionBar = new Action(\"actionBar\", ActionArgs.builder()\n            .name(\"Test Trigger Binding Bar\")\n            .code(\"\"\"\nexports.onContinuePostLogin = async (event, api) =\u003e {\n  console.log(\\\"bar\\\");\n};\\\"\n            \"\"\")\n            .deploy(true)\n            .supportedTriggers(ActionSupportedTriggersArgs.builder()\n                .id(\"post-login\")\n                .version(\"v3\")\n                .build())\n            .build());\n\n        var loginFlow = new TriggerActions(\"loginFlow\", TriggerActionsArgs.builder()\n            .trigger(\"post-login\")\n            .actions(            \n                TriggerActionsActionArgs.builder()\n                    .id(actionFoo.id())\n                    .displayName(actionFoo.name())\n                    .build(),\n                TriggerActionsActionArgs.builder()\n                    .id(actionBar.id())\n                    .displayName(actionBar.name())\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  actionFoo:\n    type: auth0:Action\n    name: action_foo\n    properties:\n      name: Test Trigger Binding Foo\n      code: |\n        exports.onContinuePostLogin = async (event, api) =\u003e {\n          console.log(\\\"foo\\\");\n        };\\\"\n      deploy: true\n      supportedTriggers:\n        id: post-login\n        version: v3\n  actionBar:\n    type: auth0:Action\n    name: action_bar\n    properties:\n      name: Test Trigger Binding Bar\n      code: |\n        exports.onContinuePostLogin = async (event, api) =\u003e {\n          console.log(\\\"bar\\\");\n        };\\\"\n      deploy: true\n      supportedTriggers:\n        id: post-login\n        version: v3\n  loginFlow:\n    type: auth0:TriggerActions\n    name: login_flow\n    properties:\n      trigger: post-login\n      actions:\n        - id: ${actionFoo.id}\n          displayName: ${actionFoo.name}\n        - id: ${actionBar.id}\n          displayName: ${actionBar.name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the bindings trigger ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/triggerActions:TriggerActions example \"post-login\"\n```\n\n",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/TriggerActionsAction:TriggerActionsAction"
                    },
                    "description": "The list of actions bound to this trigger.\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The ID of the trigger to bind with. Options include: `post-login`, `credentials-exchange`, `pre-user-registration`, `post-user-registration`, `post-change-password`, `send-phone-message`, `password-reset-post-challenge`, `custom-email-provider`, `custom-phone-provider`.\n"
                }
            },
            "required": [
                "actions",
                "trigger"
            ],
            "inputProperties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/TriggerActionsAction:TriggerActionsAction"
                    },
                    "description": "The list of actions bound to this trigger.\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The ID of the trigger to bind with. Options include: `post-login`, `credentials-exchange`, `pre-user-registration`, `post-user-registration`, `post-change-password`, `send-phone-message`, `password-reset-post-challenge`, `custom-email-provider`, `custom-phone-provider`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "actions",
                "trigger"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TriggerActions resources.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/TriggerActionsAction:TriggerActionsAction"
                        },
                        "description": "The list of actions bound to this trigger.\n"
                    },
                    "trigger": {
                        "type": "string",
                        "description": "The ID of the trigger to bind with. Options include: `post-login`, `credentials-exchange`, `pre-user-registration`, `post-user-registration`, `post-change-password`, `send-phone-message`, `password-reset-post-challenge`, `custom-email-provider`, `custom-phone-provider`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/user:User": {
            "description": "With this resource, you can manage user identities, including resetting passwords, and creating, provisioning, blocking, and deleting users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst user = new auth0.User(\"user\", {\n    connectionName: \"Username-Password-Authentication\",\n    userId: \"12345\",\n    username: \"unique_username\",\n    name: \"Firstname Lastname\",\n    nickname: \"some.nickname\",\n    email: \"test@test.com\",\n    emailVerified: true,\n    password: \"passpass$12$12\",\n    picture: \"https://www.example.com/a-valid-picture-url.jpg\",\n});\n// Create a user with custom_domain_header\nconst auth0UserWithCustomDomain = new auth0.User(\"auth0_user_with_custom_domain\", {\n    connectionName: \"Username-Password-Authentication\",\n    username: \"your_new_user_\",\n    email: \"change.username@acceptance.test.com\",\n    emailVerified: true,\n    password: \"MyPass123$\",\n    customDomainHeader: \"my-custom.domain.org\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nuser = auth0.User(\"user\",\n    connection_name=\"Username-Password-Authentication\",\n    user_id=\"12345\",\n    username=\"unique_username\",\n    name=\"Firstname Lastname\",\n    nickname=\"some.nickname\",\n    email=\"test@test.com\",\n    email_verified=True,\n    password=\"passpass$12$12\",\n    picture=\"https://www.example.com/a-valid-picture-url.jpg\")\n# Create a user with custom_domain_header\nauth0_user_with_custom_domain = auth0.User(\"auth0_user_with_custom_domain\",\n    connection_name=\"Username-Password-Authentication\",\n    username=\"your_new_user_\",\n    email=\"change.username@acceptance.test.com\",\n    email_verified=True,\n    password=\"MyPass123$\",\n    custom_domain_header=\"my-custom.domain.org\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = new Auth0.User(\"user\", new()\n    {\n        ConnectionName = \"Username-Password-Authentication\",\n        UserId = \"12345\",\n        Username = \"unique_username\",\n        Name = \"Firstname Lastname\",\n        Nickname = \"some.nickname\",\n        Email = \"test@test.com\",\n        EmailVerified = true,\n        Password = \"passpass$12$12\",\n        Picture = \"https://www.example.com/a-valid-picture-url.jpg\",\n    });\n\n    // Create a user with custom_domain_header\n    var auth0UserWithCustomDomain = new Auth0.User(\"auth0_user_with_custom_domain\", new()\n    {\n        ConnectionName = \"Username-Password-Authentication\",\n        Username = \"your_new_user_\",\n        Email = \"change.username@acceptance.test.com\",\n        EmailVerified = true,\n        Password = \"MyPass123$\",\n        CustomDomainHeader = \"my-custom.domain.org\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewUser(ctx, \"user\", \u0026auth0.UserArgs{\n\t\t\tConnectionName: pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tUserId:         pulumi.String(\"12345\"),\n\t\t\tUsername:       pulumi.String(\"unique_username\"),\n\t\t\tName:           pulumi.String(\"Firstname Lastname\"),\n\t\t\tNickname:       pulumi.String(\"some.nickname\"),\n\t\t\tEmail:          pulumi.String(\"test@test.com\"),\n\t\t\tEmailVerified:  pulumi.Bool(true),\n\t\t\tPassword:       pulumi.String(\"passpass$12$12\"),\n\t\t\tPicture:        pulumi.String(\"https://www.example.com/a-valid-picture-url.jpg\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Create a user with custom_domain_header\n\t\t_, err = auth0.NewUser(ctx, \"auth0_user_with_custom_domain\", \u0026auth0.UserArgs{\n\t\t\tConnectionName:     pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tUsername:           pulumi.String(\"your_new_user_\"),\n\t\t\tEmail:              pulumi.String(\"change.username@acceptance.test.com\"),\n\t\t\tEmailVerified:      pulumi.Bool(true),\n\t\t\tPassword:           pulumi.String(\"MyPass123$\"),\n\t\t\tCustomDomainHeader: pulumi.String(\"my-custom.domain.org\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.User;\nimport com.pulumi.auth0.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user = new User(\"user\", UserArgs.builder()\n            .connectionName(\"Username-Password-Authentication\")\n            .userId(\"12345\")\n            .username(\"unique_username\")\n            .name(\"Firstname Lastname\")\n            .nickname(\"some.nickname\")\n            .email(\"test@test.com\")\n            .emailVerified(true)\n            .password(\"passpass$12$12\")\n            .picture(\"https://www.example.com/a-valid-picture-url.jpg\")\n            .build());\n\n        // Create a user with custom_domain_header\n        var auth0UserWithCustomDomain = new User(\"auth0UserWithCustomDomain\", UserArgs.builder()\n            .connectionName(\"Username-Password-Authentication\")\n            .username(\"your_new_user_\")\n            .email(\"change.username@acceptance.test.com\")\n            .emailVerified(true)\n            .password(\"MyPass123$\")\n            .customDomainHeader(\"my-custom.domain.org\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: auth0:User\n    properties:\n      connectionName: Username-Password-Authentication\n      userId: '12345'\n      username: unique_username\n      name: Firstname Lastname\n      nickname: some.nickname\n      email: test@test.com\n      emailVerified: true\n      password: passpass$12$12\n      picture: https://www.example.com/a-valid-picture-url.jpg\n  # Create a user with custom_domain_header\n  auth0UserWithCustomDomain:\n    type: auth0:User\n    name: auth0_user_with_custom_domain\n    properties:\n      connectionName: Username-Password-Authentication\n      username: your_new_user_\n      email: change.username@acceptance.test.com\n      emailVerified: true\n      password: MyPass123$\n      customDomainHeader: my-custom.domain.org\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the user ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/user:User user \"auth0|111111111111111111111111\"\n```\n\n",
            "properties": {
                "appMetadata": {
                    "type": "string",
                    "description": "Custom fields that store info about the user that impact the user's core functionality, such as how an application functions or what the user can access. Examples include support plans and IDs for external accounts.\n"
                },
                "blocked": {
                    "type": "boolean",
                    "description": "Indicates whether the user is blocked or not.\n"
                },
                "connectionName": {
                    "type": "string",
                    "description": "Name of the connection from which the user information was sourced.\n"
                },
                "customDomainHeader": {
                    "type": "string",
                    "description": "Sets the `Auth0-Custom-Domain` header on all requests for this resource. Global setting of provider takes precedence over resource specific param, if both are set.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the user.\n"
                },
                "emailVerified": {
                    "type": "boolean",
                    "description": "Indicates whether the email address has been verified.\n"
                },
                "familyName": {
                    "type": "string",
                    "description": "Family name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                },
                "givenName": {
                    "type": "string",
                    "description": "Given name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "Preferred nickname or alias of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Initial password for this user. Required for non-passwordless connections (SMS and email).\n",
                    "secret": true
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Phone number for the user; follows the E.164 recommendation. Used for SMS connections.\n"
                },
                "phoneVerified": {
                    "type": "boolean",
                    "description": "Indicates whether the phone number has been verified.\n"
                },
                "picture": {
                    "type": "string",
                    "description": "Picture of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user.\n"
                },
                "userMetadata": {
                    "type": "string",
                    "description": "Custom fields that store info about the user that does not impact a user's core functionality. Examples include work address, home address, and user preferences.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username of the user. Only valid if the connection requires a username.\n"
                },
                "verifyEmail": {
                    "type": "boolean",
                    "description": "Indicates whether the user will receive a verification email after creation. Overrides behavior of \u003cspan pulumi-lang-nodejs=\"`emailVerified`\" pulumi-lang-dotnet=\"`EmailVerified`\" pulumi-lang-go=\"`emailVerified`\" pulumi-lang-python=\"`email_verified`\" pulumi-lang-yaml=\"`emailVerified`\" pulumi-lang-java=\"`emailVerified`\"\u003e`email_verified`\u003c/span\u003e parameter.\n"
                }
            },
            "required": [
                "connectionName",
                "name",
                "nickname",
                "picture",
                "userId"
            ],
            "inputProperties": {
                "appMetadata": {
                    "type": "string",
                    "description": "Custom fields that store info about the user that impact the user's core functionality, such as how an application functions or what the user can access. Examples include support plans and IDs for external accounts.\n"
                },
                "blocked": {
                    "type": "boolean",
                    "description": "Indicates whether the user is blocked or not.\n"
                },
                "connectionName": {
                    "type": "string",
                    "description": "Name of the connection from which the user information was sourced.\n"
                },
                "customDomainHeader": {
                    "type": "string",
                    "description": "Sets the `Auth0-Custom-Domain` header on all requests for this resource. Global setting of provider takes precedence over resource specific param, if both are set.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the user.\n"
                },
                "emailVerified": {
                    "type": "boolean",
                    "description": "Indicates whether the email address has been verified.\n"
                },
                "familyName": {
                    "type": "string",
                    "description": "Family name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                },
                "givenName": {
                    "type": "string",
                    "description": "Given name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "Preferred nickname or alias of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                },
                "password": {
                    "type": "string",
                    "description": "Initial password for this user. Required for non-passwordless connections (SMS and email).\n",
                    "secret": true
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "Phone number for the user; follows the E.164 recommendation. Used for SMS connections.\n"
                },
                "phoneVerified": {
                    "type": "boolean",
                    "description": "Indicates whether the phone number has been verified.\n"
                },
                "picture": {
                    "type": "string",
                    "description": "Picture of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user.\n"
                },
                "userMetadata": {
                    "type": "string",
                    "description": "Custom fields that store info about the user that does not impact a user's core functionality. Examples include work address, home address, and user preferences.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username of the user. Only valid if the connection requires a username.\n"
                },
                "verifyEmail": {
                    "type": "boolean",
                    "description": "Indicates whether the user will receive a verification email after creation. Overrides behavior of \u003cspan pulumi-lang-nodejs=\"`emailVerified`\" pulumi-lang-dotnet=\"`EmailVerified`\" pulumi-lang-go=\"`emailVerified`\" pulumi-lang-python=\"`email_verified`\" pulumi-lang-yaml=\"`emailVerified`\" pulumi-lang-java=\"`emailVerified`\"\u003e`email_verified`\u003c/span\u003e parameter.\n"
                }
            },
            "requiredInputs": [
                "connectionName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "appMetadata": {
                        "type": "string",
                        "description": "Custom fields that store info about the user that impact the user's core functionality, such as how an application functions or what the user can access. Examples include support plans and IDs for external accounts.\n"
                    },
                    "blocked": {
                        "type": "boolean",
                        "description": "Indicates whether the user is blocked or not.\n"
                    },
                    "connectionName": {
                        "type": "string",
                        "description": "Name of the connection from which the user information was sourced.\n"
                    },
                    "customDomainHeader": {
                        "type": "string",
                        "description": "Sets the `Auth0-Custom-Domain` header on all requests for this resource. Global setting of provider takes precedence over resource specific param, if both are set.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address of the user.\n"
                    },
                    "emailVerified": {
                        "type": "boolean",
                        "description": "Indicates whether the email address has been verified.\n"
                    },
                    "familyName": {
                        "type": "string",
                        "description": "Family name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                    },
                    "givenName": {
                        "type": "string",
                        "description": "Given name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                    },
                    "nickname": {
                        "type": "string",
                        "description": "Preferred nickname or alias of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Initial password for this user. Required for non-passwordless connections (SMS and email).\n",
                        "secret": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "Phone number for the user; follows the E.164 recommendation. Used for SMS connections.\n"
                    },
                    "phoneVerified": {
                        "type": "boolean",
                        "description": "Indicates whether the phone number has been verified.\n"
                    },
                    "picture": {
                        "type": "string",
                        "description": "Picture of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user.\n"
                    },
                    "userMetadata": {
                        "type": "string",
                        "description": "Custom fields that store info about the user that does not impact a user's core functionality. Examples include work address, home address, and user preferences.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username of the user. Only valid if the connection requires a username.\n"
                    },
                    "verifyEmail": {
                        "type": "boolean",
                        "description": "Indicates whether the user will receive a verification email after creation. Overrides behavior of \u003cspan pulumi-lang-nodejs=\"`emailVerified`\" pulumi-lang-dotnet=\"`EmailVerified`\" pulumi-lang-go=\"`emailVerified`\" pulumi-lang-python=\"`email_verified`\" pulumi-lang-yaml=\"`emailVerified`\" pulumi-lang-java=\"`emailVerified`\"\u003e`email_verified`\u003c/span\u003e parameter.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/userAttributeProfile:UserAttributeProfile": {
            "description": "With this resource, you can manage User Attribute Profiles within Auth0. User Attribute Profiles allow you to define how user attributes are mapped between different identity providers and Auth0.\n\n\u003e This resource is only available for [EA](https://auth0.com/docs/troubleshoot/product-lifecycle/product-release-stages#early-access) users.\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the User Attribute Profile.\n"
                },
                "userAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/UserAttributeProfileUserAttribute:UserAttributeProfileUserAttribute"
                    },
                    "description": "List of user attribute configurations.\n"
                },
                "userId": {
                    "$ref": "#/types/auth0:index/UserAttributeProfileUserId:UserAttributeProfileUserId",
                    "description": "Configuration for mapping the user ID from identity providers.\n"
                }
            },
            "required": [
                "name",
                "userAttributes",
                "userId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the User Attribute Profile.\n"
                },
                "userAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/UserAttributeProfileUserAttribute:UserAttributeProfileUserAttribute"
                    },
                    "description": "List of user attribute configurations.\n"
                },
                "userId": {
                    "$ref": "#/types/auth0:index/UserAttributeProfileUserId:UserAttributeProfileUserId",
                    "description": "Configuration for mapping the user ID from identity providers.\n"
                }
            },
            "requiredInputs": [
                "userAttributes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserAttributeProfile resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the User Attribute Profile.\n"
                    },
                    "userAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/UserAttributeProfileUserAttribute:UserAttributeProfileUserAttribute"
                        },
                        "description": "List of user attribute configurations.\n"
                    },
                    "userId": {
                        "$ref": "#/types/auth0:index/UserAttributeProfileUserId:UserAttributeProfileUserId",
                        "description": "Configuration for mapping the user ID from identity providers.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/userPermission:UserPermission": {
            "description": "With this resource, you can manage user permissions.\n\n!\u003e This resource appends a permission to a user. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.UserPermissions`\" pulumi-lang-dotnet=\"`auth0.UserPermissions`\" pulumi-lang-go=\"`UserPermissions`\" pulumi-lang-python=\"`UserPermissions`\" pulumi-lang-yaml=\"`auth0.UserPermissions`\" pulumi-lang-java=\"`auth0.UserPermissions`\"\u003e`auth0.UserPermissions`\u003c/span\u003e resource manages all the\npermissions assigned to a user. To avoid potential issues, it is recommended not to use this resource in conjunction\nwith the \u003cspan pulumi-lang-nodejs=\"`auth0.UserPermissions`\" pulumi-lang-dotnet=\"`auth0.UserPermissions`\" pulumi-lang-go=\"`UserPermissions`\" pulumi-lang-python=\"`UserPermissions`\" pulumi-lang-yaml=\"`auth0.UserPermissions`\" pulumi-lang-java=\"`auth0.UserPermissions`\"\u003e`auth0.UserPermissions`\u003c/span\u003e resource when managing permissions for the same user id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```yaml\nresources:\n  resourceServer:\n    type: auth0:ResourceServer\n    name: resource_server\n    properties:\n      name: Example Resource Server (Managed by Terraform)\n      identifier: https://api.example.com\n      scopes:\n        - value: create:foo\n          description: Create foos\n        - value: create:bar\n          description: Create bars\n  user:\n    type: auth0:User\n    properties:\n      connectionName: Username-Password-Authentication\n      userId: '12345'\n      username: unique_username\n      name: Firstname Lastname\n      nickname: some.nickname\n      email: test@test.com\n      emailVerified: true\n      password: passpass$12$12\n      picture: https://www.example.com/a-valid-picture-url.jpg\n  userPermissionRead:\n    type: auth0:UserPermission\n    name: user_permission_read\n    properties:\n      userId: ${user.id}\n      resourceServerIdentifier: ${resourceServer.identifier}\n      permission: ${resourceServer.scopes[0]}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\nuser ID, resource identifier and permission name separated by \"::\" (note the double colon)\n\n\u003cuserID\u003e::\u003cresourceServerIdentifier\u003e::\u003cpermission\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/userPermission:UserPermission permission \"auth0|111111111111111111111111::https://api.travel0.com/v1::read:posts\"\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the permission.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Name of the permission.\n"
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Identifier of the resource server that the permission is associated with.\n"
                },
                "resourceServerName": {
                    "type": "string",
                    "description": "Name of the resource server that the permission is associated with.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user to associate the permission to.\n"
                }
            },
            "required": [
                "description",
                "permission",
                "resourceServerIdentifier",
                "resourceServerName",
                "userId"
            ],
            "inputProperties": {
                "permission": {
                    "type": "string",
                    "description": "Name of the permission.\n",
                    "willReplaceOnChanges": true
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "Identifier of the resource server that the permission is associated with.\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user to associate the permission to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "permission",
                "resourceServerIdentifier",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserPermission resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the permission.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Name of the permission.\n",
                        "willReplaceOnChanges": true
                    },
                    "resourceServerIdentifier": {
                        "type": "string",
                        "description": "Identifier of the resource server that the permission is associated with.\n",
                        "willReplaceOnChanges": true
                    },
                    "resourceServerName": {
                        "type": "string",
                        "description": "Name of the resource server that the permission is associated with.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user to associate the permission to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/userPermissions:UserPermissions": {
            "description": "With this resource, you can manage all of a user's permissions.\n\n!\u003e This resource manages all the permissions assigned to a user. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.UserPermission`\" pulumi-lang-dotnet=\"`auth0.UserPermission`\" pulumi-lang-go=\"`UserPermission`\" pulumi-lang-python=\"`UserPermission`\" pulumi-lang-yaml=\"`auth0.UserPermission`\" pulumi-lang-java=\"`auth0.UserPermission`\"\u003e`auth0.UserPermission`\u003c/span\u003e resource only\nappends a permissions to a user. To avoid potential issues, it is recommended not to use this resource in conjunction\nwith the \u003cspan pulumi-lang-nodejs=\"`auth0.UserPermission`\" pulumi-lang-dotnet=\"`auth0.UserPermission`\" pulumi-lang-go=\"`UserPermission`\" pulumi-lang-python=\"`UserPermission`\" pulumi-lang-yaml=\"`auth0.UserPermission`\" pulumi-lang-java=\"`auth0.UserPermission`\"\u003e`auth0.UserPermission`\u003c/span\u003e resource when managing permissions for the same user id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```yaml\nresources:\n  resourceServer:\n    type: auth0:ResourceServer\n    name: resource_server\n    properties:\n      name: Example Resource Server (Managed by Terraform)\n      identifier: https://api.example.com\n      scopes:\n        - value: create:foo\n          description: Create foos\n        - value: read:foo\n          description: Read foos\n  user:\n    type: auth0:User\n    properties:\n      connectionName: Username-Password-Authentication\n      userId: '12345'\n      username: unique_username\n      name: Firstname Lastname\n      nickname: some.nickname\n      email: test@test.com\n      emailVerified: true\n      password: passpass$12$12\n      picture: https://www.example.com/a-valid-picture-url.jpg\n  allUserPermissions:\n    type: auth0:UserPermissions\n    name: all_user_permissions\n    properties:\n      userId: ${user.id}\n      permissions:\n        - name: ${resourceServer.scopes[0]}\n          resourceServerIdentifier: ${resourceServer.identifier}\n        - name: ${resourceServer.scopes[1]}\n          resourceServerIdentifier: ${resourceServer.identifier}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the user ID\n\nExample:\n\n```sh\n$ pulumi import auth0:index/userPermissions:UserPermissions all_user_permissions \"auth0|111111111111111111111111\"\n```\n\n",
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/UserPermissionsPermission:UserPermissionsPermission"
                    },
                    "description": "List of API permissions granted to the user.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user to associate the permission to.\n"
                }
            },
            "required": [
                "permissions",
                "userId"
            ],
            "inputProperties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/UserPermissionsPermission:UserPermissionsPermission"
                    },
                    "description": "List of API permissions granted to the user.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user to associate the permission to.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "permissions",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserPermissions resources.\n",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/UserPermissionsPermission:UserPermissionsPermission"
                        },
                        "description": "List of API permissions granted to the user.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user to associate the permission to.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/userRole:UserRole": {
            "description": "With this resource, you can manage assigned roles for a user.\n\n!\u003e This resource appends a role to a user. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.UserRoles`\" pulumi-lang-dotnet=\"`auth0.UserRoles`\" pulumi-lang-go=\"`UserRoles`\" pulumi-lang-python=\"`UserRoles`\" pulumi-lang-yaml=\"`auth0.UserRoles`\" pulumi-lang-java=\"`auth0.UserRoles`\"\u003e`auth0.UserRoles`\u003c/span\u003e resource manages all the roles assigned\nto a user. To avoid potential issues, it is recommended not to use this resource in conjunction with the\n\u003cspan pulumi-lang-nodejs=\"`auth0.UserRoles`\" pulumi-lang-dotnet=\"`auth0.UserRoles`\" pulumi-lang-go=\"`UserRoles`\" pulumi-lang-python=\"`UserRoles`\" pulumi-lang-yaml=\"`auth0.UserRoles`\" pulumi-lang-java=\"`auth0.UserRoles`\"\u003e`auth0.UserRoles`\u003c/span\u003e resource when managing roles for the same user id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Example:\nconst admin = new auth0.Role(\"admin\", {\n    name: \"admin\",\n    description: \"Administrator\",\n});\nconst user = new auth0.User(\"user\", {\n    connectionName: \"Username-Password-Authentication\",\n    username: \"unique_username\",\n    name: \"Firstname Lastname\",\n    email: \"test@test.com\",\n    password: \"passpass$12$12\",\n});\nconst userRoles = new auth0.UserRole(\"user_roles\", {\n    userId: user.id,\n    roleId: admin.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# Example:\nadmin = auth0.Role(\"admin\",\n    name=\"admin\",\n    description=\"Administrator\")\nuser = auth0.User(\"user\",\n    connection_name=\"Username-Password-Authentication\",\n    username=\"unique_username\",\n    name=\"Firstname Lastname\",\n    email=\"test@test.com\",\n    password=\"passpass$12$12\")\nuser_roles = auth0.UserRole(\"user_roles\",\n    user_id=user.id,\n    role_id=admin.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example:\n    var admin = new Auth0.Role(\"admin\", new()\n    {\n        Name = \"admin\",\n        Description = \"Administrator\",\n    });\n\n    var user = new Auth0.User(\"user\", new()\n    {\n        ConnectionName = \"Username-Password-Authentication\",\n        Username = \"unique_username\",\n        Name = \"Firstname Lastname\",\n        Email = \"test@test.com\",\n        Password = \"passpass$12$12\",\n    });\n\n    var userRoles = new Auth0.UserRole(\"user_roles\", new()\n    {\n        UserId = user.Id,\n        RoleId = admin.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Example:\n\t\tadmin, err := auth0.NewRole(ctx, \"admin\", \u0026auth0.RoleArgs{\n\t\t\tName:        pulumi.String(\"admin\"),\n\t\t\tDescription: pulumi.String(\"Administrator\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tuser, err := auth0.NewUser(ctx, \"user\", \u0026auth0.UserArgs{\n\t\t\tConnectionName: pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tUsername:       pulumi.String(\"unique_username\"),\n\t\t\tName:           pulumi.String(\"Firstname Lastname\"),\n\t\t\tEmail:          pulumi.String(\"test@test.com\"),\n\t\t\tPassword:       pulumi.String(\"passpass$12$12\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewUserRole(ctx, \"user_roles\", \u0026auth0.UserRoleArgs{\n\t\t\tUserId: user.ID(),\n\t\t\tRoleId: admin.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Role;\nimport com.pulumi.auth0.RoleArgs;\nimport com.pulumi.auth0.User;\nimport com.pulumi.auth0.UserArgs;\nimport com.pulumi.auth0.UserRole;\nimport com.pulumi.auth0.UserRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Example:\n        var admin = new Role(\"admin\", RoleArgs.builder()\n            .name(\"admin\")\n            .description(\"Administrator\")\n            .build());\n\n        var user = new User(\"user\", UserArgs.builder()\n            .connectionName(\"Username-Password-Authentication\")\n            .username(\"unique_username\")\n            .name(\"Firstname Lastname\")\n            .email(\"test@test.com\")\n            .password(\"passpass$12$12\")\n            .build());\n\n        var userRoles = new UserRole(\"userRoles\", UserRoleArgs.builder()\n            .userId(user.id())\n            .roleId(admin.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example:\n  admin:\n    type: auth0:Role\n    properties:\n      name: admin\n      description: Administrator\n  user:\n    type: auth0:User\n    properties:\n      connectionName: Username-Password-Authentication\n      username: unique_username\n      name: Firstname Lastname\n      email: test@test.com\n      password: passpass$12$12\n  userRoles:\n    type: auth0:UserRole\n    name: user_roles\n    properties:\n      userId: ${user.id}\n      roleId: ${admin.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported by specifying the\n\nuser ID and role ID separated by \"::\" (note the double colon)\n\n\u003cuserID\u003e::\u003croleID\u003e\n\nExample:\n\n```sh\n$ pulumi import auth0:index/userRole:UserRole user_role \"auth0|111111111111111111111111::role_123\"\n```\n\n",
            "properties": {
                "roleDescription": {
                    "type": "string",
                    "description": "Description of the role.\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "ID of the role assigned to the user.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "Name of the role.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user.\n"
                }
            },
            "required": [
                "roleDescription",
                "roleId",
                "roleName",
                "userId"
            ],
            "inputProperties": {
                "roleId": {
                    "type": "string",
                    "description": "ID of the role assigned to the user.\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "roleId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserRole resources.\n",
                "properties": {
                    "roleDescription": {
                        "type": "string",
                        "description": "Description of the role.\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "ID of the role assigned to the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "roleName": {
                        "type": "string",
                        "description": "Name of the role.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/userRoles:UserRoles": {
            "description": "With this resource, you can manage assigned roles for a user.\n\n!\u003e This resource manages all the roles assigned to a user. In contrast, the \u003cspan pulumi-lang-nodejs=\"`auth0.UserRole`\" pulumi-lang-dotnet=\"`auth0.UserRole`\" pulumi-lang-go=\"`UserRole`\" pulumi-lang-python=\"`UserRole`\" pulumi-lang-yaml=\"`auth0.UserRole`\" pulumi-lang-java=\"`auth0.UserRole`\"\u003e`auth0.UserRole`\u003c/span\u003e resource only appends a\nrole to a user. To avoid potential issues, it is recommended not to use this resource in conjunction with the\n\u003cspan pulumi-lang-nodejs=\"`auth0.UserRole`\" pulumi-lang-dotnet=\"`auth0.UserRole`\" pulumi-lang-go=\"`UserRole`\" pulumi-lang-python=\"`UserRole`\" pulumi-lang-yaml=\"`auth0.UserRole`\" pulumi-lang-java=\"`auth0.UserRole`\"\u003e`auth0.UserRole`\u003c/span\u003e resource when managing roles for the same user id.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Example:\nconst admin = new auth0.Role(\"admin\", {\n    name: \"admin\",\n    description: \"Administrator\",\n});\nconst user = new auth0.User(\"user\", {\n    connectionName: \"Username-Password-Authentication\",\n    username: \"unique_username\",\n    name: \"Firstname Lastname\",\n    email: \"test@test.com\",\n    password: \"passpass$12$12\",\n});\nconst userRoles = new auth0.UserRoles(\"user_roles\", {\n    userId: user.id,\n    roles: [admin.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# Example:\nadmin = auth0.Role(\"admin\",\n    name=\"admin\",\n    description=\"Administrator\")\nuser = auth0.User(\"user\",\n    connection_name=\"Username-Password-Authentication\",\n    username=\"unique_username\",\n    name=\"Firstname Lastname\",\n    email=\"test@test.com\",\n    password=\"passpass$12$12\")\nuser_roles = auth0.UserRoles(\"user_roles\",\n    user_id=user.id,\n    roles=[admin.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Example:\n    var admin = new Auth0.Role(\"admin\", new()\n    {\n        Name = \"admin\",\n        Description = \"Administrator\",\n    });\n\n    var user = new Auth0.User(\"user\", new()\n    {\n        ConnectionName = \"Username-Password-Authentication\",\n        Username = \"unique_username\",\n        Name = \"Firstname Lastname\",\n        Email = \"test@test.com\",\n        Password = \"passpass$12$12\",\n    });\n\n    var userRoles = new Auth0.UserRoles(\"user_roles\", new()\n    {\n        UserId = user.Id,\n        Roles = new[]\n        {\n            admin.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Example:\n\t\tadmin, err := auth0.NewRole(ctx, \"admin\", \u0026auth0.RoleArgs{\n\t\t\tName:        pulumi.String(\"admin\"),\n\t\t\tDescription: pulumi.String(\"Administrator\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tuser, err := auth0.NewUser(ctx, \"user\", \u0026auth0.UserArgs{\n\t\t\tConnectionName: pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tUsername:       pulumi.String(\"unique_username\"),\n\t\t\tName:           pulumi.String(\"Firstname Lastname\"),\n\t\t\tEmail:          pulumi.String(\"test@test.com\"),\n\t\t\tPassword:       pulumi.String(\"passpass$12$12\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewUserRoles(ctx, \"user_roles\", \u0026auth0.UserRolesArgs{\n\t\t\tUserId: user.ID(),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tadmin.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Role;\nimport com.pulumi.auth0.RoleArgs;\nimport com.pulumi.auth0.User;\nimport com.pulumi.auth0.UserArgs;\nimport com.pulumi.auth0.UserRoles;\nimport com.pulumi.auth0.UserRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Example:\n        var admin = new Role(\"admin\", RoleArgs.builder()\n            .name(\"admin\")\n            .description(\"Administrator\")\n            .build());\n\n        var user = new User(\"user\", UserArgs.builder()\n            .connectionName(\"Username-Password-Authentication\")\n            .username(\"unique_username\")\n            .name(\"Firstname Lastname\")\n            .email(\"test@test.com\")\n            .password(\"passpass$12$12\")\n            .build());\n\n        var userRoles = new UserRoles(\"userRoles\", UserRolesArgs.builder()\n            .userId(user.id())\n            .roles(admin.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Example:\n  admin:\n    type: auth0:Role\n    properties:\n      name: admin\n      description: Administrator\n  user:\n    type: auth0:User\n    properties:\n      connectionName: Username-Password-Authentication\n      username: unique_username\n      name: Firstname Lastname\n      email: test@test.com\n      password: passpass$12$12\n  userRoles:\n    type: auth0:UserRoles\n    name: user_roles\n    properties:\n      userId: ${user.id}\n      roles:\n        - ${admin.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThis resource can be imported using the user ID.\n\nExample:\n\n```sh\n$ pulumi import auth0:index/userRoles:UserRoles user_roles \"auth0|111111111111111111111111\"\n```\n\n",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of IDs of roles assigned to the user.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user.\n"
                }
            },
            "required": [
                "roles",
                "userId"
            ],
            "inputProperties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of IDs of roles assigned to the user.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "ID of the user.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "roles",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UserRoles resources.\n",
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of IDs of roles assigned to the user.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "auth0:index/getAction:getAction": {
            "description": "Data source to retrieve a specific Auth0 action by \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAction.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the action. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the action. If not provided, \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e must be set.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getAction.\n",
                "properties": {
                    "code": {
                        "description": "The source code of the action.\n",
                        "type": "string"
                    },
                    "dependencies": {
                        "description": "List of third party npm modules, and their versions, that this action depends on.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getActionDependency:getActionDependency"
                        },
                        "type": "array"
                    },
                    "deploy": {
                        "description": "Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The ID of the action. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the action. If not provided, \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "runtime": {
                        "description": "The Node runtime. Possible values are: \u003cspan pulumi-lang-nodejs=\"`node12`\" pulumi-lang-dotnet=\"`Node12`\" pulumi-lang-go=\"`node12`\" pulumi-lang-python=\"`node12`\" pulumi-lang-yaml=\"`node12`\" pulumi-lang-java=\"`node12`\"\u003e`node12`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`node16`\" pulumi-lang-dotnet=\"`Node16`\" pulumi-lang-go=\"`node16`\" pulumi-lang-python=\"`node16`\" pulumi-lang-yaml=\"`node16`\" pulumi-lang-java=\"`node16`\"\u003e`node16`\u003c/span\u003e (not recommended), \u003cspan pulumi-lang-nodejs=\"`node18`\" pulumi-lang-dotnet=\"`Node18`\" pulumi-lang-go=\"`node18`\" pulumi-lang-python=\"`node18`\" pulumi-lang-yaml=\"`node18`\" pulumi-lang-java=\"`node18`\"\u003e`node18`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`node22`\" pulumi-lang-dotnet=\"`Node22`\" pulumi-lang-go=\"`node22`\" pulumi-lang-python=\"`node22`\" pulumi-lang-yaml=\"`node22`\" pulumi-lang-java=\"`node22`\"\u003e`node22`\u003c/span\u003e\n",
                        "type": "string"
                    },
                    "secrets": {
                        "description": "List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported. If the secret block is edited, the whole object is re-provisioned.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getActionSecret:getActionSecret"
                        },
                        "type": "array"
                    },
                    "supportedTriggers": {
                        "description": "List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read Retrieving the set of triggers available within actions to retrieve the latest trigger versions supported.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getActionSupportedTrigger:getActionSupportedTrigger"
                        },
                        "type": "array"
                    },
                    "versionId": {
                        "description": "Version ID of the action. This value is available if \u003cspan pulumi-lang-nodejs=\"`deploy`\" pulumi-lang-dotnet=\"`Deploy`\" pulumi-lang-go=\"`deploy`\" pulumi-lang-python=\"`deploy`\" pulumi-lang-yaml=\"`deploy`\" pulumi-lang-java=\"`deploy`\"\u003e`deploy`\u003c/span\u003e is set to true.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "dependencies",
                    "deploy",
                    "runtime",
                    "secrets",
                    "supportedTriggers",
                    "versionId"
                ],
                "type": "object"
            }
        },
        "auth0:index/getAttackProtection:getAttackProtection": {
            "description": "Use this data source to access information about the tenant's attack protection settings.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myProtection = auth0.getAttackProtection({});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_protection = auth0.get_attack_protection()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myProtection = Auth0.GetAttackProtection.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.LookupAttackProtection(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myProtection = Auth0Functions.getAttackProtection(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);\n\n    }\n}\n```\n```yaml\nvariables:\n  myProtection:\n    fn::invoke:\n      function: auth0:getAttackProtection\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getAttackProtection.\n",
                "properties": {
                    "breachedPasswordDetections": {
                        "description": "Breached password detection protects your applications from bad actors logging in with stolen credentials.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getAttackProtectionBreachedPasswordDetection:getAttackProtectionBreachedPasswordDetection"
                        },
                        "type": "array"
                    },
                    "bruteForceProtections": {
                        "description": "Brute-force protection safeguards against a single IP address attacking a single user account.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getAttackProtectionBruteForceProtection:getAttackProtectionBruteForceProtection"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "suspiciousIpThrottlings": {
                        "description": "Suspicious IP throttling blocks traffic from any IP address that rapidly attempts too many logins or signups.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getAttackProtectionSuspiciousIpThrottling:getAttackProtectionSuspiciousIpThrottling"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "breachedPasswordDetections",
                    "bruteForceProtections",
                    "suspiciousIpThrottlings",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getBranding:getBranding": {
            "description": "Use this data source to access information about the tenant's branding settings.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myBranding = auth0.getBranding({});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_branding = auth0.get_branding()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myBranding = Auth0.GetBranding.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.LookupBranding(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myBranding = Auth0Functions.getBranding(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);\n\n    }\n}\n```\n```yaml\nvariables:\n  myBranding:\n    fn::invoke:\n      function: auth0:getBranding\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getBranding.\n",
                "properties": {
                    "colors": {
                        "description": "Configuration settings for colors for branding.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getBrandingColor:getBrandingColor"
                        },
                        "type": "array"
                    },
                    "faviconUrl": {
                        "description": "URL for the favicon.\n",
                        "type": "string"
                    },
                    "fonts": {
                        "description": "Configuration settings to customize the font.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getBrandingFont:getBrandingFont"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "logoUrl": {
                        "description": "URL of logo for branding.\n",
                        "type": "string"
                    },
                    "universalLogins": {
                        "description": "Configuration settings for Universal Login.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getBrandingUniversalLogin:getBrandingUniversalLogin"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "colors",
                    "faviconUrl",
                    "fonts",
                    "logoUrl",
                    "universalLogins",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getBrandingTheme:getBrandingTheme": {
            "description": "Use this data source to access information about the tenant's branding theme settings.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myBrandingTheme = auth0.getBrandingTheme({});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_branding_theme = auth0.get_branding_theme()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myBrandingTheme = Auth0.GetBrandingTheme.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.LookupBrandingTheme(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myBrandingTheme = Auth0Functions.getBrandingTheme(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);\n\n    }\n}\n```\n```yaml\nvariables:\n  myBrandingTheme:\n    fn::invoke:\n      function: auth0:getBrandingTheme\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getBrandingTheme.\n",
                "properties": {
                    "borders": {
                        "items": {
                            "$ref": "#/types/auth0:index/getBrandingThemeBorder:getBrandingThemeBorder"
                        },
                        "type": "array"
                    },
                    "colors": {
                        "items": {
                            "$ref": "#/types/auth0:index/getBrandingThemeColor:getBrandingThemeColor"
                        },
                        "type": "array"
                    },
                    "displayName": {
                        "description": "The display name for the branding theme.\n",
                        "type": "string"
                    },
                    "fonts": {
                        "items": {
                            "$ref": "#/types/auth0:index/getBrandingThemeFont:getBrandingThemeFont"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "pageBackgrounds": {
                        "items": {
                            "$ref": "#/types/auth0:index/getBrandingThemePageBackground:getBrandingThemePageBackground"
                        },
                        "type": "array"
                    },
                    "widgets": {
                        "items": {
                            "$ref": "#/types/auth0:index/getBrandingThemeWidget:getBrandingThemeWidget"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "borders",
                    "colors",
                    "displayName",
                    "fonts",
                    "pageBackgrounds",
                    "widgets",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getClient:getClient": {
            "description": "Data source to retrieve a specific Auth0 application client by \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 Client loaded using its name.\nconst some_client_by_name = auth0.getClient({\n    name: \"Name of my Application\",\n});\n// An Auth0 Client loaded using its ID.\nconst some_client_by_id = auth0.getClient({\n    clientId: \"abcdefghkijklmnopqrstuvwxyz0123456789\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 Client loaded using its name.\nsome_client_by_name = auth0.get_client(name=\"Name of my Application\")\n# An Auth0 Client loaded using its ID.\nsome_client_by_id = auth0.get_client(client_id=\"abcdefghkijklmnopqrstuvwxyz0123456789\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 Client loaded using its name.\n    var some_client_by_name = Auth0.GetClient.Invoke(new()\n    {\n        Name = \"Name of my Application\",\n    });\n\n    // An Auth0 Client loaded using its ID.\n    var some_client_by_id = Auth0.GetClient.Invoke(new()\n    {\n        ClientId = \"abcdefghkijklmnopqrstuvwxyz0123456789\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 Client loaded using its name.\n\t\t_, err := auth0.LookupClient(ctx, \u0026auth0.LookupClientArgs{\n\t\t\tName: pulumi.StringRef(\"Name of my Application\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// An Auth0 Client loaded using its ID.\n\t\t_, err = auth0.LookupClient(ctx, \u0026auth0.LookupClientArgs{\n\t\t\tClientId: pulumi.StringRef(\"abcdefghkijklmnopqrstuvwxyz0123456789\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetClientArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 Client loaded using its name.\n        final var some-client-by-name = Auth0Functions.getClient(GetClientArgs.builder()\n            .name(\"Name of my Application\")\n            .build());\n\n        // An Auth0 Client loaded using its ID.\n        final var some-client-by-id = Auth0Functions.getClient(GetClientArgs.builder()\n            .clientId(\"abcdefghkijklmnopqrstuvwxyz0123456789\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 Client loaded using its name.\n  some-client-by-name:\n    fn::invoke:\n      function: auth0:getClient\n      arguments:\n        name: Name of my Application\n  # An Auth0 Client loaded using its ID.\n  some-client-by-id:\n    fn::invoke:\n      function: auth0:getClient\n      arguments:\n        clientId: abcdefghkijklmnopqrstuvwxyz0123456789\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getClient.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "The ID of the client. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the client. If not provided, \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e must be set.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getClient.\n",
                "properties": {
                    "addons": {
                        "description": "Addons enabled for this client and their associated configurations.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientAddon:getClientAddon"
                        },
                        "type": "array"
                    },
                    "allowedClients": {
                        "description": "List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "allowedLogoutUrls": {
                        "description": "URLs that Auth0 may redirect to after logout.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "allowedOrigins": {
                        "description": "URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "appType": {
                        "description": "Type of application the client represents. Possible values are: \u003cspan pulumi-lang-nodejs=\"`native`\" pulumi-lang-dotnet=\"`Native`\" pulumi-lang-go=\"`native`\" pulumi-lang-python=\"`native`\" pulumi-lang-yaml=\"`native`\" pulumi-lang-java=\"`native`\"\u003e`native`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`spa`\" pulumi-lang-dotnet=\"`Spa`\" pulumi-lang-go=\"`spa`\" pulumi-lang-python=\"`spa`\" pulumi-lang-yaml=\"`spa`\" pulumi-lang-java=\"`spa`\"\u003e`spa`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`regularWeb`\" pulumi-lang-dotnet=\"`RegularWeb`\" pulumi-lang-go=\"`regularWeb`\" pulumi-lang-python=\"`regular_web`\" pulumi-lang-yaml=\"`regularWeb`\" pulumi-lang-java=\"`regularWeb`\"\u003e`regular_web`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`nonInteractive`\" pulumi-lang-dotnet=\"`NonInteractive`\" pulumi-lang-go=\"`nonInteractive`\" pulumi-lang-python=\"`non_interactive`\" pulumi-lang-yaml=\"`nonInteractive`\" pulumi-lang-java=\"`nonInteractive`\"\u003e`non_interactive`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`resourceServer`\" pulumi-lang-dotnet=\"`ResourceServer`\" pulumi-lang-go=\"`resourceServer`\" pulumi-lang-python=\"`resource_server`\" pulumi-lang-yaml=\"`resourceServer`\" pulumi-lang-java=\"`resourceServer`\"\u003e`resource_server`\u003c/span\u003e,\u003cspan pulumi-lang-nodejs=\"`ssoIntegration`\" pulumi-lang-dotnet=\"`SsoIntegration`\" pulumi-lang-go=\"`ssoIntegration`\" pulumi-lang-python=\"`sso_integration`\" pulumi-lang-yaml=\"`ssoIntegration`\" pulumi-lang-java=\"`ssoIntegration`\"\u003e`sso_integration`\u003c/span\u003e. Specific SSO integrations types accepted as well are: \u003cspan pulumi-lang-nodejs=\"`rms`\" pulumi-lang-dotnet=\"`Rms`\" pulumi-lang-go=\"`rms`\" pulumi-lang-python=\"`rms`\" pulumi-lang-yaml=\"`rms`\" pulumi-lang-java=\"`rms`\"\u003e`rms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`box`\" pulumi-lang-dotnet=\"`Box`\" pulumi-lang-go=\"`box`\" pulumi-lang-python=\"`box`\" pulumi-lang-yaml=\"`box`\" pulumi-lang-java=\"`box`\"\u003e`box`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`cloudbees`\" pulumi-lang-dotnet=\"`Cloudbees`\" pulumi-lang-go=\"`cloudbees`\" pulumi-lang-python=\"`cloudbees`\" pulumi-lang-yaml=\"`cloudbees`\" pulumi-lang-java=\"`cloudbees`\"\u003e`cloudbees`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`concur`\" pulumi-lang-dotnet=\"`Concur`\" pulumi-lang-go=\"`concur`\" pulumi-lang-python=\"`concur`\" pulumi-lang-yaml=\"`concur`\" pulumi-lang-java=\"`concur`\"\u003e`concur`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`dropbox`\" pulumi-lang-dotnet=\"`Dropbox`\" pulumi-lang-go=\"`dropbox`\" pulumi-lang-python=\"`dropbox`\" pulumi-lang-yaml=\"`dropbox`\" pulumi-lang-java=\"`dropbox`\"\u003e`dropbox`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`mscrm`\" pulumi-lang-dotnet=\"`Mscrm`\" pulumi-lang-go=\"`mscrm`\" pulumi-lang-python=\"`mscrm`\" pulumi-lang-yaml=\"`mscrm`\" pulumi-lang-java=\"`mscrm`\"\u003e`mscrm`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`echosign`\" pulumi-lang-dotnet=\"`Echosign`\" pulumi-lang-go=\"`echosign`\" pulumi-lang-python=\"`echosign`\" pulumi-lang-yaml=\"`echosign`\" pulumi-lang-java=\"`echosign`\"\u003e`echosign`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`egnyte`\" pulumi-lang-dotnet=\"`Egnyte`\" pulumi-lang-go=\"`egnyte`\" pulumi-lang-python=\"`egnyte`\" pulumi-lang-yaml=\"`egnyte`\" pulumi-lang-java=\"`egnyte`\"\u003e`egnyte`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`newrelic`\" pulumi-lang-dotnet=\"`Newrelic`\" pulumi-lang-go=\"`newrelic`\" pulumi-lang-python=\"`newrelic`\" pulumi-lang-yaml=\"`newrelic`\" pulumi-lang-java=\"`newrelic`\"\u003e`newrelic`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`office365`\" pulumi-lang-dotnet=\"`Office365`\" pulumi-lang-go=\"`office365`\" pulumi-lang-python=\"`office365`\" pulumi-lang-yaml=\"`office365`\" pulumi-lang-java=\"`office365`\"\u003e`office365`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`salesforce`\" pulumi-lang-dotnet=\"`Salesforce`\" pulumi-lang-go=\"`salesforce`\" pulumi-lang-python=\"`salesforce`\" pulumi-lang-yaml=\"`salesforce`\" pulumi-lang-java=\"`salesforce`\"\u003e`salesforce`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sentry`\" pulumi-lang-dotnet=\"`Sentry`\" pulumi-lang-go=\"`sentry`\" pulumi-lang-python=\"`sentry`\" pulumi-lang-yaml=\"`sentry`\" pulumi-lang-java=\"`sentry`\"\u003e`sentry`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sharepoint`\" pulumi-lang-dotnet=\"`Sharepoint`\" pulumi-lang-go=\"`sharepoint`\" pulumi-lang-python=\"`sharepoint`\" pulumi-lang-yaml=\"`sharepoint`\" pulumi-lang-java=\"`sharepoint`\"\u003e`sharepoint`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`slack`\" pulumi-lang-dotnet=\"`Slack`\" pulumi-lang-go=\"`slack`\" pulumi-lang-python=\"`slack`\" pulumi-lang-yaml=\"`slack`\" pulumi-lang-java=\"`slack`\"\u003e`slack`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`springcm`\" pulumi-lang-dotnet=\"`Springcm`\" pulumi-lang-go=\"`springcm`\" pulumi-lang-python=\"`springcm`\" pulumi-lang-yaml=\"`springcm`\" pulumi-lang-java=\"`springcm`\"\u003e`springcm`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zendesk`\" pulumi-lang-dotnet=\"`Zendesk`\" pulumi-lang-go=\"`zendesk`\" pulumi-lang-python=\"`zendesk`\" pulumi-lang-yaml=\"`zendesk`\" pulumi-lang-java=\"`zendesk`\"\u003e`zendesk`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`zoom`\" pulumi-lang-dotnet=\"`Zoom`\" pulumi-lang-go=\"`zoom`\" pulumi-lang-python=\"`zoom`\" pulumi-lang-yaml=\"`zoom`\" pulumi-lang-java=\"`zoom`\"\u003e`zoom`\u003c/span\u003e.\n",
                        "type": "string"
                    },
                    "callbacks": {
                        "description": "URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "clientAliases": {
                        "description": "List of audiences/realms for SAML protocol. Used by the wsfed addon.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "clientAuthenticationMethods": {
                        "description": "Defines client authentication methods.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientClientAuthenticationMethod:getClientClientAuthenticationMethod"
                        },
                        "type": "array"
                    },
                    "clientId": {
                        "description": "The ID of the client. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "clientMetadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?\"/\\()\u003c\u003e@ [Tab] [Space]`.\n",
                        "type": "object"
                    },
                    "clientSecret": {
                        "secret": true,
                        "type": "string"
                    },
                    "complianceLevel": {
                        "description": "Defines the compliance level for this client, which may restrict it's capabilities. Can be one of \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fapi1AdvPkjPar`\" pulumi-lang-dotnet=\"`Fapi1AdvPkjPar`\" pulumi-lang-go=\"`fapi1AdvPkjPar`\" pulumi-lang-python=\"`fapi1_adv_pkj_par`\" pulumi-lang-yaml=\"`fapi1AdvPkjPar`\" pulumi-lang-java=\"`fapi1AdvPkjPar`\"\u003e`fapi1_adv_pkj_par`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`fapi1AdvMtlsPar`\" pulumi-lang-dotnet=\"`Fapi1AdvMtlsPar`\" pulumi-lang-go=\"`fapi1AdvMtlsPar`\" pulumi-lang-python=\"`fapi1_adv_mtls_par`\" pulumi-lang-yaml=\"`fapi1AdvMtlsPar`\" pulumi-lang-java=\"`fapi1AdvMtlsPar`\"\u003e`fapi1_adv_mtls_par`\u003c/span\u003e.\n",
                        "type": "string"
                    },
                    "crossOriginAuth": {
                        "description": "Whether this client can be used to make cross-origin authentication requests (\u003cspan pulumi-lang-nodejs=\"`true`\" pulumi-lang-dotnet=\"`True`\" pulumi-lang-go=\"`true`\" pulumi-lang-python=\"`true`\" pulumi-lang-yaml=\"`true`\" pulumi-lang-java=\"`true`\"\u003e`true`\u003c/span\u003e) or it is not allowed to make such requests (\u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e).\n",
                        "type": "boolean"
                    },
                    "crossOriginLoc": {
                        "description": "URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.\n",
                        "type": "string"
                    },
                    "customLoginPage": {
                        "description": "The content (HTML, CSS, JS) of the custom login page.\n",
                        "type": "string"
                    },
                    "customLoginPageOn": {
                        "description": "Indicates whether a custom login page is to be used.\n",
                        "type": "boolean"
                    },
                    "defaultOrganizations": {
                        "description": "Configure and associate an organization with the Client\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientDefaultOrganization:getClientDefaultOrganization"
                        },
                        "type": "array"
                    },
                    "description": {
                        "description": "Description of the purpose of the client.\n",
                        "type": "string"
                    },
                    "encryptionKey": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Encryption used for WS-Fed responses with this client.\n",
                        "type": "object"
                    },
                    "formTemplate": {
                        "description": "HTML form template to be used for WS-Federation.\n",
                        "type": "string"
                    },
                    "grantTypes": {
                        "description": "Types of grants that this client is authorized to use.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "initiateLoginUri": {
                        "description": "Initiate login URI. Must be HTTPS or an empty string.\n",
                        "type": "string"
                    },
                    "isFirstParty": {
                        "description": "Indicates whether this client is a first-party client.Defaults to true from the API\n",
                        "type": "boolean"
                    },
                    "isTokenEndpointIpHeaderTrusted": {
                        "description": "Indicates whether the token endpoint IP header is trusted. Requires the authentication method to be set to \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e. Setting this property when creating the resource, will default the authentication method to \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e. To change the authentication method to \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e use the \u003cspan pulumi-lang-nodejs=\"`auth0.ClientCredentials`\" pulumi-lang-dotnet=\"`auth0.ClientCredentials`\" pulumi-lang-go=\"`ClientCredentials`\" pulumi-lang-python=\"`ClientCredentials`\" pulumi-lang-yaml=\"`auth0.ClientCredentials`\" pulumi-lang-java=\"`auth0.ClientCredentials`\"\u003e`auth0.ClientCredentials`\u003c/span\u003e resource.\n",
                        "type": "boolean"
                    },
                    "jwtConfigurations": {
                        "description": "Configuration settings for the JWTs issued for this client.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientJwtConfiguration:getClientJwtConfiguration"
                        },
                        "type": "array"
                    },
                    "logoUri": {
                        "description": "URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.\n",
                        "type": "string"
                    },
                    "mobiles": {
                        "description": "Additional configuration for native mobile apps.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientMobile:getClientMobile"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "The name of the client. If not provided, \u003cspan pulumi-lang-nodejs=\"`clientId`\" pulumi-lang-dotnet=\"`ClientId`\" pulumi-lang-go=\"`clientId`\" pulumi-lang-python=\"`client_id`\" pulumi-lang-yaml=\"`clientId`\" pulumi-lang-java=\"`clientId`\"\u003e`client_id`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "nativeSocialLogins": {
                        "description": "Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e in order to change the \u003cspan pulumi-lang-nodejs=\"`appType`\" pulumi-lang-dotnet=\"`AppType`\" pulumi-lang-go=\"`appType`\" pulumi-lang-python=\"`app_type`\" pulumi-lang-yaml=\"`appType`\" pulumi-lang-java=\"`appType`\"\u003e`app_type`\u003c/span\u003e.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientNativeSocialLogin:getClientNativeSocialLogin"
                        },
                        "type": "array"
                    },
                    "oidcBackchannelLogoutUrls": {
                        "description": "Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "oidcConformant": {
                        "description": "Indicates whether this client will conform to strict OIDC specifications.\n",
                        "type": "boolean"
                    },
                    "oidcLogouts": {
                        "description": "Configure OIDC logout for the Client\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientOidcLogout:getClientOidcLogout"
                        },
                        "type": "array"
                    },
                    "organizationDiscoveryMethods": {
                        "description": "Methods for discovering organizations during the pre*login*prompt. Can include \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e (allows users to find their organization by entering their email address) and/or \u003cspan pulumi-lang-nodejs=\"`organizationName`\" pulumi-lang-dotnet=\"`OrganizationName`\" pulumi-lang-go=\"`organizationName`\" pulumi-lang-python=\"`organization_name`\" pulumi-lang-yaml=\"`organizationName`\" pulumi-lang-java=\"`organizationName`\"\u003e`organization_name`\u003c/span\u003e (requires users to enter the organization name directly). These methods can be combined. Setting this property requires that \u003cspan pulumi-lang-nodejs=\"`organizationRequireBehavior`\" pulumi-lang-dotnet=\"`OrganizationRequireBehavior`\" pulumi-lang-go=\"`organizationRequireBehavior`\" pulumi-lang-python=\"`organization_require_behavior`\" pulumi-lang-yaml=\"`organizationRequireBehavior`\" pulumi-lang-java=\"`organizationRequireBehavior`\"\u003e`organization_require_behavior`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`preLoginPrompt`\" pulumi-lang-dotnet=\"`PreLoginPrompt`\" pulumi-lang-go=\"`preLoginPrompt`\" pulumi-lang-python=\"`pre_login_prompt`\" pulumi-lang-yaml=\"`preLoginPrompt`\" pulumi-lang-java=\"`preLoginPrompt`\"\u003e`pre_login_prompt`\u003c/span\u003e.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "organizationRequireBehavior": {
                        "description": "Defines how to proceed during an authentication transaction when \u003cspan pulumi-lang-nodejs=\"`organizationUsage \" pulumi-lang-dotnet=\"`OrganizationUsage \" pulumi-lang-go=\"`organizationUsage \" pulumi-lang-python=\"`organization_usage \" pulumi-lang-yaml=\"`organizationUsage \" pulumi-lang-java=\"`organizationUsage \"\u003e`organization_usage \u003c/span\u003e= \"require\"`. Can be \u003cspan pulumi-lang-nodejs=\"`noPrompt`\" pulumi-lang-dotnet=\"`NoPrompt`\" pulumi-lang-go=\"`noPrompt`\" pulumi-lang-python=\"`no_prompt`\" pulumi-lang-yaml=\"`noPrompt`\" pulumi-lang-java=\"`noPrompt`\"\u003e`no_prompt`\u003c/span\u003e (default), \u003cspan pulumi-lang-nodejs=\"`preLoginPrompt`\" pulumi-lang-dotnet=\"`PreLoginPrompt`\" pulumi-lang-go=\"`preLoginPrompt`\" pulumi-lang-python=\"`pre_login_prompt`\" pulumi-lang-yaml=\"`preLoginPrompt`\" pulumi-lang-java=\"`preLoginPrompt`\"\u003e`pre_login_prompt`\u003c/span\u003e or  \u003cspan pulumi-lang-nodejs=\"`postLoginPrompt`\" pulumi-lang-dotnet=\"`PostLoginPrompt`\" pulumi-lang-go=\"`postLoginPrompt`\" pulumi-lang-python=\"`post_login_prompt`\" pulumi-lang-yaml=\"`postLoginPrompt`\" pulumi-lang-java=\"`postLoginPrompt`\"\u003e`post_login_prompt`\u003c/span\u003e.\n",
                        "type": "string"
                    },
                    "organizationUsage": {
                        "description": "Defines how to proceed during an authentication transaction with regards to an organization. Can be \u003cspan pulumi-lang-nodejs=\"`deny`\" pulumi-lang-dotnet=\"`Deny`\" pulumi-lang-go=\"`deny`\" pulumi-lang-python=\"`deny`\" pulumi-lang-yaml=\"`deny`\" pulumi-lang-java=\"`deny`\"\u003e`deny`\u003c/span\u003e (default), \u003cspan pulumi-lang-nodejs=\"`allow`\" pulumi-lang-dotnet=\"`Allow`\" pulumi-lang-go=\"`allow`\" pulumi-lang-python=\"`allow`\" pulumi-lang-yaml=\"`allow`\" pulumi-lang-java=\"`allow`\"\u003e`allow`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`require`\" pulumi-lang-dotnet=\"`Require`\" pulumi-lang-go=\"`require`\" pulumi-lang-python=\"`require`\" pulumi-lang-yaml=\"`require`\" pulumi-lang-java=\"`require`\"\u003e`require`\u003c/span\u003e.\n",
                        "type": "string"
                    },
                    "refreshTokens": {
                        "description": "Configuration settings for the refresh tokens issued for this client.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientRefreshToken:getClientRefreshToken"
                        },
                        "type": "array"
                    },
                    "requireProofOfPossession": {
                        "description": "Makes the use of Proof-of-Possession mandatory for this client.\n",
                        "type": "boolean"
                    },
                    "requirePushedAuthorizationRequests": {
                        "description": "Makes the use of Pushed Authorization Requests mandatory for this client. This feature currently needs to be enabled on the tenant in order to make use of it.\n",
                        "type": "boolean"
                    },
                    "resourceServerIdentifier": {
                        "description": "The identifier of a resource server that client is associated withThis property can be sent only when app*type=resource*server.This property can not be changed, once the client is created.\n",
                        "type": "string"
                    },
                    "sessionTransfers": {
                        "items": {
                            "$ref": "#/types/auth0:index/getClientSessionTransfer:getClientSessionTransfer"
                        },
                        "type": "array"
                    },
                    "signedRequestObjects": {
                        "description": "Configuration for JWT-secured Authorization Requests(JAR).\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientSignedRequestObject:getClientSignedRequestObject"
                        },
                        "type": "array"
                    },
                    "signingKeys": {
                        "description": "List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.\n",
                        "items": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "skipNonVerifiableCallbackUriConfirmationPrompt": {
                        "description": "Indicates whether the confirmation prompt appears when using non-verifiable callback URIs. Set to true to skip the prompt, false to show it, or null to unset. Accepts (true/false/null) or (\"true\"/\"false\"/\"null\")\n",
                        "type": "string"
                    },
                    "sso": {
                        "description": "Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).\n",
                        "type": "boolean"
                    },
                    "ssoDisabled": {
                        "description": "Indicates whether or not SSO is disabled.\n",
                        "type": "boolean"
                    },
                    "tokenEndpointAuthMethod": {
                        "description": "The authentication method for the token endpoint. Results include \u003cspan pulumi-lang-nodejs=\"`none`\" pulumi-lang-dotnet=\"`None`\" pulumi-lang-go=\"`none`\" pulumi-lang-python=\"`none`\" pulumi-lang-yaml=\"`none`\" pulumi-lang-java=\"`none`\"\u003e`none`\u003c/span\u003e (public client without a client secret), \u003cspan pulumi-lang-nodejs=\"`clientSecretPost`\" pulumi-lang-dotnet=\"`ClientSecretPost`\" pulumi-lang-go=\"`clientSecretPost`\" pulumi-lang-python=\"`client_secret_post`\" pulumi-lang-yaml=\"`clientSecretPost`\" pulumi-lang-java=\"`clientSecretPost`\"\u003e`client_secret_post`\u003c/span\u003e (client uses HTTP POST parameters), \u003cspan pulumi-lang-nodejs=\"`clientSecretBasic`\" pulumi-lang-dotnet=\"`ClientSecretBasic`\" pulumi-lang-go=\"`clientSecretBasic`\" pulumi-lang-python=\"`client_secret_basic`\" pulumi-lang-yaml=\"`clientSecretBasic`\" pulumi-lang-java=\"`clientSecretBasic`\"\u003e`client_secret_basic`\u003c/span\u003e (client uses HTTP Basic), Managing a client's authentication method can be done via the \u003cspan pulumi-lang-nodejs=\"`auth0.ClientCredentials`\" pulumi-lang-dotnet=\"`auth0.ClientCredentials`\" pulumi-lang-go=\"`ClientCredentials`\" pulumi-lang-python=\"`ClientCredentials`\" pulumi-lang-yaml=\"`auth0.ClientCredentials`\" pulumi-lang-java=\"`auth0.ClientCredentials`\"\u003e`auth0.ClientCredentials`\u003c/span\u003e resource.\n",
                        "type": "string"
                    },
                    "tokenExchanges": {
                        "description": "Allows configuration for token exchange\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientTokenExchange:getClientTokenExchange"
                        },
                        "type": "array"
                    },
                    "tokenQuotas": {
                        "description": "The token quota configuration.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientTokenQuota:getClientTokenQuota"
                        },
                        "type": "array"
                    },
                    "webOrigins": {
                        "description": "URLs that represent valid web origins for use with web message response mode.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "addons",
                    "allowedClients",
                    "allowedLogoutUrls",
                    "allowedOrigins",
                    "appType",
                    "callbacks",
                    "clientAliases",
                    "clientAuthenticationMethods",
                    "clientMetadata",
                    "clientSecret",
                    "complianceLevel",
                    "crossOriginAuth",
                    "crossOriginLoc",
                    "customLoginPage",
                    "customLoginPageOn",
                    "defaultOrganizations",
                    "description",
                    "encryptionKey",
                    "formTemplate",
                    "grantTypes",
                    "initiateLoginUri",
                    "isFirstParty",
                    "isTokenEndpointIpHeaderTrusted",
                    "jwtConfigurations",
                    "logoUri",
                    "mobiles",
                    "nativeSocialLogins",
                    "oidcBackchannelLogoutUrls",
                    "oidcConformant",
                    "oidcLogouts",
                    "organizationDiscoveryMethods",
                    "organizationRequireBehavior",
                    "organizationUsage",
                    "refreshTokens",
                    "requireProofOfPossession",
                    "requirePushedAuthorizationRequests",
                    "resourceServerIdentifier",
                    "sessionTransfers",
                    "signedRequestObjects",
                    "signingKeys",
                    "skipNonVerifiableCallbackUriConfirmationPrompt",
                    "sso",
                    "ssoDisabled",
                    "tokenEndpointAuthMethod",
                    "tokenExchanges",
                    "tokenQuotas",
                    "webOrigins",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getClientGrants:getClientGrants": {
            "description": "Data source to retrieve a client grants based on\u003cspan pulumi-lang-nodejs=\" clientId \" pulumi-lang-dotnet=\" ClientId \" pulumi-lang-go=\" clientId \" pulumi-lang-python=\" client_id \" pulumi-lang-yaml=\" clientId \" pulumi-lang-java=\" clientId \"\u003e client_id \u003c/span\u003eand/or audience\n",
            "inputs": {
                "description": "A collection of arguments for invoking getClientGrants.\n",
                "properties": {
                    "audience": {
                        "type": "string",
                        "description": "The audience to filter by.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "The ID of the client to filter by.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getClientGrants.\n",
                "properties": {
                    "audience": {
                        "description": "The audience to filter by.\n",
                        "type": "string"
                    },
                    "clientGrants": {
                        "description": "List of client grants matching the criteria.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientGrantsClientGrant:getClientGrantsClientGrant"
                        },
                        "type": "array"
                    },
                    "clientId": {
                        "description": "The ID of the client to filter by.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    }
                },
                "required": [
                    "clientGrants",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getClients:getClients": {
            "description": "Data source to retrieve a list of Auth0 application clients with optional filtering.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// Auth0 clients with \"External\" in the name\nconst externalApps = auth0.getClients({\n    nameFilter: \"External\",\n});\n// Auth0 clients filtered by non_interactive or spa app type\nconst m2mApps = auth0.getClients({\n    appTypes: [\n        \"non_interactive\",\n        \"spa\",\n    ],\n});\n// Auth0 clients filtered by is_first_party equal to true\nconst firstPartyApps = auth0.getClients({\n    isFirstParty: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# Auth0 clients with \"External\" in the name\nexternal_apps = auth0.get_clients(name_filter=\"External\")\n# Auth0 clients filtered by non_interactive or spa app type\nm2m_apps = auth0.get_clients(app_types=[\n    \"non_interactive\",\n    \"spa\",\n])\n# Auth0 clients filtered by is_first_party equal to true\nfirst_party_apps = auth0.get_clients(is_first_party=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Auth0 clients with \"External\" in the name\n    var externalApps = Auth0.GetClients.Invoke(new()\n    {\n        NameFilter = \"External\",\n    });\n\n    // Auth0 clients filtered by non_interactive or spa app type\n    var m2mApps = Auth0.GetClients.Invoke(new()\n    {\n        AppTypes = new[]\n        {\n            \"non_interactive\",\n            \"spa\",\n        },\n    });\n\n    // Auth0 clients filtered by is_first_party equal to true\n    var firstPartyApps = Auth0.GetClients.Invoke(new()\n    {\n        IsFirstParty = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Auth0 clients with \"External\" in the name\n\t\t_, err := auth0.GetClients(ctx, \u0026auth0.GetClientsArgs{\n\t\t\tNameFilter: pulumi.StringRef(\"External\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Auth0 clients filtered by non_interactive or spa app type\n\t\t_, err = auth0.GetClients(ctx, \u0026auth0.GetClientsArgs{\n\t\t\tAppTypes: []string{\n\t\t\t\t\"non_interactive\",\n\t\t\t\t\"spa\",\n\t\t\t},\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Auth0 clients filtered by is_first_party equal to true\n\t\t_, err = auth0.GetClients(ctx, \u0026auth0.GetClientsArgs{\n\t\t\tIsFirstParty: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetClientsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Auth0 clients with \"External\" in the name\n        final var externalApps = Auth0Functions.getClients(GetClientsArgs.builder()\n            .nameFilter(\"External\")\n            .build());\n\n        // Auth0 clients filtered by non_interactive or spa app type\n        final var m2mApps = Auth0Functions.getClients(GetClientsArgs.builder()\n            .appTypes(            \n                \"non_interactive\",\n                \"spa\")\n            .build());\n\n        // Auth0 clients filtered by is_first_party equal to true\n        final var firstPartyApps = Auth0Functions.getClients(GetClientsArgs.builder()\n            .isFirstParty(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # Auth0 clients with \"External\" in the name\n  externalApps:\n    fn::invoke:\n      function: auth0:getClients\n      arguments:\n        nameFilter: External\n  # Auth0 clients filtered by non_interactive or spa app type\n  m2mApps:\n    fn::invoke:\n      function: auth0:getClients\n      arguments:\n        appTypes:\n          - non_interactive\n          - spa\n  # Auth0 clients filtered by is_first_party equal to true\n  firstPartyApps:\n    fn::invoke:\n      function: auth0:getClients\n      arguments:\n        isFirstParty: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getClients.\n",
                "properties": {
                    "appTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Filter clients by application types.\n"
                    },
                    "isFirstParty": {
                        "type": "boolean",
                        "description": "Filter clients by first party status.\n"
                    },
                    "nameFilter": {
                        "type": "string",
                        "description": "Filter clients by name (partial matches supported).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getClients.\n",
                "properties": {
                    "appTypes": {
                        "description": "Filter clients by application types.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "clients": {
                        "description": "List of clients matching the filter criteria.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getClientsClient:getClientsClient"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "isFirstParty": {
                        "description": "Filter clients by first party status.\n",
                        "type": "boolean"
                    },
                    "nameFilter": {
                        "description": "Filter clients by name (partial matches supported).\n",
                        "type": "string"
                    }
                },
                "required": [
                    "clients",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getConnection:getConnection": {
            "description": "Data source to retrieve a specific Auth0 connection by \u003cspan pulumi-lang-nodejs=\"`connectionId`\" pulumi-lang-dotnet=\"`ConnectionId`\" pulumi-lang-go=\"`connectionId`\" pulumi-lang-python=\"`connection_id`\" pulumi-lang-yaml=\"`connectionId`\" pulumi-lang-java=\"`connectionId`\"\u003e`connection_id`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 Connection loaded using its name.\nconst some_connection_by_name = auth0.getConnection({\n    name: \"Acceptance-Test-Connection-{{.testName}}\",\n});\n// An Auth0 Connection loaded using its ID.\nconst some_connection_by_id = auth0.getConnection({\n    connectionId: \"con_abcdefghkijklmnopqrstuvwxyz0123456789\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 Connection loaded using its name.\nsome_connection_by_name = auth0.get_connection(name=\"Acceptance-Test-Connection-{{.testName}}\")\n# An Auth0 Connection loaded using its ID.\nsome_connection_by_id = auth0.get_connection(connection_id=\"con_abcdefghkijklmnopqrstuvwxyz0123456789\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 Connection loaded using its name.\n    var some_connection_by_name = Auth0.GetConnection.Invoke(new()\n    {\n        Name = \"Acceptance-Test-Connection-{{.testName}}\",\n    });\n\n    // An Auth0 Connection loaded using its ID.\n    var some_connection_by_id = Auth0.GetConnection.Invoke(new()\n    {\n        ConnectionId = \"con_abcdefghkijklmnopqrstuvwxyz0123456789\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 Connection loaded using its name.\n\t\t_, err := auth0.LookupConnection(ctx, \u0026auth0.LookupConnectionArgs{\n\t\t\tName: pulumi.StringRef(\"Acceptance-Test-Connection-{{.testName}}\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// An Auth0 Connection loaded using its ID.\n\t\t_, err = auth0.LookupConnection(ctx, \u0026auth0.LookupConnectionArgs{\n\t\t\tConnectionId: pulumi.StringRef(\"con_abcdefghkijklmnopqrstuvwxyz0123456789\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 Connection loaded using its name.\n        final var some-connection-by-name = Auth0Functions.getConnection(GetConnectionArgs.builder()\n            .name(\"Acceptance-Test-Connection-{{.testName}}\")\n            .build());\n\n        // An Auth0 Connection loaded using its ID.\n        final var some-connection-by-id = Auth0Functions.getConnection(GetConnectionArgs.builder()\n            .connectionId(\"con_abcdefghkijklmnopqrstuvwxyz0123456789\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 Connection loaded using its name.\n  some-connection-by-name:\n    fn::invoke:\n      function: auth0:getConnection\n      arguments:\n        name: Acceptance-Test-Connection-{{.testName}}\n  # An Auth0 Connection loaded using its ID.\n  some-connection-by-id:\n    fn::invoke:\n      function: auth0:getConnection\n      arguments:\n        connectionId: con_abcdefghkijklmnopqrstuvwxyz0123456789\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getConnection.\n",
                "properties": {
                    "connectionId": {
                        "type": "string",
                        "description": "The ID of the connection. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the connection. If not provided, \u003cspan pulumi-lang-nodejs=\"`connectionId`\" pulumi-lang-dotnet=\"`ConnectionId`\" pulumi-lang-go=\"`connectionId`\" pulumi-lang-python=\"`connection_id`\" pulumi-lang-yaml=\"`connectionId`\" pulumi-lang-java=\"`connectionId`\"\u003e`connection_id`\u003c/span\u003e must be set.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getConnection.\n",
                "properties": {
                    "authentications": {
                        "description": "Configure the purpose of a connection to be used for authentication during login.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getConnectionAuthentication:getConnectionAuthentication"
                        },
                        "type": "array"
                    },
                    "connectedAccounts": {
                        "description": "Configure the purpose of a connection to be used for connected accounts and Token Vault.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getConnectionConnectedAccount:getConnectionConnectedAccount"
                        },
                        "type": "array"
                    },
                    "connectionId": {
                        "description": "The ID of the connection. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "displayName": {
                        "description": "Name used in login screen.\n",
                        "type": "string"
                    },
                    "enabledClients": {
                        "description": "IDs of the clients for which the connection is enabled.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "isDomainConnection": {
                        "description": "Indicates whether the connection is domain level.\n",
                        "type": "boolean"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata associated with the connection, in the form of a map of string values (max 255 chars).\n",
                        "type": "object"
                    },
                    "name": {
                        "description": "The name of the connection. If not provided, \u003cspan pulumi-lang-nodejs=\"`connectionId`\" pulumi-lang-dotnet=\"`ConnectionId`\" pulumi-lang-go=\"`connectionId`\" pulumi-lang-python=\"`connection_id`\" pulumi-lang-yaml=\"`connectionId`\" pulumi-lang-java=\"`connectionId`\"\u003e`connection_id`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "options": {
                        "description": "Configuration settings for connection options.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getConnectionOption:getConnectionOption"
                        },
                        "type": "array"
                    },
                    "realms": {
                        "description": "Defines the realms for which the connection will be used (e.g., email domains). If not specified, the connection name is added as the realm.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "showAsButton": {
                        "description": "Display connection as a button. Only available on enterprise connections.\n",
                        "type": "boolean"
                    },
                    "strategy": {
                        "description": "Type of the connection, which indicates the identity provider.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "authentications",
                    "connectedAccounts",
                    "displayName",
                    "enabledClients",
                    "isDomainConnection",
                    "metadata",
                    "options",
                    "realms",
                    "showAsButton",
                    "strategy",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getConnectionKeys:getConnectionKeys": {
            "description": "Retrieve the list of signing keys for a specific Auth0 connection. (Okta/OIDC only)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 Connection Keys loaded using its Connection ID.\nconst myKeys = auth0.getConnectionKeys({\n    connectionId: \"con_xxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 Connection Keys loaded using its Connection ID.\nmy_keys = auth0.get_connection_keys(connection_id=\"con_xxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 Connection Keys loaded using its Connection ID.\n    var myKeys = Auth0.GetConnectionKeys.Invoke(new()\n    {\n        ConnectionId = \"con_xxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 Connection Keys loaded using its Connection ID.\n\t\t_, err := auth0.LookupConnectionKeys(ctx, \u0026auth0.LookupConnectionKeysArgs{\n\t\t\tConnectionId: \"con_xxxxxxxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetConnectionKeysArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 Connection Keys loaded using its Connection ID.\n        final var myKeys = Auth0Functions.getConnectionKeys(GetConnectionKeysArgs.builder()\n            .connectionId(\"con_xxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 Connection Keys loaded using its Connection ID.\n  myKeys:\n    fn::invoke:\n      function: auth0:getConnectionKeys\n      arguments:\n        connectionId: con_xxxxxxxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getConnectionKeys.\n",
                "properties": {
                    "connectionId": {
                        "type": "string",
                        "description": "The ID of the connection to retrieve keys for.\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectionId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConnectionKeys.\n",
                "properties": {
                    "connectionId": {
                        "description": "The ID of the connection to retrieve keys for.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "keys": {
                        "description": "List of signing keys associated with the connection.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getConnectionKeysKey:getConnectionKeysKey"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "connectionId",
                    "keys",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getConnectionScimConfiguration:getConnectionScimConfiguration": {
            "description": "Data source to retrieve a SCIM configuration for an Auth0 connection by \u003cspan pulumi-lang-nodejs=\"`connectionId`\" pulumi-lang-dotnet=\"`ConnectionId`\" pulumi-lang-go=\"`connectionId`\" pulumi-lang-python=\"`connection_id`\" pulumi-lang-yaml=\"`connectionId`\" pulumi-lang-java=\"`connectionId`\"\u003e`connection_id`\u003c/span\u003e.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myEnterpriseConnection = new auth0.Connection(\"my_enterprise_connection\", {\n    name: \"my-enterprise-connection\",\n    displayName: \"My Enterprise Connection\",\n    strategy: \"okta\",\n    options: {\n        clientId: \"1234567\",\n        clientSecret: \"1234567\",\n        issuer: \"https://example.okta.com\",\n        jwksUri: \"https://example.okta.com/oauth2/v1/keys\",\n        tokenEndpoint: \"https://example.okta.com/oauth2/v1/token\",\n        authorizationEndpoint: \"https://example.okta.com/oauth2/v1/authorize\",\n    },\n});\nconst myConnScimConfiguration = new auth0.ConnectionScimConfiguration(\"my_conn_scim_configuration\", {connectionId: myEnterpriseConnection.id});\n// A data source for an Auth0 Connection SCIM Configuration.\nconst myConnScimConfigurationData = auth0.getConnectionScimConfigurationOutput({\n    connectionId: myConnScimConfiguration.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_enterprise_connection = auth0.Connection(\"my_enterprise_connection\",\n    name=\"my-enterprise-connection\",\n    display_name=\"My Enterprise Connection\",\n    strategy=\"okta\",\n    options={\n        \"client_id\": \"1234567\",\n        \"client_secret\": \"1234567\",\n        \"issuer\": \"https://example.okta.com\",\n        \"jwks_uri\": \"https://example.okta.com/oauth2/v1/keys\",\n        \"token_endpoint\": \"https://example.okta.com/oauth2/v1/token\",\n        \"authorization_endpoint\": \"https://example.okta.com/oauth2/v1/authorize\",\n    })\nmy_conn_scim_configuration = auth0.ConnectionScimConfiguration(\"my_conn_scim_configuration\", connection_id=my_enterprise_connection.id)\n# A data source for an Auth0 Connection SCIM Configuration.\nmy_conn_scim_configuration_data = auth0.get_connection_scim_configuration_output(connection_id=my_conn_scim_configuration.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myEnterpriseConnection = new Auth0.Connection(\"my_enterprise_connection\", new()\n    {\n        Name = \"my-enterprise-connection\",\n        DisplayName = \"My Enterprise Connection\",\n        Strategy = \"okta\",\n        Options = new Auth0.Inputs.ConnectionOptionsArgs\n        {\n            ClientId = \"1234567\",\n            ClientSecret = \"1234567\",\n            Issuer = \"https://example.okta.com\",\n            JwksUri = \"https://example.okta.com/oauth2/v1/keys\",\n            TokenEndpoint = \"https://example.okta.com/oauth2/v1/token\",\n            AuthorizationEndpoint = \"https://example.okta.com/oauth2/v1/authorize\",\n        },\n    });\n\n    var myConnScimConfiguration = new Auth0.ConnectionScimConfiguration(\"my_conn_scim_configuration\", new()\n    {\n        ConnectionId = myEnterpriseConnection.Id,\n    });\n\n    // A data source for an Auth0 Connection SCIM Configuration.\n    var myConnScimConfigurationData = Auth0.GetConnectionScimConfiguration.Invoke(new()\n    {\n        ConnectionId = myConnScimConfiguration.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyEnterpriseConnection, err := auth0.NewConnection(ctx, \"my_enterprise_connection\", \u0026auth0.ConnectionArgs{\n\t\t\tName:        pulumi.String(\"my-enterprise-connection\"),\n\t\t\tDisplayName: pulumi.String(\"My Enterprise Connection\"),\n\t\t\tStrategy:    pulumi.String(\"okta\"),\n\t\t\tOptions: \u0026auth0.ConnectionOptionsArgs{\n\t\t\t\tClientId:              pulumi.String(\"1234567\"),\n\t\t\t\tClientSecret:          pulumi.String(\"1234567\"),\n\t\t\t\tIssuer:                pulumi.String(\"https://example.okta.com\"),\n\t\t\t\tJwksUri:               pulumi.String(\"https://example.okta.com/oauth2/v1/keys\"),\n\t\t\t\tTokenEndpoint:         pulumi.String(\"https://example.okta.com/oauth2/v1/token\"),\n\t\t\t\tAuthorizationEndpoint: pulumi.String(\"https://example.okta.com/oauth2/v1/authorize\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyConnScimConfiguration, err := auth0.NewConnectionScimConfiguration(ctx, \"my_conn_scim_configuration\", \u0026auth0.ConnectionScimConfigurationArgs{\n\t\t\tConnectionId: myEnterpriseConnection.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// A data source for an Auth0 Connection SCIM Configuration.\n\t\t_ = auth0.LookupConnectionScimConfigurationOutput(ctx, auth0.GetConnectionScimConfigurationOutputArgs{\n\t\t\tConnectionId: myConnScimConfiguration.ID(),\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Connection;\nimport com.pulumi.auth0.ConnectionArgs;\nimport com.pulumi.auth0.inputs.ConnectionOptionsArgs;\nimport com.pulumi.auth0.ConnectionScimConfiguration;\nimport com.pulumi.auth0.ConnectionScimConfigurationArgs;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetConnectionScimConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myEnterpriseConnection = new Connection(\"myEnterpriseConnection\", ConnectionArgs.builder()\n            .name(\"my-enterprise-connection\")\n            .displayName(\"My Enterprise Connection\")\n            .strategy(\"okta\")\n            .options(ConnectionOptionsArgs.builder()\n                .clientId(\"1234567\")\n                .clientSecret(\"1234567\")\n                .issuer(\"https://example.okta.com\")\n                .jwksUri(\"https://example.okta.com/oauth2/v1/keys\")\n                .tokenEndpoint(\"https://example.okta.com/oauth2/v1/token\")\n                .authorizationEndpoint(\"https://example.okta.com/oauth2/v1/authorize\")\n                .build())\n            .build());\n\n        var myConnScimConfiguration = new ConnectionScimConfiguration(\"myConnScimConfiguration\", ConnectionScimConfigurationArgs.builder()\n            .connectionId(myEnterpriseConnection.id())\n            .build());\n\n        // A data source for an Auth0 Connection SCIM Configuration.\n        final var myConnScimConfigurationData = Auth0Functions.getConnectionScimConfiguration(GetConnectionScimConfigurationArgs.builder()\n            .connectionId(myConnScimConfiguration.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myEnterpriseConnection:\n    type: auth0:Connection\n    name: my_enterprise_connection\n    properties:\n      name: my-enterprise-connection\n      displayName: My Enterprise Connection\n      strategy: okta\n      options:\n        clientId: '1234567'\n        clientSecret: '1234567'\n        issuer: https://example.okta.com\n        jwksUri: https://example.okta.com/oauth2/v1/keys\n        tokenEndpoint: https://example.okta.com/oauth2/v1/token\n        authorizationEndpoint: https://example.okta.com/oauth2/v1/authorize\n  myConnScimConfiguration:\n    type: auth0:ConnectionScimConfiguration\n    name: my_conn_scim_configuration\n    properties:\n      connectionId: ${myEnterpriseConnection.id}\nvariables:\n  # A data source for an Auth0 Connection SCIM Configuration.\n  myConnScimConfigurationData:\n    fn::invoke:\n      function: auth0:getConnectionScimConfiguration\n      arguments:\n        connectionId: ${myConnScimConfiguration.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getConnectionScimConfiguration.\n",
                "properties": {
                    "connectionId": {
                        "type": "string",
                        "description": "ID of the connection for this SCIM configuration.\n"
                    },
                    "defaultMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/getConnectionScimConfigurationDefaultMapping:getConnectionScimConfigurationDefaultMapping"
                        },
                        "description": "Default mapping between Auth0 attributes and SCIM attributes for this connection type.\n"
                    },
                    "mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/getConnectionScimConfigurationMapping:getConnectionScimConfigurationMapping"
                        },
                        "description": "Mapping between Auth0 attributes and SCIM attributes.\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectionId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConnectionScimConfiguration.\n",
                "properties": {
                    "connectionId": {
                        "description": "ID of the connection for this SCIM configuration.\n",
                        "type": "string"
                    },
                    "connectionName": {
                        "description": "Name of the connection for this SCIM configuration.\n",
                        "type": "string"
                    },
                    "defaultMappings": {
                        "description": "Default mapping between Auth0 attributes and SCIM attributes for this connection type.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getConnectionScimConfigurationDefaultMapping:getConnectionScimConfigurationDefaultMapping"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "mappings": {
                        "description": "Mapping between Auth0 attributes and SCIM attributes.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getConnectionScimConfigurationMapping:getConnectionScimConfigurationMapping"
                        },
                        "type": "array"
                    },
                    "strategy": {
                        "description": "Schema of the connection for this SCIM configuration.\n",
                        "type": "string"
                    },
                    "tenantName": {
                        "description": "Name of the tenant for this SCIM configuration.\n",
                        "type": "string"
                    },
                    "userIdAttribute": {
                        "description": "User ID attribute for generation unique of user ids.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "connectionId",
                    "connectionName",
                    "defaultMappings",
                    "mappings",
                    "strategy",
                    "tenantName",
                    "userIdAttribute",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getCustomDomain:getCustomDomain": {
            "description": "Data source to retrieve the custom domain configuration.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myCustomDomain = new auth0.CustomDomain(\"my_custom_domain\", {\n    domain: \"example.auth.tempdomain.com\",\n    type: \"auth0_managed_certs\",\n    tlsPolicy: \"recommended\",\n    domainMetadata: {\n        key1: \"value1\",\n        key2: \"value2\",\n    },\n});\nconst test = auth0.getCustomDomainOutput({\n    customDomainId: myCustomDomain.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_custom_domain = auth0.CustomDomain(\"my_custom_domain\",\n    domain=\"example.auth.tempdomain.com\",\n    type=\"auth0_managed_certs\",\n    tls_policy=\"recommended\",\n    domain_metadata={\n        \"key1\": \"value1\",\n        \"key2\": \"value2\",\n    })\ntest = auth0.get_custom_domain_output(custom_domain_id=my_custom_domain.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myCustomDomain = new Auth0.CustomDomain(\"my_custom_domain\", new()\n    {\n        Domain = \"example.auth.tempdomain.com\",\n        Type = \"auth0_managed_certs\",\n        TlsPolicy = \"recommended\",\n        DomainMetadata = \n        {\n            { \"key1\", \"value1\" },\n            { \"key2\", \"value2\" },\n        },\n    });\n\n    var test = Auth0.GetCustomDomain.Invoke(new()\n    {\n        CustomDomainId = myCustomDomain.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyCustomDomain, err := auth0.NewCustomDomain(ctx, \"my_custom_domain\", \u0026auth0.CustomDomainArgs{\n\t\t\tDomain:    pulumi.String(\"example.auth.tempdomain.com\"),\n\t\t\tType:      pulumi.String(\"auth0_managed_certs\"),\n\t\t\tTlsPolicy: pulumi.String(\"recommended\"),\n\t\t\tDomainMetadata: pulumi.StringMap{\n\t\t\t\t\"key1\": pulumi.String(\"value1\"),\n\t\t\t\t\"key2\": pulumi.String(\"value2\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_ = auth0.LookupCustomDomainOutput(ctx, auth0.GetCustomDomainOutputArgs{\n\t\t\tCustomDomainId: myCustomDomain.ID(),\n\t\t}, nil)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.CustomDomain;\nimport com.pulumi.auth0.CustomDomainArgs;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetCustomDomainArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myCustomDomain = new CustomDomain(\"myCustomDomain\", CustomDomainArgs.builder()\n            .domain(\"example.auth.tempdomain.com\")\n            .type(\"auth0_managed_certs\")\n            .tlsPolicy(\"recommended\")\n            .domainMetadata(Map.ofEntries(\n                Map.entry(\"key1\", \"value1\"),\n                Map.entry(\"key2\", \"value2\")\n            ))\n            .build());\n\n        final var test = Auth0Functions.getCustomDomain(GetCustomDomainArgs.builder()\n            .customDomainId(myCustomDomain.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myCustomDomain:\n    type: auth0:CustomDomain\n    name: my_custom_domain\n    properties:\n      domain: example.auth.tempdomain.com\n      type: auth0_managed_certs\n      tlsPolicy: recommended\n      domainMetadata:\n        key1: value1\n        key2: value2\nvariables:\n  test:\n    fn::invoke:\n      function: auth0:getCustomDomain\n      arguments:\n        customDomainId: ${myCustomDomain.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCustomDomain.\n",
                "properties": {
                    "customDomainId": {
                        "type": "string",
                        "description": "The ID of the Custom Domain.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getCustomDomain.\n",
                "properties": {
                    "certificates": {
                        "description": "The Custom Domain certificate.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getCustomDomainCertificate:getCustomDomainCertificate"
                        },
                        "type": "array"
                    },
                    "customClientIpHeader": {
                        "description": "The HTTP header to fetch the client's IP address. Cannot be set on\u003cspan pulumi-lang-nodejs=\" auth0Managed \" pulumi-lang-dotnet=\" Auth0Managed \" pulumi-lang-go=\" auth0Managed \" pulumi-lang-python=\" auth0_managed \" pulumi-lang-yaml=\" auth0Managed \" pulumi-lang-java=\" auth0Managed \"\u003e auth0_managed \u003c/span\u003edomains.\n",
                        "type": "string"
                    },
                    "customDomainId": {
                        "description": "The ID of the Custom Domain.\n",
                        "type": "string"
                    },
                    "domain": {
                        "description": "Name of the custom domain.\n",
                        "type": "string"
                    },
                    "domainMetadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata associated with the Custom Domain. Maximum of 10 metadata properties allowed.\n",
                        "type": "object"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "originDomainName": {
                        "description": "Once the configuration status is \u003cspan pulumi-lang-nodejs=\"`ready`\" pulumi-lang-dotnet=\"`Ready`\" pulumi-lang-go=\"`ready`\" pulumi-lang-python=\"`ready`\" pulumi-lang-yaml=\"`ready`\" pulumi-lang-java=\"`ready`\"\u003e`ready`\u003c/span\u003e, the DNS name of the Auth0 origin server that handles traffic for the custom domain.\n",
                        "type": "string"
                    },
                    "primary": {
                        "description": "Indicates whether this is a primary domain.\n",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "Configuration status for the custom domain. Options include \u003cspan pulumi-lang-nodejs=\"`disabled`\" pulumi-lang-dotnet=\"`Disabled`\" pulumi-lang-go=\"`disabled`\" pulumi-lang-python=\"`disabled`\" pulumi-lang-yaml=\"`disabled`\" pulumi-lang-java=\"`disabled`\"\u003e`disabled`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pending`\" pulumi-lang-dotnet=\"`Pending`\" pulumi-lang-go=\"`pending`\" pulumi-lang-python=\"`pending`\" pulumi-lang-yaml=\"`pending`\" pulumi-lang-java=\"`pending`\"\u003e`pending`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`pendingVerification`\" pulumi-lang-dotnet=\"`PendingVerification`\" pulumi-lang-go=\"`pendingVerification`\" pulumi-lang-python=\"`pending_verification`\" pulumi-lang-yaml=\"`pendingVerification`\" pulumi-lang-java=\"`pendingVerification`\"\u003e`pending_verification`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`ready`\" pulumi-lang-dotnet=\"`Ready`\" pulumi-lang-go=\"`ready`\" pulumi-lang-python=\"`ready`\" pulumi-lang-yaml=\"`ready`\" pulumi-lang-java=\"`ready`\"\u003e`ready`\u003c/span\u003e.\n",
                        "type": "string"
                    },
                    "tlsPolicy": {
                        "description": "TLS policy for the custom domain. Available options are: \u003cspan pulumi-lang-nodejs=\"`compatible`\" pulumi-lang-dotnet=\"`Compatible`\" pulumi-lang-go=\"`compatible`\" pulumi-lang-python=\"`compatible`\" pulumi-lang-yaml=\"`compatible`\" pulumi-lang-java=\"`compatible`\"\u003e`compatible`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`recommended`\" pulumi-lang-dotnet=\"`Recommended`\" pulumi-lang-go=\"`recommended`\" pulumi-lang-python=\"`recommended`\" pulumi-lang-yaml=\"`recommended`\" pulumi-lang-java=\"`recommended`\"\u003e`recommended`\u003c/span\u003e. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on\u003cspan pulumi-lang-nodejs=\" selfManaged \" pulumi-lang-dotnet=\" SelfManaged \" pulumi-lang-go=\" selfManaged \" pulumi-lang-python=\" self_managed \" pulumi-lang-yaml=\" selfManaged \" pulumi-lang-java=\" selfManaged \"\u003e self_managed \u003c/span\u003edomains.\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Provisioning type for the custom domain. Options include \u003cspan pulumi-lang-nodejs=\"`auth0ManagedCerts`\" pulumi-lang-dotnet=\"`Auth0ManagedCerts`\" pulumi-lang-go=\"`auth0ManagedCerts`\" pulumi-lang-python=\"`auth0_managed_certs`\" pulumi-lang-yaml=\"`auth0ManagedCerts`\" pulumi-lang-java=\"`auth0ManagedCerts`\"\u003e`auth0_managed_certs`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`selfManagedCerts`\" pulumi-lang-dotnet=\"`SelfManagedCerts`\" pulumi-lang-go=\"`selfManagedCerts`\" pulumi-lang-python=\"`self_managed_certs`\" pulumi-lang-yaml=\"`selfManagedCerts`\" pulumi-lang-java=\"`selfManagedCerts`\"\u003e`self_managed_certs`\u003c/span\u003e.\n",
                        "type": "string"
                    },
                    "verifications": {
                        "description": "Configuration settings for verification.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getCustomDomainVerification:getCustomDomainVerification"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "certificates",
                    "customClientIpHeader",
                    "domain",
                    "domainMetadata",
                    "originDomainName",
                    "primary",
                    "status",
                    "tlsPolicy",
                    "type",
                    "verifications",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getEventStream:getEventStream": {
            "description": "Data source to retrieve a specific Auth0 Event Stream by \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 Event Stream loaded using its ID.\nconst test = auth0.getEventStream({\n    id: \"est_XXXXXXXXXXXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 Event Stream loaded using its ID.\ntest = auth0.get_event_stream(id=\"est_XXXXXXXXXXXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 Event Stream loaded using its ID.\n    var test = Auth0.GetEventStream.Invoke(new()\n    {\n        Id = \"est_XXXXXXXXXXXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 Event Stream loaded using its ID.\n\t\t_, err := auth0.LookupEventStream(ctx, \u0026auth0.LookupEventStreamArgs{\n\t\t\tId: \"est_XXXXXXXXXXXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetEventStreamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 Event Stream loaded using its ID.\n        final var test = Auth0Functions.getEventStream(GetEventStreamArgs.builder()\n            .id(\"est_XXXXXXXXXXXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 Event Stream loaded using its ID.\n  test:\n    fn::invoke:\n      function: auth0:getEventStream\n      arguments:\n        id: est_XXXXXXXXXXXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getEventStream.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Event Stream.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEventStream.\n",
                "properties": {
                    "createdAt": {
                        "description": "The ISO 8601 timestamp when the stream was created.\n",
                        "type": "string"
                    },
                    "destinationType": {
                        "description": "The type of event stream destination (either 'eventbridge' or 'webhook').\n",
                        "type": "string"
                    },
                    "eventbridgeConfigurations": {
                        "description": "Configuration for the EventBridge destination. This block is only applicable when \u003cspan pulumi-lang-nodejs=\"`destinationType`\" pulumi-lang-dotnet=\"`DestinationType`\" pulumi-lang-go=\"`destinationType`\" pulumi-lang-python=\"`destination_type`\" pulumi-lang-yaml=\"`destinationType`\" pulumi-lang-java=\"`destinationType`\"\u003e`destination_type`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`eventbridge`\" pulumi-lang-dotnet=\"`Eventbridge`\" pulumi-lang-go=\"`eventbridge`\" pulumi-lang-python=\"`eventbridge`\" pulumi-lang-yaml=\"`eventbridge`\" pulumi-lang-java=\"`eventbridge`\"\u003e`eventbridge`\u003c/span\u003e. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getEventStreamEventbridgeConfiguration:getEventStreamEventbridgeConfiguration"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of the Event Stream.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the event stream.\n",
                        "type": "string"
                    },
                    "status": {
                        "description": "The current status of the event stream.\n",
                        "type": "string"
                    },
                    "subscriptions": {
                        "description": "List of event types this stream is subscribed to.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "updatedAt": {
                        "description": "The ISO 8601 timestamp when the stream was last updated.\n",
                        "type": "string"
                    },
                    "webhookConfigurations": {
                        "description": "Configuration for the Webhook destination. This block is only applicable when \u003cspan pulumi-lang-nodejs=\"`destinationType`\" pulumi-lang-dotnet=\"`DestinationType`\" pulumi-lang-go=\"`destinationType`\" pulumi-lang-python=\"`destination_type`\" pulumi-lang-yaml=\"`destinationType`\" pulumi-lang-java=\"`destinationType`\"\u003e`destination_type`\u003c/span\u003e is set to \u003cspan pulumi-lang-nodejs=\"`webhook`\" pulumi-lang-dotnet=\"`Webhook`\" pulumi-lang-go=\"`webhook`\" pulumi-lang-python=\"`webhook`\" pulumi-lang-yaml=\"`webhook`\" pulumi-lang-java=\"`webhook`\"\u003e`webhook`\u003c/span\u003e. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getEventStreamWebhookConfiguration:getEventStreamWebhookConfiguration"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "createdAt",
                    "destinationType",
                    "eventbridgeConfigurations",
                    "id",
                    "name",
                    "status",
                    "subscriptions",
                    "updatedAt",
                    "webhookConfigurations"
                ],
                "type": "object"
            }
        },
        "auth0:index/getFlow:getFlow": {
            "description": "Data source to retrieve a specific Auth0 Flow by \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 flow loaded using its ID.\nconst myFlowData = auth0.getFlow({\n    id: \"af_5CTYdsXHLoLXD7ZVwvFHew\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 flow loaded using its ID.\nmy_flow_data = auth0.get_flow(id=\"af_5CTYdsXHLoLXD7ZVwvFHew\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 flow loaded using its ID.\n    var myFlowData = Auth0.GetFlow.Invoke(new()\n    {\n        Id = \"af_5CTYdsXHLoLXD7ZVwvFHew\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 flow loaded using its ID.\n\t\t_, err := auth0.LookupFlow(ctx, \u0026auth0.LookupFlowArgs{\n\t\t\tId: \"af_5CTYdsXHLoLXD7ZVwvFHew\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetFlowArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 flow loaded using its ID.\n        final var myFlowData = Auth0Functions.getFlow(GetFlowArgs.builder()\n            .id(\"af_5CTYdsXHLoLXD7ZVwvFHew\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 flow loaded using its ID.\n  myFlowData:\n    fn::invoke:\n      function: auth0:getFlow\n      arguments:\n        id: af_5CTYdsXHLoLXD7ZVwvFHew\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFlow.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the Flow.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlow.\n",
                "properties": {
                    "actions": {
                        "description": "Actions of the flow.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The id of the Flow.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the flow.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "actions",
                    "id",
                    "name"
                ],
                "type": "object"
            }
        },
        "auth0:index/getFlowVaultConnection:getFlowVaultConnection": {
            "description": "Data source to retrieve a specific Auth0 Flow Vault Connection by \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 flow vault connection loaded using its ID.\nconst dataConnection = auth0.getFlowVaultConnection({\n    id: \"ac_9m2uqjHsqs19riN9N6sZQ7\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 flow vault connection loaded using its ID.\ndata_connection = auth0.get_flow_vault_connection(id=\"ac_9m2uqjHsqs19riN9N6sZQ7\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 flow vault connection loaded using its ID.\n    var dataConnection = Auth0.GetFlowVaultConnection.Invoke(new()\n    {\n        Id = \"ac_9m2uqjHsqs19riN9N6sZQ7\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 flow vault connection loaded using its ID.\n\t\t_, err := auth0.LookupFlowVaultConnection(ctx, \u0026auth0.LookupFlowVaultConnectionArgs{\n\t\t\tId: \"ac_9m2uqjHsqs19riN9N6sZQ7\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetFlowVaultConnectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 flow vault connection loaded using its ID.\n        final var dataConnection = Auth0Functions.getFlowVaultConnection(GetFlowVaultConnectionArgs.builder()\n            .id(\"ac_9m2uqjHsqs19riN9N6sZQ7\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 flow vault connection loaded using its ID.\n  dataConnection:\n    fn::invoke:\n      function: auth0:getFlowVaultConnection\n      arguments:\n        id: ac_9m2uqjHsqs19riN9N6sZQ7\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFlowVaultConnection.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the Flow Vault Connection.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlowVaultConnection.\n",
                "properties": {
                    "accountName": {
                        "description": "Custom account name of the vault connection.\n",
                        "type": "string"
                    },
                    "appId": {
                        "description": "App identifier of the vault connection.\n",
                        "type": "string"
                    },
                    "environment": {
                        "description": "Environment of the vault connection.\n",
                        "type": "string"
                    },
                    "fingerprint": {
                        "description": "Fingerprint of the vault connection.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The id of the Flow Vault Connection.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the vault connection.\n",
                        "type": "string"
                    },
                    "ready": {
                        "description": "Indicates if the vault connection is configured.\n",
                        "type": "boolean"
                    },
                    "setup": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Configuration of the vault connection. (Mapping information must be provided as key/value pairs)\n",
                        "type": "object"
                    }
                },
                "required": [
                    "accountName",
                    "appId",
                    "environment",
                    "fingerprint",
                    "id",
                    "name",
                    "ready",
                    "setup"
                ],
                "type": "object"
            }
        },
        "auth0:index/getForm:getForm": {
            "description": "Data source to retrieve a specific Auth0 Form by \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 form loaded using its ID.\nconst myFormData = auth0.getForm({\n    id: \"ap_31LxRJphZF1Kqzf2zBgmgA\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 form loaded using its ID.\nmy_form_data = auth0.get_form(id=\"ap_31LxRJphZF1Kqzf2zBgmgA\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 form loaded using its ID.\n    var myFormData = Auth0.GetForm.Invoke(new()\n    {\n        Id = \"ap_31LxRJphZF1Kqzf2zBgmgA\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 form loaded using its ID.\n\t\t_, err := auth0.LookupForm(ctx, \u0026auth0.LookupFormArgs{\n\t\t\tId: \"ap_31LxRJphZF1Kqzf2zBgmgA\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetFormArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 form loaded using its ID.\n        final var myFormData = Auth0Functions.getForm(GetFormArgs.builder()\n            .id(\"ap_31LxRJphZF1Kqzf2zBgmgA\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 form loaded using its ID.\n  myFormData:\n    fn::invoke:\n      function: auth0:getForm\n      arguments:\n        id: ap_31LxRJphZF1Kqzf2zBgmgA\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getForm.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the Form.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getForm.\n",
                "properties": {
                    "ending": {
                        "description": "Submission configuration of the form. (JSON encoded)\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The id of the Form.\n",
                        "type": "string"
                    },
                    "languages": {
                        "description": "Language specific configuration for the form.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getFormLanguage:getFormLanguage"
                        },
                        "type": "array"
                    },
                    "messages": {
                        "description": "Message specific configuration for the form.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getFormMessage:getFormMessage"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "Name of the form.\n",
                        "type": "string"
                    },
                    "nodes": {
                        "description": "Nodes of the form. (JSON encoded)\n",
                        "type": "string"
                    },
                    "start": {
                        "description": "Input setup of the form. (JSON encoded)\n",
                        "type": "string"
                    },
                    "style": {
                        "description": "Style specific configuration for the form. (JSON encoded)\n",
                        "type": "string"
                    },
                    "translations": {
                        "description": "Translations of the form. (JSON encoded)\n",
                        "type": "string"
                    }
                },
                "required": [
                    "ending",
                    "id",
                    "languages",
                    "messages",
                    "name",
                    "nodes",
                    "start",
                    "style",
                    "translations"
                ],
                "type": "object"
            }
        },
        "auth0:index/getNetworkAcl:getNetworkAcl": {
            "description": "Data source to retrieve a specific Auth0 Network ACL by ID.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 network acl loaded using its ID.\nconst myNetworkAcl = auth0.getNetworkAcl({\n    id: \"167f9a50-4444-3333-1111-ndfdaf953ab4\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 network acl loaded using its ID.\nmy_network_acl = auth0.get_network_acl(id=\"167f9a50-4444-3333-1111-ndfdaf953ab4\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 network acl loaded using its ID.\n    var myNetworkAcl = Auth0.GetNetworkAcl.Invoke(new()\n    {\n        Id = \"167f9a50-4444-3333-1111-ndfdaf953ab4\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 network acl loaded using its ID.\n\t\t_, err := auth0.LookupNetworkAcl(ctx, \u0026auth0.LookupNetworkAclArgs{\n\t\t\tId: \"167f9a50-4444-3333-1111-ndfdaf953ab4\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetNetworkAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 network acl loaded using its ID.\n        final var myNetworkAcl = Auth0Functions.getNetworkAcl(GetNetworkAclArgs.builder()\n            .id(\"167f9a50-4444-3333-1111-ndfdaf953ab4\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 network acl loaded using its ID.\n  myNetworkAcl:\n    fn::invoke:\n      function: auth0:getNetworkAcl\n      arguments:\n        id: 167f9a50-4444-3333-1111-ndfdaf953ab4\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkAcl.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Network ACL.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkAcl.\n",
                "properties": {
                    "active": {
                        "description": "Whether the Network ACL is active\n",
                        "type": "boolean"
                    },
                    "description": {
                        "description": "The description of the Network ACL\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the Network ACL.\n",
                        "type": "string"
                    },
                    "priority": {
                        "description": "The priority of the Network ACL. Must be unique between 1 and 10.\n",
                        "type": "integer"
                    },
                    "rules": {
                        "description": "The rule of the Network ACL\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getNetworkAclRule:getNetworkAclRule"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "active",
                    "description",
                    "id",
                    "priority",
                    "rules"
                ],
                "type": "object"
            }
        },
        "auth0:index/getOrganization:getOrganization": {
            "description": "Data source to retrieve a specific Auth0 organization by \u003cspan pulumi-lang-nodejs=\"`organizationId`\" pulumi-lang-dotnet=\"`OrganizationId`\" pulumi-lang-go=\"`organizationId`\" pulumi-lang-python=\"`organization_id`\" pulumi-lang-yaml=\"`organizationId`\" pulumi-lang-java=\"`organizationId`\"\u003e`organization_id`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 Organization loaded using its name.\nconst some_organization_by_name = auth0.getOrganization({\n    name: \"my-org\",\n});\n// An Auth0 Organization loaded using its ID.\nconst some_organization_by_id = auth0.getOrganization({\n    organizationId: \"org_abcdefghkijklmnopqrstuvwxyz0123456789\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 Organization loaded using its name.\nsome_organization_by_name = auth0.get_organization(name=\"my-org\")\n# An Auth0 Organization loaded using its ID.\nsome_organization_by_id = auth0.get_organization(organization_id=\"org_abcdefghkijklmnopqrstuvwxyz0123456789\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 Organization loaded using its name.\n    var some_organization_by_name = Auth0.GetOrganization.Invoke(new()\n    {\n        Name = \"my-org\",\n    });\n\n    // An Auth0 Organization loaded using its ID.\n    var some_organization_by_id = Auth0.GetOrganization.Invoke(new()\n    {\n        OrganizationId = \"org_abcdefghkijklmnopqrstuvwxyz0123456789\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 Organization loaded using its name.\n\t\t_, err := auth0.LookupOrganization(ctx, \u0026auth0.LookupOrganizationArgs{\n\t\t\tName: pulumi.StringRef(\"my-org\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// An Auth0 Organization loaded using its ID.\n\t\t_, err = auth0.LookupOrganization(ctx, \u0026auth0.LookupOrganizationArgs{\n\t\t\tOrganizationId: pulumi.StringRef(\"org_abcdefghkijklmnopqrstuvwxyz0123456789\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetOrganizationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 Organization loaded using its name.\n        final var some-organization-by-name = Auth0Functions.getOrganization(GetOrganizationArgs.builder()\n            .name(\"my-org\")\n            .build());\n\n        // An Auth0 Organization loaded using its ID.\n        final var some-organization-by-id = Auth0Functions.getOrganization(GetOrganizationArgs.builder()\n            .organizationId(\"org_abcdefghkijklmnopqrstuvwxyz0123456789\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 Organization loaded using its name.\n  some-organization-by-name:\n    fn::invoke:\n      function: auth0:getOrganization\n      arguments:\n        name: my-org\n  # An Auth0 Organization loaded using its ID.\n  some-organization-by-id:\n    fn::invoke:\n      function: auth0:getOrganization\n      arguments:\n        organizationId: org_abcdefghkijklmnopqrstuvwxyz0123456789\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOrganization.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the organization. If not provided, \u003cspan pulumi-lang-nodejs=\"`organizationId`\" pulumi-lang-dotnet=\"`OrganizationId`\" pulumi-lang-go=\"`organizationId`\" pulumi-lang-python=\"`organization_id`\" pulumi-lang-yaml=\"`organizationId`\" pulumi-lang-java=\"`organizationId`\"\u003e`organization_id`\u003c/span\u003e must be set. For performance, it is advised to use the \u003cspan pulumi-lang-nodejs=\"`organizationId`\" pulumi-lang-dotnet=\"`OrganizationId`\" pulumi-lang-go=\"`organizationId`\" pulumi-lang-python=\"`organization_id`\" pulumi-lang-yaml=\"`organizationId`\" pulumi-lang-java=\"`organizationId`\"\u003e`organization_id`\u003c/span\u003e as a lookup if possible.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getOrganization.\n",
                "properties": {
                    "brandings": {
                        "description": "Defines how to style the login pages.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getOrganizationBranding:getOrganizationBranding"
                        },
                        "type": "array"
                    },
                    "clientGrants": {
                        "description": "Client Grant ID(s) that are associated to the organization.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "connections": {
                        "items": {
                            "$ref": "#/types/auth0:index/getOrganizationConnection:getOrganizationConnection"
                        },
                        "type": "array"
                    },
                    "displayName": {
                        "description": "Friendly name of this organization.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "members": {
                        "description": "User ID(s) that are members of the organization.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "metadata": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata associated with the organization. Maximum of 10 metadata properties allowed.\n",
                        "type": "object"
                    },
                    "name": {
                        "description": "The name of the organization. If not provided, \u003cspan pulumi-lang-nodejs=\"`organizationId`\" pulumi-lang-dotnet=\"`OrganizationId`\" pulumi-lang-go=\"`organizationId`\" pulumi-lang-python=\"`organization_id`\" pulumi-lang-yaml=\"`organizationId`\" pulumi-lang-java=\"`organizationId`\"\u003e`organization_id`\u003c/span\u003e must be set. For performance, it is advised to use the \u003cspan pulumi-lang-nodejs=\"`organizationId`\" pulumi-lang-dotnet=\"`OrganizationId`\" pulumi-lang-go=\"`organizationId`\" pulumi-lang-python=\"`organization_id`\" pulumi-lang-yaml=\"`organizationId`\" pulumi-lang-java=\"`organizationId`\"\u003e`organization_id`\u003c/span\u003e as a lookup if possible.\n",
                        "type": "string"
                    },
                    "organizationId": {
                        "description": "The ID of the organization. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "tokenQuotas": {
                        "description": "The token quota configuration.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getOrganizationTokenQuota:getOrganizationTokenQuota"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "brandings",
                    "clientGrants",
                    "connections",
                    "displayName",
                    "members",
                    "metadata",
                    "tokenQuotas",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getOutboundIps:getOutboundIps": {
            "description": "Use this data source to retrieve Auth0's outbound IP ranges for allowlisting purposes.\n\n",
            "outputs": {
                "description": "A collection of values returned by getOutboundIps.\n",
                "properties": {
                    "changelogs": {
                        "description": "List of recent changes to IP ranges.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getOutboundIpsChangelog:getOutboundIpsChangelog"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The ID of this resource.\n",
                        "type": "string"
                    },
                    "lastUpdatedAt": {
                        "description": "RFC3339 timestamp when the IP ranges were last updated.\n",
                        "type": "string"
                    },
                    "regions": {
                        "description": "A list of regions and their corresponding IP CIDR blocks.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getOutboundIpsRegion:getOutboundIpsRegion"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "changelogs",
                    "id",
                    "lastUpdatedAt",
                    "regions"
                ],
                "type": "object"
            }
        },
        "auth0:index/getPages:getPages": {
            "description": "Use this data source to access the HTML for the login, reset password, multi-factor authentication and error pages.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myPages = auth0.getPages({});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_pages = auth0.get_pages()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myPages = Auth0.GetPages.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.LookupPages(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myPages = Auth0Functions.getPages(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);\n\n    }\n}\n```\n```yaml\nvariables:\n  myPages:\n    fn::invoke:\n      function: auth0:getPages\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getPages.\n",
                "properties": {
                    "changePasswords": {
                        "description": "Configuration settings for customizing the Password Reset page.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getPagesChangePassword:getPagesChangePassword"
                        },
                        "type": "array"
                    },
                    "errors": {
                        "description": "Configuration settings for the Error pages.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getPagesError:getPagesError"
                        },
                        "type": "array"
                    },
                    "guardianMfas": {
                        "description": "Configuration settings for customizing the Guardian Multi-Factor Authentication page.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getPagesGuardianMfa:getPagesGuardianMfa"
                        },
                        "type": "array"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "logins": {
                        "description": "Configuration settings for customizing the Login page.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getPagesLogin:getPagesLogin"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "changePasswords",
                    "errors",
                    "guardianMfas",
                    "logins",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getPhoneProvider:getPhoneProvider": {
            "description": "Data source to retrieve a specific Auth0 Phone Provider by \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPhoneProvider.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Phone Provider.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPhoneProvider.\n",
                "properties": {
                    "channel": {
                        "description": "The channel of the phone provider.\n",
                        "type": "string"
                    },
                    "configurations": {
                        "description": "Specific phone provider settings.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getPhoneProviderConfiguration:getPhoneProviderConfiguration"
                        },
                        "type": "array"
                    },
                    "credentials": {
                        "description": "Provider credentials required to use authenticate to the provider.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getPhoneProviderCredential:getPhoneProviderCredential"
                        },
                        "type": "array"
                    },
                    "disabled": {
                        "description": "Indicates whether the phone provider is enabled (false) or disabled (true).\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The ID of the Phone Provider.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the phone provider. Options include \u003cspan pulumi-lang-nodejs=\"`twilio`\" pulumi-lang-dotnet=\"`Twilio`\" pulumi-lang-go=\"`twilio`\" pulumi-lang-python=\"`twilio`\" pulumi-lang-yaml=\"`twilio`\" pulumi-lang-java=\"`twilio`\"\u003e`twilio`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`custom`\" pulumi-lang-dotnet=\"`Custom`\" pulumi-lang-go=\"`custom`\" pulumi-lang-python=\"`custom`\" pulumi-lang-yaml=\"`custom`\" pulumi-lang-java=\"`custom`\"\u003e`custom`\u003c/span\u003e.\n",
                        "type": "string"
                    },
                    "tenant": {
                        "description": "The tenant of the phone provider.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "channel",
                    "configurations",
                    "credentials",
                    "disabled",
                    "id",
                    "name",
                    "tenant"
                ],
                "type": "object"
            }
        },
        "auth0:index/getPromptScreenPartials:getPromptScreenPartials": {
            "description": "Data source to retrieve a specific Auth0 prompt screen partials by \u003cspan pulumi-lang-nodejs=\"`promptType`\" pulumi-lang-dotnet=\"`PromptType`\" pulumi-lang-go=\"`promptType`\" pulumi-lang-python=\"`prompt_type`\" pulumi-lang-yaml=\"`promptType`\" pulumi-lang-java=\"`promptType`\"\u003e`prompt_type`\u003c/span\u003e.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst promptScreenPartials = auth0.getPromptScreenPartials({\n    promptType: \"prompt-name\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nprompt_screen_partials = auth0.get_prompt_screen_partials(prompt_type=\"prompt-name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var promptScreenPartials = Auth0.GetPromptScreenPartials.Invoke(new()\n    {\n        PromptType = \"prompt-name\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.LookupPromptScreenPartials(ctx, \u0026auth0.LookupPromptScreenPartialsArgs{\n\t\t\tPromptType: \"prompt-name\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetPromptScreenPartialsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var promptScreenPartials = Auth0Functions.getPromptScreenPartials(GetPromptScreenPartialsArgs.builder()\n            .promptType(\"prompt-name\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  promptScreenPartials:\n    fn::invoke:\n      function: auth0:getPromptScreenPartials\n      arguments:\n        promptType: prompt-name\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPromptScreenPartials.\n",
                "properties": {
                    "promptType": {
                        "type": "string",
                        "description": "The type of prompt to customize.\n"
                    },
                    "screenPartials": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/getPromptScreenPartialsScreenPartial:getPromptScreenPartialsScreenPartial"
                        },
                        "description": "The screen partials associated with the prompt type.\n"
                    }
                },
                "type": "object",
                "required": [
                    "promptType"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPromptScreenPartials.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "promptType": {
                        "description": "The type of prompt to customize.\n",
                        "type": "string"
                    },
                    "screenPartials": {
                        "description": "The screen partials associated with the prompt type.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getPromptScreenPartialsScreenPartial:getPromptScreenPartialsScreenPartial"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "promptType",
                    "screenPartials",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getPromptScreenRenderer:getPromptScreenRenderer": {
            "description": "Data source to retrieve a specific Auth0 prompt screen settings by \u003cspan pulumi-lang-nodejs=\"`promptType`\" pulumi-lang-dotnet=\"`PromptType`\" pulumi-lang-go=\"`promptType`\" pulumi-lang-python=\"`prompt_type`\" pulumi-lang-yaml=\"`promptType`\" pulumi-lang-java=\"`promptType`\"\u003e`prompt_type`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`screenName`\" pulumi-lang-dotnet=\"`ScreenName`\" pulumi-lang-go=\"`screenName`\" pulumi-lang-python=\"`screen_name`\" pulumi-lang-yaml=\"`screenName`\" pulumi-lang-java=\"`screenName`\"\u003e`screen_name`\u003c/span\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPromptScreenRenderer.\n",
                "properties": {
                    "promptType": {
                        "type": "string",
                        "description": "The type of prompt to customize.\n"
                    },
                    "screenName": {
                        "type": "string",
                        "description": "The screen name associated with the prompt type.\n"
                    }
                },
                "type": "object",
                "required": [
                    "promptType",
                    "screenName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPromptScreenRenderer.\n",
                "properties": {
                    "contextConfigurations": {
                        "description": "Context values to make available\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "defaultHeadTagsDisabled": {
                        "description": "Override Universal Login default head tags\n",
                        "type": "boolean"
                    },
                    "filters": {
                        "description": "Optional filters to apply rendering rules to specific entities. \u003cspan pulumi-lang-nodejs=\"`matchType`\" pulumi-lang-dotnet=\"`MatchType`\" pulumi-lang-go=\"`matchType`\" pulumi-lang-python=\"`match_type`\" pulumi-lang-yaml=\"`matchType`\" pulumi-lang-java=\"`matchType`\"\u003e`match_type`\u003c/span\u003e and at least one of the entity arrays are required.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getPromptScreenRendererFilter:getPromptScreenRendererFilter"
                        },
                        "type": "array"
                    },
                    "headTags": {
                        "description": "An array of head tags\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "promptType": {
                        "description": "The type of prompt to customize.\n",
                        "type": "string"
                    },
                    "renderingMode": {
                        "description": "Rendering modeOptions are: \u003cspan pulumi-lang-nodejs=\"`standard`\" pulumi-lang-dotnet=\"`Standard`\" pulumi-lang-go=\"`standard`\" pulumi-lang-python=\"`standard`\" pulumi-lang-yaml=\"`standard`\" pulumi-lang-java=\"`standard`\"\u003e`standard`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`advanced`\" pulumi-lang-dotnet=\"`Advanced`\" pulumi-lang-go=\"`advanced`\" pulumi-lang-python=\"`advanced`\" pulumi-lang-yaml=\"`advanced`\" pulumi-lang-java=\"`advanced`\"\u003e`advanced`\u003c/span\u003e.\n",
                        "type": "string"
                    },
                    "screenName": {
                        "description": "The screen name associated with the prompt type.\n",
                        "type": "string"
                    },
                    "tenant": {
                        "description": "Tenant ID\n",
                        "type": "string"
                    },
                    "usePageTemplate": {
                        "description": "Use page template with ACUL\n",
                        "type": "boolean"
                    }
                },
                "required": [
                    "contextConfigurations",
                    "defaultHeadTagsDisabled",
                    "filters",
                    "headTags",
                    "promptType",
                    "renderingMode",
                    "screenName",
                    "tenant",
                    "usePageTemplate",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getResourceServer:getResourceServer": {
            "description": "Data source to retrieve a specific Auth0 resource server by \u003cspan pulumi-lang-nodejs=\"`resourceServerId`\" pulumi-lang-dotnet=\"`ResourceServerId`\" pulumi-lang-go=\"`resourceServerId`\" pulumi-lang-python=\"`resource_server_id`\" pulumi-lang-yaml=\"`resourceServerId`\" pulumi-lang-java=\"`resourceServerId`\"\u003e`resource_server_id`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`identifier`\" pulumi-lang-dotnet=\"`Identifier`\" pulumi-lang-go=\"`identifier`\" pulumi-lang-python=\"`identifier`\" pulumi-lang-yaml=\"`identifier`\" pulumi-lang-java=\"`identifier`\"\u003e`identifier`\u003c/span\u003e.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 Resource Server loaded using its identifier.\nconst some_resource_server_by_identifier = auth0.getResourceServer({\n    identifier: \"https://my-api.com/v1\",\n});\n// An Auth0 Resource Server loaded using its ID.\nconst some_resource_server_by_id = auth0.getResourceServer({\n    resourceServerId: \"abcdefghkijklmnopqrstuvwxyz0123456789\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 Resource Server loaded using its identifier.\nsome_resource_server_by_identifier = auth0.get_resource_server(identifier=\"https://my-api.com/v1\")\n# An Auth0 Resource Server loaded using its ID.\nsome_resource_server_by_id = auth0.get_resource_server(resource_server_id=\"abcdefghkijklmnopqrstuvwxyz0123456789\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 Resource Server loaded using its identifier.\n    var some_resource_server_by_identifier = Auth0.GetResourceServer.Invoke(new()\n    {\n        Identifier = \"https://my-api.com/v1\",\n    });\n\n    // An Auth0 Resource Server loaded using its ID.\n    var some_resource_server_by_id = Auth0.GetResourceServer.Invoke(new()\n    {\n        ResourceServerId = \"abcdefghkijklmnopqrstuvwxyz0123456789\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 Resource Server loaded using its identifier.\n\t\t_, err := auth0.LookupResourceServer(ctx, \u0026auth0.LookupResourceServerArgs{\n\t\t\tIdentifier: pulumi.StringRef(\"https://my-api.com/v1\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// An Auth0 Resource Server loaded using its ID.\n\t\t_, err = auth0.LookupResourceServer(ctx, \u0026auth0.LookupResourceServerArgs{\n\t\t\tResourceServerId: pulumi.StringRef(\"abcdefghkijklmnopqrstuvwxyz0123456789\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetResourceServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 Resource Server loaded using its identifier.\n        final var some-resource-server-by-identifier = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()\n            .identifier(\"https://my-api.com/v1\")\n            .build());\n\n        // An Auth0 Resource Server loaded using its ID.\n        final var some-resource-server-by-id = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()\n            .resourceServerId(\"abcdefghkijklmnopqrstuvwxyz0123456789\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 Resource Server loaded using its identifier.\n  some-resource-server-by-identifier:\n    fn::invoke:\n      function: auth0:getResourceServer\n      arguments:\n        identifier: https://my-api.com/v1\n  # An Auth0 Resource Server loaded using its ID.\n  some-resource-server-by-id:\n    fn::invoke:\n      function: auth0:getResourceServer\n      arguments:\n        resourceServerId: abcdefghkijklmnopqrstuvwxyz0123456789\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getResourceServer.\n",
                "properties": {
                    "identifier": {
                        "type": "string",
                        "description": "Unique identifier for the resource server. Used as the audience parameter for authorization calls. If not provided, \u003cspan pulumi-lang-nodejs=\"`resourceServerId`\" pulumi-lang-dotnet=\"`ResourceServerId`\" pulumi-lang-go=\"`resourceServerId`\" pulumi-lang-python=\"`resource_server_id`\" pulumi-lang-yaml=\"`resourceServerId`\" pulumi-lang-java=\"`resourceServerId`\"\u003e`resource_server_id`\u003c/span\u003e must be set.\n"
                    },
                    "resourceServerId": {
                        "type": "string",
                        "description": "The ID of the resource server. If not provided, \u003cspan pulumi-lang-nodejs=\"`identifier`\" pulumi-lang-dotnet=\"`Identifier`\" pulumi-lang-go=\"`identifier`\" pulumi-lang-python=\"`identifier`\" pulumi-lang-yaml=\"`identifier`\" pulumi-lang-java=\"`identifier`\"\u003e`identifier`\u003c/span\u003e must be set.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getResourceServer.\n",
                "properties": {
                    "allowOfflineAccess": {
                        "description": "Indicates whether refresh tokens can be issued for this resource server.\n",
                        "type": "boolean"
                    },
                    "authorizationDetails": {
                        "description": "Authorization details for this resource server.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getResourceServerAuthorizationDetail:getResourceServerAuthorizationDetail"
                        },
                        "type": "array"
                    },
                    "clientId": {
                        "description": "The ID of the client associated with this resource server. If a client has been created and linked to this resource server, this field will be populated with that client's ID.\n",
                        "type": "string"
                    },
                    "consentPolicy": {
                        "description": "Consent policy for this resource server. Options include `transactional-authorization-with-mfa`, or \u003cspan pulumi-lang-nodejs=\"`null`\" pulumi-lang-dotnet=\"`Null`\" pulumi-lang-go=\"`null`\" pulumi-lang-python=\"`null`\" pulumi-lang-yaml=\"`null`\" pulumi-lang-java=\"`null`\"\u003e`null`\u003c/span\u003e to disable.\n",
                        "type": "string"
                    },
                    "enforcePolicies": {
                        "description": "If this setting is enabled, RBAC authorization policies will be enforced for this API. Role and permission assignments will be evaluated during the login transaction.\n",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "Unique identifier for the resource server. Used as the audience parameter for authorization calls. If not provided, \u003cspan pulumi-lang-nodejs=\"`resourceServerId`\" pulumi-lang-dotnet=\"`ResourceServerId`\" pulumi-lang-go=\"`resourceServerId`\" pulumi-lang-python=\"`resource_server_id`\" pulumi-lang-yaml=\"`resourceServerId`\" pulumi-lang-java=\"`resourceServerId`\"\u003e`resource_server_id`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Friendly name for the resource server. Cannot include `\u003c` or `\u003e` characters.\n",
                        "type": "string"
                    },
                    "proofOfPossessions": {
                        "description": "Configuration settings for proof-of-possession for this resource server.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getResourceServerProofOfPossession:getResourceServerProofOfPossession"
                        },
                        "type": "array"
                    },
                    "resourceServerId": {
                        "description": "The ID of the resource server. If not provided, \u003cspan pulumi-lang-nodejs=\"`identifier`\" pulumi-lang-dotnet=\"`Identifier`\" pulumi-lang-go=\"`identifier`\" pulumi-lang-python=\"`identifier`\" pulumi-lang-yaml=\"`identifier`\" pulumi-lang-java=\"`identifier`\"\u003e`identifier`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "scopes": {
                        "description": "List of permissions (scopes) used by this resource server.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getResourceServerScope:getResourceServerScope"
                        },
                        "type": "array"
                    },
                    "signingAlg": {
                        "description": "Algorithm used to sign JWTs. Options include `HS256`, `RS256`, and `PS256`.\n",
                        "type": "string"
                    },
                    "signingSecret": {
                        "description": "Secret used to sign tokens when using symmetric algorithms (HS256).\n",
                        "type": "string"
                    },
                    "skipConsentForVerifiableFirstPartyClients": {
                        "description": "Indicates whether to skip user consent for applications flagged as first party.\n",
                        "type": "boolean"
                    },
                    "subjectTypeAuthorizations": {
                        "description": "Authorization policies for user and client flows.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getResourceServerSubjectTypeAuthorization:getResourceServerSubjectTypeAuthorization"
                        },
                        "type": "array"
                    },
                    "tokenDialect": {
                        "description": "Dialect of access tokens that should be issued for this resource server. Options include \u003cspan pulumi-lang-nodejs=\"`accessToken`\" pulumi-lang-dotnet=\"`AccessToken`\" pulumi-lang-go=\"`accessToken`\" pulumi-lang-python=\"`access_token`\" pulumi-lang-yaml=\"`accessToken`\" pulumi-lang-java=\"`accessToken`\"\u003e`access_token`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`rfc9068Profile`\" pulumi-lang-dotnet=\"`Rfc9068Profile`\" pulumi-lang-go=\"`rfc9068Profile`\" pulumi-lang-python=\"`rfc9068_profile`\" pulumi-lang-yaml=\"`rfc9068Profile`\" pulumi-lang-java=\"`rfc9068Profile`\"\u003e`rfc9068_profile`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`accessTokenAuthz`\" pulumi-lang-dotnet=\"`AccessTokenAuthz`\" pulumi-lang-go=\"`accessTokenAuthz`\" pulumi-lang-python=\"`access_token_authz`\" pulumi-lang-yaml=\"`accessTokenAuthz`\" pulumi-lang-java=\"`accessTokenAuthz`\"\u003e`access_token_authz`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`rfc9068ProfileAuthz`\" pulumi-lang-dotnet=\"`Rfc9068ProfileAuthz`\" pulumi-lang-go=\"`rfc9068ProfileAuthz`\" pulumi-lang-python=\"`rfc9068_profile_authz`\" pulumi-lang-yaml=\"`rfc9068ProfileAuthz`\" pulumi-lang-java=\"`rfc9068ProfileAuthz`\"\u003e`rfc9068_profile_authz`\u003c/span\u003e. \u003cspan pulumi-lang-nodejs=\"`accessToken`\" pulumi-lang-dotnet=\"`AccessToken`\" pulumi-lang-go=\"`accessToken`\" pulumi-lang-python=\"`access_token`\" pulumi-lang-yaml=\"`accessToken`\" pulumi-lang-java=\"`accessToken`\"\u003e`access_token`\u003c/span\u003e is a JWT containing standard Auth0 claims. \u003cspan pulumi-lang-nodejs=\"`rfc9068Profile`\" pulumi-lang-dotnet=\"`Rfc9068Profile`\" pulumi-lang-go=\"`rfc9068Profile`\" pulumi-lang-python=\"`rfc9068_profile`\" pulumi-lang-yaml=\"`rfc9068Profile`\" pulumi-lang-java=\"`rfc9068Profile`\"\u003e`rfc9068_profile`\u003c/span\u003e is a JWT conforming to the IETF JWT Access Token Profile. \u003cspan pulumi-lang-nodejs=\"`accessTokenAuthz`\" pulumi-lang-dotnet=\"`AccessTokenAuthz`\" pulumi-lang-go=\"`accessTokenAuthz`\" pulumi-lang-python=\"`access_token_authz`\" pulumi-lang-yaml=\"`accessTokenAuthz`\" pulumi-lang-java=\"`accessTokenAuthz`\"\u003e`access_token_authz`\u003c/span\u003e is a JWT containing standard Auth0 claims, including RBAC permissions claims. \u003cspan pulumi-lang-nodejs=\"`rfc9068ProfileAuthz`\" pulumi-lang-dotnet=\"`Rfc9068ProfileAuthz`\" pulumi-lang-go=\"`rfc9068ProfileAuthz`\" pulumi-lang-python=\"`rfc9068_profile_authz`\" pulumi-lang-yaml=\"`rfc9068ProfileAuthz`\" pulumi-lang-java=\"`rfc9068ProfileAuthz`\"\u003e`rfc9068_profile_authz`\u003c/span\u003e is a JWT conforming to the IETF JWT Access Token Profile, including RBAC permissions claims. RBAC permissions claims are available if RBAC (\u003cspan pulumi-lang-nodejs=\"`enforcePolicies`\" pulumi-lang-dotnet=\"`EnforcePolicies`\" pulumi-lang-go=\"`enforcePolicies`\" pulumi-lang-python=\"`enforce_policies`\" pulumi-lang-yaml=\"`enforcePolicies`\" pulumi-lang-java=\"`enforcePolicies`\"\u003e`enforce_policies`\u003c/span\u003e) is enabled for this API. For more details, refer to [Access Token Profiles](https://auth0.com/docs/secure/tokens/access-tokens/access-token-profiles).\n",
                        "type": "string"
                    },
                    "tokenEncryptions": {
                        "description": "Configuration for JSON Web Encryption(JWE) of tokens for this resource server.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getResourceServerTokenEncryption:getResourceServerTokenEncryption"
                        },
                        "type": "array"
                    },
                    "tokenLifetime": {
                        "description": "Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.\n",
                        "type": "integer"
                    },
                    "tokenLifetimeForWeb": {
                        "description": "Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the \u003cspan pulumi-lang-nodejs=\"`tokenLifetime`\" pulumi-lang-dotnet=\"`TokenLifetime`\" pulumi-lang-go=\"`tokenLifetime`\" pulumi-lang-python=\"`token_lifetime`\" pulumi-lang-yaml=\"`tokenLifetime`\" pulumi-lang-java=\"`tokenLifetime`\"\u003e`token_lifetime`\u003c/span\u003e value.\n",
                        "type": "integer"
                    },
                    "verificationLocation": {
                        "description": "URL from which to retrieve JWKs for this resource server. Used for verifying the JWT sent to Auth0 for token introspection.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "allowOfflineAccess",
                    "authorizationDetails",
                    "clientId",
                    "consentPolicy",
                    "enforcePolicies",
                    "name",
                    "proofOfPossessions",
                    "scopes",
                    "signingAlg",
                    "signingSecret",
                    "skipConsentForVerifiableFirstPartyClients",
                    "subjectTypeAuthorizations",
                    "tokenDialect",
                    "tokenEncryptions",
                    "tokenLifetime",
                    "tokenLifetimeForWeb",
                    "verificationLocation",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getRole:getRole": {
            "description": "Data source to retrieve a specific Auth0 role by \u003cspan pulumi-lang-nodejs=\"`roleId`\" pulumi-lang-dotnet=\"`RoleId`\" pulumi-lang-go=\"`roleId`\" pulumi-lang-python=\"`role_id`\" pulumi-lang-yaml=\"`roleId`\" pulumi-lang-java=\"`roleId`\"\u003e`role_id`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 Role loaded using its name.\nconst some_role_by_name = auth0.getRole({\n    name: \"my-role\",\n});\n// An Auth0 Role loaded using its ID.\nconst some_role_by_id = auth0.getRole({\n    roleId: \"abcdefghkijklmnopqrstuvwxyz0123456789\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 Role loaded using its name.\nsome_role_by_name = auth0.get_role(name=\"my-role\")\n# An Auth0 Role loaded using its ID.\nsome_role_by_id = auth0.get_role(role_id=\"abcdefghkijklmnopqrstuvwxyz0123456789\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 Role loaded using its name.\n    var some_role_by_name = Auth0.GetRole.Invoke(new()\n    {\n        Name = \"my-role\",\n    });\n\n    // An Auth0 Role loaded using its ID.\n    var some_role_by_id = Auth0.GetRole.Invoke(new()\n    {\n        RoleId = \"abcdefghkijklmnopqrstuvwxyz0123456789\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 Role loaded using its name.\n\t\t_, err := auth0.LookupRole(ctx, \u0026auth0.LookupRoleArgs{\n\t\t\tName: pulumi.StringRef(\"my-role\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// An Auth0 Role loaded using its ID.\n\t\t_, err = auth0.LookupRole(ctx, \u0026auth0.LookupRoleArgs{\n\t\t\tRoleId: pulumi.StringRef(\"abcdefghkijklmnopqrstuvwxyz0123456789\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 Role loaded using its name.\n        final var some-role-by-name = Auth0Functions.getRole(GetRoleArgs.builder()\n            .name(\"my-role\")\n            .build());\n\n        // An Auth0 Role loaded using its ID.\n        final var some-role-by-id = Auth0Functions.getRole(GetRoleArgs.builder()\n            .roleId(\"abcdefghkijklmnopqrstuvwxyz0123456789\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 Role loaded using its name.\n  some-role-by-name:\n    fn::invoke:\n      function: auth0:getRole\n      arguments:\n        name: my-role\n  # An Auth0 Role loaded using its ID.\n  some-role-by-id:\n    fn::invoke:\n      function: auth0:getRole\n      arguments:\n        roleId: abcdefghkijklmnopqrstuvwxyz0123456789\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRole.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the role. If not provided, \u003cspan pulumi-lang-nodejs=\"`roleId`\" pulumi-lang-dotnet=\"`RoleId`\" pulumi-lang-go=\"`roleId`\" pulumi-lang-python=\"`role_id`\" pulumi-lang-yaml=\"`roleId`\" pulumi-lang-java=\"`roleId`\"\u003e`role_id`\u003c/span\u003e must be set.\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "The ID of the role. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getRole.\n",
                "properties": {
                    "description": {
                        "description": "The description of the role.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the role. If not provided, \u003cspan pulumi-lang-nodejs=\"`roleId`\" pulumi-lang-dotnet=\"`RoleId`\" pulumi-lang-go=\"`roleId`\" pulumi-lang-python=\"`role_id`\" pulumi-lang-yaml=\"`roleId`\" pulumi-lang-java=\"`roleId`\"\u003e`role_id`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "permissions": {
                        "description": "Configuration settings for permissions (scopes) attached to the role.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getRolePermission:getRolePermission"
                        },
                        "type": "array"
                    },
                    "roleId": {
                        "description": "The ID of the role. If not provided, \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e must be set.\n",
                        "type": "string"
                    },
                    "users": {
                        "description": "List of user IDs assigned to this role. Retrieves a maximum of 1000 user IDs.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "description",
                    "permissions",
                    "users",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getSelfServiceProfile:getSelfServiceProfile": {
            "description": "Data source to retrieve a specific Auth0 Self-Service Profile by \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 Self-Service- Profile loaded using it's ID.\nconst auth0SelfServiceProfile = auth0.getSelfServiceProfile({\n    id: \"some-profile-id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 Self-Service- Profile loaded using it's ID.\nauth0_self_service_profile = auth0.get_self_service_profile(id=\"some-profile-id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 Self-Service- Profile loaded using it's ID.\n    var auth0SelfServiceProfile = Auth0.GetSelfServiceProfile.Invoke(new()\n    {\n        Id = \"some-profile-id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 Self-Service- Profile loaded using it's ID.\n\t\t_, err := auth0.LookupSelfServiceProfile(ctx, \u0026auth0.LookupSelfServiceProfileArgs{\n\t\t\tId: \"some-profile-id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetSelfServiceProfileArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 Self-Service- Profile loaded using it's ID.\n        final var auth0SelfServiceProfile = Auth0Functions.getSelfServiceProfile(GetSelfServiceProfileArgs.builder()\n            .id(\"some-profile-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 Self-Service- Profile loaded using it's ID.\n  auth0SelfServiceProfile:\n    fn::invoke:\n      function: auth0:getSelfServiceProfile\n      arguments:\n        id: some-profile-id\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getSelfServiceProfile.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the Self Service Profile\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSelfServiceProfile.\n",
                "properties": {
                    "allowedStrategies": {
                        "description": "List of IdP strategies that will be shown to users during the Self-Service SSO flow.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "brandings": {
                        "description": "Field can be used to customize the look and feel of the wizard.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getSelfServiceProfileBranding:getSelfServiceProfileBranding"
                        },
                        "type": "array"
                    },
                    "createdAt": {
                        "description": "The ISO 8601 formatted date the profile was created.\n",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the self-service Profile\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The id of the Self Service Profile\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the self-service Profile\n",
                        "type": "string"
                    },
                    "updatedAt": {
                        "description": "The ISO 8601 formatted date the profile was updated.\n",
                        "type": "string"
                    },
                    "userAttributeProfileId": {
                        "description": "The ID of the user attribute profile to use for this self-service profile. Cannot be used with user_attributes.\n",
                        "type": "string"
                    },
                    "userAttributes": {
                        "description": "This array stores the mapping information that will be shown to the user during the SS-SSO flow. The user will be prompted to map the attributes on their identity provider to ensure the specified attributes get passed to Auth0. Cannot be used with user*attribute*profile*id.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getSelfServiceProfileUserAttribute:getSelfServiceProfileUserAttribute"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "allowedStrategies",
                    "brandings",
                    "createdAt",
                    "description",
                    "id",
                    "name",
                    "updatedAt",
                    "userAttributeProfileId",
                    "userAttributes"
                ],
                "type": "object"
            }
        },
        "auth0:index/getSigningKeys:getSigningKeys": {
            "description": "Data source to retrieve signing keys used by the applications in your tenant. [Learn more](https://auth0.com/docs/get-started/tenant-settings/signing-keys).\n\n",
            "outputs": {
                "description": "A collection of values returned by getSigningKeys.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "signingKeys": {
                        "description": "All application signing keys.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getSigningKeysSigningKey:getSigningKeysSigningKey"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "signingKeys",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getTenant:getTenant": {
            "description": "Use this data source to access information about the tenant this provider is configured to access.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myTenant = auth0.getTenant({});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_tenant = auth0.get_tenant()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myTenant = Auth0.GetTenant.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.LookupTenant(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myTenant = Auth0Functions.getTenant(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);\n\n    }\n}\n```\n```yaml\nvariables:\n  myTenant:\n    fn::invoke:\n      function: auth0:getTenant\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getTenant.\n",
                "properties": {
                    "acrValuesSupporteds": {
                        "description": "List of supported ACR values.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "allowOrganizationNameInAuthenticationApi": {
                        "description": "Whether to accept an organization name instead of an ID on auth endpoints.\n",
                        "type": "boolean"
                    },
                    "allowedLogoutUrls": {
                        "description": "URLs that Auth0 may redirect to after logout.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "customizeMfaInPostloginAction": {
                        "description": "Whether to enable flexible factors for MFA in the PostLogin action.\n",
                        "type": "boolean"
                    },
                    "defaultAudience": {
                        "description": "API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.\n",
                        "type": "string"
                    },
                    "defaultDirectory": {
                        "description": "Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, \u003cspan pulumi-lang-nodejs=\"`ad`\" pulumi-lang-dotnet=\"`Ad`\" pulumi-lang-go=\"`ad`\" pulumi-lang-python=\"`ad`\" pulumi-lang-yaml=\"`ad`\" pulumi-lang-java=\"`ad`\"\u003e`ad`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`auth0`\" pulumi-lang-dotnet=\"`Auth0`\" pulumi-lang-go=\"`auth0`\" pulumi-lang-python=\"`auth0`\" pulumi-lang-yaml=\"`auth0`\" pulumi-lang-java=\"`auth0`\"\u003e`auth0`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`email`\" pulumi-lang-dotnet=\"`Email`\" pulumi-lang-go=\"`email`\" pulumi-lang-python=\"`email`\" pulumi-lang-yaml=\"`email`\" pulumi-lang-java=\"`email`\"\u003e`email`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`sms`\" pulumi-lang-dotnet=\"`Sms`\" pulumi-lang-go=\"`sms`\" pulumi-lang-python=\"`sms`\" pulumi-lang-yaml=\"`sms`\" pulumi-lang-java=\"`sms`\"\u003e`sms`\u003c/span\u003e, \u003cspan pulumi-lang-nodejs=\"`waad`\" pulumi-lang-dotnet=\"`Waad`\" pulumi-lang-go=\"`waad`\" pulumi-lang-python=\"`waad`\" pulumi-lang-yaml=\"`waad`\" pulumi-lang-java=\"`waad`\"\u003e`waad`\u003c/span\u003e, and \u003cspan pulumi-lang-nodejs=\"`adfs`\" pulumi-lang-dotnet=\"`Adfs`\" pulumi-lang-go=\"`adfs`\" pulumi-lang-python=\"`adfs`\" pulumi-lang-yaml=\"`adfs`\" pulumi-lang-java=\"`adfs`\"\u003e`adfs`\u003c/span\u003e.\n",
                        "type": "string"
                    },
                    "defaultRedirectionUri": {
                        "description": "The default absolute redirection URI. Must be HTTPS or an empty string.\n",
                        "type": "string"
                    },
                    "defaultTokenQuotas": {
                        "description": "Token Quota configuration.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getTenantDefaultTokenQuota:getTenantDefaultTokenQuota"
                        },
                        "type": "array"
                    },
                    "disableAcrValuesSupported": {
                        "description": "Disable list of supported ACR values.\n",
                        "type": "boolean"
                    },
                    "domain": {
                        "description": "Your Auth0 domain name.\n",
                        "type": "string"
                    },
                    "enabledLocales": {
                        "description": "Supported locales for the user interface. The first locale in the list will be used to set the default locale.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "errorPages": {
                        "description": "Configuration for the error page\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getTenantErrorPage:getTenantErrorPage"
                        },
                        "type": "array"
                    },
                    "flags": {
                        "description": "Configuration settings for tenant flags.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getTenantFlag:getTenantFlag"
                        },
                        "type": "array"
                    },
                    "friendlyName": {
                        "description": "Friendly name for the tenant.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "idleSessionLifetime": {
                        "description": "Number of hours during which a session can be inactive before the user must log in again.\n",
                        "type": "number"
                    },
                    "managementApiIdentifier": {
                        "description": "The identifier value of the built-in Management API resource server, which can be used as an audience when configuring client grants.\n",
                        "type": "string"
                    },
                    "mtls": {
                        "description": "Configuration for mTLS.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getTenantMtl:getTenantMtl"
                        },
                        "type": "array"
                    },
                    "oidcLogouts": {
                        "description": "Settings related to OIDC RP-initiated Logout.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getTenantOidcLogout:getTenantOidcLogout"
                        },
                        "type": "array"
                    },
                    "pictureUrl": {
                        "description": "URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.\n",
                        "type": "string"
                    },
                    "pushedAuthorizationRequestsSupported": {
                        "description": "Enable pushed authorization requests.\n",
                        "type": "boolean"
                    },
                    "sandboxVersion": {
                        "description": "Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0's functionality.\n",
                        "type": "string"
                    },
                    "sessionCookies": {
                        "description": "Alters behavior of tenant's session cookie. Contains a single \u003cspan pulumi-lang-nodejs=\"`mode`\" pulumi-lang-dotnet=\"`Mode`\" pulumi-lang-go=\"`mode`\" pulumi-lang-python=\"`mode`\" pulumi-lang-yaml=\"`mode`\" pulumi-lang-java=\"`mode`\"\u003e`mode`\u003c/span\u003e property.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getTenantSessionCooky:getTenantSessionCooky"
                        },
                        "type": "array"
                    },
                    "sessionLifetime": {
                        "description": "Number of hours during which a session will stay valid.\n",
                        "type": "number"
                    },
                    "sessions": {
                        "description": "Sessions related settings for the tenant.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getTenantSession:getTenantSession"
                        },
                        "type": "array"
                    },
                    "skipNonVerifiableCallbackUriConfirmationPrompt": {
                        "description": "Indicates whether the confirmation prompt appears when using non-verifiable callback URIs. Set to true to skip the prompt, false to show it, or null to unset. Accepts (true/false/null) or (\"true\"/\"false\"/\"null\")\n",
                        "type": "string"
                    },
                    "supportEmail": {
                        "description": "Support email address for authenticating users.\n",
                        "type": "string"
                    },
                    "supportUrl": {
                        "description": "Support URL for authenticating users.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "acrValuesSupporteds",
                    "allowOrganizationNameInAuthenticationApi",
                    "allowedLogoutUrls",
                    "customizeMfaInPostloginAction",
                    "defaultAudience",
                    "defaultDirectory",
                    "defaultRedirectionUri",
                    "defaultTokenQuotas",
                    "disableAcrValuesSupported",
                    "domain",
                    "enabledLocales",
                    "errorPages",
                    "flags",
                    "friendlyName",
                    "idleSessionLifetime",
                    "managementApiIdentifier",
                    "mtls",
                    "oidcLogouts",
                    "pictureUrl",
                    "pushedAuthorizationRequestsSupported",
                    "sandboxVersion",
                    "sessionCookies",
                    "sessionLifetime",
                    "sessions",
                    "skipNonVerifiableCallbackUriConfirmationPrompt",
                    "supportEmail",
                    "supportUrl",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getTokenExchangeProfile:getTokenExchangeProfile": {
            "description": "Data source to retrieve a specific Auth0 Token Exchange Profile by \u003cspan pulumi-lang-nodejs=\"`id`\" pulumi-lang-dotnet=\"`Id`\" pulumi-lang-go=\"`id`\" pulumi-lang-python=\"`id`\" pulumi-lang-yaml=\"`id`\" pulumi-lang-java=\"`id`\"\u003e`id`\u003c/span\u003e\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\n// An Auth0 Token Exchange Profile loaded using its ID.\nconst myProfile = auth0.getTokenExchangeProfile({\n    id: \"tep_Tnvl88SKv98TkMmr\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\n# An Auth0 Token Exchange Profile loaded using its ID.\nmy_profile = auth0.get_token_exchange_profile(id=\"tep_Tnvl88SKv98TkMmr\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // An Auth0 Token Exchange Profile loaded using its ID.\n    var myProfile = Auth0.GetTokenExchangeProfile.Invoke(new()\n    {\n        Id = \"tep_Tnvl88SKv98TkMmr\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// An Auth0 Token Exchange Profile loaded using its ID.\n\t\t_, err := auth0.LookupTokenExchangeProfile(ctx, \u0026auth0.LookupTokenExchangeProfileArgs{\n\t\t\tId: \"tep_Tnvl88SKv98TkMmr\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.auth0.Auth0Functions;\nimport com.pulumi.auth0.inputs.GetTokenExchangeProfileArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // An Auth0 Token Exchange Profile loaded using its ID.\n        final var myProfile = Auth0Functions.getTokenExchangeProfile(GetTokenExchangeProfileArgs.builder()\n            .id(\"tep_Tnvl88SKv98TkMmr\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # An Auth0 Token Exchange Profile loaded using its ID.\n  myProfile:\n    fn::invoke:\n      function: auth0:getTokenExchangeProfile\n      arguments:\n        id: tep_Tnvl88SKv98TkMmr\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getTokenExchangeProfile.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The id of the Token Exchange Profile\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTokenExchangeProfile.\n",
                "properties": {
                    "actionId": {
                        "description": "Unique identifier of the Action\n",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "The ISO 8601 formatted date the credential was created.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The id of the Token Exchange Profile\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the token exchange profile.\n",
                        "type": "string"
                    },
                    "subjectTokenType": {
                        "description": "Type of the subject token\n",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the token exchange profile\n",
                        "type": "string"
                    },
                    "updatedAt": {
                        "description": "The ISO 8601 formatted date the credential was updated.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "actionId",
                    "createdAt",
                    "id",
                    "name",
                    "subjectTokenType",
                    "type",
                    "updatedAt"
                ],
                "type": "object"
            }
        },
        "auth0:index/getUser:getUser": {
            "description": "Data source to retrieve a specific Auth0 user by \u003cspan pulumi-lang-nodejs=\"`userId`\" pulumi-lang-dotnet=\"`UserId`\" pulumi-lang-go=\"`userId`\" pulumi-lang-python=\"`user_id`\" pulumi-lang-yaml=\"`userId`\" pulumi-lang-java=\"`userId`\"\u003e`user_id`\u003c/span\u003e or by `lucene query`. If filtered by Lucene Query, it should include sufficient filters to retrieve a unique user.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "customDomainHeader": {
                        "type": "string",
                        "description": "Sets the `Auth0-Custom-Domain` header on all requests for this resource. Global setting of provider takes precedence over resource specific param, if both are set.\n"
                    },
                    "query": {
                        "type": "string",
                        "description": "Lucene Query for retrieving a user.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "ID of the user.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "appMetadata": {
                        "description": "Custom fields that store info about the user that impact the user's core functionality, such as how an application functions or what the user can access. Examples include support plans and IDs for external accounts.\n",
                        "type": "string"
                    },
                    "blocked": {
                        "description": "Indicates whether the user is blocked or not.\n",
                        "type": "boolean"
                    },
                    "connectionName": {
                        "description": "Name of the connection from which the user information was sourced.\n",
                        "type": "string"
                    },
                    "customDomainHeader": {
                        "description": "Sets the `Auth0-Custom-Domain` header on all requests for this resource. Global setting of provider takes precedence over resource specific param, if both are set.\n",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address of the user.\n",
                        "type": "string"
                    },
                    "emailVerified": {
                        "description": "Indicates whether the email address has been verified.\n",
                        "type": "boolean"
                    },
                    "familyName": {
                        "description": "Family name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n",
                        "type": "string"
                    },
                    "givenName": {
                        "description": "Given name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n",
                        "type": "string"
                    },
                    "nickname": {
                        "description": "Preferred nickname or alias of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n",
                        "type": "string"
                    },
                    "password": {
                        "description": "Initial password for this user. Required for non-passwordless connections (SMS and email).\n",
                        "type": "string"
                    },
                    "permissions": {
                        "description": "List of API permissions granted to the user.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getUserPermission:getUserPermission"
                        },
                        "type": "array"
                    },
                    "phoneNumber": {
                        "description": "Phone number for the user; follows the E.164 recommendation. Used for SMS connections.\n",
                        "type": "string"
                    },
                    "phoneVerified": {
                        "description": "Indicates whether the phone number has been verified.\n",
                        "type": "boolean"
                    },
                    "picture": {
                        "description": "Picture of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).\n",
                        "type": "string"
                    },
                    "query": {
                        "description": "Lucene Query for retrieving a user.\n",
                        "type": "string"
                    },
                    "roles": {
                        "description": "Set of IDs of roles assigned to the user.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "userId": {
                        "description": "ID of the user.\n",
                        "type": "string"
                    },
                    "userMetadata": {
                        "description": "Custom fields that store info about the user that does not impact a user's core functionality. Examples include work address, home address, and user preferences.\n",
                        "type": "string"
                    },
                    "username": {
                        "description": "Username of the user. Only valid if the connection requires a username.\n",
                        "type": "string"
                    },
                    "verifyEmail": {
                        "description": "Indicates whether the user will receive a verification email after creation. Overrides behavior of \u003cspan pulumi-lang-nodejs=\"`emailVerified`\" pulumi-lang-dotnet=\"`EmailVerified`\" pulumi-lang-go=\"`emailVerified`\" pulumi-lang-python=\"`email_verified`\" pulumi-lang-yaml=\"`emailVerified`\" pulumi-lang-java=\"`emailVerified`\"\u003e`email_verified`\u003c/span\u003e parameter.\n",
                        "type": "boolean"
                    }
                },
                "required": [
                    "appMetadata",
                    "blocked",
                    "connectionName",
                    "email",
                    "emailVerified",
                    "familyName",
                    "givenName",
                    "name",
                    "nickname",
                    "password",
                    "permissions",
                    "phoneNumber",
                    "phoneVerified",
                    "picture",
                    "roles",
                    "userMetadata",
                    "username",
                    "verifyEmail",
                    "id"
                ],
                "type": "object"
            }
        },
        "auth0:index/getUserAttributeProfile:getUserAttributeProfile": {
            "description": "Data source to retrieve a specific Auth0 User Attribute Profile by \u003cspan pulumi-lang-nodejs=\"`userAttributeProfileId`\" pulumi-lang-dotnet=\"`UserAttributeProfileId`\" pulumi-lang-go=\"`userAttributeProfileId`\" pulumi-lang-python=\"`user_attribute_profile_id`\" pulumi-lang-yaml=\"`userAttributeProfileId`\" pulumi-lang-java=\"`userAttributeProfileId`\"\u003e`user_attribute_profile_id`\u003c/span\u003e or \u003cspan pulumi-lang-nodejs=\"`name`\" pulumi-lang-dotnet=\"`Name`\" pulumi-lang-go=\"`name`\" pulumi-lang-python=\"`name`\" pulumi-lang-yaml=\"`name`\" pulumi-lang-java=\"`name`\"\u003e`name`\u003c/span\u003e.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUserAttributeProfile.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the User Attribute Profile.\n"
                    },
                    "userAttributeProfileId": {
                        "type": "string",
                        "description": "The ID of the User Attribute Profile.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getUserAttributeProfile.\n",
                "properties": {
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the User Attribute Profile.\n",
                        "type": "string"
                    },
                    "userAttributeProfileId": {
                        "description": "The ID of the User Attribute Profile.\n",
                        "type": "string"
                    },
                    "userAttributes": {
                        "description": "List of user attribute configurations.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getUserAttributeProfileUserAttribute:getUserAttributeProfileUserAttribute"
                        },
                        "type": "array"
                    },
                    "userIds": {
                        "description": "Configuration for mapping the user ID from identity providers.\n",
                        "items": {
                            "$ref": "#/types/auth0:index/getUserAttributeProfileUserId:getUserAttributeProfileUserId"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "userAttributes",
                    "userIds",
                    "id"
                ],
                "type": "object"
            }
        },
        "pulumi:providers:auth0/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/provider"
                    }
                },
                "type": "pulumi:providers:auth0/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        }
    }
}