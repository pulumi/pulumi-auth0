{
    "name": "auth0",
    "description": "A Pulumi package for creating and managing auth0 cloud resources.",
    "keywords": [
        "pulumi",
        "auth0"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`auth0` Terraform Provider](https://github.com/alexkappa/terraform-provider-auth0).",
    "repository": "https://github.com/pulumi/pulumi-auth0",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "clientId": {
                "type": "string"
            },
            "clientSecret": {
                "type": "string"
            },
            "debug": {
                "type": "boolean",
                "defaultInfo": {
                    "environment": [
                        "AUTH0_DEBUG"
                    ]
                }
            },
            "domain": {
                "type": "string"
            }
        },
        "defaults": [
            "clientId",
            "clientSecret",
            "domain"
        ]
    },
    "types": {
        "auth0:index/ActionDependency:ActionDependency": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Secret name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "Trigger version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "version"
            ]
        },
        "auth0:index/ActionSecret:ActionSecret": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Secret name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "Secret value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "auth0:index/ActionSupportedTriggers:ActionSupportedTriggers": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Trigger ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "string",
                    "description": "Trigger version.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "version"
            ]
        },
        "auth0:index/BrandingColors:BrandingColors": {
            "properties": {
                "pageBackground": {
                    "type": "string",
                    "description": "String, Hexadecimal. Background color of login pages.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primary": {
                    "type": "string",
                    "description": "String, Hexadecimal. Primary button background color.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "pageBackground",
                        "primary"
                    ]
                }
            }
        },
        "auth0:index/BrandingFont:BrandingFont": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "String. URL for the custom font.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "url"
                    ]
                }
            }
        },
        "auth0:index/BrandingUniversalLogin:BrandingUniversalLogin": {
            "properties": {
                "body": {
                    "type": "string",
                    "description": "String, body of login pages.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "body"
                    ]
                }
            }
        },
        "auth0:index/ClientAddons:ClientAddons": {
            "properties": {
                "aws": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureBlob": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSb": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "box": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudbees": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concur": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dropbox": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "echosign": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "egnyte": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firebase": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layer": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mscrm": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "newrelic": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "office365": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rms": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "salesforce": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "salesforceApi": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "salesforceSandboxApi": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samlp": {
                    "$ref": "#/types/auth0:index/ClientAddonsSamlp:ClientAddonsSamlp",
                    "description": "List(Resource). Configuration settings for a SAML add-on. For details, see SAML.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sapApi": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sentry": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharepoint": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slack": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "springcm": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wams": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wsfed": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zendesk": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoom": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSamlp:ClientAddonsSamlp": {
            "properties": {
                "audience": {
                    "type": "string",
                    "description": "String. Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authnContextClassRef": {
                    "type": "string",
                    "description": "String. Class reference of the authentication context.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binding": {
                    "type": "string",
                    "description": "String. Protocol binding used for SAML logout responses.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createUpnClaim": {
                    "type": "boolean",
                    "description": "Boolean, (Default=true) Indicates whether or not a UPN claim should be created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destination": {
                    "type": "string",
                    "description": "String. Destination of the SAML Response. If not specified, it will be AssertionConsumerUrlof SAMLRequest or Callback URL if there was no SAMLRequest.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "String, (Default=`sha1`). Algorithm used to calculate the digest of the SAML Assertion or response. Options include `defaultsha1` and `sha256`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeAttributeNameFormat": {
                    "type": "boolean",
                    "description": "Boolean,(Default=true). Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "description": "Integer, (Default=3600). Number of seconds during which the token is valid.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logout": {
                    "$ref": "#/types/auth0:index/ClientAddonsSamlpLogout:ClientAddonsSamlpLogout",
                    "description": "Map(Resource). Configuration settings for logout. For details, see Logout.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mapIdentities": {
                    "type": "boolean",
                    "description": "Boolean, (Default=true). Indicates whether or not to add additional identity information in the token, such as the provider used and the access_token, if available.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mapUnknownClaimsAsIs": {
                    "type": "boolean",
                    "description": "Boolean, (Default=false). Indicates whether or not to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mappings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Map(String). Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameIdentifierFormat": {
                    "type": "string",
                    "description": "String, (Default=`urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`). Format of the name identifier.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameIdentifierProbes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passthroughClaimsWithNoMapping": {
                    "type": "boolean",
                    "description": "Boolean, (Default=true). Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recipient": {
                    "type": "string",
                    "description": "String. Recipient of the SAML Assertion (SubjectConfirmationData). Default is AssertionConsumerUrl on SAMLRequest or Callback URL if no SAMLRequest was sent.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signResponse": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "String, (Default=`rsa-sha1`). Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typedAttributes": {
                    "type": "boolean",
                    "description": "Boolean, (Default=true). Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ClientAddonsSamlpLogout:ClientAddonsSamlpLogout": {
            "properties": {
                "callback": {
                    "type": "string",
                    "description": "String. Service provider's Single Logout Service URL, to which Auth0 will send logout requests and responses.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sloEnabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not Auth0 should notify service providers of session termination.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ClientJwtConfiguration:ClientJwtConfiguration": {
            "properties": {
                "alg": {
                    "type": "string",
                    "description": "String. Algorithm used to sign JWTs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "description": "Integer. Number of seconds during which the JWT will be valid.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map(String). Permissions (scopes) included in JWTs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretEncoded": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the client secret is base64 encoded.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "lifetimeInSeconds",
                        "secretEncoded"
                    ]
                }
            }
        },
        "auth0:index/ClientMobile:ClientMobile": {
            "properties": {
                "android": {
                    "$ref": "#/types/auth0:index/ClientMobileAndroid:ClientMobileAndroid",
                    "description": "List(Resource). Configuration settings for Android native apps. For details, see Android.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ios": {
                    "$ref": "#/types/auth0:index/ClientMobileIos:ClientMobileIos",
                    "description": "List(Resource). Configuration settings for i0S native apps. For details, see iOS.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ClientMobileAndroid:ClientMobileAndroid": {
            "properties": {
                "appPackageName": {
                    "type": "string",
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sha256CertFingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ClientMobileIos:ClientMobileIos": {
            "properties": {
                "appBundleIdentifier": {
                    "type": "string",
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamId": {
                    "type": "string",
                    "description": "String\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ClientRefreshToken:ClientRefreshToken": {
            "properties": {
                "expirationType": {
                    "type": "string",
                    "description": "String. Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleTokenLifetime": {
                    "type": "integer",
                    "description": "Integer. The time in seconds after which inactive refresh tokens will expire.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "infiniteIdleTokenLifetime": {
                    "type": "boolean",
                    "description": "Boolean, (Default=false) Whether or not inactive refresh tokens should be remain valid indefinitely.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "infiniteTokenLifetime": {
                    "type": "boolean",
                    "description": "Boolean, (Default=false) Whether or not refresh tokens should remain valid indefinitely. If false, `token_lifetime` should also be set\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leeway": {
                    "type": "integer",
                    "description": "Integer. The amount of time in seconds in which a refresh token may be reused without trigging reuse detection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rotationType": {
                    "type": "string",
                    "description": "String. Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenLifetime": {
                    "type": "integer",
                    "description": "Integer. The absolute lifetime of a refresh token in seconds.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expirationType",
                "rotationType"
            ]
        },
        "auth0:index/ConnectionOptions:ConnectionOptions": {
            "properties": {
                "adfsServer": {
                    "type": "string",
                    "description": "ADFS Metadata source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "allowedAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of allowed audiences.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiEnableUsers": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appDomain": {
                    "type": "string",
                    "description": "Azure AD domain name.\n",
                    "deprecationMessage": "Use domain instead",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appId": {
                    "type": "string",
                    "description": "Azure AD app ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authorizationEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bruteForceProtection": {
                    "type": "boolean",
                    "description": "Indicates whether or not to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "OIDC provider client ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSecret": {
                    "type": "string",
                    "description": "OIDC provider client secret.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "communityBaseUrl": {
                    "type": "string",
                    "description": "String.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "configuration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A case-sensitive map of key value pairs used as configuration variables for the `custom_script`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "customScripts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom database action scripts. For more information, read [Custom Database Action Script Templates](https://auth0.com/docs/connections/database/custom-db/templates).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "debug": {
                    "type": "boolean",
                    "description": "(Boolean) When enabled additional debugging information will be generated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "digestAlgorithm": {
                    "type": "string",
                    "description": "Sign Request Algorithm Digest\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableCache": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableSignup": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not to allow user sign-ups to your application.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "discoveryUrl": {
                    "type": "string",
                    "description": "OpenID discovery URL. E.g. `https://auth.example.com/.well-known/openid-configuration`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domainAliases": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the domains that can be authenticated using the Identity Provider. Only needed for Identifier First authentication flows.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enabledDatabaseCustomization": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "entityId": {
                    "type": "string",
                    "description": "Custom Entity ID for the connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fieldsMap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "SAML Attributes mapping. If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "from": {
                    "type": "string",
                    "description": "SMS number for the sender. Used when SMS Source is From.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "iconUrl": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "identityApi": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idpInitiated": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsIdpInitiated:ConnectionOptionsIdpInitiated",
                    "description": "Configuration Options for IDP Initiated Authentication.  This is an object with the properties: `client_id`, `client_protocol`, and `client_authorize_query`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "importMode": {
                    "type": "boolean",
                    "description": "Indicates whether or not you have a legacy user store and want to gradually migrate those users to the Auth0 user store. [Learn more](https://auth0.com/docs/users/guides/configure-automatic-migration).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "issuer": {
                    "type": "string",
                    "description": "Issuer URL. E.g. `https://auth.example.com`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "jwksUri": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keyId": {
                    "type": "string",
                    "description": "Key ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxGroupsToRetrieve": {
                    "type": "string",
                    "description": "Maximum number of groups to retrieve.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messagingServiceSid": {
                    "type": "string",
                    "description": "SID for Copilot. Used when SMS Source is Copilot.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mfa": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsMfa:ConnectionOptionsMfa",
                    "description": "Configuration settings Options for multifactor authentication. For details, see MFA Options.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nonPersistentAttrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the denylist. See [here](https://auth0.com/docs/security/denylist-user-attributes) for more info.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passwordComplexityOptions": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsPasswordComplexityOptions:ConnectionOptionsPasswordComplexityOptions",
                    "description": "Configuration settings for password complexity. For details, see Password Complexity Options.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passwordDictionary": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsPasswordDictionary:ConnectionOptionsPasswordDictionary",
                    "description": "Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary. For details, see Password Dictionary.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passwordHistories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ConnectionOptionsPasswordHistory:ConnectionOptionsPasswordHistory"
                    },
                    "description": "Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords. For details, see Password History.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passwordNoPersonalInfo": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsPasswordNoPersonalInfo:ConnectionOptionsPasswordNoPersonalInfo",
                    "description": "Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's name, username, nickname, user_metadata.name, user_metadata.first, user_metadata.last, user's email, or first part of the user's email. For details, see Password No Personal Info.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passwordPolicy": {
                    "type": "string",
                    "description": "Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocolBinding": {
                    "type": "string",
                    "description": "The SAML Response Binding - how the SAML token is received by Auth0 from IdP. Two possible values are `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` (default) and `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestTemplate": {
                    "type": "string",
                    "description": "Template that formats the SAML request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requiresUsername": {
                    "type": "boolean",
                    "description": "Indicates whether or not the user is required to provide a username in addition to an email address.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Scopes required by the connection. The value must be a list, for example `[\"openid\", \"profile\", \"email\"]`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scripts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "setUserRootAttributes": {
                    "type": "string",
                    "description": "Determines whether the 'name', 'given_name', 'family_name', 'nickname', and 'picture' attributes can be independently updated when using the external IdP. Default is `on_each_login` and can be set to `on_first_login`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shouldTrustEmailVerifiedConnection": {
                    "type": "string",
                    "description": "Determines how Auth0 sets the email_verified field in the user profile. Can either be set to `never_set_emails_as_verified` or `always_set_emails_as_verified`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signInEndpoint": {
                    "type": "string",
                    "description": "SAML single login URL for the connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signOutEndpoint": {
                    "type": "string",
                    "description": "SAML single logout URL for the connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signSamlRequest": {
                    "type": "boolean",
                    "description": "(Boolean) When enabled, the SAML authentication request will be signed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "Sign Request Algorithm\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signingCert": {
                    "type": "string",
                    "description": "The X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "strategyVersion": {
                    "type": "integer",
                    "description": "Version 1 is deprecated, use version 2.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "subject": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "syntax": {
                    "type": "string",
                    "description": "Syntax of the SMS. Options include `markdown` and `liquid`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamId": {
                    "type": "string",
                    "description": "Team ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "description": "Template for the SMS. You can use `@@password@@` as a placeholder for the password value.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tenantDomain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "totp": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsTotp:ConnectionOptionsTotp",
                    "description": "Configuration options for one-time passwords. For details, see TOTP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "twilioSid": {
                    "type": "string",
                    "description": "SID for your Twilio account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "twilioToken": {
                    "type": "string",
                    "description": "AuthToken for your Twilio account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "Value can be `back_channel` or `front_channel`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useCertAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useKerberos": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useWsfed": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userIdAttribute": {
                    "type": "string",
                    "description": "Attribute in the SAML token that will be mapped to the user_id property in Auth0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userinfoEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "validation": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsValidation:ConnectionOptionsValidation",
                    "description": "Validation of the minimum and maximum values allowed for a user to have as username. For details, see Validation.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waadCommonEndpoint": {
                    "type": "boolean",
                    "description": "Indicates whether or not to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waadProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "nonPersistentAttrs",
                        "passwordHistories",
                        "passwordPolicy",
                        "setUserRootAttributes",
                        "strategyVersion"
                    ]
                }
            }
        },
        "auth0:index/ConnectionOptionsIdpInitiated:ConnectionOptionsIdpInitiated": {
            "properties": {
                "clientAuthorizeQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientId": {
                    "type": "string",
                    "description": "Google client ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientProtocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsMfa:ConnectionOptionsMfa": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Indicates whether multifactor authentication is enabled for this connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "returnEnrollSettings": {
                    "type": "boolean",
                    "description": "Indicates whether multifactor authentication enrollment settings will be returned.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsPasswordComplexityOptions:ConnectionOptionsPasswordComplexityOptions": {
            "properties": {
                "minLength": {
                    "type": "integer",
                    "description": "Minimum number of characters allowed in passwords.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsPasswordDictionary:ConnectionOptionsPasswordDictionary": {
            "properties": {
                "dictionaries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enable": {
                    "type": "boolean",
                    "description": "Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsPasswordHistory:ConnectionOptionsPasswordHistory": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "description": "Indicates the number of passwords to keep in history with a maximum of 24.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsPasswordNoPersonalInfo:ConnectionOptionsPasswordNoPersonalInfo": {
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Indicates whether the password personal info check is enabled for this connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsTotp:ConnectionOptionsTotp": {
            "properties": {
                "length": {
                    "type": "integer",
                    "description": "Integer. Length of the one-time password.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeStep": {
                    "type": "integer",
                    "description": "Integer. Seconds between allowed generation of new passwords.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsValidation:ConnectionOptionsValidation": {
            "properties": {
                "username": {
                    "$ref": "#/types/auth0:index/ConnectionOptionsValidationUsername:ConnectionOptionsValidationUsername",
                    "description": "Specifies the `min` and `max` values of username length. `min` and `max` are integers.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/ConnectionOptionsValidationUsername:ConnectionOptionsValidationUsername": {
            "properties": {
                "max": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "min": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/CustomDomainVerification:CustomDomainVerification": {
            "properties": {
                "methods": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "List(Map). Verification methods for the domain.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "methods"
                    ]
                }
            }
        },
        "auth0:index/EmailCredentials:EmailCredentials": {
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "String, Case-sensitive. AWS Access Key ID. Used only for AWS.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiKey": {
                    "type": "string",
                    "description": "String, Case-sensitive. API Key for your email service. Will always be encrypted in our database.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiUser": {
                    "type": "string",
                    "description": "String. API User for your email service.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "description": "String. Default region. Used only for AWS, Mailgun, and SparkPost.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "String, Case-sensitive. AWS Secret Key. Will always be encrypted in our database. Used only for AWS.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpHost": {
                    "type": "string",
                    "description": "String. Hostname or IP address of your SMTP server. Used only for SMTP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpPass": {
                    "type": "string",
                    "description": "String, Case-sensitive. SMTP password. Used only for SMTP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpPort": {
                    "type": "integer",
                    "description": "Integer. Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "smtpUser": {
                    "type": "string",
                    "description": "String. SMTP username. Used only for SMTP.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/GlobalClientAddons:GlobalClientAddons": {
            "properties": {
                "aws": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureBlob": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSb": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "box": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudbees": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "concur": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dropbox": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "echosign": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "egnyte": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firebase": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "layer": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mscrm": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "newrelic": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "office365": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rms": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "salesforce": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "salesforceApi": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "salesforceSandboxApi": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "samlp": {
                    "$ref": "#/types/auth0:index/GlobalClientAddonsSamlp:GlobalClientAddonsSamlp",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sapApi": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sentry": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sharepoint": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "slack": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "springcm": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wams": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wsfed": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zendesk": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "zoom": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/GlobalClientAddonsSamlp:GlobalClientAddonsSamlp": {
            "properties": {
                "audience": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "authnContextClassRef": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "binding": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createUpnClaim": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destination": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "digestAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeAttributeNameFormat": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logout": {
                    "$ref": "#/types/auth0:index/GlobalClientAddonsSamlpLogout:GlobalClientAddonsSamlpLogout",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mapIdentities": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mapUnknownClaimsAsIs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mappings": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameIdentifierFormat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameIdentifierProbes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passthroughClaimsWithNoMapping": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "recipient": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signResponse": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typedAttributes": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/GlobalClientAddonsSamlpLogout:GlobalClientAddonsSamlpLogout": {
            "properties": {
                "callback": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sloEnabled": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/GlobalClientJwtConfiguration:GlobalClientJwtConfiguration": {
            "properties": {
                "alg": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lifetimeInSeconds": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scopes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "secretEncoded": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "lifetimeInSeconds",
                        "secretEncoded"
                    ]
                }
            }
        },
        "auth0:index/GlobalClientMobile:GlobalClientMobile": {
            "properties": {
                "android": {
                    "$ref": "#/types/auth0:index/GlobalClientMobileAndroid:GlobalClientMobileAndroid",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ios": {
                    "$ref": "#/types/auth0:index/GlobalClientMobileIos:GlobalClientMobileIos",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/GlobalClientMobileAndroid:GlobalClientMobileAndroid": {
            "properties": {
                "appPackageName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sha256CertFingerprints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/GlobalClientMobileIos:GlobalClientMobileIos": {
            "properties": {
                "appBundleIdentifier": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "teamId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/GlobalClientRefreshToken:GlobalClientRefreshToken": {
            "properties": {
                "expirationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "idleTokenLifetime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "infiniteIdleTokenLifetime": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "infiniteTokenLifetime": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "leeway": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rotationType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tokenLifetime": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "expirationType",
                "rotationType"
            ]
        },
        "auth0:index/GuardianPhone:GuardianPhone": {
            "properties": {
                "messageTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). Message types to use, array of `sms` and or `voice`. Adding both to array should enable the user to choose.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "options": {
                    "$ref": "#/types/auth0:index/GuardianPhoneOptions:GuardianPhoneOptions",
                    "description": "List(Resource). Options for the various providers. See Options.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "provider": {
                    "type": "string",
                    "description": "String, Case-sensitive. Provider to use, one of `auth0`, `twilio` or `phone-message-hook`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "messageTypes",
                "provider"
            ]
        },
        "auth0:index/GuardianPhoneOptions:GuardianPhoneOptions": {
            "properties": {
                "authToken": {
                    "type": "string",
                    "description": "String.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enrollmentMessage": {
                    "type": "string",
                    "description": "String. This message will be sent whenever a user enrolls a new device for the first time using MFA. Supports liquid syntax, see [Auth0 docs](https://auth0.com/docs/mfa/customize-sms-or-voice-messages).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "from": {
                    "type": "string",
                    "description": "String.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "messagingServiceSid": {
                    "type": "string",
                    "description": "String.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sid": {
                    "type": "string",
                    "description": "String.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "verificationMessage": {
                    "type": "string",
                    "description": "String. This message will be sent whenever a user logs in after the enrollment. Supports liquid syntax, see [Auth0 docs](https://auth0.com/docs/mfa/customize-sms-or-voice-messages).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/LogStreamSink:LogStreamSink": {
            "properties": {
                "awsAccountId": {
                    "type": "string",
                    "description": "The AWS Account ID\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "awsPartnerEventSource": {
                    "type": "string",
                    "description": "Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS so this should generally be an output attribute.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "awsRegion": {
                    "type": "string",
                    "description": "The AWS Region (i.e \"us-east-2\")\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azurePartnerTopic": {
                    "type": "string",
                    "description": "Name of the Partner Topic to be used with Azure.  Generally should not be specified.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureRegion": {
                    "type": "string",
                    "description": "The Azure region code (i.e. \"ne\")\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureResourceGroup": {
                    "type": "string",
                    "description": "The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "azureSubscriptionId": {
                    "type": "string",
                    "description": "The unique alphanumeric string that identifies your Azure subscription\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogApiKey": {
                    "type": "string",
                    "description": "The Datadog API key\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogRegion": {
                    "type": "string",
                    "description": "The Datadog region\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpAuthorization": {
                    "type": "string",
                    "description": "Sent in the HTTP \"Authorization\" header with each request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpContentFormat": {
                    "type": "string",
                    "description": "The format of data sent over HTTP. Options are \"JSONLINES\" or \"JSONARRAY\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpContentType": {
                    "type": "string",
                    "description": "The ContentType header to send over HTTP.  Common value is \"application/json\"\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpCustomHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Additional HTTP headers to be included as part of the HTTP request\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpEndpoint": {
                    "type": "string",
                    "description": "The HTTP endpoint to send streaming logs\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkDomain": {
                    "type": "string",
                    "description": "The Splunk domain name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkPort": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkSecure": {
                    "type": "boolean",
                    "description": "This toggle should be turned off when using self-signed certificates\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkToken": {
                    "type": "string",
                    "description": "The Splunk access token\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sumoSourceAddress": {
                    "type": "string",
                    "description": "Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "awsPartnerEventSource",
                        "azurePartnerTopic"
                    ]
                }
            }
        },
        "auth0:index/OrganizationBranding:OrganizationBranding": {
            "properties": {
                "colors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Color scheme used to customize the login pages\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "logoUrl": {
                    "type": "string",
                    "description": "URL of logo to display on login page\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/OrganizationConnection:OrganizationConnection": {
            "properties": {
                "assignMembershipOnLogin": {
                    "type": "boolean",
                    "description": "When true, all users that log in\nwith this connection will be automatically granted membership in the\norganization. When false, users must be granted membership in the organization\nbefore logging in with this connection.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connectionId": {
                    "type": "string",
                    "description": "The connection ID of the connection to add to the\norganization\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "connectionId"
            ]
        },
        "auth0:index/ResourceServerScope:ResourceServerScope": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "String. Description of the permission (scope).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "description": "String. Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "auth0:index/RolePermission:RolePermission": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "String. Name of the permission (scope).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceServerIdentifier": {
                    "type": "string",
                    "description": "String. Unique identifier for the resource server.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "resourceServerIdentifier"
            ]
        },
        "auth0:index/TenantChangePassword:TenantChangePassword": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not to use the custom change password page.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "html": {
                    "type": "string",
                    "description": "String, HTML format with supported Liquid syntax. Customized content of the change password page.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "html"
            ]
        },
        "auth0:index/TenantErrorPage:TenantErrorPage": {
            "properties": {
                "html": {
                    "type": "string",
                    "description": "String, HTML format with supported Liquid syntax. Customized content of the error page.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "showLogLink": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not to show the link to logs as part of the default error page.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "String. URL to redirect to when an error occurs rather than showing the default error page.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "html",
                "showLogLink",
                "url"
            ]
        },
        "auth0:index/TenantFlags:TenantFlags": {
            "properties": {
                "changePwdFlowV1": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not to use the older v1 change password flow. Not recommended except for backward compatibility.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableClickjackProtectionHeaders": {
                    "type": "boolean",
                    "description": "Boolean. Indicated whether or not classic Universal Login prompts include additional security headers to prevent clickjacking.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableApisSection": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the APIs section is enabled for the tenant.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableClientConnections": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not all current connections should be enabled when a new client is created.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableCustomDomainInEmails": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the tenant allows custom domains in emails.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableDynamicClientRegistration": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the tenant allows dynamic client registration.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enableLegacyLogsSearchV2": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not to use the older v2 legacy logs search.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enablePipeline2": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not advanced API Authorization scenarios are enabled.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enablePublicSignupUserExistsError": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the public sign up process shows a user_exists error if the user already exists.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "universalLogin": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the tenant uses universal login.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "useScopeDescriptionsForConsent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "changePwdFlowV1",
                        "disableClickjackProtectionHeaders",
                        "enableApisSection",
                        "enableClientConnections",
                        "enableCustomDomainInEmails",
                        "enableDynamicClientRegistration",
                        "enableLegacyLogsSearchV2",
                        "enablePipeline2",
                        "enablePublicSignupUserExistsError",
                        "universalLogin",
                        "useScopeDescriptionsForConsent"
                    ]
                }
            }
        },
        "auth0:index/TenantGuardianMfaPage:TenantGuardianMfaPage": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not to use the custom Guardian page.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "html": {
                    "type": "string",
                    "description": "String, HTML format with supported Liquid syntax. Customized content of the Guardian page.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "html"
            ]
        },
        "auth0:index/TenantUniversalLogin:TenantUniversalLogin": {
            "properties": {
                "colors": {
                    "$ref": "#/types/auth0:index/TenantUniversalLoginColors:TenantUniversalLoginColors",
                    "description": "List(Resource). Configuration settings for Universal Login colors. See Universal Login - Colors.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "auth0:index/TenantUniversalLoginColors:TenantUniversalLoginColors": {
            "properties": {
                "pageBackground": {
                    "type": "string",
                    "description": "String, Hexadecimal. Background color of login pages.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "primary": {
                    "type": "string",
                    "description": "String, Hexadecimal. Primary button background color.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "pageBackground",
                        "primary"
                    ]
                }
            }
        },
        "auth0:index/TriggerBindingAction:TriggerBindingAction": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "The name of an action.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "Trigger ID.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the auth0 package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "clientId": {
                "type": "string"
            },
            "clientSecret": {
                "type": "string"
            },
            "debug": {
                "type": "boolean"
            },
            "domain": {
                "type": "string"
            }
        },
        "required": [
            "clientId",
            "clientSecret",
            "domain"
        ],
        "inputProperties": {
            "clientId": {
                "type": "string"
            },
            "clientSecret": {
                "type": "string"
            },
            "debug": {
                "type": "boolean",
                "defaultInfo": {
                    "environment": [
                        "AUTH0_DEBUG"
                    ]
                }
            },
            "domain": {
                "type": "string"
            }
        },
        "requiredInputs": [
            "clientId",
            "clientSecret",
            "domain"
        ]
    },
    "resources": {
        "auth0:index/action:Action": {
            "description": "Actions are secure, tenant-specific, versioned functions written in Node.js that\nexecute at certain points during the Auth0 runtime. Actions are used to\ncustomize and extend Auth0's capabilities with custom logic.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myAction = new auth0.Action(\"my_action\", {\n    code: `/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n exports.onExecutePostLogin = async (event, api) =\u003e {\n\t console.log(event)\n };\n`,\n    deploy: true,\n    supportedTriggers: {\n        id: \"post-login\",\n        version: \"v2\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_action = auth0.Action(\"myAction\",\n    code=\"\"\"/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n exports.onExecutePostLogin = async (event, api) =\u003e {\n\t console.log(event)\n };\n\n\"\"\",\n    deploy=True,\n    supported_triggers=auth0.ActionSupportedTriggersArgs(\n        id=\"post-login\",\n        version=\"v2\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myAction = new Auth0.Action(\"myAction\", new Auth0.ActionArgs\n        {\n            Code = @\"/**\n * Handler that will be called during the execution of a PostLogin flow.\n *\n * @param {Event} event - Details about the user and the context in which they are logging in.\n * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\n */\n exports.onExecutePostLogin = async (event, api) =\u003e {\n\t console.log(event)\n };\n\n\",\n            Deploy = true,\n            SupportedTriggers = new Auth0.Inputs.ActionSupportedTriggersArgs\n            {\n                Id = \"post-login\",\n                Version = \"v2\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewAction(ctx, \"myAction\", \u0026auth0.ActionArgs{\n\t\t\tCode: pulumi.String(fmt.Sprintf(\"%v%v%v%v%v%v%v%v%v%v\", \"/**\\n\", \" * Handler that will be called during the execution of a PostLogin flow.\\n\", \" *\\n\", \" * @param {Event} event - Details about the user and the context in which they are logging in.\\n\", \" * @param {PostLoginAPI} api - Interface whose methods can be used to change the behavior of the login.\\n\", \" */\\n\", \" exports.onExecutePostLogin = async (event, api) =\u003e {\\n\", \"\t console.log(event)\\n\", \" };\\n\", \"\\n\")),\n\t\t\tDeploy: pulumi.Bool(true),\n\t\t\tSupportedTriggers: \u0026ActionSupportedTriggersArgs{\n\t\t\t\tId:      pulumi.String(\"post-login\"),\n\t\t\t\tVersion: pulumi.String(\"v2\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAn action can be imported using the action's ID, e.g.\n\n\n\n```sh\n $ pulumi import auth0:index/action:Action example ...\n```\n\n ~\u003e For security reasons importing `secrets` is not allowed. Therefore it is advised to import the action without secrets and adding them back after the\n\naction has been imported. ",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The source code of the action.\n"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ActionDependency:ActionDependency"
                    },
                    "description": "List of third party npm modules, and their versions, that this action depends on\n"
                },
                "deploy": {
                    "type": "boolean",
                    "description": "Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately. Default is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Secret name.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "The Node runtime. For example `node16`, defaults to `node12`\n"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ActionSecret:ActionSecret"
                    },
                    "description": "List of secrets that are included in an action or a version of an action\n"
                },
                "supportedTriggers": {
                    "$ref": "#/types/auth0:index/ActionSupportedTriggers:ActionSupportedTriggers",
                    "description": "List of triggers that this action supports. At this time, an action can only target a single trigger at a time\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the action. This value is available if `deploy` is set to true\n"
                }
            },
            "required": [
                "code",
                "name",
                "runtime",
                "supportedTriggers",
                "versionId"
            ],
            "inputProperties": {
                "code": {
                    "type": "string",
                    "description": "The source code of the action.\n"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ActionDependency:ActionDependency"
                    },
                    "description": "List of third party npm modules, and their versions, that this action depends on\n"
                },
                "deploy": {
                    "type": "boolean",
                    "description": "Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately. Default is `false`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Secret name.\n"
                },
                "runtime": {
                    "type": "string",
                    "description": "The Node runtime. For example `node16`, defaults to `node12`\n"
                },
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ActionSecret:ActionSecret"
                    },
                    "description": "List of secrets that are included in an action or a version of an action\n"
                },
                "supportedTriggers": {
                    "$ref": "#/types/auth0:index/ActionSupportedTriggers:ActionSupportedTriggers",
                    "description": "List of triggers that this action supports. At this time, an action can only target a single trigger at a time\n"
                }
            },
            "requiredInputs": [
                "code",
                "supportedTriggers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Action resources.\n",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "The source code of the action.\n"
                    },
                    "dependencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/ActionDependency:ActionDependency"
                        },
                        "description": "List of third party npm modules, and their versions, that this action depends on\n"
                    },
                    "deploy": {
                        "type": "boolean",
                        "description": "Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately. Default is `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Secret name.\n"
                    },
                    "runtime": {
                        "type": "string",
                        "description": "The Node runtime. For example `node16`, defaults to `node12`\n"
                    },
                    "secrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/ActionSecret:ActionSecret"
                        },
                        "description": "List of secrets that are included in an action or a version of an action\n"
                    },
                    "supportedTriggers": {
                        "$ref": "#/types/auth0:index/ActionSupportedTriggers:ActionSupportedTriggers",
                        "description": "List of triggers that this action supports. At this time, an action can only target a single trigger at a time\n"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "Version ID of the action. This value is available if `deploy` is set to true\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/branding:Branding": {
            "description": "With Auth0, you can setting logo, color to maintain a consistent service brand. This resource allows you to manage a branding within your Auth0 tenant.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myBrand = new auth0.Branding(\"my_brand\", {\n    colors: {\n        pageBackground: \"#000000\",\n        primary: \"#0059d6\",\n    },\n    logoUrl: \"https://mycompany.org/logo.png\",\n    universalLogin: {\n        body: \"\u003c!DOCTYPE html\u003e\u003chtml\u003e\u003chead\u003e{%- auth0:head -%}\u003c/head\u003e\u003cbody\u003e{%- auth0:widget -%}\u003c/body\u003e\u003c/html\u003e\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_brand = auth0.Branding(\"myBrand\",\n    colors=auth0.BrandingColorsArgs(\n        page_background=\"#000000\",\n        primary=\"#0059d6\",\n    ),\n    logo_url=\"https://mycompany.org/logo.png\",\n    universal_login=auth0.BrandingUniversalLoginArgs(\n        body=\"\u003c!DOCTYPE html\u003e\u003chtml\u003e\u003chead\u003e{%- auth0:head -%}\u003c/head\u003e\u003cbody\u003e{%- auth0:widget -%}\u003c/body\u003e\u003c/html\u003e\",\n    ))\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myBrand = new Auth0.Branding(\"myBrand\", new Auth0.BrandingArgs\n        {\n            Colors = new Auth0.Inputs.BrandingColorsArgs\n            {\n                PageBackground = \"#000000\",\n                Primary = \"#0059d6\",\n            },\n            LogoUrl = \"https://mycompany.org/logo.png\",\n            UniversalLogin = new Auth0.Inputs.BrandingUniversalLoginArgs\n            {\n                Body = \"\u003c!DOCTYPE html\u003e\u003chtml\u003e\u003chead\u003e{%- auth0:head -%}\u003c/head\u003e\u003cbody\u003e{%- auth0:widget -%}\u003c/body\u003e\u003c/html\u003e\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewBranding(ctx, \"myBrand\", \u0026auth0.BrandingArgs{\n\t\t\tColors: \u0026BrandingColorsArgs{\n\t\t\t\tPageBackground: pulumi.String(\"#000000\"),\n\t\t\t\tPrimary:        pulumi.String(\"#0059d6\"),\n\t\t\t},\n\t\t\tLogoUrl: pulumi.String(\"https://mycompany.org/logo.png\"),\n\t\t\tUniversalLogin: \u0026BrandingUniversalLoginArgs{\n\t\t\t\tBody: pulumi.String(fmt.Sprintf(\"%v%v%v%v%v%v%v%v%v\", \"\u003c!DOCTYPE html\u003e\u003chtml\u003e\u003chead\u003e{\", \"%\", \"- auth0:head -\", \"%\", \"}\u003c/head\u003e\u003cbody\u003e{\", \"%\", \"- auth0:widget -\", \"%\", \"}\u003c/body\u003e\u003c/html\u003e\")),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "colors": {
                    "$ref": "#/types/auth0:index/BrandingColors:BrandingColors",
                    "description": "List(Resource). Configuration settings for colors for branding. See Colors.\n"
                },
                "faviconUrl": {
                    "type": "string",
                    "description": "String. URL for the favicon.\n"
                },
                "font": {
                    "$ref": "#/types/auth0:index/BrandingFont:BrandingFont",
                    "description": "List(Resource). Configuration settings to customize the font. See Font.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "String. URL of logo for branding.\n"
                },
                "universalLogin": {
                    "$ref": "#/types/auth0:index/BrandingUniversalLogin:BrandingUniversalLogin",
                    "description": "List(Resource). Configuration settings for Universal Login. See Universal Login. This capability can only be used if the tenant has [Custom Domains](https://auth0.com/docs/custom-domains) enabled.\n"
                }
            },
            "required": [
                "faviconUrl",
                "logoUrl"
            ],
            "inputProperties": {
                "colors": {
                    "$ref": "#/types/auth0:index/BrandingColors:BrandingColors",
                    "description": "List(Resource). Configuration settings for colors for branding. See Colors.\n"
                },
                "faviconUrl": {
                    "type": "string",
                    "description": "String. URL for the favicon.\n"
                },
                "font": {
                    "$ref": "#/types/auth0:index/BrandingFont:BrandingFont",
                    "description": "List(Resource). Configuration settings to customize the font. See Font.\n"
                },
                "logoUrl": {
                    "type": "string",
                    "description": "String. URL of logo for branding.\n"
                },
                "universalLogin": {
                    "$ref": "#/types/auth0:index/BrandingUniversalLogin:BrandingUniversalLogin",
                    "description": "List(Resource). Configuration settings for Universal Login. See Universal Login. This capability can only be used if the tenant has [Custom Domains](https://auth0.com/docs/custom-domains) enabled.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Branding resources.\n",
                "properties": {
                    "colors": {
                        "$ref": "#/types/auth0:index/BrandingColors:BrandingColors",
                        "description": "List(Resource). Configuration settings for colors for branding. See Colors.\n"
                    },
                    "faviconUrl": {
                        "type": "string",
                        "description": "String. URL for the favicon.\n"
                    },
                    "font": {
                        "$ref": "#/types/auth0:index/BrandingFont:BrandingFont",
                        "description": "List(Resource). Configuration settings to customize the font. See Font.\n"
                    },
                    "logoUrl": {
                        "type": "string",
                        "description": "String. URL of logo for branding.\n"
                    },
                    "universalLogin": {
                        "$ref": "#/types/auth0:index/BrandingUniversalLogin:BrandingUniversalLogin",
                        "description": "List(Resource). Configuration settings for Universal Login. See Universal Login. This capability can only be used if the tenant has [Custom Domains](https://auth0.com/docs/custom-domains) enabled.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/client:Client": {
            "description": "With this resource, you can set up applications that use Auth0 for authentication and configure allowed callback URLs and secrets for these applications. Depending on your plan, you may also configure add-ons to allow your application to call another application's API (such as Firebase and AWS) on behalf of an authenticated user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myClient = new auth0.Client(\"my_client\", {\n    addons: {\n        firebase: {\n            client_email: \"john.doe@example.com\",\n            lifetime_in_seconds: 1,\n            private_key: \"wer\",\n            private_key_id: \"qwreerwerwe\",\n        },\n        samlp: {\n            audience: \"https://example.com/saml\",\n            createUpnClaim: false,\n            mapIdentities: false,\n            mapUnknownClaimsAsIs: false,\n            mappings: {\n                email: \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\",\n                name: \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\",\n            },\n            nameIdentifierFormat: \"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\",\n            nameIdentifierProbes: [\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\"],\n            passthroughClaimsWithNoMapping: false,\n        },\n    },\n    allowedClients: [\"https://allowed.example.com\"],\n    allowedLogoutUrls: [\"https://example.com\"],\n    allowedOrigins: [\"https://example.com\"],\n    appType: \"non_interactive\",\n    callbacks: [\"https://example.com/callback\"],\n    clientMetadata: {\n        foo: \"zoo\",\n    },\n    customLoginPageOn: true,\n    description: \"Test Applications Long Description\",\n    grantTypes: [\n        \"authorization_code\",\n        \"http://auth0.com/oauth/grant-type/password-realm\",\n        \"implicit\",\n        \"password\",\n        \"refresh_token\",\n    ],\n    isFirstParty: true,\n    isTokenEndpointIpHeaderTrusted: true,\n    jwtConfiguration: {\n        alg: \"RS256\",\n        lifetimeInSeconds: 300,\n        scopes: {\n            foo: \"bar\",\n        },\n        secretEncoded: true,\n    },\n    mobile: {\n        ios: {\n            appBundleIdentifier: \"com.my.bundle.id\",\n            teamId: \"9JA89QQLNQ\",\n        },\n    },\n    oidcConformant: false,\n    organizationRequireBehavior: \"no_prompt\",\n    organizationUsage: \"deny\",\n    refreshToken: {\n        expirationType: \"expiring\",\n        idleTokenLifetime: 1296000,\n        infiniteIdleTokenLifetime: true,\n        infiniteTokenLifetime: false,\n        leeway: 15,\n        rotationType: \"rotating\",\n        tokenLifetime: 84600,\n    },\n    tokenEndpointAuthMethod: \"client_secret_post\",\n    webOrigins: [\"https://example.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_client = auth0.Client(\"myClient\",\n    addons=auth0.ClientAddonsArgs(\n        firebase={\n            \"clientEmail\": \"john.doe@example.com\",\n            \"lifetimeInSeconds\": 1,\n            \"privateKey\": \"wer\",\n            \"privateKeyId\": \"qwreerwerwe\",\n        },\n        samlp=auth0.ClientAddonsSamlpArgs(\n            audience=\"https://example.com/saml\",\n            create_upn_claim=False,\n            map_identities=False,\n            map_unknown_claims_as_is=False,\n            mappings={\n                \"email\": \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\",\n                \"name\": \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\",\n            },\n            name_identifier_format=\"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\",\n            name_identifier_probes=[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\"],\n            passthrough_claims_with_no_mapping=False,\n        ),\n    ),\n    allowed_clients=[\"https://allowed.example.com\"],\n    allowed_logout_urls=[\"https://example.com\"],\n    allowed_origins=[\"https://example.com\"],\n    app_type=\"non_interactive\",\n    callbacks=[\"https://example.com/callback\"],\n    client_metadata={\n        \"foo\": \"zoo\",\n    },\n    custom_login_page_on=True,\n    description=\"Test Applications Long Description\",\n    grant_types=[\n        \"authorization_code\",\n        \"http://auth0.com/oauth/grant-type/password-realm\",\n        \"implicit\",\n        \"password\",\n        \"refresh_token\",\n    ],\n    is_first_party=True,\n    is_token_endpoint_ip_header_trusted=True,\n    jwt_configuration=auth0.ClientJwtConfigurationArgs(\n        alg=\"RS256\",\n        lifetime_in_seconds=300,\n        scopes={\n            \"foo\": \"bar\",\n        },\n        secret_encoded=True,\n    ),\n    mobile=auth0.ClientMobileArgs(\n        ios=auth0.ClientMobileIosArgs(\n            app_bundle_identifier=\"com.my.bundle.id\",\n            team_id=\"9JA89QQLNQ\",\n        ),\n    ),\n    oidc_conformant=False,\n    organization_require_behavior=\"no_prompt\",\n    organization_usage=\"deny\",\n    refresh_token=auth0.ClientRefreshTokenArgs(\n        expiration_type=\"expiring\",\n        idle_token_lifetime=1296000,\n        infinite_idle_token_lifetime=True,\n        infinite_token_lifetime=False,\n        leeway=15,\n        rotation_type=\"rotating\",\n        token_lifetime=84600,\n    ),\n    token_endpoint_auth_method=\"client_secret_post\",\n    web_origins=[\"https://example.com\"])\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myClient = new Auth0.Client(\"myClient\", new Auth0.ClientArgs\n        {\n            Addons = new Auth0.Inputs.ClientAddonsArgs\n            {\n                Firebase = \n                {\n                    { \"clientEmail\", \"john.doe@example.com\" },\n                    { \"lifetimeInSeconds\", 1 },\n                    { \"privateKey\", \"wer\" },\n                    { \"privateKeyId\", \"qwreerwerwe\" },\n                },\n                Samlp = new Auth0.Inputs.ClientAddonsSamlpArgs\n                {\n                    Audience = \"https://example.com/saml\",\n                    CreateUpnClaim = false,\n                    MapIdentities = false,\n                    MapUnknownClaimsAsIs = false,\n                    Mappings = \n                    {\n                        { \"email\", \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\" },\n                        { \"name\", \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\" },\n                    },\n                    NameIdentifierFormat = \"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\",\n                    NameIdentifierProbes = \n                    {\n                        \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\",\n                    },\n                    PassthroughClaimsWithNoMapping = false,\n                },\n            },\n            AllowedClients = \n            {\n                \"https://allowed.example.com\",\n            },\n            AllowedLogoutUrls = \n            {\n                \"https://example.com\",\n            },\n            AllowedOrigins = \n            {\n                \"https://example.com\",\n            },\n            AppType = \"non_interactive\",\n            Callbacks = \n            {\n                \"https://example.com/callback\",\n            },\n            ClientMetadata = \n            {\n                { \"foo\", \"zoo\" },\n            },\n            CustomLoginPageOn = true,\n            Description = \"Test Applications Long Description\",\n            GrantTypes = \n            {\n                \"authorization_code\",\n                \"http://auth0.com/oauth/grant-type/password-realm\",\n                \"implicit\",\n                \"password\",\n                \"refresh_token\",\n            },\n            IsFirstParty = true,\n            IsTokenEndpointIpHeaderTrusted = true,\n            JwtConfiguration = new Auth0.Inputs.ClientJwtConfigurationArgs\n            {\n                Alg = \"RS256\",\n                LifetimeInSeconds = 300,\n                Scopes = \n                {\n                    { \"foo\", \"bar\" },\n                },\n                SecretEncoded = true,\n            },\n            Mobile = new Auth0.Inputs.ClientMobileArgs\n            {\n                Ios = new Auth0.Inputs.ClientMobileIosArgs\n                {\n                    AppBundleIdentifier = \"com.my.bundle.id\",\n                    TeamId = \"9JA89QQLNQ\",\n                },\n            },\n            OidcConformant = false,\n            OrganizationRequireBehavior = \"no_prompt\",\n            OrganizationUsage = \"deny\",\n            RefreshToken = new Auth0.Inputs.ClientRefreshTokenArgs\n            {\n                ExpirationType = \"expiring\",\n                IdleTokenLifetime = 1296000,\n                InfiniteIdleTokenLifetime = true,\n                InfiniteTokenLifetime = false,\n                Leeway = 15,\n                RotationType = \"rotating\",\n                TokenLifetime = 84600,\n            },\n            TokenEndpointAuthMethod = \"client_secret_post\",\n            WebOrigins = \n            {\n                \"https://example.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewClient(ctx, \"myClient\", \u0026auth0.ClientArgs{\n\t\t\tAddons: \u0026ClientAddonsArgs{\n\t\t\t\tFirebase: pulumi.AnyMap{\n\t\t\t\t\t\"clientEmail\":       pulumi.Any(\"john.doe@example.com\"),\n\t\t\t\t\t\"lifetimeInSeconds\": pulumi.Any(1),\n\t\t\t\t\t\"privateKey\":        pulumi.Any(\"wer\"),\n\t\t\t\t\t\"privateKeyId\":      pulumi.Any(\"qwreerwerwe\"),\n\t\t\t\t},\n\t\t\t\tSamlp: \u0026ClientAddonsSamlpArgs{\n\t\t\t\t\tAudience:             pulumi.String(\"https://example.com/saml\"),\n\t\t\t\t\tCreateUpnClaim:       pulumi.Bool(false),\n\t\t\t\t\tMapIdentities:        pulumi.Bool(false),\n\t\t\t\t\tMapUnknownClaimsAsIs: pulumi.Bool(false),\n\t\t\t\t\tMappings: pulumi.AnyMap{\n\t\t\t\t\t\t\"email\": pulumi.Any(\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\"),\n\t\t\t\t\t\t\"name\":  pulumi.Any(\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"),\n\t\t\t\t\t},\n\t\t\t\t\tNameIdentifierFormat: pulumi.String(\"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\"),\n\t\t\t\t\tNameIdentifierProbes: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\"),\n\t\t\t\t\t},\n\t\t\t\t\tPassthroughClaimsWithNoMapping: pulumi.Bool(false),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAllowedClients: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://allowed.example.com\"),\n\t\t\t},\n\t\t\tAllowedLogoutUrls: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://example.com\"),\n\t\t\t},\n\t\t\tAllowedOrigins: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://example.com\"),\n\t\t\t},\n\t\t\tAppType: pulumi.String(\"non_interactive\"),\n\t\t\tCallbacks: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://example.com/callback\"),\n\t\t\t},\n\t\t\tClientMetadata: pulumi.AnyMap{\n\t\t\t\t\"foo\": pulumi.Any(\"zoo\"),\n\t\t\t},\n\t\t\tCustomLoginPageOn: pulumi.Bool(true),\n\t\t\tDescription:       pulumi.String(\"Test Applications Long Description\"),\n\t\t\tGrantTypes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"authorization_code\"),\n\t\t\t\tpulumi.String(\"http://auth0.com/oauth/grant-type/password-realm\"),\n\t\t\t\tpulumi.String(\"implicit\"),\n\t\t\t\tpulumi.String(\"password\"),\n\t\t\t\tpulumi.String(\"refresh_token\"),\n\t\t\t},\n\t\t\tIsFirstParty:                   pulumi.Bool(true),\n\t\t\tIsTokenEndpointIpHeaderTrusted: pulumi.Bool(true),\n\t\t\tJwtConfiguration: \u0026ClientJwtConfigurationArgs{\n\t\t\t\tAlg:               pulumi.String(\"RS256\"),\n\t\t\t\tLifetimeInSeconds: pulumi.Int(300),\n\t\t\t\tScopes: pulumi.StringMap{\n\t\t\t\t\t\"foo\": pulumi.String(\"bar\"),\n\t\t\t\t},\n\t\t\t\tSecretEncoded: pulumi.Bool(true),\n\t\t\t},\n\t\t\tMobile: \u0026ClientMobileArgs{\n\t\t\t\tIos: \u0026ClientMobileIosArgs{\n\t\t\t\t\tAppBundleIdentifier: pulumi.String(\"com.my.bundle.id\"),\n\t\t\t\t\tTeamId:              pulumi.String(\"9JA89QQLNQ\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tOidcConformant:              pulumi.Bool(false),\n\t\t\tOrganizationRequireBehavior: pulumi.String(\"no_prompt\"),\n\t\t\tOrganizationUsage:           pulumi.String(\"deny\"),\n\t\t\tRefreshToken: \u0026ClientRefreshTokenArgs{\n\t\t\t\tExpirationType:            pulumi.String(\"expiring\"),\n\t\t\t\tIdleTokenLifetime:         pulumi.Int(1296000),\n\t\t\t\tInfiniteIdleTokenLifetime: pulumi.Bool(true),\n\t\t\t\tInfiniteTokenLifetime:     pulumi.Bool(false),\n\t\t\t\tLeeway:                    pulumi.Int(15),\n\t\t\t\tRotationType:              pulumi.String(\"rotating\"),\n\t\t\t\tTokenLifetime:             pulumi.Int(84600),\n\t\t\t},\n\t\t\tTokenEndpointAuthMethod: pulumi.String(\"client_secret_post\"),\n\t\t\tWebOrigins: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "addons": {
                    "$ref": "#/types/auth0:index/ClientAddons:ClientAddons",
                    "description": "List(Resource). Configuration settings for add-ons for this client. For details, see Add-ons.\n"
                },
                "allowedClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.\n"
                },
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). URLs that Auth0 may redirect to after logout.\n"
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.\n"
                },
                "appType": {
                    "type": "string",
                    "description": "String. Type of application the client represents. Options include `native`, `spa`, `regular_web`, `non_interactive`, `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.\n"
                },
                "callbacks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "String. ID of the client.\n* `client_secret`\u003csup\u003e1\u003c/sup\u003e - String. Secret for the client; keep this private.\n"
                },
                "clientMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Map(String)\n"
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientSecretRotationTrigger": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Map.\n"
                },
                "crossOriginAuth": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the client can be used to make cross-origin authentication requests.\n"
                },
                "crossOriginLoc": {
                    "type": "string",
                    "description": "String. URL for the location on your site where the cross-origin verification takes place for the cross-origin auth flow. Used when performing auth in your own domain instead of through the Auth0-hosted login page.\n"
                },
                "customLoginPage": {
                    "type": "string",
                    "description": "String. Content of the custom login page.\n"
                },
                "customLoginPageOn": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not a custom login page is to be used.\n"
                },
                "description": {
                    "type": "string",
                    "description": "String, (Max length = 140 characters). Description of the purpose of the client.\n",
                    "default": "Managed by Pulumi"
                },
                "encryptionKey": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map(String).\n"
                },
                "formTemplate": {
                    "type": "string",
                    "description": "String. Form template for WS-Federation protocol.\n"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). Types of grants that this client is authorized to use.\n"
                },
                "initiateLoginUri": {
                    "type": "string"
                },
                "isFirstParty": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not this client is a first-party client.\n"
                },
                "isTokenEndpointIpHeaderTrusted": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the token endpoint IP header is trusted.\n"
                },
                "jwtConfiguration": {
                    "$ref": "#/types/auth0:index/ClientJwtConfiguration:ClientJwtConfiguration",
                    "description": "List(Resource). Configuration settings for the JWTs issued for this client. For details, see JWT Configuration.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "String. URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.\n"
                },
                "mobile": {
                    "$ref": "#/types/auth0:index/ClientMobile:ClientMobile",
                    "description": "List(Resource). Configuration settings for mobile native applications. For details, see Mobile.\n"
                },
                "name": {
                    "type": "string",
                    "description": "String. Name of the client.\n"
                },
                "oidcConformant": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not this client will conform to strict OIDC specifications.\n"
                },
                "organizationRequireBehavior": {
                    "type": "string",
                    "description": "String. Defines how to proceed during an authentication transaction when `organization_usage = \"require\"`. Can be `no_prompt` (default) or `pre_login_prompt`.\n"
                },
                "organizationUsage": {
                    "type": "string",
                    "description": "String. Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.\n"
                },
                "refreshToken": {
                    "$ref": "#/types/auth0:index/ClientRefreshToken:ClientRefreshToken",
                    "description": "List(Resource). Configuration settings for the refresh tokens issued for this client.  For details, see Refresh Token Configuration.\n"
                },
                "sso": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the client should use Auth0 rather than the IdP to perform Single Sign-On (SSO). True = Use Auth0.\n"
                },
                "ssoDisabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not SSO is disabled.\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "String. Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).\n"
                },
                "webOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). URLs that represent valid web origins for use with web message response mode.\n"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "customLoginPageOn",
                "description",
                "grantTypes",
                "isFirstParty",
                "isTokenEndpointIpHeaderTrusted",
                "jwtConfiguration",
                "name",
                "oidcConformant",
                "refreshToken",
                "tokenEndpointAuthMethod"
            ],
            "inputProperties": {
                "addons": {
                    "$ref": "#/types/auth0:index/ClientAddons:ClientAddons",
                    "description": "List(Resource). Configuration settings for add-ons for this client. For details, see Add-ons.\n"
                },
                "allowedClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.\n"
                },
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). URLs that Auth0 may redirect to after logout.\n"
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.\n"
                },
                "appType": {
                    "type": "string",
                    "description": "String. Type of application the client represents. Options include `native`, `spa`, `regular_web`, `non_interactive`, `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.\n"
                },
                "callbacks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.\n"
                },
                "clientMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Map(String)\n"
                },
                "clientSecretRotationTrigger": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Map.\n"
                },
                "crossOriginAuth": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the client can be used to make cross-origin authentication requests.\n"
                },
                "crossOriginLoc": {
                    "type": "string",
                    "description": "String. URL for the location on your site where the cross-origin verification takes place for the cross-origin auth flow. Used when performing auth in your own domain instead of through the Auth0-hosted login page.\n"
                },
                "customLoginPage": {
                    "type": "string",
                    "description": "String. Content of the custom login page.\n"
                },
                "customLoginPageOn": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not a custom login page is to be used.\n"
                },
                "description": {
                    "type": "string",
                    "description": "String, (Max length = 140 characters). Description of the purpose of the client.\n",
                    "default": "Managed by Pulumi"
                },
                "encryptionKey": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map(String).\n"
                },
                "formTemplate": {
                    "type": "string",
                    "description": "String. Form template for WS-Federation protocol.\n"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). Types of grants that this client is authorized to use.\n"
                },
                "initiateLoginUri": {
                    "type": "string"
                },
                "isFirstParty": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not this client is a first-party client.\n"
                },
                "isTokenEndpointIpHeaderTrusted": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the token endpoint IP header is trusted.\n"
                },
                "jwtConfiguration": {
                    "$ref": "#/types/auth0:index/ClientJwtConfiguration:ClientJwtConfiguration",
                    "description": "List(Resource). Configuration settings for the JWTs issued for this client. For details, see JWT Configuration.\n"
                },
                "logoUri": {
                    "type": "string",
                    "description": "String. URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.\n"
                },
                "mobile": {
                    "$ref": "#/types/auth0:index/ClientMobile:ClientMobile",
                    "description": "List(Resource). Configuration settings for mobile native applications. For details, see Mobile.\n"
                },
                "name": {
                    "type": "string",
                    "description": "String. Name of the client.\n"
                },
                "oidcConformant": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not this client will conform to strict OIDC specifications.\n"
                },
                "organizationRequireBehavior": {
                    "type": "string",
                    "description": "String. Defines how to proceed during an authentication transaction when `organization_usage = \"require\"`. Can be `no_prompt` (default) or `pre_login_prompt`.\n"
                },
                "organizationUsage": {
                    "type": "string",
                    "description": "String. Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.\n"
                },
                "refreshToken": {
                    "$ref": "#/types/auth0:index/ClientRefreshToken:ClientRefreshToken",
                    "description": "List(Resource). Configuration settings for the refresh tokens issued for this client.  For details, see Refresh Token Configuration.\n"
                },
                "sso": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the client should use Auth0 rather than the IdP to perform Single Sign-On (SSO). True = Use Auth0.\n"
                },
                "ssoDisabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not SSO is disabled.\n"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string",
                    "description": "String. Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).\n"
                },
                "webOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). URLs that represent valid web origins for use with web message response mode.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Client resources.\n",
                "properties": {
                    "addons": {
                        "$ref": "#/types/auth0:index/ClientAddons:ClientAddons",
                        "description": "List(Resource). Configuration settings for add-ons for this client. For details, see Add-ons.\n"
                    },
                    "allowedClients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List(String). List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.\n"
                    },
                    "allowedLogoutUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List(String). URLs that Auth0 may redirect to after logout.\n"
                    },
                    "allowedOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List(String). URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.\n"
                    },
                    "appType": {
                        "type": "string",
                        "description": "String. Type of application the client represents. Options include `native`, `spa`, `regular_web`, `non_interactive`, `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.\n"
                    },
                    "callbacks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List(String). URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "String. ID of the client.\n* `client_secret`\u003csup\u003e1\u003c/sup\u003e - String. Secret for the client; keep this private.\n"
                    },
                    "clientMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Map(String)\n"
                    },
                    "clientSecret": {
                        "type": "string"
                    },
                    "clientSecretRotationTrigger": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Map.\n"
                    },
                    "crossOriginAuth": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not the client can be used to make cross-origin authentication requests.\n"
                    },
                    "crossOriginLoc": {
                        "type": "string",
                        "description": "String. URL for the location on your site where the cross-origin verification takes place for the cross-origin auth flow. Used when performing auth in your own domain instead of through the Auth0-hosted login page.\n"
                    },
                    "customLoginPage": {
                        "type": "string",
                        "description": "String. Content of the custom login page.\n"
                    },
                    "customLoginPageOn": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not a custom login page is to be used.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "String, (Max length = 140 characters). Description of the purpose of the client.\n",
                        "default": "Managed by Pulumi"
                    },
                    "encryptionKey": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map(String).\n"
                    },
                    "formTemplate": {
                        "type": "string",
                        "description": "String. Form template for WS-Federation protocol.\n"
                    },
                    "grantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List(String). Types of grants that this client is authorized to use.\n"
                    },
                    "initiateLoginUri": {
                        "type": "string"
                    },
                    "isFirstParty": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not this client is a first-party client.\n"
                    },
                    "isTokenEndpointIpHeaderTrusted": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not the token endpoint IP header is trusted.\n"
                    },
                    "jwtConfiguration": {
                        "$ref": "#/types/auth0:index/ClientJwtConfiguration:ClientJwtConfiguration",
                        "description": "List(Resource). Configuration settings for the JWTs issued for this client. For details, see JWT Configuration.\n"
                    },
                    "logoUri": {
                        "type": "string",
                        "description": "String. URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.\n"
                    },
                    "mobile": {
                        "$ref": "#/types/auth0:index/ClientMobile:ClientMobile",
                        "description": "List(Resource). Configuration settings for mobile native applications. For details, see Mobile.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "String. Name of the client.\n"
                    },
                    "oidcConformant": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not this client will conform to strict OIDC specifications.\n"
                    },
                    "organizationRequireBehavior": {
                        "type": "string",
                        "description": "String. Defines how to proceed during an authentication transaction when `organization_usage = \"require\"`. Can be `no_prompt` (default) or `pre_login_prompt`.\n"
                    },
                    "organizationUsage": {
                        "type": "string",
                        "description": "String. Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.\n"
                    },
                    "refreshToken": {
                        "$ref": "#/types/auth0:index/ClientRefreshToken:ClientRefreshToken",
                        "description": "List(Resource). Configuration settings for the refresh tokens issued for this client.  For details, see Refresh Token Configuration.\n"
                    },
                    "sso": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not the client should use Auth0 rather than the IdP to perform Single Sign-On (SSO). True = Use Auth0.\n"
                    },
                    "ssoDisabled": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not SSO is disabled.\n"
                    },
                    "tokenEndpointAuthMethod": {
                        "type": "string",
                        "description": "String. Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).\n"
                    },
                    "webOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List(String). URLs that represent valid web origins for use with web message response mode.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/clientGrant:ClientGrant": {
            "description": "Auth0 uses various grant types, or methods by which you grant limited access to your resources to another entity without exposing credentials. The OAuth 2.0 protocol supports several types of grants, which allow different types of access. This resource allows you to create and manage client grants used with configured Auth0 clients.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myClient = new auth0.Client(\"my_client\", {});\nconst myResourceServer = new auth0.ResourceServer(\"my_resource_server\", {\n    identifier: \"https://api.example.com/client-grant\",\n    scopes: [\n        {\n            description: \"Create foos\",\n            value: \"create:foo\",\n        },\n        {\n            description: \"Create bars\",\n            value: \"create:bar\",\n        },\n    ],\n});\nconst myClientGrant = new auth0.ClientGrant(\"my_client_grant\", {\n    audience: myResourceServer.identifier,\n    clientId: myClient.id,\n    scopes: [\"create:foo\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_client = auth0.Client(\"myClient\")\nmy_resource_server = auth0.ResourceServer(\"myResourceServer\",\n    identifier=\"https://api.example.com/client-grant\",\n    scopes=[\n        auth0.ResourceServerScopeArgs(\n            description=\"Create foos\",\n            value=\"create:foo\",\n        ),\n        auth0.ResourceServerScopeArgs(\n            description=\"Create bars\",\n            value=\"create:bar\",\n        ),\n    ])\nmy_client_grant = auth0.ClientGrant(\"myClientGrant\",\n    audience=my_resource_server.identifier,\n    client_id=my_client.id,\n    scopes=[\"create:foo\"])\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myClient = new Auth0.Client(\"myClient\", new Auth0.ClientArgs\n        {\n        });\n        var myResourceServer = new Auth0.ResourceServer(\"myResourceServer\", new Auth0.ResourceServerArgs\n        {\n            Identifier = \"https://api.example.com/client-grant\",\n            Scopes = \n            {\n                new Auth0.Inputs.ResourceServerScopeArgs\n                {\n                    Description = \"Create foos\",\n                    Value = \"create:foo\",\n                },\n                new Auth0.Inputs.ResourceServerScopeArgs\n                {\n                    Description = \"Create bars\",\n                    Value = \"create:bar\",\n                },\n            },\n        });\n        var myClientGrant = new Auth0.ClientGrant(\"myClientGrant\", new Auth0.ClientGrantArgs\n        {\n            Audience = myResourceServer.Identifier,\n            ClientId = myClient.Id,\n            Scopes = \n            {\n                \"create:foo\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyClient, err := auth0.NewClient(ctx, \"myClient\", nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyResourceServer, err := auth0.NewResourceServer(ctx, \"myResourceServer\", \u0026auth0.ResourceServerArgs{\n\t\t\tIdentifier: pulumi.String(\"https://api.example.com/client-grant\"),\n\t\t\tScopes: ResourceServerScopeArray{\n\t\t\t\t\u0026ResourceServerScopeArgs{\n\t\t\t\t\tDescription: pulumi.String(\"Create foos\"),\n\t\t\t\t\tValue:       pulumi.String(\"create:foo\"),\n\t\t\t\t},\n\t\t\t\t\u0026ResourceServerScopeArgs{\n\t\t\t\t\tDescription: pulumi.String(\"Create bars\"),\n\t\t\t\t\tValue:       pulumi.String(\"create:bar\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewClientGrant(ctx, \"myClientGrant\", \u0026auth0.ClientGrantArgs{\n\t\t\tAudience: myResourceServer.Identifier,\n\t\t\tClientId: myClient.ID(),\n\t\t\tScopes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"create:foo\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nClient grants can be imported using the grant ID (Application -\u003e APIs -\u003e Expand the required API)\n\n```sh\n $ pulumi import auth0:index/clientGrant:ClientGrant example cgr_XXXXXXXXXXXXXXXX\n```\n\n ",
            "properties": {
                "audience": {
                    "type": "string",
                    "description": "String. Audience or API Identifier for this grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "String. ID of the client for this grant.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). Permissions (scopes) included in this grant.\n"
                }
            },
            "required": [
                "audience",
                "clientId",
                "scopes"
            ],
            "inputProperties": {
                "audience": {
                    "type": "string",
                    "description": "String. Audience or API Identifier for this grant.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "String. ID of the client for this grant.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). Permissions (scopes) included in this grant.\n"
                }
            },
            "requiredInputs": [
                "audience",
                "clientId",
                "scopes"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ClientGrant resources.\n",
                "properties": {
                    "audience": {
                        "type": "string",
                        "description": "String. Audience or API Identifier for this grant.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "String. ID of the client for this grant.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List(String). Permissions (scopes) included in this grant.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/connection:Connection": {
            "description": "With Auth0, you can define sources of users, otherwise known as connections, which may include identity providers (such as Google or LinkedIn), databases, or passwordless authentication methods. This resource allows you to configure and manage connections to be used with your clients and users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myConnection = new auth0.Connection(\"my_connection\", {\n    options: {\n        bruteForceProtection: true,\n        configuration: {\n            bar: \"baz\",\n            foo: \"bar\",\n        },\n        customScripts: {\n            get_user: `function getByEmail (email, callback) {\n  return callback(new Error(\"Whoops!\"))\n}\n`,\n        },\n        enabledDatabaseCustomization: true,\n        passwordHistories: [{\n            enable: true,\n            size: 3,\n        }],\n        passwordPolicy: \"excellent\",\n    },\n    strategy: \"auth0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_connection = auth0.Connection(\"myConnection\",\n    options=auth0.ConnectionOptionsArgs(\n        brute_force_protection=True,\n        configuration={\n            \"bar\": \"baz\",\n            \"foo\": \"bar\",\n        },\n        custom_scripts={\n            \"getUser\": \"\"\"function getByEmail (email, callback) {\n  return callback(new Error(\"Whoops!\"))\n}\n\n\"\"\",\n        },\n        enabled_database_customization=True,\n        password_histories=[auth0.ConnectionOptionsPasswordHistoryArgs(\n            enable=True,\n            size=3,\n        )],\n        password_policy=\"excellent\",\n    ),\n    strategy=\"auth0\")\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myConnection = new Auth0.Connection(\"myConnection\", new Auth0.ConnectionArgs\n        {\n            Options = new Auth0.Inputs.ConnectionOptionsArgs\n            {\n                BruteForceProtection = true,\n                Configuration = \n                {\n                    { \"bar\", \"baz\" },\n                    { \"foo\", \"bar\" },\n                },\n                CustomScripts = \n                {\n                    { \"getUser\", @\"function getByEmail (email, callback) {\n  return callback(new Error(\"\"Whoops!\"\"))\n}\n\n\" },\n                },\n                EnabledDatabaseCustomization = true,\n                PasswordHistories = \n                {\n                    new Auth0.Inputs.ConnectionOptionsPasswordHistoryArgs\n                    {\n                        Enable = true,\n                        Size = 3,\n                    },\n                },\n                PasswordPolicy = \"excellent\",\n            },\n            Strategy = \"auth0\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewConnection(ctx, \"myConnection\", \u0026auth0.ConnectionArgs{\n\t\t\tOptions: \u0026ConnectionOptionsArgs{\n\t\t\t\tBruteForceProtection: pulumi.Bool(true),\n\t\t\t\tConfiguration: pulumi.StringMap{\n\t\t\t\t\t\"bar\": pulumi.String(\"baz\"),\n\t\t\t\t\t\"foo\": pulumi.String(\"bar\"),\n\t\t\t\t},\n\t\t\t\tCustomScripts: pulumi.StringMap{\n\t\t\t\t\t\"getUser\": pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"function getByEmail (email, callback) {\\n\", \"  return callback(new Error(\\\"Whoops!\\\"))\\n\", \"}\\n\", \"\\n\")),\n\t\t\t\t},\n\t\t\t\tEnabledDatabaseCustomization: pulumi.Bool(true),\n\t\t\t\tPasswordHistories: ConnectionOptionsPasswordHistoryArray{\n\t\t\t\t\t\u0026ConnectionOptionsPasswordHistoryArgs{\n\t\t\t\t\t\tEnable: pulumi.Bool(true),\n\t\t\t\t\t\tSize:   pulumi.Int(3),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tPasswordPolicy: pulumi.String(\"excellent\"),\n\t\t\t},\n\t\t\tStrategy: pulumi.String(\"auth0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n\u003e The Auth0 dashboard displays only one connection per social provider. Although the Auth0 Management API allowes the creation of multiple connections per strategy, the additional connections may not be visible in the Auth0 dashboard.\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Name used in login screen\n"
                },
                "enabledClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the clients for which the connection is enabled. If not specified, no clients are enabled.\n"
                },
                "isDomainConnection": {
                    "type": "boolean",
                    "description": "Indicates whether or not the connection is domain level.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection.\n"
                },
                "options": {
                    "$ref": "#/types/auth0:index/ConnectionOptions:ConnectionOptions",
                    "description": "Configuration settings for connection options. For details, see Options.\n"
                },
                "realms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the realms for which the connection will be used (i.e., email domains). If not specified, the connection name is added as the realm.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "Type of the connection, which indicates the identity provider. Options include `ad`, `adfs`, `amazon`, `aol`, `apple`, `auth0`, `auth0-adldap`, `auth0-oidc`, `baidu`, `bitbucket`, `bitly`, `box`, `custom`, `daccount`, `dropbox`, `dwolla`, `email`, `evernote`, `evernote-sandbox`, `exact`, `facebook`, `fitbit`, `flickr`, `github`, `google-apps`, `google-oauth2`, `guardian`, `instagram`, `ip`, `line`, `linkedin`, `miicard`, `oauth1`, `oauth2`, `office365`, `oidc`, `paypal`, `paypal-sandbox`, `pingfederate`, `planningcenter`, `renren`, `salesforce`, `salesforce-community`, `salesforce-sandbox` `samlp`, `sharepoint`, `shopify`, `sms`, `soundcloud`, `thecity`, `thecity-sandbox`, `thirtysevensignals`, `twitter`, `untappd`, `vkontakte`, `waad`, `weibo`, `windowslive`, `wordpress`, `yahoo`, `yammer`, `yandex`.\n"
                },
                "strategyVersion": {
                    "type": "string",
                    "description": "Version 1 is deprecated, use version 2.\n"
                },
                "validation": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Validation of the minimum and maximum values allowed for a user to have as username. For details, see Validation.\n"
                }
            },
            "required": [
                "enabledClients",
                "isDomainConnection",
                "name",
                "realms",
                "strategy",
                "strategyVersion"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Name used in login screen\n"
                },
                "enabledClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IDs of the clients for which the connection is enabled. If not specified, no clients are enabled.\n"
                },
                "isDomainConnection": {
                    "type": "boolean",
                    "description": "Indicates whether or not the connection is domain level.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection.\n"
                },
                "options": {
                    "$ref": "#/types/auth0:index/ConnectionOptions:ConnectionOptions",
                    "description": "Configuration settings for connection options. For details, see Options.\n"
                },
                "realms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Defines the realms for which the connection will be used (i.e., email domains). If not specified, the connection name is added as the realm.\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "Type of the connection, which indicates the identity provider. Options include `ad`, `adfs`, `amazon`, `aol`, `apple`, `auth0`, `auth0-adldap`, `auth0-oidc`, `baidu`, `bitbucket`, `bitly`, `box`, `custom`, `daccount`, `dropbox`, `dwolla`, `email`, `evernote`, `evernote-sandbox`, `exact`, `facebook`, `fitbit`, `flickr`, `github`, `google-apps`, `google-oauth2`, `guardian`, `instagram`, `ip`, `line`, `linkedin`, `miicard`, `oauth1`, `oauth2`, `office365`, `oidc`, `paypal`, `paypal-sandbox`, `pingfederate`, `planningcenter`, `renren`, `salesforce`, `salesforce-community`, `salesforce-sandbox` `samlp`, `sharepoint`, `shopify`, `sms`, `soundcloud`, `thecity`, `thecity-sandbox`, `thirtysevensignals`, `twitter`, `untappd`, `vkontakte`, `waad`, `weibo`, `windowslive`, `wordpress`, `yahoo`, `yammer`, `yandex`.\n"
                },
                "strategyVersion": {
                    "type": "string",
                    "description": "Version 1 is deprecated, use version 2.\n"
                },
                "validation": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Validation of the minimum and maximum values allowed for a user to have as username. For details, see Validation.\n"
                }
            },
            "requiredInputs": [
                "strategy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Connection resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Name used in login screen\n"
                    },
                    "enabledClients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IDs of the clients for which the connection is enabled. If not specified, no clients are enabled.\n"
                    },
                    "isDomainConnection": {
                        "type": "boolean",
                        "description": "Indicates whether or not the connection is domain level.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the connection.\n"
                    },
                    "options": {
                        "$ref": "#/types/auth0:index/ConnectionOptions:ConnectionOptions",
                        "description": "Configuration settings for connection options. For details, see Options.\n"
                    },
                    "realms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Defines the realms for which the connection will be used (i.e., email domains). If not specified, the connection name is added as the realm.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "Type of the connection, which indicates the identity provider. Options include `ad`, `adfs`, `amazon`, `aol`, `apple`, `auth0`, `auth0-adldap`, `auth0-oidc`, `baidu`, `bitbucket`, `bitly`, `box`, `custom`, `daccount`, `dropbox`, `dwolla`, `email`, `evernote`, `evernote-sandbox`, `exact`, `facebook`, `fitbit`, `flickr`, `github`, `google-apps`, `google-oauth2`, `guardian`, `instagram`, `ip`, `line`, `linkedin`, `miicard`, `oauth1`, `oauth2`, `office365`, `oidc`, `paypal`, `paypal-sandbox`, `pingfederate`, `planningcenter`, `renren`, `salesforce`, `salesforce-community`, `salesforce-sandbox` `samlp`, `sharepoint`, `shopify`, `sms`, `soundcloud`, `thecity`, `thecity-sandbox`, `thirtysevensignals`, `twitter`, `untappd`, `vkontakte`, `waad`, `weibo`, `windowslive`, `wordpress`, `yahoo`, `yammer`, `yandex`.\n"
                    },
                    "strategyVersion": {
                        "type": "string",
                        "description": "Version 1 is deprecated, use version 2.\n"
                    },
                    "validation": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Validation of the minimum and maximum values allowed for a user to have as username. For details, see Validation.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/customDomain:CustomDomain": {
            "description": "With Auth0, you can use a custom domain to maintain a consistent user experience. This resource allows you to create and manage a custom domain within your Auth0 tenant.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myCustomDomain = new auth0.CustomDomain(\"my_custom_domain\", {\n    domain: \"auth.example.com\",\n    type: \"auth0_managed_certs\",\n    verificationMethod: \"txt\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_custom_domain = auth0.CustomDomain(\"myCustomDomain\",\n    domain=\"auth.example.com\",\n    type=\"auth0_managed_certs\",\n    verification_method=\"txt\")\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myCustomDomain = new Auth0.CustomDomain(\"myCustomDomain\", new Auth0.CustomDomainArgs\n        {\n            Domain = \"auth.example.com\",\n            Type = \"auth0_managed_certs\",\n            VerificationMethod = \"txt\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewCustomDomain(ctx, \"myCustomDomain\", \u0026auth0.CustomDomainArgs{\n\t\t\tDomain:             pulumi.String(\"auth.example.com\"),\n\t\t\tType:               pulumi.String(\"auth0_managed_certs\"),\n\t\t\tVerificationMethod: pulumi.String(\"txt\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "String. Name of the custom domain.\n"
                },
                "primary": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not this is a primary domain.\n"
                },
                "status": {
                    "type": "string",
                    "description": "String. Configuration status for the custom domain. Options include `disabled`, `pending`, `pending_verification`, and `ready`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "String. Provisioning type for the custom domain. Options include `auth0_managed_certs` and `self_managed_certs`.\n"
                },
                "verification": {
                    "$ref": "#/types/auth0:index/CustomDomainVerification:CustomDomainVerification",
                    "description": "List(Resource). Configuration settings for verification. For details, see Verification.\n"
                },
                "verificationMethod": {
                    "type": "string",
                    "description": "String. Domain verification method. Options include `txt`.\n",
                    "deprecationMessage": "The method is chosen according to the type of the custom domain. CNAME for auth0_managed_certs, TXT for self_managed_certs"
                }
            },
            "required": [
                "domain",
                "primary",
                "status",
                "type",
                "verification"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "description": "String. Name of the custom domain.\n"
                },
                "type": {
                    "type": "string",
                    "description": "String. Provisioning type for the custom domain. Options include `auth0_managed_certs` and `self_managed_certs`.\n"
                },
                "verificationMethod": {
                    "type": "string",
                    "description": "String. Domain verification method. Options include `txt`.\n",
                    "deprecationMessage": "The method is chosen according to the type of the custom domain. CNAME for auth0_managed_certs, TXT for self_managed_certs"
                }
            },
            "requiredInputs": [
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomDomain resources.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "String. Name of the custom domain.\n"
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not this is a primary domain.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "String. Configuration status for the custom domain. Options include `disabled`, `pending`, `pending_verification`, and `ready`.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "String. Provisioning type for the custom domain. Options include `auth0_managed_certs` and `self_managed_certs`.\n"
                    },
                    "verification": {
                        "$ref": "#/types/auth0:index/CustomDomainVerification:CustomDomainVerification",
                        "description": "List(Resource). Configuration settings for verification. For details, see Verification.\n"
                    },
                    "verificationMethod": {
                        "type": "string",
                        "description": "String. Domain verification method. Options include `txt`.\n",
                        "deprecationMessage": "The method is chosen according to the type of the custom domain. CNAME for auth0_managed_certs, TXT for self_managed_certs"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/customDomainVerification:CustomDomainVerification": {
            "properties": {
                "customDomainId": {
                    "type": "string",
                    "description": "String. ID of the custom domain resource.\n"
                }
            },
            "required": [
                "customDomainId"
            ],
            "inputProperties": {
                "customDomainId": {
                    "type": "string",
                    "description": "String. ID of the custom domain resource.\n"
                }
            },
            "requiredInputs": [
                "customDomainId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomDomainVerification resources.\n",
                "properties": {
                    "customDomainId": {
                        "type": "string",
                        "description": "String. ID of the custom domain resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/email:Email": {
            "description": "With Auth0, you can have standard welcome, password reset, and account verification email-based workflows built right into Auth0. This resource allows you to configure email providers so you can route all emails that are part of Auth0's authentication workflows through the supported high-volume email service of your choice.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myEmailProvider = new auth0.Email(\"my_email_provider\", {\n    credentials: {\n        accessKeyId: \"AKIAXXXXXXXXXXXXXXXX\",\n        region: \"us-east-1\",\n        secretAccessKey: \"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    },\n    defaultFromAddress: \"accounts@example.com\",\n    enabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_email_provider = auth0.Email(\"myEmailProvider\",\n    credentials=auth0.EmailCredentialsArgs(\n        access_key_id=\"AKIAXXXXXXXXXXXXXXXX\",\n        region=\"us-east-1\",\n        secret_access_key=\"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    ),\n    default_from_address=\"accounts@example.com\",\n    enabled=True)\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myEmailProvider = new Auth0.Email(\"myEmailProvider\", new Auth0.EmailArgs\n        {\n            Credentials = new Auth0.Inputs.EmailCredentialsArgs\n            {\n                AccessKeyId = \"AKIAXXXXXXXXXXXXXXXX\",\n                Region = \"us-east-1\",\n                SecretAccessKey = \"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n            },\n            DefaultFromAddress = \"accounts@example.com\",\n            Enabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewEmail(ctx, \"myEmailProvider\", \u0026auth0.EmailArgs{\n\t\t\tCredentials: \u0026EmailCredentialsArgs{\n\t\t\t\tAccessKeyId:     pulumi.String(\"AKIAXXXXXXXXXXXXXXXX\"),\n\t\t\t\tRegion:          pulumi.String(\"us-east-1\"),\n\t\t\t\tSecretAccessKey: pulumi.String(\"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\t},\n\t\t\tDefaultFromAddress: pulumi.String(\"accounts@example.com\"),\n\t\t\tEnabled:            pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "credentials": {
                    "$ref": "#/types/auth0:index/EmailCredentials:EmailCredentials",
                    "description": "List(Resource). Configuration settings for the credentials for the email provider. For details, see Credentials.\n"
                },
                "defaultFromAddress": {
                    "type": "string",
                    "description": "String. Email address to use as the sender when no other \"from\" address is specified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the email provider is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "String. Name of the email provider. Options include `mailgun`, `mandrill`, `sendgrid`, `ses`, `smtp`, and `sparkpost`.\n"
                }
            },
            "required": [
                "credentials",
                "defaultFromAddress",
                "name"
            ],
            "inputProperties": {
                "credentials": {
                    "$ref": "#/types/auth0:index/EmailCredentials:EmailCredentials",
                    "description": "List(Resource). Configuration settings for the credentials for the email provider. For details, see Credentials.\n"
                },
                "defaultFromAddress": {
                    "type": "string",
                    "description": "String. Email address to use as the sender when no other \"from\" address is specified.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the email provider is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "String. Name of the email provider. Options include `mailgun`, `mandrill`, `sendgrid`, `ses`, `smtp`, and `sparkpost`.\n"
                }
            },
            "requiredInputs": [
                "credentials",
                "defaultFromAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Email resources.\n",
                "properties": {
                    "credentials": {
                        "$ref": "#/types/auth0:index/EmailCredentials:EmailCredentials",
                        "description": "List(Resource). Configuration settings for the credentials for the email provider. For details, see Credentials.\n"
                    },
                    "defaultFromAddress": {
                        "type": "string",
                        "description": "String. Email address to use as the sender when no other \"from\" address is specified.\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not the email provider is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "String. Name of the email provider. Options include `mailgun`, `mandrill`, `sendgrid`, `ses`, `smtp`, and `sparkpost`.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/emailTemplate:EmailTemplate": {
            "description": "With Auth0, you can have standard welcome, password reset, and account verification email-based workflows built right into Auth0. This resource allows you to configure email templates to customize the look, feel, and sender identities of emails sent by Auth0. Used in conjunction with configured email providers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myEmailProvider = new auth0.Email(\"myEmailProvider\", {\n    enabled: true,\n    defaultFromAddress: \"accounts@example.com\",\n    credentials: {\n        accessKeyId: \"AKIAXXXXXXXXXXXXXXXX\",\n        secretAccessKey: \"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        region: \"us-east-1\",\n    },\n});\nconst myEmailTemplate = new auth0.EmailTemplate(\"myEmailTemplate\", {\n    template: \"welcome_email\",\n    body: \"\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eWelcome!\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\",\n    from: \"welcome@example.com\",\n    resultUrl: \"https://example.com/welcome\",\n    subject: \"Welcome\",\n    syntax: \"liquid\",\n    urlLifetimeInSeconds: 3600,\n    enabled: true,\n}, {\n    dependsOn: [myEmailProvider],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_email_provider = auth0.Email(\"myEmailProvider\",\n    enabled=True,\n    default_from_address=\"accounts@example.com\",\n    credentials=auth0.EmailCredentialsArgs(\n        access_key_id=\"AKIAXXXXXXXXXXXXXXXX\",\n        secret_access_key=\"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        region=\"us-east-1\",\n    ))\nmy_email_template = auth0.EmailTemplate(\"myEmailTemplate\",\n    template=\"welcome_email\",\n    body=\"\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eWelcome!\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\",\n    from_=\"welcome@example.com\",\n    result_url=\"https://example.com/welcome\",\n    subject=\"Welcome\",\n    syntax=\"liquid\",\n    url_lifetime_in_seconds=3600,\n    enabled=True,\n    opts=pulumi.ResourceOptions(depends_on=[my_email_provider]))\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myEmailProvider = new Auth0.Email(\"myEmailProvider\", new Auth0.EmailArgs\n        {\n            Enabled = true,\n            DefaultFromAddress = \"accounts@example.com\",\n            Credentials = new Auth0.Inputs.EmailCredentialsArgs\n            {\n                AccessKeyId = \"AKIAXXXXXXXXXXXXXXXX\",\n                SecretAccessKey = \"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n                Region = \"us-east-1\",\n            },\n        });\n        var myEmailTemplate = new Auth0.EmailTemplate(\"myEmailTemplate\", new Auth0.EmailTemplateArgs\n        {\n            Template = \"welcome_email\",\n            Body = \"\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eWelcome!\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\",\n            From = \"welcome@example.com\",\n            ResultUrl = \"https://example.com/welcome\",\n            Subject = \"Welcome\",\n            Syntax = \"liquid\",\n            UrlLifetimeInSeconds = 3600,\n            Enabled = true,\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                myEmailProvider,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyEmailProvider, err := auth0.NewEmail(ctx, \"myEmailProvider\", \u0026auth0.EmailArgs{\n\t\t\tEnabled:            pulumi.Bool(true),\n\t\t\tDefaultFromAddress: pulumi.String(\"accounts@example.com\"),\n\t\t\tCredentials: \u0026EmailCredentialsArgs{\n\t\t\t\tAccessKeyId:     pulumi.String(\"AKIAXXXXXXXXXXXXXXXX\"),\n\t\t\t\tSecretAccessKey: pulumi.String(\"7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\t\tRegion:          pulumi.String(\"us-east-1\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewEmailTemplate(ctx, \"myEmailTemplate\", \u0026auth0.EmailTemplateArgs{\n\t\t\tTemplate:             pulumi.String(\"welcome_email\"),\n\t\t\tBody:                 pulumi.String(\"\u003chtml\u003e\u003cbody\u003e\u003ch1\u003eWelcome!\u003c/h1\u003e\u003c/body\u003e\u003c/html\u003e\"),\n\t\t\tFrom:                 pulumi.String(\"welcome@example.com\"),\n\t\t\tResultUrl:            pulumi.String(\"https://example.com/welcome\"),\n\t\t\tSubject:              pulumi.String(\"Welcome\"),\n\t\t\tSyntax:               pulumi.String(\"liquid\"),\n\t\t\tUrlLifetimeInSeconds: pulumi.Int(3600),\n\t\t\tEnabled:              pulumi.Bool(true),\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tmyEmailProvider,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "body": {
                    "type": "string",
                    "description": "String. Body of the email template. You can include [common variables](https://auth0.com/docs/email/templates#common-variables).\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the template is enabled.\n"
                },
                "from": {
                    "type": "string",
                    "description": "String. Email address to use as the sender. You can include [common variables](https://auth0.com/docs/email/templates#common-variables).\n"
                },
                "resultUrl": {
                    "type": "string",
                    "description": "String. URL to redirect the user to after a successful action. [Learn more](https://auth0.com/docs/email/templates#configuring-the-redirect-to-url).\n"
                },
                "subject": {
                    "type": "string",
                    "description": "String. Subject line of the email. You can include [common variables](https://auth0.com/docs/email/templates#common-variables).\n"
                },
                "syntax": {
                    "type": "string",
                    "description": "String. Syntax of the template body. You can use either text or HTML + Liquid syntax.\n"
                },
                "template": {
                    "type": "string",
                    "description": "String. Template name. Options include `verify_email`, `verify_email_by_code`, `reset_email`, `welcome_email`, `blocked_account`, `stolen_credentials`, `enrollment_email`, `mfa_oob_code`, `user_invitation`, `change_password` (legacy), or `password_reset` (legacy).\n"
                },
                "urlLifetimeInSeconds": {
                    "type": "integer",
                    "description": "Integer. Number of seconds during which the link within the email will be valid.\n"
                }
            },
            "required": [
                "body",
                "enabled",
                "from",
                "subject",
                "syntax",
                "template"
            ],
            "inputProperties": {
                "body": {
                    "type": "string",
                    "description": "String. Body of the email template. You can include [common variables](https://auth0.com/docs/email/templates#common-variables).\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the template is enabled.\n"
                },
                "from": {
                    "type": "string",
                    "description": "String. Email address to use as the sender. You can include [common variables](https://auth0.com/docs/email/templates#common-variables).\n"
                },
                "resultUrl": {
                    "type": "string",
                    "description": "String. URL to redirect the user to after a successful action. [Learn more](https://auth0.com/docs/email/templates#configuring-the-redirect-to-url).\n"
                },
                "subject": {
                    "type": "string",
                    "description": "String. Subject line of the email. You can include [common variables](https://auth0.com/docs/email/templates#common-variables).\n"
                },
                "syntax": {
                    "type": "string",
                    "description": "String. Syntax of the template body. You can use either text or HTML + Liquid syntax.\n"
                },
                "template": {
                    "type": "string",
                    "description": "String. Template name. Options include `verify_email`, `verify_email_by_code`, `reset_email`, `welcome_email`, `blocked_account`, `stolen_credentials`, `enrollment_email`, `mfa_oob_code`, `user_invitation`, `change_password` (legacy), or `password_reset` (legacy).\n"
                },
                "urlLifetimeInSeconds": {
                    "type": "integer",
                    "description": "Integer. Number of seconds during which the link within the email will be valid.\n"
                }
            },
            "requiredInputs": [
                "body",
                "enabled",
                "from",
                "subject",
                "syntax",
                "template"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EmailTemplate resources.\n",
                "properties": {
                    "body": {
                        "type": "string",
                        "description": "String. Body of the email template. You can include [common variables](https://auth0.com/docs/email/templates#common-variables).\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not the template is enabled.\n"
                    },
                    "from": {
                        "type": "string",
                        "description": "String. Email address to use as the sender. You can include [common variables](https://auth0.com/docs/email/templates#common-variables).\n"
                    },
                    "resultUrl": {
                        "type": "string",
                        "description": "String. URL to redirect the user to after a successful action. [Learn more](https://auth0.com/docs/email/templates#configuring-the-redirect-to-url).\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "String. Subject line of the email. You can include [common variables](https://auth0.com/docs/email/templates#common-variables).\n"
                    },
                    "syntax": {
                        "type": "string",
                        "description": "String. Syntax of the template body. You can use either text or HTML + Liquid syntax.\n"
                    },
                    "template": {
                        "type": "string",
                        "description": "String. Template name. Options include `verify_email`, `verify_email_by_code`, `reset_email`, `welcome_email`, `blocked_account`, `stolen_credentials`, `enrollment_email`, `mfa_oob_code`, `user_invitation`, `change_password` (legacy), or `password_reset` (legacy).\n"
                    },
                    "urlLifetimeInSeconds": {
                        "type": "integer",
                        "description": "Integer. Number of seconds during which the link within the email will be valid.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/globalClient:GlobalClient": {
            "properties": {
                "addons": {
                    "$ref": "#/types/auth0:index/GlobalClientAddons:GlobalClientAddons"
                },
                "allowedClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "appType": {
                    "type": "string"
                },
                "callbacks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string"
                },
                "clientMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientSecretRotationTrigger": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "crossOriginAuth": {
                    "type": "boolean"
                },
                "crossOriginLoc": {
                    "type": "string"
                },
                "customLoginPage": {
                    "type": "string"
                },
                "customLoginPageOn": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "encryptionKey": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "formTemplate": {
                    "type": "string"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "initiateLoginUri": {
                    "type": "string"
                },
                "isFirstParty": {
                    "type": "boolean"
                },
                "isTokenEndpointIpHeaderTrusted": {
                    "type": "boolean"
                },
                "jwtConfiguration": {
                    "$ref": "#/types/auth0:index/GlobalClientJwtConfiguration:GlobalClientJwtConfiguration"
                },
                "logoUri": {
                    "type": "string"
                },
                "mobile": {
                    "$ref": "#/types/auth0:index/GlobalClientMobile:GlobalClientMobile"
                },
                "name": {
                    "type": "string"
                },
                "oidcConformant": {
                    "type": "boolean"
                },
                "organizationRequireBehavior": {
                    "type": "string"
                },
                "organizationUsage": {
                    "type": "string"
                },
                "refreshToken": {
                    "$ref": "#/types/auth0:index/GlobalClientRefreshToken:GlobalClientRefreshToken"
                },
                "sso": {
                    "type": "boolean"
                },
                "ssoDisabled": {
                    "type": "boolean"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string"
                },
                "webOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "addons",
                "allowedClients",
                "allowedLogoutUrls",
                "allowedOrigins",
                "appType",
                "callbacks",
                "clientId",
                "clientMetadata",
                "clientSecret",
                "crossOriginAuth",
                "crossOriginLoc",
                "customLoginPage",
                "customLoginPageOn",
                "description",
                "encryptionKey",
                "formTemplate",
                "grantTypes",
                "initiateLoginUri",
                "isFirstParty",
                "isTokenEndpointIpHeaderTrusted",
                "jwtConfiguration",
                "logoUri",
                "mobile",
                "name",
                "oidcConformant",
                "organizationRequireBehavior",
                "organizationUsage",
                "refreshToken",
                "sso",
                "ssoDisabled",
                "tokenEndpointAuthMethod",
                "webOrigins"
            ],
            "inputProperties": {
                "addons": {
                    "$ref": "#/types/auth0:index/GlobalClientAddons:GlobalClientAddons"
                },
                "allowedClients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "allowedOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "appType": {
                    "type": "string"
                },
                "callbacks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clientId": {
                    "type": "string"
                },
                "clientMetadata": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "clientSecret": {
                    "type": "string"
                },
                "clientSecretRotationTrigger": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "crossOriginAuth": {
                    "type": "boolean"
                },
                "crossOriginLoc": {
                    "type": "string"
                },
                "customLoginPage": {
                    "type": "string"
                },
                "customLoginPageOn": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "encryptionKey": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "formTemplate": {
                    "type": "string"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "initiateLoginUri": {
                    "type": "string"
                },
                "isFirstParty": {
                    "type": "boolean"
                },
                "isTokenEndpointIpHeaderTrusted": {
                    "type": "boolean"
                },
                "jwtConfiguration": {
                    "$ref": "#/types/auth0:index/GlobalClientJwtConfiguration:GlobalClientJwtConfiguration"
                },
                "logoUri": {
                    "type": "string"
                },
                "mobile": {
                    "$ref": "#/types/auth0:index/GlobalClientMobile:GlobalClientMobile"
                },
                "name": {
                    "type": "string"
                },
                "oidcConformant": {
                    "type": "boolean"
                },
                "organizationRequireBehavior": {
                    "type": "string"
                },
                "organizationUsage": {
                    "type": "string"
                },
                "refreshToken": {
                    "$ref": "#/types/auth0:index/GlobalClientRefreshToken:GlobalClientRefreshToken"
                },
                "sso": {
                    "type": "boolean"
                },
                "ssoDisabled": {
                    "type": "boolean"
                },
                "tokenEndpointAuthMethod": {
                    "type": "string"
                },
                "webOrigins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GlobalClient resources.\n",
                "properties": {
                    "addons": {
                        "$ref": "#/types/auth0:index/GlobalClientAddons:GlobalClientAddons"
                    },
                    "allowedClients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowedLogoutUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowedOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "appType": {
                        "type": "string"
                    },
                    "callbacks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "clientMetadata": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "clientSecret": {
                        "type": "string"
                    },
                    "clientSecretRotationTrigger": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "crossOriginAuth": {
                        "type": "boolean"
                    },
                    "crossOriginLoc": {
                        "type": "string"
                    },
                    "customLoginPage": {
                        "type": "string"
                    },
                    "customLoginPageOn": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "encryptionKey": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "formTemplate": {
                        "type": "string"
                    },
                    "grantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "initiateLoginUri": {
                        "type": "string"
                    },
                    "isFirstParty": {
                        "type": "boolean"
                    },
                    "isTokenEndpointIpHeaderTrusted": {
                        "type": "boolean"
                    },
                    "jwtConfiguration": {
                        "$ref": "#/types/auth0:index/GlobalClientJwtConfiguration:GlobalClientJwtConfiguration"
                    },
                    "logoUri": {
                        "type": "string"
                    },
                    "mobile": {
                        "$ref": "#/types/auth0:index/GlobalClientMobile:GlobalClientMobile"
                    },
                    "name": {
                        "type": "string"
                    },
                    "oidcConformant": {
                        "type": "boolean"
                    },
                    "organizationRequireBehavior": {
                        "type": "string"
                    },
                    "organizationUsage": {
                        "type": "string"
                    },
                    "refreshToken": {
                        "$ref": "#/types/auth0:index/GlobalClientRefreshToken:GlobalClientRefreshToken"
                    },
                    "sso": {
                        "type": "boolean"
                    },
                    "ssoDisabled": {
                        "type": "boolean"
                    },
                    "tokenEndpointAuthMethod": {
                        "type": "string"
                    },
                    "webOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/guardian:Guardian": {
            "description": "Multi-factor Authentication works by requiring additional factors during the login process to prevent unauthorized access. With this resource you can configure some of\nthe options available for MFA.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst defaultGuardian = new auth0.Guardian(\"default\", {\n    phone: {\n        messageTypes: [\"sms\"],\n        options: {\n            enrollmentMessage: \"{{code}}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment\",\n            verificationMessage: \"{{code}} is your verification code for {{tenant.friendly_name}}\",\n        },\n        provider: \"auth0\",\n    },\n    policy: \"all-applications\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\ndefault = auth0.Guardian(\"default\",\n    phone=auth0.GuardianPhoneArgs(\n        message_types=[\"sms\"],\n        options=auth0.GuardianPhoneOptionsArgs(\n            enrollment_message=\"{{code}}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment\",\n            verification_message=\"{{code}} is your verification code for {{tenant.friendly_name}}\",\n        ),\n        provider=\"auth0\",\n    ),\n    policy=\"all-applications\")\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var @default = new Auth0.Guardian(\"default\", new Auth0.GuardianArgs\n        {\n            Phone = new Auth0.Inputs.GuardianPhoneArgs\n            {\n                MessageTypes = \n                {\n                    \"sms\",\n                },\n                Options = new Auth0.Inputs.GuardianPhoneOptionsArgs\n                {\n                    EnrollmentMessage = \"{{code}}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment\",\n                    VerificationMessage = \"{{code}} is your verification code for {{tenant.friendly_name}}\",\n                },\n                Provider = \"auth0\",\n            },\n            Policy = \"all-applications\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewGuardian(ctx, \"default\", \u0026auth0.GuardianArgs{\n\t\t\tPhone: \u0026GuardianPhoneArgs{\n\t\t\t\tMessageTypes: pulumi.StringArray{\n\t\t\t\t\tpulumi.String(\"sms\"),\n\t\t\t\t},\n\t\t\t\tOptions: \u0026GuardianPhoneOptionsArgs{\n\t\t\t\t\tEnrollmentMessage:   pulumi.String(\"{{code}}} is your verification code for {{tenant.friendly_name}}. Please enter this code to verify your enrollment\"),\n\t\t\t\t\tVerificationMessage: pulumi.String(\"{{code}} is your verification code for {{tenant.friendly_name}}\"),\n\t\t\t\t},\n\t\t\t\tProvider: pulumi.String(\"auth0\"),\n\t\t\t},\n\t\t\tPolicy: pulumi.String(\"all-applications\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "phone": {
                    "$ref": "#/types/auth0:index/GuardianPhone:GuardianPhone",
                    "description": "List(Resource). Configuration settings for the phone MFA. For details, see Phone.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "String. Policy to use. Available options are `never`, `all-applications` and `confidence-score`. The option `confidence-score` means the trigger of MFA will be adaptive. See [Auth0 docs](https://auth0.com/docs/mfa/adaptive-mfa)\n"
                }
            },
            "required": [
                "policy"
            ],
            "inputProperties": {
                "phone": {
                    "$ref": "#/types/auth0:index/GuardianPhone:GuardianPhone",
                    "description": "List(Resource). Configuration settings for the phone MFA. For details, see Phone.\n"
                },
                "policy": {
                    "type": "string",
                    "description": "String. Policy to use. Available options are `never`, `all-applications` and `confidence-score`. The option `confidence-score` means the trigger of MFA will be adaptive. See [Auth0 docs](https://auth0.com/docs/mfa/adaptive-mfa)\n"
                }
            },
            "requiredInputs": [
                "policy"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Guardian resources.\n",
                "properties": {
                    "phone": {
                        "$ref": "#/types/auth0:index/GuardianPhone:GuardianPhone",
                        "description": "List(Resource). Configuration settings for the phone MFA. For details, see Phone.\n"
                    },
                    "policy": {
                        "type": "string",
                        "description": "String. Policy to use. Available options are `never`, `all-applications` and `confidence-score`. The option `confidence-score` means the trigger of MFA will be adaptive. See [Auth0 docs](https://auth0.com/docs/mfa/adaptive-mfa)\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/hook:Hook": {
            "description": "Hooks are secure, self-contained functions that allow you to customize the behavior of Auth0 when executed for selected extensibility points of the Auth0 platform. Auth0 invokes Hooks during runtime to execute your custom Node.js code.\n\nDepending on the extensibility point, you can use Hooks with Database Connections and/or Passwordless Connections.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myHook = new auth0.Hook(\"my_hook\", {\n    dependencies: {\n        auth0: \"2.30.0\",\n    },\n    enabled: true,\n    script: `function (user, context, callback) {\n  callback(null, { user });\n}\n`,\n    secrets: {\n        foo: \"bar\",\n    },\n    triggerId: \"pre-user-registration\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_hook = auth0.Hook(\"myHook\",\n    dependencies={\n        \"auth0\": \"2.30.0\",\n    },\n    enabled=True,\n    script=\"\"\"function (user, context, callback) {\n  callback(null, { user });\n}\n\n\"\"\",\n    secrets={\n        \"foo\": \"bar\",\n    },\n    trigger_id=\"pre-user-registration\")\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myHook = new Auth0.Hook(\"myHook\", new Auth0.HookArgs\n        {\n            Dependencies = \n            {\n                { \"auth0\", \"2.30.0\" },\n            },\n            Enabled = true,\n            Script = @\"function (user, context, callback) {\n  callback(null, { user });\n}\n\n\",\n            Secrets = \n            {\n                { \"foo\", \"bar\" },\n            },\n            TriggerId = \"pre-user-registration\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewHook(ctx, \"myHook\", \u0026auth0.HookArgs{\n\t\t\tDependencies: pulumi.AnyMap{\n\t\t\t\t\"auth0\": pulumi.Any(\"2.30.0\"),\n\t\t\t},\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tScript:  pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"function (user, context, callback) {\\n\", \"  callback(null, { user });\\n\", \"}\\n\", \"\\n\")),\n\t\t\tSecrets: pulumi.AnyMap{\n\t\t\t\t\"foo\": pulumi.Any(\"bar\"),\n\t\t\t},\n\t\t\tTriggerId: pulumi.String(\"pre-user-registration\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Dependencies of this hook used by webtask server\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the hook is enabled, or disabled\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of this hook\n"
                },
                "script": {
                    "type": "string",
                    "description": "Code to be executed when this hook runs\n"
                },
                "secrets": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Map(String), sets the hook secrets associated with this hook. If specified, any secrets not listed here will be removed from the hook.\n"
                },
                "triggerId": {
                    "type": "string",
                    "description": "Execution stage of this rule. Can be credentials-exchange, pre-user-registration, post-user-registration, post-change-password, or send-phone-message\n"
                }
            },
            "required": [
                "enabled",
                "name",
                "script",
                "triggerId"
            ],
            "inputProperties": {
                "dependencies": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Dependencies of this hook used by webtask server\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the hook is enabled, or disabled\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of this hook\n"
                },
                "script": {
                    "type": "string",
                    "description": "Code to be executed when this hook runs\n"
                },
                "secrets": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Map(String), sets the hook secrets associated with this hook. If specified, any secrets not listed here will be removed from the hook.\n"
                },
                "triggerId": {
                    "type": "string",
                    "description": "Execution stage of this rule. Can be credentials-exchange, pre-user-registration, post-user-registration, post-change-password, or send-phone-message\n"
                }
            },
            "requiredInputs": [
                "script",
                "triggerId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Hook resources.\n",
                "properties": {
                    "dependencies": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Dependencies of this hook used by webtask server\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the hook is enabled, or disabled\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of this hook\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "Code to be executed when this hook runs\n"
                    },
                    "secrets": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Map(String), sets the hook secrets associated with this hook. If specified, any secrets not listed here will be removed from the hook.\n"
                    },
                    "triggerId": {
                        "type": "string",
                        "description": "Execution stage of this rule. Can be credentials-exchange, pre-user-registration, post-user-registration, post-change-password, or send-phone-message\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/logStream:LogStream": {
            "description": "With this resource, you can manage your Auth0 log streams.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst example = new auth0.LogStream(\"example\", {\n    sink: {\n        awsAccountId: \"my_account_id\",\n        awsRegion: \"us-east-2\",\n    },\n    status: \"active\",\n    type: \"eventbridge\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nexample = auth0.LogStream(\"example\",\n    sink=auth0.LogStreamSinkArgs(\n        aws_account_id=\"my_account_id\",\n        aws_region=\"us-east-2\",\n    ),\n    status=\"active\",\n    type=\"eventbridge\")\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Auth0.LogStream(\"example\", new Auth0.LogStreamArgs\n        {\n            Sink = new Auth0.Inputs.LogStreamSinkArgs\n            {\n                AwsAccountId = \"my_account_id\",\n                AwsRegion = \"us-east-2\",\n            },\n            Status = \"active\",\n            Type = \"eventbridge\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewLogStream(ctx, \"example\", \u0026auth0.LogStreamArgs{\n\t\t\tSink: \u0026LogStreamSinkArgs{\n\t\t\t\tAwsAccountId: pulumi.String(\"my_account_id\"),\n\t\t\t\tAwsRegion:    pulumi.String(\"us-east-2\"),\n\t\t\t},\n\t\t\tStatus: pulumi.String(\"active\"),\n\t\t\tType:   pulumi.String(\"eventbridge\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the log stream\n"
                },
                "sink": {
                    "$ref": "#/types/auth0:index/LogStreamSink:LogStreamSink",
                    "description": "List(Resource) The sink configuration for the log stream. For details, see Sink Configuration.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the log stream. Options are \"active\", \"paused\", \"suspended\"\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of log stream. Options are \"eventbridge\", \"eventgrid\", \"http\", \"datadog\", \"splunk\", \"sumo\"\n"
                }
            },
            "required": [
                "name",
                "sink",
                "status",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the log stream\n"
                },
                "sink": {
                    "$ref": "#/types/auth0:index/LogStreamSink:LogStreamSink",
                    "description": "List(Resource) The sink configuration for the log stream. For details, see Sink Configuration.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The current status of the log stream. Options are \"active\", \"paused\", \"suspended\"\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of log stream. Options are \"eventbridge\", \"eventgrid\", \"http\", \"datadog\", \"splunk\", \"sumo\"\n"
                }
            },
            "requiredInputs": [
                "sink",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogStream resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the log stream\n"
                    },
                    "sink": {
                        "$ref": "#/types/auth0:index/LogStreamSink:LogStreamSink",
                        "description": "List(Resource) The sink configuration for the log stream. For details, see Sink Configuration.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The current status of the log stream. Options are \"active\", \"paused\", \"suspended\"\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of log stream. Options are \"eventbridge\", \"eventgrid\", \"http\", \"datadog\", \"splunk\", \"sumo\"\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/organization:Organization": {
            "description": "The Organizations feature represents a broad update to the Auth0 platform that\nallows our business-to-business (B2B) customers to better manage their partners\nand customers, and to customize the ways that end-users access their\napplications. Auth0 customers can use Organizations to:\n\n  - Represent their business customers and partners in Auth0 and manage their\n    membership.\n  - Configure branded, federated login flows for each business.\n  - Build administration capabilities into their products, using Organizations\n    APIs, so that those businesses can manage their own organizations.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst acme = new auth0.Organization(\"acme\", {\n    displayName: \"Acme Inc.\",\n    branding: {\n        logoUrl: \"https://acme.com/logo.svg\",\n        colors: {\n            primary: \"#e3e2f0\",\n            page_background: \"#e3e2ff\",\n        },\n    },\n    connections: [{\n        connectionId: auth0_connection.acme.id,\n        assignMembershipOnLogin: true,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nacme = auth0.Organization(\"acme\",\n    display_name=\"Acme Inc.\",\n    branding=auth0.OrganizationBrandingArgs(\n        logo_url=\"https://acme.com/logo.svg\",\n        colors={\n            \"primary\": \"#e3e2f0\",\n            \"page_background\": \"#e3e2ff\",\n        },\n    ),\n    connections=[auth0.OrganizationConnectionArgs(\n        connection_id=auth0_connection[\"acme\"][\"id\"],\n        assign_membership_on_login=True,\n    )])\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var acme = new Auth0.Organization(\"acme\", new Auth0.OrganizationArgs\n        {\n            DisplayName = \"Acme Inc.\",\n            Branding = new Auth0.Inputs.OrganizationBrandingArgs\n            {\n                LogoUrl = \"https://acme.com/logo.svg\",\n                Colors = \n                {\n                    { \"primary\", \"#e3e2f0\" },\n                    { \"page_background\", \"#e3e2ff\" },\n                },\n            },\n            Connections = \n            {\n                new Auth0.Inputs.OrganizationConnectionArgs\n                {\n                    ConnectionId = auth0_connection.Acme.Id,\n                    AssignMembershipOnLogin = true,\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewOrganization(ctx, \"acme\", \u0026auth0.OrganizationArgs{\n\t\t\tDisplayName: pulumi.String(\"Acme Inc.\"),\n\t\t\tBranding: \u0026OrganizationBrandingArgs{\n\t\t\t\tLogoUrl: pulumi.String(\"https://acme.com/logo.svg\"),\n\t\t\t\tColors: pulumi.StringMap{\n\t\t\t\t\t\"primary\":         pulumi.String(\"#e3e2f0\"),\n\t\t\t\t\t\"page_background\": pulumi.String(\"#e3e2ff\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tConnections: OrganizationConnectionArray{\n\t\t\t\t\u0026OrganizationConnectionArgs{\n\t\t\t\t\tConnectionId:            pulumi.Any(auth0_connection.Acme.Id),\n\t\t\t\t\tAssignMembershipOnLogin: pulumi.Bool(true),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "branding": {
                    "$ref": "#/types/auth0:index/OrganizationBranding:OrganizationBranding",
                    "description": "Defines how to style the login pages. For details, see\nBranding\n"
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/OrganizationConnection:OrganizationConnection"
                    },
                    "description": "Connections assigned to the organization. For\ndetails, see Connections\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Friendly name of this organization\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the organization, Maximum of\n10 metadata properties allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this organization\n"
                }
            },
            "required": [
                "branding",
                "connections",
                "name"
            ],
            "inputProperties": {
                "branding": {
                    "$ref": "#/types/auth0:index/OrganizationBranding:OrganizationBranding",
                    "description": "Defines how to style the login pages. For details, see\nBranding\n"
                },
                "connections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/OrganizationConnection:OrganizationConnection"
                    },
                    "description": "Connections assigned to the organization. For\ndetails, see Connections\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Friendly name of this organization\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Metadata associated with the organization, Maximum of\n10 metadata properties allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this organization\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Organization resources.\n",
                "properties": {
                    "branding": {
                        "$ref": "#/types/auth0:index/OrganizationBranding:OrganizationBranding",
                        "description": "Defines how to style the login pages. For details, see\nBranding\n"
                    },
                    "connections": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/OrganizationConnection:OrganizationConnection"
                        },
                        "description": "Connections assigned to the organization. For\ndetails, see Connections\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Friendly name of this organization\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Metadata associated with the organization, Maximum of\n10 metadata properties allowed\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this organization\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/prompt:Prompt": {
            "description": "With this resource, you can manage your Auth0 prompts, including choosing the login experience version.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst example = new auth0.Prompt(\"example\", {\n    identifierFirst: false,\n    universalLoginExperience: \"classic\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nexample = auth0.Prompt(\"example\",\n    identifier_first=False,\n    universal_login_experience=\"classic\")\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example = new Auth0.Prompt(\"example\", new Auth0.PromptArgs\n        {\n            IdentifierFirst = false,\n            UniversalLoginExperience = \"classic\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewPrompt(ctx, \"example\", \u0026auth0.PromptArgs{\n\t\t\tIdentifierFirst:          pulumi.Bool(false),\n\t\t\tUniversalLoginExperience: pulumi.String(\"classic\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "identifierFirst": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not identifier first is used when using the new universal login experience.\n"
                },
                "universalLoginExperience": {
                    "type": "string",
                    "description": "Which login experience to use. Options include `classic` and `new`.\n"
                }
            },
            "inputProperties": {
                "identifierFirst": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not identifier first is used when using the new universal login experience.\n"
                },
                "universalLoginExperience": {
                    "type": "string",
                    "description": "Which login experience to use. Options include `classic` and `new`.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Prompt resources.\n",
                "properties": {
                    "identifierFirst": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not identifier first is used when using the new universal login experience.\n"
                    },
                    "universalLoginExperience": {
                        "type": "string",
                        "description": "Which login experience to use. Options include `classic` and `new`.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/resourceServer:ResourceServer": {
            "description": "With this resource, you can set up APIs that can be consumed from your authorized applications.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myResourceServer = new auth0.ResourceServer(\"my_resource_server\", {\n    allowOfflineAccess: true,\n    identifier: \"https://api.example.com\",\n    scopes: [\n        {\n            description: \"Create foos\",\n            value: \"create:foo\",\n        },\n        {\n            description: \"Create bars\",\n            value: \"create:bar\",\n        },\n    ],\n    signingAlg: \"RS256\",\n    skipConsentForVerifiableFirstPartyClients: true,\n    tokenLifetime: 8600,\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_resource_server = auth0.ResourceServer(\"myResourceServer\",\n    allow_offline_access=True,\n    identifier=\"https://api.example.com\",\n    scopes=[\n        auth0.ResourceServerScopeArgs(\n            description=\"Create foos\",\n            value=\"create:foo\",\n        ),\n        auth0.ResourceServerScopeArgs(\n            description=\"Create bars\",\n            value=\"create:bar\",\n        ),\n    ],\n    signing_alg=\"RS256\",\n    skip_consent_for_verifiable_first_party_clients=True,\n    token_lifetime=8600)\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myResourceServer = new Auth0.ResourceServer(\"myResourceServer\", new Auth0.ResourceServerArgs\n        {\n            AllowOfflineAccess = true,\n            Identifier = \"https://api.example.com\",\n            Scopes = \n            {\n                new Auth0.Inputs.ResourceServerScopeArgs\n                {\n                    Description = \"Create foos\",\n                    Value = \"create:foo\",\n                },\n                new Auth0.Inputs.ResourceServerScopeArgs\n                {\n                    Description = \"Create bars\",\n                    Value = \"create:bar\",\n                },\n            },\n            SigningAlg = \"RS256\",\n            SkipConsentForVerifiableFirstPartyClients = true,\n            TokenLifetime = 8600,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewResourceServer(ctx, \"myResourceServer\", \u0026auth0.ResourceServerArgs{\n\t\t\tAllowOfflineAccess: pulumi.Bool(true),\n\t\t\tIdentifier:         pulumi.String(\"https://api.example.com\"),\n\t\t\tScopes: ResourceServerScopeArray{\n\t\t\t\t\u0026ResourceServerScopeArgs{\n\t\t\t\t\tDescription: pulumi.String(\"Create foos\"),\n\t\t\t\t\tValue:       pulumi.String(\"create:foo\"),\n\t\t\t\t},\n\t\t\t\t\u0026ResourceServerScopeArgs{\n\t\t\t\t\tDescription: pulumi.String(\"Create bars\"),\n\t\t\t\t\tValue:       pulumi.String(\"create:bar\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSigningAlg: pulumi.String(\"RS256\"),\n\t\t\tSkipConsentForVerifiableFirstPartyClients: pulumi.Bool(true),\n\t\t\tTokenLifetime: pulumi.Int(8600),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowOfflineAccess": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not refresh tokens can be issued for this resource server.\n"
                },
                "enforcePolicies": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not authorization polices are enforced.\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "String. Unique identifier for the resource server. Used as the audience parameter for authorization calls. Can not be changed once set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "String. Friendly name for the resource server. Cannot include `\u003c` or `\u003e` characters.\n"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map(String). Used to store additional metadata\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ResourceServerScope:ResourceServerScope"
                    },
                    "description": "Set(Resource).  List of permissions (scopes) used by this resource server. For details, see Scopes.\n"
                },
                "signingAlg": {
                    "type": "string",
                    "description": "String. Algorithm used to sign JWTs. Options include `HS256` and `RS256`.\n"
                },
                "signingSecret": {
                    "type": "string",
                    "description": "String. Secret used to sign tokens when using symmetric algorithms (HS256).\n"
                },
                "skipConsentForVerifiableFirstPartyClients": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not to skip user consent for applications flagged as first party.\n"
                },
                "tokenDialect": {
                    "type": "string",
                    "description": "String. Dialect of access tokens that should be issued for this resource server. Options include `access_token` or `access_token_authz` (includes permissions).\n"
                },
                "tokenLifetime": {
                    "type": "integer",
                    "description": "Integer. Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.\n"
                },
                "tokenLifetimeForWeb": {
                    "type": "integer",
                    "description": "Integer. Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the `token_lifetime` value.\n"
                },
                "verificationLocation": {
                    "type": "string",
                    "description": "String\n"
                }
            },
            "required": [
                "name",
                "signingAlg",
                "signingSecret",
                "tokenLifetime",
                "tokenLifetimeForWeb"
            ],
            "inputProperties": {
                "allowOfflineAccess": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not refresh tokens can be issued for this resource server.\n"
                },
                "enforcePolicies": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not authorization polices are enforced.\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "String. Unique identifier for the resource server. Used as the audience parameter for authorization calls. Can not be changed once set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "String. Friendly name for the resource server. Cannot include `\u003c` or `\u003e` characters.\n"
                },
                "options": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map(String). Used to store additional metadata\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/ResourceServerScope:ResourceServerScope"
                    },
                    "description": "Set(Resource).  List of permissions (scopes) used by this resource server. For details, see Scopes.\n"
                },
                "signingAlg": {
                    "type": "string",
                    "description": "String. Algorithm used to sign JWTs. Options include `HS256` and `RS256`.\n"
                },
                "signingSecret": {
                    "type": "string",
                    "description": "String. Secret used to sign tokens when using symmetric algorithms (HS256).\n"
                },
                "skipConsentForVerifiableFirstPartyClients": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not to skip user consent for applications flagged as first party.\n"
                },
                "tokenDialect": {
                    "type": "string",
                    "description": "String. Dialect of access tokens that should be issued for this resource server. Options include `access_token` or `access_token_authz` (includes permissions).\n"
                },
                "tokenLifetime": {
                    "type": "integer",
                    "description": "Integer. Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.\n"
                },
                "tokenLifetimeForWeb": {
                    "type": "integer",
                    "description": "Integer. Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the `token_lifetime` value.\n"
                },
                "verificationLocation": {
                    "type": "string",
                    "description": "String\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceServer resources.\n",
                "properties": {
                    "allowOfflineAccess": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not refresh tokens can be issued for this resource server.\n"
                    },
                    "enforcePolicies": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not authorization polices are enforced.\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "String. Unique identifier for the resource server. Used as the audience parameter for authorization calls. Can not be changed once set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "String. Friendly name for the resource server. Cannot include `\u003c` or `\u003e` characters.\n"
                    },
                    "options": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map(String). Used to store additional metadata\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/ResourceServerScope:ResourceServerScope"
                        },
                        "description": "Set(Resource).  List of permissions (scopes) used by this resource server. For details, see Scopes.\n"
                    },
                    "signingAlg": {
                        "type": "string",
                        "description": "String. Algorithm used to sign JWTs. Options include `HS256` and `RS256`.\n"
                    },
                    "signingSecret": {
                        "type": "string",
                        "description": "String. Secret used to sign tokens when using symmetric algorithms (HS256).\n"
                    },
                    "skipConsentForVerifiableFirstPartyClients": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not to skip user consent for applications flagged as first party.\n"
                    },
                    "tokenDialect": {
                        "type": "string",
                        "description": "String. Dialect of access tokens that should be issued for this resource server. Options include `access_token` or `access_token_authz` (includes permissions).\n"
                    },
                    "tokenLifetime": {
                        "type": "integer",
                        "description": "Integer. Number of seconds during which access tokens issued for this resource server from the token endpoint remain valid.\n"
                    },
                    "tokenLifetimeForWeb": {
                        "type": "integer",
                        "description": "Integer. Number of seconds during which access tokens issued for this resource server via implicit or hybrid flows remain valid. Cannot be greater than the `token_lifetime` value.\n"
                    },
                    "verificationLocation": {
                        "type": "string",
                        "description": "String\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/role:Role": {
            "description": "With this resource, you can created and manage collections of permissions that can be assigned to users, which are otherwise known as roles. Permissions (scopes) are created on auth0_resource_server, then associated with roles and optionally, users using this resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myResourceServer = new auth0.ResourceServer(\"my_resource_server\", {\n    enforcePolicies: true,\n    identifier: \"my-resource-server-identifier\",\n    scopes: [{\n        description: \"read something\",\n        value: \"read:something\",\n    }],\n    signingAlg: \"RS256\",\n    skipConsentForVerifiableFirstPartyClients: true,\n    tokenLifetime: 86400,\n});\nconst myRole = new auth0.Role(\"my_role\", {\n    description: \"Role Description...\",\n    permissions: [{\n        name: \"read:something\",\n        resourceServerIdentifier: myResourceServer.identifier,\n    }],\n});\nconst myUser = new auth0.User(\"my_user\", {\n    connectionName: \"Username-Password-Authentication\",\n    email: \"test@test.com\",\n    nickname: \"testnick\",\n    password: \"passpass$12$12\",\n    roles: [myRole.id],\n    userId: \"auth0|1234567890\",\n    username: \"testnick\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_resource_server = auth0.ResourceServer(\"myResourceServer\",\n    enforce_policies=True,\n    identifier=\"my-resource-server-identifier\",\n    scopes=[auth0.ResourceServerScopeArgs(\n        description=\"read something\",\n        value=\"read:something\",\n    )],\n    signing_alg=\"RS256\",\n    skip_consent_for_verifiable_first_party_clients=True,\n    token_lifetime=86400)\nmy_role = auth0.Role(\"myRole\",\n    description=\"Role Description...\",\n    permissions=[auth0.RolePermissionArgs(\n        name=\"read:something\",\n        resource_server_identifier=my_resource_server.identifier,\n    )])\nmy_user = auth0.User(\"myUser\",\n    connection_name=\"Username-Password-Authentication\",\n    email=\"test@test.com\",\n    nickname=\"testnick\",\n    password=\"passpass$12$12\",\n    roles=[my_role.id],\n    user_id=\"auth0|1234567890\",\n    username=\"testnick\")\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myResourceServer = new Auth0.ResourceServer(\"myResourceServer\", new Auth0.ResourceServerArgs\n        {\n            EnforcePolicies = true,\n            Identifier = \"my-resource-server-identifier\",\n            Scopes = \n            {\n                new Auth0.Inputs.ResourceServerScopeArgs\n                {\n                    Description = \"read something\",\n                    Value = \"read:something\",\n                },\n            },\n            SigningAlg = \"RS256\",\n            SkipConsentForVerifiableFirstPartyClients = true,\n            TokenLifetime = 86400,\n        });\n        var myRole = new Auth0.Role(\"myRole\", new Auth0.RoleArgs\n        {\n            Description = \"Role Description...\",\n            Permissions = \n            {\n                new Auth0.Inputs.RolePermissionArgs\n                {\n                    Name = \"read:something\",\n                    ResourceServerIdentifier = myResourceServer.Identifier,\n                },\n            },\n        });\n        var myUser = new Auth0.User(\"myUser\", new Auth0.UserArgs\n        {\n            ConnectionName = \"Username-Password-Authentication\",\n            Email = \"test@test.com\",\n            Nickname = \"testnick\",\n            Password = \"passpass$12$12\",\n            Roles = \n            {\n                myRole.Id,\n            },\n            UserId = \"auth0|1234567890\",\n            Username = \"testnick\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyResourceServer, err := auth0.NewResourceServer(ctx, \"myResourceServer\", \u0026auth0.ResourceServerArgs{\n\t\t\tEnforcePolicies: pulumi.Bool(true),\n\t\t\tIdentifier:      pulumi.String(\"my-resource-server-identifier\"),\n\t\t\tScopes: ResourceServerScopeArray{\n\t\t\t\t\u0026ResourceServerScopeArgs{\n\t\t\t\t\tDescription: pulumi.String(\"read something\"),\n\t\t\t\t\tValue:       pulumi.String(\"read:something\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tSigningAlg: pulumi.String(\"RS256\"),\n\t\t\tSkipConsentForVerifiableFirstPartyClients: pulumi.Bool(true),\n\t\t\tTokenLifetime: pulumi.Int(86400),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyRole, err := auth0.NewRole(ctx, \"myRole\", \u0026auth0.RoleArgs{\n\t\t\tDescription: pulumi.String(\"Role Description...\"),\n\t\t\tPermissions: RolePermissionArray{\n\t\t\t\t\u0026RolePermissionArgs{\n\t\t\t\t\tName:                     pulumi.String(\"read:something\"),\n\t\t\t\t\tResourceServerIdentifier: myResourceServer.Identifier,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewUser(ctx, \"myUser\", \u0026auth0.UserArgs{\n\t\t\tConnectionName: pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tEmail:          pulumi.String(\"test@test.com\"),\n\t\t\tNickname:       pulumi.String(\"testnick\"),\n\t\t\tPassword:       pulumi.String(fmt.Sprintf(\"%v%v%v%v%v\", \"passpass\", \"$\", \"12\", \"$\", \"12\")),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tmyRole.ID(),\n\t\t\t},\n\t\t\tUserId:   pulumi.String(\"auth0|1234567890\"),\n\t\t\tUsername: pulumi.String(\"testnick\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "String. Description of the role.\n",
                    "default": "Managed by Pulumi"
                },
                "name": {
                    "type": "string",
                    "description": "String. Name for this role.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/RolePermission:RolePermission"
                    },
                    "description": "Set(Resource). Configuration settings for permissions (scopes) attached to the role. For details, see Permissions.\n"
                }
            },
            "required": [
                "description",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "String. Description of the role.\n",
                    "default": "Managed by Pulumi"
                },
                "name": {
                    "type": "string",
                    "description": "String. Name for this role.\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/RolePermission:RolePermission"
                    },
                    "description": "Set(Resource). Configuration settings for permissions (scopes) attached to the role. For details, see Permissions.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "String. Description of the role.\n",
                        "default": "Managed by Pulumi"
                    },
                    "name": {
                        "type": "string",
                        "description": "String. Name for this role.\n"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/RolePermission:RolePermission"
                        },
                        "description": "Set(Resource). Configuration settings for permissions (scopes) attached to the role. For details, see Permissions.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/rule:Rule": {
            "description": "With Auth0, you can create custom Javascript snippets that run in a secure, isolated sandbox as part of your authentication pipeline, which are otherwise known as rules. This resource allows you to create and manage rules. You can create global variable for use with rules by using the auth0.RuleConfig resource.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myRule = new auth0.Rule(\"my_rule\", {\n    enabled: true,\n    script: `function (user, context, callback) {\n  callback(null, user, context);\n}\n`,\n});\nconst myRuleConfig = new auth0.RuleConfig(\"my_rule_config\", {\n    key: \"foo\",\n    value: \"bar\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_rule = auth0.Rule(\"myRule\",\n    enabled=True,\n    script=\"\"\"function (user, context, callback) {\n  callback(null, user, context);\n}\n\n\"\"\")\nmy_rule_config = auth0.RuleConfig(\"myRuleConfig\",\n    key=\"foo\",\n    value=\"bar\")\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myRule = new Auth0.Rule(\"myRule\", new Auth0.RuleArgs\n        {\n            Enabled = true,\n            Script = @\"function (user, context, callback) {\n  callback(null, user, context);\n}\n\n\",\n        });\n        var myRuleConfig = new Auth0.RuleConfig(\"myRuleConfig\", new Auth0.RuleConfigArgs\n        {\n            Key = \"foo\",\n            Value = \"bar\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewRule(ctx, \"myRule\", \u0026auth0.RuleArgs{\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tScript:  pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"function (user, context, callback) {\\n\", \"  callback(null, user, context);\\n\", \"}\\n\", \"\\n\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewRuleConfig(ctx, \"myRuleConfig\", \u0026auth0.RuleConfigArgs{\n\t\t\tKey:   pulumi.String(\"foo\"),\n\t\t\tValue: pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether the rule is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "String. Name of the rule. May only contain alphanumeric characters, spaces, and hyphens. May neither start nor end with hyphens or spaces.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer. Order in which the rule executes relative to other rules. Lower-valued rules execute first.\n"
                },
                "script": {
                    "type": "string",
                    "description": "String. Code to be executed when the rule runs.\n"
                }
            },
            "required": [
                "name",
                "order",
                "script"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether the rule is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "String. Name of the rule. May only contain alphanumeric characters, spaces, and hyphens. May neither start nor end with hyphens or spaces.\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Integer. Order in which the rule executes relative to other rules. Lower-valued rules execute first.\n"
                },
                "script": {
                    "type": "string",
                    "description": "String. Code to be executed when the rule runs.\n"
                }
            },
            "requiredInputs": [
                "script"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Rule resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether the rule is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "String. Name of the rule. May only contain alphanumeric characters, spaces, and hyphens. May neither start nor end with hyphens or spaces.\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Integer. Order in which the rule executes relative to other rules. Lower-valued rules execute first.\n"
                    },
                    "script": {
                        "type": "string",
                        "description": "String. Code to be executed when the rule runs.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/ruleConfig:RuleConfig": {
            "description": "With Auth0, you can create custom Javascript snippets that run in a secure, isolated sandbox as part of your authentication pipeline, which are otherwise known as rules. This resource allows you to create and manage variables that are available to all rules via Auth0's global configuration object. Used in conjunction with configured rules.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst myRule = new auth0.Rule(\"my_rule\", {\n    enabled: true,\n    script: `function (user, context, callback) {\n  callback(null, user, context);\n}\n`,\n});\nconst myRuleConfig = new auth0.RuleConfig(\"my_rule_config\", {\n    key: \"foo\",\n    value: \"bar\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nmy_rule = auth0.Rule(\"myRule\",\n    enabled=True,\n    script=\"\"\"function (user, context, callback) {\n  callback(null, user, context);\n}\n\n\"\"\")\nmy_rule_config = auth0.RuleConfig(\"myRuleConfig\",\n    key=\"foo\",\n    value=\"bar\")\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myRule = new Auth0.Rule(\"myRule\", new Auth0.RuleArgs\n        {\n            Enabled = true,\n            Script = @\"function (user, context, callback) {\n  callback(null, user, context);\n}\n\n\",\n        });\n        var myRuleConfig = new Auth0.RuleConfig(\"myRuleConfig\", new Auth0.RuleConfigArgs\n        {\n            Key = \"foo\",\n            Value = \"bar\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewRule(ctx, \"myRule\", \u0026auth0.RuleArgs{\n\t\t\tEnabled: pulumi.Bool(true),\n\t\t\tScript:  pulumi.String(fmt.Sprintf(\"%v%v%v%v\", \"function (user, context, callback) {\\n\", \"  callback(null, user, context);\\n\", \"}\\n\", \"\\n\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewRuleConfig(ctx, \"myRuleConfig\", \u0026auth0.RuleConfigArgs{\n\t\t\tKey:   pulumi.String(\"foo\"),\n\t\t\tValue: pulumi.String(\"bar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "String. Key for a rules configuration variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "String, Case-sensitive. Value for a rules configuration variable.\n"
                }
            },
            "required": [
                "key",
                "value"
            ],
            "inputProperties": {
                "key": {
                    "type": "string",
                    "description": "String. Key for a rules configuration variable.\n"
                },
                "value": {
                    "type": "string",
                    "description": "String, Case-sensitive. Value for a rules configuration variable.\n"
                }
            },
            "requiredInputs": [
                "key",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RuleConfig resources.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "String. Key for a rules configuration variable.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "String, Case-sensitive. Value for a rules configuration variable.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/tenant:Tenant": {
            "description": "With this resource, you can manage Auth0 tenants, including setting logos and support contact information, setting error pages, and configuring default tenant behaviors.\n\n\u003e Auth0 does not currently support creating tenants through the Management API. Therefore this resource can only manage an existing tenant created through the Auth0 dashboard. \n\nAuth0 does not currently support adding/removing extensions on tenants through their API. The Auth0 dashboard must be used to add/remove extensions. \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\nimport * as fs from \"fs\";\n\nconst tenant = new auth0.Tenant(\"tenant\", {\n    allowedLogoutUrls: [\"http://mysite/logout\"],\n    changePassword: {\n        enabled: true,\n        html: fs.readFileSync(\"./password_reset.html\", \"utf-8\"),\n    },\n    defaultAudience: \"\u003cclient_id\u003e\",\n    defaultDirectory: \"Connection-Name\",\n    errorPage: {\n        html: fs.readFileSync(\"./error.html\", \"utf-8\"),\n        showLogLink: true,\n        url: \"http://mysite/errors\",\n    },\n    friendlyName: \"Tenant Name\",\n    guardianMfaPage: {\n        enabled: true,\n        html: fs.readFileSync(\"./guardian_multifactor.html\", \"utf-8\"),\n    },\n    pictureUrl: \"http://mysite/logo.png\",\n    sandboxVersion: \"8\",\n    sessionLifetime: 46000,\n    supportEmail: \"support@mysite\",\n    supportUrl: \"http://mysite/support\",\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\ntenant = auth0.Tenant(\"tenant\",\n    allowed_logout_urls=[\"http://mysite/logout\"],\n    change_password=auth0.TenantChangePasswordArgs(\n        enabled=True,\n        html=(lambda path: open(path).read())(\"./password_reset.html\"),\n    ),\n    default_audience=\"\u003cclient_id\u003e\",\n    default_directory=\"Connection-Name\",\n    error_page=auth0.TenantErrorPageArgs(\n        html=(lambda path: open(path).read())(\"./error.html\"),\n        show_log_link=True,\n        url=\"http://mysite/errors\",\n    ),\n    friendly_name=\"Tenant Name\",\n    guardian_mfa_page=auth0.TenantGuardianMfaPageArgs(\n        enabled=True,\n        html=(lambda path: open(path).read())(\"./guardian_multifactor.html\"),\n    ),\n    picture_url=\"http://mysite/logo.png\",\n    sandbox_version=\"8\",\n    session_lifetime=46000,\n    support_email=\"support@mysite\",\n    support_url=\"http://mysite/support\")\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var tenant = new Auth0.Tenant(\"tenant\", new Auth0.TenantArgs\n        {\n            AllowedLogoutUrls = \n            {\n                \"http://mysite/logout\",\n            },\n            ChangePassword = new Auth0.Inputs.TenantChangePasswordArgs\n            {\n                Enabled = true,\n                Html = File.ReadAllText(\"./password_reset.html\"),\n            },\n            DefaultAudience = \"\u003cclient_id\u003e\",\n            DefaultDirectory = \"Connection-Name\",\n            ErrorPage = new Auth0.Inputs.TenantErrorPageArgs\n            {\n                Html = File.ReadAllText(\"./error.html\"),\n                ShowLogLink = true,\n                Url = \"http://mysite/errors\",\n            },\n            FriendlyName = \"Tenant Name\",\n            GuardianMfaPage = new Auth0.Inputs.TenantGuardianMfaPageArgs\n            {\n                Enabled = true,\n                Html = File.ReadAllText(\"./guardian_multifactor.html\"),\n            },\n            PictureUrl = \"http://mysite/logo.png\",\n            SandboxVersion = \"8\",\n            SessionLifetime = 46000,\n            SupportEmail = \"support@mysite\",\n            SupportUrl = \"http://mysite/support\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := auth0.NewTenant(ctx, \"tenant\", \u0026auth0.TenantArgs{\n\t\t\tAllowedLogoutUrls: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"http://mysite/logout\"),\n\t\t\t},\n\t\t\tChangePassword: \u0026TenantChangePasswordArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tHtml:    readFileOrPanic(\"./password_reset.html\"),\n\t\t\t},\n\t\t\tDefaultAudience:  pulumi.String(\"\u003cclient_id\u003e\"),\n\t\t\tDefaultDirectory: pulumi.String(\"Connection-Name\"),\n\t\t\tErrorPage: \u0026TenantErrorPageArgs{\n\t\t\t\tHtml:        readFileOrPanic(\"./error.html\"),\n\t\t\t\tShowLogLink: pulumi.Bool(true),\n\t\t\t\tUrl:         pulumi.String(\"http://mysite/errors\"),\n\t\t\t},\n\t\t\tFriendlyName: pulumi.String(\"Tenant Name\"),\n\t\t\tGuardianMfaPage: \u0026TenantGuardianMfaPageArgs{\n\t\t\t\tEnabled: pulumi.Bool(true),\n\t\t\t\tHtml:    readFileOrPanic(\"./guardian_multifactor.html\"),\n\t\t\t},\n\t\t\tPictureUrl:      pulumi.String(\"http://mysite/logo.png\"),\n\t\t\tSandboxVersion:  pulumi.String(\"8\"),\n\t\t\tSessionLifetime: pulumi.Float64(46000),\n\t\t\tSupportEmail:    pulumi.String(\"support@mysite\"),\n\t\t\tSupportUrl:      pulumi.String(\"http://mysite/support\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). URLs that Auth0 may redirect to after logout.\n"
                },
                "changePassword": {
                    "$ref": "#/types/auth0:index/TenantChangePassword:TenantChangePassword",
                    "description": "List(Resource). Configuration settings for change passsword page. For details, see Change Password Page.\n"
                },
                "defaultAudience": {
                    "type": "string",
                    "description": "String. API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.\n"
                },
                "defaultDirectory": {
                    "type": "string",
                    "description": "String. Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, `ad`, `auth0`, `email`, `sms`, `waad`, and `adfs`.\n"
                },
                "defaultRedirectionUri": {
                    "type": "string",
                    "description": "String. The default absolute redirection uri, must be https and cannot contain a fragment.\n"
                },
                "enabledLocales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). Supported locales for the user interface. The first locale in the list will be used to set the default locale.\n"
                },
                "errorPage": {
                    "$ref": "#/types/auth0:index/TenantErrorPage:TenantErrorPage",
                    "description": "List(Resource). Configuration settings for error pages. For details, see Error Page.\n"
                },
                "flags": {
                    "$ref": "#/types/auth0:index/TenantFlags:TenantFlags",
                    "description": "List(Resource). Configuration settings for tenant flags. For details, see Flags.\n"
                },
                "friendlyName": {
                    "type": "string",
                    "description": "String. Friendly name for the tenant.\n"
                },
                "guardianMfaPage": {
                    "$ref": "#/types/auth0:index/TenantGuardianMfaPage:TenantGuardianMfaPage",
                    "description": "List(Resource). Configuration settings for the Guardian MFA page. For details, see Guardian MFA Page.\n"
                },
                "idleSessionLifetime": {
                    "type": "number",
                    "description": "Integer. Number of hours during which a session can be inactive before the user must log in again.\n"
                },
                "pictureUrl": {
                    "type": "string",
                    "description": ". String URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.\n"
                },
                "sandboxVersion": {
                    "type": "string",
                    "description": "String. Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0's functionality.\n"
                },
                "sessionLifetime": {
                    "type": "number",
                    "description": "Integer. Number of hours during which a session will stay valid.\n"
                },
                "supportEmail": {
                    "type": "string",
                    "description": "String. Support email address for authenticating users.\n"
                },
                "supportUrl": {
                    "type": "string",
                    "description": "String. Support URL for authenticating users.\n"
                },
                "universalLogin": {
                    "$ref": "#/types/auth0:index/TenantUniversalLogin:TenantUniversalLogin",
                    "description": "List(Resource). Configuration settings for Universal Login. For details, see Universal Login.\n"
                }
            },
            "required": [
                "allowedLogoutUrls",
                "changePassword",
                "defaultAudience",
                "defaultDirectory",
                "defaultRedirectionUri",
                "enabledLocales",
                "errorPage",
                "flags",
                "friendlyName",
                "guardianMfaPage",
                "idleSessionLifetime",
                "pictureUrl",
                "sandboxVersion",
                "sessionLifetime",
                "supportEmail",
                "supportUrl",
                "universalLogin"
            ],
            "inputProperties": {
                "allowedLogoutUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). URLs that Auth0 may redirect to after logout.\n"
                },
                "changePassword": {
                    "$ref": "#/types/auth0:index/TenantChangePassword:TenantChangePassword",
                    "description": "List(Resource). Configuration settings for change passsword page. For details, see Change Password Page.\n"
                },
                "defaultAudience": {
                    "type": "string",
                    "description": "String. API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.\n"
                },
                "defaultDirectory": {
                    "type": "string",
                    "description": "String. Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, `ad`, `auth0`, `email`, `sms`, `waad`, and `adfs`.\n"
                },
                "defaultRedirectionUri": {
                    "type": "string",
                    "description": "String. The default absolute redirection uri, must be https and cannot contain a fragment.\n"
                },
                "enabledLocales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List(String). Supported locales for the user interface. The first locale in the list will be used to set the default locale.\n"
                },
                "errorPage": {
                    "$ref": "#/types/auth0:index/TenantErrorPage:TenantErrorPage",
                    "description": "List(Resource). Configuration settings for error pages. For details, see Error Page.\n"
                },
                "flags": {
                    "$ref": "#/types/auth0:index/TenantFlags:TenantFlags",
                    "description": "List(Resource). Configuration settings for tenant flags. For details, see Flags.\n"
                },
                "friendlyName": {
                    "type": "string",
                    "description": "String. Friendly name for the tenant.\n"
                },
                "guardianMfaPage": {
                    "$ref": "#/types/auth0:index/TenantGuardianMfaPage:TenantGuardianMfaPage",
                    "description": "List(Resource). Configuration settings for the Guardian MFA page. For details, see Guardian MFA Page.\n"
                },
                "idleSessionLifetime": {
                    "type": "number",
                    "description": "Integer. Number of hours during which a session can be inactive before the user must log in again.\n"
                },
                "pictureUrl": {
                    "type": "string",
                    "description": ". String URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.\n"
                },
                "sandboxVersion": {
                    "type": "string",
                    "description": "String. Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0's functionality.\n"
                },
                "sessionLifetime": {
                    "type": "number",
                    "description": "Integer. Number of hours during which a session will stay valid.\n"
                },
                "supportEmail": {
                    "type": "string",
                    "description": "String. Support email address for authenticating users.\n"
                },
                "supportUrl": {
                    "type": "string",
                    "description": "String. Support URL for authenticating users.\n"
                },
                "universalLogin": {
                    "$ref": "#/types/auth0:index/TenantUniversalLogin:TenantUniversalLogin",
                    "description": "List(Resource). Configuration settings for Universal Login. For details, see Universal Login.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tenant resources.\n",
                "properties": {
                    "allowedLogoutUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List(String). URLs that Auth0 may redirect to after logout.\n"
                    },
                    "changePassword": {
                        "$ref": "#/types/auth0:index/TenantChangePassword:TenantChangePassword",
                        "description": "List(Resource). Configuration settings for change passsword page. For details, see Change Password Page.\n"
                    },
                    "defaultAudience": {
                        "type": "string",
                        "description": "String. API Audience to use by default for API Authorization flows. This setting is equivalent to appending the audience to every authorization request made to the tenant for every application.\n"
                    },
                    "defaultDirectory": {
                        "type": "string",
                        "description": "String. Name of the connection to be used for Password Grant exchanges. Options include `auth0-adldap`, `ad`, `auth0`, `email`, `sms`, `waad`, and `adfs`.\n"
                    },
                    "defaultRedirectionUri": {
                        "type": "string",
                        "description": "String. The default absolute redirection uri, must be https and cannot contain a fragment.\n"
                    },
                    "enabledLocales": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List(String). Supported locales for the user interface. The first locale in the list will be used to set the default locale.\n"
                    },
                    "errorPage": {
                        "$ref": "#/types/auth0:index/TenantErrorPage:TenantErrorPage",
                        "description": "List(Resource). Configuration settings for error pages. For details, see Error Page.\n"
                    },
                    "flags": {
                        "$ref": "#/types/auth0:index/TenantFlags:TenantFlags",
                        "description": "List(Resource). Configuration settings for tenant flags. For details, see Flags.\n"
                    },
                    "friendlyName": {
                        "type": "string",
                        "description": "String. Friendly name for the tenant.\n"
                    },
                    "guardianMfaPage": {
                        "$ref": "#/types/auth0:index/TenantGuardianMfaPage:TenantGuardianMfaPage",
                        "description": "List(Resource). Configuration settings for the Guardian MFA page. For details, see Guardian MFA Page.\n"
                    },
                    "idleSessionLifetime": {
                        "type": "number",
                        "description": "Integer. Number of hours during which a session can be inactive before the user must log in again.\n"
                    },
                    "pictureUrl": {
                        "type": "string",
                        "description": ". String URL of logo to be shown for the tenant. Recommended size is 150px x 150px. If no URL is provided, the Auth0 logo will be used.\n"
                    },
                    "sandboxVersion": {
                        "type": "string",
                        "description": "String. Selected sandbox version for the extensibility environment, which allows you to use custom scripts to extend parts of Auth0's functionality.\n"
                    },
                    "sessionLifetime": {
                        "type": "number",
                        "description": "Integer. Number of hours during which a session will stay valid.\n"
                    },
                    "supportEmail": {
                        "type": "string",
                        "description": "String. Support email address for authenticating users.\n"
                    },
                    "supportUrl": {
                        "type": "string",
                        "description": "String. Support URL for authenticating users.\n"
                    },
                    "universalLogin": {
                        "$ref": "#/types/auth0:index/TenantUniversalLogin:TenantUniversalLogin",
                        "description": "List(Resource). Configuration settings for Universal Login. For details, see Universal Login.\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/triggerBinding:TriggerBinding": {
            "description": "With this resource, you can bind an action to a trigger. Once an action is\ncreated and deployed, it can be attached (i.e. bound) to a trigger so that it\nwill be executed as part of a flow. \n\nThe list of actions reflects the order in which they will be executed during the\nappropriate flow.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst actionFoo = new auth0.Action(\"actionFoo\", {\n    supportedTriggers: {\n        id: \"post-login\",\n        version: \"v2\",\n    },\n    code: `exports.onContinuePostLogin = async (event, api) =\u003e { \n\tconsole.log(\"foo\") \n};\"\n`,\n    deploy: true,\n});\nconst actionBar = new auth0.Action(\"actionBar\", {\n    supportedTriggers: {\n        id: \"post-login\",\n        version: \"v2\",\n    },\n    code: `exports.onContinuePostLogin = async (event, api) =\u003e { \n\tconsole.log(\"bar\") \n};\"\n`,\n    deploy: true,\n});\nconst loginFlow = new auth0.TriggerBinding(\"loginFlow\", {\n    trigger: \"post-login\",\n    actions: [\n        {\n            id: actionFoo.id,\n            displayName: actionFoo.name,\n        },\n        {\n            id: actionBar.id,\n            displayName: actionBar.name,\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\naction_foo = auth0.Action(\"actionFoo\",\n    supported_triggers=auth0.ActionSupportedTriggersArgs(\n        id=\"post-login\",\n        version=\"v2\",\n    ),\n    code=\"\"\"exports.onContinuePostLogin = async (event, api) =\u003e { \n\tconsole.log(\"foo\") \n};\"\n\"\"\",\n    deploy=True)\naction_bar = auth0.Action(\"actionBar\",\n    supported_triggers=auth0.ActionSupportedTriggersArgs(\n        id=\"post-login\",\n        version=\"v2\",\n    ),\n    code=\"\"\"exports.onContinuePostLogin = async (event, api) =\u003e { \n\tconsole.log(\"bar\") \n};\"\n\"\"\",\n    deploy=True)\nlogin_flow = auth0.TriggerBinding(\"loginFlow\",\n    trigger=\"post-login\",\n    actions=[\n        auth0.TriggerBindingActionArgs(\n            id=action_foo.id,\n            display_name=action_foo.name,\n        ),\n        auth0.TriggerBindingActionArgs(\n            id=action_bar.id,\n            display_name=action_bar.name,\n        ),\n    ])\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var actionFoo = new Auth0.Action(\"actionFoo\", new Auth0.ActionArgs\n        {\n            SupportedTriggers = new Auth0.Inputs.ActionSupportedTriggersArgs\n            {\n                Id = \"post-login\",\n                Version = \"v2\",\n            },\n            Code = @\"exports.onContinuePostLogin = async (event, api) =\u003e { \n\tconsole.log(\"\"foo\"\") \n};\"\"\n\",\n            Deploy = true,\n        });\n        var actionBar = new Auth0.Action(\"actionBar\", new Auth0.ActionArgs\n        {\n            SupportedTriggers = new Auth0.Inputs.ActionSupportedTriggersArgs\n            {\n                Id = \"post-login\",\n                Version = \"v2\",\n            },\n            Code = @\"exports.onContinuePostLogin = async (event, api) =\u003e { \n\tconsole.log(\"\"bar\"\") \n};\"\"\n\",\n            Deploy = true,\n        });\n        var loginFlow = new Auth0.TriggerBinding(\"loginFlow\", new Auth0.TriggerBindingArgs\n        {\n            Trigger = \"post-login\",\n            Actions = \n            {\n                new Auth0.Inputs.TriggerBindingActionArgs\n                {\n                    Id = actionFoo.Id,\n                    DisplayName = actionFoo.Name,\n                },\n                new Auth0.Inputs.TriggerBindingActionArgs\n                {\n                    Id = actionBar.Id,\n                    DisplayName = actionBar.Name,\n                },\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tactionFoo, err := auth0.NewAction(ctx, \"actionFoo\", \u0026auth0.ActionArgs{\n\t\t\tSupportedTriggers: \u0026ActionSupportedTriggersArgs{\n\t\t\t\tId:      pulumi.String(\"post-login\"),\n\t\t\t\tVersion: pulumi.String(\"v2\"),\n\t\t\t},\n\t\t\tCode: pulumi.String(fmt.Sprintf(\"%v%v%v\", \"exports.onContinuePostLogin = async (event, api) =\u003e { \\n\", \"\tconsole.log(\\\"foo\\\") \\n\", \"};\\\"\\n\")),\n\t\t\tDeploy: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tactionBar, err := auth0.NewAction(ctx, \"actionBar\", \u0026auth0.ActionArgs{\n\t\t\tSupportedTriggers: \u0026ActionSupportedTriggersArgs{\n\t\t\t\tId:      pulumi.String(\"post-login\"),\n\t\t\t\tVersion: pulumi.String(\"v2\"),\n\t\t\t},\n\t\t\tCode: pulumi.String(fmt.Sprintf(\"%v%v%v\", \"exports.onContinuePostLogin = async (event, api) =\u003e { \\n\", \"\tconsole.log(\\\"bar\\\") \\n\", \"};\\\"\\n\")),\n\t\t\tDeploy: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewTriggerBinding(ctx, \"loginFlow\", \u0026auth0.TriggerBindingArgs{\n\t\t\tTrigger: pulumi.String(\"post-login\"),\n\t\t\tActions: TriggerBindingActionArray{\n\t\t\t\t\u0026TriggerBindingActionArgs{\n\t\t\t\t\tId:          actionFoo.ID(),\n\t\t\t\t\tDisplayName: actionFoo.Name,\n\t\t\t\t},\n\t\t\t\t\u0026TriggerBindingActionArgs{\n\t\t\t\t\tId:          actionBar.ID(),\n\t\t\t\t\tDisplayName: actionBar.Name,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nauth0_trigger_binding can be imported using the bindings trigger ID, e.g.\n\n```sh\n $ pulumi import auth0:index/triggerBinding:TriggerBinding example \"post-login\"\n```\n\n ",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/TriggerBindingAction:TriggerBindingAction"
                    },
                    "description": "The actions bound to this trigger. For details, see\nActions.\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The id of the trigger to bind with\n"
                }
            },
            "required": [
                "actions",
                "trigger"
            ],
            "inputProperties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/auth0:index/TriggerBindingAction:TriggerBindingAction"
                    },
                    "description": "The actions bound to this trigger. For details, see\nActions.\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The id of the trigger to bind with\n"
                }
            },
            "requiredInputs": [
                "actions",
                "trigger"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TriggerBinding resources.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/auth0:index/TriggerBindingAction:TriggerBindingAction"
                        },
                        "description": "The actions bound to this trigger. For details, see\nActions.\n"
                    },
                    "trigger": {
                        "type": "string",
                        "description": "The id of the trigger to bind with\n"
                    }
                },
                "type": "object"
            }
        },
        "auth0:index/user:User": {
            "description": "With this resource, you can manage user identities, including resetting passwords, and creating, provisioning, blocking, and deleting users.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as auth0 from \"@pulumi/auth0\";\n\nconst admin = new auth0.Role(\"admin\", {description: \"Administrator\"});\nconst user = new auth0.User(\"user\", {\n    connectionName: \"Username-Password-Authentication\",\n    userId: \"12345\",\n    username: \"unique_username\",\n    givenName: \"Firstname\",\n    familyName: \"Lastname\",\n    nickname: \"some.nickname\",\n    email: \"test@test.com\",\n    emailVerified: true,\n    password: `passpass$12$12`,\n    roles: [admin.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_auth0 as auth0\n\nadmin = auth0.Role(\"admin\", description=\"Administrator\")\nuser = auth0.User(\"user\",\n    connection_name=\"Username-Password-Authentication\",\n    user_id=\"12345\",\n    username=\"unique_username\",\n    given_name=\"Firstname\",\n    family_name=\"Lastname\",\n    nickname=\"some.nickname\",\n    email=\"test@test.com\",\n    email_verified=True,\n    password=\"passpass$12$12\",\n    roles=[admin.id])\n```\n```csharp\nusing Pulumi;\nusing Auth0 = Pulumi.Auth0;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var admin = new Auth0.Role(\"admin\", new Auth0.RoleArgs\n        {\n            Description = \"Administrator\",\n        });\n        var user = new Auth0.User(\"user\", new Auth0.UserArgs\n        {\n            ConnectionName = \"Username-Password-Authentication\",\n            UserId = \"12345\",\n            Username = \"unique_username\",\n            GivenName = \"Firstname\",\n            FamilyName = \"Lastname\",\n            Nickname = \"some.nickname\",\n            Email = \"test@test.com\",\n            EmailVerified = true,\n            Password = \"passpass$12$12\",\n            Roles = \n            {\n                admin.Id,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tadmin, err := auth0.NewRole(ctx, \"admin\", \u0026auth0.RoleArgs{\n\t\t\tDescription: pulumi.String(\"Administrator\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = auth0.NewUser(ctx, \"user\", \u0026auth0.UserArgs{\n\t\t\tConnectionName: pulumi.String(\"Username-Password-Authentication\"),\n\t\t\tUserId:         pulumi.String(\"12345\"),\n\t\t\tUsername:       pulumi.String(\"unique_username\"),\n\t\t\tGivenName:      pulumi.String(\"Firstname\"),\n\t\t\tFamilyName:     pulumi.String(\"Lastname\"),\n\t\t\tNickname:       pulumi.String(\"some.nickname\"),\n\t\t\tEmail:          pulumi.String(\"test@test.com\"),\n\t\t\tEmailVerified:  pulumi.Bool(true),\n\t\t\tPassword:       pulumi.String(fmt.Sprintf(\"%v%v%v%v%v\", \"passpass\", \"$\", \"12\", \"$\", \"12\")),\n\t\t\tRoles: pulumi.StringArray{\n\t\t\t\tadmin.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "appMetadata": {
                    "type": "string",
                    "description": "String, JSON format. Custom fields that store info about the user that impact the user's core functionality, such as how an application functions or what the user can access. Examples include support plans and IDs for external accounts.\n"
                },
                "blocked": {
                    "type": "boolean"
                },
                "connectionName": {
                    "type": "string",
                    "description": "String. Name of the connection from which the user information was sourced.\n"
                },
                "email": {
                    "type": "string",
                    "description": "String. Email address of the user.\n"
                },
                "emailVerified": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the email address has been verified.\n"
                },
                "familyName": {
                    "type": "string"
                },
                "givenName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string",
                    "description": "String. Preferred nickname or alias of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "String, Case-sensitive. Initial password for this user. Used for non-SMS connections.\n"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "String. Phone number for the user; follows the E.164 recommendation. Used for SMS connections.\n"
                },
                "phoneVerified": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the phone number has been verified.\n"
                },
                "picture": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set(String). Set of IDs of roles assigned to the user.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "String. ID of the user.\n"
                },
                "userMetadata": {
                    "type": "string",
                    "description": "String, JSON format. Custom fields that store info about the user that does not impact a user's core functionality. Examples include work address, home address, and user preferences.\n"
                },
                "username": {
                    "type": "string",
                    "description": "String. Username of the user. Only valid if the connection requires a username.\n"
                },
                "verifyEmail": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the user will receive a verification email after creation. Overrides behavior of `email_verified` parameter.\n"
                }
            },
            "required": [
                "connectionName",
                "name",
                "nickname",
                "picture",
                "userId"
            ],
            "inputProperties": {
                "appMetadata": {
                    "type": "string",
                    "description": "String, JSON format. Custom fields that store info about the user that impact the user's core functionality, such as how an application functions or what the user can access. Examples include support plans and IDs for external accounts.\n"
                },
                "blocked": {
                    "type": "boolean"
                },
                "connectionName": {
                    "type": "string",
                    "description": "String. Name of the connection from which the user information was sourced.\n"
                },
                "email": {
                    "type": "string",
                    "description": "String. Email address of the user.\n"
                },
                "emailVerified": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the email address has been verified.\n"
                },
                "familyName": {
                    "type": "string"
                },
                "givenName": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string",
                    "description": "String. Preferred nickname or alias of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "String, Case-sensitive. Initial password for this user. Used for non-SMS connections.\n"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "String. Phone number for the user; follows the E.164 recommendation. Used for SMS connections.\n"
                },
                "phoneVerified": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the phone number has been verified.\n"
                },
                "picture": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set(String). Set of IDs of roles assigned to the user.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "String. ID of the user.\n"
                },
                "userMetadata": {
                    "type": "string",
                    "description": "String, JSON format. Custom fields that store info about the user that does not impact a user's core functionality. Examples include work address, home address, and user preferences.\n"
                },
                "username": {
                    "type": "string",
                    "description": "String. Username of the user. Only valid if the connection requires a username.\n"
                },
                "verifyEmail": {
                    "type": "boolean",
                    "description": "Boolean. Indicates whether or not the user will receive a verification email after creation. Overrides behavior of `email_verified` parameter.\n"
                }
            },
            "requiredInputs": [
                "connectionName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "appMetadata": {
                        "type": "string",
                        "description": "String, JSON format. Custom fields that store info about the user that impact the user's core functionality, such as how an application functions or what the user can access. Examples include support plans and IDs for external accounts.\n"
                    },
                    "blocked": {
                        "type": "boolean"
                    },
                    "connectionName": {
                        "type": "string",
                        "description": "String. Name of the connection from which the user information was sourced.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "String. Email address of the user.\n"
                    },
                    "emailVerified": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not the email address has been verified.\n"
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nickname": {
                        "type": "string",
                        "description": "String. Preferred nickname or alias of the user.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "String, Case-sensitive. Initial password for this user. Used for non-SMS connections.\n"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "description": "String. Phone number for the user; follows the E.164 recommendation. Used for SMS connections.\n"
                    },
                    "phoneVerified": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not the phone number has been verified.\n"
                    },
                    "picture": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set(String). Set of IDs of roles assigned to the user.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "String. ID of the user.\n"
                    },
                    "userMetadata": {
                        "type": "string",
                        "description": "String, JSON format. Custom fields that store info about the user that does not impact a user's core functionality. Examples include work address, home address, and user preferences.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "String. Username of the user. Only valid if the connection requires a username.\n"
                    },
                    "verifyEmail": {
                        "type": "boolean",
                        "description": "Boolean. Indicates whether or not the user will receive a verification email after creation. Overrides behavior of `email_verified` parameter.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing auth0 cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/alexkappa/terraform-provider-auth0)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-auth0` repo](https://github.com/pulumi/pulumi-auth0/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`alexkappa/terraform-provider-auth0` repo](https://github.com/alexkappa/terraform-provider-auth0/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/alexkappa/terraform-provider-auth0)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-auth0` repo](https://github.com/pulumi/pulumi-auth0/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`alexkappa/terraform-provider-auth0` repo](https://github.com/alexkappa/terraform-provider-auth0/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}