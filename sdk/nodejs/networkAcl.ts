// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * With this resource, you can create and manage NetworkACLs for a tenant.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as auth0 from "@pulumi/auth0";
 *
 * // Example of auth0_network_acl with match criteria
 * const myNetworkAclMatch = new auth0.NetworkAcl("my_network_acl_match", {
 *     description: "Example with match network ACL",
 *     active: true,
 *     priority: 1,
 *     rule: {
 *         action: {
 *             allow: true,
 *         },
 *         scope: "management",
 *         match: {
 *             geoCountryCodes: [
 *                 "US",
 *                 "CA",
 *             ],
 *             geoSubdivisionCodes: [
 *                 "US-NY",
 *                 "CA-ON",
 *             ],
 *         },
 *     },
 * });
 * // Example of auth0_network_acl with not-match criteria
 * const myNetworkAclNotMatch = new auth0.NetworkAcl("my_network_acl_not_match", {
 *     description: "Example with not match network ACL",
 *     active: true,
 *     priority: 3,
 *     rule: {
 *         action: {
 *             log: true,
 *         },
 *         scope: "authentication",
 *         notMatch: {
 *             asns: [9876],
 *             ipv4Cidrs: [
 *                 "192.168.1.0/24",
 *                 "10.0.0.0/8",
 *             ],
 *             ipv6Cidrs: ["2001:db8::/32"],
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported using the network acl ID.
 *
 * Example:
 *
 * ```sh
 * $ pulumi import auth0:index/networkAcl:NetworkAcl my_network_acl "167f9a50-4444-3333-1111-ndfdaf953ab4"
 * ```
 */
export class NetworkAcl extends pulumi.CustomResource {
    /**
     * Get an existing NetworkAcl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkAclState, opts?: pulumi.CustomResourceOptions): NetworkAcl {
        return new NetworkAcl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'auth0:index/networkAcl:NetworkAcl';

    /**
     * Returns true if the given object is an instance of NetworkAcl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkAcl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkAcl.__pulumiType;
    }

    /**
     * Whether the Network ACL is active
     */
    public readonly active!: pulumi.Output<boolean>;
    /**
     * The description of the Network ACL
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The priority of the Network ACL. Must be unique between 1 and 10.
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * The rule of the Network ACL
     */
    public readonly rule!: pulumi.Output<outputs.NetworkAclRule>;

    /**
     * Create a NetworkAcl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkAclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkAclArgs | NetworkAclState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkAclState | undefined;
            resourceInputs["active"] = state ? state.active : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["rule"] = state ? state.rule : undefined;
        } else {
            const args = argsOrState as NetworkAclArgs | undefined;
            if ((!args || args.active === undefined) && !opts.urn) {
                throw new Error("Missing required property 'active'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.priority === undefined) && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if ((!args || args.rule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rule'");
            }
            resourceInputs["active"] = args ? args.active : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["rule"] = args ? args.rule : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkAcl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkAcl resources.
 */
export interface NetworkAclState {
    /**
     * Whether the Network ACL is active
     */
    active?: pulumi.Input<boolean>;
    /**
     * The description of the Network ACL
     */
    description?: pulumi.Input<string>;
    /**
     * The priority of the Network ACL. Must be unique between 1 and 10.
     */
    priority?: pulumi.Input<number>;
    /**
     * The rule of the Network ACL
     */
    rule?: pulumi.Input<inputs.NetworkAclRule>;
}

/**
 * The set of arguments for constructing a NetworkAcl resource.
 */
export interface NetworkAclArgs {
    /**
     * Whether the Network ACL is active
     */
    active: pulumi.Input<boolean>;
    /**
     * The description of the Network ACL
     */
    description: pulumi.Input<string>;
    /**
     * The priority of the Network ACL. Must be unique between 1 and 10.
     */
    priority: pulumi.Input<number>;
    /**
     * The rule of the Network ACL
     */
    rule: pulumi.Input<inputs.NetworkAclRule>;
}
