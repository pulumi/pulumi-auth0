// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * With Auth0, you can use a custom domain to maintain a consistent user experience. This is a three-step process; you must configure the custom domain in Auth0, then create a DNS record for the domain, then verify the DNS record in Auth0. This resource allows for automating the verification part of the process.
 *
 * ## Import
 *
 * You can import this resource using the custom domain ID. # Example
 *
 * ```sh
 *  $ pulumi import auth0:index/customDomainVerification:CustomDomainVerification my_custom_domain_verification "cd_XXXXXXXXXXXXXXXX"
 * ```
 */
export class CustomDomainVerification extends pulumi.CustomResource {
    /**
     * Get an existing CustomDomainVerification resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomDomainVerificationState, opts?: pulumi.CustomResourceOptions): CustomDomainVerification {
        return new CustomDomainVerification(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'auth0:index/customDomainVerification:CustomDomainVerification';

    /**
     * Returns true if the given object is an instance of CustomDomainVerification.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomDomainVerification {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomDomainVerification.__pulumiType;
    }

    /**
     * The value of the `cname-api-key` header to send when forwarding requests. Only present if the type of the custom domain
     * is `self_managed_certs` and Terraform originally managed the domain's verification.
     */
    public /*out*/ readonly cnameApiKey!: pulumi.Output<string>;
    /**
     * ID of the custom domain resource.
     */
    public readonly customDomainId!: pulumi.Output<string>;
    /**
     * The DNS name of the Auth0 origin server that handles traffic for the custom domain.
     */
    public /*out*/ readonly originDomainName!: pulumi.Output<string>;

    /**
     * Create a CustomDomainVerification resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomDomainVerificationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomDomainVerificationArgs | CustomDomainVerificationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomDomainVerificationState | undefined;
            resourceInputs["cnameApiKey"] = state ? state.cnameApiKey : undefined;
            resourceInputs["customDomainId"] = state ? state.customDomainId : undefined;
            resourceInputs["originDomainName"] = state ? state.originDomainName : undefined;
        } else {
            const args = argsOrState as CustomDomainVerificationArgs | undefined;
            if ((!args || args.customDomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customDomainId'");
            }
            resourceInputs["customDomainId"] = args ? args.customDomainId : undefined;
            resourceInputs["cnameApiKey"] = undefined /*out*/;
            resourceInputs["originDomainName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["cnameApiKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CustomDomainVerification.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomDomainVerification resources.
 */
export interface CustomDomainVerificationState {
    /**
     * The value of the `cname-api-key` header to send when forwarding requests. Only present if the type of the custom domain
     * is `self_managed_certs` and Terraform originally managed the domain's verification.
     */
    cnameApiKey?: pulumi.Input<string>;
    /**
     * ID of the custom domain resource.
     */
    customDomainId?: pulumi.Input<string>;
    /**
     * The DNS name of the Auth0 origin server that handles traffic for the custom domain.
     */
    originDomainName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomDomainVerification resource.
 */
export interface CustomDomainVerificationArgs {
    /**
     * ID of the custom domain resource.
     */
    customDomainId: pulumi.Input<string>;
}
