// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Allows you to manage Auth0 Event Streams.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as auth0 from "@pulumi/auth0";
 *
 * // Creates an event stream of type eventbridge
 * const myEventStreamEventBridge = new auth0.EventStream("my_event_stream_event_bridge", {
 *     name: "my-eventbridge",
 *     destinationType: "eventbridge",
 *     subscriptions: [
 *         "user.created",
 *         "user.updated",
 *     ],
 *     eventbridgeConfiguration: {
 *         awsAccountId: "242849305777",
 *         awsRegion: "us-east-1",
 *     },
 * });
 * // Creates an event stream of type webhook
 * const myEventStreamWebhook = new auth0.EventStream("my_event_stream_webhook", {
 *     name: "my-webhook",
 *     destinationType: "webhook",
 *     subscriptions: [
 *         "user.created",
 *         "user.updated",
 *     ],
 *     webhookConfiguration: {
 *         webhookEndpoint: "https://eof28wtn4v4506o.m.pipedream.net",
 *         webhookAuthorization: {
 *             method: "bearer",
 *             token: "123456789",
 *         },
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported by specifying the Event Stream ID.
 *
 * Example:
 *
 * ```sh
 * $ pulumi import auth0:index/eventStream:EventStream my_stream "est_XXXXXXXXXXXXXXXX"
 * ```
 */
export class EventStream extends pulumi.CustomResource {
    /**
     * Get an existing EventStream resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EventStreamState, opts?: pulumi.CustomResourceOptions): EventStream {
        return new EventStream(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'auth0:index/eventStream:EventStream';

    /**
     * Returns true if the given object is an instance of EventStream.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EventStream {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EventStream.__pulumiType;
    }

    /**
     * The ISO 8601 timestamp when the stream was created.
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The type of event stream destination (either 'eventbridge' or 'webhook').
     */
    declare public readonly destinationType: pulumi.Output<string>;
    /**
     * Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
     */
    declare public readonly eventbridgeConfiguration: pulumi.Output<outputs.EventStreamEventbridgeConfiguration | undefined>;
    /**
     * The name of the event stream.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The current status of the event stream.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * List of event types this stream is subscribed to.
     */
    declare public readonly subscriptions: pulumi.Output<string[]>;
    /**
     * The ISO 8601 timestamp when the stream was last updated.
     */
    declare public /*out*/ readonly updatedAt: pulumi.Output<string>;
    /**
     * Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
     */
    declare public readonly webhookConfiguration: pulumi.Output<outputs.EventStreamWebhookConfiguration | undefined>;

    /**
     * Create a EventStream resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EventStreamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EventStreamArgs | EventStreamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EventStreamState | undefined;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["destinationType"] = state?.destinationType;
            resourceInputs["eventbridgeConfiguration"] = state?.eventbridgeConfiguration;
            resourceInputs["name"] = state?.name;
            resourceInputs["status"] = state?.status;
            resourceInputs["subscriptions"] = state?.subscriptions;
            resourceInputs["updatedAt"] = state?.updatedAt;
            resourceInputs["webhookConfiguration"] = state?.webhookConfiguration;
        } else {
            const args = argsOrState as EventStreamArgs | undefined;
            if (args?.destinationType === undefined && !opts.urn) {
                throw new Error("Missing required property 'destinationType'");
            }
            if (args?.subscriptions === undefined && !opts.urn) {
                throw new Error("Missing required property 'subscriptions'");
            }
            resourceInputs["destinationType"] = args?.destinationType;
            resourceInputs["eventbridgeConfiguration"] = args?.eventbridgeConfiguration;
            resourceInputs["name"] = args?.name;
            resourceInputs["subscriptions"] = args?.subscriptions;
            resourceInputs["webhookConfiguration"] = args?.webhookConfiguration;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EventStream.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EventStream resources.
 */
export interface EventStreamState {
    /**
     * The ISO 8601 timestamp when the stream was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The type of event stream destination (either 'eventbridge' or 'webhook').
     */
    destinationType?: pulumi.Input<string>;
    /**
     * Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
     */
    eventbridgeConfiguration?: pulumi.Input<inputs.EventStreamEventbridgeConfiguration>;
    /**
     * The name of the event stream.
     */
    name?: pulumi.Input<string>;
    /**
     * The current status of the event stream.
     */
    status?: pulumi.Input<string>;
    /**
     * List of event types this stream is subscribed to.
     */
    subscriptions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ISO 8601 timestamp when the stream was last updated.
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
     */
    webhookConfiguration?: pulumi.Input<inputs.EventStreamWebhookConfiguration>;
}

/**
 * The set of arguments for constructing a EventStream resource.
 */
export interface EventStreamArgs {
    /**
     * The type of event stream destination (either 'eventbridge' or 'webhook').
     */
    destinationType: pulumi.Input<string>;
    /**
     * Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
     */
    eventbridgeConfiguration?: pulumi.Input<inputs.EventStreamEventbridgeConfiguration>;
    /**
     * The name of the event stream.
     */
    name?: pulumi.Input<string>;
    /**
     * List of event types this stream is subscribed to.
     */
    subscriptions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
     */
    webhookConfiguration?: pulumi.Input<inputs.EventStreamWebhookConfiguration>;
}
