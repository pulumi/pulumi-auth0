// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Data source to retrieve the custom domain configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as auth0 from "@pulumi/auth0";
 *
 * const myCustomDomain = new auth0.CustomDomain("my_custom_domain", {
 *     domain: "example.auth.tempdomain.com",
 *     type: "auth0_managed_certs",
 *     tlsPolicy: "recommended",
 *     domainMetadata: {
 *         key1: "value1",
 *         key2: "value2",
 *     },
 * });
 * const test = auth0.getCustomDomainOutput({
 *     customDomainId: myCustomDomain.id,
 * });
 * ```
 */
export function getCustomDomain(args?: GetCustomDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetCustomDomainResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("auth0:index/getCustomDomain:getCustomDomain", {
        "customDomainId": args.customDomainId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCustomDomain.
 */
export interface GetCustomDomainArgs {
    /**
     * The ID of the Custom Domain.
     */
    customDomainId?: string;
}

/**
 * A collection of values returned by getCustomDomain.
 */
export interface GetCustomDomainResult {
    /**
     * The Custom Domain certificate.
     */
    readonly certificates: outputs.GetCustomDomainCertificate[];
    /**
     * The HTTP header to fetch the client's IP address. Cannot be set on auth0Managed domains.
     */
    readonly customClientIpHeader: string;
    /**
     * The ID of the Custom Domain.
     */
    readonly customDomainId?: string;
    /**
     * Name of the custom domain.
     */
    readonly domain: string;
    /**
     * Metadata associated with the Custom Domain. Maximum of 10 metadata properties allowed.
     */
    readonly domainMetadata: {[key: string]: string};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Once the configuration status is `ready`, the DNS name of the Auth0 origin server that handles traffic for the custom domain.
     */
    readonly originDomainName: string;
    /**
     * Indicates whether this is a primary domain.
     */
    readonly primary: boolean;
    /**
     * Configuration status for the custom domain. Options include `disabled`, `pending`, `pendingVerification`, and `ready`.
     */
    readonly status: string;
    /**
     * TLS policy for the custom domain. Available options are: `compatible` or `recommended`. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on selfManaged domains.
     */
    readonly tlsPolicy: string;
    /**
     * Provisioning type for the custom domain. Options include `auth0ManagedCerts` and `selfManagedCerts`.
     */
    readonly type: string;
    /**
     * Configuration settings for verification.
     */
    readonly verifications: outputs.GetCustomDomainVerification[];
}
/**
 * Data source to retrieve the custom domain configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as auth0 from "@pulumi/auth0";
 *
 * const myCustomDomain = new auth0.CustomDomain("my_custom_domain", {
 *     domain: "example.auth.tempdomain.com",
 *     type: "auth0_managed_certs",
 *     tlsPolicy: "recommended",
 *     domainMetadata: {
 *         key1: "value1",
 *         key2: "value2",
 *     },
 * });
 * const test = auth0.getCustomDomainOutput({
 *     customDomainId: myCustomDomain.id,
 * });
 * ```
 */
export function getCustomDomainOutput(args?: GetCustomDomainOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCustomDomainResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("auth0:index/getCustomDomain:getCustomDomain", {
        "customDomainId": args.customDomainId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCustomDomain.
 */
export interface GetCustomDomainOutputArgs {
    /**
     * The ID of the Custom Domain.
     */
    customDomainId?: pulumi.Input<string>;
}
