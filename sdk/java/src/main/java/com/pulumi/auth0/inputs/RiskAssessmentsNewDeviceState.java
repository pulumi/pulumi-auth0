// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RiskAssessmentsNewDeviceState extends com.pulumi.resources.ResourceArgs {

    public static final RiskAssessmentsNewDeviceState Empty = new RiskAssessmentsNewDeviceState();

    /**
     * Length of time to remember devices for, in days
     * 
     */
    @Import(name="rememberFor")
    private @Nullable Output<Integer> rememberFor;

    /**
     * @return Length of time to remember devices for, in days
     * 
     */
    public Optional<Output<Integer>> rememberFor() {
        return Optional.ofNullable(this.rememberFor);
    }

    private RiskAssessmentsNewDeviceState() {}

    private RiskAssessmentsNewDeviceState(RiskAssessmentsNewDeviceState $) {
        this.rememberFor = $.rememberFor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RiskAssessmentsNewDeviceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RiskAssessmentsNewDeviceState $;

        public Builder() {
            $ = new RiskAssessmentsNewDeviceState();
        }

        public Builder(RiskAssessmentsNewDeviceState defaults) {
            $ = new RiskAssessmentsNewDeviceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param rememberFor Length of time to remember devices for, in days
         * 
         * @return builder
         * 
         */
        public Builder rememberFor(@Nullable Output<Integer> rememberFor) {
            $.rememberFor = rememberFor;
            return this;
        }

        /**
         * @param rememberFor Length of time to remember devices for, in days
         * 
         * @return builder
         * 
         */
        public Builder rememberFor(Integer rememberFor) {
            return rememberFor(Output.of(rememberFor));
        }

        public RiskAssessmentsNewDeviceState build() {
            return $;
        }
    }

}
