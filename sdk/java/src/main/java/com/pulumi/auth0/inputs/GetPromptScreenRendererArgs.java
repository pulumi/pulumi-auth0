// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetPromptScreenRendererArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPromptScreenRendererArgs Empty = new GetPromptScreenRendererArgs();

    /**
     * The type of prompt to customize.
     * 
     */
    @Import(name="promptType", required=true)
    private Output<String> promptType;

    /**
     * @return The type of prompt to customize.
     * 
     */
    public Output<String> promptType() {
        return this.promptType;
    }

    /**
     * The screen name associated with the prompt type.
     * 
     */
    @Import(name="screenName", required=true)
    private Output<String> screenName;

    /**
     * @return The screen name associated with the prompt type.
     * 
     */
    public Output<String> screenName() {
        return this.screenName;
    }

    private GetPromptScreenRendererArgs() {}

    private GetPromptScreenRendererArgs(GetPromptScreenRendererArgs $) {
        this.promptType = $.promptType;
        this.screenName = $.screenName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPromptScreenRendererArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPromptScreenRendererArgs $;

        public Builder() {
            $ = new GetPromptScreenRendererArgs();
        }

        public Builder(GetPromptScreenRendererArgs defaults) {
            $ = new GetPromptScreenRendererArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param promptType The type of prompt to customize.
         * 
         * @return builder
         * 
         */
        public Builder promptType(Output<String> promptType) {
            $.promptType = promptType;
            return this;
        }

        /**
         * @param promptType The type of prompt to customize.
         * 
         * @return builder
         * 
         */
        public Builder promptType(String promptType) {
            return promptType(Output.of(promptType));
        }

        /**
         * @param screenName The screen name associated with the prompt type.
         * 
         * @return builder
         * 
         */
        public Builder screenName(Output<String> screenName) {
            $.screenName = screenName;
            return this;
        }

        /**
         * @param screenName The screen name associated with the prompt type.
         * 
         * @return builder
         * 
         */
        public Builder screenName(String screenName) {
            return screenName(Output.of(screenName));
        }

        public GetPromptScreenRendererArgs build() {
            if ($.promptType == null) {
                throw new MissingRequiredPropertyException("GetPromptScreenRendererArgs", "promptType");
            }
            if ($.screenName == null) {
                throw new MissingRequiredPropertyException("GetPromptScreenRendererArgs", "screenName");
            }
            return $;
        }
    }

}
