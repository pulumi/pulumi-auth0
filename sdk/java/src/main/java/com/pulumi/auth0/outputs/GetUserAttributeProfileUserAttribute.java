// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetUserAttributeProfileUserAttributeOidcMapping;
import com.pulumi.auth0.outputs.GetUserAttributeProfileUserAttributeStrategyOverride;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUserAttributeProfileUserAttribute {
    /**
     * @return The Auth0 mapping for the user attribute.
     * 
     */
    private String auth0Mapping;
    /**
     * @return Description of the user attribute.
     * 
     */
    private String description;
    /**
     * @return Display label for the user attribute.
     * 
     */
    private String label;
    /**
     * @return Name of the user attribute.
     * 
     */
    private String name;
    /**
     * @return The OIDC mapping configuration for the user attribute.
     * 
     */
    private List<GetUserAttributeProfileUserAttributeOidcMapping> oidcMappings;
    /**
     * @return Whether the attribute is required in the profile.
     * 
     */
    private Boolean profileRequired;
    /**
     * @return SAML mapping override for this strategy.
     * 
     */
    private List<String> samlMappings;
    /**
     * @return The SCIM mapping for the user attribute.
     * 
     */
    private String scimMapping;
    /**
     * @return Strategy-specific overrides for user attribute mapping.
     * 
     */
    private List<GetUserAttributeProfileUserAttributeStrategyOverride> strategyOverrides;

    private GetUserAttributeProfileUserAttribute() {}
    /**
     * @return The Auth0 mapping for the user attribute.
     * 
     */
    public String auth0Mapping() {
        return this.auth0Mapping;
    }
    /**
     * @return Description of the user attribute.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Display label for the user attribute.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return Name of the user attribute.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The OIDC mapping configuration for the user attribute.
     * 
     */
    public List<GetUserAttributeProfileUserAttributeOidcMapping> oidcMappings() {
        return this.oidcMappings;
    }
    /**
     * @return Whether the attribute is required in the profile.
     * 
     */
    public Boolean profileRequired() {
        return this.profileRequired;
    }
    /**
     * @return SAML mapping override for this strategy.
     * 
     */
    public List<String> samlMappings() {
        return this.samlMappings;
    }
    /**
     * @return The SCIM mapping for the user attribute.
     * 
     */
    public String scimMapping() {
        return this.scimMapping;
    }
    /**
     * @return Strategy-specific overrides for user attribute mapping.
     * 
     */
    public List<GetUserAttributeProfileUserAttributeStrategyOverride> strategyOverrides() {
        return this.strategyOverrides;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAttributeProfileUserAttribute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String auth0Mapping;
        private String description;
        private String label;
        private String name;
        private List<GetUserAttributeProfileUserAttributeOidcMapping> oidcMappings;
        private Boolean profileRequired;
        private List<String> samlMappings;
        private String scimMapping;
        private List<GetUserAttributeProfileUserAttributeStrategyOverride> strategyOverrides;
        public Builder() {}
        public Builder(GetUserAttributeProfileUserAttribute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auth0Mapping = defaults.auth0Mapping;
    	      this.description = defaults.description;
    	      this.label = defaults.label;
    	      this.name = defaults.name;
    	      this.oidcMappings = defaults.oidcMappings;
    	      this.profileRequired = defaults.profileRequired;
    	      this.samlMappings = defaults.samlMappings;
    	      this.scimMapping = defaults.scimMapping;
    	      this.strategyOverrides = defaults.strategyOverrides;
        }

        @CustomType.Setter
        public Builder auth0Mapping(String auth0Mapping) {
            if (auth0Mapping == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserAttribute", "auth0Mapping");
            }
            this.auth0Mapping = auth0Mapping;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserAttribute", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            if (label == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserAttribute", "label");
            }
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserAttribute", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder oidcMappings(List<GetUserAttributeProfileUserAttributeOidcMapping> oidcMappings) {
            if (oidcMappings == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserAttribute", "oidcMappings");
            }
            this.oidcMappings = oidcMappings;
            return this;
        }
        public Builder oidcMappings(GetUserAttributeProfileUserAttributeOidcMapping... oidcMappings) {
            return oidcMappings(List.of(oidcMappings));
        }
        @CustomType.Setter
        public Builder profileRequired(Boolean profileRequired) {
            if (profileRequired == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserAttribute", "profileRequired");
            }
            this.profileRequired = profileRequired;
            return this;
        }
        @CustomType.Setter
        public Builder samlMappings(List<String> samlMappings) {
            if (samlMappings == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserAttribute", "samlMappings");
            }
            this.samlMappings = samlMappings;
            return this;
        }
        public Builder samlMappings(String... samlMappings) {
            return samlMappings(List.of(samlMappings));
        }
        @CustomType.Setter
        public Builder scimMapping(String scimMapping) {
            if (scimMapping == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserAttribute", "scimMapping");
            }
            this.scimMapping = scimMapping;
            return this;
        }
        @CustomType.Setter
        public Builder strategyOverrides(List<GetUserAttributeProfileUserAttributeStrategyOverride> strategyOverrides) {
            if (strategyOverrides == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserAttribute", "strategyOverrides");
            }
            this.strategyOverrides = strategyOverrides;
            return this;
        }
        public Builder strategyOverrides(GetUserAttributeProfileUserAttributeStrategyOverride... strategyOverrides) {
            return strategyOverrides(List.of(strategyOverrides));
        }
        public GetUserAttributeProfileUserAttribute build() {
            final var _resultValue = new GetUserAttributeProfileUserAttribute();
            _resultValue.auth0Mapping = auth0Mapping;
            _resultValue.description = description;
            _resultValue.label = label;
            _resultValue.name = name;
            _resultValue.oidcMappings = oidcMappings;
            _resultValue.profileRequired = profileRequired;
            _resultValue.samlMappings = samlMappings;
            _resultValue.scimMapping = scimMapping;
            _resultValue.strategyOverrides = strategyOverrides;
            return _resultValue;
        }
    }
}
