// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs Empty = new ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs();

    /**
     * One of the allowed types for UserName signup attribute
     * 
     */
    @Import(name="email")
    private @Nullable Output<Boolean> email;

    /**
     * @return One of the allowed types for UserName signup attribute
     * 
     */
    public Optional<Output<Boolean>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * One of the allowed types for UserName signup attribute
     * 
     */
    @Import(name="phoneNumber")
    private @Nullable Output<Boolean> phoneNumber;

    /**
     * @return One of the allowed types for UserName signup attribute
     * 
     */
    public Optional<Output<Boolean>> phoneNumber() {
        return Optional.ofNullable(this.phoneNumber);
    }

    private ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs() {}

    private ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs(ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs $) {
        this.email = $.email;
        this.phoneNumber = $.phoneNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs $;

        public Builder() {
            $ = new ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs();
        }

        public Builder(ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs defaults) {
            $ = new ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param email One of the allowed types for UserName signup attribute
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<Boolean> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email One of the allowed types for UserName signup attribute
         * 
         * @return builder
         * 
         */
        public Builder email(Boolean email) {
            return email(Output.of(email));
        }

        /**
         * @param phoneNumber One of the allowed types for UserName signup attribute
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(@Nullable Output<Boolean> phoneNumber) {
            $.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * @param phoneNumber One of the allowed types for UserName signup attribute
         * 
         * @return builder
         * 
         */
        public Builder phoneNumber(Boolean phoneNumber) {
            return phoneNumber(Output.of(phoneNumber));
        }

        public ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs build() {
            return $;
        }
    }

}
