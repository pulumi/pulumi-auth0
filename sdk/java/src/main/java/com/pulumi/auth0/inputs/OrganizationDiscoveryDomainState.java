// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationDiscoveryDomainState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationDiscoveryDomainState Empty = new OrganizationDiscoveryDomainState();

    /**
     * The domain name for organization discovery.
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return The domain name for organization discovery.
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * The ID of the organization.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return The ID of the organization.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * Verification status. Must be either &#39;pending&#39; or &#39;verified&#39;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Verification status. Must be either &#39;pending&#39; or &#39;verified&#39;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The full domain where the TXT record should be added.
     * 
     */
    @Import(name="verificationHost")
    private @Nullable Output<String> verificationHost;

    /**
     * @return The full domain where the TXT record should be added.
     * 
     */
    public Optional<Output<String>> verificationHost() {
        return Optional.ofNullable(this.verificationHost);
    }

    /**
     * TXT record value for domain verification.
     * 
     */
    @Import(name="verificationTxt")
    private @Nullable Output<String> verificationTxt;

    /**
     * @return TXT record value for domain verification.
     * 
     */
    public Optional<Output<String>> verificationTxt() {
        return Optional.ofNullable(this.verificationTxt);
    }

    private OrganizationDiscoveryDomainState() {}

    private OrganizationDiscoveryDomainState(OrganizationDiscoveryDomainState $) {
        this.domain = $.domain;
        this.organizationId = $.organizationId;
        this.status = $.status;
        this.verificationHost = $.verificationHost;
        this.verificationTxt = $.verificationTxt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationDiscoveryDomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationDiscoveryDomainState $;

        public Builder() {
            $ = new OrganizationDiscoveryDomainState();
        }

        public Builder(OrganizationDiscoveryDomainState defaults) {
            $ = new OrganizationDiscoveryDomainState(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain The domain name for organization discovery.
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain The domain name for organization discovery.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param organizationId The ID of the organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The ID of the organization.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        /**
         * @param status Verification status. Must be either &#39;pending&#39; or &#39;verified&#39;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Verification status. Must be either &#39;pending&#39; or &#39;verified&#39;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param verificationHost The full domain where the TXT record should be added.
         * 
         * @return builder
         * 
         */
        public Builder verificationHost(@Nullable Output<String> verificationHost) {
            $.verificationHost = verificationHost;
            return this;
        }

        /**
         * @param verificationHost The full domain where the TXT record should be added.
         * 
         * @return builder
         * 
         */
        public Builder verificationHost(String verificationHost) {
            return verificationHost(Output.of(verificationHost));
        }

        /**
         * @param verificationTxt TXT record value for domain verification.
         * 
         * @return builder
         * 
         */
        public Builder verificationTxt(@Nullable Output<String> verificationTxt) {
            $.verificationTxt = verificationTxt;
            return this;
        }

        /**
         * @param verificationTxt TXT record value for domain verification.
         * 
         * @return builder
         * 
         */
        public Builder verificationTxt(String verificationTxt) {
            return verificationTxt(Output.of(verificationTxt));
        }

        public OrganizationDiscoveryDomainState build() {
            return $;
        }
    }

}
