// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetResourceServerTokenEncryptionEncryptionKey;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetResourceServerTokenEncryption {
    /**
     * @return Disable token encryption.
     * 
     */
    private Boolean disable;
    /**
     * @return Authorization details for this resource server.
     * 
     */
    private List<GetResourceServerTokenEncryptionEncryptionKey> encryptionKeys;
    /**
     * @return Format of the token encryption. Only `compact-nested-jwe` is supported.
     * 
     */
    private String format;

    private GetResourceServerTokenEncryption() {}
    /**
     * @return Disable token encryption.
     * 
     */
    public Boolean disable() {
        return this.disable;
    }
    /**
     * @return Authorization details for this resource server.
     * 
     */
    public List<GetResourceServerTokenEncryptionEncryptionKey> encryptionKeys() {
        return this.encryptionKeys;
    }
    /**
     * @return Format of the token encryption. Only `compact-nested-jwe` is supported.
     * 
     */
    public String format() {
        return this.format;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceServerTokenEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean disable;
        private List<GetResourceServerTokenEncryptionEncryptionKey> encryptionKeys;
        private String format;
        public Builder() {}
        public Builder(GetResourceServerTokenEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disable = defaults.disable;
    	      this.encryptionKeys = defaults.encryptionKeys;
    	      this.format = defaults.format;
        }

        @CustomType.Setter
        public Builder disable(Boolean disable) {
            if (disable == null) {
              throw new MissingRequiredPropertyException("GetResourceServerTokenEncryption", "disable");
            }
            this.disable = disable;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionKeys(List<GetResourceServerTokenEncryptionEncryptionKey> encryptionKeys) {
            if (encryptionKeys == null) {
              throw new MissingRequiredPropertyException("GetResourceServerTokenEncryption", "encryptionKeys");
            }
            this.encryptionKeys = encryptionKeys;
            return this;
        }
        public Builder encryptionKeys(GetResourceServerTokenEncryptionEncryptionKey... encryptionKeys) {
            return encryptionKeys(List.of(encryptionKeys));
        }
        @CustomType.Setter
        public Builder format(String format) {
            if (format == null) {
              throw new MissingRequiredPropertyException("GetResourceServerTokenEncryption", "format");
            }
            this.format = format;
            return this;
        }
        public GetResourceServerTokenEncryption build() {
            final var _resultValue = new GetResourceServerTokenEncryption();
            _resultValue.disable = disable;
            _resultValue.encryptionKeys = encryptionKeys;
            _resultValue.format = format;
            return _resultValue;
        }
    }
}
