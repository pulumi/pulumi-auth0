// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionOptionsAttributeUsernameValidationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionOptionsAttributeUsernameValidationArgs Empty = new ConnectionOptionsAttributeUsernameValidationArgs();

    /**
     * Defines allowed types for for UserName attribute
     * 
     */
    @Import(name="allowedTypes")
    private @Nullable Output<List<ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs>> allowedTypes;

    /**
     * @return Defines allowed types for for UserName attribute
     * 
     */
    public Optional<Output<List<ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs>>> allowedTypes() {
        return Optional.ofNullable(this.allowedTypes);
    }

    /**
     * Defines Max Length for User Name attribute
     * 
     */
    @Import(name="maxLength")
    private @Nullable Output<Integer> maxLength;

    /**
     * @return Defines Max Length for User Name attribute
     * 
     */
    public Optional<Output<Integer>> maxLength() {
        return Optional.ofNullable(this.maxLength);
    }

    /**
     * Defines Min Length for User Name attribute
     * 
     */
    @Import(name="minLength")
    private @Nullable Output<Integer> minLength;

    /**
     * @return Defines Min Length for User Name attribute
     * 
     */
    public Optional<Output<Integer>> minLength() {
        return Optional.ofNullable(this.minLength);
    }

    private ConnectionOptionsAttributeUsernameValidationArgs() {}

    private ConnectionOptionsAttributeUsernameValidationArgs(ConnectionOptionsAttributeUsernameValidationArgs $) {
        this.allowedTypes = $.allowedTypes;
        this.maxLength = $.maxLength;
        this.minLength = $.minLength;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionOptionsAttributeUsernameValidationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionOptionsAttributeUsernameValidationArgs $;

        public Builder() {
            $ = new ConnectionOptionsAttributeUsernameValidationArgs();
        }

        public Builder(ConnectionOptionsAttributeUsernameValidationArgs defaults) {
            $ = new ConnectionOptionsAttributeUsernameValidationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedTypes Defines allowed types for for UserName attribute
         * 
         * @return builder
         * 
         */
        public Builder allowedTypes(@Nullable Output<List<ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs>> allowedTypes) {
            $.allowedTypes = allowedTypes;
            return this;
        }

        /**
         * @param allowedTypes Defines allowed types for for UserName attribute
         * 
         * @return builder
         * 
         */
        public Builder allowedTypes(List<ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs> allowedTypes) {
            return allowedTypes(Output.of(allowedTypes));
        }

        /**
         * @param allowedTypes Defines allowed types for for UserName attribute
         * 
         * @return builder
         * 
         */
        public Builder allowedTypes(ConnectionOptionsAttributeUsernameValidationAllowedTypeArgs... allowedTypes) {
            return allowedTypes(List.of(allowedTypes));
        }

        /**
         * @param maxLength Defines Max Length for User Name attribute
         * 
         * @return builder
         * 
         */
        public Builder maxLength(@Nullable Output<Integer> maxLength) {
            $.maxLength = maxLength;
            return this;
        }

        /**
         * @param maxLength Defines Max Length for User Name attribute
         * 
         * @return builder
         * 
         */
        public Builder maxLength(Integer maxLength) {
            return maxLength(Output.of(maxLength));
        }

        /**
         * @param minLength Defines Min Length for User Name attribute
         * 
         * @return builder
         * 
         */
        public Builder minLength(@Nullable Output<Integer> minLength) {
            $.minLength = minLength;
            return this;
        }

        /**
         * @param minLength Defines Min Length for User Name attribute
         * 
         * @return builder
         * 
         */
        public Builder minLength(Integer minLength) {
            return minLength(Output.of(minLength));
        }

        public ConnectionOptionsAttributeUsernameValidationArgs build() {
            return $;
        }
    }

}
