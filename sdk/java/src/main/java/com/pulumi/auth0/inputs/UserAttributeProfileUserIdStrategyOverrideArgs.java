// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserAttributeProfileUserIdStrategyOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserAttributeProfileUserIdStrategyOverrideArgs Empty = new UserAttributeProfileUserIdStrategyOverrideArgs();

    /**
     * OIDC mapping override for this strategy.
     * 
     */
    @Import(name="oidcMapping")
    private @Nullable Output<String> oidcMapping;

    /**
     * @return OIDC mapping override for this strategy.
     * 
     */
    public Optional<Output<String>> oidcMapping() {
        return Optional.ofNullable(this.oidcMapping);
    }

    /**
     * SAML mapping override for this strategy.
     * 
     */
    @Import(name="samlMappings")
    private @Nullable Output<List<String>> samlMappings;

    /**
     * @return SAML mapping override for this strategy.
     * 
     */
    public Optional<Output<List<String>>> samlMappings() {
        return Optional.ofNullable(this.samlMappings);
    }

    /**
     * SCIM mapping override for this strategy.
     * 
     */
    @Import(name="scimMapping")
    private @Nullable Output<String> scimMapping;

    /**
     * @return SCIM mapping override for this strategy.
     * 
     */
    public Optional<Output<String>> scimMapping() {
        return Optional.ofNullable(this.scimMapping);
    }

    /**
     * The strategy name (e.g., &#39;oidc&#39;, &#39;samlp&#39;, &#39;ad&#39;, etc.).
     * 
     */
    @Import(name="strategy", required=true)
    private Output<String> strategy;

    /**
     * @return The strategy name (e.g., &#39;oidc&#39;, &#39;samlp&#39;, &#39;ad&#39;, etc.).
     * 
     */
    public Output<String> strategy() {
        return this.strategy;
    }

    private UserAttributeProfileUserIdStrategyOverrideArgs() {}

    private UserAttributeProfileUserIdStrategyOverrideArgs(UserAttributeProfileUserIdStrategyOverrideArgs $) {
        this.oidcMapping = $.oidcMapping;
        this.samlMappings = $.samlMappings;
        this.scimMapping = $.scimMapping;
        this.strategy = $.strategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAttributeProfileUserIdStrategyOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAttributeProfileUserIdStrategyOverrideArgs $;

        public Builder() {
            $ = new UserAttributeProfileUserIdStrategyOverrideArgs();
        }

        public Builder(UserAttributeProfileUserIdStrategyOverrideArgs defaults) {
            $ = new UserAttributeProfileUserIdStrategyOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param oidcMapping OIDC mapping override for this strategy.
         * 
         * @return builder
         * 
         */
        public Builder oidcMapping(@Nullable Output<String> oidcMapping) {
            $.oidcMapping = oidcMapping;
            return this;
        }

        /**
         * @param oidcMapping OIDC mapping override for this strategy.
         * 
         * @return builder
         * 
         */
        public Builder oidcMapping(String oidcMapping) {
            return oidcMapping(Output.of(oidcMapping));
        }

        /**
         * @param samlMappings SAML mapping override for this strategy.
         * 
         * @return builder
         * 
         */
        public Builder samlMappings(@Nullable Output<List<String>> samlMappings) {
            $.samlMappings = samlMappings;
            return this;
        }

        /**
         * @param samlMappings SAML mapping override for this strategy.
         * 
         * @return builder
         * 
         */
        public Builder samlMappings(List<String> samlMappings) {
            return samlMappings(Output.of(samlMappings));
        }

        /**
         * @param samlMappings SAML mapping override for this strategy.
         * 
         * @return builder
         * 
         */
        public Builder samlMappings(String... samlMappings) {
            return samlMappings(List.of(samlMappings));
        }

        /**
         * @param scimMapping SCIM mapping override for this strategy.
         * 
         * @return builder
         * 
         */
        public Builder scimMapping(@Nullable Output<String> scimMapping) {
            $.scimMapping = scimMapping;
            return this;
        }

        /**
         * @param scimMapping SCIM mapping override for this strategy.
         * 
         * @return builder
         * 
         */
        public Builder scimMapping(String scimMapping) {
            return scimMapping(Output.of(scimMapping));
        }

        /**
         * @param strategy The strategy name (e.g., &#39;oidc&#39;, &#39;samlp&#39;, &#39;ad&#39;, etc.).
         * 
         * @return builder
         * 
         */
        public Builder strategy(Output<String> strategy) {
            $.strategy = strategy;
            return this;
        }

        /**
         * @param strategy The strategy name (e.g., &#39;oidc&#39;, &#39;samlp&#39;, &#39;ad&#39;, etc.).
         * 
         * @return builder
         * 
         */
        public Builder strategy(String strategy) {
            return strategy(Output.of(strategy));
        }

        public UserAttributeProfileUserIdStrategyOverrideArgs build() {
            if ($.strategy == null) {
                throw new MissingRequiredPropertyException("UserAttributeProfileUserIdStrategyOverrideArgs", "strategy");
            }
            return $;
        }
    }

}
