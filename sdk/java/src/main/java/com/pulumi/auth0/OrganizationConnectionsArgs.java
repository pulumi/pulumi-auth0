// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.inputs.OrganizationConnectionsEnabledConnectionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class OrganizationConnectionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationConnectionsArgs Empty = new OrganizationConnectionsArgs();

    /**
     * Connections that are enabled for the organization.
     * 
     */
    @Import(name="enabledConnections", required=true)
    private Output<List<OrganizationConnectionsEnabledConnectionArgs>> enabledConnections;

    /**
     * @return Connections that are enabled for the organization.
     * 
     */
    public Output<List<OrganizationConnectionsEnabledConnectionArgs>> enabledConnections() {
        return this.enabledConnections;
    }

    /**
     * ID of the organization on which to enable the connections.
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return ID of the organization on which to enable the connections.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    private OrganizationConnectionsArgs() {}

    private OrganizationConnectionsArgs(OrganizationConnectionsArgs $) {
        this.enabledConnections = $.enabledConnections;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationConnectionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationConnectionsArgs $;

        public Builder() {
            $ = new OrganizationConnectionsArgs();
        }

        public Builder(OrganizationConnectionsArgs defaults) {
            $ = new OrganizationConnectionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabledConnections Connections that are enabled for the organization.
         * 
         * @return builder
         * 
         */
        public Builder enabledConnections(Output<List<OrganizationConnectionsEnabledConnectionArgs>> enabledConnections) {
            $.enabledConnections = enabledConnections;
            return this;
        }

        /**
         * @param enabledConnections Connections that are enabled for the organization.
         * 
         * @return builder
         * 
         */
        public Builder enabledConnections(List<OrganizationConnectionsEnabledConnectionArgs> enabledConnections) {
            return enabledConnections(Output.of(enabledConnections));
        }

        /**
         * @param enabledConnections Connections that are enabled for the organization.
         * 
         * @return builder
         * 
         */
        public Builder enabledConnections(OrganizationConnectionsEnabledConnectionArgs... enabledConnections) {
            return enabledConnections(List.of(enabledConnections));
        }

        /**
         * @param organizationId ID of the organization on which to enable the connections.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId ID of the organization on which to enable the connections.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public OrganizationConnectionsArgs build() {
            $.enabledConnections = Objects.requireNonNull($.enabledConnections, "expected parameter 'enabledConnections' to be non-null");
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            return $;
        }
    }

}
