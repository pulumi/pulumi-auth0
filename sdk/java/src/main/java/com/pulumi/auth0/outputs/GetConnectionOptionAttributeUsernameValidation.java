// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetConnectionOptionAttributeUsernameValidationAllowedType;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConnectionOptionAttributeUsernameValidation {
    /**
     * @return Defines allowed types for for UserName attribute
     * 
     */
    private List<GetConnectionOptionAttributeUsernameValidationAllowedType> allowedTypes;
    /**
     * @return Defines Max Length for User Name attribute
     * 
     */
    private Integer maxLength;
    /**
     * @return Defines Min Length for User Name attribute
     * 
     */
    private Integer minLength;

    private GetConnectionOptionAttributeUsernameValidation() {}
    /**
     * @return Defines allowed types for for UserName attribute
     * 
     */
    public List<GetConnectionOptionAttributeUsernameValidationAllowedType> allowedTypes() {
        return this.allowedTypes;
    }
    /**
     * @return Defines Max Length for User Name attribute
     * 
     */
    public Integer maxLength() {
        return this.maxLength;
    }
    /**
     * @return Defines Min Length for User Name attribute
     * 
     */
    public Integer minLength() {
        return this.minLength;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionOptionAttributeUsernameValidation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetConnectionOptionAttributeUsernameValidationAllowedType> allowedTypes;
        private Integer maxLength;
        private Integer minLength;
        public Builder() {}
        public Builder(GetConnectionOptionAttributeUsernameValidation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedTypes = defaults.allowedTypes;
    	      this.maxLength = defaults.maxLength;
    	      this.minLength = defaults.minLength;
        }

        @CustomType.Setter
        public Builder allowedTypes(List<GetConnectionOptionAttributeUsernameValidationAllowedType> allowedTypes) {
            if (allowedTypes == null) {
              throw new MissingRequiredPropertyException("GetConnectionOptionAttributeUsernameValidation", "allowedTypes");
            }
            this.allowedTypes = allowedTypes;
            return this;
        }
        public Builder allowedTypes(GetConnectionOptionAttributeUsernameValidationAllowedType... allowedTypes) {
            return allowedTypes(List.of(allowedTypes));
        }
        @CustomType.Setter
        public Builder maxLength(Integer maxLength) {
            if (maxLength == null) {
              throw new MissingRequiredPropertyException("GetConnectionOptionAttributeUsernameValidation", "maxLength");
            }
            this.maxLength = maxLength;
            return this;
        }
        @CustomType.Setter
        public Builder minLength(Integer minLength) {
            if (minLength == null) {
              throw new MissingRequiredPropertyException("GetConnectionOptionAttributeUsernameValidation", "minLength");
            }
            this.minLength = minLength;
            return this;
        }
        public GetConnectionOptionAttributeUsernameValidation build() {
            final var _resultValue = new GetConnectionOptionAttributeUsernameValidation();
            _resultValue.allowedTypes = allowedTypes;
            _resultValue.maxLength = maxLength;
            _resultValue.minLength = minLength;
            return _resultValue;
        }
    }
}
