// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BrandingThemeBorders {
    /**
     * @return Button border radius. Value needs to be between `1` and `10`. Defaults to `3.0`.
     * 
     */
    private @Nullable Double buttonBorderRadius;
    /**
     * @return Button border weight. Value needs to be between `0` and `10`. Defaults to `1.0`.
     * 
     */
    private @Nullable Double buttonBorderWeight;
    /**
     * @return Buttons style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
     * 
     */
    private @Nullable String buttonsStyle;
    /**
     * @return Input border radius. Value needs to be between `0` and `10`. Defaults to `3.0`.
     * 
     */
    private @Nullable Double inputBorderRadius;
    /**
     * @return Input border weight. Value needs to be between `0` and `3`. Defaults to `1.0`.
     * 
     */
    private @Nullable Double inputBorderWeight;
    /**
     * @return Inputs style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
     * 
     */
    private @Nullable String inputsStyle;
    /**
     * @return Show widget shadow. Defaults to `true`.
     * 
     */
    private @Nullable Boolean showWidgetShadow;
    /**
     * @return Widget border weight. Value needs to be between `0` and `10`. Defaults to `0.0`.
     * 
     */
    private @Nullable Double widgetBorderWeight;
    /**
     * @return Widget corner radius. Value needs to be between `0` and `50`. Defaults to `5.0`.
     * 
     */
    private @Nullable Double widgetCornerRadius;

    private BrandingThemeBorders() {}
    /**
     * @return Button border radius. Value needs to be between `1` and `10`. Defaults to `3.0`.
     * 
     */
    public Optional<Double> buttonBorderRadius() {
        return Optional.ofNullable(this.buttonBorderRadius);
    }
    /**
     * @return Button border weight. Value needs to be between `0` and `10`. Defaults to `1.0`.
     * 
     */
    public Optional<Double> buttonBorderWeight() {
        return Optional.ofNullable(this.buttonBorderWeight);
    }
    /**
     * @return Buttons style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
     * 
     */
    public Optional<String> buttonsStyle() {
        return Optional.ofNullable(this.buttonsStyle);
    }
    /**
     * @return Input border radius. Value needs to be between `0` and `10`. Defaults to `3.0`.
     * 
     */
    public Optional<Double> inputBorderRadius() {
        return Optional.ofNullable(this.inputBorderRadius);
    }
    /**
     * @return Input border weight. Value needs to be between `0` and `3`. Defaults to `1.0`.
     * 
     */
    public Optional<Double> inputBorderWeight() {
        return Optional.ofNullable(this.inputBorderWeight);
    }
    /**
     * @return Inputs style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
     * 
     */
    public Optional<String> inputsStyle() {
        return Optional.ofNullable(this.inputsStyle);
    }
    /**
     * @return Show widget shadow. Defaults to `true`.
     * 
     */
    public Optional<Boolean> showWidgetShadow() {
        return Optional.ofNullable(this.showWidgetShadow);
    }
    /**
     * @return Widget border weight. Value needs to be between `0` and `10`. Defaults to `0.0`.
     * 
     */
    public Optional<Double> widgetBorderWeight() {
        return Optional.ofNullable(this.widgetBorderWeight);
    }
    /**
     * @return Widget corner radius. Value needs to be between `0` and `50`. Defaults to `5.0`.
     * 
     */
    public Optional<Double> widgetCornerRadius() {
        return Optional.ofNullable(this.widgetCornerRadius);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BrandingThemeBorders defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double buttonBorderRadius;
        private @Nullable Double buttonBorderWeight;
        private @Nullable String buttonsStyle;
        private @Nullable Double inputBorderRadius;
        private @Nullable Double inputBorderWeight;
        private @Nullable String inputsStyle;
        private @Nullable Boolean showWidgetShadow;
        private @Nullable Double widgetBorderWeight;
        private @Nullable Double widgetCornerRadius;
        public Builder() {}
        public Builder(BrandingThemeBorders defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buttonBorderRadius = defaults.buttonBorderRadius;
    	      this.buttonBorderWeight = defaults.buttonBorderWeight;
    	      this.buttonsStyle = defaults.buttonsStyle;
    	      this.inputBorderRadius = defaults.inputBorderRadius;
    	      this.inputBorderWeight = defaults.inputBorderWeight;
    	      this.inputsStyle = defaults.inputsStyle;
    	      this.showWidgetShadow = defaults.showWidgetShadow;
    	      this.widgetBorderWeight = defaults.widgetBorderWeight;
    	      this.widgetCornerRadius = defaults.widgetCornerRadius;
        }

        @CustomType.Setter
        public Builder buttonBorderRadius(@Nullable Double buttonBorderRadius) {

            this.buttonBorderRadius = buttonBorderRadius;
            return this;
        }
        @CustomType.Setter
        public Builder buttonBorderWeight(@Nullable Double buttonBorderWeight) {

            this.buttonBorderWeight = buttonBorderWeight;
            return this;
        }
        @CustomType.Setter
        public Builder buttonsStyle(@Nullable String buttonsStyle) {

            this.buttonsStyle = buttonsStyle;
            return this;
        }
        @CustomType.Setter
        public Builder inputBorderRadius(@Nullable Double inputBorderRadius) {

            this.inputBorderRadius = inputBorderRadius;
            return this;
        }
        @CustomType.Setter
        public Builder inputBorderWeight(@Nullable Double inputBorderWeight) {

            this.inputBorderWeight = inputBorderWeight;
            return this;
        }
        @CustomType.Setter
        public Builder inputsStyle(@Nullable String inputsStyle) {

            this.inputsStyle = inputsStyle;
            return this;
        }
        @CustomType.Setter
        public Builder showWidgetShadow(@Nullable Boolean showWidgetShadow) {

            this.showWidgetShadow = showWidgetShadow;
            return this;
        }
        @CustomType.Setter
        public Builder widgetBorderWeight(@Nullable Double widgetBorderWeight) {

            this.widgetBorderWeight = widgetBorderWeight;
            return this;
        }
        @CustomType.Setter
        public Builder widgetCornerRadius(@Nullable Double widgetCornerRadius) {

            this.widgetCornerRadius = widgetCornerRadius;
            return this;
        }
        public BrandingThemeBorders build() {
            final var _resultValue = new BrandingThemeBorders();
            _resultValue.buttonBorderRadius = buttonBorderRadius;
            _resultValue.buttonBorderWeight = buttonBorderWeight;
            _resultValue.buttonsStyle = buttonsStyle;
            _resultValue.inputBorderRadius = inputBorderRadius;
            _resultValue.inputBorderWeight = inputBorderWeight;
            _resultValue.inputsStyle = inputsStyle;
            _resultValue.showWidgetShadow = showWidgetShadow;
            _resultValue.widgetBorderWeight = widgetBorderWeight;
            _resultValue.widgetCornerRadius = widgetCornerRadius;
            return _resultValue;
        }
    }
}
