// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UserPermission {
    private @Nullable String description;
    /**
     * @return Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled &#39;Sync user profile attributes at each login&#39;. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).
     * 
     */
    private @Nullable String name;
    private @Nullable String resourceServerIdentifier;
    private @Nullable String resourceServerName;

    private UserPermission() {}
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled &#39;Sync user profile attributes at each login&#39;. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> resourceServerIdentifier() {
        return Optional.ofNullable(this.resourceServerIdentifier);
    }
    public Optional<String> resourceServerName() {
        return Optional.ofNullable(this.resourceServerName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserPermission defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable String name;
        private @Nullable String resourceServerIdentifier;
        private @Nullable String resourceServerName;
        public Builder() {}
        public Builder(UserPermission defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.resourceServerIdentifier = defaults.resourceServerIdentifier;
    	      this.resourceServerName = defaults.resourceServerName;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceServerIdentifier(@Nullable String resourceServerIdentifier) {
            this.resourceServerIdentifier = resourceServerIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder resourceServerName(@Nullable String resourceServerName) {
            this.resourceServerName = resourceServerName;
            return this;
        }
        public UserPermission build() {
            final var o = new UserPermission();
            o.description = description;
            o.name = name;
            o.resourceServerIdentifier = resourceServerIdentifier;
            o.resourceServerName = resourceServerName;
            return o;
        }
    }
}
