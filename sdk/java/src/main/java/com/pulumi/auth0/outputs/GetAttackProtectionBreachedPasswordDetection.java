// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetAttackProtectionBreachedPasswordDetectionPreUserRegistration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAttackProtectionBreachedPasswordDetection {
    private List<String> adminNotificationFrequencies;
    private Boolean enabled;
    private String method;
    private List<GetAttackProtectionBreachedPasswordDetectionPreUserRegistration> preUserRegistrations;
    private List<String> shields;

    private GetAttackProtectionBreachedPasswordDetection() {}
    public List<String> adminNotificationFrequencies() {
        return this.adminNotificationFrequencies;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public String method() {
        return this.method;
    }
    public List<GetAttackProtectionBreachedPasswordDetectionPreUserRegistration> preUserRegistrations() {
        return this.preUserRegistrations;
    }
    public List<String> shields() {
        return this.shields;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAttackProtectionBreachedPasswordDetection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> adminNotificationFrequencies;
        private Boolean enabled;
        private String method;
        private List<GetAttackProtectionBreachedPasswordDetectionPreUserRegistration> preUserRegistrations;
        private List<String> shields;
        public Builder() {}
        public Builder(GetAttackProtectionBreachedPasswordDetection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminNotificationFrequencies = defaults.adminNotificationFrequencies;
    	      this.enabled = defaults.enabled;
    	      this.method = defaults.method;
    	      this.preUserRegistrations = defaults.preUserRegistrations;
    	      this.shields = defaults.shields;
        }

        @CustomType.Setter
        public Builder adminNotificationFrequencies(List<String> adminNotificationFrequencies) {
            this.adminNotificationFrequencies = Objects.requireNonNull(adminNotificationFrequencies);
            return this;
        }
        public Builder adminNotificationFrequencies(String... adminNotificationFrequencies) {
            return adminNotificationFrequencies(List.of(adminNotificationFrequencies));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder method(String method) {
            this.method = Objects.requireNonNull(method);
            return this;
        }
        @CustomType.Setter
        public Builder preUserRegistrations(List<GetAttackProtectionBreachedPasswordDetectionPreUserRegistration> preUserRegistrations) {
            this.preUserRegistrations = Objects.requireNonNull(preUserRegistrations);
            return this;
        }
        public Builder preUserRegistrations(GetAttackProtectionBreachedPasswordDetectionPreUserRegistration... preUserRegistrations) {
            return preUserRegistrations(List.of(preUserRegistrations));
        }
        @CustomType.Setter
        public Builder shields(List<String> shields) {
            this.shields = Objects.requireNonNull(shields);
            return this;
        }
        public Builder shields(String... shields) {
            return shields(List.of(shields));
        }
        public GetAttackProtectionBreachedPasswordDetection build() {
            final var _resultValue = new GetAttackProtectionBreachedPasswordDetection();
            _resultValue.adminNotificationFrequencies = adminNotificationFrequencies;
            _resultValue.enabled = enabled;
            _resultValue.method = method;
            _resultValue.preUserRegistrations = preUserRegistrations;
            _resultValue.shields = shields;
            return _resultValue;
        }
    }
}
