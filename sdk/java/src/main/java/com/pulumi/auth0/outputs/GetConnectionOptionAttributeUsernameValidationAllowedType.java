// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetConnectionOptionAttributeUsernameValidationAllowedType {
    /**
     * @return One of the allowed types for UserName signup attribute
     * 
     */
    private Boolean email;
    /**
     * @return One of the allowed types for UserName signup attribute
     * 
     */
    private Boolean phoneNumber;

    private GetConnectionOptionAttributeUsernameValidationAllowedType() {}
    /**
     * @return One of the allowed types for UserName signup attribute
     * 
     */
    public Boolean email() {
        return this.email;
    }
    /**
     * @return One of the allowed types for UserName signup attribute
     * 
     */
    public Boolean phoneNumber() {
        return this.phoneNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionOptionAttributeUsernameValidationAllowedType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean email;
        private Boolean phoneNumber;
        public Builder() {}
        public Builder(GetConnectionOptionAttributeUsernameValidationAllowedType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.phoneNumber = defaults.phoneNumber;
        }

        @CustomType.Setter
        public Builder email(Boolean email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetConnectionOptionAttributeUsernameValidationAllowedType", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder phoneNumber(Boolean phoneNumber) {
            if (phoneNumber == null) {
              throw new MissingRequiredPropertyException("GetConnectionOptionAttributeUsernameValidationAllowedType", "phoneNumber");
            }
            this.phoneNumber = phoneNumber;
            return this;
        }
        public GetConnectionOptionAttributeUsernameValidationAllowedType build() {
            final var _resultValue = new GetConnectionOptionAttributeUsernameValidationAllowedType();
            _resultValue.email = email;
            _resultValue.phoneNumber = phoneNumber;
            return _resultValue;
        }
    }
}
