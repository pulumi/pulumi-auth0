// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.UserAttributeProfileUserIdStrategyOverrideArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserAttributeProfileUserIdArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserAttributeProfileUserIdArgs Empty = new UserAttributeProfileUserIdArgs();

    /**
     * The OIDC mapping for the user ID.
     * 
     */
    @Import(name="oidcMapping")
    private @Nullable Output<String> oidcMapping;

    /**
     * @return The OIDC mapping for the user ID.
     * 
     */
    public Optional<Output<String>> oidcMapping() {
        return Optional.ofNullable(this.oidcMapping);
    }

    /**
     * The SAML mapping for the user ID.
     * 
     */
    @Import(name="samlMappings")
    private @Nullable Output<List<String>> samlMappings;

    /**
     * @return The SAML mapping for the user ID.
     * 
     */
    public Optional<Output<List<String>>> samlMappings() {
        return Optional.ofNullable(this.samlMappings);
    }

    /**
     * The SCIM mapping for the user ID.
     * 
     */
    @Import(name="scimMapping")
    private @Nullable Output<String> scimMapping;

    /**
     * @return The SCIM mapping for the user ID.
     * 
     */
    public Optional<Output<String>> scimMapping() {
        return Optional.ofNullable(this.scimMapping);
    }

    /**
     * Strategy-specific overrides for user ID mapping.
     * 
     */
    @Import(name="strategyOverrides")
    private @Nullable Output<List<UserAttributeProfileUserIdStrategyOverrideArgs>> strategyOverrides;

    /**
     * @return Strategy-specific overrides for user ID mapping.
     * 
     */
    public Optional<Output<List<UserAttributeProfileUserIdStrategyOverrideArgs>>> strategyOverrides() {
        return Optional.ofNullable(this.strategyOverrides);
    }

    private UserAttributeProfileUserIdArgs() {}

    private UserAttributeProfileUserIdArgs(UserAttributeProfileUserIdArgs $) {
        this.oidcMapping = $.oidcMapping;
        this.samlMappings = $.samlMappings;
        this.scimMapping = $.scimMapping;
        this.strategyOverrides = $.strategyOverrides;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAttributeProfileUserIdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAttributeProfileUserIdArgs $;

        public Builder() {
            $ = new UserAttributeProfileUserIdArgs();
        }

        public Builder(UserAttributeProfileUserIdArgs defaults) {
            $ = new UserAttributeProfileUserIdArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param oidcMapping The OIDC mapping for the user ID.
         * 
         * @return builder
         * 
         */
        public Builder oidcMapping(@Nullable Output<String> oidcMapping) {
            $.oidcMapping = oidcMapping;
            return this;
        }

        /**
         * @param oidcMapping The OIDC mapping for the user ID.
         * 
         * @return builder
         * 
         */
        public Builder oidcMapping(String oidcMapping) {
            return oidcMapping(Output.of(oidcMapping));
        }

        /**
         * @param samlMappings The SAML mapping for the user ID.
         * 
         * @return builder
         * 
         */
        public Builder samlMappings(@Nullable Output<List<String>> samlMappings) {
            $.samlMappings = samlMappings;
            return this;
        }

        /**
         * @param samlMappings The SAML mapping for the user ID.
         * 
         * @return builder
         * 
         */
        public Builder samlMappings(List<String> samlMappings) {
            return samlMappings(Output.of(samlMappings));
        }

        /**
         * @param samlMappings The SAML mapping for the user ID.
         * 
         * @return builder
         * 
         */
        public Builder samlMappings(String... samlMappings) {
            return samlMappings(List.of(samlMappings));
        }

        /**
         * @param scimMapping The SCIM mapping for the user ID.
         * 
         * @return builder
         * 
         */
        public Builder scimMapping(@Nullable Output<String> scimMapping) {
            $.scimMapping = scimMapping;
            return this;
        }

        /**
         * @param scimMapping The SCIM mapping for the user ID.
         * 
         * @return builder
         * 
         */
        public Builder scimMapping(String scimMapping) {
            return scimMapping(Output.of(scimMapping));
        }

        /**
         * @param strategyOverrides Strategy-specific overrides for user ID mapping.
         * 
         * @return builder
         * 
         */
        public Builder strategyOverrides(@Nullable Output<List<UserAttributeProfileUserIdStrategyOverrideArgs>> strategyOverrides) {
            $.strategyOverrides = strategyOverrides;
            return this;
        }

        /**
         * @param strategyOverrides Strategy-specific overrides for user ID mapping.
         * 
         * @return builder
         * 
         */
        public Builder strategyOverrides(List<UserAttributeProfileUserIdStrategyOverrideArgs> strategyOverrides) {
            return strategyOverrides(Output.of(strategyOverrides));
        }

        /**
         * @param strategyOverrides Strategy-specific overrides for user ID mapping.
         * 
         * @return builder
         * 
         */
        public Builder strategyOverrides(UserAttributeProfileUserIdStrategyOverrideArgs... strategyOverrides) {
            return strategyOverrides(List.of(strategyOverrides));
        }

        public UserAttributeProfileUserIdArgs build() {
            return $;
        }
    }

}
