// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.inputs.GlobalClientAddonsArgs;
import com.pulumi.auth0.inputs.GlobalClientJwtConfigurationArgs;
import com.pulumi.auth0.inputs.GlobalClientMobileArgs;
import com.pulumi.auth0.inputs.GlobalClientNativeSocialLoginArgs;
import com.pulumi.auth0.inputs.GlobalClientRefreshTokenArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalClientArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalClientArgs Empty = new GlobalClientArgs();

    /**
     * Addons enabled for this client and their associated configurations.
     * 
     */
    @Import(name="addons")
    private @Nullable Output<GlobalClientAddonsArgs> addons;

    /**
     * @return Addons enabled for this client and their associated configurations.
     * 
     */
    public Optional<Output<GlobalClientAddonsArgs>> addons() {
        return Optional.ofNullable(this.addons);
    }

    /**
     * List of applications ID&#39;s that will be allowed to make delegation request. By default, all applications will be allowed.
     * 
     */
    @Import(name="allowedClients")
    private @Nullable Output<List<String>> allowedClients;

    /**
     * @return List of applications ID&#39;s that will be allowed to make delegation request. By default, all applications will be allowed.
     * 
     */
    public Optional<Output<List<String>>> allowedClients() {
        return Optional.ofNullable(this.allowedClients);
    }

    /**
     * URLs that Auth0 may redirect to after logout.
     * 
     */
    @Import(name="allowedLogoutUrls")
    private @Nullable Output<List<String>> allowedLogoutUrls;

    /**
     * @return URLs that Auth0 may redirect to after logout.
     * 
     */
    public Optional<Output<List<String>>> allowedLogoutUrls() {
        return Optional.ofNullable(this.allowedLogoutUrls);
    }

    /**
     * URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.
     * 
     */
    @Import(name="allowedOrigins")
    private @Nullable Output<List<String>> allowedOrigins;

    /**
     * @return URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.
     * 
     */
    public Optional<Output<List<String>>> allowedOrigins() {
        return Optional.ofNullable(this.allowedOrigins);
    }

    /**
     * Type of application the client represents. Possible values are: `native`, `spa`, `regular_web`, `non_interactive`, `sso_integration`. Specific SSO integrations types accepted as well are: `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.
     * 
     */
    @Import(name="appType")
    private @Nullable Output<String> appType;

    /**
     * @return Type of application the client represents. Possible values are: `native`, `spa`, `regular_web`, `non_interactive`, `sso_integration`. Specific SSO integrations types accepted as well are: `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.
     * 
     */
    public Optional<Output<String>> appType() {
        return Optional.ofNullable(this.appType);
    }

    /**
     * URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.
     * 
     */
    @Import(name="callbacks")
    private @Nullable Output<List<String>> callbacks;

    /**
     * @return URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.
     * 
     */
    public Optional<Output<List<String>>> callbacks() {
        return Optional.ofNullable(this.callbacks);
    }

    /**
     * List of audiences/realms for SAML protocol. Used by the wsfed addon.
     * 
     */
    @Import(name="clientAliases")
    private @Nullable Output<List<String>> clientAliases;

    /**
     * @return List of audiences/realms for SAML protocol. Used by the wsfed addon.
     * 
     */
    public Optional<Output<List<String>>> clientAliases() {
        return Optional.ofNullable(this.clientAliases);
    }

    /**
     * The ID of the client.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return The ID of the client.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?&#34;/\()&lt;&gt;@ [Tab] [Space]`.
     * 
     */
    @Import(name="clientMetadata")
    private @Nullable Output<Map<String,Object>> clientMetadata;

    /**
     * @return Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?&#34;/\()&lt;&gt;@ [Tab] [Space]`.
     * 
     */
    public Optional<Output<Map<String,Object>>> clientMetadata() {
        return Optional.ofNullable(this.clientMetadata);
    }

    /**
     * Secret for the client. Keep this private. To access this attribute you need to add the `read:client_keys` scope to the
     * Terraform client. Otherwise, the attribute will contain an empty string.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return Secret for the client. Keep this private. To access this attribute you need to add the `read:client_keys` scope to the
     * Terraform client. Otherwise, the attribute will contain an empty string.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * Custom metadata for the rotation. The contents of this map are arbitrary and are hashed by the provider. When the hash changes, a rotation is triggered. For example, the map could contain the user making the change, the date of the change, and a text reason for the change. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).
     * 
     */
    @Import(name="clientSecretRotationTrigger")
    private @Nullable Output<Map<String,Object>> clientSecretRotationTrigger;

    /**
     * @return Custom metadata for the rotation. The contents of this map are arbitrary and are hashed by the provider. When the hash changes, a rotation is triggered. For example, the map could contain the user making the change, the date of the change, and a text reason for the change. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).
     * 
     */
    public Optional<Output<Map<String,Object>>> clientSecretRotationTrigger() {
        return Optional.ofNullable(this.clientSecretRotationTrigger);
    }

    /**
     * Whether this client can be used to make cross-origin authentication requests (`true`) or it is not allowed to make such requests (`false`). Requires the `coa_toggle_enabled` feature flag to be enabled on the tenant by the support team.
     * 
     */
    @Import(name="crossOriginAuth")
    private @Nullable Output<Boolean> crossOriginAuth;

    /**
     * @return Whether this client can be used to make cross-origin authentication requests (`true`) or it is not allowed to make such requests (`false`). Requires the `coa_toggle_enabled` feature flag to be enabled on the tenant by the support team.
     * 
     */
    public Optional<Output<Boolean>> crossOriginAuth() {
        return Optional.ofNullable(this.crossOriginAuth);
    }

    /**
     * URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.
     * 
     */
    @Import(name="crossOriginLoc")
    private @Nullable Output<String> crossOriginLoc;

    /**
     * @return URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.
     * 
     */
    public Optional<Output<String>> crossOriginLoc() {
        return Optional.ofNullable(this.crossOriginLoc);
    }

    /**
     * The content (HTML, CSS, JS) of the custom login page.
     * 
     */
    @Import(name="customLoginPage")
    private @Nullable Output<String> customLoginPage;

    /**
     * @return The content (HTML, CSS, JS) of the custom login page.
     * 
     */
    public Optional<Output<String>> customLoginPage() {
        return Optional.ofNullable(this.customLoginPage);
    }

    /**
     * Indicates whether a custom login page is to be used.
     * 
     */
    @Import(name="customLoginPageOn")
    private @Nullable Output<Boolean> customLoginPageOn;

    /**
     * @return Indicates whether a custom login page is to be used.
     * 
     */
    public Optional<Output<Boolean>> customLoginPageOn() {
        return Optional.ofNullable(this.customLoginPageOn);
    }

    /**
     * Description of the purpose of the client.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the purpose of the client.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Encryption used for WS-Fed responses with this client.
     * 
     */
    @Import(name="encryptionKey")
    private @Nullable Output<Map<String,String>> encryptionKey;

    /**
     * @return Encryption used for WS-Fed responses with this client.
     * 
     */
    public Optional<Output<Map<String,String>>> encryptionKey() {
        return Optional.ofNullable(this.encryptionKey);
    }

    /**
     * HTML form template to be used for WS-Federation.
     * 
     */
    @Import(name="formTemplate")
    private @Nullable Output<String> formTemplate;

    /**
     * @return HTML form template to be used for WS-Federation.
     * 
     */
    public Optional<Output<String>> formTemplate() {
        return Optional.ofNullable(this.formTemplate);
    }

    /**
     * Types of grants that this client is authorized to use.
     * 
     */
    @Import(name="grantTypes")
    private @Nullable Output<List<String>> grantTypes;

    /**
     * @return Types of grants that this client is authorized to use.
     * 
     */
    public Optional<Output<List<String>>> grantTypes() {
        return Optional.ofNullable(this.grantTypes);
    }

    /**
     * Initiate login URI. Must be HTTPS or an empty string.
     * 
     */
    @Import(name="initiateLoginUri")
    private @Nullable Output<String> initiateLoginUri;

    /**
     * @return Initiate login URI. Must be HTTPS or an empty string.
     * 
     */
    public Optional<Output<String>> initiateLoginUri() {
        return Optional.ofNullable(this.initiateLoginUri);
    }

    /**
     * Indicates whether this client is a first-party client.
     * 
     */
    @Import(name="isFirstParty")
    private @Nullable Output<Boolean> isFirstParty;

    /**
     * @return Indicates whether this client is a first-party client.
     * 
     */
    public Optional<Output<Boolean>> isFirstParty() {
        return Optional.ofNullable(this.isFirstParty);
    }

    /**
     * Indicates whether the token endpoint IP header is trusted.
     * 
     */
    @Import(name="isTokenEndpointIpHeaderTrusted")
    private @Nullable Output<Boolean> isTokenEndpointIpHeaderTrusted;

    /**
     * @return Indicates whether the token endpoint IP header is trusted.
     * 
     */
    public Optional<Output<Boolean>> isTokenEndpointIpHeaderTrusted() {
        return Optional.ofNullable(this.isTokenEndpointIpHeaderTrusted);
    }

    /**
     * Configuration settings for the JWTs issued for this client.
     * 
     */
    @Import(name="jwtConfiguration")
    private @Nullable Output<GlobalClientJwtConfigurationArgs> jwtConfiguration;

    /**
     * @return Configuration settings for the JWTs issued for this client.
     * 
     */
    public Optional<Output<GlobalClientJwtConfigurationArgs>> jwtConfiguration() {
        return Optional.ofNullable(this.jwtConfiguration);
    }

    /**
     * URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.
     * 
     */
    @Import(name="logoUri")
    private @Nullable Output<String> logoUri;

    /**
     * @return URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.
     * 
     */
    public Optional<Output<String>> logoUri() {
        return Optional.ofNullable(this.logoUri);
    }

    /**
     * Additional configuration for native mobile apps.
     * 
     */
    @Import(name="mobile")
    private @Nullable Output<GlobalClientMobileArgs> mobile;

    /**
     * @return Additional configuration for native mobile apps.
     * 
     */
    public Optional<Output<GlobalClientMobileArgs>> mobile() {
        return Optional.ofNullable(this.mobile);
    }

    /**
     * Name of the client.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the client.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to `false` in order to change the `app_type`.
     * 
     */
    @Import(name="nativeSocialLogin")
    private @Nullable Output<GlobalClientNativeSocialLoginArgs> nativeSocialLogin;

    /**
     * @return Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to `false` in order to change the `app_type`.
     * 
     */
    public Optional<Output<GlobalClientNativeSocialLoginArgs>> nativeSocialLogin() {
        return Optional.ofNullable(this.nativeSocialLogin);
    }

    /**
     * Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.
     * 
     */
    @Import(name="oidcBackchannelLogoutUrls")
    private @Nullable Output<List<String>> oidcBackchannelLogoutUrls;

    /**
     * @return Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.
     * 
     */
    public Optional<Output<List<String>>> oidcBackchannelLogoutUrls() {
        return Optional.ofNullable(this.oidcBackchannelLogoutUrls);
    }

    /**
     * Indicates whether this client will conform to strict OIDC specifications.
     * 
     */
    @Import(name="oidcConformant")
    private @Nullable Output<Boolean> oidcConformant;

    /**
     * @return Indicates whether this client will conform to strict OIDC specifications.
     * 
     */
    public Optional<Output<Boolean>> oidcConformant() {
        return Optional.ofNullable(this.oidcConformant);
    }

    /**
     * Defines how to proceed during an authentication transaction when `organization_usage = &#34;require&#34;`. Can be `no_prompt` (default) or `pre_login_prompt`.
     * 
     */
    @Import(name="organizationRequireBehavior")
    private @Nullable Output<String> organizationRequireBehavior;

    /**
     * @return Defines how to proceed during an authentication transaction when `organization_usage = &#34;require&#34;`. Can be `no_prompt` (default) or `pre_login_prompt`.
     * 
     */
    public Optional<Output<String>> organizationRequireBehavior() {
        return Optional.ofNullable(this.organizationRequireBehavior);
    }

    /**
     * Defines how to proceed during an authentication transaction with regards to an organization. Can be `deny` (default), `allow` or `require`.
     * 
     */
    @Import(name="organizationUsage")
    private @Nullable Output<String> organizationUsage;

    /**
     * @return Defines how to proceed during an authentication transaction with regards to an organization. Can be `deny` (default), `allow` or `require`.
     * 
     */
    public Optional<Output<String>> organizationUsage() {
        return Optional.ofNullable(this.organizationUsage);
    }

    /**
     * Configuration settings for the refresh tokens issued for this client.
     * 
     */
    @Import(name="refreshToken")
    private @Nullable Output<GlobalClientRefreshTokenArgs> refreshToken;

    /**
     * @return Configuration settings for the refresh tokens issued for this client.
     * 
     */
    public Optional<Output<GlobalClientRefreshTokenArgs>> refreshToken() {
        return Optional.ofNullable(this.refreshToken);
    }

    /**
     * List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.
     * 
     */
    @Import(name="signingKeys")
    private @Nullable Output<List<Map<String,Object>>> signingKeys;

    /**
     * @return List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.
     * 
     */
    public Optional<Output<List<Map<String,Object>>>> signingKeys() {
        return Optional.ofNullable(this.signingKeys);
    }

    /**
     * Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).
     * 
     */
    @Import(name="sso")
    private @Nullable Output<Boolean> sso;

    /**
     * @return Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).
     * 
     */
    public Optional<Output<Boolean>> sso() {
        return Optional.ofNullable(this.sso);
    }

    /**
     * Indicates whether or not SSO is disabled.
     * 
     */
    @Import(name="ssoDisabled")
    private @Nullable Output<Boolean> ssoDisabled;

    /**
     * @return Indicates whether or not SSO is disabled.
     * 
     */
    public Optional<Output<Boolean>> ssoDisabled() {
        return Optional.ofNullable(this.ssoDisabled);
    }

    /**
     * Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).
     * 
     */
    @Import(name="tokenEndpointAuthMethod")
    private @Nullable Output<String> tokenEndpointAuthMethod;

    /**
     * @return Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).
     * 
     */
    public Optional<Output<String>> tokenEndpointAuthMethod() {
        return Optional.ofNullable(this.tokenEndpointAuthMethod);
    }

    /**
     * URLs that represent valid web origins for use with web message response mode.
     * 
     */
    @Import(name="webOrigins")
    private @Nullable Output<List<String>> webOrigins;

    /**
     * @return URLs that represent valid web origins for use with web message response mode.
     * 
     */
    public Optional<Output<List<String>>> webOrigins() {
        return Optional.ofNullable(this.webOrigins);
    }

    private GlobalClientArgs() {}

    private GlobalClientArgs(GlobalClientArgs $) {
        this.addons = $.addons;
        this.allowedClients = $.allowedClients;
        this.allowedLogoutUrls = $.allowedLogoutUrls;
        this.allowedOrigins = $.allowedOrigins;
        this.appType = $.appType;
        this.callbacks = $.callbacks;
        this.clientAliases = $.clientAliases;
        this.clientId = $.clientId;
        this.clientMetadata = $.clientMetadata;
        this.clientSecret = $.clientSecret;
        this.clientSecretRotationTrigger = $.clientSecretRotationTrigger;
        this.crossOriginAuth = $.crossOriginAuth;
        this.crossOriginLoc = $.crossOriginLoc;
        this.customLoginPage = $.customLoginPage;
        this.customLoginPageOn = $.customLoginPageOn;
        this.description = $.description;
        this.encryptionKey = $.encryptionKey;
        this.formTemplate = $.formTemplate;
        this.grantTypes = $.grantTypes;
        this.initiateLoginUri = $.initiateLoginUri;
        this.isFirstParty = $.isFirstParty;
        this.isTokenEndpointIpHeaderTrusted = $.isTokenEndpointIpHeaderTrusted;
        this.jwtConfiguration = $.jwtConfiguration;
        this.logoUri = $.logoUri;
        this.mobile = $.mobile;
        this.name = $.name;
        this.nativeSocialLogin = $.nativeSocialLogin;
        this.oidcBackchannelLogoutUrls = $.oidcBackchannelLogoutUrls;
        this.oidcConformant = $.oidcConformant;
        this.organizationRequireBehavior = $.organizationRequireBehavior;
        this.organizationUsage = $.organizationUsage;
        this.refreshToken = $.refreshToken;
        this.signingKeys = $.signingKeys;
        this.sso = $.sso;
        this.ssoDisabled = $.ssoDisabled;
        this.tokenEndpointAuthMethod = $.tokenEndpointAuthMethod;
        this.webOrigins = $.webOrigins;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalClientArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalClientArgs $;

        public Builder() {
            $ = new GlobalClientArgs();
        }

        public Builder(GlobalClientArgs defaults) {
            $ = new GlobalClientArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addons Addons enabled for this client and their associated configurations.
         * 
         * @return builder
         * 
         */
        public Builder addons(@Nullable Output<GlobalClientAddonsArgs> addons) {
            $.addons = addons;
            return this;
        }

        /**
         * @param addons Addons enabled for this client and their associated configurations.
         * 
         * @return builder
         * 
         */
        public Builder addons(GlobalClientAddonsArgs addons) {
            return addons(Output.of(addons));
        }

        /**
         * @param allowedClients List of applications ID&#39;s that will be allowed to make delegation request. By default, all applications will be allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowedClients(@Nullable Output<List<String>> allowedClients) {
            $.allowedClients = allowedClients;
            return this;
        }

        /**
         * @param allowedClients List of applications ID&#39;s that will be allowed to make delegation request. By default, all applications will be allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowedClients(List<String> allowedClients) {
            return allowedClients(Output.of(allowedClients));
        }

        /**
         * @param allowedClients List of applications ID&#39;s that will be allowed to make delegation request. By default, all applications will be allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowedClients(String... allowedClients) {
            return allowedClients(List.of(allowedClients));
        }

        /**
         * @param allowedLogoutUrls URLs that Auth0 may redirect to after logout.
         * 
         * @return builder
         * 
         */
        public Builder allowedLogoutUrls(@Nullable Output<List<String>> allowedLogoutUrls) {
            $.allowedLogoutUrls = allowedLogoutUrls;
            return this;
        }

        /**
         * @param allowedLogoutUrls URLs that Auth0 may redirect to after logout.
         * 
         * @return builder
         * 
         */
        public Builder allowedLogoutUrls(List<String> allowedLogoutUrls) {
            return allowedLogoutUrls(Output.of(allowedLogoutUrls));
        }

        /**
         * @param allowedLogoutUrls URLs that Auth0 may redirect to after logout.
         * 
         * @return builder
         * 
         */
        public Builder allowedLogoutUrls(String... allowedLogoutUrls) {
            return allowedLogoutUrls(List.of(allowedLogoutUrls));
        }

        /**
         * @param allowedOrigins URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowedOrigins(@Nullable Output<List<String>> allowedOrigins) {
            $.allowedOrigins = allowedOrigins;
            return this;
        }

        /**
         * @param allowedOrigins URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowedOrigins(List<String> allowedOrigins) {
            return allowedOrigins(Output.of(allowedOrigins));
        }

        /**
         * @param allowedOrigins URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowedOrigins(String... allowedOrigins) {
            return allowedOrigins(List.of(allowedOrigins));
        }

        /**
         * @param appType Type of application the client represents. Possible values are: `native`, `spa`, `regular_web`, `non_interactive`, `sso_integration`. Specific SSO integrations types accepted as well are: `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.
         * 
         * @return builder
         * 
         */
        public Builder appType(@Nullable Output<String> appType) {
            $.appType = appType;
            return this;
        }

        /**
         * @param appType Type of application the client represents. Possible values are: `native`, `spa`, `regular_web`, `non_interactive`, `sso_integration`. Specific SSO integrations types accepted as well are: `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.
         * 
         * @return builder
         * 
         */
        public Builder appType(String appType) {
            return appType(Output.of(appType));
        }

        /**
         * @param callbacks URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.
         * 
         * @return builder
         * 
         */
        public Builder callbacks(@Nullable Output<List<String>> callbacks) {
            $.callbacks = callbacks;
            return this;
        }

        /**
         * @param callbacks URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.
         * 
         * @return builder
         * 
         */
        public Builder callbacks(List<String> callbacks) {
            return callbacks(Output.of(callbacks));
        }

        /**
         * @param callbacks URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.
         * 
         * @return builder
         * 
         */
        public Builder callbacks(String... callbacks) {
            return callbacks(List.of(callbacks));
        }

        /**
         * @param clientAliases List of audiences/realms for SAML protocol. Used by the wsfed addon.
         * 
         * @return builder
         * 
         */
        public Builder clientAliases(@Nullable Output<List<String>> clientAliases) {
            $.clientAliases = clientAliases;
            return this;
        }

        /**
         * @param clientAliases List of audiences/realms for SAML protocol. Used by the wsfed addon.
         * 
         * @return builder
         * 
         */
        public Builder clientAliases(List<String> clientAliases) {
            return clientAliases(Output.of(clientAliases));
        }

        /**
         * @param clientAliases List of audiences/realms for SAML protocol. Used by the wsfed addon.
         * 
         * @return builder
         * 
         */
        public Builder clientAliases(String... clientAliases) {
            return clientAliases(List.of(clientAliases));
        }

        /**
         * @param clientId The ID of the client.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The ID of the client.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientMetadata Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?&#34;/\()&lt;&gt;@ [Tab] [Space]`.
         * 
         * @return builder
         * 
         */
        public Builder clientMetadata(@Nullable Output<Map<String,Object>> clientMetadata) {
            $.clientMetadata = clientMetadata;
            return this;
        }

        /**
         * @param clientMetadata Metadata associated with the client, in the form of an object with string values (max 255 chars). Maximum of 10 metadata properties allowed. Field names (max 255 chars) are alphanumeric and may only include the following special characters: `:,-+=_*?&#34;/\()&lt;&gt;@ [Tab] [Space]`.
         * 
         * @return builder
         * 
         */
        public Builder clientMetadata(Map<String,Object> clientMetadata) {
            return clientMetadata(Output.of(clientMetadata));
        }

        /**
         * @param clientSecret Secret for the client. Keep this private. To access this attribute you need to add the `read:client_keys` scope to the
         * Terraform client. Otherwise, the attribute will contain an empty string.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Secret for the client. Keep this private. To access this attribute you need to add the `read:client_keys` scope to the
         * Terraform client. Otherwise, the attribute will contain an empty string.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param clientSecretRotationTrigger Custom metadata for the rotation. The contents of this map are arbitrary and are hashed by the provider. When the hash changes, a rotation is triggered. For example, the map could contain the user making the change, the date of the change, and a text reason for the change. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).
         * 
         * @return builder
         * 
         */
        public Builder clientSecretRotationTrigger(@Nullable Output<Map<String,Object>> clientSecretRotationTrigger) {
            $.clientSecretRotationTrigger = clientSecretRotationTrigger;
            return this;
        }

        /**
         * @param clientSecretRotationTrigger Custom metadata for the rotation. The contents of this map are arbitrary and are hashed by the provider. When the hash changes, a rotation is triggered. For example, the map could contain the user making the change, the date of the change, and a text reason for the change. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).
         * 
         * @return builder
         * 
         */
        public Builder clientSecretRotationTrigger(Map<String,Object> clientSecretRotationTrigger) {
            return clientSecretRotationTrigger(Output.of(clientSecretRotationTrigger));
        }

        /**
         * @param crossOriginAuth Whether this client can be used to make cross-origin authentication requests (`true`) or it is not allowed to make such requests (`false`). Requires the `coa_toggle_enabled` feature flag to be enabled on the tenant by the support team.
         * 
         * @return builder
         * 
         */
        public Builder crossOriginAuth(@Nullable Output<Boolean> crossOriginAuth) {
            $.crossOriginAuth = crossOriginAuth;
            return this;
        }

        /**
         * @param crossOriginAuth Whether this client can be used to make cross-origin authentication requests (`true`) or it is not allowed to make such requests (`false`). Requires the `coa_toggle_enabled` feature flag to be enabled on the tenant by the support team.
         * 
         * @return builder
         * 
         */
        public Builder crossOriginAuth(Boolean crossOriginAuth) {
            return crossOriginAuth(Output.of(crossOriginAuth));
        }

        /**
         * @param crossOriginLoc URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.
         * 
         * @return builder
         * 
         */
        public Builder crossOriginLoc(@Nullable Output<String> crossOriginLoc) {
            $.crossOriginLoc = crossOriginLoc;
            return this;
        }

        /**
         * @param crossOriginLoc URL of the location in your site where the cross-origin verification takes place for the cross-origin auth flow when performing authentication in your own domain instead of Auth0 Universal Login page.
         * 
         * @return builder
         * 
         */
        public Builder crossOriginLoc(String crossOriginLoc) {
            return crossOriginLoc(Output.of(crossOriginLoc));
        }

        /**
         * @param customLoginPage The content (HTML, CSS, JS) of the custom login page.
         * 
         * @return builder
         * 
         */
        public Builder customLoginPage(@Nullable Output<String> customLoginPage) {
            $.customLoginPage = customLoginPage;
            return this;
        }

        /**
         * @param customLoginPage The content (HTML, CSS, JS) of the custom login page.
         * 
         * @return builder
         * 
         */
        public Builder customLoginPage(String customLoginPage) {
            return customLoginPage(Output.of(customLoginPage));
        }

        /**
         * @param customLoginPageOn Indicates whether a custom login page is to be used.
         * 
         * @return builder
         * 
         */
        public Builder customLoginPageOn(@Nullable Output<Boolean> customLoginPageOn) {
            $.customLoginPageOn = customLoginPageOn;
            return this;
        }

        /**
         * @param customLoginPageOn Indicates whether a custom login page is to be used.
         * 
         * @return builder
         * 
         */
        public Builder customLoginPageOn(Boolean customLoginPageOn) {
            return customLoginPageOn(Output.of(customLoginPageOn));
        }

        /**
         * @param description Description of the purpose of the client.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the purpose of the client.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param encryptionKey Encryption used for WS-Fed responses with this client.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKey(@Nullable Output<Map<String,String>> encryptionKey) {
            $.encryptionKey = encryptionKey;
            return this;
        }

        /**
         * @param encryptionKey Encryption used for WS-Fed responses with this client.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKey(Map<String,String> encryptionKey) {
            return encryptionKey(Output.of(encryptionKey));
        }

        /**
         * @param formTemplate HTML form template to be used for WS-Federation.
         * 
         * @return builder
         * 
         */
        public Builder formTemplate(@Nullable Output<String> formTemplate) {
            $.formTemplate = formTemplate;
            return this;
        }

        /**
         * @param formTemplate HTML form template to be used for WS-Federation.
         * 
         * @return builder
         * 
         */
        public Builder formTemplate(String formTemplate) {
            return formTemplate(Output.of(formTemplate));
        }

        /**
         * @param grantTypes Types of grants that this client is authorized to use.
         * 
         * @return builder
         * 
         */
        public Builder grantTypes(@Nullable Output<List<String>> grantTypes) {
            $.grantTypes = grantTypes;
            return this;
        }

        /**
         * @param grantTypes Types of grants that this client is authorized to use.
         * 
         * @return builder
         * 
         */
        public Builder grantTypes(List<String> grantTypes) {
            return grantTypes(Output.of(grantTypes));
        }

        /**
         * @param grantTypes Types of grants that this client is authorized to use.
         * 
         * @return builder
         * 
         */
        public Builder grantTypes(String... grantTypes) {
            return grantTypes(List.of(grantTypes));
        }

        /**
         * @param initiateLoginUri Initiate login URI. Must be HTTPS or an empty string.
         * 
         * @return builder
         * 
         */
        public Builder initiateLoginUri(@Nullable Output<String> initiateLoginUri) {
            $.initiateLoginUri = initiateLoginUri;
            return this;
        }

        /**
         * @param initiateLoginUri Initiate login URI. Must be HTTPS or an empty string.
         * 
         * @return builder
         * 
         */
        public Builder initiateLoginUri(String initiateLoginUri) {
            return initiateLoginUri(Output.of(initiateLoginUri));
        }

        /**
         * @param isFirstParty Indicates whether this client is a first-party client.
         * 
         * @return builder
         * 
         */
        public Builder isFirstParty(@Nullable Output<Boolean> isFirstParty) {
            $.isFirstParty = isFirstParty;
            return this;
        }

        /**
         * @param isFirstParty Indicates whether this client is a first-party client.
         * 
         * @return builder
         * 
         */
        public Builder isFirstParty(Boolean isFirstParty) {
            return isFirstParty(Output.of(isFirstParty));
        }

        /**
         * @param isTokenEndpointIpHeaderTrusted Indicates whether the token endpoint IP header is trusted.
         * 
         * @return builder
         * 
         */
        public Builder isTokenEndpointIpHeaderTrusted(@Nullable Output<Boolean> isTokenEndpointIpHeaderTrusted) {
            $.isTokenEndpointIpHeaderTrusted = isTokenEndpointIpHeaderTrusted;
            return this;
        }

        /**
         * @param isTokenEndpointIpHeaderTrusted Indicates whether the token endpoint IP header is trusted.
         * 
         * @return builder
         * 
         */
        public Builder isTokenEndpointIpHeaderTrusted(Boolean isTokenEndpointIpHeaderTrusted) {
            return isTokenEndpointIpHeaderTrusted(Output.of(isTokenEndpointIpHeaderTrusted));
        }

        /**
         * @param jwtConfiguration Configuration settings for the JWTs issued for this client.
         * 
         * @return builder
         * 
         */
        public Builder jwtConfiguration(@Nullable Output<GlobalClientJwtConfigurationArgs> jwtConfiguration) {
            $.jwtConfiguration = jwtConfiguration;
            return this;
        }

        /**
         * @param jwtConfiguration Configuration settings for the JWTs issued for this client.
         * 
         * @return builder
         * 
         */
        public Builder jwtConfiguration(GlobalClientJwtConfigurationArgs jwtConfiguration) {
            return jwtConfiguration(Output.of(jwtConfiguration));
        }

        /**
         * @param logoUri URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.
         * 
         * @return builder
         * 
         */
        public Builder logoUri(@Nullable Output<String> logoUri) {
            $.logoUri = logoUri;
            return this;
        }

        /**
         * @param logoUri URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.
         * 
         * @return builder
         * 
         */
        public Builder logoUri(String logoUri) {
            return logoUri(Output.of(logoUri));
        }

        /**
         * @param mobile Additional configuration for native mobile apps.
         * 
         * @return builder
         * 
         */
        public Builder mobile(@Nullable Output<GlobalClientMobileArgs> mobile) {
            $.mobile = mobile;
            return this;
        }

        /**
         * @param mobile Additional configuration for native mobile apps.
         * 
         * @return builder
         * 
         */
        public Builder mobile(GlobalClientMobileArgs mobile) {
            return mobile(Output.of(mobile));
        }

        /**
         * @param name Name of the client.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the client.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nativeSocialLogin Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to `false` in order to change the `app_type`.
         * 
         * @return builder
         * 
         */
        public Builder nativeSocialLogin(@Nullable Output<GlobalClientNativeSocialLoginArgs> nativeSocialLogin) {
            $.nativeSocialLogin = nativeSocialLogin;
            return this;
        }

        /**
         * @param nativeSocialLogin Configuration settings to toggle native social login for mobile native applications. Once this is set it must stay set, with both resources set to `false` in order to change the `app_type`.
         * 
         * @return builder
         * 
         */
        public Builder nativeSocialLogin(GlobalClientNativeSocialLoginArgs nativeSocialLogin) {
            return nativeSocialLogin(Output.of(nativeSocialLogin));
        }

        /**
         * @param oidcBackchannelLogoutUrls Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.
         * 
         * @return builder
         * 
         */
        public Builder oidcBackchannelLogoutUrls(@Nullable Output<List<String>> oidcBackchannelLogoutUrls) {
            $.oidcBackchannelLogoutUrls = oidcBackchannelLogoutUrls;
            return this;
        }

        /**
         * @param oidcBackchannelLogoutUrls Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.
         * 
         * @return builder
         * 
         */
        public Builder oidcBackchannelLogoutUrls(List<String> oidcBackchannelLogoutUrls) {
            return oidcBackchannelLogoutUrls(Output.of(oidcBackchannelLogoutUrls));
        }

        /**
         * @param oidcBackchannelLogoutUrls Set of URLs that are valid to call back from Auth0 for OIDC backchannel logout. Currently only one URL is allowed.
         * 
         * @return builder
         * 
         */
        public Builder oidcBackchannelLogoutUrls(String... oidcBackchannelLogoutUrls) {
            return oidcBackchannelLogoutUrls(List.of(oidcBackchannelLogoutUrls));
        }

        /**
         * @param oidcConformant Indicates whether this client will conform to strict OIDC specifications.
         * 
         * @return builder
         * 
         */
        public Builder oidcConformant(@Nullable Output<Boolean> oidcConformant) {
            $.oidcConformant = oidcConformant;
            return this;
        }

        /**
         * @param oidcConformant Indicates whether this client will conform to strict OIDC specifications.
         * 
         * @return builder
         * 
         */
        public Builder oidcConformant(Boolean oidcConformant) {
            return oidcConformant(Output.of(oidcConformant));
        }

        /**
         * @param organizationRequireBehavior Defines how to proceed during an authentication transaction when `organization_usage = &#34;require&#34;`. Can be `no_prompt` (default) or `pre_login_prompt`.
         * 
         * @return builder
         * 
         */
        public Builder organizationRequireBehavior(@Nullable Output<String> organizationRequireBehavior) {
            $.organizationRequireBehavior = organizationRequireBehavior;
            return this;
        }

        /**
         * @param organizationRequireBehavior Defines how to proceed during an authentication transaction when `organization_usage = &#34;require&#34;`. Can be `no_prompt` (default) or `pre_login_prompt`.
         * 
         * @return builder
         * 
         */
        public Builder organizationRequireBehavior(String organizationRequireBehavior) {
            return organizationRequireBehavior(Output.of(organizationRequireBehavior));
        }

        /**
         * @param organizationUsage Defines how to proceed during an authentication transaction with regards to an organization. Can be `deny` (default), `allow` or `require`.
         * 
         * @return builder
         * 
         */
        public Builder organizationUsage(@Nullable Output<String> organizationUsage) {
            $.organizationUsage = organizationUsage;
            return this;
        }

        /**
         * @param organizationUsage Defines how to proceed during an authentication transaction with regards to an organization. Can be `deny` (default), `allow` or `require`.
         * 
         * @return builder
         * 
         */
        public Builder organizationUsage(String organizationUsage) {
            return organizationUsage(Output.of(organizationUsage));
        }

        /**
         * @param refreshToken Configuration settings for the refresh tokens issued for this client.
         * 
         * @return builder
         * 
         */
        public Builder refreshToken(@Nullable Output<GlobalClientRefreshTokenArgs> refreshToken) {
            $.refreshToken = refreshToken;
            return this;
        }

        /**
         * @param refreshToken Configuration settings for the refresh tokens issued for this client.
         * 
         * @return builder
         * 
         */
        public Builder refreshToken(GlobalClientRefreshTokenArgs refreshToken) {
            return refreshToken(Output.of(refreshToken));
        }

        /**
         * @param signingKeys List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.
         * 
         * @return builder
         * 
         */
        public Builder signingKeys(@Nullable Output<List<Map<String,Object>>> signingKeys) {
            $.signingKeys = signingKeys;
            return this;
        }

        /**
         * @param signingKeys List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.
         * 
         * @return builder
         * 
         */
        public Builder signingKeys(List<Map<String,Object>> signingKeys) {
            return signingKeys(Output.of(signingKeys));
        }

        /**
         * @param signingKeys List containing a map of the public cert of the signing key and the public cert of the signing key in PKCS7.
         * 
         * @return builder
         * 
         */
        public Builder signingKeys(Map<String,Object>... signingKeys) {
            return signingKeys(List.of(signingKeys));
        }

        /**
         * @param sso Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).
         * 
         * @return builder
         * 
         */
        public Builder sso(@Nullable Output<Boolean> sso) {
            $.sso = sso;
            return this;
        }

        /**
         * @param sso Applies only to SSO clients and determines whether Auth0 will handle Single Sign-On (true) or whether the identity provider will (false).
         * 
         * @return builder
         * 
         */
        public Builder sso(Boolean sso) {
            return sso(Output.of(sso));
        }

        /**
         * @param ssoDisabled Indicates whether or not SSO is disabled.
         * 
         * @return builder
         * 
         */
        public Builder ssoDisabled(@Nullable Output<Boolean> ssoDisabled) {
            $.ssoDisabled = ssoDisabled;
            return this;
        }

        /**
         * @param ssoDisabled Indicates whether or not SSO is disabled.
         * 
         * @return builder
         * 
         */
        public Builder ssoDisabled(Boolean ssoDisabled) {
            return ssoDisabled(Output.of(ssoDisabled));
        }

        /**
         * @param tokenEndpointAuthMethod Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).
         * 
         * @return builder
         * 
         */
        public Builder tokenEndpointAuthMethod(@Nullable Output<String> tokenEndpointAuthMethod) {
            $.tokenEndpointAuthMethod = tokenEndpointAuthMethod;
            return this;
        }

        /**
         * @param tokenEndpointAuthMethod Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `client_secret_post` (client uses HTTP POST parameters), `client_secret_basic` (client uses HTTP Basic).
         * 
         * @return builder
         * 
         */
        public Builder tokenEndpointAuthMethod(String tokenEndpointAuthMethod) {
            return tokenEndpointAuthMethod(Output.of(tokenEndpointAuthMethod));
        }

        /**
         * @param webOrigins URLs that represent valid web origins for use with web message response mode.
         * 
         * @return builder
         * 
         */
        public Builder webOrigins(@Nullable Output<List<String>> webOrigins) {
            $.webOrigins = webOrigins;
            return this;
        }

        /**
         * @param webOrigins URLs that represent valid web origins for use with web message response mode.
         * 
         * @return builder
         * 
         */
        public Builder webOrigins(List<String> webOrigins) {
            return webOrigins(Output.of(webOrigins));
        }

        /**
         * @param webOrigins URLs that represent valid web origins for use with web message response mode.
         * 
         * @return builder
         * 
         */
        public Builder webOrigins(String... webOrigins) {
            return webOrigins(List.of(webOrigins));
        }

        public GlobalClientArgs build() {
            return $;
        }
    }

}
