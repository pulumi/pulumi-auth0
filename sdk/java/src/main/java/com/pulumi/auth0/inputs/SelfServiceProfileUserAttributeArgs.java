// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class SelfServiceProfileUserAttributeArgs extends com.pulumi.resources.ResourceArgs {

    public static final SelfServiceProfileUserAttributeArgs Empty = new SelfServiceProfileUserAttributeArgs();

    /**
     * A human readable description of the attribute.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return A human readable description of the attribute.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * Indicates if this attribute is optional or if it has to be provided by the customer for the application to function.
     * 
     */
    @Import(name="isOptional", required=true)
    private Output<Boolean> isOptional;

    /**
     * @return Indicates if this attribute is optional or if it has to be provided by the customer for the application to function.
     * 
     */
    public Output<Boolean> isOptional() {
        return this.isOptional;
    }

    /**
     * Attribute’s name on Auth0 side
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Attribute’s name on Auth0 side
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private SelfServiceProfileUserAttributeArgs() {}

    private SelfServiceProfileUserAttributeArgs(SelfServiceProfileUserAttributeArgs $) {
        this.description = $.description;
        this.isOptional = $.isOptional;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SelfServiceProfileUserAttributeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SelfServiceProfileUserAttributeArgs $;

        public Builder() {
            $ = new SelfServiceProfileUserAttributeArgs();
        }

        public Builder(SelfServiceProfileUserAttributeArgs defaults) {
            $ = new SelfServiceProfileUserAttributeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A human readable description of the attribute.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A human readable description of the attribute.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param isOptional Indicates if this attribute is optional or if it has to be provided by the customer for the application to function.
         * 
         * @return builder
         * 
         */
        public Builder isOptional(Output<Boolean> isOptional) {
            $.isOptional = isOptional;
            return this;
        }

        /**
         * @param isOptional Indicates if this attribute is optional or if it has to be provided by the customer for the application to function.
         * 
         * @return builder
         * 
         */
        public Builder isOptional(Boolean isOptional) {
            return isOptional(Output.of(isOptional));
        }

        /**
         * @param name Attribute’s name on Auth0 side
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Attribute’s name on Auth0 side
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public SelfServiceProfileUserAttributeArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("SelfServiceProfileUserAttributeArgs", "description");
            }
            if ($.isOptional == null) {
                throw new MissingRequiredPropertyException("SelfServiceProfileUserAttributeArgs", "isOptional");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("SelfServiceProfileUserAttributeArgs", "name");
            }
            return $;
        }
    }

}
