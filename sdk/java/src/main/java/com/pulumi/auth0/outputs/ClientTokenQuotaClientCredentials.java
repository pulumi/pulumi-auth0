// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClientTokenQuotaClientCredentials {
    /**
     * @return If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.
     * 
     */
    private @Nullable Boolean enforce;
    /**
     * @return Maximum number of issued tokens per day
     * 
     */
    private @Nullable Integer perDay;
    /**
     * @return Maximum number of issued tokens per hour
     * 
     */
    private @Nullable Integer perHour;

    private ClientTokenQuotaClientCredentials() {}
    /**
     * @return If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.
     * 
     */
    public Optional<Boolean> enforce() {
        return Optional.ofNullable(this.enforce);
    }
    /**
     * @return Maximum number of issued tokens per day
     * 
     */
    public Optional<Integer> perDay() {
        return Optional.ofNullable(this.perDay);
    }
    /**
     * @return Maximum number of issued tokens per hour
     * 
     */
    public Optional<Integer> perHour() {
        return Optional.ofNullable(this.perHour);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClientTokenQuotaClientCredentials defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enforce;
        private @Nullable Integer perDay;
        private @Nullable Integer perHour;
        public Builder() {}
        public Builder(ClientTokenQuotaClientCredentials defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enforce = defaults.enforce;
    	      this.perDay = defaults.perDay;
    	      this.perHour = defaults.perHour;
        }

        @CustomType.Setter
        public Builder enforce(@Nullable Boolean enforce) {

            this.enforce = enforce;
            return this;
        }
        @CustomType.Setter
        public Builder perDay(@Nullable Integer perDay) {

            this.perDay = perDay;
            return this;
        }
        @CustomType.Setter
        public Builder perHour(@Nullable Integer perHour) {

            this.perHour = perHour;
            return this;
        }
        public ClientTokenQuotaClientCredentials build() {
            final var _resultValue = new ClientTokenQuotaClientCredentials();
            _resultValue.enforce = enforce;
            _resultValue.perDay = perDay;
            _resultValue.perHour = perHour;
            return _resultValue;
        }
    }
}
