// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.inputs.NetworkAclRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class NetworkAclArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkAclArgs Empty = new NetworkAclArgs();

    /**
     * Whether the Network ACL is active
     * 
     */
    @Import(name="active", required=true)
    private Output<Boolean> active;

    /**
     * @return Whether the Network ACL is active
     * 
     */
    public Output<Boolean> active() {
        return this.active;
    }

    /**
     * The description of the Network ACL
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The description of the Network ACL
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The priority of the Network ACL. Must be unique between 1 and 10.
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    /**
     * @return The priority of the Network ACL. Must be unique between 1 and 10.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    /**
     * The rule of the Network ACL
     * 
     */
    @Import(name="rule", required=true)
    private Output<NetworkAclRuleArgs> rule;

    /**
     * @return The rule of the Network ACL
     * 
     */
    public Output<NetworkAclRuleArgs> rule() {
        return this.rule;
    }

    private NetworkAclArgs() {}

    private NetworkAclArgs(NetworkAclArgs $) {
        this.active = $.active;
        this.description = $.description;
        this.priority = $.priority;
        this.rule = $.rule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkAclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkAclArgs $;

        public Builder() {
            $ = new NetworkAclArgs();
        }

        public Builder(NetworkAclArgs defaults) {
            $ = new NetworkAclArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Whether the Network ACL is active
         * 
         * @return builder
         * 
         */
        public Builder active(Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Whether the Network ACL is active
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param description The description of the Network ACL
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Network ACL
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param priority The priority of the Network ACL. Must be unique between 1 and 10.
         * 
         * @return builder
         * 
         */
        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the Network ACL. Must be unique between 1 and 10.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param rule The rule of the Network ACL
         * 
         * @return builder
         * 
         */
        public Builder rule(Output<NetworkAclRuleArgs> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule The rule of the Network ACL
         * 
         * @return builder
         * 
         */
        public Builder rule(NetworkAclRuleArgs rule) {
            return rule(Output.of(rule));
        }

        public NetworkAclArgs build() {
            if ($.active == null) {
                throw new MissingRequiredPropertyException("NetworkAclArgs", "active");
            }
            if ($.description == null) {
                throw new MissingRequiredPropertyException("NetworkAclArgs", "description");
            }
            if ($.priority == null) {
                throw new MissingRequiredPropertyException("NetworkAclArgs", "priority");
            }
            if ($.rule == null) {
                throw new MissingRequiredPropertyException("NetworkAclArgs", "rule");
            }
            return $;
        }
    }

}
