// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClientAddonAzureBlob {
    private String accountName;
    private Boolean blobDelete;
    private String blobName;
    private Boolean blobRead;
    private Boolean blobWrite;
    private Boolean containerDelete;
    private Boolean containerList;
    private String containerName;
    private Boolean containerRead;
    private Boolean containerWrite;
    private Integer expiration;
    private String signedIdentifier;
    private String storageAccessKey;

    private GetClientAddonAzureBlob() {}
    public String accountName() {
        return this.accountName;
    }
    public Boolean blobDelete() {
        return this.blobDelete;
    }
    public String blobName() {
        return this.blobName;
    }
    public Boolean blobRead() {
        return this.blobRead;
    }
    public Boolean blobWrite() {
        return this.blobWrite;
    }
    public Boolean containerDelete() {
        return this.containerDelete;
    }
    public Boolean containerList() {
        return this.containerList;
    }
    public String containerName() {
        return this.containerName;
    }
    public Boolean containerRead() {
        return this.containerRead;
    }
    public Boolean containerWrite() {
        return this.containerWrite;
    }
    public Integer expiration() {
        return this.expiration;
    }
    public String signedIdentifier() {
        return this.signedIdentifier;
    }
    public String storageAccessKey() {
        return this.storageAccessKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClientAddonAzureBlob defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountName;
        private Boolean blobDelete;
        private String blobName;
        private Boolean blobRead;
        private Boolean blobWrite;
        private Boolean containerDelete;
        private Boolean containerList;
        private String containerName;
        private Boolean containerRead;
        private Boolean containerWrite;
        private Integer expiration;
        private String signedIdentifier;
        private String storageAccessKey;
        public Builder() {}
        public Builder(GetClientAddonAzureBlob defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.blobDelete = defaults.blobDelete;
    	      this.blobName = defaults.blobName;
    	      this.blobRead = defaults.blobRead;
    	      this.blobWrite = defaults.blobWrite;
    	      this.containerDelete = defaults.containerDelete;
    	      this.containerList = defaults.containerList;
    	      this.containerName = defaults.containerName;
    	      this.containerRead = defaults.containerRead;
    	      this.containerWrite = defaults.containerWrite;
    	      this.expiration = defaults.expiration;
    	      this.signedIdentifier = defaults.signedIdentifier;
    	      this.storageAccessKey = defaults.storageAccessKey;
        }

        @CustomType.Setter
        public Builder accountName(String accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }
        @CustomType.Setter
        public Builder blobDelete(Boolean blobDelete) {
            this.blobDelete = Objects.requireNonNull(blobDelete);
            return this;
        }
        @CustomType.Setter
        public Builder blobName(String blobName) {
            this.blobName = Objects.requireNonNull(blobName);
            return this;
        }
        @CustomType.Setter
        public Builder blobRead(Boolean blobRead) {
            this.blobRead = Objects.requireNonNull(blobRead);
            return this;
        }
        @CustomType.Setter
        public Builder blobWrite(Boolean blobWrite) {
            this.blobWrite = Objects.requireNonNull(blobWrite);
            return this;
        }
        @CustomType.Setter
        public Builder containerDelete(Boolean containerDelete) {
            this.containerDelete = Objects.requireNonNull(containerDelete);
            return this;
        }
        @CustomType.Setter
        public Builder containerList(Boolean containerList) {
            this.containerList = Objects.requireNonNull(containerList);
            return this;
        }
        @CustomType.Setter
        public Builder containerName(String containerName) {
            this.containerName = Objects.requireNonNull(containerName);
            return this;
        }
        @CustomType.Setter
        public Builder containerRead(Boolean containerRead) {
            this.containerRead = Objects.requireNonNull(containerRead);
            return this;
        }
        @CustomType.Setter
        public Builder containerWrite(Boolean containerWrite) {
            this.containerWrite = Objects.requireNonNull(containerWrite);
            return this;
        }
        @CustomType.Setter
        public Builder expiration(Integer expiration) {
            this.expiration = Objects.requireNonNull(expiration);
            return this;
        }
        @CustomType.Setter
        public Builder signedIdentifier(String signedIdentifier) {
            this.signedIdentifier = Objects.requireNonNull(signedIdentifier);
            return this;
        }
        @CustomType.Setter
        public Builder storageAccessKey(String storageAccessKey) {
            this.storageAccessKey = Objects.requireNonNull(storageAccessKey);
            return this;
        }
        public GetClientAddonAzureBlob build() {
            final var o = new GetClientAddonAzureBlob();
            o.accountName = accountName;
            o.blobDelete = blobDelete;
            o.blobName = blobName;
            o.blobRead = blobRead;
            o.blobWrite = blobWrite;
            o.containerDelete = containerDelete;
            o.containerList = containerList;
            o.containerName = containerName;
            o.containerRead = containerRead;
            o.containerWrite = containerWrite;
            o.expiration = expiration;
            o.signedIdentifier = signedIdentifier;
            o.storageAccessKey = storageAccessKey;
            return o;
        }
    }
}
