// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.EmailArgs;
import com.pulumi.auth0.Utilities;
import com.pulumi.auth0.inputs.EmailState;
import com.pulumi.auth0.outputs.EmailCredentials;
import com.pulumi.auth0.outputs.EmailSettings;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * With Auth0, you can have standard welcome, password reset, and account verification email-based workflows built right into Auth0. This resource allows you to configure email providers, so you can route all emails that are part of Auth0&#39;s authentication workflows through the supported high-volume email service of your choice.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.auth0.Email;
 * import com.pulumi.auth0.EmailArgs;
 * import com.pulumi.auth0.inputs.EmailCredentialsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var amazonSesEmailProvider = new Email(&#34;amazonSesEmailProvider&#34;, EmailArgs.builder()        
 *             .credentials(EmailCredentialsArgs.builder()
 *                 .accessKeyId(&#34;AKIAXXXXXXXXXXXXXXXX&#34;)
 *                 .region(&#34;us-east-1&#34;)
 *                 .secretAccessKey(&#34;7e8c2148xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#34;)
 *                 .build())
 *             .defaultFromAddress(&#34;accounts@example.com&#34;)
 *             .enabled(true)
 *             .build());
 * 
 *         var smtpEmailProvider = new Email(&#34;smtpEmailProvider&#34;, EmailArgs.builder()        
 *             .credentials(EmailCredentialsArgs.builder()
 *                 .smtpHost(&#34;your.smtp.host.com&#34;)
 *                 .smtpPass(&#34;SMTP Password&#34;)
 *                 .smtpPort(583)
 *                 .smtpUser(&#34;SMTP Username&#34;)
 *                 .build())
 *             .defaultFromAddress(&#34;accounts@example.com&#34;)
 *             .enabled(true)
 *             .build());
 * 
 *         var sendgridEmailProvider = new Email(&#34;sendgridEmailProvider&#34;, EmailArgs.builder()        
 *             .credentials(EmailCredentialsArgs.builder()
 *                 .apiKey(&#34;secretAPIKey&#34;)
 *                 .build())
 *             .defaultFromAddress(&#34;accounts@example.com&#34;)
 *             .enabled(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * As this is not a resource identifiable by an ID within the Auth0 Management API, email can be imported using a random string. # We recommend [Version 4 UUID](https://www.uuidgenerator.net/version4) # Example
 * 
 * ```sh
 *  $ pulumi import auth0:index/email:Email my_email_provider b4213dc2-2eed-42c3-9516-c6131a9ce0b0
 * ```
 * 
 */
@ResourceType(type="auth0:index/email:Email")
public class Email extends com.pulumi.resources.CustomResource {
    /**
     * Configuration settings for the credentials for the email provider.
     * 
     */
    @Export(name="credentials", type=EmailCredentials.class, parameters={})
    private Output<EmailCredentials> credentials;

    /**
     * @return Configuration settings for the credentials for the email provider.
     * 
     */
    public Output<EmailCredentials> credentials() {
        return this.credentials;
    }
    /**
     * Email address to use as the sender when no other &#34;from&#34; address is specified.
     * 
     */
    @Export(name="defaultFromAddress", type=String.class, parameters={})
    private Output<String> defaultFromAddress;

    /**
     * @return Email address to use as the sender when no other &#34;from&#34; address is specified.
     * 
     */
    public Output<String> defaultFromAddress() {
        return this.defaultFromAddress;
    }
    /**
     * Indicates whether the email provider is enabled.
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Indicates whether the email provider is enabled.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Name of the email provider. Options include `mailgun`, `mandrill`, `sendgrid`, `ses`, `smtp`, and `sparkpost`.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the email provider. Options include `mailgun`, `mandrill`, `sendgrid`, `ses`, `smtp`, and `sparkpost`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specific email provider settings.
     * 
     */
    @Export(name="settings", type=EmailSettings.class, parameters={})
    private Output<EmailSettings> settings;

    /**
     * @return Specific email provider settings.
     * 
     */
    public Output<EmailSettings> settings() {
        return this.settings;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Email(String name) {
        this(name, EmailArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Email(String name, EmailArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Email(String name, EmailArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/email:Email", name, args == null ? EmailArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Email(String name, Output<String> id, @Nullable EmailState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/email:Email", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Email get(String name, Output<String> id, @Nullable EmailState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Email(name, id, state, options);
    }
}
