// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class GetBrandingThemeFontLink {
    /**
     * @return Links bold. Defaults to `true`.
     * 
     */
    private Boolean bold;
    /**
     * @return Links size. Value needs to be between `0` and `150`. Defaults to `87.5`.
     * 
     */
    private Double size;

    private GetBrandingThemeFontLink() {}
    /**
     * @return Links bold. Defaults to `true`.
     * 
     */
    public Boolean bold() {
        return this.bold;
    }
    /**
     * @return Links size. Value needs to be between `0` and `150`. Defaults to `87.5`.
     * 
     */
    public Double size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrandingThemeFontLink defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean bold;
        private Double size;
        public Builder() {}
        public Builder(GetBrandingThemeFontLink defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bold = defaults.bold;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder bold(Boolean bold) {
            if (bold == null) {
              throw new MissingRequiredPropertyException("GetBrandingThemeFontLink", "bold");
            }
            this.bold = bold;
            return this;
        }
        @CustomType.Setter
        public Builder size(Double size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetBrandingThemeFontLink", "size");
            }
            this.size = size;
            return this;
        }
        public GetBrandingThemeFontLink build() {
            final var _resultValue = new GetBrandingThemeFontLink();
            _resultValue.bold = bold;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
