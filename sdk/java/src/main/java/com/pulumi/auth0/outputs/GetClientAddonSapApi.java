// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetClientAddonSapApi {
    /**
     * @return If activated in the OAuth 2.0 client configuration (transaction ` SOAUTH2) the SAML attribute  `client_id`must be set and equal the`client_id` form parameter of the access token request.
     * 
     */
    private String clientId;
    /**
     * @return NameID element of the Subject which can be used to express the user&#39;s identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.
     * 
     */
    private String nameIdentifierFormat;
    /**
     * @return Requested scope for SAP APIs.
     * 
     */
    private String scope;
    /**
     * @return Service account password to use to authenticate API calls to the token endpoint.
     * 
     */
    private String servicePassword;
    /**
     * @return The OAuth2 token endpoint URL of your SAP OData server.
     * 
     */
    private String tokenEndpointUrl;
    /**
     * @return Name of the property in the user object that maps to a SAP username, for example `email`.
     * 
     */
    private String usernameAttribute;

    private GetClientAddonSapApi() {}
    /**
     * @return If activated in the OAuth 2.0 client configuration (transaction ` SOAUTH2) the SAML attribute  `client_id`must be set and equal the`client_id` form parameter of the access token request.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return NameID element of the Subject which can be used to express the user&#39;s identity. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.
     * 
     */
    public String nameIdentifierFormat() {
        return this.nameIdentifierFormat;
    }
    /**
     * @return Requested scope for SAP APIs.
     * 
     */
    public String scope() {
        return this.scope;
    }
    /**
     * @return Service account password to use to authenticate API calls to the token endpoint.
     * 
     */
    public String servicePassword() {
        return this.servicePassword;
    }
    /**
     * @return The OAuth2 token endpoint URL of your SAP OData server.
     * 
     */
    public String tokenEndpointUrl() {
        return this.tokenEndpointUrl;
    }
    /**
     * @return Name of the property in the user object that maps to a SAP username, for example `email`.
     * 
     */
    public String usernameAttribute() {
        return this.usernameAttribute;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClientAddonSapApi defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private String nameIdentifierFormat;
        private String scope;
        private String servicePassword;
        private String tokenEndpointUrl;
        private String usernameAttribute;
        public Builder() {}
        public Builder(GetClientAddonSapApi defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.nameIdentifierFormat = defaults.nameIdentifierFormat;
    	      this.scope = defaults.scope;
    	      this.servicePassword = defaults.servicePassword;
    	      this.tokenEndpointUrl = defaults.tokenEndpointUrl;
    	      this.usernameAttribute = defaults.usernameAttribute;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("GetClientAddonSapApi", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder nameIdentifierFormat(String nameIdentifierFormat) {
            if (nameIdentifierFormat == null) {
              throw new MissingRequiredPropertyException("GetClientAddonSapApi", "nameIdentifierFormat");
            }
            this.nameIdentifierFormat = nameIdentifierFormat;
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("GetClientAddonSapApi", "scope");
            }
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder servicePassword(String servicePassword) {
            if (servicePassword == null) {
              throw new MissingRequiredPropertyException("GetClientAddonSapApi", "servicePassword");
            }
            this.servicePassword = servicePassword;
            return this;
        }
        @CustomType.Setter
        public Builder tokenEndpointUrl(String tokenEndpointUrl) {
            if (tokenEndpointUrl == null) {
              throw new MissingRequiredPropertyException("GetClientAddonSapApi", "tokenEndpointUrl");
            }
            this.tokenEndpointUrl = tokenEndpointUrl;
            return this;
        }
        @CustomType.Setter
        public Builder usernameAttribute(String usernameAttribute) {
            if (usernameAttribute == null) {
              throw new MissingRequiredPropertyException("GetClientAddonSapApi", "usernameAttribute");
            }
            this.usernameAttribute = usernameAttribute;
            return this;
        }
        public GetClientAddonSapApi build() {
            final var _resultValue = new GetClientAddonSapApi();
            _resultValue.clientId = clientId;
            _resultValue.nameIdentifierFormat = nameIdentifierFormat;
            _resultValue.scope = scope;
            _resultValue.servicePassword = servicePassword;
            _resultValue.tokenEndpointUrl = tokenEndpointUrl;
            _resultValue.usernameAttribute = usernameAttribute;
            return _resultValue;
        }
    }
}
