// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.EncryptionKeyManagerArgs;
import com.pulumi.auth0.Utilities;
import com.pulumi.auth0.inputs.EncryptionKeyManagerState;
import com.pulumi.auth0.outputs.EncryptionKeyManagerCustomerProvidedRootKey;
import com.pulumi.auth0.outputs.EncryptionKeyManagerEncryptionKey;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource to allow the rekeying of your tenant master key.
 * 
 */
@ResourceType(type="auth0:index/encryptionKeyManager:EncryptionKeyManager")
public class EncryptionKeyManager extends com.pulumi.resources.CustomResource {
    /**
     * This attribute is used for provisioning the customer provided root key. To initiate the provisioning process, create a new empty `customerProvidedRootKey` block. After applying this, the `publicWrappingKey` can be retreived from the resource, and the new root key should be generated by the customer and wrapped with the wrapping key, then base64-encoded and added as the `wrappedKey` attribute.
     * 
     */
    @Export(name="customerProvidedRootKey", refs={EncryptionKeyManagerCustomerProvidedRootKey.class}, tree="[0]")
    private Output</* @Nullable */ EncryptionKeyManagerCustomerProvidedRootKey> customerProvidedRootKey;

    /**
     * @return This attribute is used for provisioning the customer provided root key. To initiate the provisioning process, create a new empty `customerProvidedRootKey` block. After applying this, the `publicWrappingKey` can be retreived from the resource, and the new root key should be generated by the customer and wrapped with the wrapping key, then base64-encoded and added as the `wrappedKey` attribute.
     * 
     */
    public Output<Optional<EncryptionKeyManagerCustomerProvidedRootKey>> customerProvidedRootKey() {
        return Codegen.optional(this.customerProvidedRootKey);
    }
    /**
     * All encryption keys.
     * 
     */
    @Export(name="encryptionKeys", refs={List.class,EncryptionKeyManagerEncryptionKey.class}, tree="[0,1]")
    private Output<List<EncryptionKeyManagerEncryptionKey>> encryptionKeys;

    /**
     * @return All encryption keys.
     * 
     */
    public Output<List<EncryptionKeyManagerEncryptionKey>> encryptionKeys() {
        return this.encryptionKeys;
    }
    /**
     * If this value is changed, the encryption keys will be rotated. A UUID is recommended for the `keyRotationId`.
     * 
     */
    @Export(name="keyRotationId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyRotationId;

    /**
     * @return If this value is changed, the encryption keys will be rotated. A UUID is recommended for the `keyRotationId`.
     * 
     */
    public Output<Optional<String>> keyRotationId() {
        return Codegen.optional(this.keyRotationId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EncryptionKeyManager(java.lang.String name) {
        this(name, EncryptionKeyManagerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EncryptionKeyManager(java.lang.String name, @Nullable EncryptionKeyManagerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EncryptionKeyManager(java.lang.String name, @Nullable EncryptionKeyManagerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/encryptionKeyManager:EncryptionKeyManager", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private EncryptionKeyManager(java.lang.String name, Output<java.lang.String> id, @Nullable EncryptionKeyManagerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/encryptionKeyManager:EncryptionKeyManager", name, state, makeResourceOptions(options, id), false);
    }

    private static EncryptionKeyManagerArgs makeArgs(@Nullable EncryptionKeyManagerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EncryptionKeyManagerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EncryptionKeyManager get(java.lang.String name, Output<java.lang.String> id, @Nullable EncryptionKeyManagerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EncryptionKeyManager(name, id, state, options);
    }
}
