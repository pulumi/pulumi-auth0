// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class RiskAssessmentsNewDeviceArgs extends com.pulumi.resources.ResourceArgs {

    public static final RiskAssessmentsNewDeviceArgs Empty = new RiskAssessmentsNewDeviceArgs();

    /**
     * Length of time to remember devices for, in days
     * 
     */
    @Import(name="rememberFor", required=true)
    private Output<Integer> rememberFor;

    /**
     * @return Length of time to remember devices for, in days
     * 
     */
    public Output<Integer> rememberFor() {
        return this.rememberFor;
    }

    private RiskAssessmentsNewDeviceArgs() {}

    private RiskAssessmentsNewDeviceArgs(RiskAssessmentsNewDeviceArgs $) {
        this.rememberFor = $.rememberFor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RiskAssessmentsNewDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RiskAssessmentsNewDeviceArgs $;

        public Builder() {
            $ = new RiskAssessmentsNewDeviceArgs();
        }

        public Builder(RiskAssessmentsNewDeviceArgs defaults) {
            $ = new RiskAssessmentsNewDeviceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rememberFor Length of time to remember devices for, in days
         * 
         * @return builder
         * 
         */
        public Builder rememberFor(Output<Integer> rememberFor) {
            $.rememberFor = rememberFor;
            return this;
        }

        /**
         * @param rememberFor Length of time to remember devices for, in days
         * 
         * @return builder
         * 
         */
        public Builder rememberFor(Integer rememberFor) {
            return rememberFor(Output.of(rememberFor));
        }

        public RiskAssessmentsNewDeviceArgs build() {
            if ($.rememberFor == null) {
                throw new MissingRequiredPropertyException("RiskAssessmentsNewDeviceArgs", "rememberFor");
            }
            return $;
        }
    }

}
