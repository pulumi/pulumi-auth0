// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.ConnectionOptionsAuthenticationMethodPasskeyArgs;
import com.pulumi.auth0.inputs.ConnectionOptionsAuthenticationMethodPasswordArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionOptionsAuthenticationMethodArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionOptionsAuthenticationMethodArgs Empty = new ConnectionOptionsAuthenticationMethodArgs();

    /**
     * Configures passkey authentication
     * 
     */
    @Import(name="passkey")
    private @Nullable Output<ConnectionOptionsAuthenticationMethodPasskeyArgs> passkey;

    /**
     * @return Configures passkey authentication
     * 
     */
    public Optional<Output<ConnectionOptionsAuthenticationMethodPasskeyArgs>> passkey() {
        return Optional.ofNullable(this.passkey);
    }

    /**
     * Configures password authentication
     * 
     */
    @Import(name="password")
    private @Nullable Output<ConnectionOptionsAuthenticationMethodPasswordArgs> password;

    /**
     * @return Configures password authentication
     * 
     */
    public Optional<Output<ConnectionOptionsAuthenticationMethodPasswordArgs>> password() {
        return Optional.ofNullable(this.password);
    }

    private ConnectionOptionsAuthenticationMethodArgs() {}

    private ConnectionOptionsAuthenticationMethodArgs(ConnectionOptionsAuthenticationMethodArgs $) {
        this.passkey = $.passkey;
        this.password = $.password;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionOptionsAuthenticationMethodArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionOptionsAuthenticationMethodArgs $;

        public Builder() {
            $ = new ConnectionOptionsAuthenticationMethodArgs();
        }

        public Builder(ConnectionOptionsAuthenticationMethodArgs defaults) {
            $ = new ConnectionOptionsAuthenticationMethodArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param passkey Configures passkey authentication
         * 
         * @return builder
         * 
         */
        public Builder passkey(@Nullable Output<ConnectionOptionsAuthenticationMethodPasskeyArgs> passkey) {
            $.passkey = passkey;
            return this;
        }

        /**
         * @param passkey Configures passkey authentication
         * 
         * @return builder
         * 
         */
        public Builder passkey(ConnectionOptionsAuthenticationMethodPasskeyArgs passkey) {
            return passkey(Output.of(passkey));
        }

        /**
         * @param password Configures password authentication
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<ConnectionOptionsAuthenticationMethodPasswordArgs> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Configures password authentication
         * 
         * @return builder
         * 
         */
        public Builder password(ConnectionOptionsAuthenticationMethodPasswordArgs password) {
            return password(Output.of(password));
        }

        public ConnectionOptionsAuthenticationMethodArgs build() {
            return $;
        }
    }

}
