// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.UserAttributeProfileUserAttributeOidcMapping;
import com.pulumi.auth0.outputs.UserAttributeProfileUserAttributeStrategyOverride;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UserAttributeProfileUserAttribute {
    /**
     * @return The Auth0 mapping for the user attribute.
     * 
     */
    private String auth0Mapping;
    /**
     * @return Description of the user attribute.
     * 
     */
    private String description;
    /**
     * @return Display label for the user attribute.
     * 
     */
    private String label;
    /**
     * @return Name of the user attribute.
     * 
     */
    private String name;
    /**
     * @return The OIDC mapping configuration for the user attribute.
     * 
     */
    private @Nullable UserAttributeProfileUserAttributeOidcMapping oidcMapping;
    /**
     * @return Whether the attribute is required in the profile.
     * 
     */
    private Boolean profileRequired;
    /**
     * @return SAML mapping override for this strategy.
     * 
     */
    private @Nullable List<String> samlMappings;
    /**
     * @return The SCIM mapping for the user attribute.
     * 
     */
    private @Nullable String scimMapping;
    /**
     * @return Strategy-specific overrides for user attribute mapping.
     * 
     */
    private @Nullable List<UserAttributeProfileUserAttributeStrategyOverride> strategyOverrides;

    private UserAttributeProfileUserAttribute() {}
    /**
     * @return The Auth0 mapping for the user attribute.
     * 
     */
    public String auth0Mapping() {
        return this.auth0Mapping;
    }
    /**
     * @return Description of the user attribute.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Display label for the user attribute.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return Name of the user attribute.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The OIDC mapping configuration for the user attribute.
     * 
     */
    public Optional<UserAttributeProfileUserAttributeOidcMapping> oidcMapping() {
        return Optional.ofNullable(this.oidcMapping);
    }
    /**
     * @return Whether the attribute is required in the profile.
     * 
     */
    public Boolean profileRequired() {
        return this.profileRequired;
    }
    /**
     * @return SAML mapping override for this strategy.
     * 
     */
    public List<String> samlMappings() {
        return this.samlMappings == null ? List.of() : this.samlMappings;
    }
    /**
     * @return The SCIM mapping for the user attribute.
     * 
     */
    public Optional<String> scimMapping() {
        return Optional.ofNullable(this.scimMapping);
    }
    /**
     * @return Strategy-specific overrides for user attribute mapping.
     * 
     */
    public List<UserAttributeProfileUserAttributeStrategyOverride> strategyOverrides() {
        return this.strategyOverrides == null ? List.of() : this.strategyOverrides;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UserAttributeProfileUserAttribute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String auth0Mapping;
        private String description;
        private String label;
        private String name;
        private @Nullable UserAttributeProfileUserAttributeOidcMapping oidcMapping;
        private Boolean profileRequired;
        private @Nullable List<String> samlMappings;
        private @Nullable String scimMapping;
        private @Nullable List<UserAttributeProfileUserAttributeStrategyOverride> strategyOverrides;
        public Builder() {}
        public Builder(UserAttributeProfileUserAttribute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auth0Mapping = defaults.auth0Mapping;
    	      this.description = defaults.description;
    	      this.label = defaults.label;
    	      this.name = defaults.name;
    	      this.oidcMapping = defaults.oidcMapping;
    	      this.profileRequired = defaults.profileRequired;
    	      this.samlMappings = defaults.samlMappings;
    	      this.scimMapping = defaults.scimMapping;
    	      this.strategyOverrides = defaults.strategyOverrides;
        }

        @CustomType.Setter
        public Builder auth0Mapping(String auth0Mapping) {
            if (auth0Mapping == null) {
              throw new MissingRequiredPropertyException("UserAttributeProfileUserAttribute", "auth0Mapping");
            }
            this.auth0Mapping = auth0Mapping;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("UserAttributeProfileUserAttribute", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            if (label == null) {
              throw new MissingRequiredPropertyException("UserAttributeProfileUserAttribute", "label");
            }
            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("UserAttributeProfileUserAttribute", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder oidcMapping(@Nullable UserAttributeProfileUserAttributeOidcMapping oidcMapping) {

            this.oidcMapping = oidcMapping;
            return this;
        }
        @CustomType.Setter
        public Builder profileRequired(Boolean profileRequired) {
            if (profileRequired == null) {
              throw new MissingRequiredPropertyException("UserAttributeProfileUserAttribute", "profileRequired");
            }
            this.profileRequired = profileRequired;
            return this;
        }
        @CustomType.Setter
        public Builder samlMappings(@Nullable List<String> samlMappings) {

            this.samlMappings = samlMappings;
            return this;
        }
        public Builder samlMappings(String... samlMappings) {
            return samlMappings(List.of(samlMappings));
        }
        @CustomType.Setter
        public Builder scimMapping(@Nullable String scimMapping) {

            this.scimMapping = scimMapping;
            return this;
        }
        @CustomType.Setter
        public Builder strategyOverrides(@Nullable List<UserAttributeProfileUserAttributeStrategyOverride> strategyOverrides) {

            this.strategyOverrides = strategyOverrides;
            return this;
        }
        public Builder strategyOverrides(UserAttributeProfileUserAttributeStrategyOverride... strategyOverrides) {
            return strategyOverrides(List.of(strategyOverrides));
        }
        public UserAttributeProfileUserAttribute build() {
            final var _resultValue = new UserAttributeProfileUserAttribute();
            _resultValue.auth0Mapping = auth0Mapping;
            _resultValue.description = description;
            _resultValue.label = label;
            _resultValue.name = name;
            _resultValue.oidcMapping = oidcMapping;
            _resultValue.profileRequired = profileRequired;
            _resultValue.samlMappings = samlMappings;
            _resultValue.scimMapping = scimMapping;
            _resultValue.strategyOverrides = strategyOverrides;
            return _resultValue;
        }
    }
}
