// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventStreamWebhookConfigurationWebhookAuthorizationArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventStreamWebhookConfigurationWebhookAuthorizationArgs Empty = new EventStreamWebhookConfigurationWebhookAuthorizationArgs();

    /**
     * The authorization method used to secure the webhook endpoint. Can be either `basic` or `bearer`.
     * 
     */
    @Import(name="method", required=true)
    private Output<String> method;

    /**
     * @return The authorization method used to secure the webhook endpoint. Can be either `basic` or `bearer`.
     * 
     */
    public Output<String> method() {
        return this.method;
    }

    /**
     * The password for `basic` authentication. Required when `method` is set to `basic`.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password for `basic` authentication. Required when `method` is set to `basic`.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The token used for `bearer` authentication. Required when `method` is set to `bearer`.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return The token used for `bearer` authentication. Required when `method` is set to `bearer`.
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    /**
     * The username for `basic` authentication. Required when `method` is set to `basic`.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return The username for `basic` authentication. Required when `method` is set to `basic`.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private EventStreamWebhookConfigurationWebhookAuthorizationArgs() {}

    private EventStreamWebhookConfigurationWebhookAuthorizationArgs(EventStreamWebhookConfigurationWebhookAuthorizationArgs $) {
        this.method = $.method;
        this.password = $.password;
        this.token = $.token;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventStreamWebhookConfigurationWebhookAuthorizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventStreamWebhookConfigurationWebhookAuthorizationArgs $;

        public Builder() {
            $ = new EventStreamWebhookConfigurationWebhookAuthorizationArgs();
        }

        public Builder(EventStreamWebhookConfigurationWebhookAuthorizationArgs defaults) {
            $ = new EventStreamWebhookConfigurationWebhookAuthorizationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param method The authorization method used to secure the webhook endpoint. Can be either `basic` or `bearer`.
         * 
         * @return builder
         * 
         */
        public Builder method(Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method The authorization method used to secure the webhook endpoint. Can be either `basic` or `bearer`.
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param password The password for `basic` authentication. Required when `method` is set to `basic`.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password for `basic` authentication. Required when `method` is set to `basic`.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param token The token used for `bearer` authentication. Required when `method` is set to `bearer`.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token The token used for `bearer` authentication. Required when `method` is set to `bearer`.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        /**
         * @param username The username for `basic` authentication. Required when `method` is set to `basic`.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The username for `basic` authentication. Required when `method` is set to `basic`.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public EventStreamWebhookConfigurationWebhookAuthorizationArgs build() {
            if ($.method == null) {
                throw new MissingRequiredPropertyException("EventStreamWebhookConfigurationWebhookAuthorizationArgs", "method");
            }
            return $;
        }
    }

}
