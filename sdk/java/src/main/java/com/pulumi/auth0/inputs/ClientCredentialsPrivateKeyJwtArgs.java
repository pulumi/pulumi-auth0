// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.ClientCredentialsPrivateKeyJwtCredentialArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class ClientCredentialsPrivateKeyJwtArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClientCredentialsPrivateKeyJwtArgs Empty = new ClientCredentialsPrivateKeyJwtArgs();

    /**
     * Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
     * 
     */
    @Import(name="credentials", required=true)
    private Output<List<ClientCredentialsPrivateKeyJwtCredentialArgs>> credentials;

    /**
     * @return Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
     * 
     */
    public Output<List<ClientCredentialsPrivateKeyJwtCredentialArgs>> credentials() {
        return this.credentials;
    }

    private ClientCredentialsPrivateKeyJwtArgs() {}

    private ClientCredentialsPrivateKeyJwtArgs(ClientCredentialsPrivateKeyJwtArgs $) {
        this.credentials = $.credentials;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientCredentialsPrivateKeyJwtArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientCredentialsPrivateKeyJwtArgs $;

        public Builder() {
            $ = new ClientCredentialsPrivateKeyJwtArgs();
        }

        public Builder(ClientCredentialsPrivateKeyJwtArgs defaults) {
            $ = new ClientCredentialsPrivateKeyJwtArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param credentials Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
         * 
         * @return builder
         * 
         */
        public Builder credentials(Output<List<ClientCredentialsPrivateKeyJwtCredentialArgs>> credentials) {
            $.credentials = credentials;
            return this;
        }

        /**
         * @param credentials Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
         * 
         * @return builder
         * 
         */
        public Builder credentials(List<ClientCredentialsPrivateKeyJwtCredentialArgs> credentials) {
            return credentials(Output.of(credentials));
        }

        /**
         * @param credentials Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
         * 
         * @return builder
         * 
         */
        public Builder credentials(ClientCredentialsPrivateKeyJwtCredentialArgs... credentials) {
            return credentials(List.of(credentials));
        }

        public ClientCredentialsPrivateKeyJwtArgs build() {
            $.credentials = Objects.requireNonNull($.credentials, "expected parameter 'credentials' to be non-null");
            return $;
        }
    }

}
