// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetFormLanguage;
import com.pulumi.auth0.outputs.GetFormMessage;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFormResult {
    /**
     * @return Submission configuration of the form. (JSON encoded)
     * 
     */
    private String ending;
    /**
     * @return The id of the Form.
     * 
     */
    private String id;
    /**
     * @return Language specific configuration for the form.
     * 
     */
    private List<GetFormLanguage> languages;
    /**
     * @return Message specific configuration for the form.
     * 
     */
    private List<GetFormMessage> messages;
    /**
     * @return Name of the form.
     * 
     */
    private String name;
    /**
     * @return Nodes of the form. (JSON encoded)
     * 
     */
    private String nodes;
    /**
     * @return Input setup of the form. (JSON encoded)
     * 
     */
    private String start;
    /**
     * @return Style specific configuration for the form. (JSON encoded)
     * 
     */
    private String style;
    /**
     * @return Translations of the form. (JSON encoded)
     * 
     */
    private String translations;

    private GetFormResult() {}
    /**
     * @return Submission configuration of the form. (JSON encoded)
     * 
     */
    public String ending() {
        return this.ending;
    }
    /**
     * @return The id of the Form.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Language specific configuration for the form.
     * 
     */
    public List<GetFormLanguage> languages() {
        return this.languages;
    }
    /**
     * @return Message specific configuration for the form.
     * 
     */
    public List<GetFormMessage> messages() {
        return this.messages;
    }
    /**
     * @return Name of the form.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Nodes of the form. (JSON encoded)
     * 
     */
    public String nodes() {
        return this.nodes;
    }
    /**
     * @return Input setup of the form. (JSON encoded)
     * 
     */
    public String start() {
        return this.start;
    }
    /**
     * @return Style specific configuration for the form. (JSON encoded)
     * 
     */
    public String style() {
        return this.style;
    }
    /**
     * @return Translations of the form. (JSON encoded)
     * 
     */
    public String translations() {
        return this.translations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFormResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ending;
        private String id;
        private List<GetFormLanguage> languages;
        private List<GetFormMessage> messages;
        private String name;
        private String nodes;
        private String start;
        private String style;
        private String translations;
        public Builder() {}
        public Builder(GetFormResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ending = defaults.ending;
    	      this.id = defaults.id;
    	      this.languages = defaults.languages;
    	      this.messages = defaults.messages;
    	      this.name = defaults.name;
    	      this.nodes = defaults.nodes;
    	      this.start = defaults.start;
    	      this.style = defaults.style;
    	      this.translations = defaults.translations;
        }

        @CustomType.Setter
        public Builder ending(String ending) {
            if (ending == null) {
              throw new MissingRequiredPropertyException("GetFormResult", "ending");
            }
            this.ending = ending;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFormResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder languages(List<GetFormLanguage> languages) {
            if (languages == null) {
              throw new MissingRequiredPropertyException("GetFormResult", "languages");
            }
            this.languages = languages;
            return this;
        }
        public Builder languages(GetFormLanguage... languages) {
            return languages(List.of(languages));
        }
        @CustomType.Setter
        public Builder messages(List<GetFormMessage> messages) {
            if (messages == null) {
              throw new MissingRequiredPropertyException("GetFormResult", "messages");
            }
            this.messages = messages;
            return this;
        }
        public Builder messages(GetFormMessage... messages) {
            return messages(List.of(messages));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetFormResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nodes(String nodes) {
            if (nodes == null) {
              throw new MissingRequiredPropertyException("GetFormResult", "nodes");
            }
            this.nodes = nodes;
            return this;
        }
        @CustomType.Setter
        public Builder start(String start) {
            if (start == null) {
              throw new MissingRequiredPropertyException("GetFormResult", "start");
            }
            this.start = start;
            return this;
        }
        @CustomType.Setter
        public Builder style(String style) {
            if (style == null) {
              throw new MissingRequiredPropertyException("GetFormResult", "style");
            }
            this.style = style;
            return this;
        }
        @CustomType.Setter
        public Builder translations(String translations) {
            if (translations == null) {
              throw new MissingRequiredPropertyException("GetFormResult", "translations");
            }
            this.translations = translations;
            return this;
        }
        public GetFormResult build() {
            final var _resultValue = new GetFormResult();
            _resultValue.ending = ending;
            _resultValue.id = id;
            _resultValue.languages = languages;
            _resultValue.messages = messages;
            _resultValue.name = name;
            _resultValue.nodes = nodes;
            _resultValue.start = start;
            _resultValue.style = style;
            _resultValue.translations = translations;
            return _resultValue;
        }
    }
}
