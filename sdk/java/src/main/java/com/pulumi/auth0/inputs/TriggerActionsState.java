// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.TriggerActionsActionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerActionsState extends com.pulumi.resources.ResourceArgs {

    public static final TriggerActionsState Empty = new TriggerActionsState();

    /**
     * The list of actions bound to this trigger.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<TriggerActionsActionArgs>> actions;

    /**
     * @return The list of actions bound to this trigger.
     * 
     */
    public Optional<Output<List<TriggerActionsActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * The ID of the trigger to bind with.
     * 
     */
    @Import(name="trigger")
    private @Nullable Output<String> trigger;

    /**
     * @return The ID of the trigger to bind with.
     * 
     */
    public Optional<Output<String>> trigger() {
        return Optional.ofNullable(this.trigger);
    }

    private TriggerActionsState() {}

    private TriggerActionsState(TriggerActionsState $) {
        this.actions = $.actions;
        this.trigger = $.trigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerActionsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerActionsState $;

        public Builder() {
            $ = new TriggerActionsState();
        }

        public Builder(TriggerActionsState defaults) {
            $ = new TriggerActionsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions The list of actions bound to this trigger.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<TriggerActionsActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions The list of actions bound to this trigger.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<TriggerActionsActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions The list of actions bound to this trigger.
         * 
         * @return builder
         * 
         */
        public Builder actions(TriggerActionsActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param trigger The ID of the trigger to bind with.
         * 
         * @return builder
         * 
         */
        public Builder trigger(@Nullable Output<String> trigger) {
            $.trigger = trigger;
            return this;
        }

        /**
         * @param trigger The ID of the trigger to bind with.
         * 
         * @return builder
         * 
         */
        public Builder trigger(String trigger) {
            return trigger(Output.of(trigger));
        }

        public TriggerActionsState build() {
            return $;
        }
    }

}
