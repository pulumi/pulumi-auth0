// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClientAddonsLayerArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClientAddonsLayerArgs Empty = new ClientAddonsLayerArgs();

    /**
     * Optional expiration in minutes for the generated token. Defaults to 5 minutes.
     * 
     */
    @Import(name="expiration")
    private @Nullable Output<Integer> expiration;

    /**
     * @return Optional expiration in minutes for the generated token. Defaults to 5 minutes.
     * 
     */
    public Optional<Output<Integer>> expiration() {
        return Optional.ofNullable(this.expiration);
    }

    /**
     * Authentication Key identifier used to sign the Layer token.
     * 
     */
    @Import(name="keyId", required=true)
    private Output<String> keyId;

    /**
     * @return Authentication Key identifier used to sign the Layer token.
     * 
     */
    public Output<String> keyId() {
        return this.keyId;
    }

    /**
     * Name of the property used as the unique user ID in Layer. If not specified `userId` is used.
     * 
     */
    @Import(name="principal")
    private @Nullable Output<String> principal;

    /**
     * @return Name of the property used as the unique user ID in Layer. If not specified `userId` is used.
     * 
     */
    public Optional<Output<String>> principal() {
        return Optional.ofNullable(this.principal);
    }

    /**
     * Private key for signing the Layer token.
     * 
     */
    @Import(name="privateKey", required=true)
    private Output<String> privateKey;

    /**
     * @return Private key for signing the Layer token.
     * 
     */
    public Output<String> privateKey() {
        return this.privateKey;
    }

    /**
     * Provider ID of your Layer account.
     * 
     */
    @Import(name="providerId", required=true)
    private Output<String> providerId;

    /**
     * @return Provider ID of your Layer account.
     * 
     */
    public Output<String> providerId() {
        return this.providerId;
    }

    private ClientAddonsLayerArgs() {}

    private ClientAddonsLayerArgs(ClientAddonsLayerArgs $) {
        this.expiration = $.expiration;
        this.keyId = $.keyId;
        this.principal = $.principal;
        this.privateKey = $.privateKey;
        this.providerId = $.providerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientAddonsLayerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientAddonsLayerArgs $;

        public Builder() {
            $ = new ClientAddonsLayerArgs();
        }

        public Builder(ClientAddonsLayerArgs defaults) {
            $ = new ClientAddonsLayerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expiration Optional expiration in minutes for the generated token. Defaults to 5 minutes.
         * 
         * @return builder
         * 
         */
        public Builder expiration(@Nullable Output<Integer> expiration) {
            $.expiration = expiration;
            return this;
        }

        /**
         * @param expiration Optional expiration in minutes for the generated token. Defaults to 5 minutes.
         * 
         * @return builder
         * 
         */
        public Builder expiration(Integer expiration) {
            return expiration(Output.of(expiration));
        }

        /**
         * @param keyId Authentication Key identifier used to sign the Layer token.
         * 
         * @return builder
         * 
         */
        public Builder keyId(Output<String> keyId) {
            $.keyId = keyId;
            return this;
        }

        /**
         * @param keyId Authentication Key identifier used to sign the Layer token.
         * 
         * @return builder
         * 
         */
        public Builder keyId(String keyId) {
            return keyId(Output.of(keyId));
        }

        /**
         * @param principal Name of the property used as the unique user ID in Layer. If not specified `userId` is used.
         * 
         * @return builder
         * 
         */
        public Builder principal(@Nullable Output<String> principal) {
            $.principal = principal;
            return this;
        }

        /**
         * @param principal Name of the property used as the unique user ID in Layer. If not specified `userId` is used.
         * 
         * @return builder
         * 
         */
        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        /**
         * @param privateKey Private key for signing the Layer token.
         * 
         * @return builder
         * 
         */
        public Builder privateKey(Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        /**
         * @param privateKey Private key for signing the Layer token.
         * 
         * @return builder
         * 
         */
        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        /**
         * @param providerId Provider ID of your Layer account.
         * 
         * @return builder
         * 
         */
        public Builder providerId(Output<String> providerId) {
            $.providerId = providerId;
            return this;
        }

        /**
         * @param providerId Provider ID of your Layer account.
         * 
         * @return builder
         * 
         */
        public Builder providerId(String providerId) {
            return providerId(Output.of(providerId));
        }

        public ClientAddonsLayerArgs build() {
            if ($.keyId == null) {
                throw new MissingRequiredPropertyException("ClientAddonsLayerArgs", "keyId");
            }
            if ($.privateKey == null) {
                throw new MissingRequiredPropertyException("ClientAddonsLayerArgs", "privateKey");
            }
            if ($.providerId == null) {
                throw new MissingRequiredPropertyException("ClientAddonsLayerArgs", "providerId");
            }
            return $;
        }
    }

}
