// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.EventStreamEventbridgeConfigurationArgs;
import com.pulumi.auth0.inputs.EventStreamWebhookConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventStreamState extends com.pulumi.resources.ResourceArgs {

    public static final EventStreamState Empty = new EventStreamState();

    /**
     * The ISO 8601 timestamp when the stream was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The ISO 8601 timestamp when the stream was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The type of event stream destination (either &#39;eventbridge&#39; or &#39;webhook&#39;).
     * 
     */
    @Import(name="destinationType")
    private @Nullable Output<String> destinationType;

    /**
     * @return The type of event stream destination (either &#39;eventbridge&#39; or &#39;webhook&#39;).
     * 
     */
    public Optional<Output<String>> destinationType() {
        return Optional.ofNullable(this.destinationType);
    }

    /**
     * Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
     * 
     */
    @Import(name="eventbridgeConfiguration")
    private @Nullable Output<EventStreamEventbridgeConfigurationArgs> eventbridgeConfiguration;

    /**
     * @return Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
     * 
     */
    public Optional<Output<EventStreamEventbridgeConfigurationArgs>> eventbridgeConfiguration() {
        return Optional.ofNullable(this.eventbridgeConfiguration);
    }

    /**
     * The name of the event stream.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the event stream.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The current status of the event stream.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current status of the event stream.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * List of event types this stream is subscribed to.
     * 
     */
    @Import(name="subscriptions")
    private @Nullable Output<List<String>> subscriptions;

    /**
     * @return List of event types this stream is subscribed to.
     * 
     */
    public Optional<Output<List<String>>> subscriptions() {
        return Optional.ofNullable(this.subscriptions);
    }

    /**
     * The ISO 8601 timestamp when the stream was last updated.
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return The ISO 8601 timestamp when the stream was last updated.
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
     * 
     */
    @Import(name="webhookConfiguration")
    private @Nullable Output<EventStreamWebhookConfigurationArgs> webhookConfiguration;

    /**
     * @return Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
     * 
     */
    public Optional<Output<EventStreamWebhookConfigurationArgs>> webhookConfiguration() {
        return Optional.ofNullable(this.webhookConfiguration);
    }

    private EventStreamState() {}

    private EventStreamState(EventStreamState $) {
        this.createdAt = $.createdAt;
        this.destinationType = $.destinationType;
        this.eventbridgeConfiguration = $.eventbridgeConfiguration;
        this.name = $.name;
        this.status = $.status;
        this.subscriptions = $.subscriptions;
        this.updatedAt = $.updatedAt;
        this.webhookConfiguration = $.webhookConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventStreamState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventStreamState $;

        public Builder() {
            $ = new EventStreamState();
        }

        public Builder(EventStreamState defaults) {
            $ = new EventStreamState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt The ISO 8601 timestamp when the stream was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The ISO 8601 timestamp when the stream was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param destinationType The type of event stream destination (either &#39;eventbridge&#39; or &#39;webhook&#39;).
         * 
         * @return builder
         * 
         */
        public Builder destinationType(@Nullable Output<String> destinationType) {
            $.destinationType = destinationType;
            return this;
        }

        /**
         * @param destinationType The type of event stream destination (either &#39;eventbridge&#39; or &#39;webhook&#39;).
         * 
         * @return builder
         * 
         */
        public Builder destinationType(String destinationType) {
            return destinationType(Output.of(destinationType));
        }

        /**
         * @param eventbridgeConfiguration Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
         * 
         * @return builder
         * 
         */
        public Builder eventbridgeConfiguration(@Nullable Output<EventStreamEventbridgeConfigurationArgs> eventbridgeConfiguration) {
            $.eventbridgeConfiguration = eventbridgeConfiguration;
            return this;
        }

        /**
         * @param eventbridgeConfiguration Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
         * 
         * @return builder
         * 
         */
        public Builder eventbridgeConfiguration(EventStreamEventbridgeConfigurationArgs eventbridgeConfiguration) {
            return eventbridgeConfiguration(Output.of(eventbridgeConfiguration));
        }

        /**
         * @param name The name of the event stream.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the event stream.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param status The current status of the event stream.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current status of the event stream.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param subscriptions List of event types this stream is subscribed to.
         * 
         * @return builder
         * 
         */
        public Builder subscriptions(@Nullable Output<List<String>> subscriptions) {
            $.subscriptions = subscriptions;
            return this;
        }

        /**
         * @param subscriptions List of event types this stream is subscribed to.
         * 
         * @return builder
         * 
         */
        public Builder subscriptions(List<String> subscriptions) {
            return subscriptions(Output.of(subscriptions));
        }

        /**
         * @param subscriptions List of event types this stream is subscribed to.
         * 
         * @return builder
         * 
         */
        public Builder subscriptions(String... subscriptions) {
            return subscriptions(List.of(subscriptions));
        }

        /**
         * @param updatedAt The ISO 8601 timestamp when the stream was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt The ISO 8601 timestamp when the stream was last updated.
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param webhookConfiguration Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
         * 
         * @return builder
         * 
         */
        public Builder webhookConfiguration(@Nullable Output<EventStreamWebhookConfigurationArgs> webhookConfiguration) {
            $.webhookConfiguration = webhookConfiguration;
            return this;
        }

        /**
         * @param webhookConfiguration Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
         * 
         * @return builder
         * 
         */
        public Builder webhookConfiguration(EventStreamWebhookConfigurationArgs webhookConfiguration) {
            return webhookConfiguration(Output.of(webhookConfiguration));
        }

        public EventStreamState build() {
            return $;
        }
    }

}
