// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.ClientCredentialsPrivateKeyJwtCredential;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ClientCredentialsPrivateKeyJwt {
    /**
     * @return Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
     * 
     */
    private List<ClientCredentialsPrivateKeyJwtCredential> credentials;

    private ClientCredentialsPrivateKeyJwt() {}
    /**
     * @return Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
     * 
     */
    public List<ClientCredentialsPrivateKeyJwtCredential> credentials() {
        return this.credentials;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClientCredentialsPrivateKeyJwt defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<ClientCredentialsPrivateKeyJwtCredential> credentials;
        public Builder() {}
        public Builder(ClientCredentialsPrivateKeyJwt defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentials = defaults.credentials;
        }

        @CustomType.Setter
        public Builder credentials(List<ClientCredentialsPrivateKeyJwtCredential> credentials) {
            if (credentials == null) {
              throw new MissingRequiredPropertyException("ClientCredentialsPrivateKeyJwt", "credentials");
            }
            this.credentials = credentials;
            return this;
        }
        public Builder credentials(ClientCredentialsPrivateKeyJwtCredential... credentials) {
            return credentials(List.of(credentials));
        }
        public ClientCredentialsPrivateKeyJwt build() {
            final var _resultValue = new ClientCredentialsPrivateKeyJwt();
            _resultValue.credentials = credentials;
            return _resultValue;
        }
    }
}
