// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.UserAttributeProfileUserAttributeArgs;
import com.pulumi.auth0.inputs.UserAttributeProfileUserIdArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserAttributeProfileState extends com.pulumi.resources.ResourceArgs {

    public static final UserAttributeProfileState Empty = new UserAttributeProfileState();

    /**
     * The name of the User Attribute Profile.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the User Attribute Profile.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * List of user attribute configurations.
     * 
     */
    @Import(name="userAttributes")
    private @Nullable Output<List<UserAttributeProfileUserAttributeArgs>> userAttributes;

    /**
     * @return List of user attribute configurations.
     * 
     */
    public Optional<Output<List<UserAttributeProfileUserAttributeArgs>>> userAttributes() {
        return Optional.ofNullable(this.userAttributes);
    }

    /**
     * Configuration for mapping the user ID from identity providers.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<UserAttributeProfileUserIdArgs> userId;

    /**
     * @return Configuration for mapping the user ID from identity providers.
     * 
     */
    public Optional<Output<UserAttributeProfileUserIdArgs>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private UserAttributeProfileState() {}

    private UserAttributeProfileState(UserAttributeProfileState $) {
        this.name = $.name;
        this.userAttributes = $.userAttributes;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAttributeProfileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAttributeProfileState $;

        public Builder() {
            $ = new UserAttributeProfileState();
        }

        public Builder(UserAttributeProfileState defaults) {
            $ = new UserAttributeProfileState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the User Attribute Profile.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the User Attribute Profile.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param userAttributes List of user attribute configurations.
         * 
         * @return builder
         * 
         */
        public Builder userAttributes(@Nullable Output<List<UserAttributeProfileUserAttributeArgs>> userAttributes) {
            $.userAttributes = userAttributes;
            return this;
        }

        /**
         * @param userAttributes List of user attribute configurations.
         * 
         * @return builder
         * 
         */
        public Builder userAttributes(List<UserAttributeProfileUserAttributeArgs> userAttributes) {
            return userAttributes(Output.of(userAttributes));
        }

        /**
         * @param userAttributes List of user attribute configurations.
         * 
         * @return builder
         * 
         */
        public Builder userAttributes(UserAttributeProfileUserAttributeArgs... userAttributes) {
            return userAttributes(List.of(userAttributes));
        }

        /**
         * @param userId Configuration for mapping the user ID from identity providers.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<UserAttributeProfileUserIdArgs> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId Configuration for mapping the user ID from identity providers.
         * 
         * @return builder
         * 
         */
        public Builder userId(UserAttributeProfileUserIdArgs userId) {
            return userId(Output.of(userId));
        }

        public UserAttributeProfileState build() {
            return $;
        }
    }

}
