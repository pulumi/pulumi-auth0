// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.OrganizationDiscoveryDomainsDiscoveryDomainArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrganizationDiscoveryDomainsState extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationDiscoveryDomainsState Empty = new OrganizationDiscoveryDomainsState();

    /**
     * Discovery domains that are configured for the organization.
     * 
     */
    @Import(name="discoveryDomains")
    private @Nullable Output<List<OrganizationDiscoveryDomainsDiscoveryDomainArgs>> discoveryDomains;

    /**
     * @return Discovery domains that are configured for the organization.
     * 
     */
    public Optional<Output<List<OrganizationDiscoveryDomainsDiscoveryDomainArgs>>> discoveryDomains() {
        return Optional.ofNullable(this.discoveryDomains);
    }

    /**
     * ID of the organization on which to manage the discovery domains.
     * 
     */
    @Import(name="organizationId")
    private @Nullable Output<String> organizationId;

    /**
     * @return ID of the organization on which to manage the discovery domains.
     * 
     */
    public Optional<Output<String>> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    private OrganizationDiscoveryDomainsState() {}

    private OrganizationDiscoveryDomainsState(OrganizationDiscoveryDomainsState $) {
        this.discoveryDomains = $.discoveryDomains;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationDiscoveryDomainsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationDiscoveryDomainsState $;

        public Builder() {
            $ = new OrganizationDiscoveryDomainsState();
        }

        public Builder(OrganizationDiscoveryDomainsState defaults) {
            $ = new OrganizationDiscoveryDomainsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param discoveryDomains Discovery domains that are configured for the organization.
         * 
         * @return builder
         * 
         */
        public Builder discoveryDomains(@Nullable Output<List<OrganizationDiscoveryDomainsDiscoveryDomainArgs>> discoveryDomains) {
            $.discoveryDomains = discoveryDomains;
            return this;
        }

        /**
         * @param discoveryDomains Discovery domains that are configured for the organization.
         * 
         * @return builder
         * 
         */
        public Builder discoveryDomains(List<OrganizationDiscoveryDomainsDiscoveryDomainArgs> discoveryDomains) {
            return discoveryDomains(Output.of(discoveryDomains));
        }

        /**
         * @param discoveryDomains Discovery domains that are configured for the organization.
         * 
         * @return builder
         * 
         */
        public Builder discoveryDomains(OrganizationDiscoveryDomainsDiscoveryDomainArgs... discoveryDomains) {
            return discoveryDomains(List.of(discoveryDomains));
        }

        /**
         * @param organizationId ID of the organization on which to manage the discovery domains.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId ID of the organization on which to manage the discovery domains.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public OrganizationDiscoveryDomainsState build() {
            return $;
        }
    }

}
