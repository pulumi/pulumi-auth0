// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetUserAttributeProfileUserIdStrategyOverride;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUserAttributeProfileUserId {
    /**
     * @return The OIDC mapping for the user ID.
     * 
     */
    private String oidcMapping;
    /**
     * @return The SAML mapping for the user ID.
     * 
     */
    private List<String> samlMappings;
    /**
     * @return The SCIM mapping for the user ID.
     * 
     */
    private String scimMapping;
    /**
     * @return Strategy-specific overrides for user ID mapping.
     * 
     */
    private List<GetUserAttributeProfileUserIdStrategyOverride> strategyOverrides;

    private GetUserAttributeProfileUserId() {}
    /**
     * @return The OIDC mapping for the user ID.
     * 
     */
    public String oidcMapping() {
        return this.oidcMapping;
    }
    /**
     * @return The SAML mapping for the user ID.
     * 
     */
    public List<String> samlMappings() {
        return this.samlMappings;
    }
    /**
     * @return The SCIM mapping for the user ID.
     * 
     */
    public String scimMapping() {
        return this.scimMapping;
    }
    /**
     * @return Strategy-specific overrides for user ID mapping.
     * 
     */
    public List<GetUserAttributeProfileUserIdStrategyOverride> strategyOverrides() {
        return this.strategyOverrides;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAttributeProfileUserId defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String oidcMapping;
        private List<String> samlMappings;
        private String scimMapping;
        private List<GetUserAttributeProfileUserIdStrategyOverride> strategyOverrides;
        public Builder() {}
        public Builder(GetUserAttributeProfileUserId defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.oidcMapping = defaults.oidcMapping;
    	      this.samlMappings = defaults.samlMappings;
    	      this.scimMapping = defaults.scimMapping;
    	      this.strategyOverrides = defaults.strategyOverrides;
        }

        @CustomType.Setter
        public Builder oidcMapping(String oidcMapping) {
            if (oidcMapping == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserId", "oidcMapping");
            }
            this.oidcMapping = oidcMapping;
            return this;
        }
        @CustomType.Setter
        public Builder samlMappings(List<String> samlMappings) {
            if (samlMappings == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserId", "samlMappings");
            }
            this.samlMappings = samlMappings;
            return this;
        }
        public Builder samlMappings(String... samlMappings) {
            return samlMappings(List.of(samlMappings));
        }
        @CustomType.Setter
        public Builder scimMapping(String scimMapping) {
            if (scimMapping == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserId", "scimMapping");
            }
            this.scimMapping = scimMapping;
            return this;
        }
        @CustomType.Setter
        public Builder strategyOverrides(List<GetUserAttributeProfileUserIdStrategyOverride> strategyOverrides) {
            if (strategyOverrides == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileUserId", "strategyOverrides");
            }
            this.strategyOverrides = strategyOverrides;
            return this;
        }
        public Builder strategyOverrides(GetUserAttributeProfileUserIdStrategyOverride... strategyOverrides) {
            return strategyOverrides(List.of(strategyOverrides));
        }
        public GetUserAttributeProfileUserId build() {
            final var _resultValue = new GetUserAttributeProfileUserId();
            _resultValue.oidcMapping = oidcMapping;
            _resultValue.samlMappings = samlMappings;
            _resultValue.scimMapping = scimMapping;
            _resultValue.strategyOverrides = strategyOverrides;
            return _resultValue;
        }
    }
}
