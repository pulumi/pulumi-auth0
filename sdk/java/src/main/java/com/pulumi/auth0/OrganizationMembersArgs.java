// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class OrganizationMembersArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationMembersArgs Empty = new OrganizationMembersArgs();

    /**
     * Add user ID(s) directly from the tenant to become members of the organization.
     * 
     */
    @Import(name="members", required=true)
    private Output<List<String>> members;

    /**
     * @return Add user ID(s) directly from the tenant to become members of the organization.
     * 
     */
    public Output<List<String>> members() {
        return this.members;
    }

    /**
     * The ID of the organization to assign the members to.
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return The ID of the organization to assign the members to.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    private OrganizationMembersArgs() {}

    private OrganizationMembersArgs(OrganizationMembersArgs $) {
        this.members = $.members;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationMembersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationMembersArgs $;

        public Builder() {
            $ = new OrganizationMembersArgs();
        }

        public Builder(OrganizationMembersArgs defaults) {
            $ = new OrganizationMembersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param members Add user ID(s) directly from the tenant to become members of the organization.
         * 
         * @return builder
         * 
         */
        public Builder members(Output<List<String>> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members Add user ID(s) directly from the tenant to become members of the organization.
         * 
         * @return builder
         * 
         */
        public Builder members(List<String> members) {
            return members(Output.of(members));
        }

        /**
         * @param members Add user ID(s) directly from the tenant to become members of the organization.
         * 
         * @return builder
         * 
         */
        public Builder members(String... members) {
            return members(List.of(members));
        }

        /**
         * @param organizationId The ID of the organization to assign the members to.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The ID of the organization to assign the members to.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public OrganizationMembersArgs build() {
            $.members = Objects.requireNonNull($.members, "expected parameter 'members' to be non-null");
            $.organizationId = Objects.requireNonNull($.organizationId, "expected parameter 'organizationId' to be non-null");
            return $;
        }
    }

}
