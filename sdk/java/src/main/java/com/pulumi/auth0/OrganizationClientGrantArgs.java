// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class OrganizationClientGrantArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrganizationClientGrantArgs Empty = new OrganizationClientGrantArgs();

    /**
     * A Client Grant ID to add to the organization.
     * 
     */
    @Import(name="grantId", required=true)
    private Output<String> grantId;

    /**
     * @return A Client Grant ID to add to the organization.
     * 
     */
    public Output<String> grantId() {
        return this.grantId;
    }

    /**
     * The ID of the organization to associate the client grant.
     * 
     */
    @Import(name="organizationId", required=true)
    private Output<String> organizationId;

    /**
     * @return The ID of the organization to associate the client grant.
     * 
     */
    public Output<String> organizationId() {
        return this.organizationId;
    }

    private OrganizationClientGrantArgs() {}

    private OrganizationClientGrantArgs(OrganizationClientGrantArgs $) {
        this.grantId = $.grantId;
        this.organizationId = $.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrganizationClientGrantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrganizationClientGrantArgs $;

        public Builder() {
            $ = new OrganizationClientGrantArgs();
        }

        public Builder(OrganizationClientGrantArgs defaults) {
            $ = new OrganizationClientGrantArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param grantId A Client Grant ID to add to the organization.
         * 
         * @return builder
         * 
         */
        public Builder grantId(Output<String> grantId) {
            $.grantId = grantId;
            return this;
        }

        /**
         * @param grantId A Client Grant ID to add to the organization.
         * 
         * @return builder
         * 
         */
        public Builder grantId(String grantId) {
            return grantId(Output.of(grantId));
        }

        /**
         * @param organizationId The ID of the organization to associate the client grant.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(Output<String> organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param organizationId The ID of the organization to associate the client grant.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(String organizationId) {
            return organizationId(Output.of(organizationId));
        }

        public OrganizationClientGrantArgs build() {
            if ($.grantId == null) {
                throw new MissingRequiredPropertyException("OrganizationClientGrantArgs", "grantId");
            }
            if ($.organizationId == null) {
                throw new MissingRequiredPropertyException("OrganizationClientGrantArgs", "organizationId");
            }
            return $;
        }
    }

}
