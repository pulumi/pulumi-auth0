// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.EventStreamArgs;
import com.pulumi.auth0.Utilities;
import com.pulumi.auth0.inputs.EventStreamState;
import com.pulumi.auth0.outputs.EventStreamEventbridgeConfiguration;
import com.pulumi.auth0.outputs.EventStreamWebhookConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Allows you to manage Auth0 Event Streams.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.auth0.EventStream;
 * import com.pulumi.auth0.EventStreamArgs;
 * import com.pulumi.auth0.inputs.EventStreamEventbridgeConfigurationArgs;
 * import com.pulumi.auth0.inputs.EventStreamWebhookConfigurationArgs;
 * import com.pulumi.auth0.inputs.EventStreamWebhookConfigurationWebhookAuthorizationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // Creates an event stream of type eventbridge
 *         var myEventStreamEventBridge = new EventStream("myEventStreamEventBridge", EventStreamArgs.builder()
 *             .name("my-eventbridge")
 *             .destinationType("eventbridge")
 *             .subscriptions(            
 *                 "user.created",
 *                 "user.updated")
 *             .eventbridgeConfiguration(EventStreamEventbridgeConfigurationArgs.builder()
 *                 .awsAccountId("242849305777")
 *                 .awsRegion("us-east-1")
 *                 .build())
 *             .build());
 * 
 *         // Creates an event stream of type webhook
 *         var myEventStreamWebhook = new EventStream("myEventStreamWebhook", EventStreamArgs.builder()
 *             .name("my-webhook")
 *             .destinationType("webhook")
 *             .subscriptions(            
 *                 "user.created",
 *                 "user.updated")
 *             .webhookConfiguration(EventStreamWebhookConfigurationArgs.builder()
 *                 .webhookEndpoint("https://eof28wtn4v4506o.m.pipedream.net")
 *                 .webhookAuthorization(EventStreamWebhookConfigurationWebhookAuthorizationArgs.builder()
 *                     .method("bearer")
 *                     .token("123456789")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * This resource can be imported by specifying the Event Stream ID.
 * 
 * Example:
 * 
 * ```sh
 * $ pulumi import auth0:index/eventStream:EventStream my_stream &#34;est_XXXXXXXXXXXXXXXX&#34;
 * ```
 * 
 */
@ResourceType(type="auth0:index/eventStream:EventStream")
public class EventStream extends com.pulumi.resources.CustomResource {
    /**
     * The ISO 8601 timestamp when the stream was created.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The ISO 8601 timestamp when the stream was created.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * The type of event stream destination (either &#39;eventbridge&#39; or &#39;webhook&#39;).
     * 
     */
    @Export(name="destinationType", refs={String.class}, tree="[0]")
    private Output<String> destinationType;

    /**
     * @return The type of event stream destination (either &#39;eventbridge&#39; or &#39;webhook&#39;).
     * 
     */
    public Output<String> destinationType() {
        return this.destinationType;
    }
    /**
     * Configuration for the EventBridge destination. This block is only applicable when `destination_type` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
     * 
     */
    @Export(name="eventbridgeConfiguration", refs={EventStreamEventbridgeConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ EventStreamEventbridgeConfiguration> eventbridgeConfiguration;

    /**
     * @return Configuration for the EventBridge destination. This block is only applicable when `destination_type` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
     * 
     */
    public Output<Optional<EventStreamEventbridgeConfiguration>> eventbridgeConfiguration() {
        return Codegen.optional(this.eventbridgeConfiguration);
    }
    /**
     * The name of the event stream.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the event stream.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The current status of the event stream.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The current status of the event stream.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * List of event types this stream is subscribed to.
     * 
     */
    @Export(name="subscriptions", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> subscriptions;

    /**
     * @return List of event types this stream is subscribed to.
     * 
     */
    public Output<List<String>> subscriptions() {
        return this.subscriptions;
    }
    /**
     * The ISO 8601 timestamp when the stream was last updated.
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return The ISO 8601 timestamp when the stream was last updated.
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * Configuration for the Webhook destination. This block is only applicable when `destination_type` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
     * 
     */
    @Export(name="webhookConfiguration", refs={EventStreamWebhookConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ EventStreamWebhookConfiguration> webhookConfiguration;

    /**
     * @return Configuration for the Webhook destination. This block is only applicable when `destination_type` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
     * 
     */
    public Output<Optional<EventStreamWebhookConfiguration>> webhookConfiguration() {
        return Codegen.optional(this.webhookConfiguration);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EventStream(java.lang.String name) {
        this(name, EventStreamArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EventStream(java.lang.String name, EventStreamArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EventStream(java.lang.String name, EventStreamArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/eventStream:EventStream", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private EventStream(java.lang.String name, Output<java.lang.String> id, @Nullable EventStreamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/eventStream:EventStream", name, state, makeResourceOptions(options, id), false);
    }

    private static EventStreamArgs makeArgs(EventStreamArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EventStreamArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EventStream get(java.lang.String name, Output<java.lang.String> id, @Nullable EventStreamState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EventStream(name, id, state, options);
    }
}
