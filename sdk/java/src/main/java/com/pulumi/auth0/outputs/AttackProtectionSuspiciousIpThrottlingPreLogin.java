// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AttackProtectionSuspiciousIpThrottlingPreLogin {
    /**
     * @return Maximum number of consecutive failed login attempts from a single user before blocking is triggered. Only available on public tenants.
     * 
     */
    private @Nullable Integer maxAttempts;
    /**
     * @return Interval of time, given in milliseconds at which new login tokens will become available after they have been used by an IP address. Each login attempt will be added on the defined throttling rate.
     * 
     */
    private @Nullable Integer rate;

    private AttackProtectionSuspiciousIpThrottlingPreLogin() {}
    /**
     * @return Maximum number of consecutive failed login attempts from a single user before blocking is triggered. Only available on public tenants.
     * 
     */
    public Optional<Integer> maxAttempts() {
        return Optional.ofNullable(this.maxAttempts);
    }
    /**
     * @return Interval of time, given in milliseconds at which new login tokens will become available after they have been used by an IP address. Each login attempt will be added on the defined throttling rate.
     * 
     */
    public Optional<Integer> rate() {
        return Optional.ofNullable(this.rate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AttackProtectionSuspiciousIpThrottlingPreLogin defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxAttempts;
        private @Nullable Integer rate;
        public Builder() {}
        public Builder(AttackProtectionSuspiciousIpThrottlingPreLogin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxAttempts = defaults.maxAttempts;
    	      this.rate = defaults.rate;
        }

        @CustomType.Setter
        public Builder maxAttempts(@Nullable Integer maxAttempts) {
            this.maxAttempts = maxAttempts;
            return this;
        }
        @CustomType.Setter
        public Builder rate(@Nullable Integer rate) {
            this.rate = rate;
            return this;
        }
        public AttackProtectionSuspiciousIpThrottlingPreLogin build() {
            final var _resultValue = new AttackProtectionSuspiciousIpThrottlingPreLogin();
            _resultValue.maxAttempts = maxAttempts;
            _resultValue.rate = rate;
            return _resultValue;
        }
    }
}
