// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.FormLanguageArgs;
import com.pulumi.auth0.inputs.FormMessageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FormState extends com.pulumi.resources.ResourceArgs {

    public static final FormState Empty = new FormState();

    /**
     * Submission configuration of the form. (JSON encoded)
     * 
     */
    @Import(name="ending")
    private @Nullable Output<String> ending;

    /**
     * @return Submission configuration of the form. (JSON encoded)
     * 
     */
    public Optional<Output<String>> ending() {
        return Optional.ofNullable(this.ending);
    }

    /**
     * Language specific configuration for the form.
     * 
     */
    @Import(name="languages")
    private @Nullable Output<List<FormLanguageArgs>> languages;

    /**
     * @return Language specific configuration for the form.
     * 
     */
    public Optional<Output<List<FormLanguageArgs>>> languages() {
        return Optional.ofNullable(this.languages);
    }

    /**
     * Message specific configuration for the form.
     * 
     */
    @Import(name="messages")
    private @Nullable Output<List<FormMessageArgs>> messages;

    /**
     * @return Message specific configuration for the form.
     * 
     */
    public Optional<Output<List<FormMessageArgs>>> messages() {
        return Optional.ofNullable(this.messages);
    }

    /**
     * Name of the form.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the form.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Nodes of the form. (JSON encoded)
     * 
     */
    @Import(name="nodes")
    private @Nullable Output<String> nodes;

    /**
     * @return Nodes of the form. (JSON encoded)
     * 
     */
    public Optional<Output<String>> nodes() {
        return Optional.ofNullable(this.nodes);
    }

    /**
     * Input setup of the form. (JSON encoded)
     * 
     */
    @Import(name="start")
    private @Nullable Output<String> start;

    /**
     * @return Input setup of the form. (JSON encoded)
     * 
     */
    public Optional<Output<String>> start() {
        return Optional.ofNullable(this.start);
    }

    /**
     * Style specific configuration for the form. (JSON encoded)
     * 
     */
    @Import(name="style")
    private @Nullable Output<String> style;

    /**
     * @return Style specific configuration for the form. (JSON encoded)
     * 
     */
    public Optional<Output<String>> style() {
        return Optional.ofNullable(this.style);
    }

    /**
     * Translations of the form. (JSON encoded)
     * 
     */
    @Import(name="translations")
    private @Nullable Output<String> translations;

    /**
     * @return Translations of the form. (JSON encoded)
     * 
     */
    public Optional<Output<String>> translations() {
        return Optional.ofNullable(this.translations);
    }

    private FormState() {}

    private FormState(FormState $) {
        this.ending = $.ending;
        this.languages = $.languages;
        this.messages = $.messages;
        this.name = $.name;
        this.nodes = $.nodes;
        this.start = $.start;
        this.style = $.style;
        this.translations = $.translations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FormState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FormState $;

        public Builder() {
            $ = new FormState();
        }

        public Builder(FormState defaults) {
            $ = new FormState(Objects.requireNonNull(defaults));
        }

        /**
         * @param ending Submission configuration of the form. (JSON encoded)
         * 
         * @return builder
         * 
         */
        public Builder ending(@Nullable Output<String> ending) {
            $.ending = ending;
            return this;
        }

        /**
         * @param ending Submission configuration of the form. (JSON encoded)
         * 
         * @return builder
         * 
         */
        public Builder ending(String ending) {
            return ending(Output.of(ending));
        }

        /**
         * @param languages Language specific configuration for the form.
         * 
         * @return builder
         * 
         */
        public Builder languages(@Nullable Output<List<FormLanguageArgs>> languages) {
            $.languages = languages;
            return this;
        }

        /**
         * @param languages Language specific configuration for the form.
         * 
         * @return builder
         * 
         */
        public Builder languages(List<FormLanguageArgs> languages) {
            return languages(Output.of(languages));
        }

        /**
         * @param languages Language specific configuration for the form.
         * 
         * @return builder
         * 
         */
        public Builder languages(FormLanguageArgs... languages) {
            return languages(List.of(languages));
        }

        /**
         * @param messages Message specific configuration for the form.
         * 
         * @return builder
         * 
         */
        public Builder messages(@Nullable Output<List<FormMessageArgs>> messages) {
            $.messages = messages;
            return this;
        }

        /**
         * @param messages Message specific configuration for the form.
         * 
         * @return builder
         * 
         */
        public Builder messages(List<FormMessageArgs> messages) {
            return messages(Output.of(messages));
        }

        /**
         * @param messages Message specific configuration for the form.
         * 
         * @return builder
         * 
         */
        public Builder messages(FormMessageArgs... messages) {
            return messages(List.of(messages));
        }

        /**
         * @param name Name of the form.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the form.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nodes Nodes of the form. (JSON encoded)
         * 
         * @return builder
         * 
         */
        public Builder nodes(@Nullable Output<String> nodes) {
            $.nodes = nodes;
            return this;
        }

        /**
         * @param nodes Nodes of the form. (JSON encoded)
         * 
         * @return builder
         * 
         */
        public Builder nodes(String nodes) {
            return nodes(Output.of(nodes));
        }

        /**
         * @param start Input setup of the form. (JSON encoded)
         * 
         * @return builder
         * 
         */
        public Builder start(@Nullable Output<String> start) {
            $.start = start;
            return this;
        }

        /**
         * @param start Input setup of the form. (JSON encoded)
         * 
         * @return builder
         * 
         */
        public Builder start(String start) {
            return start(Output.of(start));
        }

        /**
         * @param style Style specific configuration for the form. (JSON encoded)
         * 
         * @return builder
         * 
         */
        public Builder style(@Nullable Output<String> style) {
            $.style = style;
            return this;
        }

        /**
         * @param style Style specific configuration for the form. (JSON encoded)
         * 
         * @return builder
         * 
         */
        public Builder style(String style) {
            return style(Output.of(style));
        }

        /**
         * @param translations Translations of the form. (JSON encoded)
         * 
         * @return builder
         * 
         */
        public Builder translations(@Nullable Output<String> translations) {
            $.translations = translations;
            return this;
        }

        /**
         * @param translations Translations of the form. (JSON encoded)
         * 
         * @return builder
         * 
         */
        public Builder translations(String translations) {
            return translations(Output.of(translations));
        }

        public FormState build() {
            return $;
        }
    }

}
