// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClientAddonsAzureBlob {
    /**
     * @return Your Azure storage account name. Usually first segment in your Azure storage URL, for example `https://acme-org.blob.core.windows.net` would be the account name `acme-org`.
     * 
     */
    private @Nullable String accountName;
    /**
     * @return Indicates if the issued token has permission to delete the blob.
     * 
     */
    private @Nullable Boolean blobDelete;
    /**
     * @return Entity to request a token for, such as `my-blob`. If blank the computed SAS will apply to the entire storage container.
     * 
     */
    private @Nullable String blobName;
    /**
     * @return Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation.
     * 
     */
    private @Nullable Boolean blobRead;
    /**
     * @return Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account.
     * 
     */
    private @Nullable Boolean blobWrite;
    /**
     * @return Indicates if issued token has permission to delete any blob in the container.
     * 
     */
    private @Nullable Boolean containerDelete;
    /**
     * @return Indicates if the issued token has permission to list blobs in the container.
     * 
     */
    private @Nullable Boolean containerList;
    /**
     * @return Container to request a token for, such as `my-container`.
     * 
     */
    private @Nullable String containerName;
    /**
     * @return Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation.
     * 
     */
    private @Nullable Boolean containerRead;
    /**
     * @return Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account.
     * 
     */
    private @Nullable Boolean containerWrite;
    /**
     * @return Expiration in minutes for the generated token (default of 5 minutes).
     * 
     */
    private @Nullable Integer expiration;
    /**
     * @return Shared access policy identifier defined in your storage account resource.
     * 
     */
    private @Nullable String signedIdentifier;
    /**
     * @return Access key associated with this storage account.
     * 
     */
    private @Nullable String storageAccessKey;

    private ClientAddonsAzureBlob() {}
    /**
     * @return Your Azure storage account name. Usually first segment in your Azure storage URL, for example `https://acme-org.blob.core.windows.net` would be the account name `acme-org`.
     * 
     */
    public Optional<String> accountName() {
        return Optional.ofNullable(this.accountName);
    }
    /**
     * @return Indicates if the issued token has permission to delete the blob.
     * 
     */
    public Optional<Boolean> blobDelete() {
        return Optional.ofNullable(this.blobDelete);
    }
    /**
     * @return Entity to request a token for, such as `my-blob`. If blank the computed SAS will apply to the entire storage container.
     * 
     */
    public Optional<String> blobName() {
        return Optional.ofNullable(this.blobName);
    }
    /**
     * @return Indicates if the issued token has permission to read the content, properties, metadata and block list. Use the blob as the source of a copy operation.
     * 
     */
    public Optional<Boolean> blobRead() {
        return Optional.ofNullable(this.blobRead);
    }
    /**
     * @return Indicates if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account.
     * 
     */
    public Optional<Boolean> blobWrite() {
        return Optional.ofNullable(this.blobWrite);
    }
    /**
     * @return Indicates if issued token has permission to delete any blob in the container.
     * 
     */
    public Optional<Boolean> containerDelete() {
        return Optional.ofNullable(this.containerDelete);
    }
    /**
     * @return Indicates if the issued token has permission to list blobs in the container.
     * 
     */
    public Optional<Boolean> containerList() {
        return Optional.ofNullable(this.containerList);
    }
    /**
     * @return Container to request a token for, such as `my-container`.
     * 
     */
    public Optional<String> containerName() {
        return Optional.ofNullable(this.containerName);
    }
    /**
     * @return Indicates if the issued token has permission to read the content, properties, metadata or block list of any blob in the container. Use any blob in the container as the source of a copy operation.
     * 
     */
    public Optional<Boolean> containerRead() {
        return Optional.ofNullable(this.containerRead);
    }
    /**
     * @return Indicates that for any blob in the container if the issued token has permission to create or write content, properties, metadata, or block list. Snapshot or lease the blob. Resize the blob (page blob only). Use the blob as the destination of a copy operation within the same account.
     * 
     */
    public Optional<Boolean> containerWrite() {
        return Optional.ofNullable(this.containerWrite);
    }
    /**
     * @return Expiration in minutes for the generated token (default of 5 minutes).
     * 
     */
    public Optional<Integer> expiration() {
        return Optional.ofNullable(this.expiration);
    }
    /**
     * @return Shared access policy identifier defined in your storage account resource.
     * 
     */
    public Optional<String> signedIdentifier() {
        return Optional.ofNullable(this.signedIdentifier);
    }
    /**
     * @return Access key associated with this storage account.
     * 
     */
    public Optional<String> storageAccessKey() {
        return Optional.ofNullable(this.storageAccessKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClientAddonsAzureBlob defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountName;
        private @Nullable Boolean blobDelete;
        private @Nullable String blobName;
        private @Nullable Boolean blobRead;
        private @Nullable Boolean blobWrite;
        private @Nullable Boolean containerDelete;
        private @Nullable Boolean containerList;
        private @Nullable String containerName;
        private @Nullable Boolean containerRead;
        private @Nullable Boolean containerWrite;
        private @Nullable Integer expiration;
        private @Nullable String signedIdentifier;
        private @Nullable String storageAccessKey;
        public Builder() {}
        public Builder(ClientAddonsAzureBlob defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.blobDelete = defaults.blobDelete;
    	      this.blobName = defaults.blobName;
    	      this.blobRead = defaults.blobRead;
    	      this.blobWrite = defaults.blobWrite;
    	      this.containerDelete = defaults.containerDelete;
    	      this.containerList = defaults.containerList;
    	      this.containerName = defaults.containerName;
    	      this.containerRead = defaults.containerRead;
    	      this.containerWrite = defaults.containerWrite;
    	      this.expiration = defaults.expiration;
    	      this.signedIdentifier = defaults.signedIdentifier;
    	      this.storageAccessKey = defaults.storageAccessKey;
        }

        @CustomType.Setter
        public Builder accountName(@Nullable String accountName) {
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder blobDelete(@Nullable Boolean blobDelete) {
            this.blobDelete = blobDelete;
            return this;
        }
        @CustomType.Setter
        public Builder blobName(@Nullable String blobName) {
            this.blobName = blobName;
            return this;
        }
        @CustomType.Setter
        public Builder blobRead(@Nullable Boolean blobRead) {
            this.blobRead = blobRead;
            return this;
        }
        @CustomType.Setter
        public Builder blobWrite(@Nullable Boolean blobWrite) {
            this.blobWrite = blobWrite;
            return this;
        }
        @CustomType.Setter
        public Builder containerDelete(@Nullable Boolean containerDelete) {
            this.containerDelete = containerDelete;
            return this;
        }
        @CustomType.Setter
        public Builder containerList(@Nullable Boolean containerList) {
            this.containerList = containerList;
            return this;
        }
        @CustomType.Setter
        public Builder containerName(@Nullable String containerName) {
            this.containerName = containerName;
            return this;
        }
        @CustomType.Setter
        public Builder containerRead(@Nullable Boolean containerRead) {
            this.containerRead = containerRead;
            return this;
        }
        @CustomType.Setter
        public Builder containerWrite(@Nullable Boolean containerWrite) {
            this.containerWrite = containerWrite;
            return this;
        }
        @CustomType.Setter
        public Builder expiration(@Nullable Integer expiration) {
            this.expiration = expiration;
            return this;
        }
        @CustomType.Setter
        public Builder signedIdentifier(@Nullable String signedIdentifier) {
            this.signedIdentifier = signedIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccessKey(@Nullable String storageAccessKey) {
            this.storageAccessKey = storageAccessKey;
            return this;
        }
        public ClientAddonsAzureBlob build() {
            final var _resultValue = new ClientAddonsAzureBlob();
            _resultValue.accountName = accountName;
            _resultValue.blobDelete = blobDelete;
            _resultValue.blobName = blobName;
            _resultValue.blobRead = blobRead;
            _resultValue.blobWrite = blobWrite;
            _resultValue.containerDelete = containerDelete;
            _resultValue.containerList = containerList;
            _resultValue.containerName = containerName;
            _resultValue.containerRead = containerRead;
            _resultValue.containerWrite = containerWrite;
            _resultValue.expiration = expiration;
            _resultValue.signedIdentifier = signedIdentifier;
            _resultValue.storageAccessKey = storageAccessKey;
            return _resultValue;
        }
    }
}
