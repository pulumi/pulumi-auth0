// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetConnectionKeysArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectionKeysArgs Empty = new GetConnectionKeysArgs();

    /**
     * The ID of the connection to retrieve keys for.
     * 
     */
    @Import(name="connectionId", required=true)
    private Output<String> connectionId;

    /**
     * @return The ID of the connection to retrieve keys for.
     * 
     */
    public Output<String> connectionId() {
        return this.connectionId;
    }

    private GetConnectionKeysArgs() {}

    private GetConnectionKeysArgs(GetConnectionKeysArgs $) {
        this.connectionId = $.connectionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectionKeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectionKeysArgs $;

        public Builder() {
            $ = new GetConnectionKeysArgs();
        }

        public Builder(GetConnectionKeysArgs defaults) {
            $ = new GetConnectionKeysArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionId The ID of the connection to retrieve keys for.
         * 
         * @return builder
         * 
         */
        public Builder connectionId(Output<String> connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        /**
         * @param connectionId The ID of the connection to retrieve keys for.
         * 
         * @return builder
         * 
         */
        public Builder connectionId(String connectionId) {
            return connectionId(Output.of(connectionId));
        }

        public GetConnectionKeysArgs build() {
            if ($.connectionId == null) {
                throw new MissingRequiredPropertyException("GetConnectionKeysArgs", "connectionId");
            }
            return $;
        }
    }

}
