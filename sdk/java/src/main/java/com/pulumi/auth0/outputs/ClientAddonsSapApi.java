// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClientAddonsSapApi {
    /**
     * @return Consumer Key assigned by Salesforce to the Connected App.
     * 
     */
    private @Nullable String clientId;
    /**
     * @return Format of the name identifier. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.
     * 
     */
    private @Nullable String nameIdentifierFormat;
    /**
     * @return Requested scope for SAP APIs.
     * 
     */
    private @Nullable String scope;
    /**
     * @return Service account password to use to authenticate API calls to the token endpoint.
     * 
     */
    private @Nullable String servicePassword;
    /**
     * @return The OAuth2 token endpoint URL of your SAP OData server.
     * 
     */
    private @Nullable String tokenEndpointUrl;
    /**
     * @return Name of the property in the user object that maps to a SAP username, for example `email`.
     * 
     */
    private @Nullable String usernameAttribute;

    private ClientAddonsSapApi() {}
    /**
     * @return Consumer Key assigned by Salesforce to the Connected App.
     * 
     */
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    /**
     * @return Format of the name identifier. Defaults to `urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`.
     * 
     */
    public Optional<String> nameIdentifierFormat() {
        return Optional.ofNullable(this.nameIdentifierFormat);
    }
    /**
     * @return Requested scope for SAP APIs.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return Service account password to use to authenticate API calls to the token endpoint.
     * 
     */
    public Optional<String> servicePassword() {
        return Optional.ofNullable(this.servicePassword);
    }
    /**
     * @return The OAuth2 token endpoint URL of your SAP OData server.
     * 
     */
    public Optional<String> tokenEndpointUrl() {
        return Optional.ofNullable(this.tokenEndpointUrl);
    }
    /**
     * @return Name of the property in the user object that maps to a SAP username, for example `email`.
     * 
     */
    public Optional<String> usernameAttribute() {
        return Optional.ofNullable(this.usernameAttribute);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClientAddonsSapApi defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clientId;
        private @Nullable String nameIdentifierFormat;
        private @Nullable String scope;
        private @Nullable String servicePassword;
        private @Nullable String tokenEndpointUrl;
        private @Nullable String usernameAttribute;
        public Builder() {}
        public Builder(ClientAddonsSapApi defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.nameIdentifierFormat = defaults.nameIdentifierFormat;
    	      this.scope = defaults.scope;
    	      this.servicePassword = defaults.servicePassword;
    	      this.tokenEndpointUrl = defaults.tokenEndpointUrl;
    	      this.usernameAttribute = defaults.usernameAttribute;
        }

        @CustomType.Setter
        public Builder clientId(@Nullable String clientId) {
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder nameIdentifierFormat(@Nullable String nameIdentifierFormat) {
            this.nameIdentifierFormat = nameIdentifierFormat;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder servicePassword(@Nullable String servicePassword) {
            this.servicePassword = servicePassword;
            return this;
        }
        @CustomType.Setter
        public Builder tokenEndpointUrl(@Nullable String tokenEndpointUrl) {
            this.tokenEndpointUrl = tokenEndpointUrl;
            return this;
        }
        @CustomType.Setter
        public Builder usernameAttribute(@Nullable String usernameAttribute) {
            this.usernameAttribute = usernameAttribute;
            return this;
        }
        public ClientAddonsSapApi build() {
            final var o = new ClientAddonsSapApi();
            o.clientId = clientId;
            o.nameIdentifierFormat = nameIdentifierFormat;
            o.scope = scope;
            o.servicePassword = servicePassword;
            o.tokenEndpointUrl = tokenEndpointUrl;
            o.usernameAttribute = usernameAttribute;
            return o;
        }
    }
}
