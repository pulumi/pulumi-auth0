// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClientGrantsClientGrant {
    /**
     * @return The audience of the client grant.
     * 
     */
    private String audience;
    /**
     * @return The client ID associated with the grant.
     * 
     */
    private String clientId;
    /**
     * @return The ID of the client grant.
     * 
     */
    private String id;
    /**
     * @return List of granted scopes.
     * 
     */
    private List<String> scopes;
    /**
     * @return The subject type (usually &#39;client&#39;).
     * 
     */
    private String subjectType;

    private GetClientGrantsClientGrant() {}
    /**
     * @return The audience of the client grant.
     * 
     */
    public String audience() {
        return this.audience;
    }
    /**
     * @return The client ID associated with the grant.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return The ID of the client grant.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of granted scopes.
     * 
     */
    public List<String> scopes() {
        return this.scopes;
    }
    /**
     * @return The subject type (usually &#39;client&#39;).
     * 
     */
    public String subjectType() {
        return this.subjectType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClientGrantsClientGrant defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String audience;
        private String clientId;
        private String id;
        private List<String> scopes;
        private String subjectType;
        public Builder() {}
        public Builder(GetClientGrantsClientGrant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audience = defaults.audience;
    	      this.clientId = defaults.clientId;
    	      this.id = defaults.id;
    	      this.scopes = defaults.scopes;
    	      this.subjectType = defaults.subjectType;
        }

        @CustomType.Setter
        public Builder audience(String audience) {
            if (audience == null) {
              throw new MissingRequiredPropertyException("GetClientGrantsClientGrant", "audience");
            }
            this.audience = audience;
            return this;
        }
        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("GetClientGrantsClientGrant", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetClientGrantsClientGrant", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder scopes(List<String> scopes) {
            if (scopes == null) {
              throw new MissingRequiredPropertyException("GetClientGrantsClientGrant", "scopes");
            }
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }
        @CustomType.Setter
        public Builder subjectType(String subjectType) {
            if (subjectType == null) {
              throw new MissingRequiredPropertyException("GetClientGrantsClientGrant", "subjectType");
            }
            this.subjectType = subjectType;
            return this;
        }
        public GetClientGrantsClientGrant build() {
            final var _resultValue = new GetClientGrantsClientGrant();
            _resultValue.audience = audience;
            _resultValue.clientId = clientId;
            _resultValue.id = id;
            _resultValue.scopes = scopes;
            _resultValue.subjectType = subjectType;
            return _resultValue;
        }
    }
}
