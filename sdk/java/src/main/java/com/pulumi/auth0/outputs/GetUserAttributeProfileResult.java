// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetUserAttributeProfileUserAttribute;
import com.pulumi.auth0.outputs.GetUserAttributeProfileUserId;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUserAttributeProfileResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the User Attribute Profile.
     * 
     */
    private @Nullable String name;
    /**
     * @return The ID of the User Attribute Profile.
     * 
     */
    private @Nullable String userAttributeProfileId;
    /**
     * @return List of user attribute configurations.
     * 
     */
    private List<GetUserAttributeProfileUserAttribute> userAttributes;
    /**
     * @return Configuration for mapping the user ID from identity providers.
     * 
     */
    private List<GetUserAttributeProfileUserId> userIds;

    private GetUserAttributeProfileResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the User Attribute Profile.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The ID of the User Attribute Profile.
     * 
     */
    public Optional<String> userAttributeProfileId() {
        return Optional.ofNullable(this.userAttributeProfileId);
    }
    /**
     * @return List of user attribute configurations.
     * 
     */
    public List<GetUserAttributeProfileUserAttribute> userAttributes() {
        return this.userAttributes;
    }
    /**
     * @return Configuration for mapping the user ID from identity providers.
     * 
     */
    public List<GetUserAttributeProfileUserId> userIds() {
        return this.userIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAttributeProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable String name;
        private @Nullable String userAttributeProfileId;
        private List<GetUserAttributeProfileUserAttribute> userAttributes;
        private List<GetUserAttributeProfileUserId> userIds;
        public Builder() {}
        public Builder(GetUserAttributeProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.userAttributeProfileId = defaults.userAttributeProfileId;
    	      this.userAttributes = defaults.userAttributes;
    	      this.userIds = defaults.userIds;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder userAttributeProfileId(@Nullable String userAttributeProfileId) {

            this.userAttributeProfileId = userAttributeProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder userAttributes(List<GetUserAttributeProfileUserAttribute> userAttributes) {
            if (userAttributes == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileResult", "userAttributes");
            }
            this.userAttributes = userAttributes;
            return this;
        }
        public Builder userAttributes(GetUserAttributeProfileUserAttribute... userAttributes) {
            return userAttributes(List.of(userAttributes));
        }
        @CustomType.Setter
        public Builder userIds(List<GetUserAttributeProfileUserId> userIds) {
            if (userIds == null) {
              throw new MissingRequiredPropertyException("GetUserAttributeProfileResult", "userIds");
            }
            this.userIds = userIds;
            return this;
        }
        public Builder userIds(GetUserAttributeProfileUserId... userIds) {
            return userIds(List.of(userIds));
        }
        public GetUserAttributeProfileResult build() {
            final var _resultValue = new GetUserAttributeProfileResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.userAttributeProfileId = userAttributeProfileId;
            _resultValue.userAttributes = userAttributes;
            _resultValue.userIds = userIds;
            return _resultValue;
        }
    }
}
