// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionOptionsMfaArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionOptionsMfaArgs Empty = new ConnectionOptionsMfaArgs();

    /**
     * Indicates whether multifactor authentication is enabled for this connection.
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Indicates whether multifactor authentication is enabled for this connection.
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * Indicates whether multifactor authentication enrollment settings will be returned.
     * 
     */
    @Import(name="returnEnrollSettings")
    private @Nullable Output<Boolean> returnEnrollSettings;

    /**
     * @return Indicates whether multifactor authentication enrollment settings will be returned.
     * 
     */
    public Optional<Output<Boolean>> returnEnrollSettings() {
        return Optional.ofNullable(this.returnEnrollSettings);
    }

    private ConnectionOptionsMfaArgs() {}

    private ConnectionOptionsMfaArgs(ConnectionOptionsMfaArgs $) {
        this.active = $.active;
        this.returnEnrollSettings = $.returnEnrollSettings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionOptionsMfaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionOptionsMfaArgs $;

        public Builder() {
            $ = new ConnectionOptionsMfaArgs();
        }

        public Builder(ConnectionOptionsMfaArgs defaults) {
            $ = new ConnectionOptionsMfaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Indicates whether multifactor authentication is enabled for this connection.
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Indicates whether multifactor authentication is enabled for this connection.
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param returnEnrollSettings Indicates whether multifactor authentication enrollment settings will be returned.
         * 
         * @return builder
         * 
         */
        public Builder returnEnrollSettings(@Nullable Output<Boolean> returnEnrollSettings) {
            $.returnEnrollSettings = returnEnrollSettings;
            return this;
        }

        /**
         * @param returnEnrollSettings Indicates whether multifactor authentication enrollment settings will be returned.
         * 
         * @return builder
         * 
         */
        public Builder returnEnrollSettings(Boolean returnEnrollSettings) {
            return returnEnrollSettings(Output.of(returnEnrollSettings));
        }

        public ConnectionOptionsMfaArgs build() {
            return $;
        }
    }

}
