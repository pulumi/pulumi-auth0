// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.Utilities;
import com.pulumi.auth0.inputs.GetClientArgs;
import com.pulumi.auth0.inputs.GetClientPlainArgs;
import com.pulumi.auth0.inputs.GetClientsArgs;
import com.pulumi.auth0.inputs.GetClientsPlainArgs;
import com.pulumi.auth0.inputs.GetConnectionArgs;
import com.pulumi.auth0.inputs.GetConnectionPlainArgs;
import com.pulumi.auth0.inputs.GetConnectionScimConfigurationArgs;
import com.pulumi.auth0.inputs.GetConnectionScimConfigurationPlainArgs;
import com.pulumi.auth0.inputs.GetFlowArgs;
import com.pulumi.auth0.inputs.GetFlowPlainArgs;
import com.pulumi.auth0.inputs.GetFlowVaultConnectionArgs;
import com.pulumi.auth0.inputs.GetFlowVaultConnectionPlainArgs;
import com.pulumi.auth0.inputs.GetFormArgs;
import com.pulumi.auth0.inputs.GetFormPlainArgs;
import com.pulumi.auth0.inputs.GetOrganizationArgs;
import com.pulumi.auth0.inputs.GetOrganizationPlainArgs;
import com.pulumi.auth0.inputs.GetPromptScreenPartialsArgs;
import com.pulumi.auth0.inputs.GetPromptScreenPartialsPlainArgs;
import com.pulumi.auth0.inputs.GetPromptScreenRendererArgs;
import com.pulumi.auth0.inputs.GetPromptScreenRendererPlainArgs;
import com.pulumi.auth0.inputs.GetResourceServerArgs;
import com.pulumi.auth0.inputs.GetResourceServerPlainArgs;
import com.pulumi.auth0.inputs.GetRoleArgs;
import com.pulumi.auth0.inputs.GetRolePlainArgs;
import com.pulumi.auth0.inputs.GetSelfServiceProfileArgs;
import com.pulumi.auth0.inputs.GetSelfServiceProfilePlainArgs;
import com.pulumi.auth0.inputs.GetTokenExchangeProfileArgs;
import com.pulumi.auth0.inputs.GetTokenExchangeProfilePlainArgs;
import com.pulumi.auth0.inputs.GetUserArgs;
import com.pulumi.auth0.inputs.GetUserPlainArgs;
import com.pulumi.auth0.outputs.GetAttackProtectionResult;
import com.pulumi.auth0.outputs.GetBrandingResult;
import com.pulumi.auth0.outputs.GetBrandingThemeResult;
import com.pulumi.auth0.outputs.GetClientResult;
import com.pulumi.auth0.outputs.GetClientsResult;
import com.pulumi.auth0.outputs.GetConnectionResult;
import com.pulumi.auth0.outputs.GetConnectionScimConfigurationResult;
import com.pulumi.auth0.outputs.GetCustomDomainResult;
import com.pulumi.auth0.outputs.GetFlowResult;
import com.pulumi.auth0.outputs.GetFlowVaultConnectionResult;
import com.pulumi.auth0.outputs.GetFormResult;
import com.pulumi.auth0.outputs.GetOrganizationResult;
import com.pulumi.auth0.outputs.GetPagesResult;
import com.pulumi.auth0.outputs.GetPromptScreenPartialsResult;
import com.pulumi.auth0.outputs.GetPromptScreenRendererResult;
import com.pulumi.auth0.outputs.GetResourceServerResult;
import com.pulumi.auth0.outputs.GetRoleResult;
import com.pulumi.auth0.outputs.GetSelfServiceProfileResult;
import com.pulumi.auth0.outputs.GetSigningKeysResult;
import com.pulumi.auth0.outputs.GetTenantResult;
import com.pulumi.auth0.outputs.GetTokenExchangeProfileResult;
import com.pulumi.auth0.outputs.GetUserResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class Auth0Functions {
    /**
     * Use this data source to access information about the tenant&#39;s attack protection settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myProtection = Auth0Functions.getAttackProtection();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAttackProtectionResult> getAttackProtection() {
        return getAttackProtection(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s attack protection settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myProtection = Auth0Functions.getAttackProtection();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAttackProtectionResult> getAttackProtectionPlain() {
        return getAttackProtectionPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s attack protection settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myProtection = Auth0Functions.getAttackProtection();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAttackProtectionResult> getAttackProtection(InvokeArgs args) {
        return getAttackProtection(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s attack protection settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myProtection = Auth0Functions.getAttackProtection();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAttackProtectionResult> getAttackProtectionPlain(InvokeArgs args) {
        return getAttackProtectionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s attack protection settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myProtection = Auth0Functions.getAttackProtection();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAttackProtectionResult> getAttackProtection(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getAttackProtection:getAttackProtection", TypeShape.of(GetAttackProtectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant&#39;s attack protection settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myProtection = Auth0Functions.getAttackProtection();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAttackProtectionResult> getAttackProtection(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getAttackProtection:getAttackProtection", TypeShape.of(GetAttackProtectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant&#39;s attack protection settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myProtection = Auth0Functions.getAttackProtection();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAttackProtectionResult> getAttackProtectionPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getAttackProtection:getAttackProtection", TypeShape.of(GetAttackProtectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBranding = Auth0Functions.getBranding();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingResult> getBranding() {
        return getBranding(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBranding = Auth0Functions.getBranding();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBrandingResult> getBrandingPlain() {
        return getBrandingPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBranding = Auth0Functions.getBranding();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingResult> getBranding(InvokeArgs args) {
        return getBranding(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBranding = Auth0Functions.getBranding();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBrandingResult> getBrandingPlain(InvokeArgs args) {
        return getBrandingPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBranding = Auth0Functions.getBranding();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingResult> getBranding(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getBranding:getBranding", TypeShape.of(GetBrandingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBranding = Auth0Functions.getBranding();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingResult> getBranding(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getBranding:getBranding", TypeShape.of(GetBrandingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBranding = Auth0Functions.getBranding();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBrandingResult> getBrandingPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getBranding:getBranding", TypeShape.of(GetBrandingResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding theme settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBrandingTheme = Auth0Functions.getBrandingTheme();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingThemeResult> getBrandingTheme() {
        return getBrandingTheme(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding theme settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBrandingTheme = Auth0Functions.getBrandingTheme();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBrandingThemeResult> getBrandingThemePlain() {
        return getBrandingThemePlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding theme settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBrandingTheme = Auth0Functions.getBrandingTheme();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingThemeResult> getBrandingTheme(InvokeArgs args) {
        return getBrandingTheme(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding theme settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBrandingTheme = Auth0Functions.getBrandingTheme();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBrandingThemeResult> getBrandingThemePlain(InvokeArgs args) {
        return getBrandingThemePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding theme settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBrandingTheme = Auth0Functions.getBrandingTheme();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingThemeResult> getBrandingTheme(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getBrandingTheme:getBrandingTheme", TypeShape.of(GetBrandingThemeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding theme settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBrandingTheme = Auth0Functions.getBrandingTheme();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBrandingThemeResult> getBrandingTheme(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getBrandingTheme:getBrandingTheme", TypeShape.of(GetBrandingThemeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant&#39;s branding theme settings.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myBrandingTheme = Auth0Functions.getBrandingTheme();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBrandingThemeResult> getBrandingThemePlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getBrandingTheme:getBrandingTheme", TypeShape.of(GetBrandingThemeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 application client by `client_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Client loaded using its name.
     *         final var some-client-by-name = Auth0Functions.getClient(GetClientArgs.builder()
     *             .name("Name of my Application")
     *             .build());
     * 
     *         // An Auth0 Client loaded using its ID.
     *         final var some-client-by-id = Auth0Functions.getClient(GetClientArgs.builder()
     *             .clientId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientResult> getClient() {
        return getClient(GetClientArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 application client by `client_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Client loaded using its name.
     *         final var some-client-by-name = Auth0Functions.getClient(GetClientArgs.builder()
     *             .name("Name of my Application")
     *             .build());
     * 
     *         // An Auth0 Client loaded using its ID.
     *         final var some-client-by-id = Auth0Functions.getClient(GetClientArgs.builder()
     *             .clientId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientResult> getClientPlain() {
        return getClientPlain(GetClientPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 application client by `client_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Client loaded using its name.
     *         final var some-client-by-name = Auth0Functions.getClient(GetClientArgs.builder()
     *             .name("Name of my Application")
     *             .build());
     * 
     *         // An Auth0 Client loaded using its ID.
     *         final var some-client-by-id = Auth0Functions.getClient(GetClientArgs.builder()
     *             .clientId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientResult> getClient(GetClientArgs args) {
        return getClient(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 application client by `client_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Client loaded using its name.
     *         final var some-client-by-name = Auth0Functions.getClient(GetClientArgs.builder()
     *             .name("Name of my Application")
     *             .build());
     * 
     *         // An Auth0 Client loaded using its ID.
     *         final var some-client-by-id = Auth0Functions.getClient(GetClientArgs.builder()
     *             .clientId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientResult> getClientPlain(GetClientPlainArgs args) {
        return getClientPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 application client by `client_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Client loaded using its name.
     *         final var some-client-by-name = Auth0Functions.getClient(GetClientArgs.builder()
     *             .name("Name of my Application")
     *             .build());
     * 
     *         // An Auth0 Client loaded using its ID.
     *         final var some-client-by-id = Auth0Functions.getClient(GetClientArgs.builder()
     *             .clientId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientResult> getClient(GetClientArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getClient:getClient", TypeShape.of(GetClientResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 application client by `client_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Client loaded using its name.
     *         final var some-client-by-name = Auth0Functions.getClient(GetClientArgs.builder()
     *             .name("Name of my Application")
     *             .build());
     * 
     *         // An Auth0 Client loaded using its ID.
     *         final var some-client-by-id = Auth0Functions.getClient(GetClientArgs.builder()
     *             .clientId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientResult> getClient(GetClientArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getClient:getClient", TypeShape.of(GetClientResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 application client by `client_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Client loaded using its name.
     *         final var some-client-by-name = Auth0Functions.getClient(GetClientArgs.builder()
     *             .name("Name of my Application")
     *             .build());
     * 
     *         // An Auth0 Client loaded using its ID.
     *         final var some-client-by-id = Auth0Functions.getClient(GetClientArgs.builder()
     *             .clientId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientResult> getClientPlain(GetClientPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getClient:getClient", TypeShape.of(GetClientResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a list of Auth0 application clients with optional filtering.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Auth0 clients with "External" in the name
     *         final var externalApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .nameFilter("External")
     *             .build());
     * 
     *         // Auth0 clients filtered by non_interactive or spa app type
     *         final var m2mApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .appTypes(            
     *                 "non_interactive",
     *                 "spa")
     *             .build());
     * 
     *         // Auth0 clients filtered by is_first_party equal to true
     *         final var firstPartyApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .isFirstParty(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsResult> getClients() {
        return getClients(GetClientsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a list of Auth0 application clients with optional filtering.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Auth0 clients with "External" in the name
     *         final var externalApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .nameFilter("External")
     *             .build());
     * 
     *         // Auth0 clients filtered by non_interactive or spa app type
     *         final var m2mApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .appTypes(            
     *                 "non_interactive",
     *                 "spa")
     *             .build());
     * 
     *         // Auth0 clients filtered by is_first_party equal to true
     *         final var firstPartyApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .isFirstParty(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientsResult> getClientsPlain() {
        return getClientsPlain(GetClientsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a list of Auth0 application clients with optional filtering.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Auth0 clients with "External" in the name
     *         final var externalApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .nameFilter("External")
     *             .build());
     * 
     *         // Auth0 clients filtered by non_interactive or spa app type
     *         final var m2mApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .appTypes(            
     *                 "non_interactive",
     *                 "spa")
     *             .build());
     * 
     *         // Auth0 clients filtered by is_first_party equal to true
     *         final var firstPartyApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .isFirstParty(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsResult> getClients(GetClientsArgs args) {
        return getClients(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a list of Auth0 application clients with optional filtering.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Auth0 clients with "External" in the name
     *         final var externalApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .nameFilter("External")
     *             .build());
     * 
     *         // Auth0 clients filtered by non_interactive or spa app type
     *         final var m2mApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .appTypes(            
     *                 "non_interactive",
     *                 "spa")
     *             .build());
     * 
     *         // Auth0 clients filtered by is_first_party equal to true
     *         final var firstPartyApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .isFirstParty(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientsResult> getClientsPlain(GetClientsPlainArgs args) {
        return getClientsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a list of Auth0 application clients with optional filtering.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Auth0 clients with "External" in the name
     *         final var externalApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .nameFilter("External")
     *             .build());
     * 
     *         // Auth0 clients filtered by non_interactive or spa app type
     *         final var m2mApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .appTypes(            
     *                 "non_interactive",
     *                 "spa")
     *             .build());
     * 
     *         // Auth0 clients filtered by is_first_party equal to true
     *         final var firstPartyApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .isFirstParty(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsResult> getClients(GetClientsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getClients:getClients", TypeShape.of(GetClientsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a list of Auth0 application clients with optional filtering.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Auth0 clients with "External" in the name
     *         final var externalApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .nameFilter("External")
     *             .build());
     * 
     *         // Auth0 clients filtered by non_interactive or spa app type
     *         final var m2mApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .appTypes(            
     *                 "non_interactive",
     *                 "spa")
     *             .build());
     * 
     *         // Auth0 clients filtered by is_first_party equal to true
     *         final var firstPartyApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .isFirstParty(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientsResult> getClients(GetClientsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getClients:getClients", TypeShape.of(GetClientsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a list of Auth0 application clients with optional filtering.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetClientsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // Auth0 clients with "External" in the name
     *         final var externalApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .nameFilter("External")
     *             .build());
     * 
     *         // Auth0 clients filtered by non_interactive or spa app type
     *         final var m2mApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .appTypes(            
     *                 "non_interactive",
     *                 "spa")
     *             .build());
     * 
     *         // Auth0 clients filtered by is_first_party equal to true
     *         final var firstPartyApps = Auth0Functions.getClients(GetClientsArgs.builder()
     *             .isFirstParty(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientsResult> getClientsPlain(GetClientsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getClients:getClients", TypeShape.of(GetClientsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 connection by `connection_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Connection loaded using its name.
     *         final var some-connection-by-name = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .name("Acceptance-Test-Connection-{{.testName}}")
     *             .build());
     * 
     *         // An Auth0 Connection loaded using its ID.
     *         final var some-connection-by-id = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .connectionId("con_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionResult> getConnection() {
        return getConnection(GetConnectionArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 connection by `connection_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Connection loaded using its name.
     *         final var some-connection-by-name = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .name("Acceptance-Test-Connection-{{.testName}}")
     *             .build());
     * 
     *         // An Auth0 Connection loaded using its ID.
     *         final var some-connection-by-id = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .connectionId("con_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionResult> getConnectionPlain() {
        return getConnectionPlain(GetConnectionPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 connection by `connection_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Connection loaded using its name.
     *         final var some-connection-by-name = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .name("Acceptance-Test-Connection-{{.testName}}")
     *             .build());
     * 
     *         // An Auth0 Connection loaded using its ID.
     *         final var some-connection-by-id = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .connectionId("con_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionResult> getConnection(GetConnectionArgs args) {
        return getConnection(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 connection by `connection_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Connection loaded using its name.
     *         final var some-connection-by-name = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .name("Acceptance-Test-Connection-{{.testName}}")
     *             .build());
     * 
     *         // An Auth0 Connection loaded using its ID.
     *         final var some-connection-by-id = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .connectionId("con_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionResult> getConnectionPlain(GetConnectionPlainArgs args) {
        return getConnectionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 connection by `connection_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Connection loaded using its name.
     *         final var some-connection-by-name = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .name("Acceptance-Test-Connection-{{.testName}}")
     *             .build());
     * 
     *         // An Auth0 Connection loaded using its ID.
     *         final var some-connection-by-id = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .connectionId("con_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionResult> getConnection(GetConnectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getConnection:getConnection", TypeShape.of(GetConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 connection by `connection_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Connection loaded using its name.
     *         final var some-connection-by-name = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .name("Acceptance-Test-Connection-{{.testName}}")
     *             .build());
     * 
     *         // An Auth0 Connection loaded using its ID.
     *         final var some-connection-by-id = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .connectionId("con_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionResult> getConnection(GetConnectionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getConnection:getConnection", TypeShape.of(GetConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 connection by `connection_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Connection loaded using its name.
     *         final var some-connection-by-name = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .name("Acceptance-Test-Connection-{{.testName}}")
     *             .build());
     * 
     *         // An Auth0 Connection loaded using its ID.
     *         final var some-connection-by-id = Auth0Functions.getConnection(GetConnectionArgs.builder()
     *             .connectionId("con_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionResult> getConnectionPlain(GetConnectionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getConnection:getConnection", TypeShape.of(GetConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a SCIM configuration for an Auth0 connection by `connection_id`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Connection;
     * import com.pulumi.auth0.ConnectionArgs;
     * import com.pulumi.auth0.inputs.ConnectionOptionsArgs;
     * import com.pulumi.auth0.ConnectionScimConfiguration;
     * import com.pulumi.auth0.ConnectionScimConfigurationArgs;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionScimConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var myEnterpriseConnection = new Connection("myEnterpriseConnection", ConnectionArgs.builder()
     *             .name("my-enterprise-connection")
     *             .displayName("My Enterprise Connection")
     *             .strategy("okta")
     *             .options(ConnectionOptionsArgs.builder()
     *                 .clientId("1234567")
     *                 .clientSecret("1234567")
     *                 .issuer("https://example.okta.com")
     *                 .jwksUri("https://example.okta.com/oauth2/v1/keys")
     *                 .tokenEndpoint("https://example.okta.com/oauth2/v1/token")
     *                 .authorizationEndpoint("https://example.okta.com/oauth2/v1/authorize")
     *                 .build())
     *             .build());
     * 
     *         var myConnScimConfiguration = new ConnectionScimConfiguration("myConnScimConfiguration", ConnectionScimConfigurationArgs.builder()
     *             .connectionId(myEnterpriseConnection.id())
     *             .build());
     * 
     *         // A data source for an Auth0 Connection SCIM Configuration.
     *         final var myConnScimConfigurationData = Auth0Functions.getConnectionScimConfiguration(GetConnectionScimConfigurationArgs.builder()
     *             .connectionId(myConnScimConfiguration.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionScimConfigurationResult> getConnectionScimConfiguration(GetConnectionScimConfigurationArgs args) {
        return getConnectionScimConfiguration(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a SCIM configuration for an Auth0 connection by `connection_id`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Connection;
     * import com.pulumi.auth0.ConnectionArgs;
     * import com.pulumi.auth0.inputs.ConnectionOptionsArgs;
     * import com.pulumi.auth0.ConnectionScimConfiguration;
     * import com.pulumi.auth0.ConnectionScimConfigurationArgs;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionScimConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var myEnterpriseConnection = new Connection("myEnterpriseConnection", ConnectionArgs.builder()
     *             .name("my-enterprise-connection")
     *             .displayName("My Enterprise Connection")
     *             .strategy("okta")
     *             .options(ConnectionOptionsArgs.builder()
     *                 .clientId("1234567")
     *                 .clientSecret("1234567")
     *                 .issuer("https://example.okta.com")
     *                 .jwksUri("https://example.okta.com/oauth2/v1/keys")
     *                 .tokenEndpoint("https://example.okta.com/oauth2/v1/token")
     *                 .authorizationEndpoint("https://example.okta.com/oauth2/v1/authorize")
     *                 .build())
     *             .build());
     * 
     *         var myConnScimConfiguration = new ConnectionScimConfiguration("myConnScimConfiguration", ConnectionScimConfigurationArgs.builder()
     *             .connectionId(myEnterpriseConnection.id())
     *             .build());
     * 
     *         // A data source for an Auth0 Connection SCIM Configuration.
     *         final var myConnScimConfigurationData = Auth0Functions.getConnectionScimConfiguration(GetConnectionScimConfigurationArgs.builder()
     *             .connectionId(myConnScimConfiguration.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionScimConfigurationResult> getConnectionScimConfigurationPlain(GetConnectionScimConfigurationPlainArgs args) {
        return getConnectionScimConfigurationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a SCIM configuration for an Auth0 connection by `connection_id`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Connection;
     * import com.pulumi.auth0.ConnectionArgs;
     * import com.pulumi.auth0.inputs.ConnectionOptionsArgs;
     * import com.pulumi.auth0.ConnectionScimConfiguration;
     * import com.pulumi.auth0.ConnectionScimConfigurationArgs;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionScimConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var myEnterpriseConnection = new Connection("myEnterpriseConnection", ConnectionArgs.builder()
     *             .name("my-enterprise-connection")
     *             .displayName("My Enterprise Connection")
     *             .strategy("okta")
     *             .options(ConnectionOptionsArgs.builder()
     *                 .clientId("1234567")
     *                 .clientSecret("1234567")
     *                 .issuer("https://example.okta.com")
     *                 .jwksUri("https://example.okta.com/oauth2/v1/keys")
     *                 .tokenEndpoint("https://example.okta.com/oauth2/v1/token")
     *                 .authorizationEndpoint("https://example.okta.com/oauth2/v1/authorize")
     *                 .build())
     *             .build());
     * 
     *         var myConnScimConfiguration = new ConnectionScimConfiguration("myConnScimConfiguration", ConnectionScimConfigurationArgs.builder()
     *             .connectionId(myEnterpriseConnection.id())
     *             .build());
     * 
     *         // A data source for an Auth0 Connection SCIM Configuration.
     *         final var myConnScimConfigurationData = Auth0Functions.getConnectionScimConfiguration(GetConnectionScimConfigurationArgs.builder()
     *             .connectionId(myConnScimConfiguration.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionScimConfigurationResult> getConnectionScimConfiguration(GetConnectionScimConfigurationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getConnectionScimConfiguration:getConnectionScimConfiguration", TypeShape.of(GetConnectionScimConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a SCIM configuration for an Auth0 connection by `connection_id`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Connection;
     * import com.pulumi.auth0.ConnectionArgs;
     * import com.pulumi.auth0.inputs.ConnectionOptionsArgs;
     * import com.pulumi.auth0.ConnectionScimConfiguration;
     * import com.pulumi.auth0.ConnectionScimConfigurationArgs;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionScimConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var myEnterpriseConnection = new Connection("myEnterpriseConnection", ConnectionArgs.builder()
     *             .name("my-enterprise-connection")
     *             .displayName("My Enterprise Connection")
     *             .strategy("okta")
     *             .options(ConnectionOptionsArgs.builder()
     *                 .clientId("1234567")
     *                 .clientSecret("1234567")
     *                 .issuer("https://example.okta.com")
     *                 .jwksUri("https://example.okta.com/oauth2/v1/keys")
     *                 .tokenEndpoint("https://example.okta.com/oauth2/v1/token")
     *                 .authorizationEndpoint("https://example.okta.com/oauth2/v1/authorize")
     *                 .build())
     *             .build());
     * 
     *         var myConnScimConfiguration = new ConnectionScimConfiguration("myConnScimConfiguration", ConnectionScimConfigurationArgs.builder()
     *             .connectionId(myEnterpriseConnection.id())
     *             .build());
     * 
     *         // A data source for an Auth0 Connection SCIM Configuration.
     *         final var myConnScimConfigurationData = Auth0Functions.getConnectionScimConfiguration(GetConnectionScimConfigurationArgs.builder()
     *             .connectionId(myConnScimConfiguration.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionScimConfigurationResult> getConnectionScimConfiguration(GetConnectionScimConfigurationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getConnectionScimConfiguration:getConnectionScimConfiguration", TypeShape.of(GetConnectionScimConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a SCIM configuration for an Auth0 connection by `connection_id`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Connection;
     * import com.pulumi.auth0.ConnectionArgs;
     * import com.pulumi.auth0.inputs.ConnectionOptionsArgs;
     * import com.pulumi.auth0.ConnectionScimConfiguration;
     * import com.pulumi.auth0.ConnectionScimConfigurationArgs;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetConnectionScimConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var myEnterpriseConnection = new Connection("myEnterpriseConnection", ConnectionArgs.builder()
     *             .name("my-enterprise-connection")
     *             .displayName("My Enterprise Connection")
     *             .strategy("okta")
     *             .options(ConnectionOptionsArgs.builder()
     *                 .clientId("1234567")
     *                 .clientSecret("1234567")
     *                 .issuer("https://example.okta.com")
     *                 .jwksUri("https://example.okta.com/oauth2/v1/keys")
     *                 .tokenEndpoint("https://example.okta.com/oauth2/v1/token")
     *                 .authorizationEndpoint("https://example.okta.com/oauth2/v1/authorize")
     *                 .build())
     *             .build());
     * 
     *         var myConnScimConfiguration = new ConnectionScimConfiguration("myConnScimConfiguration", ConnectionScimConfigurationArgs.builder()
     *             .connectionId(myEnterpriseConnection.id())
     *             .build());
     * 
     *         // A data source for an Auth0 Connection SCIM Configuration.
     *         final var myConnScimConfigurationData = Auth0Functions.getConnectionScimConfiguration(GetConnectionScimConfigurationArgs.builder()
     *             .connectionId(myConnScimConfiguration.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionScimConfigurationResult> getConnectionScimConfigurationPlain(GetConnectionScimConfigurationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getConnectionScimConfiguration:getConnectionScimConfiguration", TypeShape.of(GetConnectionScimConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve the custom domain configuration.
     * 
     */
    public static Output<GetCustomDomainResult> getCustomDomain() {
        return getCustomDomain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve the custom domain configuration.
     * 
     */
    public static CompletableFuture<GetCustomDomainResult> getCustomDomainPlain() {
        return getCustomDomainPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve the custom domain configuration.
     * 
     */
    public static Output<GetCustomDomainResult> getCustomDomain(InvokeArgs args) {
        return getCustomDomain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve the custom domain configuration.
     * 
     */
    public static CompletableFuture<GetCustomDomainResult> getCustomDomainPlain(InvokeArgs args) {
        return getCustomDomainPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve the custom domain configuration.
     * 
     */
    public static Output<GetCustomDomainResult> getCustomDomain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getCustomDomain:getCustomDomain", TypeShape.of(GetCustomDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve the custom domain configuration.
     * 
     */
    public static Output<GetCustomDomainResult> getCustomDomain(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getCustomDomain:getCustomDomain", TypeShape.of(GetCustomDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve the custom domain configuration.
     * 
     */
    public static CompletableFuture<GetCustomDomainResult> getCustomDomainPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getCustomDomain:getCustomDomain", TypeShape.of(GetCustomDomainResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Flow by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFlowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 flow loaded using its ID.
     *         final var myFlowData = Auth0Functions.getFlow(GetFlowArgs.builder()
     *             .id("af_5CTYdsXHLoLXD7ZVwvFHew")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlowResult> getFlow(GetFlowArgs args) {
        return getFlow(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 Flow by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFlowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 flow loaded using its ID.
     *         final var myFlowData = Auth0Functions.getFlow(GetFlowArgs.builder()
     *             .id("af_5CTYdsXHLoLXD7ZVwvFHew")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFlowResult> getFlowPlain(GetFlowPlainArgs args) {
        return getFlowPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 Flow by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFlowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 flow loaded using its ID.
     *         final var myFlowData = Auth0Functions.getFlow(GetFlowArgs.builder()
     *             .id("af_5CTYdsXHLoLXD7ZVwvFHew")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlowResult> getFlow(GetFlowArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getFlow:getFlow", TypeShape.of(GetFlowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Flow by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFlowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 flow loaded using its ID.
     *         final var myFlowData = Auth0Functions.getFlow(GetFlowArgs.builder()
     *             .id("af_5CTYdsXHLoLXD7ZVwvFHew")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlowResult> getFlow(GetFlowArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getFlow:getFlow", TypeShape.of(GetFlowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Flow by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFlowArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 flow loaded using its ID.
     *         final var myFlowData = Auth0Functions.getFlow(GetFlowArgs.builder()
     *             .id("af_5CTYdsXHLoLXD7ZVwvFHew")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFlowResult> getFlowPlain(GetFlowPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getFlow:getFlow", TypeShape.of(GetFlowResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Flow Vault Connection by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFlowVaultConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 flow vault connection loaded using its ID.
     *         final var dataConnection = Auth0Functions.getFlowVaultConnection(GetFlowVaultConnectionArgs.builder()
     *             .id("ac_9m2uqjHsqs19riN9N6sZQ7")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlowVaultConnectionResult> getFlowVaultConnection(GetFlowVaultConnectionArgs args) {
        return getFlowVaultConnection(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 Flow Vault Connection by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFlowVaultConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 flow vault connection loaded using its ID.
     *         final var dataConnection = Auth0Functions.getFlowVaultConnection(GetFlowVaultConnectionArgs.builder()
     *             .id("ac_9m2uqjHsqs19riN9N6sZQ7")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFlowVaultConnectionResult> getFlowVaultConnectionPlain(GetFlowVaultConnectionPlainArgs args) {
        return getFlowVaultConnectionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 Flow Vault Connection by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFlowVaultConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 flow vault connection loaded using its ID.
     *         final var dataConnection = Auth0Functions.getFlowVaultConnection(GetFlowVaultConnectionArgs.builder()
     *             .id("ac_9m2uqjHsqs19riN9N6sZQ7")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlowVaultConnectionResult> getFlowVaultConnection(GetFlowVaultConnectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getFlowVaultConnection:getFlowVaultConnection", TypeShape.of(GetFlowVaultConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Flow Vault Connection by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFlowVaultConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 flow vault connection loaded using its ID.
     *         final var dataConnection = Auth0Functions.getFlowVaultConnection(GetFlowVaultConnectionArgs.builder()
     *             .id("ac_9m2uqjHsqs19riN9N6sZQ7")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFlowVaultConnectionResult> getFlowVaultConnection(GetFlowVaultConnectionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getFlowVaultConnection:getFlowVaultConnection", TypeShape.of(GetFlowVaultConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Flow Vault Connection by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFlowVaultConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 flow vault connection loaded using its ID.
     *         final var dataConnection = Auth0Functions.getFlowVaultConnection(GetFlowVaultConnectionArgs.builder()
     *             .id("ac_9m2uqjHsqs19riN9N6sZQ7")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFlowVaultConnectionResult> getFlowVaultConnectionPlain(GetFlowVaultConnectionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getFlowVaultConnection:getFlowVaultConnection", TypeShape.of(GetFlowVaultConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Form by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFormArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 form loaded using its ID.
     *         final var myFormData = Auth0Functions.getForm(GetFormArgs.builder()
     *             .id("ap_31LxRJphZF1Kqzf2zBgmgA")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFormResult> getForm(GetFormArgs args) {
        return getForm(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 Form by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFormArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 form loaded using its ID.
     *         final var myFormData = Auth0Functions.getForm(GetFormArgs.builder()
     *             .id("ap_31LxRJphZF1Kqzf2zBgmgA")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFormResult> getFormPlain(GetFormPlainArgs args) {
        return getFormPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 Form by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFormArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 form loaded using its ID.
     *         final var myFormData = Auth0Functions.getForm(GetFormArgs.builder()
     *             .id("ap_31LxRJphZF1Kqzf2zBgmgA")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFormResult> getForm(GetFormArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getForm:getForm", TypeShape.of(GetFormResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Form by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFormArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 form loaded using its ID.
     *         final var myFormData = Auth0Functions.getForm(GetFormArgs.builder()
     *             .id("ap_31LxRJphZF1Kqzf2zBgmgA")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetFormResult> getForm(GetFormArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getForm:getForm", TypeShape.of(GetFormResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Form by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetFormArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 form loaded using its ID.
     *         final var myFormData = Auth0Functions.getForm(GetFormArgs.builder()
     *             .id("ap_31LxRJphZF1Kqzf2zBgmgA")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetFormResult> getFormPlain(GetFormPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getForm:getForm", TypeShape.of(GetFormResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 organization by `organization_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Organization loaded using its name.
     *         final var some-organization-by-name = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .name("my-org")
     *             .build());
     * 
     *         // An Auth0 Organization loaded using its ID.
     *         final var some-organization-by-id = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .organizationId("org_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization() {
        return getOrganization(GetOrganizationArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 organization by `organization_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Organization loaded using its name.
     *         final var some-organization-by-name = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .name("my-org")
     *             .build());
     * 
     *         // An Auth0 Organization loaded using its ID.
     *         final var some-organization-by-id = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .organizationId("org_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain() {
        return getOrganizationPlain(GetOrganizationPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 organization by `organization_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Organization loaded using its name.
     *         final var some-organization-by-name = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .name("my-org")
     *             .build());
     * 
     *         // An Auth0 Organization loaded using its ID.
     *         final var some-organization-by-id = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .organizationId("org_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args) {
        return getOrganization(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 organization by `organization_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Organization loaded using its name.
     *         final var some-organization-by-name = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .name("my-org")
     *             .build());
     * 
     *         // An Auth0 Organization loaded using its ID.
     *         final var some-organization-by-id = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .organizationId("org_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args) {
        return getOrganizationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 organization by `organization_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Organization loaded using its name.
     *         final var some-organization-by-name = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .name("my-org")
     *             .build());
     * 
     *         // An Auth0 Organization loaded using its ID.
     *         final var some-organization-by-id = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .organizationId("org_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 organization by `organization_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Organization loaded using its name.
     *         final var some-organization-by-name = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .name("my-org")
     *             .build());
     * 
     *         // An Auth0 Organization loaded using its ID.
     *         final var some-organization-by-id = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .organizationId("org_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationResult> getOrganization(GetOrganizationArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 organization by `organization_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetOrganizationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Organization loaded using its name.
     *         final var some-organization-by-name = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .name("my-org")
     *             .build());
     * 
     *         // An Auth0 Organization loaded using its ID.
     *         final var some-organization-by-id = Auth0Functions.getOrganization(GetOrganizationArgs.builder()
     *             .organizationId("org_abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationResult> getOrganizationPlain(GetOrganizationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getOrganization:getOrganization", TypeShape.of(GetOrganizationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access the HTML for the login, reset password, multi-factor authentication and error pages.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myPages = Auth0Functions.getPages();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesResult> getPages() {
        return getPages(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access the HTML for the login, reset password, multi-factor authentication and error pages.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myPages = Auth0Functions.getPages();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesResult> getPagesPlain() {
        return getPagesPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access the HTML for the login, reset password, multi-factor authentication and error pages.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myPages = Auth0Functions.getPages();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesResult> getPages(InvokeArgs args) {
        return getPages(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access the HTML for the login, reset password, multi-factor authentication and error pages.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myPages = Auth0Functions.getPages();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesResult> getPagesPlain(InvokeArgs args) {
        return getPagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access the HTML for the login, reset password, multi-factor authentication and error pages.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myPages = Auth0Functions.getPages();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesResult> getPages(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getPages:getPages", TypeShape.of(GetPagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access the HTML for the login, reset password, multi-factor authentication and error pages.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myPages = Auth0Functions.getPages();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPagesResult> getPages(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getPages:getPages", TypeShape.of(GetPagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access the HTML for the login, reset password, multi-factor authentication and error pages.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myPages = Auth0Functions.getPages();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPagesResult> getPagesPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getPages:getPages", TypeShape.of(GetPagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 prompt screen partials by `prompt_type`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetPromptScreenPartialsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var promptScreenPartials = Auth0Functions.getPromptScreenPartials(GetPromptScreenPartialsArgs.builder()
     *             .promptType("prompt-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPromptScreenPartialsResult> getPromptScreenPartials(GetPromptScreenPartialsArgs args) {
        return getPromptScreenPartials(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 prompt screen partials by `prompt_type`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetPromptScreenPartialsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var promptScreenPartials = Auth0Functions.getPromptScreenPartials(GetPromptScreenPartialsArgs.builder()
     *             .promptType("prompt-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPromptScreenPartialsResult> getPromptScreenPartialsPlain(GetPromptScreenPartialsPlainArgs args) {
        return getPromptScreenPartialsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 prompt screen partials by `prompt_type`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetPromptScreenPartialsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var promptScreenPartials = Auth0Functions.getPromptScreenPartials(GetPromptScreenPartialsArgs.builder()
     *             .promptType("prompt-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPromptScreenPartialsResult> getPromptScreenPartials(GetPromptScreenPartialsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getPromptScreenPartials:getPromptScreenPartials", TypeShape.of(GetPromptScreenPartialsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 prompt screen partials by `prompt_type`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetPromptScreenPartialsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var promptScreenPartials = Auth0Functions.getPromptScreenPartials(GetPromptScreenPartialsArgs.builder()
     *             .promptType("prompt-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPromptScreenPartialsResult> getPromptScreenPartials(GetPromptScreenPartialsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getPromptScreenPartials:getPromptScreenPartials", TypeShape.of(GetPromptScreenPartialsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 prompt screen partials by `prompt_type`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetPromptScreenPartialsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var promptScreenPartials = Auth0Functions.getPromptScreenPartials(GetPromptScreenPartialsArgs.builder()
     *             .promptType("prompt-name")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPromptScreenPartialsResult> getPromptScreenPartialsPlain(GetPromptScreenPartialsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getPromptScreenPartials:getPromptScreenPartials", TypeShape.of(GetPromptScreenPartialsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 prompt screen settings by `prompt_type` and `screen_name`
     * 
     */
    public static Output<GetPromptScreenRendererResult> getPromptScreenRenderer(GetPromptScreenRendererArgs args) {
        return getPromptScreenRenderer(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 prompt screen settings by `prompt_type` and `screen_name`
     * 
     */
    public static CompletableFuture<GetPromptScreenRendererResult> getPromptScreenRendererPlain(GetPromptScreenRendererPlainArgs args) {
        return getPromptScreenRendererPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 prompt screen settings by `prompt_type` and `screen_name`
     * 
     */
    public static Output<GetPromptScreenRendererResult> getPromptScreenRenderer(GetPromptScreenRendererArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getPromptScreenRenderer:getPromptScreenRenderer", TypeShape.of(GetPromptScreenRendererResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 prompt screen settings by `prompt_type` and `screen_name`
     * 
     */
    public static Output<GetPromptScreenRendererResult> getPromptScreenRenderer(GetPromptScreenRendererArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getPromptScreenRenderer:getPromptScreenRenderer", TypeShape.of(GetPromptScreenRendererResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 prompt screen settings by `prompt_type` and `screen_name`
     * 
     */
    public static CompletableFuture<GetPromptScreenRendererResult> getPromptScreenRendererPlain(GetPromptScreenRendererPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getPromptScreenRenderer:getPromptScreenRenderer", TypeShape.of(GetPromptScreenRendererResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 resource server by `resource_server_id` or `identifier`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetResourceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Resource Server loaded using its identifier.
     *         final var some-resource-server-by-identifier = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .identifier("https://my-api.com/v1")
     *             .build());
     * 
     *         // An Auth0 Resource Server loaded using its ID.
     *         final var some-resource-server-by-id = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .resourceServerId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceServerResult> getResourceServer() {
        return getResourceServer(GetResourceServerArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 resource server by `resource_server_id` or `identifier`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetResourceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Resource Server loaded using its identifier.
     *         final var some-resource-server-by-identifier = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .identifier("https://my-api.com/v1")
     *             .build());
     * 
     *         // An Auth0 Resource Server loaded using its ID.
     *         final var some-resource-server-by-id = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .resourceServerId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourceServerResult> getResourceServerPlain() {
        return getResourceServerPlain(GetResourceServerPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 resource server by `resource_server_id` or `identifier`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetResourceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Resource Server loaded using its identifier.
     *         final var some-resource-server-by-identifier = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .identifier("https://my-api.com/v1")
     *             .build());
     * 
     *         // An Auth0 Resource Server loaded using its ID.
     *         final var some-resource-server-by-id = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .resourceServerId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceServerResult> getResourceServer(GetResourceServerArgs args) {
        return getResourceServer(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 resource server by `resource_server_id` or `identifier`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetResourceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Resource Server loaded using its identifier.
     *         final var some-resource-server-by-identifier = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .identifier("https://my-api.com/v1")
     *             .build());
     * 
     *         // An Auth0 Resource Server loaded using its ID.
     *         final var some-resource-server-by-id = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .resourceServerId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourceServerResult> getResourceServerPlain(GetResourceServerPlainArgs args) {
        return getResourceServerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 resource server by `resource_server_id` or `identifier`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetResourceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Resource Server loaded using its identifier.
     *         final var some-resource-server-by-identifier = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .identifier("https://my-api.com/v1")
     *             .build());
     * 
     *         // An Auth0 Resource Server loaded using its ID.
     *         final var some-resource-server-by-id = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .resourceServerId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceServerResult> getResourceServer(GetResourceServerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getResourceServer:getResourceServer", TypeShape.of(GetResourceServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 resource server by `resource_server_id` or `identifier`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetResourceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Resource Server loaded using its identifier.
     *         final var some-resource-server-by-identifier = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .identifier("https://my-api.com/v1")
     *             .build());
     * 
     *         // An Auth0 Resource Server loaded using its ID.
     *         final var some-resource-server-by-id = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .resourceServerId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetResourceServerResult> getResourceServer(GetResourceServerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getResourceServer:getResourceServer", TypeShape.of(GetResourceServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 resource server by `resource_server_id` or `identifier`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetResourceServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Resource Server loaded using its identifier.
     *         final var some-resource-server-by-identifier = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .identifier("https://my-api.com/v1")
     *             .build());
     * 
     *         // An Auth0 Resource Server loaded using its ID.
     *         final var some-resource-server-by-id = Auth0Functions.getResourceServer(GetResourceServerArgs.builder()
     *             .resourceServerId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetResourceServerResult> getResourceServerPlain(GetResourceServerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getResourceServer:getResourceServer", TypeShape.of(GetResourceServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 role by `role_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Role loaded using its name.
     *         final var some-role-by-name = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .name("my-role")
     *             .build());
     * 
     *         // An Auth0 Role loaded using its ID.
     *         final var some-role-by-id = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .roleId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRoleResult> getRole() {
        return getRole(GetRoleArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 role by `role_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Role loaded using its name.
     *         final var some-role-by-name = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .name("my-role")
     *             .build());
     * 
     *         // An Auth0 Role loaded using its ID.
     *         final var some-role-by-id = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .roleId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain() {
        return getRolePlain(GetRolePlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 role by `role_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Role loaded using its name.
     *         final var some-role-by-name = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .name("my-role")
     *             .build());
     * 
     *         // An Auth0 Role loaded using its ID.
     *         final var some-role-by-id = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .roleId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args) {
        return getRole(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 role by `role_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Role loaded using its name.
     *         final var some-role-by-name = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .name("my-role")
     *             .build());
     * 
     *         // An Auth0 Role loaded using its ID.
     *         final var some-role-by-id = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .roleId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain(GetRolePlainArgs args) {
        return getRolePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 role by `role_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Role loaded using its name.
     *         final var some-role-by-name = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .name("my-role")
     *             .build());
     * 
     *         // An Auth0 Role loaded using its ID.
     *         final var some-role-by-id = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .roleId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 role by `role_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Role loaded using its name.
     *         final var some-role-by-name = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .name("my-role")
     *             .build());
     * 
     *         // An Auth0 Role loaded using its ID.
     *         final var some-role-by-id = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .roleId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRoleResult> getRole(GetRoleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 role by `role_id` or `name`.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetRoleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Role loaded using its name.
     *         final var some-role-by-name = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .name("my-role")
     *             .build());
     * 
     *         // An Auth0 Role loaded using its ID.
     *         final var some-role-by-id = Auth0Functions.getRole(GetRoleArgs.builder()
     *             .roleId("abcdefghkijklmnopqrstuvwxyz0123456789")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRoleResult> getRolePlain(GetRolePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getRole:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Self-Service Profile by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetSelfServiceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Self-Service- Profile loaded using it's ID.
     *         final var auth0SelfServiceProfile = Auth0Functions.getSelfServiceProfile(GetSelfServiceProfileArgs.builder()
     *             .id("some-profile-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSelfServiceProfileResult> getSelfServiceProfile(GetSelfServiceProfileArgs args) {
        return getSelfServiceProfile(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 Self-Service Profile by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetSelfServiceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Self-Service- Profile loaded using it's ID.
     *         final var auth0SelfServiceProfile = Auth0Functions.getSelfServiceProfile(GetSelfServiceProfileArgs.builder()
     *             .id("some-profile-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSelfServiceProfileResult> getSelfServiceProfilePlain(GetSelfServiceProfilePlainArgs args) {
        return getSelfServiceProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 Self-Service Profile by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetSelfServiceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Self-Service- Profile loaded using it's ID.
     *         final var auth0SelfServiceProfile = Auth0Functions.getSelfServiceProfile(GetSelfServiceProfileArgs.builder()
     *             .id("some-profile-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSelfServiceProfileResult> getSelfServiceProfile(GetSelfServiceProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getSelfServiceProfile:getSelfServiceProfile", TypeShape.of(GetSelfServiceProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Self-Service Profile by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetSelfServiceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Self-Service- Profile loaded using it's ID.
     *         final var auth0SelfServiceProfile = Auth0Functions.getSelfServiceProfile(GetSelfServiceProfileArgs.builder()
     *             .id("some-profile-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSelfServiceProfileResult> getSelfServiceProfile(GetSelfServiceProfileArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getSelfServiceProfile:getSelfServiceProfile", TypeShape.of(GetSelfServiceProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Self-Service Profile by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetSelfServiceProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Self-Service- Profile loaded using it's ID.
     *         final var auth0SelfServiceProfile = Auth0Functions.getSelfServiceProfile(GetSelfServiceProfileArgs.builder()
     *             .id("some-profile-id")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSelfServiceProfileResult> getSelfServiceProfilePlain(GetSelfServiceProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getSelfServiceProfile:getSelfServiceProfile", TypeShape.of(GetSelfServiceProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve signing keys used by the applications in your tenant. [Learn more](https://auth0.com/docs/get-started/tenant-settings/signing-keys).
     * 
     */
    public static Output<GetSigningKeysResult> getSigningKeys() {
        return getSigningKeys(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve signing keys used by the applications in your tenant. [Learn more](https://auth0.com/docs/get-started/tenant-settings/signing-keys).
     * 
     */
    public static CompletableFuture<GetSigningKeysResult> getSigningKeysPlain() {
        return getSigningKeysPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve signing keys used by the applications in your tenant. [Learn more](https://auth0.com/docs/get-started/tenant-settings/signing-keys).
     * 
     */
    public static Output<GetSigningKeysResult> getSigningKeys(InvokeArgs args) {
        return getSigningKeys(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve signing keys used by the applications in your tenant. [Learn more](https://auth0.com/docs/get-started/tenant-settings/signing-keys).
     * 
     */
    public static CompletableFuture<GetSigningKeysResult> getSigningKeysPlain(InvokeArgs args) {
        return getSigningKeysPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve signing keys used by the applications in your tenant. [Learn more](https://auth0.com/docs/get-started/tenant-settings/signing-keys).
     * 
     */
    public static Output<GetSigningKeysResult> getSigningKeys(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getSigningKeys:getSigningKeys", TypeShape.of(GetSigningKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve signing keys used by the applications in your tenant. [Learn more](https://auth0.com/docs/get-started/tenant-settings/signing-keys).
     * 
     */
    public static Output<GetSigningKeysResult> getSigningKeys(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getSigningKeys:getSigningKeys", TypeShape.of(GetSigningKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve signing keys used by the applications in your tenant. [Learn more](https://auth0.com/docs/get-started/tenant-settings/signing-keys).
     * 
     */
    public static CompletableFuture<GetSigningKeysResult> getSigningKeysPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getSigningKeys:getSigningKeys", TypeShape.of(GetSigningKeysResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant this provider is configured to access.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myTenant = Auth0Functions.getTenant();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTenantResult> getTenant() {
        return getTenant(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant this provider is configured to access.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myTenant = Auth0Functions.getTenant();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTenantResult> getTenantPlain() {
        return getTenantPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant this provider is configured to access.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myTenant = Auth0Functions.getTenant();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTenantResult> getTenant(InvokeArgs args) {
        return getTenant(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant this provider is configured to access.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myTenant = Auth0Functions.getTenant();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTenantResult> getTenantPlain(InvokeArgs args) {
        return getTenantPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the tenant this provider is configured to access.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myTenant = Auth0Functions.getTenant();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTenantResult> getTenant(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getTenant:getTenant", TypeShape.of(GetTenantResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant this provider is configured to access.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myTenant = Auth0Functions.getTenant();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTenantResult> getTenant(InvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getTenant:getTenant", TypeShape.of(GetTenantResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the tenant this provider is configured to access.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var myTenant = Auth0Functions.getTenant();
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTenantResult> getTenantPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getTenant:getTenant", TypeShape.of(GetTenantResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Token Exchange Profile by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetTokenExchangeProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Token Exchange Profile loaded using its ID.
     *         final var myProfile = Auth0Functions.getTokenExchangeProfile(GetTokenExchangeProfileArgs.builder()
     *             .id("tep_Tnvl88SKv98TkMmr")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTokenExchangeProfileResult> getTokenExchangeProfile(GetTokenExchangeProfileArgs args) {
        return getTokenExchangeProfile(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 Token Exchange Profile by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetTokenExchangeProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Token Exchange Profile loaded using its ID.
     *         final var myProfile = Auth0Functions.getTokenExchangeProfile(GetTokenExchangeProfileArgs.builder()
     *             .id("tep_Tnvl88SKv98TkMmr")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTokenExchangeProfileResult> getTokenExchangeProfilePlain(GetTokenExchangeProfilePlainArgs args) {
        return getTokenExchangeProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 Token Exchange Profile by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetTokenExchangeProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Token Exchange Profile loaded using its ID.
     *         final var myProfile = Auth0Functions.getTokenExchangeProfile(GetTokenExchangeProfileArgs.builder()
     *             .id("tep_Tnvl88SKv98TkMmr")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTokenExchangeProfileResult> getTokenExchangeProfile(GetTokenExchangeProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getTokenExchangeProfile:getTokenExchangeProfile", TypeShape.of(GetTokenExchangeProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Token Exchange Profile by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetTokenExchangeProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Token Exchange Profile loaded using its ID.
     *         final var myProfile = Auth0Functions.getTokenExchangeProfile(GetTokenExchangeProfileArgs.builder()
     *             .id("tep_Tnvl88SKv98TkMmr")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTokenExchangeProfileResult> getTokenExchangeProfile(GetTokenExchangeProfileArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getTokenExchangeProfile:getTokenExchangeProfile", TypeShape.of(GetTokenExchangeProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 Token Exchange Profile by `id`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.auth0.Auth0Functions;
     * import com.pulumi.auth0.inputs.GetTokenExchangeProfileArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         // An Auth0 Token Exchange Profile loaded using its ID.
     *         final var myProfile = Auth0Functions.getTokenExchangeProfile(GetTokenExchangeProfileArgs.builder()
     *             .id("tep_Tnvl88SKv98TkMmr")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTokenExchangeProfileResult> getTokenExchangeProfilePlain(GetTokenExchangeProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getTokenExchangeProfile:getTokenExchangeProfile", TypeShape.of(GetTokenExchangeProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 user by `user_id` or by `lucene query`. If filtered by Lucene Query, it should include sufficient filters to retrieve a unique user.
     * 
     */
    public static Output<GetUserResult> getUser() {
        return getUser(GetUserArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 user by `user_id` or by `lucene query`. If filtered by Lucene Query, it should include sufficient filters to retrieve a unique user.
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain() {
        return getUserPlain(GetUserPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 user by `user_id` or by `lucene query`. If filtered by Lucene Query, it should include sufficient filters to retrieve a unique user.
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args) {
        return getUser(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 user by `user_id` or by `lucene query`. If filtered by Lucene Query, it should include sufficient filters to retrieve a unique user.
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args) {
        return getUserPlain(args, InvokeOptions.Empty);
    }
    /**
     * Data source to retrieve a specific Auth0 user by `user_id` or by `lucene query`. If filtered by Lucene Query, it should include sufficient filters to retrieve a unique user.
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 user by `user_id` or by `lucene query`. If filtered by Lucene Query, it should include sufficient filters to retrieve a unique user.
     * 
     */
    public static Output<GetUserResult> getUser(GetUserArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("auth0:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Data source to retrieve a specific Auth0 user by `user_id` or by `lucene query`. If filtered by Lucene Query, it should include sufficient filters to retrieve a unique user.
     * 
     */
    public static CompletableFuture<GetUserResult> getUserPlain(GetUserPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("auth0:index/getUser:getUser", TypeShape.of(GetUserResult.class), args, Utilities.withVersion(options));
    }
}
