// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFormLanguage {
    /**
     * @return Default language for the form.
     * 
     */
    private String default_;
    /**
     * @return Primary language for the form.
     * 
     */
    private String primary;

    private GetFormLanguage() {}
    /**
     * @return Default language for the form.
     * 
     */
    public String default_() {
        return this.default_;
    }
    /**
     * @return Primary language for the form.
     * 
     */
    public String primary() {
        return this.primary;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFormLanguage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String default_;
        private String primary;
        public Builder() {}
        public Builder(GetFormLanguage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.default_ = defaults.default_;
    	      this.primary = defaults.primary;
        }

        @CustomType.Setter("default")
        public Builder default_(String default_) {
            if (default_ == null) {
              throw new MissingRequiredPropertyException("GetFormLanguage", "default_");
            }
            this.default_ = default_;
            return this;
        }
        @CustomType.Setter
        public Builder primary(String primary) {
            if (primary == null) {
              throw new MissingRequiredPropertyException("GetFormLanguage", "primary");
            }
            this.primary = primary;
            return this;
        }
        public GetFormLanguage build() {
            final var _resultValue = new GetFormLanguage();
            _resultValue.default_ = default_;
            _resultValue.primary = primary;
            return _resultValue;
        }
    }
}
