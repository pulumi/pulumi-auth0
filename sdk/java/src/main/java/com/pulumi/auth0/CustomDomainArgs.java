// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomDomainArgs Empty = new CustomDomainArgs();

    /**
     * The HTTP header to fetch the client&#39;s IP address. Cannot be set on auth0_managed domains.
     * 
     */
    @Import(name="customClientIpHeader")
    private @Nullable Output<String> customClientIpHeader;

    /**
     * @return The HTTP header to fetch the client&#39;s IP address. Cannot be set on auth0_managed domains.
     * 
     */
    public Optional<Output<String>> customClientIpHeader() {
        return Optional.ofNullable(this.customClientIpHeader);
    }

    /**
     * Name of the custom domain.
     * 
     */
    @Import(name="domain", required=true)
    private Output<String> domain;

    /**
     * @return Name of the custom domain.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }

    /**
     * TLS policy for the custom domain. Available options are: `compatible` or `recommended`. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on self_managed domains.
     * 
     */
    @Import(name="tlsPolicy")
    private @Nullable Output<String> tlsPolicy;

    /**
     * @return TLS policy for the custom domain. Available options are: `compatible` or `recommended`. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on self_managed domains.
     * 
     */
    public Optional<Output<String>> tlsPolicy() {
        return Optional.ofNullable(this.tlsPolicy);
    }

    /**
     * Provisioning type for the custom domain. Options include `auth0_managed_certs` and `self_managed_certs`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Provisioning type for the custom domain. Options include `auth0_managed_certs` and `self_managed_certs`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private CustomDomainArgs() {}

    private CustomDomainArgs(CustomDomainArgs $) {
        this.customClientIpHeader = $.customClientIpHeader;
        this.domain = $.domain;
        this.tlsPolicy = $.tlsPolicy;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomDomainArgs $;

        public Builder() {
            $ = new CustomDomainArgs();
        }

        public Builder(CustomDomainArgs defaults) {
            $ = new CustomDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customClientIpHeader The HTTP header to fetch the client&#39;s IP address. Cannot be set on auth0_managed domains.
         * 
         * @return builder
         * 
         */
        public Builder customClientIpHeader(@Nullable Output<String> customClientIpHeader) {
            $.customClientIpHeader = customClientIpHeader;
            return this;
        }

        /**
         * @param customClientIpHeader The HTTP header to fetch the client&#39;s IP address. Cannot be set on auth0_managed domains.
         * 
         * @return builder
         * 
         */
        public Builder customClientIpHeader(String customClientIpHeader) {
            return customClientIpHeader(Output.of(customClientIpHeader));
        }

        /**
         * @param domain Name of the custom domain.
         * 
         * @return builder
         * 
         */
        public Builder domain(Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Name of the custom domain.
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param tlsPolicy TLS policy for the custom domain. Available options are: `compatible` or `recommended`. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on self_managed domains.
         * 
         * @return builder
         * 
         */
        public Builder tlsPolicy(@Nullable Output<String> tlsPolicy) {
            $.tlsPolicy = tlsPolicy;
            return this;
        }

        /**
         * @param tlsPolicy TLS policy for the custom domain. Available options are: `compatible` or `recommended`. Compatible includes TLS 1.0, 1.1, 1.2, and recommended only includes TLS 1.2. Cannot be set on self_managed domains.
         * 
         * @return builder
         * 
         */
        public Builder tlsPolicy(String tlsPolicy) {
            return tlsPolicy(Output.of(tlsPolicy));
        }

        /**
         * @param type Provisioning type for the custom domain. Options include `auth0_managed_certs` and `self_managed_certs`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Provisioning type for the custom domain. Options include `auth0_managed_certs` and `self_managed_certs`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public CustomDomainArgs build() {
            if ($.domain == null) {
                throw new MissingRequiredPropertyException("CustomDomainArgs", "domain");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("CustomDomainArgs", "type");
            }
            return $;
        }
    }

}
