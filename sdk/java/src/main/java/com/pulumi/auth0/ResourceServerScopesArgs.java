// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.inputs.ResourceServerScopesScopeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ResourceServerScopesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceServerScopesArgs Empty = new ResourceServerScopesArgs();

    /**
     * Identifier of the resource server that the scopes (permission) are associated with.
     * 
     */
    @Import(name="resourceServerIdentifier", required=true)
    private Output<String> resourceServerIdentifier;

    /**
     * @return Identifier of the resource server that the scopes (permission) are associated with.
     * 
     */
    public Output<String> resourceServerIdentifier() {
        return this.resourceServerIdentifier;
    }

    @Import(name="scopes", required=true)
    private Output<List<ResourceServerScopesScopeArgs>> scopes;

    public Output<List<ResourceServerScopesScopeArgs>> scopes() {
        return this.scopes;
    }

    private ResourceServerScopesArgs() {}

    private ResourceServerScopesArgs(ResourceServerScopesArgs $) {
        this.resourceServerIdentifier = $.resourceServerIdentifier;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceServerScopesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceServerScopesArgs $;

        public Builder() {
            $ = new ResourceServerScopesArgs();
        }

        public Builder(ResourceServerScopesArgs defaults) {
            $ = new ResourceServerScopesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceServerIdentifier Identifier of the resource server that the scopes (permission) are associated with.
         * 
         * @return builder
         * 
         */
        public Builder resourceServerIdentifier(Output<String> resourceServerIdentifier) {
            $.resourceServerIdentifier = resourceServerIdentifier;
            return this;
        }

        /**
         * @param resourceServerIdentifier Identifier of the resource server that the scopes (permission) are associated with.
         * 
         * @return builder
         * 
         */
        public Builder resourceServerIdentifier(String resourceServerIdentifier) {
            return resourceServerIdentifier(Output.of(resourceServerIdentifier));
        }

        public Builder scopes(Output<List<ResourceServerScopesScopeArgs>> scopes) {
            $.scopes = scopes;
            return this;
        }

        public Builder scopes(List<ResourceServerScopesScopeArgs> scopes) {
            return scopes(Output.of(scopes));
        }

        public Builder scopes(ResourceServerScopesScopeArgs... scopes) {
            return scopes(List.of(scopes));
        }

        public ResourceServerScopesArgs build() {
            if ($.resourceServerIdentifier == null) {
                throw new MissingRequiredPropertyException("ResourceServerScopesArgs", "resourceServerIdentifier");
            }
            if ($.scopes == null) {
                throw new MissingRequiredPropertyException("ResourceServerScopesArgs", "scopes");
            }
            return $;
        }
    }

}
