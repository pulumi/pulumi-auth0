// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetBrandingThemeFontBodyText;
import com.pulumi.auth0.outputs.GetBrandingThemeFontButtonsText;
import com.pulumi.auth0.outputs.GetBrandingThemeFontInputLabel;
import com.pulumi.auth0.outputs.GetBrandingThemeFontLink;
import com.pulumi.auth0.outputs.GetBrandingThemeFontSubtitle;
import com.pulumi.auth0.outputs.GetBrandingThemeFontTitle;
import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBrandingThemeFont {
    private List<GetBrandingThemeFontBodyText> bodyTexts;
    private List<GetBrandingThemeFontButtonsText> buttonsTexts;
    private String fontUrl;
    private List<GetBrandingThemeFontInputLabel> inputLabels;
    private List<GetBrandingThemeFontLink> links;
    private String linksStyle;
    private Double referenceTextSize;
    private List<GetBrandingThemeFontSubtitle> subtitles;
    private List<GetBrandingThemeFontTitle> titles;

    private GetBrandingThemeFont() {}
    public List<GetBrandingThemeFontBodyText> bodyTexts() {
        return this.bodyTexts;
    }
    public List<GetBrandingThemeFontButtonsText> buttonsTexts() {
        return this.buttonsTexts;
    }
    public String fontUrl() {
        return this.fontUrl;
    }
    public List<GetBrandingThemeFontInputLabel> inputLabels() {
        return this.inputLabels;
    }
    public List<GetBrandingThemeFontLink> links() {
        return this.links;
    }
    public String linksStyle() {
        return this.linksStyle;
    }
    public Double referenceTextSize() {
        return this.referenceTextSize;
    }
    public List<GetBrandingThemeFontSubtitle> subtitles() {
        return this.subtitles;
    }
    public List<GetBrandingThemeFontTitle> titles() {
        return this.titles;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBrandingThemeFont defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetBrandingThemeFontBodyText> bodyTexts;
        private List<GetBrandingThemeFontButtonsText> buttonsTexts;
        private String fontUrl;
        private List<GetBrandingThemeFontInputLabel> inputLabels;
        private List<GetBrandingThemeFontLink> links;
        private String linksStyle;
        private Double referenceTextSize;
        private List<GetBrandingThemeFontSubtitle> subtitles;
        private List<GetBrandingThemeFontTitle> titles;
        public Builder() {}
        public Builder(GetBrandingThemeFont defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bodyTexts = defaults.bodyTexts;
    	      this.buttonsTexts = defaults.buttonsTexts;
    	      this.fontUrl = defaults.fontUrl;
    	      this.inputLabels = defaults.inputLabels;
    	      this.links = defaults.links;
    	      this.linksStyle = defaults.linksStyle;
    	      this.referenceTextSize = defaults.referenceTextSize;
    	      this.subtitles = defaults.subtitles;
    	      this.titles = defaults.titles;
        }

        @CustomType.Setter
        public Builder bodyTexts(List<GetBrandingThemeFontBodyText> bodyTexts) {
            this.bodyTexts = Objects.requireNonNull(bodyTexts);
            return this;
        }
        public Builder bodyTexts(GetBrandingThemeFontBodyText... bodyTexts) {
            return bodyTexts(List.of(bodyTexts));
        }
        @CustomType.Setter
        public Builder buttonsTexts(List<GetBrandingThemeFontButtonsText> buttonsTexts) {
            this.buttonsTexts = Objects.requireNonNull(buttonsTexts);
            return this;
        }
        public Builder buttonsTexts(GetBrandingThemeFontButtonsText... buttonsTexts) {
            return buttonsTexts(List.of(buttonsTexts));
        }
        @CustomType.Setter
        public Builder fontUrl(String fontUrl) {
            this.fontUrl = Objects.requireNonNull(fontUrl);
            return this;
        }
        @CustomType.Setter
        public Builder inputLabels(List<GetBrandingThemeFontInputLabel> inputLabels) {
            this.inputLabels = Objects.requireNonNull(inputLabels);
            return this;
        }
        public Builder inputLabels(GetBrandingThemeFontInputLabel... inputLabels) {
            return inputLabels(List.of(inputLabels));
        }
        @CustomType.Setter
        public Builder links(List<GetBrandingThemeFontLink> links) {
            this.links = Objects.requireNonNull(links);
            return this;
        }
        public Builder links(GetBrandingThemeFontLink... links) {
            return links(List.of(links));
        }
        @CustomType.Setter
        public Builder linksStyle(String linksStyle) {
            this.linksStyle = Objects.requireNonNull(linksStyle);
            return this;
        }
        @CustomType.Setter
        public Builder referenceTextSize(Double referenceTextSize) {
            this.referenceTextSize = Objects.requireNonNull(referenceTextSize);
            return this;
        }
        @CustomType.Setter
        public Builder subtitles(List<GetBrandingThemeFontSubtitle> subtitles) {
            this.subtitles = Objects.requireNonNull(subtitles);
            return this;
        }
        public Builder subtitles(GetBrandingThemeFontSubtitle... subtitles) {
            return subtitles(List.of(subtitles));
        }
        @CustomType.Setter
        public Builder titles(List<GetBrandingThemeFontTitle> titles) {
            this.titles = Objects.requireNonNull(titles);
            return this;
        }
        public Builder titles(GetBrandingThemeFontTitle... titles) {
            return titles(List.of(titles));
        }
        public GetBrandingThemeFont build() {
            final var _resultValue = new GetBrandingThemeFont();
            _resultValue.bodyTexts = bodyTexts;
            _resultValue.buttonsTexts = buttonsTexts;
            _resultValue.fontUrl = fontUrl;
            _resultValue.inputLabels = inputLabels;
            _resultValue.links = links;
            _resultValue.linksStyle = linksStyle;
            _resultValue.referenceTextSize = referenceTextSize;
            _resultValue.subtitles = subtitles;
            _resultValue.titles = titles;
            return _resultValue;
        }
    }
}
