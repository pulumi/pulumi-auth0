// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.GetConnectionScimConfigurationDefaultMapping;
import com.pulumi.auth0.inputs.GetConnectionScimConfigurationMapping;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConnectionScimConfigurationPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectionScimConfigurationPlainArgs Empty = new GetConnectionScimConfigurationPlainArgs();

    /**
     * ID of the connection for this SCIM configuration.
     * 
     */
    @Import(name="connectionId", required=true)
    private String connectionId;

    /**
     * @return ID of the connection for this SCIM configuration.
     * 
     */
    public String connectionId() {
        return this.connectionId;
    }

    /**
     * Default mapping between Auth0 attributes and SCIM attributes for this connection type.
     * 
     */
    @Import(name="defaultMappings")
    private @Nullable List<GetConnectionScimConfigurationDefaultMapping> defaultMappings;

    /**
     * @return Default mapping between Auth0 attributes and SCIM attributes for this connection type.
     * 
     */
    public Optional<List<GetConnectionScimConfigurationDefaultMapping>> defaultMappings() {
        return Optional.ofNullable(this.defaultMappings);
    }

    /**
     * Mapping between Auth0 attributes and SCIM attributes.
     * 
     */
    @Import(name="mappings")
    private @Nullable List<GetConnectionScimConfigurationMapping> mappings;

    /**
     * @return Mapping between Auth0 attributes and SCIM attributes.
     * 
     */
    public Optional<List<GetConnectionScimConfigurationMapping>> mappings() {
        return Optional.ofNullable(this.mappings);
    }

    private GetConnectionScimConfigurationPlainArgs() {}

    private GetConnectionScimConfigurationPlainArgs(GetConnectionScimConfigurationPlainArgs $) {
        this.connectionId = $.connectionId;
        this.defaultMappings = $.defaultMappings;
        this.mappings = $.mappings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectionScimConfigurationPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectionScimConfigurationPlainArgs $;

        public Builder() {
            $ = new GetConnectionScimConfigurationPlainArgs();
        }

        public Builder(GetConnectionScimConfigurationPlainArgs defaults) {
            $ = new GetConnectionScimConfigurationPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionId ID of the connection for this SCIM configuration.
         * 
         * @return builder
         * 
         */
        public Builder connectionId(String connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        /**
         * @param defaultMappings Default mapping between Auth0 attributes and SCIM attributes for this connection type.
         * 
         * @return builder
         * 
         */
        public Builder defaultMappings(@Nullable List<GetConnectionScimConfigurationDefaultMapping> defaultMappings) {
            $.defaultMappings = defaultMappings;
            return this;
        }

        /**
         * @param defaultMappings Default mapping between Auth0 attributes and SCIM attributes for this connection type.
         * 
         * @return builder
         * 
         */
        public Builder defaultMappings(GetConnectionScimConfigurationDefaultMapping... defaultMappings) {
            return defaultMappings(List.of(defaultMappings));
        }

        /**
         * @param mappings Mapping between Auth0 attributes and SCIM attributes.
         * 
         * @return builder
         * 
         */
        public Builder mappings(@Nullable List<GetConnectionScimConfigurationMapping> mappings) {
            $.mappings = mappings;
            return this;
        }

        /**
         * @param mappings Mapping between Auth0 attributes and SCIM attributes.
         * 
         * @return builder
         * 
         */
        public Builder mappings(GetConnectionScimConfigurationMapping... mappings) {
            return mappings(List.of(mappings));
        }

        public GetConnectionScimConfigurationPlainArgs build() {
            if ($.connectionId == null) {
                throw new MissingRequiredPropertyException("GetConnectionScimConfigurationPlainArgs", "connectionId");
            }
            return $;
        }
    }

}
