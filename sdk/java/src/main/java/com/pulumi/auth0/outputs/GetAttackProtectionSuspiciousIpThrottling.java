// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetAttackProtectionSuspiciousIpThrottlingPreLogin;
import com.pulumi.auth0.outputs.GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAttackProtectionSuspiciousIpThrottling {
    private List<String> allowlists;
    private Boolean enabled;
    private List<GetAttackProtectionSuspiciousIpThrottlingPreLogin> preLogins;
    private List<GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration> preUserRegistrations;
    private List<String> shields;

    private GetAttackProtectionSuspiciousIpThrottling() {}
    public List<String> allowlists() {
        return this.allowlists;
    }
    public Boolean enabled() {
        return this.enabled;
    }
    public List<GetAttackProtectionSuspiciousIpThrottlingPreLogin> preLogins() {
        return this.preLogins;
    }
    public List<GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration> preUserRegistrations() {
        return this.preUserRegistrations;
    }
    public List<String> shields() {
        return this.shields;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAttackProtectionSuspiciousIpThrottling defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowlists;
        private Boolean enabled;
        private List<GetAttackProtectionSuspiciousIpThrottlingPreLogin> preLogins;
        private List<GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration> preUserRegistrations;
        private List<String> shields;
        public Builder() {}
        public Builder(GetAttackProtectionSuspiciousIpThrottling defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowlists = defaults.allowlists;
    	      this.enabled = defaults.enabled;
    	      this.preLogins = defaults.preLogins;
    	      this.preUserRegistrations = defaults.preUserRegistrations;
    	      this.shields = defaults.shields;
        }

        @CustomType.Setter
        public Builder allowlists(List<String> allowlists) {
            this.allowlists = Objects.requireNonNull(allowlists);
            return this;
        }
        public Builder allowlists(String... allowlists) {
            return allowlists(List.of(allowlists));
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder preLogins(List<GetAttackProtectionSuspiciousIpThrottlingPreLogin> preLogins) {
            this.preLogins = Objects.requireNonNull(preLogins);
            return this;
        }
        public Builder preLogins(GetAttackProtectionSuspiciousIpThrottlingPreLogin... preLogins) {
            return preLogins(List.of(preLogins));
        }
        @CustomType.Setter
        public Builder preUserRegistrations(List<GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration> preUserRegistrations) {
            this.preUserRegistrations = Objects.requireNonNull(preUserRegistrations);
            return this;
        }
        public Builder preUserRegistrations(GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration... preUserRegistrations) {
            return preUserRegistrations(List.of(preUserRegistrations));
        }
        @CustomType.Setter
        public Builder shields(List<String> shields) {
            this.shields = Objects.requireNonNull(shields);
            return this;
        }
        public Builder shields(String... shields) {
            return shields(List.of(shields));
        }
        public GetAttackProtectionSuspiciousIpThrottling build() {
            final var _resultValue = new GetAttackProtectionSuspiciousIpThrottling();
            _resultValue.allowlists = allowlists;
            _resultValue.enabled = enabled;
            _resultValue.preLogins = preLogins;
            _resultValue.preUserRegistrations = preUserRegistrations;
            _resultValue.shields = shields;
            return _resultValue;
        }
    }
}
