// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.GetConnectionKeysKey;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConnectionKeysResult {
    /**
     * @return The ID of the connection to retrieve keys for.
     * 
     */
    private String connectionId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of signing keys associated with the connection.
     * 
     */
    private List<GetConnectionKeysKey> keys;

    private GetConnectionKeysResult() {}
    /**
     * @return The ID of the connection to retrieve keys for.
     * 
     */
    public String connectionId() {
        return this.connectionId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of signing keys associated with the connection.
     * 
     */
    public List<GetConnectionKeysKey> keys() {
        return this.keys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionKeysResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectionId;
        private String id;
        private List<GetConnectionKeysKey> keys;
        public Builder() {}
        public Builder(GetConnectionKeysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionId = defaults.connectionId;
    	      this.id = defaults.id;
    	      this.keys = defaults.keys;
        }

        @CustomType.Setter
        public Builder connectionId(String connectionId) {
            if (connectionId == null) {
              throw new MissingRequiredPropertyException("GetConnectionKeysResult", "connectionId");
            }
            this.connectionId = connectionId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConnectionKeysResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keys(List<GetConnectionKeysKey> keys) {
            if (keys == null) {
              throw new MissingRequiredPropertyException("GetConnectionKeysResult", "keys");
            }
            this.keys = keys;
            return this;
        }
        public Builder keys(GetConnectionKeysKey... keys) {
            return keys(List.of(keys));
        }
        public GetConnectionKeysResult build() {
            final var _resultValue = new GetConnectionKeysResult();
            _resultValue.connectionId = connectionId;
            _resultValue.id = id;
            _resultValue.keys = keys;
            return _resultValue;
        }
    }
}
