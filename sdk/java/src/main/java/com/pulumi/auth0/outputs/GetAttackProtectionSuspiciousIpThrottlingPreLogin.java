// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetAttackProtectionSuspiciousIpThrottlingPreLogin {
    /**
     * @return The maximum number of failed login attempts allowed from a single IP address.
     * 
     */
    private Integer maxAttempts;
    /**
     * @return Interval of time, given in milliseconds at which new login tokens will become available after they have been used by an IP address. Each login attempt will be added on the defined throttling rate.
     * 
     */
    private Integer rate;

    private GetAttackProtectionSuspiciousIpThrottlingPreLogin() {}
    /**
     * @return The maximum number of failed login attempts allowed from a single IP address.
     * 
     */
    public Integer maxAttempts() {
        return this.maxAttempts;
    }
    /**
     * @return Interval of time, given in milliseconds at which new login tokens will become available after they have been used by an IP address. Each login attempt will be added on the defined throttling rate.
     * 
     */
    public Integer rate() {
        return this.rate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAttackProtectionSuspiciousIpThrottlingPreLogin defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxAttempts;
        private Integer rate;
        public Builder() {}
        public Builder(GetAttackProtectionSuspiciousIpThrottlingPreLogin defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxAttempts = defaults.maxAttempts;
    	      this.rate = defaults.rate;
        }

        @CustomType.Setter
        public Builder maxAttempts(Integer maxAttempts) {
            if (maxAttempts == null) {
              throw new MissingRequiredPropertyException("GetAttackProtectionSuspiciousIpThrottlingPreLogin", "maxAttempts");
            }
            this.maxAttempts = maxAttempts;
            return this;
        }
        @CustomType.Setter
        public Builder rate(Integer rate) {
            if (rate == null) {
              throw new MissingRequiredPropertyException("GetAttackProtectionSuspiciousIpThrottlingPreLogin", "rate");
            }
            this.rate = rate;
            return this;
        }
        public GetAttackProtectionSuspiciousIpThrottlingPreLogin build() {
            final var _resultValue = new GetAttackProtectionSuspiciousIpThrottlingPreLogin();
            _resultValue.maxAttempts = maxAttempts;
            _resultValue.rate = rate;
            return _resultValue;
        }
    }
}
