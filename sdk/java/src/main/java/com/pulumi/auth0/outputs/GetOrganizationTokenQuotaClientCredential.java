// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetOrganizationTokenQuotaClientCredential {
    /**
     * @return If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.
     * 
     */
    private Boolean enforce;
    /**
     * @return Maximum number of issued tokens per day
     * 
     */
    private Integer perDay;
    /**
     * @return Maximum number of issued tokens per hour
     * 
     */
    private Integer perHour;

    private GetOrganizationTokenQuotaClientCredential() {}
    /**
     * @return If enabled, the quota will be enforced and requests in excess of the quota will fail. If disabled, the quota will not be enforced, but notifications for requests exceeding the quota will be available in logs.
     * 
     */
    public Boolean enforce() {
        return this.enforce;
    }
    /**
     * @return Maximum number of issued tokens per day
     * 
     */
    public Integer perDay() {
        return this.perDay;
    }
    /**
     * @return Maximum number of issued tokens per hour
     * 
     */
    public Integer perHour() {
        return this.perHour;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOrganizationTokenQuotaClientCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enforce;
        private Integer perDay;
        private Integer perHour;
        public Builder() {}
        public Builder(GetOrganizationTokenQuotaClientCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enforce = defaults.enforce;
    	      this.perDay = defaults.perDay;
    	      this.perHour = defaults.perHour;
        }

        @CustomType.Setter
        public Builder enforce(Boolean enforce) {
            if (enforce == null) {
              throw new MissingRequiredPropertyException("GetOrganizationTokenQuotaClientCredential", "enforce");
            }
            this.enforce = enforce;
            return this;
        }
        @CustomType.Setter
        public Builder perDay(Integer perDay) {
            if (perDay == null) {
              throw new MissingRequiredPropertyException("GetOrganizationTokenQuotaClientCredential", "perDay");
            }
            this.perDay = perDay;
            return this;
        }
        @CustomType.Setter
        public Builder perHour(Integer perHour) {
            if (perHour == null) {
              throw new MissingRequiredPropertyException("GetOrganizationTokenQuotaClientCredential", "perHour");
            }
            this.perHour = perHour;
            return this;
        }
        public GetOrganizationTokenQuotaClientCredential build() {
            final var _resultValue = new GetOrganizationTokenQuotaClientCredential();
            _resultValue.enforce = enforce;
            _resultValue.perDay = perDay;
            _resultValue.perHour = perHour;
            return _resultValue;
        }
    }
}
