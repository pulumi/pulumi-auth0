// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.auth0.PromptCustomTextArgs;
import com.pulumi.auth0.Utilities;
import com.pulumi.auth0.inputs.PromptCustomTextState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * With this resource, you can manage custom text on your Auth0 prompts. You can read more about custom texts [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts).
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.auth0.PromptCustomText;
 * import com.pulumi.auth0.PromptCustomTextArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new PromptCustomText("example", PromptCustomTextArgs.builder()
 *             .prompt("login")
 *             .language("en")
 *             .body(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("login", jsonObject(
 *                         jsonProperty("alertListTitle", "Alerts"),
 *                         jsonProperty("buttonText", "Continue"),
 *                         jsonProperty("description", "Login to"),
 *                         jsonProperty("editEmailText", "Edit"),
 *                         jsonProperty("emailPlaceholder", "Email address"),
 *                         jsonProperty("federatedConnectionButtonText", "Continue with ${connectionName}"),
 *                         jsonProperty("footerLinkText", "Sign up"),
 *                         jsonProperty("footerText", "Don't have an account?"),
 *                         jsonProperty("forgotPasswordText", "Forgot password?"),
 *                         jsonProperty("invitationDescription", "Log in to accept ${inviterName}'s invitation to join ${companyName} on ${clientName}."),
 *                         jsonProperty("invitationTitle", "You've Been Invited!"),
 *                         jsonProperty("logoAltText", "${companyName}"),
 *                         jsonProperty("pageTitle", "Log in | ${clientName}"),
 *                         jsonProperty("passwordPlaceholder", "Password"),
 *                         jsonProperty("separatorText", "Or"),
 *                         jsonProperty("signupActionLinkText", "${footerLinkText}"),
 *                         jsonProperty("signupActionText", "${footerText}"),
 *                         jsonProperty("title", "Welcome"),
 *                         jsonProperty("usernamePlaceholder", "Username or email address")
 *                     ))
 *                 )))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * This resource can be imported by specifying the
 * 
 * prompt and language separated by &#34;::&#34; (note the double colon)
 * 
 * &lt;prompt&gt;::&lt;language&gt;
 * 
 * Example
 * 
 * ```sh
 * $ pulumi import auth0:index/promptCustomText:PromptCustomText example &#34;login::en&#34;
 * ```
 * 
 */
@ResourceType(type="auth0:index/promptCustomText:PromptCustomText")
public class PromptCustomText extends com.pulumi.resources.CustomResource {
    /**
     * JSON containing the custom texts. You can check the options for each prompt [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts#prompt-values).
     * 
     */
    @Export(name="body", refs={String.class}, tree="[0]")
    private Output<String> body;

    /**
     * @return JSON containing the custom texts. You can check the options for each prompt [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts#prompt-values).
     * 
     */
    public Output<String> body() {
        return this.body;
    }
    /**
     * Language of the custom text. Options include: `am`, `ar`, `ar-EG`, `ar-SA`, `az`, `bg`, `bn`, `bs`, `ca-ES`, `cnr`, `cs`, `cy`, `da`, `de`, `el`, `en`, `en-CA`, `es`, `es-419`, `es-AR`, `es-MX`, `et`, `eu-ES`, `fa`, `fi`, `fr`, `fr-CA`, `fr-FR`, `gl-ES`, `gu`, `he`, `hi`, `hr`, `hu`, `hy`, `id`, `is`, `it`, `ja`, `ka`, `kk`, `kn`, `ko`, `lt`, `lv`, `mk`, `ml`, `mn`, `mr`, `ms`, `my`, `nb`, `nl`, `nn`, `no`, `pa`, `pl`, `pt`, `pt-BR`, `pt-PT`, `ro`, `ru`, `sk`, `sl`, `so`, `sq`, `sr`, `sv`, `sw`, `ta`, `te`, `th`, `tl`, `tr`, `uk`, `ur`, `vi`, `zgh`, `zh-CN`, `zh-HK`, `zh-TW`.
     * 
     */
    @Export(name="language", refs={String.class}, tree="[0]")
    private Output<String> language;

    /**
     * @return Language of the custom text. Options include: `am`, `ar`, `ar-EG`, `ar-SA`, `az`, `bg`, `bn`, `bs`, `ca-ES`, `cnr`, `cs`, `cy`, `da`, `de`, `el`, `en`, `en-CA`, `es`, `es-419`, `es-AR`, `es-MX`, `et`, `eu-ES`, `fa`, `fi`, `fr`, `fr-CA`, `fr-FR`, `gl-ES`, `gu`, `he`, `hi`, `hr`, `hu`, `hy`, `id`, `is`, `it`, `ja`, `ka`, `kk`, `kn`, `ko`, `lt`, `lv`, `mk`, `ml`, `mn`, `mr`, `ms`, `my`, `nb`, `nl`, `nn`, `no`, `pa`, `pl`, `pt`, `pt-BR`, `pt-PT`, `ro`, `ru`, `sk`, `sl`, `so`, `sq`, `sr`, `sv`, `sw`, `ta`, `te`, `th`, `tl`, `tr`, `uk`, `ur`, `vi`, `zgh`, `zh-CN`, `zh-HK`, `zh-TW`.
     * 
     */
    public Output<String> language() {
        return this.language;
    }
    /**
     * The term `prompt` is used to refer to a specific step in the login flow. Options include: `login`, `login-id`, `login-password`, `login-passwordless`, `login-email-verification`, `signup`, `signup-id`, `signup-password`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, `reset-password`, `custom-form`, `consent`, `logout`, `mfa-push`, `mfa-otp`, `mfa-voice`, `mfa-phone`, `mfa-webauthn`, `mfa-sms`, `mfa-email`, `mfa-recovery-code`, `mfa`, `status`, `device-flow`, `email-verification`, `email-otp-challenge`, `organizations`, `invitation`, `common`, `passkeys`, `captcha`.
     * 
     */
    @Export(name="prompt", refs={String.class}, tree="[0]")
    private Output<String> prompt;

    /**
     * @return The term `prompt` is used to refer to a specific step in the login flow. Options include: `login`, `login-id`, `login-password`, `login-passwordless`, `login-email-verification`, `signup`, `signup-id`, `signup-password`, `phone-identifier-enrollment`, `phone-identifier-challenge`, `email-identifier-challenge`, `reset-password`, `custom-form`, `consent`, `logout`, `mfa-push`, `mfa-otp`, `mfa-voice`, `mfa-phone`, `mfa-webauthn`, `mfa-sms`, `mfa-email`, `mfa-recovery-code`, `mfa`, `status`, `device-flow`, `email-verification`, `email-otp-challenge`, `organizations`, `invitation`, `common`, `passkeys`, `captcha`.
     * 
     */
    public Output<String> prompt() {
        return this.prompt;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PromptCustomText(java.lang.String name) {
        this(name, PromptCustomTextArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PromptCustomText(java.lang.String name, PromptCustomTextArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PromptCustomText(java.lang.String name, PromptCustomTextArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/promptCustomText:PromptCustomText", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private PromptCustomText(java.lang.String name, Output<java.lang.String> id, @Nullable PromptCustomTextState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("auth0:index/promptCustomText:PromptCustomText", name, state, makeResourceOptions(options, id), false);
    }

    private static PromptCustomTextArgs makeArgs(PromptCustomTextArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PromptCustomTextArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PromptCustomText get(java.lang.String name, Output<java.lang.String> id, @Nullable PromptCustomTextState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PromptCustomText(name, id, state, options);
    }
}
