// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PromptScreenRendererFiltersArgs extends com.pulumi.resources.ResourceArgs {

    public static final PromptScreenRendererFiltersArgs Empty = new PromptScreenRendererFiltersArgs();

    /**
     * An array of clients (applications) identified by id or a metadata key/value pair. Entity Limit: 25.
     * 
     */
    @Import(name="clients")
    private @Nullable Output<String> clients;

    /**
     * @return An array of clients (applications) identified by id or a metadata key/value pair. Entity Limit: 25.
     * 
     */
    public Optional<Output<String>> clients() {
        return Optional.ofNullable(this.clients);
    }

    /**
     * An array of domains identified by id or a metadata key/value pair. Entity Limit: 25.
     * 
     */
    @Import(name="domains")
    private @Nullable Output<String> domains;

    /**
     * @return An array of domains identified by id or a metadata key/value pair. Entity Limit: 25.
     * 
     */
    public Optional<Output<String>> domains() {
        return Optional.ofNullable(this.domains);
    }

    /**
     * Type of match to apply. Options: `includes_any`, `excludes_any`.
     * 
     */
    @Import(name="matchType", required=true)
    private Output<String> matchType;

    /**
     * @return Type of match to apply. Options: `includes_any`, `excludes_any`.
     * 
     */
    public Output<String> matchType() {
        return this.matchType;
    }

    /**
     * An array of organizations identified by id or a metadata key/value pair. Entity Limit: 25.
     * 
     */
    @Import(name="organizations")
    private @Nullable Output<String> organizations;

    /**
     * @return An array of organizations identified by id or a metadata key/value pair. Entity Limit: 25.
     * 
     */
    public Optional<Output<String>> organizations() {
        return Optional.ofNullable(this.organizations);
    }

    private PromptScreenRendererFiltersArgs() {}

    private PromptScreenRendererFiltersArgs(PromptScreenRendererFiltersArgs $) {
        this.clients = $.clients;
        this.domains = $.domains;
        this.matchType = $.matchType;
        this.organizations = $.organizations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PromptScreenRendererFiltersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PromptScreenRendererFiltersArgs $;

        public Builder() {
            $ = new PromptScreenRendererFiltersArgs();
        }

        public Builder(PromptScreenRendererFiltersArgs defaults) {
            $ = new PromptScreenRendererFiltersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clients An array of clients (applications) identified by id or a metadata key/value pair. Entity Limit: 25.
         * 
         * @return builder
         * 
         */
        public Builder clients(@Nullable Output<String> clients) {
            $.clients = clients;
            return this;
        }

        /**
         * @param clients An array of clients (applications) identified by id or a metadata key/value pair. Entity Limit: 25.
         * 
         * @return builder
         * 
         */
        public Builder clients(String clients) {
            return clients(Output.of(clients));
        }

        /**
         * @param domains An array of domains identified by id or a metadata key/value pair. Entity Limit: 25.
         * 
         * @return builder
         * 
         */
        public Builder domains(@Nullable Output<String> domains) {
            $.domains = domains;
            return this;
        }

        /**
         * @param domains An array of domains identified by id or a metadata key/value pair. Entity Limit: 25.
         * 
         * @return builder
         * 
         */
        public Builder domains(String domains) {
            return domains(Output.of(domains));
        }

        /**
         * @param matchType Type of match to apply. Options: `includes_any`, `excludes_any`.
         * 
         * @return builder
         * 
         */
        public Builder matchType(Output<String> matchType) {
            $.matchType = matchType;
            return this;
        }

        /**
         * @param matchType Type of match to apply. Options: `includes_any`, `excludes_any`.
         * 
         * @return builder
         * 
         */
        public Builder matchType(String matchType) {
            return matchType(Output.of(matchType));
        }

        /**
         * @param organizations An array of organizations identified by id or a metadata key/value pair. Entity Limit: 25.
         * 
         * @return builder
         * 
         */
        public Builder organizations(@Nullable Output<String> organizations) {
            $.organizations = organizations;
            return this;
        }

        /**
         * @param organizations An array of organizations identified by id or a metadata key/value pair. Entity Limit: 25.
         * 
         * @return builder
         * 
         */
        public Builder organizations(String organizations) {
            return organizations(Output.of(organizations));
        }

        public PromptScreenRendererFiltersArgs build() {
            if ($.matchType == null) {
                throw new MissingRequiredPropertyException("PromptScreenRendererFiltersArgs", "matchType");
            }
            return $;
        }
    }

}
