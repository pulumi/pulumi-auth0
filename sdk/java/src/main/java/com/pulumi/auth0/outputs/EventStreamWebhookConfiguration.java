// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.auth0.outputs.EventStreamWebhookConfigurationWebhookAuthorization;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class EventStreamWebhookConfiguration {
    /**
     * @return Authorization details for the webhook endpoint. Supports `basic` authentication using `username` and `password`, or `bearer` authentication using a `token`. The appropriate fields must be set based on the chosen method.
     * 
     */
    private EventStreamWebhookConfigurationWebhookAuthorization webhookAuthorization;
    /**
     * @return The HTTPS endpoint that will receive the webhook events. Must be a valid, publicly accessible URL.
     * 
     */
    private String webhookEndpoint;

    private EventStreamWebhookConfiguration() {}
    /**
     * @return Authorization details for the webhook endpoint. Supports `basic` authentication using `username` and `password`, or `bearer` authentication using a `token`. The appropriate fields must be set based on the chosen method.
     * 
     */
    public EventStreamWebhookConfigurationWebhookAuthorization webhookAuthorization() {
        return this.webhookAuthorization;
    }
    /**
     * @return The HTTPS endpoint that will receive the webhook events. Must be a valid, publicly accessible URL.
     * 
     */
    public String webhookEndpoint() {
        return this.webhookEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventStreamWebhookConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private EventStreamWebhookConfigurationWebhookAuthorization webhookAuthorization;
        private String webhookEndpoint;
        public Builder() {}
        public Builder(EventStreamWebhookConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.webhookAuthorization = defaults.webhookAuthorization;
    	      this.webhookEndpoint = defaults.webhookEndpoint;
        }

        @CustomType.Setter
        public Builder webhookAuthorization(EventStreamWebhookConfigurationWebhookAuthorization webhookAuthorization) {
            if (webhookAuthorization == null) {
              throw new MissingRequiredPropertyException("EventStreamWebhookConfiguration", "webhookAuthorization");
            }
            this.webhookAuthorization = webhookAuthorization;
            return this;
        }
        @CustomType.Setter
        public Builder webhookEndpoint(String webhookEndpoint) {
            if (webhookEndpoint == null) {
              throw new MissingRequiredPropertyException("EventStreamWebhookConfiguration", "webhookEndpoint");
            }
            this.webhookEndpoint = webhookEndpoint;
            return this;
        }
        public EventStreamWebhookConfiguration build() {
            final var _resultValue = new EventStreamWebhookConfiguration();
            _resultValue.webhookAuthorization = webhookAuthorization;
            _resultValue.webhookEndpoint = webhookEndpoint;
            return _resultValue;
        }
    }
}
