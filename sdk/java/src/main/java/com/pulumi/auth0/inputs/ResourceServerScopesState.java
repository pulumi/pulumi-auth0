// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.auth0.inputs.ResourceServerScopesScopeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceServerScopesState extends com.pulumi.resources.ResourceArgs {

    public static final ResourceServerScopesState Empty = new ResourceServerScopesState();

    /**
     * Identifier of the resource server that the scopes (permission) are associated with.
     * 
     */
    @Import(name="resourceServerIdentifier")
    private @Nullable Output<String> resourceServerIdentifier;

    /**
     * @return Identifier of the resource server that the scopes (permission) are associated with.
     * 
     */
    public Optional<Output<String>> resourceServerIdentifier() {
        return Optional.ofNullable(this.resourceServerIdentifier);
    }

    @Import(name="scopes")
    private @Nullable Output<List<ResourceServerScopesScopeArgs>> scopes;

    public Optional<Output<List<ResourceServerScopesScopeArgs>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    private ResourceServerScopesState() {}

    private ResourceServerScopesState(ResourceServerScopesState $) {
        this.resourceServerIdentifier = $.resourceServerIdentifier;
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceServerScopesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceServerScopesState $;

        public Builder() {
            $ = new ResourceServerScopesState();
        }

        public Builder(ResourceServerScopesState defaults) {
            $ = new ResourceServerScopesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceServerIdentifier Identifier of the resource server that the scopes (permission) are associated with.
         * 
         * @return builder
         * 
         */
        public Builder resourceServerIdentifier(@Nullable Output<String> resourceServerIdentifier) {
            $.resourceServerIdentifier = resourceServerIdentifier;
            return this;
        }

        /**
         * @param resourceServerIdentifier Identifier of the resource server that the scopes (permission) are associated with.
         * 
         * @return builder
         * 
         */
        public Builder resourceServerIdentifier(String resourceServerIdentifier) {
            return resourceServerIdentifier(Output.of(resourceServerIdentifier));
        }

        public Builder scopes(@Nullable Output<List<ResourceServerScopesScopeArgs>> scopes) {
            $.scopes = scopes;
            return this;
        }

        public Builder scopes(List<ResourceServerScopesScopeArgs> scopes) {
            return scopes(Output.of(scopes));
        }

        public Builder scopes(ResourceServerScopesScopeArgs... scopes) {
            return scopes(List.of(scopes));
        }

        public ResourceServerScopesState build() {
            return $;
        }
    }

}
