// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ClientTokenExchangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClientTokenExchangeArgs Empty = new ClientTokenExchangeArgs();

    /**
     * List of allowed profile types for token exchange
     * 
     */
    @Import(name="allowAnyProfileOfTypes", required=true)
    private Output<List<String>> allowAnyProfileOfTypes;

    /**
     * @return List of allowed profile types for token exchange
     * 
     */
    public Output<List<String>> allowAnyProfileOfTypes() {
        return this.allowAnyProfileOfTypes;
    }

    private ClientTokenExchangeArgs() {}

    private ClientTokenExchangeArgs(ClientTokenExchangeArgs $) {
        this.allowAnyProfileOfTypes = $.allowAnyProfileOfTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClientTokenExchangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientTokenExchangeArgs $;

        public Builder() {
            $ = new ClientTokenExchangeArgs();
        }

        public Builder(ClientTokenExchangeArgs defaults) {
            $ = new ClientTokenExchangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowAnyProfileOfTypes List of allowed profile types for token exchange
         * 
         * @return builder
         * 
         */
        public Builder allowAnyProfileOfTypes(Output<List<String>> allowAnyProfileOfTypes) {
            $.allowAnyProfileOfTypes = allowAnyProfileOfTypes;
            return this;
        }

        /**
         * @param allowAnyProfileOfTypes List of allowed profile types for token exchange
         * 
         * @return builder
         * 
         */
        public Builder allowAnyProfileOfTypes(List<String> allowAnyProfileOfTypes) {
            return allowAnyProfileOfTypes(Output.of(allowAnyProfileOfTypes));
        }

        /**
         * @param allowAnyProfileOfTypes List of allowed profile types for token exchange
         * 
         * @return builder
         * 
         */
        public Builder allowAnyProfileOfTypes(String... allowAnyProfileOfTypes) {
            return allowAnyProfileOfTypes(List.of(allowAnyProfileOfTypes));
        }

        public ClientTokenExchangeArgs build() {
            if ($.allowAnyProfileOfTypes == null) {
                throw new MissingRequiredPropertyException("ClientTokenExchangeArgs", "allowAnyProfileOfTypes");
            }
            return $;
        }
    }

}
