// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClientDefaultOrganization {
    /**
     * @return If set, the `default_organization` will be removed.
     * 
     */
    private Boolean disable;
    /**
     * @return Definition of the flow that needs to be configured. Eg. client_credentials
     * 
     */
    private List<String> flows;
    /**
     * @return The unique identifier of the organization
     * 
     */
    private String organizationId;

    private GetClientDefaultOrganization() {}
    /**
     * @return If set, the `default_organization` will be removed.
     * 
     */
    public Boolean disable() {
        return this.disable;
    }
    /**
     * @return Definition of the flow that needs to be configured. Eg. client_credentials
     * 
     */
    public List<String> flows() {
        return this.flows;
    }
    /**
     * @return The unique identifier of the organization
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClientDefaultOrganization defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean disable;
        private List<String> flows;
        private String organizationId;
        public Builder() {}
        public Builder(GetClientDefaultOrganization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disable = defaults.disable;
    	      this.flows = defaults.flows;
    	      this.organizationId = defaults.organizationId;
        }

        @CustomType.Setter
        public Builder disable(Boolean disable) {
            if (disable == null) {
              throw new MissingRequiredPropertyException("GetClientDefaultOrganization", "disable");
            }
            this.disable = disable;
            return this;
        }
        @CustomType.Setter
        public Builder flows(List<String> flows) {
            if (flows == null) {
              throw new MissingRequiredPropertyException("GetClientDefaultOrganization", "flows");
            }
            this.flows = flows;
            return this;
        }
        public Builder flows(String... flows) {
            return flows(List.of(flows));
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            if (organizationId == null) {
              throw new MissingRequiredPropertyException("GetClientDefaultOrganization", "organizationId");
            }
            this.organizationId = organizationId;
            return this;
        }
        public GetClientDefaultOrganization build() {
            final var _resultValue = new GetClientDefaultOrganization();
            _resultValue.disable = disable;
            _resultValue.flows = flows;
            _resultValue.organizationId = organizationId;
            return _resultValue;
        }
    }
}
