// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class ConnectionKeysArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionKeysArgs Empty = new ConnectionKeysArgs();

    @Import(name="connectionId", required=true)
    private Output<String> connectionId;

    public Output<String> connectionId() {
        return this.connectionId;
    }

    /**
     * This is an arbitrary map, which when edited shall perform rotation of keys for the corresponding connection. It can host keys like version, timestamp of last rotation etc.The field has no association with API
     * 
     */
    @Import(name="triggers", required=true)
    private Output<Map<String,String>> triggers;

    /**
     * @return This is an arbitrary map, which when edited shall perform rotation of keys for the corresponding connection. It can host keys like version, timestamp of last rotation etc.The field has no association with API
     * 
     */
    public Output<Map<String,String>> triggers() {
        return this.triggers;
    }

    private ConnectionKeysArgs() {}

    private ConnectionKeysArgs(ConnectionKeysArgs $) {
        this.connectionId = $.connectionId;
        this.triggers = $.triggers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionKeysArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionKeysArgs $;

        public Builder() {
            $ = new ConnectionKeysArgs();
        }

        public Builder(ConnectionKeysArgs defaults) {
            $ = new ConnectionKeysArgs(Objects.requireNonNull(defaults));
        }

        public Builder connectionId(Output<String> connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        public Builder connectionId(String connectionId) {
            return connectionId(Output.of(connectionId));
        }

        /**
         * @param triggers This is an arbitrary map, which when edited shall perform rotation of keys for the corresponding connection. It can host keys like version, timestamp of last rotation etc.The field has no association with API
         * 
         * @return builder
         * 
         */
        public Builder triggers(Output<Map<String,String>> triggers) {
            $.triggers = triggers;
            return this;
        }

        /**
         * @param triggers This is an arbitrary map, which when edited shall perform rotation of keys for the corresponding connection. It can host keys like version, timestamp of last rotation etc.The field has no association with API
         * 
         * @return builder
         * 
         */
        public Builder triggers(Map<String,String> triggers) {
            return triggers(Output.of(triggers));
        }

        public ConnectionKeysArgs build() {
            if ($.connectionId == null) {
                throw new MissingRequiredPropertyException("ConnectionKeysArgs", "connectionId");
            }
            if ($.triggers == null) {
                throw new MissingRequiredPropertyException("ConnectionKeysArgs", "triggers");
            }
            return $;
        }
    }

}
