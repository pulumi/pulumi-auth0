// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BrandingThemeColorsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BrandingThemeColorsArgs Empty = new BrandingThemeColorsArgs();

    /**
     * Base focus color. Defaults to `#635dff`.
     * 
     */
    @Import(name="baseFocusColor")
    private @Nullable Output<String> baseFocusColor;

    /**
     * @return Base focus color. Defaults to `#635dff`.
     * 
     */
    public Optional<Output<String>> baseFocusColor() {
        return Optional.ofNullable(this.baseFocusColor);
    }

    /**
     * Base hover color. Defaults to `#000000`.
     * 
     */
    @Import(name="baseHoverColor")
    private @Nullable Output<String> baseHoverColor;

    /**
     * @return Base hover color. Defaults to `#000000`.
     * 
     */
    public Optional<Output<String>> baseHoverColor() {
        return Optional.ofNullable(this.baseHoverColor);
    }

    /**
     * Body text. Defaults to `#1e212a`.
     * 
     */
    @Import(name="bodyText")
    private @Nullable Output<String> bodyText;

    /**
     * @return Body text. Defaults to `#1e212a`.
     * 
     */
    public Optional<Output<String>> bodyText() {
        return Optional.ofNullable(this.bodyText);
    }

    /**
     * Captcha Widget Theme.
     * 
     */
    @Import(name="captchaWidgetTheme")
    private @Nullable Output<String> captchaWidgetTheme;

    /**
     * @return Captcha Widget Theme.
     * 
     */
    public Optional<Output<String>> captchaWidgetTheme() {
        return Optional.ofNullable(this.captchaWidgetTheme);
    }

    /**
     * Error. Defaults to `#d03c38`.
     * 
     */
    @Import(name="error")
    private @Nullable Output<String> error;

    /**
     * @return Error. Defaults to `#d03c38`.
     * 
     */
    public Optional<Output<String>> error() {
        return Optional.ofNullable(this.error);
    }

    /**
     * Header. Defaults to `#1e212a`.
     * 
     */
    @Import(name="header")
    private @Nullable Output<String> header;

    /**
     * @return Header. Defaults to `#1e212a`.
     * 
     */
    public Optional<Output<String>> header() {
        return Optional.ofNullable(this.header);
    }

    /**
     * Icons. Defaults to `#65676e`.
     * 
     */
    @Import(name="icons")
    private @Nullable Output<String> icons;

    /**
     * @return Icons. Defaults to `#65676e`.
     * 
     */
    public Optional<Output<String>> icons() {
        return Optional.ofNullable(this.icons);
    }

    /**
     * Input background. Defaults to `#ffffff`.
     * 
     */
    @Import(name="inputBackground")
    private @Nullable Output<String> inputBackground;

    /**
     * @return Input background. Defaults to `#ffffff`.
     * 
     */
    public Optional<Output<String>> inputBackground() {
        return Optional.ofNullable(this.inputBackground);
    }

    /**
     * Input border. Defaults to `#c9cace`.
     * 
     */
    @Import(name="inputBorder")
    private @Nullable Output<String> inputBorder;

    /**
     * @return Input border. Defaults to `#c9cace`.
     * 
     */
    public Optional<Output<String>> inputBorder() {
        return Optional.ofNullable(this.inputBorder);
    }

    /**
     * Input filled text. Defaults to `#000000`.
     * 
     */
    @Import(name="inputFilledText")
    private @Nullable Output<String> inputFilledText;

    /**
     * @return Input filled text. Defaults to `#000000`.
     * 
     */
    public Optional<Output<String>> inputFilledText() {
        return Optional.ofNullable(this.inputFilledText);
    }

    /**
     * Input labels &amp; placeholders. Defaults to `#65676e`.
     * 
     */
    @Import(name="inputLabelsPlaceholders")
    private @Nullable Output<String> inputLabelsPlaceholders;

    /**
     * @return Input labels &amp; placeholders. Defaults to `#65676e`.
     * 
     */
    public Optional<Output<String>> inputLabelsPlaceholders() {
        return Optional.ofNullable(this.inputLabelsPlaceholders);
    }

    /**
     * Links &amp; focused components. Defaults to `#635dff`.
     * 
     */
    @Import(name="linksFocusedComponents")
    private @Nullable Output<String> linksFocusedComponents;

    /**
     * @return Links &amp; focused components. Defaults to `#635dff`.
     * 
     */
    public Optional<Output<String>> linksFocusedComponents() {
        return Optional.ofNullable(this.linksFocusedComponents);
    }

    /**
     * Primary button. Defaults to `#635dff`.
     * 
     */
    @Import(name="primaryButton")
    private @Nullable Output<String> primaryButton;

    /**
     * @return Primary button. Defaults to `#635dff`.
     * 
     */
    public Optional<Output<String>> primaryButton() {
        return Optional.ofNullable(this.primaryButton);
    }

    /**
     * Primary button label. Defaults to `#ffffff`.
     * 
     */
    @Import(name="primaryButtonLabel")
    private @Nullable Output<String> primaryButtonLabel;

    /**
     * @return Primary button label. Defaults to `#ffffff`.
     * 
     */
    public Optional<Output<String>> primaryButtonLabel() {
        return Optional.ofNullable(this.primaryButtonLabel);
    }

    /**
     * Secondary button border. Defaults to `#c9cace`.
     * 
     */
    @Import(name="secondaryButtonBorder")
    private @Nullable Output<String> secondaryButtonBorder;

    /**
     * @return Secondary button border. Defaults to `#c9cace`.
     * 
     */
    public Optional<Output<String>> secondaryButtonBorder() {
        return Optional.ofNullable(this.secondaryButtonBorder);
    }

    /**
     * Secondary button label. Defaults to `#1e212a`.
     * 
     */
    @Import(name="secondaryButtonLabel")
    private @Nullable Output<String> secondaryButtonLabel;

    /**
     * @return Secondary button label. Defaults to `#1e212a`.
     * 
     */
    public Optional<Output<String>> secondaryButtonLabel() {
        return Optional.ofNullable(this.secondaryButtonLabel);
    }

    /**
     * Success. Defaults to `#13a688`.
     * 
     */
    @Import(name="success")
    private @Nullable Output<String> success;

    /**
     * @return Success. Defaults to `#13a688`.
     * 
     */
    public Optional<Output<String>> success() {
        return Optional.ofNullable(this.success);
    }

    /**
     * Widget background. Defaults to `#ffffff`.
     * 
     */
    @Import(name="widgetBackground")
    private @Nullable Output<String> widgetBackground;

    /**
     * @return Widget background. Defaults to `#ffffff`.
     * 
     */
    public Optional<Output<String>> widgetBackground() {
        return Optional.ofNullable(this.widgetBackground);
    }

    /**
     * Widget border. Defaults to `#c9cace`.
     * 
     */
    @Import(name="widgetBorder")
    private @Nullable Output<String> widgetBorder;

    /**
     * @return Widget border. Defaults to `#c9cace`.
     * 
     */
    public Optional<Output<String>> widgetBorder() {
        return Optional.ofNullable(this.widgetBorder);
    }

    private BrandingThemeColorsArgs() {}

    private BrandingThemeColorsArgs(BrandingThemeColorsArgs $) {
        this.baseFocusColor = $.baseFocusColor;
        this.baseHoverColor = $.baseHoverColor;
        this.bodyText = $.bodyText;
        this.captchaWidgetTheme = $.captchaWidgetTheme;
        this.error = $.error;
        this.header = $.header;
        this.icons = $.icons;
        this.inputBackground = $.inputBackground;
        this.inputBorder = $.inputBorder;
        this.inputFilledText = $.inputFilledText;
        this.inputLabelsPlaceholders = $.inputLabelsPlaceholders;
        this.linksFocusedComponents = $.linksFocusedComponents;
        this.primaryButton = $.primaryButton;
        this.primaryButtonLabel = $.primaryButtonLabel;
        this.secondaryButtonBorder = $.secondaryButtonBorder;
        this.secondaryButtonLabel = $.secondaryButtonLabel;
        this.success = $.success;
        this.widgetBackground = $.widgetBackground;
        this.widgetBorder = $.widgetBorder;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BrandingThemeColorsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BrandingThemeColorsArgs $;

        public Builder() {
            $ = new BrandingThemeColorsArgs();
        }

        public Builder(BrandingThemeColorsArgs defaults) {
            $ = new BrandingThemeColorsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baseFocusColor Base focus color. Defaults to `#635dff`.
         * 
         * @return builder
         * 
         */
        public Builder baseFocusColor(@Nullable Output<String> baseFocusColor) {
            $.baseFocusColor = baseFocusColor;
            return this;
        }

        /**
         * @param baseFocusColor Base focus color. Defaults to `#635dff`.
         * 
         * @return builder
         * 
         */
        public Builder baseFocusColor(String baseFocusColor) {
            return baseFocusColor(Output.of(baseFocusColor));
        }

        /**
         * @param baseHoverColor Base hover color. Defaults to `#000000`.
         * 
         * @return builder
         * 
         */
        public Builder baseHoverColor(@Nullable Output<String> baseHoverColor) {
            $.baseHoverColor = baseHoverColor;
            return this;
        }

        /**
         * @param baseHoverColor Base hover color. Defaults to `#000000`.
         * 
         * @return builder
         * 
         */
        public Builder baseHoverColor(String baseHoverColor) {
            return baseHoverColor(Output.of(baseHoverColor));
        }

        /**
         * @param bodyText Body text. Defaults to `#1e212a`.
         * 
         * @return builder
         * 
         */
        public Builder bodyText(@Nullable Output<String> bodyText) {
            $.bodyText = bodyText;
            return this;
        }

        /**
         * @param bodyText Body text. Defaults to `#1e212a`.
         * 
         * @return builder
         * 
         */
        public Builder bodyText(String bodyText) {
            return bodyText(Output.of(bodyText));
        }

        /**
         * @param captchaWidgetTheme Captcha Widget Theme.
         * 
         * @return builder
         * 
         */
        public Builder captchaWidgetTheme(@Nullable Output<String> captchaWidgetTheme) {
            $.captchaWidgetTheme = captchaWidgetTheme;
            return this;
        }

        /**
         * @param captchaWidgetTheme Captcha Widget Theme.
         * 
         * @return builder
         * 
         */
        public Builder captchaWidgetTheme(String captchaWidgetTheme) {
            return captchaWidgetTheme(Output.of(captchaWidgetTheme));
        }

        /**
         * @param error Error. Defaults to `#d03c38`.
         * 
         * @return builder
         * 
         */
        public Builder error(@Nullable Output<String> error) {
            $.error = error;
            return this;
        }

        /**
         * @param error Error. Defaults to `#d03c38`.
         * 
         * @return builder
         * 
         */
        public Builder error(String error) {
            return error(Output.of(error));
        }

        /**
         * @param header Header. Defaults to `#1e212a`.
         * 
         * @return builder
         * 
         */
        public Builder header(@Nullable Output<String> header) {
            $.header = header;
            return this;
        }

        /**
         * @param header Header. Defaults to `#1e212a`.
         * 
         * @return builder
         * 
         */
        public Builder header(String header) {
            return header(Output.of(header));
        }

        /**
         * @param icons Icons. Defaults to `#65676e`.
         * 
         * @return builder
         * 
         */
        public Builder icons(@Nullable Output<String> icons) {
            $.icons = icons;
            return this;
        }

        /**
         * @param icons Icons. Defaults to `#65676e`.
         * 
         * @return builder
         * 
         */
        public Builder icons(String icons) {
            return icons(Output.of(icons));
        }

        /**
         * @param inputBackground Input background. Defaults to `#ffffff`.
         * 
         * @return builder
         * 
         */
        public Builder inputBackground(@Nullable Output<String> inputBackground) {
            $.inputBackground = inputBackground;
            return this;
        }

        /**
         * @param inputBackground Input background. Defaults to `#ffffff`.
         * 
         * @return builder
         * 
         */
        public Builder inputBackground(String inputBackground) {
            return inputBackground(Output.of(inputBackground));
        }

        /**
         * @param inputBorder Input border. Defaults to `#c9cace`.
         * 
         * @return builder
         * 
         */
        public Builder inputBorder(@Nullable Output<String> inputBorder) {
            $.inputBorder = inputBorder;
            return this;
        }

        /**
         * @param inputBorder Input border. Defaults to `#c9cace`.
         * 
         * @return builder
         * 
         */
        public Builder inputBorder(String inputBorder) {
            return inputBorder(Output.of(inputBorder));
        }

        /**
         * @param inputFilledText Input filled text. Defaults to `#000000`.
         * 
         * @return builder
         * 
         */
        public Builder inputFilledText(@Nullable Output<String> inputFilledText) {
            $.inputFilledText = inputFilledText;
            return this;
        }

        /**
         * @param inputFilledText Input filled text. Defaults to `#000000`.
         * 
         * @return builder
         * 
         */
        public Builder inputFilledText(String inputFilledText) {
            return inputFilledText(Output.of(inputFilledText));
        }

        /**
         * @param inputLabelsPlaceholders Input labels &amp; placeholders. Defaults to `#65676e`.
         * 
         * @return builder
         * 
         */
        public Builder inputLabelsPlaceholders(@Nullable Output<String> inputLabelsPlaceholders) {
            $.inputLabelsPlaceholders = inputLabelsPlaceholders;
            return this;
        }

        /**
         * @param inputLabelsPlaceholders Input labels &amp; placeholders. Defaults to `#65676e`.
         * 
         * @return builder
         * 
         */
        public Builder inputLabelsPlaceholders(String inputLabelsPlaceholders) {
            return inputLabelsPlaceholders(Output.of(inputLabelsPlaceholders));
        }

        /**
         * @param linksFocusedComponents Links &amp; focused components. Defaults to `#635dff`.
         * 
         * @return builder
         * 
         */
        public Builder linksFocusedComponents(@Nullable Output<String> linksFocusedComponents) {
            $.linksFocusedComponents = linksFocusedComponents;
            return this;
        }

        /**
         * @param linksFocusedComponents Links &amp; focused components. Defaults to `#635dff`.
         * 
         * @return builder
         * 
         */
        public Builder linksFocusedComponents(String linksFocusedComponents) {
            return linksFocusedComponents(Output.of(linksFocusedComponents));
        }

        /**
         * @param primaryButton Primary button. Defaults to `#635dff`.
         * 
         * @return builder
         * 
         */
        public Builder primaryButton(@Nullable Output<String> primaryButton) {
            $.primaryButton = primaryButton;
            return this;
        }

        /**
         * @param primaryButton Primary button. Defaults to `#635dff`.
         * 
         * @return builder
         * 
         */
        public Builder primaryButton(String primaryButton) {
            return primaryButton(Output.of(primaryButton));
        }

        /**
         * @param primaryButtonLabel Primary button label. Defaults to `#ffffff`.
         * 
         * @return builder
         * 
         */
        public Builder primaryButtonLabel(@Nullable Output<String> primaryButtonLabel) {
            $.primaryButtonLabel = primaryButtonLabel;
            return this;
        }

        /**
         * @param primaryButtonLabel Primary button label. Defaults to `#ffffff`.
         * 
         * @return builder
         * 
         */
        public Builder primaryButtonLabel(String primaryButtonLabel) {
            return primaryButtonLabel(Output.of(primaryButtonLabel));
        }

        /**
         * @param secondaryButtonBorder Secondary button border. Defaults to `#c9cace`.
         * 
         * @return builder
         * 
         */
        public Builder secondaryButtonBorder(@Nullable Output<String> secondaryButtonBorder) {
            $.secondaryButtonBorder = secondaryButtonBorder;
            return this;
        }

        /**
         * @param secondaryButtonBorder Secondary button border. Defaults to `#c9cace`.
         * 
         * @return builder
         * 
         */
        public Builder secondaryButtonBorder(String secondaryButtonBorder) {
            return secondaryButtonBorder(Output.of(secondaryButtonBorder));
        }

        /**
         * @param secondaryButtonLabel Secondary button label. Defaults to `#1e212a`.
         * 
         * @return builder
         * 
         */
        public Builder secondaryButtonLabel(@Nullable Output<String> secondaryButtonLabel) {
            $.secondaryButtonLabel = secondaryButtonLabel;
            return this;
        }

        /**
         * @param secondaryButtonLabel Secondary button label. Defaults to `#1e212a`.
         * 
         * @return builder
         * 
         */
        public Builder secondaryButtonLabel(String secondaryButtonLabel) {
            return secondaryButtonLabel(Output.of(secondaryButtonLabel));
        }

        /**
         * @param success Success. Defaults to `#13a688`.
         * 
         * @return builder
         * 
         */
        public Builder success(@Nullable Output<String> success) {
            $.success = success;
            return this;
        }

        /**
         * @param success Success. Defaults to `#13a688`.
         * 
         * @return builder
         * 
         */
        public Builder success(String success) {
            return success(Output.of(success));
        }

        /**
         * @param widgetBackground Widget background. Defaults to `#ffffff`.
         * 
         * @return builder
         * 
         */
        public Builder widgetBackground(@Nullable Output<String> widgetBackground) {
            $.widgetBackground = widgetBackground;
            return this;
        }

        /**
         * @param widgetBackground Widget background. Defaults to `#ffffff`.
         * 
         * @return builder
         * 
         */
        public Builder widgetBackground(String widgetBackground) {
            return widgetBackground(Output.of(widgetBackground));
        }

        /**
         * @param widgetBorder Widget border. Defaults to `#c9cace`.
         * 
         * @return builder
         * 
         */
        public Builder widgetBorder(@Nullable Output<String> widgetBorder) {
            $.widgetBorder = widgetBorder;
            return this;
        }

        /**
         * @param widgetBorder Widget border. Defaults to `#c9cace`.
         * 
         * @return builder
         * 
         */
        public Builder widgetBorder(String widgetBorder) {
            return widgetBorder(Output.of(widgetBorder));
        }

        public BrandingThemeColorsArgs build() {
            return $;
        }
    }

}
