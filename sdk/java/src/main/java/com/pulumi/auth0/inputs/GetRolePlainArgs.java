// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.auth0.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRolePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRolePlainArgs Empty = new GetRolePlainArgs();

    @Import(name="name")
    private @Nullable String name;

    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the role. If not provided, `name` must be set.
     * 
     */
    @Import(name="roleId")
    private @Nullable String roleId;

    /**
     * @return The ID of the role. If not provided, `name` must be set.
     * 
     */
    public Optional<String> roleId() {
        return Optional.ofNullable(this.roleId);
    }

    private GetRolePlainArgs() {}

    private GetRolePlainArgs(GetRolePlainArgs $) {
        this.name = $.name;
        this.roleId = $.roleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRolePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRolePlainArgs $;

        public Builder() {
            $ = new GetRolePlainArgs();
        }

        public Builder(GetRolePlainArgs defaults) {
            $ = new GetRolePlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param roleId The ID of the role. If not provided, `name` must be set.
         * 
         * @return builder
         * 
         */
        public Builder roleId(@Nullable String roleId) {
            $.roleId = roleId;
            return this;
        }

        public GetRolePlainArgs build() {
            return $;
        }
    }

}
