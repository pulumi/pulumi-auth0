# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetOutboundIpsResult',
    'AwaitableGetOutboundIpsResult',
    'get_outbound_ips',
    'get_outbound_ips_output',
]

@pulumi.output_type
class GetOutboundIpsResult:
    """
    A collection of values returned by getOutboundIps.
    """
    def __init__(__self__, changelogs=None, id=None, last_updated_at=None, regions=None):
        if changelogs and not isinstance(changelogs, list):
            raise TypeError("Expected argument 'changelogs' to be a list")
        pulumi.set(__self__, "changelogs", changelogs)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if last_updated_at and not isinstance(last_updated_at, str):
            raise TypeError("Expected argument 'last_updated_at' to be a str")
        pulumi.set(__self__, "last_updated_at", last_updated_at)
        if regions and not isinstance(regions, list):
            raise TypeError("Expected argument 'regions' to be a list")
        pulumi.set(__self__, "regions", regions)

    @_builtins.property
    @pulumi.getter
    def changelogs(self) -> Sequence['outputs.GetOutboundIpsChangelogResult']:
        """
        List of recent changes to IP ranges.
        """
        return pulumi.get(self, "changelogs")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The ID of this resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="lastUpdatedAt")
    def last_updated_at(self) -> _builtins.str:
        """
        RFC3339 timestamp when the IP ranges were last updated.
        """
        return pulumi.get(self, "last_updated_at")

    @_builtins.property
    @pulumi.getter
    def regions(self) -> Sequence['outputs.GetOutboundIpsRegionResult']:
        """
        A list of regions and their corresponding IP CIDR blocks.
        """
        return pulumi.get(self, "regions")


class AwaitableGetOutboundIpsResult(GetOutboundIpsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOutboundIpsResult(
            changelogs=self.changelogs,
            id=self.id,
            last_updated_at=self.last_updated_at,
            regions=self.regions)


def get_outbound_ips(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOutboundIpsResult:
    """
    Use this data source to retrieve Auth0's outbound IP ranges for allowlisting purposes.
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('auth0:index/getOutboundIps:getOutboundIps', __args__, opts=opts, typ=GetOutboundIpsResult).value

    return AwaitableGetOutboundIpsResult(
        changelogs=pulumi.get(__ret__, 'changelogs'),
        id=pulumi.get(__ret__, 'id'),
        last_updated_at=pulumi.get(__ret__, 'last_updated_at'),
        regions=pulumi.get(__ret__, 'regions'))
def get_outbound_ips_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOutboundIpsResult]:
    """
    Use this data source to retrieve Auth0's outbound IP ranges for allowlisting purposes.
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('auth0:index/getOutboundIps:getOutboundIps', __args__, opts=opts, typ=GetOutboundIpsResult)
    return __ret__.apply(lambda __response__: GetOutboundIpsResult(
        changelogs=pulumi.get(__response__, 'changelogs'),
        id=pulumi.get(__response__, 'id'),
        last_updated_at=pulumi.get(__response__, 'last_updated_at'),
        regions=pulumi.get(__response__, 'regions')))
