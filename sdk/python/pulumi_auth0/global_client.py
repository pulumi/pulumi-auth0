# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class GlobalClient(pulumi.CustomResource):
    addons: pulumi.Output[dict]
    allowed_logout_urls: pulumi.Output[list]
    allowed_origins: pulumi.Output[list]
    app_type: pulumi.Output[str]
    callbacks: pulumi.Output[list]
    client_id: pulumi.Output[str]
    client_metadata: pulumi.Output[dict]
    client_secret: pulumi.Output[str]
    client_secret_rotation_trigger: pulumi.Output[dict]
    cross_origin_auth: pulumi.Output[bool]
    cross_origin_loc: pulumi.Output[str]
    custom_login_page: pulumi.Output[str]
    custom_login_page_on: pulumi.Output[bool]
    custom_login_page_preview: pulumi.Output[str]
    description: pulumi.Output[str]
    encryption_key: pulumi.Output[dict]
    form_template: pulumi.Output[str]
    grant_types: pulumi.Output[list]
    initiate_login_uri: pulumi.Output[str]
    is_first_party: pulumi.Output[bool]
    is_token_endpoint_ip_header_trusted: pulumi.Output[bool]
    jwt_configuration: pulumi.Output[dict]
    logo_uri: pulumi.Output[str]
    mobile: pulumi.Output[dict]
    name: pulumi.Output[str]
    oidc_conformant: pulumi.Output[bool]
    sso: pulumi.Output[bool]
    sso_disabled: pulumi.Output[bool]
    token_endpoint_auth_method: pulumi.Output[str]
    web_origins: pulumi.Output[list]
    def __init__(__self__, resource_name, opts=None, addons=None, allowed_logout_urls=None, allowed_origins=None, app_type=None, callbacks=None, client_metadata=None, client_secret_rotation_trigger=None, cross_origin_auth=None, cross_origin_loc=None, custom_login_page=None, custom_login_page_on=None, custom_login_page_preview=None, description=None, encryption_key=None, form_template=None, grant_types=None, initiate_login_uri=None, is_first_party=None, is_token_endpoint_ip_header_trusted=None, jwt_configuration=None, logo_uri=None, mobile=None, oidc_conformant=None, sso=None, sso_disabled=None, token_endpoint_auth_method=None, web_origins=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a GlobalClient resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.

        The **addons** object supports the following:

          * `aws` (`pulumi.Input[dict]`)
          * `azureBlob` (`pulumi.Input[dict]`)
          * `azureSb` (`pulumi.Input[dict]`)
          * `box` (`pulumi.Input[dict]`)
          * `cloudbees` (`pulumi.Input[dict]`)
          * `concur` (`pulumi.Input[dict]`)
          * `dropbox` (`pulumi.Input[dict]`)
          * `echosign` (`pulumi.Input[dict]`)
          * `egnyte` (`pulumi.Input[dict]`)
          * `firebase` (`pulumi.Input[dict]`)
          * `layer` (`pulumi.Input[dict]`)
          * `mscrm` (`pulumi.Input[dict]`)
          * `newrelic` (`pulumi.Input[dict]`)
          * `office365` (`pulumi.Input[dict]`)
          * `rms` (`pulumi.Input[dict]`)
          * `salesforce` (`pulumi.Input[dict]`)
          * `salesforceApi` (`pulumi.Input[dict]`)
          * `salesforceSandboxApi` (`pulumi.Input[dict]`)
          * `samlp` (`pulumi.Input[dict]`)
            * `audience` (`pulumi.Input[str]`)
            * `authnContextClassRef` (`pulumi.Input[str]`)
            * `binding` (`pulumi.Input[str]`)
            * `createUpnClaim` (`pulumi.Input[bool]`)
            * `destination` (`pulumi.Input[str]`)
            * `digestAlgorithm` (`pulumi.Input[str]`)
            * `includeAttributeNameFormat` (`pulumi.Input[bool]`)
            * `lifetimeInSeconds` (`pulumi.Input[float]`)
            * `logout` (`pulumi.Input[dict]`)
              * `callback` (`pulumi.Input[str]`)
              * `sloEnabled` (`pulumi.Input[bool]`)

            * `mapIdentities` (`pulumi.Input[bool]`)
            * `mapUnknownClaimsAsIs` (`pulumi.Input[bool]`)
            * `mappings` (`pulumi.Input[dict]`)
            * `nameIdentifierFormat` (`pulumi.Input[str]`)
            * `nameIdentifierProbes` (`pulumi.Input[list]`)
            * `passthroughClaimsWithNoMapping` (`pulumi.Input[bool]`)
            * `recipient` (`pulumi.Input[str]`)
            * `signResponse` (`pulumi.Input[bool]`)
            * `signatureAlgorithm` (`pulumi.Input[str]`)
            * `typedAttributes` (`pulumi.Input[bool]`)

          * `sapApi` (`pulumi.Input[dict]`)
          * `sentry` (`pulumi.Input[dict]`)
          * `sharepoint` (`pulumi.Input[dict]`)
          * `slack` (`pulumi.Input[dict]`)
          * `springcm` (`pulumi.Input[dict]`)
          * `wams` (`pulumi.Input[dict]`)
          * `wsfed` (`pulumi.Input[dict]`)
          * `zendesk` (`pulumi.Input[dict]`)
          * `zoom` (`pulumi.Input[dict]`)

        The **jwt_configuration** object supports the following:

          * `alg` (`pulumi.Input[str]`)
          * `lifetimeInSeconds` (`pulumi.Input[float]`)
          * `scopes` (`pulumi.Input[dict]`)
          * `secretEncoded` (`pulumi.Input[bool]`)

        The **mobile** object supports the following:

          * `android` (`pulumi.Input[dict]`)
            * `appPackageName` (`pulumi.Input[str]`)
            * `sha256CertFingerprints` (`pulumi.Input[list]`)

          * `ios` (`pulumi.Input[dict]`)
            * `appBundleIdentifier` (`pulumi.Input[str]`)
            * `teamId` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['addons'] = addons
            __props__['allowed_logout_urls'] = allowed_logout_urls
            __props__['allowed_origins'] = allowed_origins
            __props__['app_type'] = app_type
            __props__['callbacks'] = callbacks
            __props__['client_metadata'] = client_metadata
            __props__['client_secret_rotation_trigger'] = client_secret_rotation_trigger
            __props__['cross_origin_auth'] = cross_origin_auth
            __props__['cross_origin_loc'] = cross_origin_loc
            __props__['custom_login_page'] = custom_login_page
            __props__['custom_login_page_on'] = custom_login_page_on
            __props__['custom_login_page_preview'] = custom_login_page_preview
            __props__['description'] = description
            __props__['encryption_key'] = encryption_key
            __props__['form_template'] = form_template
            __props__['grant_types'] = grant_types
            __props__['initiate_login_uri'] = initiate_login_uri
            __props__['is_first_party'] = is_first_party
            __props__['is_token_endpoint_ip_header_trusted'] = is_token_endpoint_ip_header_trusted
            __props__['jwt_configuration'] = jwt_configuration
            __props__['logo_uri'] = logo_uri
            __props__['mobile'] = mobile
            __props__['oidc_conformant'] = oidc_conformant
            __props__['sso'] = sso
            __props__['sso_disabled'] = sso_disabled
            __props__['token_endpoint_auth_method'] = token_endpoint_auth_method
            __props__['web_origins'] = web_origins
            __props__['client_id'] = None
            __props__['client_secret'] = None
            __props__['name'] = None
        super(GlobalClient, __self__).__init__(
            'auth0:index/globalClient:GlobalClient',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, addons=None, allowed_logout_urls=None, allowed_origins=None, app_type=None, callbacks=None, client_id=None, client_metadata=None, client_secret=None, client_secret_rotation_trigger=None, cross_origin_auth=None, cross_origin_loc=None, custom_login_page=None, custom_login_page_on=None, custom_login_page_preview=None, description=None, encryption_key=None, form_template=None, grant_types=None, initiate_login_uri=None, is_first_party=None, is_token_endpoint_ip_header_trusted=None, jwt_configuration=None, logo_uri=None, mobile=None, name=None, oidc_conformant=None, sso=None, sso_disabled=None, token_endpoint_auth_method=None, web_origins=None):
        """
        Get an existing GlobalClient resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.

        The **addons** object supports the following:

          * `aws` (`pulumi.Input[dict]`)
          * `azureBlob` (`pulumi.Input[dict]`)
          * `azureSb` (`pulumi.Input[dict]`)
          * `box` (`pulumi.Input[dict]`)
          * `cloudbees` (`pulumi.Input[dict]`)
          * `concur` (`pulumi.Input[dict]`)
          * `dropbox` (`pulumi.Input[dict]`)
          * `echosign` (`pulumi.Input[dict]`)
          * `egnyte` (`pulumi.Input[dict]`)
          * `firebase` (`pulumi.Input[dict]`)
          * `layer` (`pulumi.Input[dict]`)
          * `mscrm` (`pulumi.Input[dict]`)
          * `newrelic` (`pulumi.Input[dict]`)
          * `office365` (`pulumi.Input[dict]`)
          * `rms` (`pulumi.Input[dict]`)
          * `salesforce` (`pulumi.Input[dict]`)
          * `salesforceApi` (`pulumi.Input[dict]`)
          * `salesforceSandboxApi` (`pulumi.Input[dict]`)
          * `samlp` (`pulumi.Input[dict]`)
            * `audience` (`pulumi.Input[str]`)
            * `authnContextClassRef` (`pulumi.Input[str]`)
            * `binding` (`pulumi.Input[str]`)
            * `createUpnClaim` (`pulumi.Input[bool]`)
            * `destination` (`pulumi.Input[str]`)
            * `digestAlgorithm` (`pulumi.Input[str]`)
            * `includeAttributeNameFormat` (`pulumi.Input[bool]`)
            * `lifetimeInSeconds` (`pulumi.Input[float]`)
            * `logout` (`pulumi.Input[dict]`)
              * `callback` (`pulumi.Input[str]`)
              * `sloEnabled` (`pulumi.Input[bool]`)

            * `mapIdentities` (`pulumi.Input[bool]`)
            * `mapUnknownClaimsAsIs` (`pulumi.Input[bool]`)
            * `mappings` (`pulumi.Input[dict]`)
            * `nameIdentifierFormat` (`pulumi.Input[str]`)
            * `nameIdentifierProbes` (`pulumi.Input[list]`)
            * `passthroughClaimsWithNoMapping` (`pulumi.Input[bool]`)
            * `recipient` (`pulumi.Input[str]`)
            * `signResponse` (`pulumi.Input[bool]`)
            * `signatureAlgorithm` (`pulumi.Input[str]`)
            * `typedAttributes` (`pulumi.Input[bool]`)

          * `sapApi` (`pulumi.Input[dict]`)
          * `sentry` (`pulumi.Input[dict]`)
          * `sharepoint` (`pulumi.Input[dict]`)
          * `slack` (`pulumi.Input[dict]`)
          * `springcm` (`pulumi.Input[dict]`)
          * `wams` (`pulumi.Input[dict]`)
          * `wsfed` (`pulumi.Input[dict]`)
          * `zendesk` (`pulumi.Input[dict]`)
          * `zoom` (`pulumi.Input[dict]`)

        The **jwt_configuration** object supports the following:

          * `alg` (`pulumi.Input[str]`)
          * `lifetimeInSeconds` (`pulumi.Input[float]`)
          * `scopes` (`pulumi.Input[dict]`)
          * `secretEncoded` (`pulumi.Input[bool]`)

        The **mobile** object supports the following:

          * `android` (`pulumi.Input[dict]`)
            * `appPackageName` (`pulumi.Input[str]`)
            * `sha256CertFingerprints` (`pulumi.Input[list]`)

          * `ios` (`pulumi.Input[dict]`)
            * `appBundleIdentifier` (`pulumi.Input[str]`)
            * `teamId` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["addons"] = addons
        __props__["allowed_logout_urls"] = allowed_logout_urls
        __props__["allowed_origins"] = allowed_origins
        __props__["app_type"] = app_type
        __props__["callbacks"] = callbacks
        __props__["client_id"] = client_id
        __props__["client_metadata"] = client_metadata
        __props__["client_secret"] = client_secret
        __props__["client_secret_rotation_trigger"] = client_secret_rotation_trigger
        __props__["cross_origin_auth"] = cross_origin_auth
        __props__["cross_origin_loc"] = cross_origin_loc
        __props__["custom_login_page"] = custom_login_page
        __props__["custom_login_page_on"] = custom_login_page_on
        __props__["custom_login_page_preview"] = custom_login_page_preview
        __props__["description"] = description
        __props__["encryption_key"] = encryption_key
        __props__["form_template"] = form_template
        __props__["grant_types"] = grant_types
        __props__["initiate_login_uri"] = initiate_login_uri
        __props__["is_first_party"] = is_first_party
        __props__["is_token_endpoint_ip_header_trusted"] = is_token_endpoint_ip_header_trusted
        __props__["jwt_configuration"] = jwt_configuration
        __props__["logo_uri"] = logo_uri
        __props__["mobile"] = mobile
        __props__["name"] = name
        __props__["oidc_conformant"] = oidc_conformant
        __props__["sso"] = sso
        __props__["sso_disabled"] = sso_disabled
        __props__["token_endpoint_auth_method"] = token_endpoint_auth_method
        __props__["web_origins"] = web_origins
        return GlobalClient(resource_name, opts=opts, __props__=__props__)

    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop
