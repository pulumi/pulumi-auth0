// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Auth0 allows you to configure your own phone messaging provider to help you manage, monitor, and troubleshoot your SMS and voice communications. You can only configure one phone provider for all SMS and voice communications per tenant.
//
// !> This resource manages to create a max of 1 phone provider for a tenant.
// To avoid potential issues, it is recommended not to try creating multiple phone providers on the same tenant.
//
// !> If you are using the `PhoneProvider` resource to create a `custom` phone provider, you must ensure an action is created first with `custom-phone-provider` as the supportedTriggers
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// This is an example on how to set up the phone provider with Twilio.
//			_, err := auth0.NewPhoneProvider(ctx, "twilio_phone_provider", &auth0.PhoneProviderArgs{
//				Name:     pulumi.String("twilio"),
//				Disabled: pulumi.Bool(false),
//				Credentials: &auth0.PhoneProviderCredentialsArgs{
//					AuthToken: pulumi.String("secretAuthToken"),
//				},
//				Configuration: &auth0.PhoneProviderConfigurationArgs{
//					DeliveryMethods: pulumi.StringArray{
//						pulumi.String("text"),
//						pulumi.String("voice"),
//					},
//					DefaultFrom: pulumi.String("+1234567890"),
//					Sid:         pulumi.String("ACXXXXXXXXXXXXXXXX"),
//					Mssid:       pulumi.String("MSXXXXXXXXXXXXXXXX"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// This is an example on how to set up the phone provider with a custom action.
//			// Make sure a corresponding action exists with custom-phone-provider as supported triggers
//			sendCustomPhone, err := auth0.NewAction(ctx, "send_custom_phone", &auth0.ActionArgs{
//				Name:    pulumi.String("Custom Phone Provider"),
//				Runtime: pulumi.String("node18"),
//				Deploy:  pulumi.Bool(true),
//				Code: pulumi.String(`/**
//	 * Handler to be executed while sending a phone notification
//	 * @param {Event} event - Details about the user and the context in which they are logging in.
//	 * @param {CustomPhoneProviderAPI} api - Methods and utilities to help change the behavior of sending a phone notification.
//	 */
//
//	exports.onExecuteCustomPhoneProvider = async (event, api) => {
//	    // Code goes here
//	    return;
//	};
//
// `),
//
//				SupportedTriggers: &auth0.ActionSupportedTriggersArgs{
//					Id:      pulumi.String("custom-phone-provider"),
//					Version: pulumi.String("v1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = auth0.NewPhoneProvider(ctx, "custom_phone_provider", &auth0.PhoneProviderArgs{
//				Name:     pulumi.String("custom"),
//				Disabled: pulumi.Bool(false),
//				Configuration: &auth0.PhoneProviderConfigurationArgs{
//					DeliveryMethods: pulumi.StringArray{
//						pulumi.String("text"),
//						pulumi.String("voice"),
//					},
//				},
//				Credentials: &auth0.PhoneProviderCredentialsArgs{},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				sendCustomPhone,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// This resource can be imported by specifying the phone Provider ID.
//
// Example:
//
// ```sh
// $ pulumi import auth0:index/phoneProvider:PhoneProvider my_phone_provider "pro_XXXXXXXXXXXXXXXX"
// ```
type PhoneProvider struct {
	pulumi.CustomResourceState

	// The channel of the phone provider.
	Channel pulumi.StringOutput `pulumi:"channel"`
	// Specific phone provider settings.
	Configuration PhoneProviderConfigurationOutput `pulumi:"configuration"`
	// Provider credentials required to use authenticate to the provider.
	Credentials PhoneProviderCredentialsOutput `pulumi:"credentials"`
	// Indicates whether the phone provider is enabled (false) or disabled (true).
	Disabled pulumi.BoolPtrOutput `pulumi:"disabled"`
	// Name of the phone provider. Options include `twilio`, `custom`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The tenant of the phone provider.
	Tenant pulumi.StringOutput `pulumi:"tenant"`
}

// NewPhoneProvider registers a new resource with the given unique name, arguments, and options.
func NewPhoneProvider(ctx *pulumi.Context,
	name string, args *PhoneProviderArgs, opts ...pulumi.ResourceOption) (*PhoneProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.Credentials == nil {
		return nil, errors.New("invalid value for required argument 'Credentials'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PhoneProvider
	err := ctx.RegisterResource("auth0:index/phoneProvider:PhoneProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPhoneProvider gets an existing PhoneProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPhoneProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PhoneProviderState, opts ...pulumi.ResourceOption) (*PhoneProvider, error) {
	var resource PhoneProvider
	err := ctx.ReadResource("auth0:index/phoneProvider:PhoneProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PhoneProvider resources.
type phoneProviderState struct {
	// The channel of the phone provider.
	Channel *string `pulumi:"channel"`
	// Specific phone provider settings.
	Configuration *PhoneProviderConfiguration `pulumi:"configuration"`
	// Provider credentials required to use authenticate to the provider.
	Credentials *PhoneProviderCredentials `pulumi:"credentials"`
	// Indicates whether the phone provider is enabled (false) or disabled (true).
	Disabled *bool `pulumi:"disabled"`
	// Name of the phone provider. Options include `twilio`, `custom`.
	Name *string `pulumi:"name"`
	// The tenant of the phone provider.
	Tenant *string `pulumi:"tenant"`
}

type PhoneProviderState struct {
	// The channel of the phone provider.
	Channel pulumi.StringPtrInput
	// Specific phone provider settings.
	Configuration PhoneProviderConfigurationPtrInput
	// Provider credentials required to use authenticate to the provider.
	Credentials PhoneProviderCredentialsPtrInput
	// Indicates whether the phone provider is enabled (false) or disabled (true).
	Disabled pulumi.BoolPtrInput
	// Name of the phone provider. Options include `twilio`, `custom`.
	Name pulumi.StringPtrInput
	// The tenant of the phone provider.
	Tenant pulumi.StringPtrInput
}

func (PhoneProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*phoneProviderState)(nil)).Elem()
}

type phoneProviderArgs struct {
	// Specific phone provider settings.
	Configuration PhoneProviderConfiguration `pulumi:"configuration"`
	// Provider credentials required to use authenticate to the provider.
	Credentials PhoneProviderCredentials `pulumi:"credentials"`
	// Indicates whether the phone provider is enabled (false) or disabled (true).
	Disabled *bool `pulumi:"disabled"`
	// Name of the phone provider. Options include `twilio`, `custom`.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PhoneProvider resource.
type PhoneProviderArgs struct {
	// Specific phone provider settings.
	Configuration PhoneProviderConfigurationInput
	// Provider credentials required to use authenticate to the provider.
	Credentials PhoneProviderCredentialsInput
	// Indicates whether the phone provider is enabled (false) or disabled (true).
	Disabled pulumi.BoolPtrInput
	// Name of the phone provider. Options include `twilio`, `custom`.
	Name pulumi.StringPtrInput
}

func (PhoneProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*phoneProviderArgs)(nil)).Elem()
}

type PhoneProviderInput interface {
	pulumi.Input

	ToPhoneProviderOutput() PhoneProviderOutput
	ToPhoneProviderOutputWithContext(ctx context.Context) PhoneProviderOutput
}

func (*PhoneProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**PhoneProvider)(nil)).Elem()
}

func (i *PhoneProvider) ToPhoneProviderOutput() PhoneProviderOutput {
	return i.ToPhoneProviderOutputWithContext(context.Background())
}

func (i *PhoneProvider) ToPhoneProviderOutputWithContext(ctx context.Context) PhoneProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneProviderOutput)
}

// PhoneProviderArrayInput is an input type that accepts PhoneProviderArray and PhoneProviderArrayOutput values.
// You can construct a concrete instance of `PhoneProviderArrayInput` via:
//
//	PhoneProviderArray{ PhoneProviderArgs{...} }
type PhoneProviderArrayInput interface {
	pulumi.Input

	ToPhoneProviderArrayOutput() PhoneProviderArrayOutput
	ToPhoneProviderArrayOutputWithContext(context.Context) PhoneProviderArrayOutput
}

type PhoneProviderArray []PhoneProviderInput

func (PhoneProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PhoneProvider)(nil)).Elem()
}

func (i PhoneProviderArray) ToPhoneProviderArrayOutput() PhoneProviderArrayOutput {
	return i.ToPhoneProviderArrayOutputWithContext(context.Background())
}

func (i PhoneProviderArray) ToPhoneProviderArrayOutputWithContext(ctx context.Context) PhoneProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneProviderArrayOutput)
}

// PhoneProviderMapInput is an input type that accepts PhoneProviderMap and PhoneProviderMapOutput values.
// You can construct a concrete instance of `PhoneProviderMapInput` via:
//
//	PhoneProviderMap{ "key": PhoneProviderArgs{...} }
type PhoneProviderMapInput interface {
	pulumi.Input

	ToPhoneProviderMapOutput() PhoneProviderMapOutput
	ToPhoneProviderMapOutputWithContext(context.Context) PhoneProviderMapOutput
}

type PhoneProviderMap map[string]PhoneProviderInput

func (PhoneProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PhoneProvider)(nil)).Elem()
}

func (i PhoneProviderMap) ToPhoneProviderMapOutput() PhoneProviderMapOutput {
	return i.ToPhoneProviderMapOutputWithContext(context.Background())
}

func (i PhoneProviderMap) ToPhoneProviderMapOutputWithContext(ctx context.Context) PhoneProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhoneProviderMapOutput)
}

type PhoneProviderOutput struct{ *pulumi.OutputState }

func (PhoneProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PhoneProvider)(nil)).Elem()
}

func (o PhoneProviderOutput) ToPhoneProviderOutput() PhoneProviderOutput {
	return o
}

func (o PhoneProviderOutput) ToPhoneProviderOutputWithContext(ctx context.Context) PhoneProviderOutput {
	return o
}

// The channel of the phone provider.
func (o PhoneProviderOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v *PhoneProvider) pulumi.StringOutput { return v.Channel }).(pulumi.StringOutput)
}

// Specific phone provider settings.
func (o PhoneProviderOutput) Configuration() PhoneProviderConfigurationOutput {
	return o.ApplyT(func(v *PhoneProvider) PhoneProviderConfigurationOutput { return v.Configuration }).(PhoneProviderConfigurationOutput)
}

// Provider credentials required to use authenticate to the provider.
func (o PhoneProviderOutput) Credentials() PhoneProviderCredentialsOutput {
	return o.ApplyT(func(v *PhoneProvider) PhoneProviderCredentialsOutput { return v.Credentials }).(PhoneProviderCredentialsOutput)
}

// Indicates whether the phone provider is enabled (false) or disabled (true).
func (o PhoneProviderOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PhoneProvider) pulumi.BoolPtrOutput { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// Name of the phone provider. Options include `twilio`, `custom`.
func (o PhoneProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PhoneProvider) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The tenant of the phone provider.
func (o PhoneProviderOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v *PhoneProvider) pulumi.StringOutput { return v.Tenant }).(pulumi.StringOutput)
}

type PhoneProviderArrayOutput struct{ *pulumi.OutputState }

func (PhoneProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PhoneProvider)(nil)).Elem()
}

func (o PhoneProviderArrayOutput) ToPhoneProviderArrayOutput() PhoneProviderArrayOutput {
	return o
}

func (o PhoneProviderArrayOutput) ToPhoneProviderArrayOutputWithContext(ctx context.Context) PhoneProviderArrayOutput {
	return o
}

func (o PhoneProviderArrayOutput) Index(i pulumi.IntInput) PhoneProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PhoneProvider {
		return vs[0].([]*PhoneProvider)[vs[1].(int)]
	}).(PhoneProviderOutput)
}

type PhoneProviderMapOutput struct{ *pulumi.OutputState }

func (PhoneProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PhoneProvider)(nil)).Elem()
}

func (o PhoneProviderMapOutput) ToPhoneProviderMapOutput() PhoneProviderMapOutput {
	return o
}

func (o PhoneProviderMapOutput) ToPhoneProviderMapOutputWithContext(ctx context.Context) PhoneProviderMapOutput {
	return o
}

func (o PhoneProviderMapOutput) MapIndex(k pulumi.StringInput) PhoneProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PhoneProvider {
		return vs[0].(map[string]*PhoneProvider)[vs[1].(string)]
	}).(PhoneProviderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneProviderInput)(nil)).Elem(), &PhoneProvider{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneProviderArrayInput)(nil)).Elem(), PhoneProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhoneProviderMapInput)(nil)).Elem(), PhoneProviderMap{})
	pulumi.RegisterOutputType(PhoneProviderOutput{})
	pulumi.RegisterOutputType(PhoneProviderArrayOutput{})
	pulumi.RegisterOutputType(PhoneProviderMapOutput{})
}
