// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows you to manage Auth0 Event Streams.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Creates an event stream of type eventbridge
//			_, err := auth0.NewEventStream(ctx, "my_event_stream_event_bridge", &auth0.EventStreamArgs{
//				Name:            pulumi.String("my-eventbridge"),
//				DestinationType: pulumi.String("eventbridge"),
//				Subscriptions: pulumi.StringArray{
//					pulumi.String("user.created"),
//					pulumi.String("user.updated"),
//				},
//				EventbridgeConfiguration: &auth0.EventStreamEventbridgeConfigurationArgs{
//					AwsAccountId: pulumi.String("242849305777"),
//					AwsRegion:    pulumi.String("us-east-1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			// Creates an event stream of type webhook
//			_, err = auth0.NewEventStream(ctx, "my_event_stream_webhook", &auth0.EventStreamArgs{
//				Name:            pulumi.String("my-webhook"),
//				DestinationType: pulumi.String("webhook"),
//				Subscriptions: pulumi.StringArray{
//					pulumi.String("user.created"),
//					pulumi.String("user.updated"),
//				},
//				WebhookConfiguration: &auth0.EventStreamWebhookConfigurationArgs{
//					WebhookEndpoint: pulumi.String("https://eof28wtn4v4506o.m.pipedream.net"),
//					WebhookAuthorization: &auth0.EventStreamWebhookConfigurationWebhookAuthorizationArgs{
//						Method: pulumi.String("bearer"),
//						Token:  pulumi.String("123456789"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// This resource can be imported by specifying the Event Stream ID.
//
// Example:
//
// ```sh
// $ pulumi import auth0:index/eventStream:EventStream my_stream "est_XXXXXXXXXXXXXXXX"
// ```
type EventStream struct {
	pulumi.CustomResourceState

	// The ISO 8601 timestamp when the stream was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The type of event stream destination (either 'eventbridge' or 'webhook').
	DestinationType pulumi.StringOutput `pulumi:"destinationType"`
	// Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
	EventbridgeConfiguration EventStreamEventbridgeConfigurationPtrOutput `pulumi:"eventbridgeConfiguration"`
	// The name of the event stream.
	Name pulumi.StringOutput `pulumi:"name"`
	// The current status of the event stream.
	Status pulumi.StringOutput `pulumi:"status"`
	// List of event types this stream is subscribed to.
	Subscriptions pulumi.StringArrayOutput `pulumi:"subscriptions"`
	// The ISO 8601 timestamp when the stream was last updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
	WebhookConfiguration EventStreamWebhookConfigurationPtrOutput `pulumi:"webhookConfiguration"`
}

// NewEventStream registers a new resource with the given unique name, arguments, and options.
func NewEventStream(ctx *pulumi.Context,
	name string, args *EventStreamArgs, opts ...pulumi.ResourceOption) (*EventStream, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DestinationType == nil {
		return nil, errors.New("invalid value for required argument 'DestinationType'")
	}
	if args.Subscriptions == nil {
		return nil, errors.New("invalid value for required argument 'Subscriptions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventStream
	err := ctx.RegisterResource("auth0:index/eventStream:EventStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventStream gets an existing EventStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventStreamState, opts ...pulumi.ResourceOption) (*EventStream, error) {
	var resource EventStream
	err := ctx.ReadResource("auth0:index/eventStream:EventStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventStream resources.
type eventStreamState struct {
	// The ISO 8601 timestamp when the stream was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The type of event stream destination (either 'eventbridge' or 'webhook').
	DestinationType *string `pulumi:"destinationType"`
	// Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
	EventbridgeConfiguration *EventStreamEventbridgeConfiguration `pulumi:"eventbridgeConfiguration"`
	// The name of the event stream.
	Name *string `pulumi:"name"`
	// The current status of the event stream.
	Status *string `pulumi:"status"`
	// List of event types this stream is subscribed to.
	Subscriptions []string `pulumi:"subscriptions"`
	// The ISO 8601 timestamp when the stream was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
	WebhookConfiguration *EventStreamWebhookConfiguration `pulumi:"webhookConfiguration"`
}

type EventStreamState struct {
	// The ISO 8601 timestamp when the stream was created.
	CreatedAt pulumi.StringPtrInput
	// The type of event stream destination (either 'eventbridge' or 'webhook').
	DestinationType pulumi.StringPtrInput
	// Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
	EventbridgeConfiguration EventStreamEventbridgeConfigurationPtrInput
	// The name of the event stream.
	Name pulumi.StringPtrInput
	// The current status of the event stream.
	Status pulumi.StringPtrInput
	// List of event types this stream is subscribed to.
	Subscriptions pulumi.StringArrayInput
	// The ISO 8601 timestamp when the stream was last updated.
	UpdatedAt pulumi.StringPtrInput
	// Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
	WebhookConfiguration EventStreamWebhookConfigurationPtrInput
}

func (EventStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventStreamState)(nil)).Elem()
}

type eventStreamArgs struct {
	// The type of event stream destination (either 'eventbridge' or 'webhook').
	DestinationType string `pulumi:"destinationType"`
	// Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
	EventbridgeConfiguration *EventStreamEventbridgeConfiguration `pulumi:"eventbridgeConfiguration"`
	// The name of the event stream.
	Name *string `pulumi:"name"`
	// List of event types this stream is subscribed to.
	Subscriptions []string `pulumi:"subscriptions"`
	// Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
	WebhookConfiguration *EventStreamWebhookConfiguration `pulumi:"webhookConfiguration"`
}

// The set of arguments for constructing a EventStream resource.
type EventStreamArgs struct {
	// The type of event stream destination (either 'eventbridge' or 'webhook').
	DestinationType pulumi.StringInput
	// Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
	EventbridgeConfiguration EventStreamEventbridgeConfigurationPtrInput
	// The name of the event stream.
	Name pulumi.StringPtrInput
	// List of event types this stream is subscribed to.
	Subscriptions pulumi.StringArrayInput
	// Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
	WebhookConfiguration EventStreamWebhookConfigurationPtrInput
}

func (EventStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventStreamArgs)(nil)).Elem()
}

type EventStreamInput interface {
	pulumi.Input

	ToEventStreamOutput() EventStreamOutput
	ToEventStreamOutputWithContext(ctx context.Context) EventStreamOutput
}

func (*EventStream) ElementType() reflect.Type {
	return reflect.TypeOf((**EventStream)(nil)).Elem()
}

func (i *EventStream) ToEventStreamOutput() EventStreamOutput {
	return i.ToEventStreamOutputWithContext(context.Background())
}

func (i *EventStream) ToEventStreamOutputWithContext(ctx context.Context) EventStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventStreamOutput)
}

// EventStreamArrayInput is an input type that accepts EventStreamArray and EventStreamArrayOutput values.
// You can construct a concrete instance of `EventStreamArrayInput` via:
//
//	EventStreamArray{ EventStreamArgs{...} }
type EventStreamArrayInput interface {
	pulumi.Input

	ToEventStreamArrayOutput() EventStreamArrayOutput
	ToEventStreamArrayOutputWithContext(context.Context) EventStreamArrayOutput
}

type EventStreamArray []EventStreamInput

func (EventStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EventStream)(nil)).Elem()
}

func (i EventStreamArray) ToEventStreamArrayOutput() EventStreamArrayOutput {
	return i.ToEventStreamArrayOutputWithContext(context.Background())
}

func (i EventStreamArray) ToEventStreamArrayOutputWithContext(ctx context.Context) EventStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventStreamArrayOutput)
}

// EventStreamMapInput is an input type that accepts EventStreamMap and EventStreamMapOutput values.
// You can construct a concrete instance of `EventStreamMapInput` via:
//
//	EventStreamMap{ "key": EventStreamArgs{...} }
type EventStreamMapInput interface {
	pulumi.Input

	ToEventStreamMapOutput() EventStreamMapOutput
	ToEventStreamMapOutputWithContext(context.Context) EventStreamMapOutput
}

type EventStreamMap map[string]EventStreamInput

func (EventStreamMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EventStream)(nil)).Elem()
}

func (i EventStreamMap) ToEventStreamMapOutput() EventStreamMapOutput {
	return i.ToEventStreamMapOutputWithContext(context.Background())
}

func (i EventStreamMap) ToEventStreamMapOutputWithContext(ctx context.Context) EventStreamMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventStreamMapOutput)
}

type EventStreamOutput struct{ *pulumi.OutputState }

func (EventStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventStream)(nil)).Elem()
}

func (o EventStreamOutput) ToEventStreamOutput() EventStreamOutput {
	return o
}

func (o EventStreamOutput) ToEventStreamOutputWithContext(ctx context.Context) EventStreamOutput {
	return o
}

// The ISO 8601 timestamp when the stream was created.
func (o EventStreamOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EventStream) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The type of event stream destination (either 'eventbridge' or 'webhook').
func (o EventStreamOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v *EventStream) pulumi.StringOutput { return v.DestinationType }).(pulumi.StringOutput)
}

// Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
func (o EventStreamOutput) EventbridgeConfiguration() EventStreamEventbridgeConfigurationPtrOutput {
	return o.ApplyT(func(v *EventStream) EventStreamEventbridgeConfigurationPtrOutput { return v.EventbridgeConfiguration }).(EventStreamEventbridgeConfigurationPtrOutput)
}

// The name of the event stream.
func (o EventStreamOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EventStream) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The current status of the event stream.
func (o EventStreamOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *EventStream) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// List of event types this stream is subscribed to.
func (o EventStreamOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EventStream) pulumi.StringArrayOutput { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

// The ISO 8601 timestamp when the stream was last updated.
func (o EventStreamOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EventStream) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
func (o EventStreamOutput) WebhookConfiguration() EventStreamWebhookConfigurationPtrOutput {
	return o.ApplyT(func(v *EventStream) EventStreamWebhookConfigurationPtrOutput { return v.WebhookConfiguration }).(EventStreamWebhookConfigurationPtrOutput)
}

type EventStreamArrayOutput struct{ *pulumi.OutputState }

func (EventStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EventStream)(nil)).Elem()
}

func (o EventStreamArrayOutput) ToEventStreamArrayOutput() EventStreamArrayOutput {
	return o
}

func (o EventStreamArrayOutput) ToEventStreamArrayOutputWithContext(ctx context.Context) EventStreamArrayOutput {
	return o
}

func (o EventStreamArrayOutput) Index(i pulumi.IntInput) EventStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EventStream {
		return vs[0].([]*EventStream)[vs[1].(int)]
	}).(EventStreamOutput)
}

type EventStreamMapOutput struct{ *pulumi.OutputState }

func (EventStreamMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EventStream)(nil)).Elem()
}

func (o EventStreamMapOutput) ToEventStreamMapOutput() EventStreamMapOutput {
	return o
}

func (o EventStreamMapOutput) ToEventStreamMapOutputWithContext(ctx context.Context) EventStreamMapOutput {
	return o
}

func (o EventStreamMapOutput) MapIndex(k pulumi.StringInput) EventStreamOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EventStream {
		return vs[0].(map[string]*EventStream)[vs[1].(string)]
	}).(EventStreamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventStreamInput)(nil)).Elem(), &EventStream{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventStreamArrayInput)(nil)).Elem(), EventStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventStreamMapInput)(nil)).Elem(), EventStreamMap{})
	pulumi.RegisterOutputType(EventStreamOutput{})
	pulumi.RegisterOutputType(EventStreamArrayOutput{})
	pulumi.RegisterOutputType(EventStreamMapOutput{})
}
