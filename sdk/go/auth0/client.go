// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// With this resource, you can set up applications that use Auth0 for authentication and configure allowed callback URLs and secrets for these applications. Depending on your plan, you may also configure add-ons to allow your application to call another application's API (such as Firebase and AWS) on behalf of an authenticated user.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-auth0/sdk/v2/go/auth0"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := auth0.NewClient(ctx, "myClient", &auth0.ClientArgs{
// 			Addons: &ClientAddonsArgs{
// 				Firebase: pulumi.AnyMap{
// 					"clientEmail":       pulumi.Any("john.doe@example.com"),
// 					"lifetimeInSeconds": pulumi.Any(1),
// 					"privateKey":        pulumi.Any("wer"),
// 					"privateKeyId":      pulumi.Any("qwreerwerwe"),
// 				},
// 				Samlp: &ClientAddonsSamlpArgs{
// 					Audience:             pulumi.String("https://example.com/saml"),
// 					CreateUpnClaim:       pulumi.Bool(false),
// 					MapIdentities:        pulumi.Bool(false),
// 					MapUnknownClaimsAsIs: pulumi.Bool(false),
// 					Mappings: pulumi.AnyMap{
// 						"email": pulumi.Any("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"),
// 						"name":  pulumi.Any("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"),
// 					},
// 					NameIdentifierFormat: pulumi.String("urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"),
// 					NameIdentifierProbes: pulumi.StringArray{
// 						pulumi.String("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"),
// 					},
// 					PassthroughClaimsWithNoMapping: pulumi.Bool(false),
// 					SigningCert:                    pulumi.String("pemcertificate"),
// 				},
// 			},
// 			AllowedClients: pulumi.StringArray{
// 				pulumi.String("https://allowed.example.com"),
// 			},
// 			AllowedLogoutUrls: pulumi.StringArray{
// 				pulumi.String("https://example.com"),
// 			},
// 			AllowedOrigins: pulumi.StringArray{
// 				pulumi.String("https://example.com"),
// 			},
// 			AppType: pulumi.String("non_interactive"),
// 			Callbacks: pulumi.StringArray{
// 				pulumi.String("https://example.com/callback"),
// 			},
// 			ClientMetadata: pulumi.AnyMap{
// 				"foo": pulumi.Any("zoo"),
// 			},
// 			ClientSecretRotationTrigger: pulumi.AnyMap{
// 				"triggered_at": pulumi.Any("2018-01-02T23:12:01Z"),
// 				"triggered_by": pulumi.Any("auth0"),
// 			},
// 			CustomLoginPageOn: pulumi.Bool(true),
// 			Description:       pulumi.String("Test Applications Long Description"),
// 			GrantTypes: pulumi.StringArray{
// 				pulumi.String("authorization_code"),
// 				pulumi.String("http://auth0.com/oauth/grant-type/password-realm"),
// 				pulumi.String("implicit"),
// 				pulumi.String("password"),
// 				pulumi.String("refresh_token"),
// 			},
// 			InitiateLoginUri:               pulumi.String("https://example.com/login"),
// 			IsFirstParty:                   pulumi.Bool(true),
// 			IsTokenEndpointIpHeaderTrusted: pulumi.Bool(true),
// 			JwtConfiguration: &ClientJwtConfigurationArgs{
// 				Alg:               pulumi.String("RS256"),
// 				LifetimeInSeconds: pulumi.Int(300),
// 				Scopes: pulumi.StringMap{
// 					"foo": pulumi.String("bar"),
// 				},
// 				SecretEncoded: pulumi.Bool(true),
// 			},
// 			Mobile: &ClientMobileArgs{
// 				Ios: &ClientMobileIosArgs{
// 					AppBundleIdentifier: pulumi.String("com.my.bundle.id"),
// 					TeamId:              pulumi.String("9JA89QQLNQ"),
// 				},
// 			},
// 			OidcConformant:              pulumi.Bool(false),
// 			OrganizationRequireBehavior: pulumi.String("no_prompt"),
// 			OrganizationUsage:           pulumi.String("deny"),
// 			RefreshToken: &ClientRefreshTokenArgs{
// 				ExpirationType:            pulumi.String("expiring"),
// 				IdleTokenLifetime:         pulumi.Int(1296000),
// 				InfiniteIdleTokenLifetime: pulumi.Bool(true),
// 				InfiniteTokenLifetime:     pulumi.Bool(false),
// 				Leeway:                    pulumi.Int(15),
// 				RotationType:              pulumi.String("rotating"),
// 				TokenLifetime:             pulumi.Int(84600),
// 			},
// 			TokenEndpointAuthMethod: pulumi.String("client_secret_post"),
// 			WebOrigins: pulumi.StringArray{
// 				pulumi.String("https://example.com"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// A client can be imported using the client's ID, e.g.
//
// ```sh
//  $ pulumi import auth0:index/client:Client my_client AaiyAPdpYdesoKnqjj8HJqRn4T5titww
// ```
type Client struct {
	pulumi.CustomResourceState

	// List(Resource). Configuration settings for add-ons for this client. For details, see Add-ons.
	Addons ClientAddonsPtrOutput `pulumi:"addons"`
	// List(String). List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.
	AllowedClients pulumi.StringArrayOutput `pulumi:"allowedClients"`
	// List(String). URLs that Auth0 may redirect to after logout.
	AllowedLogoutUrls pulumi.StringArrayOutput `pulumi:"allowedLogoutUrls"`
	// List(String). URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.
	AllowedOrigins pulumi.StringArrayOutput `pulumi:"allowedOrigins"`
	// String. Type of application the client represents. Options include `native`, `spa`, `regularWeb`, `nonInteractive`, `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.
	AppType pulumi.StringPtrOutput `pulumi:"appType"`
	// List(String). URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.
	Callbacks pulumi.StringArrayOutput `pulumi:"callbacks"`
	// String. ID of the client.
	// * `clientSecret`<sup>1</sup> - String. Secret for the client; keep this private.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// Map(String)
	ClientMetadata pulumi.MapOutput    `pulumi:"clientMetadata"`
	ClientSecret   pulumi.StringOutput `pulumi:"clientSecret"`
	// Map. Custom metadata for the rotation. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).
	ClientSecretRotationTrigger pulumi.MapOutput `pulumi:"clientSecretRotationTrigger"`
	// Boolean. Indicates whether or not the client can be used to make cross-origin authentication requests.
	CrossOriginAuth pulumi.BoolPtrOutput `pulumi:"crossOriginAuth"`
	// String. URL for the location on your site where the cross-origin verification takes place for the cross-origin auth flow. Used when performing auth in your own domain instead of through the Auth0-hosted login page.
	CrossOriginLoc pulumi.StringPtrOutput `pulumi:"crossOriginLoc"`
	// String. Content of the custom login page.
	CustomLoginPage pulumi.StringPtrOutput `pulumi:"customLoginPage"`
	// Boolean. Indicates whether or not a custom login page is to be used.
	CustomLoginPageOn pulumi.BoolOutput `pulumi:"customLoginPageOn"`
	// String, (Max length = 140 characters). Description of the purpose of the client.
	Description pulumi.StringOutput `pulumi:"description"`
	// Map(String).
	EncryptionKey pulumi.StringMapOutput `pulumi:"encryptionKey"`
	// String. Form template for WS-Federation protocol.
	FormTemplate pulumi.StringPtrOutput `pulumi:"formTemplate"`
	// List(String). Types of grants that this client is authorized to use.
	GrantTypes pulumi.StringArrayOutput `pulumi:"grantTypes"`
	// String. Initiate login uri, must be https.
	InitiateLoginUri pulumi.StringPtrOutput `pulumi:"initiateLoginUri"`
	// Boolean. Indicates whether or not this client is a first-party client.
	IsFirstParty pulumi.BoolOutput `pulumi:"isFirstParty"`
	// Boolean. Indicates whether or not the token endpoint IP header is trusted.
	IsTokenEndpointIpHeaderTrusted pulumi.BoolOutput `pulumi:"isTokenEndpointIpHeaderTrusted"`
	// List(Resource). Configuration settings for the JWTs issued for this client. For details, see JWT Configuration.
	JwtConfiguration ClientJwtConfigurationOutput `pulumi:"jwtConfiguration"`
	// String. URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.
	LogoUri pulumi.StringPtrOutput `pulumi:"logoUri"`
	// List(Resource). Configuration settings for mobile native applications. For details, see Mobile.
	Mobile ClientMobileOutput `pulumi:"mobile"`
	// String. Name of the client.
	Name pulumi.StringOutput `pulumi:"name"`
	// List(Resource). Configuration settings to toggle native social login for mobile native applications. For details, see Native Social Login
	NativeSocialLogin ClientNativeSocialLoginOutput `pulumi:"nativeSocialLogin"`
	// Boolean. Indicates whether or not this client will conform to strict OIDC specifications.
	OidcConformant pulumi.BoolOutput `pulumi:"oidcConformant"`
	// String. Defines how to proceed during an authentication transaction when `organizationUsage = "require"`. Can be `noPrompt` (default) or `preLoginPrompt`.
	OrganizationRequireBehavior pulumi.StringPtrOutput `pulumi:"organizationRequireBehavior"`
	// String. Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.
	OrganizationUsage pulumi.StringPtrOutput `pulumi:"organizationUsage"`
	// List(Resource). Configuration settings for the refresh tokens issued for this client.  For details, see Refresh Token Configuration.
	RefreshToken ClientRefreshTokenOutput `pulumi:"refreshToken"`
	// List(Map). List containing a map of the public cert of the signing key and the public cert of the signing key in pkcs7.
	SigningKeys pulumi.MapArrayOutput `pulumi:"signingKeys"`
	// Boolean. Indicates whether or not the client should use Auth0 rather than the IdP to perform Single Sign-On (SSO). True = Use Auth0.
	Sso pulumi.BoolPtrOutput `pulumi:"sso"`
	// Boolean. Indicates whether or not SSO is disabled.
	SsoDisabled pulumi.BoolPtrOutput `pulumi:"ssoDisabled"`
	// String. Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `clientSecretPost` (client uses HTTP POST parameters), `clientSecretBasic` (client uses HTTP Basic).
	TokenEndpointAuthMethod pulumi.StringOutput `pulumi:"tokenEndpointAuthMethod"`
	// List(String). URLs that represent valid web origins for use with web message response mode.
	WebOrigins pulumi.StringArrayOutput `pulumi:"webOrigins"`
}

// NewClient registers a new resource with the given unique name, arguments, and options.
func NewClient(ctx *pulumi.Context,
	name string, args *ClientArgs, opts ...pulumi.ResourceOption) (*Client, error) {
	if args == nil {
		args = &ClientArgs{}
	}

	if isZero(args.Description) {
		args.Description = pulumi.StringPtr("Managed by Pulumi")
	}
	var resource Client
	err := ctx.RegisterResource("auth0:index/client:Client", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClient gets an existing Client resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClient(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientState, opts ...pulumi.ResourceOption) (*Client, error) {
	var resource Client
	err := ctx.ReadResource("auth0:index/client:Client", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Client resources.
type clientState struct {
	// List(Resource). Configuration settings for add-ons for this client. For details, see Add-ons.
	Addons *ClientAddons `pulumi:"addons"`
	// List(String). List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.
	AllowedClients []string `pulumi:"allowedClients"`
	// List(String). URLs that Auth0 may redirect to after logout.
	AllowedLogoutUrls []string `pulumi:"allowedLogoutUrls"`
	// List(String). URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// String. Type of application the client represents. Options include `native`, `spa`, `regularWeb`, `nonInteractive`, `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.
	AppType *string `pulumi:"appType"`
	// List(String). URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.
	Callbacks []string `pulumi:"callbacks"`
	// String. ID of the client.
	// * `clientSecret`<sup>1</sup> - String. Secret for the client; keep this private.
	ClientId *string `pulumi:"clientId"`
	// Map(String)
	ClientMetadata map[string]interface{} `pulumi:"clientMetadata"`
	ClientSecret   *string                `pulumi:"clientSecret"`
	// Map. Custom metadata for the rotation. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).
	ClientSecretRotationTrigger map[string]interface{} `pulumi:"clientSecretRotationTrigger"`
	// Boolean. Indicates whether or not the client can be used to make cross-origin authentication requests.
	CrossOriginAuth *bool `pulumi:"crossOriginAuth"`
	// String. URL for the location on your site where the cross-origin verification takes place for the cross-origin auth flow. Used when performing auth in your own domain instead of through the Auth0-hosted login page.
	CrossOriginLoc *string `pulumi:"crossOriginLoc"`
	// String. Content of the custom login page.
	CustomLoginPage *string `pulumi:"customLoginPage"`
	// Boolean. Indicates whether or not a custom login page is to be used.
	CustomLoginPageOn *bool `pulumi:"customLoginPageOn"`
	// String, (Max length = 140 characters). Description of the purpose of the client.
	Description *string `pulumi:"description"`
	// Map(String).
	EncryptionKey map[string]string `pulumi:"encryptionKey"`
	// String. Form template for WS-Federation protocol.
	FormTemplate *string `pulumi:"formTemplate"`
	// List(String). Types of grants that this client is authorized to use.
	GrantTypes []string `pulumi:"grantTypes"`
	// String. Initiate login uri, must be https.
	InitiateLoginUri *string `pulumi:"initiateLoginUri"`
	// Boolean. Indicates whether or not this client is a first-party client.
	IsFirstParty *bool `pulumi:"isFirstParty"`
	// Boolean. Indicates whether or not the token endpoint IP header is trusted.
	IsTokenEndpointIpHeaderTrusted *bool `pulumi:"isTokenEndpointIpHeaderTrusted"`
	// List(Resource). Configuration settings for the JWTs issued for this client. For details, see JWT Configuration.
	JwtConfiguration *ClientJwtConfiguration `pulumi:"jwtConfiguration"`
	// String. URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.
	LogoUri *string `pulumi:"logoUri"`
	// List(Resource). Configuration settings for mobile native applications. For details, see Mobile.
	Mobile *ClientMobile `pulumi:"mobile"`
	// String. Name of the client.
	Name *string `pulumi:"name"`
	// List(Resource). Configuration settings to toggle native social login for mobile native applications. For details, see Native Social Login
	NativeSocialLogin *ClientNativeSocialLogin `pulumi:"nativeSocialLogin"`
	// Boolean. Indicates whether or not this client will conform to strict OIDC specifications.
	OidcConformant *bool `pulumi:"oidcConformant"`
	// String. Defines how to proceed during an authentication transaction when `organizationUsage = "require"`. Can be `noPrompt` (default) or `preLoginPrompt`.
	OrganizationRequireBehavior *string `pulumi:"organizationRequireBehavior"`
	// String. Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.
	OrganizationUsage *string `pulumi:"organizationUsage"`
	// List(Resource). Configuration settings for the refresh tokens issued for this client.  For details, see Refresh Token Configuration.
	RefreshToken *ClientRefreshToken `pulumi:"refreshToken"`
	// List(Map). List containing a map of the public cert of the signing key and the public cert of the signing key in pkcs7.
	SigningKeys []map[string]interface{} `pulumi:"signingKeys"`
	// Boolean. Indicates whether or not the client should use Auth0 rather than the IdP to perform Single Sign-On (SSO). True = Use Auth0.
	Sso *bool `pulumi:"sso"`
	// Boolean. Indicates whether or not SSO is disabled.
	SsoDisabled *bool `pulumi:"ssoDisabled"`
	// String. Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `clientSecretPost` (client uses HTTP POST parameters), `clientSecretBasic` (client uses HTTP Basic).
	TokenEndpointAuthMethod *string `pulumi:"tokenEndpointAuthMethod"`
	// List(String). URLs that represent valid web origins for use with web message response mode.
	WebOrigins []string `pulumi:"webOrigins"`
}

type ClientState struct {
	// List(Resource). Configuration settings for add-ons for this client. For details, see Add-ons.
	Addons ClientAddonsPtrInput
	// List(String). List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.
	AllowedClients pulumi.StringArrayInput
	// List(String). URLs that Auth0 may redirect to after logout.
	AllowedLogoutUrls pulumi.StringArrayInput
	// List(String). URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.
	AllowedOrigins pulumi.StringArrayInput
	// String. Type of application the client represents. Options include `native`, `spa`, `regularWeb`, `nonInteractive`, `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.
	AppType pulumi.StringPtrInput
	// List(String). URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.
	Callbacks pulumi.StringArrayInput
	// String. ID of the client.
	// * `clientSecret`<sup>1</sup> - String. Secret for the client; keep this private.
	ClientId pulumi.StringPtrInput
	// Map(String)
	ClientMetadata pulumi.MapInput
	ClientSecret   pulumi.StringPtrInput
	// Map. Custom metadata for the rotation. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).
	ClientSecretRotationTrigger pulumi.MapInput
	// Boolean. Indicates whether or not the client can be used to make cross-origin authentication requests.
	CrossOriginAuth pulumi.BoolPtrInput
	// String. URL for the location on your site where the cross-origin verification takes place for the cross-origin auth flow. Used when performing auth in your own domain instead of through the Auth0-hosted login page.
	CrossOriginLoc pulumi.StringPtrInput
	// String. Content of the custom login page.
	CustomLoginPage pulumi.StringPtrInput
	// Boolean. Indicates whether or not a custom login page is to be used.
	CustomLoginPageOn pulumi.BoolPtrInput
	// String, (Max length = 140 characters). Description of the purpose of the client.
	Description pulumi.StringPtrInput
	// Map(String).
	EncryptionKey pulumi.StringMapInput
	// String. Form template for WS-Federation protocol.
	FormTemplate pulumi.StringPtrInput
	// List(String). Types of grants that this client is authorized to use.
	GrantTypes pulumi.StringArrayInput
	// String. Initiate login uri, must be https.
	InitiateLoginUri pulumi.StringPtrInput
	// Boolean. Indicates whether or not this client is a first-party client.
	IsFirstParty pulumi.BoolPtrInput
	// Boolean. Indicates whether or not the token endpoint IP header is trusted.
	IsTokenEndpointIpHeaderTrusted pulumi.BoolPtrInput
	// List(Resource). Configuration settings for the JWTs issued for this client. For details, see JWT Configuration.
	JwtConfiguration ClientJwtConfigurationPtrInput
	// String. URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.
	LogoUri pulumi.StringPtrInput
	// List(Resource). Configuration settings for mobile native applications. For details, see Mobile.
	Mobile ClientMobilePtrInput
	// String. Name of the client.
	Name pulumi.StringPtrInput
	// List(Resource). Configuration settings to toggle native social login for mobile native applications. For details, see Native Social Login
	NativeSocialLogin ClientNativeSocialLoginPtrInput
	// Boolean. Indicates whether or not this client will conform to strict OIDC specifications.
	OidcConformant pulumi.BoolPtrInput
	// String. Defines how to proceed during an authentication transaction when `organizationUsage = "require"`. Can be `noPrompt` (default) or `preLoginPrompt`.
	OrganizationRequireBehavior pulumi.StringPtrInput
	// String. Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.
	OrganizationUsage pulumi.StringPtrInput
	// List(Resource). Configuration settings for the refresh tokens issued for this client.  For details, see Refresh Token Configuration.
	RefreshToken ClientRefreshTokenPtrInput
	// List(Map). List containing a map of the public cert of the signing key and the public cert of the signing key in pkcs7.
	SigningKeys pulumi.MapArrayInput
	// Boolean. Indicates whether or not the client should use Auth0 rather than the IdP to perform Single Sign-On (SSO). True = Use Auth0.
	Sso pulumi.BoolPtrInput
	// Boolean. Indicates whether or not SSO is disabled.
	SsoDisabled pulumi.BoolPtrInput
	// String. Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `clientSecretPost` (client uses HTTP POST parameters), `clientSecretBasic` (client uses HTTP Basic).
	TokenEndpointAuthMethod pulumi.StringPtrInput
	// List(String). URLs that represent valid web origins for use with web message response mode.
	WebOrigins pulumi.StringArrayInput
}

func (ClientState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientState)(nil)).Elem()
}

type clientArgs struct {
	// List(Resource). Configuration settings for add-ons for this client. For details, see Add-ons.
	Addons *ClientAddons `pulumi:"addons"`
	// List(String). List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.
	AllowedClients []string `pulumi:"allowedClients"`
	// List(String). URLs that Auth0 may redirect to after logout.
	AllowedLogoutUrls []string `pulumi:"allowedLogoutUrls"`
	// List(String). URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// String. Type of application the client represents. Options include `native`, `spa`, `regularWeb`, `nonInteractive`, `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.
	AppType *string `pulumi:"appType"`
	// List(String). URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.
	Callbacks []string `pulumi:"callbacks"`
	// Map(String)
	ClientMetadata map[string]interface{} `pulumi:"clientMetadata"`
	// Map. Custom metadata for the rotation. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).
	ClientSecretRotationTrigger map[string]interface{} `pulumi:"clientSecretRotationTrigger"`
	// Boolean. Indicates whether or not the client can be used to make cross-origin authentication requests.
	CrossOriginAuth *bool `pulumi:"crossOriginAuth"`
	// String. URL for the location on your site where the cross-origin verification takes place for the cross-origin auth flow. Used when performing auth in your own domain instead of through the Auth0-hosted login page.
	CrossOriginLoc *string `pulumi:"crossOriginLoc"`
	// String. Content of the custom login page.
	CustomLoginPage *string `pulumi:"customLoginPage"`
	// Boolean. Indicates whether or not a custom login page is to be used.
	CustomLoginPageOn *bool `pulumi:"customLoginPageOn"`
	// String, (Max length = 140 characters). Description of the purpose of the client.
	Description *string `pulumi:"description"`
	// Map(String).
	EncryptionKey map[string]string `pulumi:"encryptionKey"`
	// String. Form template for WS-Federation protocol.
	FormTemplate *string `pulumi:"formTemplate"`
	// List(String). Types of grants that this client is authorized to use.
	GrantTypes []string `pulumi:"grantTypes"`
	// String. Initiate login uri, must be https.
	InitiateLoginUri *string `pulumi:"initiateLoginUri"`
	// Boolean. Indicates whether or not this client is a first-party client.
	IsFirstParty *bool `pulumi:"isFirstParty"`
	// Boolean. Indicates whether or not the token endpoint IP header is trusted.
	IsTokenEndpointIpHeaderTrusted *bool `pulumi:"isTokenEndpointIpHeaderTrusted"`
	// List(Resource). Configuration settings for the JWTs issued for this client. For details, see JWT Configuration.
	JwtConfiguration *ClientJwtConfiguration `pulumi:"jwtConfiguration"`
	// String. URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.
	LogoUri *string `pulumi:"logoUri"`
	// List(Resource). Configuration settings for mobile native applications. For details, see Mobile.
	Mobile *ClientMobile `pulumi:"mobile"`
	// String. Name of the client.
	Name *string `pulumi:"name"`
	// List(Resource). Configuration settings to toggle native social login for mobile native applications. For details, see Native Social Login
	NativeSocialLogin *ClientNativeSocialLogin `pulumi:"nativeSocialLogin"`
	// Boolean. Indicates whether or not this client will conform to strict OIDC specifications.
	OidcConformant *bool `pulumi:"oidcConformant"`
	// String. Defines how to proceed during an authentication transaction when `organizationUsage = "require"`. Can be `noPrompt` (default) or `preLoginPrompt`.
	OrganizationRequireBehavior *string `pulumi:"organizationRequireBehavior"`
	// String. Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.
	OrganizationUsage *string `pulumi:"organizationUsage"`
	// List(Resource). Configuration settings for the refresh tokens issued for this client.  For details, see Refresh Token Configuration.
	RefreshToken *ClientRefreshToken `pulumi:"refreshToken"`
	// Boolean. Indicates whether or not the client should use Auth0 rather than the IdP to perform Single Sign-On (SSO). True = Use Auth0.
	Sso *bool `pulumi:"sso"`
	// Boolean. Indicates whether or not SSO is disabled.
	SsoDisabled *bool `pulumi:"ssoDisabled"`
	// String. Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `clientSecretPost` (client uses HTTP POST parameters), `clientSecretBasic` (client uses HTTP Basic).
	TokenEndpointAuthMethod *string `pulumi:"tokenEndpointAuthMethod"`
	// List(String). URLs that represent valid web origins for use with web message response mode.
	WebOrigins []string `pulumi:"webOrigins"`
}

// The set of arguments for constructing a Client resource.
type ClientArgs struct {
	// List(Resource). Configuration settings for add-ons for this client. For details, see Add-ons.
	Addons ClientAddonsPtrInput
	// List(String). List of applications ID's that will be allowed to make delegation request. By default, all applications will be allowed.
	AllowedClients pulumi.StringArrayInput
	// List(String). URLs that Auth0 may redirect to after logout.
	AllowedLogoutUrls pulumi.StringArrayInput
	// List(String). URLs that represent valid origins for cross-origin resource sharing. By default, all your callback URLs will be allowed.
	AllowedOrigins pulumi.StringArrayInput
	// String. Type of application the client represents. Options include `native`, `spa`, `regularWeb`, `nonInteractive`, `rms`, `box`, `cloudbees`, `concur`, `dropbox`, `mscrm`, `echosign`, `egnyte`, `newrelic`, `office365`, `salesforce`, `sentry`, `sharepoint`, `slack`, `springcm`, `zendesk`, `zoom`.
	AppType pulumi.StringPtrInput
	// List(String). URLs that Auth0 may call back to after a user authenticates for the client. Make sure to specify the protocol (https://) otherwise the callback may fail in some cases. With the exception of custom URI schemes for native clients, all callbacks should use protocol https://.
	Callbacks pulumi.StringArrayInput
	// Map(String)
	ClientMetadata pulumi.MapInput
	// Map. Custom metadata for the rotation. For more info: [rotate-client-secret](https://auth0.com/docs/get-started/applications/rotate-client-secret).
	ClientSecretRotationTrigger pulumi.MapInput
	// Boolean. Indicates whether or not the client can be used to make cross-origin authentication requests.
	CrossOriginAuth pulumi.BoolPtrInput
	// String. URL for the location on your site where the cross-origin verification takes place for the cross-origin auth flow. Used when performing auth in your own domain instead of through the Auth0-hosted login page.
	CrossOriginLoc pulumi.StringPtrInput
	// String. Content of the custom login page.
	CustomLoginPage pulumi.StringPtrInput
	// Boolean. Indicates whether or not a custom login page is to be used.
	CustomLoginPageOn pulumi.BoolPtrInput
	// String, (Max length = 140 characters). Description of the purpose of the client.
	Description pulumi.StringPtrInput
	// Map(String).
	EncryptionKey pulumi.StringMapInput
	// String. Form template for WS-Federation protocol.
	FormTemplate pulumi.StringPtrInput
	// List(String). Types of grants that this client is authorized to use.
	GrantTypes pulumi.StringArrayInput
	// String. Initiate login uri, must be https.
	InitiateLoginUri pulumi.StringPtrInput
	// Boolean. Indicates whether or not this client is a first-party client.
	IsFirstParty pulumi.BoolPtrInput
	// Boolean. Indicates whether or not the token endpoint IP header is trusted.
	IsTokenEndpointIpHeaderTrusted pulumi.BoolPtrInput
	// List(Resource). Configuration settings for the JWTs issued for this client. For details, see JWT Configuration.
	JwtConfiguration ClientJwtConfigurationPtrInput
	// String. URL of the logo for the client. Recommended size is 150px x 150px. If none is set, the default badge for the application type will be shown.
	LogoUri pulumi.StringPtrInput
	// List(Resource). Configuration settings for mobile native applications. For details, see Mobile.
	Mobile ClientMobilePtrInput
	// String. Name of the client.
	Name pulumi.StringPtrInput
	// List(Resource). Configuration settings to toggle native social login for mobile native applications. For details, see Native Social Login
	NativeSocialLogin ClientNativeSocialLoginPtrInput
	// Boolean. Indicates whether or not this client will conform to strict OIDC specifications.
	OidcConformant pulumi.BoolPtrInput
	// String. Defines how to proceed during an authentication transaction when `organizationUsage = "require"`. Can be `noPrompt` (default) or `preLoginPrompt`.
	OrganizationRequireBehavior pulumi.StringPtrInput
	// String. Defines how to proceed during an authentication transaction with regards an organization. Can be `deny` (default), `allow` or `require`.
	OrganizationUsage pulumi.StringPtrInput
	// List(Resource). Configuration settings for the refresh tokens issued for this client.  For details, see Refresh Token Configuration.
	RefreshToken ClientRefreshTokenPtrInput
	// Boolean. Indicates whether or not the client should use Auth0 rather than the IdP to perform Single Sign-On (SSO). True = Use Auth0.
	Sso pulumi.BoolPtrInput
	// Boolean. Indicates whether or not SSO is disabled.
	SsoDisabled pulumi.BoolPtrInput
	// String. Defines the requested authentication method for the token endpoint. Options include `none` (public client without a client secret), `clientSecretPost` (client uses HTTP POST parameters), `clientSecretBasic` (client uses HTTP Basic).
	TokenEndpointAuthMethod pulumi.StringPtrInput
	// List(String). URLs that represent valid web origins for use with web message response mode.
	WebOrigins pulumi.StringArrayInput
}

func (ClientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientArgs)(nil)).Elem()
}

type ClientInput interface {
	pulumi.Input

	ToClientOutput() ClientOutput
	ToClientOutputWithContext(ctx context.Context) ClientOutput
}

func (*Client) ElementType() reflect.Type {
	return reflect.TypeOf((**Client)(nil)).Elem()
}

func (i *Client) ToClientOutput() ClientOutput {
	return i.ToClientOutputWithContext(context.Background())
}

func (i *Client) ToClientOutputWithContext(ctx context.Context) ClientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientOutput)
}

// ClientArrayInput is an input type that accepts ClientArray and ClientArrayOutput values.
// You can construct a concrete instance of `ClientArrayInput` via:
//
//          ClientArray{ ClientArgs{...} }
type ClientArrayInput interface {
	pulumi.Input

	ToClientArrayOutput() ClientArrayOutput
	ToClientArrayOutputWithContext(context.Context) ClientArrayOutput
}

type ClientArray []ClientInput

func (ClientArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Client)(nil)).Elem()
}

func (i ClientArray) ToClientArrayOutput() ClientArrayOutput {
	return i.ToClientArrayOutputWithContext(context.Background())
}

func (i ClientArray) ToClientArrayOutputWithContext(ctx context.Context) ClientArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientArrayOutput)
}

// ClientMapInput is an input type that accepts ClientMap and ClientMapOutput values.
// You can construct a concrete instance of `ClientMapInput` via:
//
//          ClientMap{ "key": ClientArgs{...} }
type ClientMapInput interface {
	pulumi.Input

	ToClientMapOutput() ClientMapOutput
	ToClientMapOutputWithContext(context.Context) ClientMapOutput
}

type ClientMap map[string]ClientInput

func (ClientMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Client)(nil)).Elem()
}

func (i ClientMap) ToClientMapOutput() ClientMapOutput {
	return i.ToClientMapOutputWithContext(context.Background())
}

func (i ClientMap) ToClientMapOutputWithContext(ctx context.Context) ClientMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMapOutput)
}

type ClientOutput struct{ *pulumi.OutputState }

func (ClientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Client)(nil)).Elem()
}

func (o ClientOutput) ToClientOutput() ClientOutput {
	return o
}

func (o ClientOutput) ToClientOutputWithContext(ctx context.Context) ClientOutput {
	return o
}

type ClientArrayOutput struct{ *pulumi.OutputState }

func (ClientArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Client)(nil)).Elem()
}

func (o ClientArrayOutput) ToClientArrayOutput() ClientArrayOutput {
	return o
}

func (o ClientArrayOutput) ToClientArrayOutputWithContext(ctx context.Context) ClientArrayOutput {
	return o
}

func (o ClientArrayOutput) Index(i pulumi.IntInput) ClientOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Client {
		return vs[0].([]*Client)[vs[1].(int)]
	}).(ClientOutput)
}

type ClientMapOutput struct{ *pulumi.OutputState }

func (ClientMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Client)(nil)).Elem()
}

func (o ClientMapOutput) ToClientMapOutput() ClientMapOutput {
	return o
}

func (o ClientMapOutput) ToClientMapOutputWithContext(ctx context.Context) ClientMapOutput {
	return o
}

func (o ClientMapOutput) MapIndex(k pulumi.StringInput) ClientOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Client {
		return vs[0].(map[string]*Client)[vs[1].(string)]
	}).(ClientOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClientInput)(nil)).Elem(), &Client{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientArrayInput)(nil)).Elem(), ClientArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMapInput)(nil)).Elem(), ClientMap{})
	pulumi.RegisterOutputType(ClientOutput{})
	pulumi.RegisterOutputType(ClientArrayOutput{})
	pulumi.RegisterOutputType(ClientMapOutput{})
}
