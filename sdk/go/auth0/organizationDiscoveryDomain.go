// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manage organization discovery domains for Home Realm Discovery. These domains help automatically route users to the correct organization based on their email domain.
type OrganizationDiscoveryDomain struct {
	pulumi.CustomResourceState

	// The domain name for organization discovery.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// The ID of the organization.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Verification status. Must be either 'pending' or 'verified'.
	Status pulumi.StringOutput `pulumi:"status"`
	// The full domain where the TXT record should be added.
	VerificationHost pulumi.StringOutput `pulumi:"verificationHost"`
	// TXT record value for domain verification.
	VerificationTxt pulumi.StringOutput `pulumi:"verificationTxt"`
}

// NewOrganizationDiscoveryDomain registers a new resource with the given unique name, arguments, and options.
func NewOrganizationDiscoveryDomain(ctx *pulumi.Context,
	name string, args *OrganizationDiscoveryDomainArgs, opts ...pulumi.ResourceOption) (*OrganizationDiscoveryDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationDiscoveryDomain
	err := ctx.RegisterResource("auth0:index/organizationDiscoveryDomain:OrganizationDiscoveryDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationDiscoveryDomain gets an existing OrganizationDiscoveryDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationDiscoveryDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationDiscoveryDomainState, opts ...pulumi.ResourceOption) (*OrganizationDiscoveryDomain, error) {
	var resource OrganizationDiscoveryDomain
	err := ctx.ReadResource("auth0:index/organizationDiscoveryDomain:OrganizationDiscoveryDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationDiscoveryDomain resources.
type organizationDiscoveryDomainState struct {
	// The domain name for organization discovery.
	Domain *string `pulumi:"domain"`
	// The ID of the organization.
	OrganizationId *string `pulumi:"organizationId"`
	// Verification status. Must be either 'pending' or 'verified'.
	Status *string `pulumi:"status"`
	// The full domain where the TXT record should be added.
	VerificationHost *string `pulumi:"verificationHost"`
	// TXT record value for domain verification.
	VerificationTxt *string `pulumi:"verificationTxt"`
}

type OrganizationDiscoveryDomainState struct {
	// The domain name for organization discovery.
	Domain pulumi.StringPtrInput
	// The ID of the organization.
	OrganizationId pulumi.StringPtrInput
	// Verification status. Must be either 'pending' or 'verified'.
	Status pulumi.StringPtrInput
	// The full domain where the TXT record should be added.
	VerificationHost pulumi.StringPtrInput
	// TXT record value for domain verification.
	VerificationTxt pulumi.StringPtrInput
}

func (OrganizationDiscoveryDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationDiscoveryDomainState)(nil)).Elem()
}

type organizationDiscoveryDomainArgs struct {
	// The domain name for organization discovery.
	Domain string `pulumi:"domain"`
	// The ID of the organization.
	OrganizationId string `pulumi:"organizationId"`
	// Verification status. Must be either 'pending' or 'verified'.
	Status string `pulumi:"status"`
}

// The set of arguments for constructing a OrganizationDiscoveryDomain resource.
type OrganizationDiscoveryDomainArgs struct {
	// The domain name for organization discovery.
	Domain pulumi.StringInput
	// The ID of the organization.
	OrganizationId pulumi.StringInput
	// Verification status. Must be either 'pending' or 'verified'.
	Status pulumi.StringInput
}

func (OrganizationDiscoveryDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationDiscoveryDomainArgs)(nil)).Elem()
}

type OrganizationDiscoveryDomainInput interface {
	pulumi.Input

	ToOrganizationDiscoveryDomainOutput() OrganizationDiscoveryDomainOutput
	ToOrganizationDiscoveryDomainOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainOutput
}

func (*OrganizationDiscoveryDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationDiscoveryDomain)(nil)).Elem()
}

func (i *OrganizationDiscoveryDomain) ToOrganizationDiscoveryDomainOutput() OrganizationDiscoveryDomainOutput {
	return i.ToOrganizationDiscoveryDomainOutputWithContext(context.Background())
}

func (i *OrganizationDiscoveryDomain) ToOrganizationDiscoveryDomainOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDiscoveryDomainOutput)
}

// OrganizationDiscoveryDomainArrayInput is an input type that accepts OrganizationDiscoveryDomainArray and OrganizationDiscoveryDomainArrayOutput values.
// You can construct a concrete instance of `OrganizationDiscoveryDomainArrayInput` via:
//
//	OrganizationDiscoveryDomainArray{ OrganizationDiscoveryDomainArgs{...} }
type OrganizationDiscoveryDomainArrayInput interface {
	pulumi.Input

	ToOrganizationDiscoveryDomainArrayOutput() OrganizationDiscoveryDomainArrayOutput
	ToOrganizationDiscoveryDomainArrayOutputWithContext(context.Context) OrganizationDiscoveryDomainArrayOutput
}

type OrganizationDiscoveryDomainArray []OrganizationDiscoveryDomainInput

func (OrganizationDiscoveryDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationDiscoveryDomain)(nil)).Elem()
}

func (i OrganizationDiscoveryDomainArray) ToOrganizationDiscoveryDomainArrayOutput() OrganizationDiscoveryDomainArrayOutput {
	return i.ToOrganizationDiscoveryDomainArrayOutputWithContext(context.Background())
}

func (i OrganizationDiscoveryDomainArray) ToOrganizationDiscoveryDomainArrayOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDiscoveryDomainArrayOutput)
}

// OrganizationDiscoveryDomainMapInput is an input type that accepts OrganizationDiscoveryDomainMap and OrganizationDiscoveryDomainMapOutput values.
// You can construct a concrete instance of `OrganizationDiscoveryDomainMapInput` via:
//
//	OrganizationDiscoveryDomainMap{ "key": OrganizationDiscoveryDomainArgs{...} }
type OrganizationDiscoveryDomainMapInput interface {
	pulumi.Input

	ToOrganizationDiscoveryDomainMapOutput() OrganizationDiscoveryDomainMapOutput
	ToOrganizationDiscoveryDomainMapOutputWithContext(context.Context) OrganizationDiscoveryDomainMapOutput
}

type OrganizationDiscoveryDomainMap map[string]OrganizationDiscoveryDomainInput

func (OrganizationDiscoveryDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationDiscoveryDomain)(nil)).Elem()
}

func (i OrganizationDiscoveryDomainMap) ToOrganizationDiscoveryDomainMapOutput() OrganizationDiscoveryDomainMapOutput {
	return i.ToOrganizationDiscoveryDomainMapOutputWithContext(context.Background())
}

func (i OrganizationDiscoveryDomainMap) ToOrganizationDiscoveryDomainMapOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDiscoveryDomainMapOutput)
}

type OrganizationDiscoveryDomainOutput struct{ *pulumi.OutputState }

func (OrganizationDiscoveryDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationDiscoveryDomain)(nil)).Elem()
}

func (o OrganizationDiscoveryDomainOutput) ToOrganizationDiscoveryDomainOutput() OrganizationDiscoveryDomainOutput {
	return o
}

func (o OrganizationDiscoveryDomainOutput) ToOrganizationDiscoveryDomainOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainOutput {
	return o
}

// The domain name for organization discovery.
func (o OrganizationDiscoveryDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryDomain) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// The ID of the organization.
func (o OrganizationDiscoveryDomainOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryDomain) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Verification status. Must be either 'pending' or 'verified'.
func (o OrganizationDiscoveryDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryDomain) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The full domain where the TXT record should be added.
func (o OrganizationDiscoveryDomainOutput) VerificationHost() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryDomain) pulumi.StringOutput { return v.VerificationHost }).(pulumi.StringOutput)
}

// TXT record value for domain verification.
func (o OrganizationDiscoveryDomainOutput) VerificationTxt() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryDomain) pulumi.StringOutput { return v.VerificationTxt }).(pulumi.StringOutput)
}

type OrganizationDiscoveryDomainArrayOutput struct{ *pulumi.OutputState }

func (OrganizationDiscoveryDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationDiscoveryDomain)(nil)).Elem()
}

func (o OrganizationDiscoveryDomainArrayOutput) ToOrganizationDiscoveryDomainArrayOutput() OrganizationDiscoveryDomainArrayOutput {
	return o
}

func (o OrganizationDiscoveryDomainArrayOutput) ToOrganizationDiscoveryDomainArrayOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainArrayOutput {
	return o
}

func (o OrganizationDiscoveryDomainArrayOutput) Index(i pulumi.IntInput) OrganizationDiscoveryDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationDiscoveryDomain {
		return vs[0].([]*OrganizationDiscoveryDomain)[vs[1].(int)]
	}).(OrganizationDiscoveryDomainOutput)
}

type OrganizationDiscoveryDomainMapOutput struct{ *pulumi.OutputState }

func (OrganizationDiscoveryDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationDiscoveryDomain)(nil)).Elem()
}

func (o OrganizationDiscoveryDomainMapOutput) ToOrganizationDiscoveryDomainMapOutput() OrganizationDiscoveryDomainMapOutput {
	return o
}

func (o OrganizationDiscoveryDomainMapOutput) ToOrganizationDiscoveryDomainMapOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainMapOutput {
	return o
}

func (o OrganizationDiscoveryDomainMapOutput) MapIndex(k pulumi.StringInput) OrganizationDiscoveryDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationDiscoveryDomain {
		return vs[0].(map[string]*OrganizationDiscoveryDomain)[vs[1].(string)]
	}).(OrganizationDiscoveryDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDiscoveryDomainInput)(nil)).Elem(), &OrganizationDiscoveryDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDiscoveryDomainArrayInput)(nil)).Elem(), OrganizationDiscoveryDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDiscoveryDomainMapInput)(nil)).Elem(), OrganizationDiscoveryDomainMap{})
	pulumi.RegisterOutputType(OrganizationDiscoveryDomainOutput{})
	pulumi.RegisterOutputType(OrganizationDiscoveryDomainArrayOutput{})
	pulumi.RegisterOutputType(OrganizationDiscoveryDomainMapOutput{})
}
