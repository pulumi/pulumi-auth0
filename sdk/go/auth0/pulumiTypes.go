// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ActionDependency struct {
	// Secret name.
	Name string `pulumi:"name"`
	// Trigger version.
	Version string `pulumi:"version"`
}

// ActionDependencyInput is an input type that accepts ActionDependencyArgs and ActionDependencyOutput values.
// You can construct a concrete instance of `ActionDependencyInput` via:
//
//          ActionDependencyArgs{...}
type ActionDependencyInput interface {
	pulumi.Input

	ToActionDependencyOutput() ActionDependencyOutput
	ToActionDependencyOutputWithContext(context.Context) ActionDependencyOutput
}

type ActionDependencyArgs struct {
	// Secret name.
	Name pulumi.StringInput `pulumi:"name"`
	// Trigger version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ActionDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionDependency)(nil)).Elem()
}

func (i ActionDependencyArgs) ToActionDependencyOutput() ActionDependencyOutput {
	return i.ToActionDependencyOutputWithContext(context.Background())
}

func (i ActionDependencyArgs) ToActionDependencyOutputWithContext(ctx context.Context) ActionDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionDependencyOutput)
}

// ActionDependencyArrayInput is an input type that accepts ActionDependencyArray and ActionDependencyArrayOutput values.
// You can construct a concrete instance of `ActionDependencyArrayInput` via:
//
//          ActionDependencyArray{ ActionDependencyArgs{...} }
type ActionDependencyArrayInput interface {
	pulumi.Input

	ToActionDependencyArrayOutput() ActionDependencyArrayOutput
	ToActionDependencyArrayOutputWithContext(context.Context) ActionDependencyArrayOutput
}

type ActionDependencyArray []ActionDependencyInput

func (ActionDependencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionDependency)(nil)).Elem()
}

func (i ActionDependencyArray) ToActionDependencyArrayOutput() ActionDependencyArrayOutput {
	return i.ToActionDependencyArrayOutputWithContext(context.Background())
}

func (i ActionDependencyArray) ToActionDependencyArrayOutputWithContext(ctx context.Context) ActionDependencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionDependencyArrayOutput)
}

type ActionDependencyOutput struct{ *pulumi.OutputState }

func (ActionDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionDependency)(nil)).Elem()
}

func (o ActionDependencyOutput) ToActionDependencyOutput() ActionDependencyOutput {
	return o
}

func (o ActionDependencyOutput) ToActionDependencyOutputWithContext(ctx context.Context) ActionDependencyOutput {
	return o
}

// Secret name.
func (o ActionDependencyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ActionDependency) string { return v.Name }).(pulumi.StringOutput)
}

// Trigger version.
func (o ActionDependencyOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ActionDependency) string { return v.Version }).(pulumi.StringOutput)
}

type ActionDependencyArrayOutput struct{ *pulumi.OutputState }

func (ActionDependencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionDependency)(nil)).Elem()
}

func (o ActionDependencyArrayOutput) ToActionDependencyArrayOutput() ActionDependencyArrayOutput {
	return o
}

func (o ActionDependencyArrayOutput) ToActionDependencyArrayOutputWithContext(ctx context.Context) ActionDependencyArrayOutput {
	return o
}

func (o ActionDependencyArrayOutput) Index(i pulumi.IntInput) ActionDependencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionDependency {
		return vs[0].([]ActionDependency)[vs[1].(int)]
	}).(ActionDependencyOutput)
}

type ActionSecret struct {
	// Secret name.
	Name string `pulumi:"name"`
	// Secret value.
	Value string `pulumi:"value"`
}

// ActionSecretInput is an input type that accepts ActionSecretArgs and ActionSecretOutput values.
// You can construct a concrete instance of `ActionSecretInput` via:
//
//          ActionSecretArgs{...}
type ActionSecretInput interface {
	pulumi.Input

	ToActionSecretOutput() ActionSecretOutput
	ToActionSecretOutputWithContext(context.Context) ActionSecretOutput
}

type ActionSecretArgs struct {
	// Secret name.
	Name pulumi.StringInput `pulumi:"name"`
	// Secret value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ActionSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSecret)(nil)).Elem()
}

func (i ActionSecretArgs) ToActionSecretOutput() ActionSecretOutput {
	return i.ToActionSecretOutputWithContext(context.Background())
}

func (i ActionSecretArgs) ToActionSecretOutputWithContext(ctx context.Context) ActionSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSecretOutput)
}

// ActionSecretArrayInput is an input type that accepts ActionSecretArray and ActionSecretArrayOutput values.
// You can construct a concrete instance of `ActionSecretArrayInput` via:
//
//          ActionSecretArray{ ActionSecretArgs{...} }
type ActionSecretArrayInput interface {
	pulumi.Input

	ToActionSecretArrayOutput() ActionSecretArrayOutput
	ToActionSecretArrayOutputWithContext(context.Context) ActionSecretArrayOutput
}

type ActionSecretArray []ActionSecretInput

func (ActionSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionSecret)(nil)).Elem()
}

func (i ActionSecretArray) ToActionSecretArrayOutput() ActionSecretArrayOutput {
	return i.ToActionSecretArrayOutputWithContext(context.Background())
}

func (i ActionSecretArray) ToActionSecretArrayOutputWithContext(ctx context.Context) ActionSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSecretArrayOutput)
}

type ActionSecretOutput struct{ *pulumi.OutputState }

func (ActionSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSecret)(nil)).Elem()
}

func (o ActionSecretOutput) ToActionSecretOutput() ActionSecretOutput {
	return o
}

func (o ActionSecretOutput) ToActionSecretOutputWithContext(ctx context.Context) ActionSecretOutput {
	return o
}

// Secret name.
func (o ActionSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Secret value.
func (o ActionSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSecret) string { return v.Value }).(pulumi.StringOutput)
}

type ActionSecretArrayOutput struct{ *pulumi.OutputState }

func (ActionSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionSecret)(nil)).Elem()
}

func (o ActionSecretArrayOutput) ToActionSecretArrayOutput() ActionSecretArrayOutput {
	return o
}

func (o ActionSecretArrayOutput) ToActionSecretArrayOutputWithContext(ctx context.Context) ActionSecretArrayOutput {
	return o
}

func (o ActionSecretArrayOutput) Index(i pulumi.IntInput) ActionSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionSecret {
		return vs[0].([]ActionSecret)[vs[1].(int)]
	}).(ActionSecretOutput)
}

type ActionSupportedTriggers struct {
	// Trigger ID.
	Id string `pulumi:"id"`
	// Trigger version.
	Version string `pulumi:"version"`
}

// ActionSupportedTriggersInput is an input type that accepts ActionSupportedTriggersArgs and ActionSupportedTriggersOutput values.
// You can construct a concrete instance of `ActionSupportedTriggersInput` via:
//
//          ActionSupportedTriggersArgs{...}
type ActionSupportedTriggersInput interface {
	pulumi.Input

	ToActionSupportedTriggersOutput() ActionSupportedTriggersOutput
	ToActionSupportedTriggersOutputWithContext(context.Context) ActionSupportedTriggersOutput
}

type ActionSupportedTriggersArgs struct {
	// Trigger ID.
	Id pulumi.StringInput `pulumi:"id"`
	// Trigger version.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ActionSupportedTriggersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSupportedTriggers)(nil)).Elem()
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersOutput() ActionSupportedTriggersOutput {
	return i.ToActionSupportedTriggersOutputWithContext(context.Background())
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersOutputWithContext(ctx context.Context) ActionSupportedTriggersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSupportedTriggersOutput)
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return i.ToActionSupportedTriggersPtrOutputWithContext(context.Background())
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSupportedTriggersOutput).ToActionSupportedTriggersPtrOutputWithContext(ctx)
}

// ActionSupportedTriggersPtrInput is an input type that accepts ActionSupportedTriggersArgs, ActionSupportedTriggersPtr and ActionSupportedTriggersPtrOutput values.
// You can construct a concrete instance of `ActionSupportedTriggersPtrInput` via:
//
//          ActionSupportedTriggersArgs{...}
//
//  or:
//
//          nil
type ActionSupportedTriggersPtrInput interface {
	pulumi.Input

	ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput
	ToActionSupportedTriggersPtrOutputWithContext(context.Context) ActionSupportedTriggersPtrOutput
}

type actionSupportedTriggersPtrType ActionSupportedTriggersArgs

func ActionSupportedTriggersPtr(v *ActionSupportedTriggersArgs) ActionSupportedTriggersPtrInput {
	return (*actionSupportedTriggersPtrType)(v)
}

func (*actionSupportedTriggersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionSupportedTriggers)(nil)).Elem()
}

func (i *actionSupportedTriggersPtrType) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return i.ToActionSupportedTriggersPtrOutputWithContext(context.Background())
}

func (i *actionSupportedTriggersPtrType) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSupportedTriggersPtrOutput)
}

type ActionSupportedTriggersOutput struct{ *pulumi.OutputState }

func (ActionSupportedTriggersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSupportedTriggers)(nil)).Elem()
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersOutput() ActionSupportedTriggersOutput {
	return o
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersOutputWithContext(ctx context.Context) ActionSupportedTriggersOutput {
	return o
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return o.ToActionSupportedTriggersPtrOutputWithContext(context.Background())
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionSupportedTriggers) *ActionSupportedTriggers {
		return &v
	}).(ActionSupportedTriggersPtrOutput)
}

// Trigger ID.
func (o ActionSupportedTriggersOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSupportedTriggers) string { return v.Id }).(pulumi.StringOutput)
}

// Trigger version.
func (o ActionSupportedTriggersOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSupportedTriggers) string { return v.Version }).(pulumi.StringOutput)
}

type ActionSupportedTriggersPtrOutput struct{ *pulumi.OutputState }

func (ActionSupportedTriggersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionSupportedTriggers)(nil)).Elem()
}

func (o ActionSupportedTriggersPtrOutput) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return o
}

func (o ActionSupportedTriggersPtrOutput) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return o
}

func (o ActionSupportedTriggersPtrOutput) Elem() ActionSupportedTriggersOutput {
	return o.ApplyT(func(v *ActionSupportedTriggers) ActionSupportedTriggers {
		if v != nil {
			return *v
		}
		var ret ActionSupportedTriggers
		return ret
	}).(ActionSupportedTriggersOutput)
}

// Trigger ID.
func (o ActionSupportedTriggersPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionSupportedTriggers) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// Trigger version.
func (o ActionSupportedTriggersPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionSupportedTriggers) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type AttackProtectionBreachedPasswordDetection struct {
	// When "adminNotification" is enabled, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
	AdminNotificationFrequencies []string `pulumi:"adminNotificationFrequencies"`
	// Whether or not breached password detection is active.
	Enabled *bool `pulumi:"enabled"`
	// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
	Method *string `pulumi:"method"`
	// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
	Shields []string `pulumi:"shields"`
}

// AttackProtectionBreachedPasswordDetectionInput is an input type that accepts AttackProtectionBreachedPasswordDetectionArgs and AttackProtectionBreachedPasswordDetectionOutput values.
// You can construct a concrete instance of `AttackProtectionBreachedPasswordDetectionInput` via:
//
//          AttackProtectionBreachedPasswordDetectionArgs{...}
type AttackProtectionBreachedPasswordDetectionInput interface {
	pulumi.Input

	ToAttackProtectionBreachedPasswordDetectionOutput() AttackProtectionBreachedPasswordDetectionOutput
	ToAttackProtectionBreachedPasswordDetectionOutputWithContext(context.Context) AttackProtectionBreachedPasswordDetectionOutput
}

type AttackProtectionBreachedPasswordDetectionArgs struct {
	// When "adminNotification" is enabled, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
	AdminNotificationFrequencies pulumi.StringArrayInput `pulumi:"adminNotificationFrequencies"`
	// Whether or not breached password detection is active.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionBreachedPasswordDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionOutput() AttackProtectionBreachedPasswordDetectionOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionOutputWithContext(context.Background())
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionOutput)
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Background())
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionOutput).ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx)
}

// AttackProtectionBreachedPasswordDetectionPtrInput is an input type that accepts AttackProtectionBreachedPasswordDetectionArgs, AttackProtectionBreachedPasswordDetectionPtr and AttackProtectionBreachedPasswordDetectionPtrOutput values.
// You can construct a concrete instance of `AttackProtectionBreachedPasswordDetectionPtrInput` via:
//
//          AttackProtectionBreachedPasswordDetectionArgs{...}
//
//  or:
//
//          nil
type AttackProtectionBreachedPasswordDetectionPtrInput interface {
	pulumi.Input

	ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput
	ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput
}

type attackProtectionBreachedPasswordDetectionPtrType AttackProtectionBreachedPasswordDetectionArgs

func AttackProtectionBreachedPasswordDetectionPtr(v *AttackProtectionBreachedPasswordDetectionArgs) AttackProtectionBreachedPasswordDetectionPtrInput {
	return (*attackProtectionBreachedPasswordDetectionPtrType)(v)
}

func (*attackProtectionBreachedPasswordDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (i *attackProtectionBreachedPasswordDetectionPtrType) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Background())
}

func (i *attackProtectionBreachedPasswordDetectionPtrType) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionPtrOutput)
}

type AttackProtectionBreachedPasswordDetectionOutput struct{ *pulumi.OutputState }

func (AttackProtectionBreachedPasswordDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionOutput() AttackProtectionBreachedPasswordDetectionOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o.ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Background())
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionBreachedPasswordDetection) *AttackProtectionBreachedPasswordDetection {
		return &v
	}).(AttackProtectionBreachedPasswordDetectionPtrOutput)
}

// When "adminNotification" is enabled, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
func (o AttackProtectionBreachedPasswordDetectionOutput) AdminNotificationFrequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) []string { return v.AdminNotificationFrequencies }).(pulumi.StringArrayOutput)
}

// Whether or not breached password detection is active.
func (o AttackProtectionBreachedPasswordDetectionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
func (o AttackProtectionBreachedPasswordDetectionOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
func (o AttackProtectionBreachedPasswordDetectionOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionBreachedPasswordDetectionPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionBreachedPasswordDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (o AttackProtectionBreachedPasswordDetectionPtrOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPtrOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Elem() AttackProtectionBreachedPasswordDetectionOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) AttackProtectionBreachedPasswordDetection {
		if v != nil {
			return *v
		}
		var ret AttackProtectionBreachedPasswordDetection
		return ret
	}).(AttackProtectionBreachedPasswordDetectionOutput)
}

// When "adminNotification" is enabled, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) AdminNotificationFrequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) []string {
		if v == nil {
			return nil
		}
		return v.AdminNotificationFrequencies
	}).(pulumi.StringArrayOutput)
}

// Whether or not breached password detection is active.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionBruteForceProtection struct {
	// List of trusted IP addresses that will not have attack protection enforced against them.
	Allowlists []string `pulumi:"allowlists"`
	// Whether or not breached password detection is active.
	Enabled *bool `pulumi:"enabled"`
	// Maximum number of unsuccessful attempts. Only available on public tenants.
	MaxAttempts *int `pulumi:"maxAttempts"`
	// Determines whether or not IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` or `countPerIdentifier`.
	Mode *string `pulumi:"mode"`
	// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
	Shields []string `pulumi:"shields"`
}

// AttackProtectionBruteForceProtectionInput is an input type that accepts AttackProtectionBruteForceProtectionArgs and AttackProtectionBruteForceProtectionOutput values.
// You can construct a concrete instance of `AttackProtectionBruteForceProtectionInput` via:
//
//          AttackProtectionBruteForceProtectionArgs{...}
type AttackProtectionBruteForceProtectionInput interface {
	pulumi.Input

	ToAttackProtectionBruteForceProtectionOutput() AttackProtectionBruteForceProtectionOutput
	ToAttackProtectionBruteForceProtectionOutputWithContext(context.Context) AttackProtectionBruteForceProtectionOutput
}

type AttackProtectionBruteForceProtectionArgs struct {
	// List of trusted IP addresses that will not have attack protection enforced against them.
	Allowlists pulumi.StringArrayInput `pulumi:"allowlists"`
	// Whether or not breached password detection is active.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Maximum number of unsuccessful attempts. Only available on public tenants.
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	// Determines whether or not IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` or `countPerIdentifier`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionBruteForceProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionOutput() AttackProtectionBruteForceProtectionOutput {
	return i.ToAttackProtectionBruteForceProtectionOutputWithContext(context.Background())
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBruteForceProtectionOutput)
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return i.ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Background())
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBruteForceProtectionOutput).ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx)
}

// AttackProtectionBruteForceProtectionPtrInput is an input type that accepts AttackProtectionBruteForceProtectionArgs, AttackProtectionBruteForceProtectionPtr and AttackProtectionBruteForceProtectionPtrOutput values.
// You can construct a concrete instance of `AttackProtectionBruteForceProtectionPtrInput` via:
//
//          AttackProtectionBruteForceProtectionArgs{...}
//
//  or:
//
//          nil
type AttackProtectionBruteForceProtectionPtrInput interface {
	pulumi.Input

	ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput
	ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Context) AttackProtectionBruteForceProtectionPtrOutput
}

type attackProtectionBruteForceProtectionPtrType AttackProtectionBruteForceProtectionArgs

func AttackProtectionBruteForceProtectionPtr(v *AttackProtectionBruteForceProtectionArgs) AttackProtectionBruteForceProtectionPtrInput {
	return (*attackProtectionBruteForceProtectionPtrType)(v)
}

func (*attackProtectionBruteForceProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (i *attackProtectionBruteForceProtectionPtrType) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return i.ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Background())
}

func (i *attackProtectionBruteForceProtectionPtrType) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBruteForceProtectionPtrOutput)
}

type AttackProtectionBruteForceProtectionOutput struct{ *pulumi.OutputState }

func (AttackProtectionBruteForceProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionOutput() AttackProtectionBruteForceProtectionOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return o.ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Background())
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionBruteForceProtection) *AttackProtectionBruteForceProtection {
		return &v
	}).(AttackProtectionBruteForceProtectionPtrOutput)
}

// List of trusted IP addresses that will not have attack protection enforced against them.
func (o AttackProtectionBruteForceProtectionOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) []string { return v.Allowlists }).(pulumi.StringArrayOutput)
}

// Whether or not breached password detection is active.
func (o AttackProtectionBruteForceProtectionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Maximum number of unsuccessful attempts. Only available on public tenants.
func (o AttackProtectionBruteForceProtectionOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

// Determines whether or not IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` or `countPerIdentifier`.
func (o AttackProtectionBruteForceProtectionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
func (o AttackProtectionBruteForceProtectionOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionBruteForceProtectionPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionBruteForceProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (o AttackProtectionBruteForceProtectionPtrOutput) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionPtrOutput) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionPtrOutput) Elem() AttackProtectionBruteForceProtectionOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) AttackProtectionBruteForceProtection {
		if v != nil {
			return *v
		}
		var ret AttackProtectionBruteForceProtection
		return ret
	}).(AttackProtectionBruteForceProtectionOutput)
}

// List of trusted IP addresses that will not have attack protection enforced against them.
func (o AttackProtectionBruteForceProtectionPtrOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) []string {
		if v == nil {
			return nil
		}
		return v.Allowlists
	}).(pulumi.StringArrayOutput)
}

// Whether or not breached password detection is active.
func (o AttackProtectionBruteForceProtectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of unsuccessful attempts. Only available on public tenants.
func (o AttackProtectionBruteForceProtectionPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) *int {
		if v == nil {
			return nil
		}
		return v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

// Determines whether or not IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` or `countPerIdentifier`.
func (o AttackProtectionBruteForceProtectionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
func (o AttackProtectionBruteForceProtectionPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionSuspiciousIpThrottling struct {
	// List of trusted IP addresses that will not have attack protection enforced against them.
	Allowlists []string `pulumi:"allowlists"`
	// Whether or not breached password detection is active.
	Enabled *bool `pulumi:"enabled"`
	// Configuration options that apply before every login attempt. Only available on public tenants.
	PreLogin *AttackProtectionSuspiciousIpThrottlingPreLogin `pulumi:"preLogin"`
	// Configuration options that apply before every user registration attempt. Only available on public tenants.
	PreUserRegistration *AttackProtectionSuspiciousIpThrottlingPreUserRegistration `pulumi:"preUserRegistration"`
	// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
	Shields []string `pulumi:"shields"`
}

// AttackProtectionSuspiciousIpThrottlingInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingArgs and AttackProtectionSuspiciousIpThrottlingOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingInput` via:
//
//          AttackProtectionSuspiciousIpThrottlingArgs{...}
type AttackProtectionSuspiciousIpThrottlingInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingOutput() AttackProtectionSuspiciousIpThrottlingOutput
	ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingOutput
}

type AttackProtectionSuspiciousIpThrottlingArgs struct {
	// List of trusted IP addresses that will not have attack protection enforced against them.
	Allowlists pulumi.StringArrayInput `pulumi:"allowlists"`
	// Whether or not breached password detection is active.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Configuration options that apply before every login attempt. Only available on public tenants.
	PreLogin AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput `pulumi:"preLogin"`
	// Configuration options that apply before every user registration attempt. Only available on public tenants.
	PreUserRegistration AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput `pulumi:"preUserRegistration"`
	// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionSuspiciousIpThrottlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingOutput() AttackProtectionSuspiciousIpThrottlingOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingOutput)
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingOutput).ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx)
}

// AttackProtectionSuspiciousIpThrottlingPtrInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingArgs, AttackProtectionSuspiciousIpThrottlingPtr and AttackProtectionSuspiciousIpThrottlingPtrOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPtrInput` via:
//
//          AttackProtectionSuspiciousIpThrottlingArgs{...}
//
//  or:
//
//          nil
type AttackProtectionSuspiciousIpThrottlingPtrInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput
	ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput
}

type attackProtectionSuspiciousIpThrottlingPtrType AttackProtectionSuspiciousIpThrottlingArgs

func AttackProtectionSuspiciousIpThrottlingPtr(v *AttackProtectionSuspiciousIpThrottlingArgs) AttackProtectionSuspiciousIpThrottlingPtrInput {
	return (*attackProtectionSuspiciousIpThrottlingPtrType)(v)
}

func (*attackProtectionSuspiciousIpThrottlingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (i *attackProtectionSuspiciousIpThrottlingPtrType) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Background())
}

func (i *attackProtectionSuspiciousIpThrottlingPtrType) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingOutput() AttackProtectionSuspiciousIpThrottlingOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o.ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Background())
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottling {
		return &v
	}).(AttackProtectionSuspiciousIpThrottlingPtrOutput)
}

// List of trusted IP addresses that will not have attack protection enforced against them.
func (o AttackProtectionSuspiciousIpThrottlingOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) []string { return v.Allowlists }).(pulumi.StringArrayOutput)
}

// Whether or not breached password detection is active.
func (o AttackProtectionSuspiciousIpThrottlingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Configuration options that apply before every login attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingOutput) PreLogin() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreLogin {
		return v.PreLogin
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

// Configuration options that apply before every user registration attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingOutput) PreUserRegistration() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		return v.PreUserRegistration
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
func (o AttackProtectionSuspiciousIpThrottlingOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionSuspiciousIpThrottlingPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Elem() AttackProtectionSuspiciousIpThrottlingOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) AttackProtectionSuspiciousIpThrottling {
		if v != nil {
			return *v
		}
		var ret AttackProtectionSuspiciousIpThrottling
		return ret
	}).(AttackProtectionSuspiciousIpThrottlingOutput)
}

// List of trusted IP addresses that will not have attack protection enforced against them.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) []string {
		if v == nil {
			return nil
		}
		return v.Allowlists
	}).(pulumi.StringArrayOutput)
}

// Whether or not breached password detection is active.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Configuration options that apply before every login attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) PreLogin() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreLogin {
		if v == nil {
			return nil
		}
		return v.PreLogin
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

// Configuration options that apply before every user registration attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) PreUserRegistration() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		if v == nil {
			return nil
		}
		return v.PreUserRegistration
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

// Action to take when a breached password is detected. Possible values: `block`, `userNotification`, `adminNotification`.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreLogin struct {
	// Maximum number of unsuccessful attempts. Only available on public tenants.
	MaxAttempts *int `pulumi:"maxAttempts"`
	Rate        *int `pulumi:"rate"`
}

// AttackProtectionSuspiciousIpThrottlingPreLoginInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreLoginArgs and AttackProtectionSuspiciousIpThrottlingPreLoginOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreLoginInput` via:
//
//          AttackProtectionSuspiciousIpThrottlingPreLoginArgs{...}
type AttackProtectionSuspiciousIpThrottlingPreLoginInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreLoginOutput() AttackProtectionSuspiciousIpThrottlingPreLoginOutput
	ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginOutput
}

type AttackProtectionSuspiciousIpThrottlingPreLoginArgs struct {
	// Maximum number of unsuccessful attempts. Only available on public tenants.
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	Rate        pulumi.IntPtrInput `pulumi:"rate"`
}

func (AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutput() AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreLoginOutput)
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreLoginOutput).ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx)
}

// AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreLoginArgs, AttackProtectionSuspiciousIpThrottlingPreLoginPtr and AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput` via:
//
//          AttackProtectionSuspiciousIpThrottlingPreLoginArgs{...}
//
//  or:
//
//          nil
type AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput
	ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput
}

type attackProtectionSuspiciousIpThrottlingPreLoginPtrType AttackProtectionSuspiciousIpThrottlingPreLoginArgs

func AttackProtectionSuspiciousIpThrottlingPreLoginPtr(v *AttackProtectionSuspiciousIpThrottlingPreLoginArgs) AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput {
	return (*attackProtectionSuspiciousIpThrottlingPreLoginPtrType)(v)
}

func (*attackProtectionSuspiciousIpThrottlingPreLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (i *attackProtectionSuspiciousIpThrottlingPreLoginPtrType) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Background())
}

func (i *attackProtectionSuspiciousIpThrottlingPreLoginPtrType) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreLoginOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutput() AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Background())
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionSuspiciousIpThrottlingPreLogin) *AttackProtectionSuspiciousIpThrottlingPreLogin {
		return &v
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

// Maximum number of unsuccessful attempts. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreLogin) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreLogin) *int { return v.Rate }).(pulumi.IntPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) Elem() AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreLogin) AttackProtectionSuspiciousIpThrottlingPreLogin {
		if v != nil {
			return *v
		}
		var ret AttackProtectionSuspiciousIpThrottlingPreLogin
		return ret
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginOutput)
}

// Maximum number of unsuccessful attempts. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreLogin) *int {
		if v == nil {
			return nil
		}
		return v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreLogin) *int {
		if v == nil {
			return nil
		}
		return v.Rate
	}).(pulumi.IntPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistration struct {
	// Maximum number of unsuccessful attempts. Only available on public tenants.
	MaxAttempts *int `pulumi:"maxAttempts"`
	Rate        *int `pulumi:"rate"`
}

// AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs and AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput` via:
//
//          AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{...}
type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput
	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs struct {
	// Maximum number of unsuccessful attempts. Only available on public tenants.
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	Rate        pulumi.IntPtrInput `pulumi:"rate"`
}

func (AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput)
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput).ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx)
}

// AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs, AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtr and AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput` via:
//
//          AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{...}
//
//  or:
//
//          nil
type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput
	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput
}

type attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs

func AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtr(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput {
	return (*attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType)(v)
}

func (*attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (i *attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (i *attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		return &v
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

// Maximum number of unsuccessful attempts. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int { return v.Rate }).(pulumi.IntPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) Elem() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistration) AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		if v != nil {
			return *v
		}
		var ret AttackProtectionSuspiciousIpThrottlingPreUserRegistration
		return ret
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput)
}

// Maximum number of unsuccessful attempts. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int {
		if v == nil {
			return nil
		}
		return v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int {
		if v == nil {
			return nil
		}
		return v.Rate
	}).(pulumi.IntPtrOutput)
}

type BrandingColors struct {
	// String, Hexadecimal. Background color of login pages.
	PageBackground *string `pulumi:"pageBackground"`
	// String, Hexadecimal. Primary button background color.
	Primary *string `pulumi:"primary"`
}

// BrandingColorsInput is an input type that accepts BrandingColorsArgs and BrandingColorsOutput values.
// You can construct a concrete instance of `BrandingColorsInput` via:
//
//          BrandingColorsArgs{...}
type BrandingColorsInput interface {
	pulumi.Input

	ToBrandingColorsOutput() BrandingColorsOutput
	ToBrandingColorsOutputWithContext(context.Context) BrandingColorsOutput
}

type BrandingColorsArgs struct {
	// String, Hexadecimal. Background color of login pages.
	PageBackground pulumi.StringPtrInput `pulumi:"pageBackground"`
	// String, Hexadecimal. Primary button background color.
	Primary pulumi.StringPtrInput `pulumi:"primary"`
}

func (BrandingColorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingColors)(nil)).Elem()
}

func (i BrandingColorsArgs) ToBrandingColorsOutput() BrandingColorsOutput {
	return i.ToBrandingColorsOutputWithContext(context.Background())
}

func (i BrandingColorsArgs) ToBrandingColorsOutputWithContext(ctx context.Context) BrandingColorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingColorsOutput)
}

func (i BrandingColorsArgs) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return i.ToBrandingColorsPtrOutputWithContext(context.Background())
}

func (i BrandingColorsArgs) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingColorsOutput).ToBrandingColorsPtrOutputWithContext(ctx)
}

// BrandingColorsPtrInput is an input type that accepts BrandingColorsArgs, BrandingColorsPtr and BrandingColorsPtrOutput values.
// You can construct a concrete instance of `BrandingColorsPtrInput` via:
//
//          BrandingColorsArgs{...}
//
//  or:
//
//          nil
type BrandingColorsPtrInput interface {
	pulumi.Input

	ToBrandingColorsPtrOutput() BrandingColorsPtrOutput
	ToBrandingColorsPtrOutputWithContext(context.Context) BrandingColorsPtrOutput
}

type brandingColorsPtrType BrandingColorsArgs

func BrandingColorsPtr(v *BrandingColorsArgs) BrandingColorsPtrInput {
	return (*brandingColorsPtrType)(v)
}

func (*brandingColorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingColors)(nil)).Elem()
}

func (i *brandingColorsPtrType) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return i.ToBrandingColorsPtrOutputWithContext(context.Background())
}

func (i *brandingColorsPtrType) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingColorsPtrOutput)
}

type BrandingColorsOutput struct{ *pulumi.OutputState }

func (BrandingColorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingColors)(nil)).Elem()
}

func (o BrandingColorsOutput) ToBrandingColorsOutput() BrandingColorsOutput {
	return o
}

func (o BrandingColorsOutput) ToBrandingColorsOutputWithContext(ctx context.Context) BrandingColorsOutput {
	return o
}

func (o BrandingColorsOutput) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return o.ToBrandingColorsPtrOutputWithContext(context.Background())
}

func (o BrandingColorsOutput) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingColors) *BrandingColors {
		return &v
	}).(BrandingColorsPtrOutput)
}

// String, Hexadecimal. Background color of login pages.
func (o BrandingColorsOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingColors) *string { return v.PageBackground }).(pulumi.StringPtrOutput)
}

// String, Hexadecimal. Primary button background color.
func (o BrandingColorsOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingColors) *string { return v.Primary }).(pulumi.StringPtrOutput)
}

type BrandingColorsPtrOutput struct{ *pulumi.OutputState }

func (BrandingColorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingColors)(nil)).Elem()
}

func (o BrandingColorsPtrOutput) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return o
}

func (o BrandingColorsPtrOutput) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return o
}

func (o BrandingColorsPtrOutput) Elem() BrandingColorsOutput {
	return o.ApplyT(func(v *BrandingColors) BrandingColors {
		if v != nil {
			return *v
		}
		var ret BrandingColors
		return ret
	}).(BrandingColorsOutput)
}

// String, Hexadecimal. Background color of login pages.
func (o BrandingColorsPtrOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingColors) *string {
		if v == nil {
			return nil
		}
		return v.PageBackground
	}).(pulumi.StringPtrOutput)
}

// String, Hexadecimal. Primary button background color.
func (o BrandingColorsPtrOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingColors) *string {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.StringPtrOutput)
}

type BrandingFont struct {
	// String. URL for the custom font.
	Url *string `pulumi:"url"`
}

// BrandingFontInput is an input type that accepts BrandingFontArgs and BrandingFontOutput values.
// You can construct a concrete instance of `BrandingFontInput` via:
//
//          BrandingFontArgs{...}
type BrandingFontInput interface {
	pulumi.Input

	ToBrandingFontOutput() BrandingFontOutput
	ToBrandingFontOutputWithContext(context.Context) BrandingFontOutput
}

type BrandingFontArgs struct {
	// String. URL for the custom font.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (BrandingFontArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingFont)(nil)).Elem()
}

func (i BrandingFontArgs) ToBrandingFontOutput() BrandingFontOutput {
	return i.ToBrandingFontOutputWithContext(context.Background())
}

func (i BrandingFontArgs) ToBrandingFontOutputWithContext(ctx context.Context) BrandingFontOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingFontOutput)
}

func (i BrandingFontArgs) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return i.ToBrandingFontPtrOutputWithContext(context.Background())
}

func (i BrandingFontArgs) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingFontOutput).ToBrandingFontPtrOutputWithContext(ctx)
}

// BrandingFontPtrInput is an input type that accepts BrandingFontArgs, BrandingFontPtr and BrandingFontPtrOutput values.
// You can construct a concrete instance of `BrandingFontPtrInput` via:
//
//          BrandingFontArgs{...}
//
//  or:
//
//          nil
type BrandingFontPtrInput interface {
	pulumi.Input

	ToBrandingFontPtrOutput() BrandingFontPtrOutput
	ToBrandingFontPtrOutputWithContext(context.Context) BrandingFontPtrOutput
}

type brandingFontPtrType BrandingFontArgs

func BrandingFontPtr(v *BrandingFontArgs) BrandingFontPtrInput {
	return (*brandingFontPtrType)(v)
}

func (*brandingFontPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingFont)(nil)).Elem()
}

func (i *brandingFontPtrType) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return i.ToBrandingFontPtrOutputWithContext(context.Background())
}

func (i *brandingFontPtrType) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingFontPtrOutput)
}

type BrandingFontOutput struct{ *pulumi.OutputState }

func (BrandingFontOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingFont)(nil)).Elem()
}

func (o BrandingFontOutput) ToBrandingFontOutput() BrandingFontOutput {
	return o
}

func (o BrandingFontOutput) ToBrandingFontOutputWithContext(ctx context.Context) BrandingFontOutput {
	return o
}

func (o BrandingFontOutput) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return o.ToBrandingFontPtrOutputWithContext(context.Background())
}

func (o BrandingFontOutput) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingFont) *BrandingFont {
		return &v
	}).(BrandingFontPtrOutput)
}

// String. URL for the custom font.
func (o BrandingFontOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingFont) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type BrandingFontPtrOutput struct{ *pulumi.OutputState }

func (BrandingFontPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingFont)(nil)).Elem()
}

func (o BrandingFontPtrOutput) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return o
}

func (o BrandingFontPtrOutput) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return o
}

func (o BrandingFontPtrOutput) Elem() BrandingFontOutput {
	return o.ApplyT(func(v *BrandingFont) BrandingFont {
		if v != nil {
			return *v
		}
		var ret BrandingFont
		return ret
	}).(BrandingFontOutput)
}

// String. URL for the custom font.
func (o BrandingFontPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingFont) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type BrandingUniversalLogin struct {
	// String, body of login pages.
	Body *string `pulumi:"body"`
}

// BrandingUniversalLoginInput is an input type that accepts BrandingUniversalLoginArgs and BrandingUniversalLoginOutput values.
// You can construct a concrete instance of `BrandingUniversalLoginInput` via:
//
//          BrandingUniversalLoginArgs{...}
type BrandingUniversalLoginInput interface {
	pulumi.Input

	ToBrandingUniversalLoginOutput() BrandingUniversalLoginOutput
	ToBrandingUniversalLoginOutputWithContext(context.Context) BrandingUniversalLoginOutput
}

type BrandingUniversalLoginArgs struct {
	// String, body of login pages.
	Body pulumi.StringPtrInput `pulumi:"body"`
}

func (BrandingUniversalLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingUniversalLogin)(nil)).Elem()
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginOutput() BrandingUniversalLoginOutput {
	return i.ToBrandingUniversalLoginOutputWithContext(context.Background())
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginOutputWithContext(ctx context.Context) BrandingUniversalLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingUniversalLoginOutput)
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return i.ToBrandingUniversalLoginPtrOutputWithContext(context.Background())
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingUniversalLoginOutput).ToBrandingUniversalLoginPtrOutputWithContext(ctx)
}

// BrandingUniversalLoginPtrInput is an input type that accepts BrandingUniversalLoginArgs, BrandingUniversalLoginPtr and BrandingUniversalLoginPtrOutput values.
// You can construct a concrete instance of `BrandingUniversalLoginPtrInput` via:
//
//          BrandingUniversalLoginArgs{...}
//
//  or:
//
//          nil
type BrandingUniversalLoginPtrInput interface {
	pulumi.Input

	ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput
	ToBrandingUniversalLoginPtrOutputWithContext(context.Context) BrandingUniversalLoginPtrOutput
}

type brandingUniversalLoginPtrType BrandingUniversalLoginArgs

func BrandingUniversalLoginPtr(v *BrandingUniversalLoginArgs) BrandingUniversalLoginPtrInput {
	return (*brandingUniversalLoginPtrType)(v)
}

func (*brandingUniversalLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingUniversalLogin)(nil)).Elem()
}

func (i *brandingUniversalLoginPtrType) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return i.ToBrandingUniversalLoginPtrOutputWithContext(context.Background())
}

func (i *brandingUniversalLoginPtrType) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingUniversalLoginPtrOutput)
}

type BrandingUniversalLoginOutput struct{ *pulumi.OutputState }

func (BrandingUniversalLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingUniversalLogin)(nil)).Elem()
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginOutput() BrandingUniversalLoginOutput {
	return o
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginOutputWithContext(ctx context.Context) BrandingUniversalLoginOutput {
	return o
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return o.ToBrandingUniversalLoginPtrOutputWithContext(context.Background())
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingUniversalLogin) *BrandingUniversalLogin {
		return &v
	}).(BrandingUniversalLoginPtrOutput)
}

// String, body of login pages.
func (o BrandingUniversalLoginOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingUniversalLogin) *string { return v.Body }).(pulumi.StringPtrOutput)
}

type BrandingUniversalLoginPtrOutput struct{ *pulumi.OutputState }

func (BrandingUniversalLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingUniversalLogin)(nil)).Elem()
}

func (o BrandingUniversalLoginPtrOutput) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return o
}

func (o BrandingUniversalLoginPtrOutput) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return o
}

func (o BrandingUniversalLoginPtrOutput) Elem() BrandingUniversalLoginOutput {
	return o.ApplyT(func(v *BrandingUniversalLogin) BrandingUniversalLogin {
		if v != nil {
			return *v
		}
		var ret BrandingUniversalLogin
		return ret
	}).(BrandingUniversalLoginOutput)
}

// String, body of login pages.
func (o BrandingUniversalLoginPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingUniversalLogin) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

type ClientAddons struct {
	// String
	Aws map[string]interface{} `pulumi:"aws"`
	// String
	AzureBlob map[string]interface{} `pulumi:"azureBlob"`
	// String
	AzureSb map[string]interface{} `pulumi:"azureSb"`
	// String
	Box map[string]interface{} `pulumi:"box"`
	// String
	Cloudbees map[string]interface{} `pulumi:"cloudbees"`
	// String
	Concur map[string]interface{} `pulumi:"concur"`
	// String
	Dropbox map[string]interface{} `pulumi:"dropbox"`
	// String
	Echosign map[string]interface{} `pulumi:"echosign"`
	// String
	Egnyte map[string]interface{} `pulumi:"egnyte"`
	// String
	Firebase map[string]interface{} `pulumi:"firebase"`
	// String
	Layer map[string]interface{} `pulumi:"layer"`
	// String
	Mscrm map[string]interface{} `pulumi:"mscrm"`
	// String
	Newrelic map[string]interface{} `pulumi:"newrelic"`
	// String
	Office365 map[string]interface{} `pulumi:"office365"`
	// String
	Rms map[string]interface{} `pulumi:"rms"`
	// String
	Salesforce map[string]interface{} `pulumi:"salesforce"`
	// String
	SalesforceApi map[string]interface{} `pulumi:"salesforceApi"`
	// String
	SalesforceSandboxApi map[string]interface{} `pulumi:"salesforceSandboxApi"`
	// List(Resource). Configuration settings for a SAML add-on. For details, see SAML.
	Samlp *ClientAddonsSamlp `pulumi:"samlp"`
	// String
	SapApi map[string]interface{} `pulumi:"sapApi"`
	// String
	Sentry map[string]interface{} `pulumi:"sentry"`
	// String
	Sharepoint map[string]interface{} `pulumi:"sharepoint"`
	// String
	Slack map[string]interface{} `pulumi:"slack"`
	// String
	Springcm map[string]interface{} `pulumi:"springcm"`
	// String
	Wams map[string]interface{} `pulumi:"wams"`
	// String
	Wsfed map[string]interface{} `pulumi:"wsfed"`
	// String
	Zendesk map[string]interface{} `pulumi:"zendesk"`
	// String
	Zoom map[string]interface{} `pulumi:"zoom"`
}

// ClientAddonsInput is an input type that accepts ClientAddonsArgs and ClientAddonsOutput values.
// You can construct a concrete instance of `ClientAddonsInput` via:
//
//          ClientAddonsArgs{...}
type ClientAddonsInput interface {
	pulumi.Input

	ToClientAddonsOutput() ClientAddonsOutput
	ToClientAddonsOutputWithContext(context.Context) ClientAddonsOutput
}

type ClientAddonsArgs struct {
	// String
	Aws pulumi.MapInput `pulumi:"aws"`
	// String
	AzureBlob pulumi.MapInput `pulumi:"azureBlob"`
	// String
	AzureSb pulumi.MapInput `pulumi:"azureSb"`
	// String
	Box pulumi.MapInput `pulumi:"box"`
	// String
	Cloudbees pulumi.MapInput `pulumi:"cloudbees"`
	// String
	Concur pulumi.MapInput `pulumi:"concur"`
	// String
	Dropbox pulumi.MapInput `pulumi:"dropbox"`
	// String
	Echosign pulumi.MapInput `pulumi:"echosign"`
	// String
	Egnyte pulumi.MapInput `pulumi:"egnyte"`
	// String
	Firebase pulumi.MapInput `pulumi:"firebase"`
	// String
	Layer pulumi.MapInput `pulumi:"layer"`
	// String
	Mscrm pulumi.MapInput `pulumi:"mscrm"`
	// String
	Newrelic pulumi.MapInput `pulumi:"newrelic"`
	// String
	Office365 pulumi.MapInput `pulumi:"office365"`
	// String
	Rms pulumi.MapInput `pulumi:"rms"`
	// String
	Salesforce pulumi.MapInput `pulumi:"salesforce"`
	// String
	SalesforceApi pulumi.MapInput `pulumi:"salesforceApi"`
	// String
	SalesforceSandboxApi pulumi.MapInput `pulumi:"salesforceSandboxApi"`
	// List(Resource). Configuration settings for a SAML add-on. For details, see SAML.
	Samlp ClientAddonsSamlpPtrInput `pulumi:"samlp"`
	// String
	SapApi pulumi.MapInput `pulumi:"sapApi"`
	// String
	Sentry pulumi.MapInput `pulumi:"sentry"`
	// String
	Sharepoint pulumi.MapInput `pulumi:"sharepoint"`
	// String
	Slack pulumi.MapInput `pulumi:"slack"`
	// String
	Springcm pulumi.MapInput `pulumi:"springcm"`
	// String
	Wams pulumi.MapInput `pulumi:"wams"`
	// String
	Wsfed pulumi.MapInput `pulumi:"wsfed"`
	// String
	Zendesk pulumi.MapInput `pulumi:"zendesk"`
	// String
	Zoom pulumi.MapInput `pulumi:"zoom"`
}

func (ClientAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddons)(nil)).Elem()
}

func (i ClientAddonsArgs) ToClientAddonsOutput() ClientAddonsOutput {
	return i.ToClientAddonsOutputWithContext(context.Background())
}

func (i ClientAddonsArgs) ToClientAddonsOutputWithContext(ctx context.Context) ClientAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOutput)
}

func (i ClientAddonsArgs) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return i.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (i ClientAddonsArgs) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOutput).ToClientAddonsPtrOutputWithContext(ctx)
}

// ClientAddonsPtrInput is an input type that accepts ClientAddonsArgs, ClientAddonsPtr and ClientAddonsPtrOutput values.
// You can construct a concrete instance of `ClientAddonsPtrInput` via:
//
//          ClientAddonsArgs{...}
//
//  or:
//
//          nil
type ClientAddonsPtrInput interface {
	pulumi.Input

	ToClientAddonsPtrOutput() ClientAddonsPtrOutput
	ToClientAddonsPtrOutputWithContext(context.Context) ClientAddonsPtrOutput
}

type clientAddonsPtrType ClientAddonsArgs

func ClientAddonsPtr(v *ClientAddonsArgs) ClientAddonsPtrInput {
	return (*clientAddonsPtrType)(v)
}

func (*clientAddonsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddons)(nil)).Elem()
}

func (i *clientAddonsPtrType) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return i.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (i *clientAddonsPtrType) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsPtrOutput)
}

type ClientAddonsOutput struct{ *pulumi.OutputState }

func (ClientAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddons)(nil)).Elem()
}

func (o ClientAddonsOutput) ToClientAddonsOutput() ClientAddonsOutput {
	return o
}

func (o ClientAddonsOutput) ToClientAddonsOutputWithContext(ctx context.Context) ClientAddonsOutput {
	return o
}

func (o ClientAddonsOutput) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return o.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (o ClientAddonsOutput) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddons) *ClientAddons {
		return &v
	}).(ClientAddonsPtrOutput)
}

// String
func (o ClientAddonsOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Aws }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.AzureBlob }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.AzureSb }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Box }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Cloudbees }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Concur }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Dropbox }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Echosign }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Egnyte }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Firebase }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Layer }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Mscrm }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Newrelic }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Office365 }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Rms }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Salesforce }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.SalesforceApi }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.SalesforceSandboxApi }).(pulumi.MapOutput)
}

// List(Resource). Configuration settings for a SAML add-on. For details, see SAML.
func (o ClientAddonsOutput) Samlp() ClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSamlp { return v.Samlp }).(ClientAddonsSamlpPtrOutput)
}

// String
func (o ClientAddonsOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.SapApi }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Sentry }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Sharepoint }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Slack }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Springcm }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Wams }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Wsfed }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Zendesk }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Zoom }).(pulumi.MapOutput)
}

type ClientAddonsPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddons)(nil)).Elem()
}

func (o ClientAddonsPtrOutput) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return o
}

func (o ClientAddonsPtrOutput) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return o
}

func (o ClientAddonsPtrOutput) Elem() ClientAddonsOutput {
	return o.ApplyT(func(v *ClientAddons) ClientAddons {
		if v != nil {
			return *v
		}
		var ret ClientAddons
		return ret
	}).(ClientAddonsOutput)
}

// String
func (o ClientAddonsPtrOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureBlob
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureSb
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Box
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cloudbees
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Concur
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Dropbox
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Echosign
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Egnyte
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Firebase
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Layer
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mscrm
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Newrelic
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Office365
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Rms
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceApi
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceSandboxApi
	}).(pulumi.MapOutput)
}

// List(Resource). Configuration settings for a SAML add-on. For details, see SAML.
func (o ClientAddonsPtrOutput) Samlp() ClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSamlp {
		if v == nil {
			return nil
		}
		return v.Samlp
	}).(ClientAddonsSamlpPtrOutput)
}

// String
func (o ClientAddonsPtrOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SapApi
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sentry
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sharepoint
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Springcm
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wams
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wsfed
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zoom
	}).(pulumi.MapOutput)
}

type ClientAddonsSamlp struct {
	// String. Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.
	Audience *string `pulumi:"audience"`
	// String. Class reference of the authentication context.
	AuthnContextClassRef *string `pulumi:"authnContextClassRef"`
	// String. Protocol binding used for SAML logout responses.
	Binding *string `pulumi:"binding"`
	// Boolean, (Default=true) Indicates whether or not a UPN claim should be created.
	CreateUpnClaim *bool `pulumi:"createUpnClaim"`
	// String. Destination of the SAML Response. If not specified, it will be AssertionConsumerUrlof SAMLRequest or Callback URL if there was no SAMLRequest.
	Destination *string `pulumi:"destination"`
	// String, (Default=`sha1`). Algorithm used to calculate the digest of the SAML Assertion or response. Options include `defaultsha1` and `sha256`.
	DigestAlgorithm *string `pulumi:"digestAlgorithm"`
	// Boolean,(Default=true). Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion.
	IncludeAttributeNameFormat *bool `pulumi:"includeAttributeNameFormat"`
	// Integer, (Default=3600). Number of seconds during which the token is valid.
	LifetimeInSeconds *int `pulumi:"lifetimeInSeconds"`
	// Map(Resource). Configuration settings for logout. For details, see Logout.
	Logout map[string]interface{} `pulumi:"logout"`
	// Boolean, (Default=true). Indicates whether or not to add additional identity information in the token, such as the provider used and the access_token, if available.
	MapIdentities *bool `pulumi:"mapIdentities"`
	// Boolean, (Default=false). Indicates whether or not to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion.
	MapUnknownClaimsAsIs *bool `pulumi:"mapUnknownClaimsAsIs"`
	// Map(String). Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).
	Mappings map[string]interface{} `pulumi:"mappings"`
	// String, (Default=`urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`). Format of the name identifier.
	NameIdentifierFormat *string `pulumi:"nameIdentifierFormat"`
	// List(String). Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.
	NameIdentifierProbes []string `pulumi:"nameIdentifierProbes"`
	// Boolean, (Default=true). Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion.
	PassthroughClaimsWithNoMapping *bool `pulumi:"passthroughClaimsWithNoMapping"`
	// String. Recipient of the SAML Assertion (SubjectConfirmationData). Default is AssertionConsumerUrl on SAMLRequest or Callback URL if no SAMLRequest was sent.
	Recipient *string `pulumi:"recipient"`
	// Boolean. Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.
	SignResponse *bool `pulumi:"signResponse"`
	// String, (Default=`rsa-sha1`). Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// String. Optionally indicates the public key certificate used to validate SAML requests. If set, SAML requests will be required to be signed. A sample value would be `-----BEGIN PUBLIC KEY-----\nMIGf...bpP/t3\n+JGNGIRMj1hF1rnb6QIDAQAB\n-----END PUBLIC KEY-----\n`.
	SigningCert *string `pulumi:"signingCert"`
	// Boolean, (Default=true). Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`.
	TypedAttributes *bool `pulumi:"typedAttributes"`
}

// ClientAddonsSamlpInput is an input type that accepts ClientAddonsSamlpArgs and ClientAddonsSamlpOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpInput` via:
//
//          ClientAddonsSamlpArgs{...}
type ClientAddonsSamlpInput interface {
	pulumi.Input

	ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput
	ToClientAddonsSamlpOutputWithContext(context.Context) ClientAddonsSamlpOutput
}

type ClientAddonsSamlpArgs struct {
	// String. Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// String. Class reference of the authentication context.
	AuthnContextClassRef pulumi.StringPtrInput `pulumi:"authnContextClassRef"`
	// String. Protocol binding used for SAML logout responses.
	Binding pulumi.StringPtrInput `pulumi:"binding"`
	// Boolean, (Default=true) Indicates whether or not a UPN claim should be created.
	CreateUpnClaim pulumi.BoolPtrInput `pulumi:"createUpnClaim"`
	// String. Destination of the SAML Response. If not specified, it will be AssertionConsumerUrlof SAMLRequest or Callback URL if there was no SAMLRequest.
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	// String, (Default=`sha1`). Algorithm used to calculate the digest of the SAML Assertion or response. Options include `defaultsha1` and `sha256`.
	DigestAlgorithm pulumi.StringPtrInput `pulumi:"digestAlgorithm"`
	// Boolean,(Default=true). Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion.
	IncludeAttributeNameFormat pulumi.BoolPtrInput `pulumi:"includeAttributeNameFormat"`
	// Integer, (Default=3600). Number of seconds during which the token is valid.
	LifetimeInSeconds pulumi.IntPtrInput `pulumi:"lifetimeInSeconds"`
	// Map(Resource). Configuration settings for logout. For details, see Logout.
	Logout pulumi.MapInput `pulumi:"logout"`
	// Boolean, (Default=true). Indicates whether or not to add additional identity information in the token, such as the provider used and the access_token, if available.
	MapIdentities pulumi.BoolPtrInput `pulumi:"mapIdentities"`
	// Boolean, (Default=false). Indicates whether or not to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion.
	MapUnknownClaimsAsIs pulumi.BoolPtrInput `pulumi:"mapUnknownClaimsAsIs"`
	// Map(String). Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).
	Mappings pulumi.MapInput `pulumi:"mappings"`
	// String, (Default=`urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`). Format of the name identifier.
	NameIdentifierFormat pulumi.StringPtrInput `pulumi:"nameIdentifierFormat"`
	// List(String). Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.
	NameIdentifierProbes pulumi.StringArrayInput `pulumi:"nameIdentifierProbes"`
	// Boolean, (Default=true). Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion.
	PassthroughClaimsWithNoMapping pulumi.BoolPtrInput `pulumi:"passthroughClaimsWithNoMapping"`
	// String. Recipient of the SAML Assertion (SubjectConfirmationData). Default is AssertionConsumerUrl on SAMLRequest or Callback URL if no SAMLRequest was sent.
	Recipient pulumi.StringPtrInput `pulumi:"recipient"`
	// Boolean. Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.
	SignResponse pulumi.BoolPtrInput `pulumi:"signResponse"`
	// String, (Default=`rsa-sha1`). Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`.
	SignatureAlgorithm pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
	// String. Optionally indicates the public key certificate used to validate SAML requests. If set, SAML requests will be required to be signed. A sample value would be `-----BEGIN PUBLIC KEY-----\nMIGf...bpP/t3\n+JGNGIRMj1hF1rnb6QIDAQAB\n-----END PUBLIC KEY-----\n`.
	SigningCert pulumi.StringPtrInput `pulumi:"signingCert"`
	// Boolean, (Default=true). Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`.
	TypedAttributes pulumi.BoolPtrInput `pulumi:"typedAttributes"`
}

func (ClientAddonsSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlp)(nil)).Elem()
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput {
	return i.ToClientAddonsSamlpOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpOutputWithContext(ctx context.Context) ClientAddonsSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpOutput)
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return i.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpOutput).ToClientAddonsSamlpPtrOutputWithContext(ctx)
}

// ClientAddonsSamlpPtrInput is an input type that accepts ClientAddonsSamlpArgs, ClientAddonsSamlpPtr and ClientAddonsSamlpPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpPtrInput` via:
//
//          ClientAddonsSamlpArgs{...}
//
//  or:
//
//          nil
type ClientAddonsSamlpPtrInput interface {
	pulumi.Input

	ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput
	ToClientAddonsSamlpPtrOutputWithContext(context.Context) ClientAddonsSamlpPtrOutput
}

type clientAddonsSamlpPtrType ClientAddonsSamlpArgs

func ClientAddonsSamlpPtr(v *ClientAddonsSamlpArgs) ClientAddonsSamlpPtrInput {
	return (*clientAddonsSamlpPtrType)(v)
}

func (*clientAddonsSamlpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlp)(nil)).Elem()
}

func (i *clientAddonsSamlpPtrType) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return i.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSamlpPtrType) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpPtrOutput)
}

type ClientAddonsSamlpOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlp)(nil)).Elem()
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput {
	return o
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpOutputWithContext(ctx context.Context) ClientAddonsSamlpOutput {
	return o
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return o.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSamlp) *ClientAddonsSamlp {
		return &v
	}).(ClientAddonsSamlpPtrOutput)
}

// String. Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.
func (o ClientAddonsSamlpOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// String. Class reference of the authentication context.
func (o ClientAddonsSamlpOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.AuthnContextClassRef }).(pulumi.StringPtrOutput)
}

// String. Protocol binding used for SAML logout responses.
func (o ClientAddonsSamlpOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Binding }).(pulumi.StringPtrOutput)
}

// Boolean, (Default=true) Indicates whether or not a UPN claim should be created.
func (o ClientAddonsSamlpOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.CreateUpnClaim }).(pulumi.BoolPtrOutput)
}

// String. Destination of the SAML Response. If not specified, it will be AssertionConsumerUrlof SAMLRequest or Callback URL if there was no SAMLRequest.
func (o ClientAddonsSamlpOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// String, (Default=`sha1`). Algorithm used to calculate the digest of the SAML Assertion or response. Options include `defaultsha1` and `sha256`.
func (o ClientAddonsSamlpOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

// Boolean,(Default=true). Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion.
func (o ClientAddonsSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolPtrOutput)
}

// Integer, (Default=3600). Number of seconds during which the token is valid.
func (o ClientAddonsSamlpOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

// Map(Resource). Configuration settings for logout. For details, see Logout.
func (o ClientAddonsSamlpOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) map[string]interface{} { return v.Logout }).(pulumi.MapOutput)
}

// Boolean, (Default=true). Indicates whether or not to add additional identity information in the token, such as the provider used and the access_token, if available.
func (o ClientAddonsSamlpOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.MapIdentities }).(pulumi.BoolPtrOutput)
}

// Boolean, (Default=false). Indicates whether or not to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion.
func (o ClientAddonsSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolPtrOutput)
}

// Map(String). Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).
func (o ClientAddonsSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

// String, (Default=`urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`). Format of the name identifier.
func (o ClientAddonsSamlpOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.NameIdentifierFormat }).(pulumi.StringPtrOutput)
}

// List(String). Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.
func (o ClientAddonsSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

// Boolean, (Default=true). Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion.
func (o ClientAddonsSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolPtrOutput)
}

// String. Recipient of the SAML Assertion (SubjectConfirmationData). Default is AssertionConsumerUrl on SAMLRequest or Callback URL if no SAMLRequest was sent.
func (o ClientAddonsSamlpOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Recipient }).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.
func (o ClientAddonsSamlpOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.SignResponse }).(pulumi.BoolPtrOutput)
}

// String, (Default=`rsa-sha1`). Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`.
func (o ClientAddonsSamlpOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// String. Optionally indicates the public key certificate used to validate SAML requests. If set, SAML requests will be required to be signed. A sample value would be `-----BEGIN PUBLIC KEY-----\nMIGf...bpP/t3\n+JGNGIRMj1hF1rnb6QIDAQAB\n-----END PUBLIC KEY-----\n`.
func (o ClientAddonsSamlpOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.SigningCert }).(pulumi.StringPtrOutput)
}

// Boolean, (Default=true). Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`.
func (o ClientAddonsSamlpOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.TypedAttributes }).(pulumi.BoolPtrOutput)
}

type ClientAddonsSamlpPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlp)(nil)).Elem()
}

func (o ClientAddonsSamlpPtrOutput) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return o
}

func (o ClientAddonsSamlpPtrOutput) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return o
}

func (o ClientAddonsSamlpPtrOutput) Elem() ClientAddonsSamlpOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) ClientAddonsSamlp {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSamlp
		return ret
	}).(ClientAddonsSamlpOutput)
}

// String. Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.
func (o ClientAddonsSamlpPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// String. Class reference of the authentication context.
func (o ClientAddonsSamlpPtrOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.AuthnContextClassRef
	}).(pulumi.StringPtrOutput)
}

// String. Protocol binding used for SAML logout responses.
func (o ClientAddonsSamlpPtrOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Binding
	}).(pulumi.StringPtrOutput)
}

// Boolean, (Default=true) Indicates whether or not a UPN claim should be created.
func (o ClientAddonsSamlpPtrOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.CreateUpnClaim
	}).(pulumi.BoolPtrOutput)
}

// String. Destination of the SAML Response. If not specified, it will be AssertionConsumerUrlof SAMLRequest or Callback URL if there was no SAMLRequest.
func (o ClientAddonsSamlpPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

// String, (Default=`sha1`). Algorithm used to calculate the digest of the SAML Assertion or response. Options include `defaultsha1` and `sha256`.
func (o ClientAddonsSamlpPtrOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.DigestAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Boolean,(Default=true). Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion.
func (o ClientAddonsSamlpPtrOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAttributeNameFormat
	}).(pulumi.BoolPtrOutput)
}

// Integer, (Default=3600). Number of seconds during which the token is valid.
func (o ClientAddonsSamlpPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// Map(Resource). Configuration settings for logout. For details, see Logout.
func (o ClientAddonsSamlpPtrOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Logout
	}).(pulumi.MapOutput)
}

// Boolean, (Default=true). Indicates whether or not to add additional identity information in the token, such as the provider used and the access_token, if available.
func (o ClientAddonsSamlpPtrOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapIdentities
	}).(pulumi.BoolPtrOutput)
}

// Boolean, (Default=false). Indicates whether or not to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion.
func (o ClientAddonsSamlpPtrOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapUnknownClaimsAsIs
	}).(pulumi.BoolPtrOutput)
}

// Map(String). Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).
func (o ClientAddonsSamlpPtrOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(pulumi.MapOutput)
}

// String, (Default=`urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`). Format of the name identifier.
func (o ClientAddonsSamlpPtrOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierFormat
	}).(pulumi.StringPtrOutput)
}

// List(String). Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.
func (o ClientAddonsSamlpPtrOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) []string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierProbes
	}).(pulumi.StringArrayOutput)
}

// Boolean, (Default=true). Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion.
func (o ClientAddonsSamlpPtrOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.PassthroughClaimsWithNoMapping
	}).(pulumi.BoolPtrOutput)
}

// String. Recipient of the SAML Assertion (SubjectConfirmationData). Default is AssertionConsumerUrl on SAMLRequest or Callback URL if no SAMLRequest was sent.
func (o ClientAddonsSamlpPtrOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Recipient
	}).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.
func (o ClientAddonsSamlpPtrOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.SignResponse
	}).(pulumi.BoolPtrOutput)
}

// String, (Default=`rsa-sha1`). Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`.
func (o ClientAddonsSamlpPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

// String. Optionally indicates the public key certificate used to validate SAML requests. If set, SAML requests will be required to be signed. A sample value would be `-----BEGIN PUBLIC KEY-----\nMIGf...bpP/t3\n+JGNGIRMj1hF1rnb6QIDAQAB\n-----END PUBLIC KEY-----\n`.
func (o ClientAddonsSamlpPtrOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SigningCert
	}).(pulumi.StringPtrOutput)
}

// Boolean, (Default=true). Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`.
func (o ClientAddonsSamlpPtrOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.TypedAttributes
	}).(pulumi.BoolPtrOutput)
}

type ClientJwtConfiguration struct {
	// String. Algorithm used to sign JWTs.
	Alg *string `pulumi:"alg"`
	// Integer. Number of seconds during which the JWT will be valid.
	LifetimeInSeconds *int `pulumi:"lifetimeInSeconds"`
	// Map(String). Permissions (scopes) included in JWTs.
	Scopes map[string]string `pulumi:"scopes"`
	// Boolean. Indicates whether or not the client secret is base64 encoded.
	SecretEncoded *bool `pulumi:"secretEncoded"`
}

// ClientJwtConfigurationInput is an input type that accepts ClientJwtConfigurationArgs and ClientJwtConfigurationOutput values.
// You can construct a concrete instance of `ClientJwtConfigurationInput` via:
//
//          ClientJwtConfigurationArgs{...}
type ClientJwtConfigurationInput interface {
	pulumi.Input

	ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput
	ToClientJwtConfigurationOutputWithContext(context.Context) ClientJwtConfigurationOutput
}

type ClientJwtConfigurationArgs struct {
	// String. Algorithm used to sign JWTs.
	Alg pulumi.StringPtrInput `pulumi:"alg"`
	// Integer. Number of seconds during which the JWT will be valid.
	LifetimeInSeconds pulumi.IntPtrInput `pulumi:"lifetimeInSeconds"`
	// Map(String). Permissions (scopes) included in JWTs.
	Scopes pulumi.StringMapInput `pulumi:"scopes"`
	// Boolean. Indicates whether or not the client secret is base64 encoded.
	SecretEncoded pulumi.BoolPtrInput `pulumi:"secretEncoded"`
}

func (ClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientJwtConfiguration)(nil)).Elem()
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput {
	return i.ToClientJwtConfigurationOutputWithContext(context.Background())
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationOutputWithContext(ctx context.Context) ClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationOutput)
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return i.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationOutput).ToClientJwtConfigurationPtrOutputWithContext(ctx)
}

// ClientJwtConfigurationPtrInput is an input type that accepts ClientJwtConfigurationArgs, ClientJwtConfigurationPtr and ClientJwtConfigurationPtrOutput values.
// You can construct a concrete instance of `ClientJwtConfigurationPtrInput` via:
//
//          ClientJwtConfigurationArgs{...}
//
//  or:
//
//          nil
type ClientJwtConfigurationPtrInput interface {
	pulumi.Input

	ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput
	ToClientJwtConfigurationPtrOutputWithContext(context.Context) ClientJwtConfigurationPtrOutput
}

type clientJwtConfigurationPtrType ClientJwtConfigurationArgs

func ClientJwtConfigurationPtr(v *ClientJwtConfigurationArgs) ClientJwtConfigurationPtrInput {
	return (*clientJwtConfigurationPtrType)(v)
}

func (*clientJwtConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientJwtConfiguration)(nil)).Elem()
}

func (i *clientJwtConfigurationPtrType) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return i.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i *clientJwtConfigurationPtrType) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationPtrOutput)
}

type ClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (ClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientJwtConfiguration)(nil)).Elem()
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput {
	return o
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationOutputWithContext(ctx context.Context) ClientJwtConfigurationOutput {
	return o
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return o.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientJwtConfiguration) *ClientJwtConfiguration {
		return &v
	}).(ClientJwtConfigurationPtrOutput)
}

// String. Algorithm used to sign JWTs.
func (o ClientJwtConfigurationOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *string { return v.Alg }).(pulumi.StringPtrOutput)
}

// Integer. Number of seconds during which the JWT will be valid.
func (o ClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

// Map(String). Permissions (scopes) included in JWTs.
func (o ClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

// Boolean. Indicates whether or not the client secret is base64 encoded.
func (o ClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *bool { return v.SecretEncoded }).(pulumi.BoolPtrOutput)
}

type ClientJwtConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClientJwtConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientJwtConfiguration)(nil)).Elem()
}

func (o ClientJwtConfigurationPtrOutput) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return o
}

func (o ClientJwtConfigurationPtrOutput) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return o
}

func (o ClientJwtConfigurationPtrOutput) Elem() ClientJwtConfigurationOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) ClientJwtConfiguration {
		if v != nil {
			return *v
		}
		var ret ClientJwtConfiguration
		return ret
	}).(ClientJwtConfigurationOutput)
}

// String. Algorithm used to sign JWTs.
func (o ClientJwtConfigurationPtrOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Alg
	}).(pulumi.StringPtrOutput)
}

// Integer. Number of seconds during which the JWT will be valid.
func (o ClientJwtConfigurationPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// Map(String). Permissions (scopes) included in JWTs.
func (o ClientJwtConfigurationPtrOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringMapOutput)
}

// Boolean. Indicates whether or not the client secret is base64 encoded.
func (o ClientJwtConfigurationPtrOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.SecretEncoded
	}).(pulumi.BoolPtrOutput)
}

type ClientMobile struct {
	// List(Resource). Configuration settings for Android native apps. For details, see Android.
	Android *ClientMobileAndroid `pulumi:"android"`
	// List(Resource). Configuration settings for i0S native apps. For details, see iOS.
	Ios *ClientMobileIos `pulumi:"ios"`
}

// ClientMobileInput is an input type that accepts ClientMobileArgs and ClientMobileOutput values.
// You can construct a concrete instance of `ClientMobileInput` via:
//
//          ClientMobileArgs{...}
type ClientMobileInput interface {
	pulumi.Input

	ToClientMobileOutput() ClientMobileOutput
	ToClientMobileOutputWithContext(context.Context) ClientMobileOutput
}

type ClientMobileArgs struct {
	// List(Resource). Configuration settings for Android native apps. For details, see Android.
	Android ClientMobileAndroidPtrInput `pulumi:"android"`
	// List(Resource). Configuration settings for i0S native apps. For details, see iOS.
	Ios ClientMobileIosPtrInput `pulumi:"ios"`
}

func (ClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobile)(nil)).Elem()
}

func (i ClientMobileArgs) ToClientMobileOutput() ClientMobileOutput {
	return i.ToClientMobileOutputWithContext(context.Background())
}

func (i ClientMobileArgs) ToClientMobileOutputWithContext(ctx context.Context) ClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileOutput)
}

func (i ClientMobileArgs) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return i.ToClientMobilePtrOutputWithContext(context.Background())
}

func (i ClientMobileArgs) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileOutput).ToClientMobilePtrOutputWithContext(ctx)
}

// ClientMobilePtrInput is an input type that accepts ClientMobileArgs, ClientMobilePtr and ClientMobilePtrOutput values.
// You can construct a concrete instance of `ClientMobilePtrInput` via:
//
//          ClientMobileArgs{...}
//
//  or:
//
//          nil
type ClientMobilePtrInput interface {
	pulumi.Input

	ToClientMobilePtrOutput() ClientMobilePtrOutput
	ToClientMobilePtrOutputWithContext(context.Context) ClientMobilePtrOutput
}

type clientMobilePtrType ClientMobileArgs

func ClientMobilePtr(v *ClientMobileArgs) ClientMobilePtrInput {
	return (*clientMobilePtrType)(v)
}

func (*clientMobilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobile)(nil)).Elem()
}

func (i *clientMobilePtrType) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return i.ToClientMobilePtrOutputWithContext(context.Background())
}

func (i *clientMobilePtrType) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobilePtrOutput)
}

type ClientMobileOutput struct{ *pulumi.OutputState }

func (ClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobile)(nil)).Elem()
}

func (o ClientMobileOutput) ToClientMobileOutput() ClientMobileOutput {
	return o
}

func (o ClientMobileOutput) ToClientMobileOutputWithContext(ctx context.Context) ClientMobileOutput {
	return o
}

func (o ClientMobileOutput) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return o.ToClientMobilePtrOutputWithContext(context.Background())
}

func (o ClientMobileOutput) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientMobile) *ClientMobile {
		return &v
	}).(ClientMobilePtrOutput)
}

// List(Resource). Configuration settings for Android native apps. For details, see Android.
func (o ClientMobileOutput) Android() ClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v ClientMobile) *ClientMobileAndroid { return v.Android }).(ClientMobileAndroidPtrOutput)
}

// List(Resource). Configuration settings for i0S native apps. For details, see iOS.
func (o ClientMobileOutput) Ios() ClientMobileIosPtrOutput {
	return o.ApplyT(func(v ClientMobile) *ClientMobileIos { return v.Ios }).(ClientMobileIosPtrOutput)
}

type ClientMobilePtrOutput struct{ *pulumi.OutputState }

func (ClientMobilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobile)(nil)).Elem()
}

func (o ClientMobilePtrOutput) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return o
}

func (o ClientMobilePtrOutput) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return o
}

func (o ClientMobilePtrOutput) Elem() ClientMobileOutput {
	return o.ApplyT(func(v *ClientMobile) ClientMobile {
		if v != nil {
			return *v
		}
		var ret ClientMobile
		return ret
	}).(ClientMobileOutput)
}

// List(Resource). Configuration settings for Android native apps. For details, see Android.
func (o ClientMobilePtrOutput) Android() ClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v *ClientMobile) *ClientMobileAndroid {
		if v == nil {
			return nil
		}
		return v.Android
	}).(ClientMobileAndroidPtrOutput)
}

// List(Resource). Configuration settings for i0S native apps. For details, see iOS.
func (o ClientMobilePtrOutput) Ios() ClientMobileIosPtrOutput {
	return o.ApplyT(func(v *ClientMobile) *ClientMobileIos {
		if v == nil {
			return nil
		}
		return v.Ios
	}).(ClientMobileIosPtrOutput)
}

type ClientMobileAndroid struct {
	// String
	AppPackageName *string `pulumi:"appPackageName"`
	// List(String)
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// ClientMobileAndroidInput is an input type that accepts ClientMobileAndroidArgs and ClientMobileAndroidOutput values.
// You can construct a concrete instance of `ClientMobileAndroidInput` via:
//
//          ClientMobileAndroidArgs{...}
type ClientMobileAndroidInput interface {
	pulumi.Input

	ToClientMobileAndroidOutput() ClientMobileAndroidOutput
	ToClientMobileAndroidOutputWithContext(context.Context) ClientMobileAndroidOutput
}

type ClientMobileAndroidArgs struct {
	// String
	AppPackageName pulumi.StringPtrInput `pulumi:"appPackageName"`
	// List(String)
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (ClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileAndroid)(nil)).Elem()
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidOutput() ClientMobileAndroidOutput {
	return i.ToClientMobileAndroidOutputWithContext(context.Background())
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidOutputWithContext(ctx context.Context) ClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidOutput)
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return i.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidOutput).ToClientMobileAndroidPtrOutputWithContext(ctx)
}

// ClientMobileAndroidPtrInput is an input type that accepts ClientMobileAndroidArgs, ClientMobileAndroidPtr and ClientMobileAndroidPtrOutput values.
// You can construct a concrete instance of `ClientMobileAndroidPtrInput` via:
//
//          ClientMobileAndroidArgs{...}
//
//  or:
//
//          nil
type ClientMobileAndroidPtrInput interface {
	pulumi.Input

	ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput
	ToClientMobileAndroidPtrOutputWithContext(context.Context) ClientMobileAndroidPtrOutput
}

type clientMobileAndroidPtrType ClientMobileAndroidArgs

func ClientMobileAndroidPtr(v *ClientMobileAndroidArgs) ClientMobileAndroidPtrInput {
	return (*clientMobileAndroidPtrType)(v)
}

func (*clientMobileAndroidPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileAndroid)(nil)).Elem()
}

func (i *clientMobileAndroidPtrType) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return i.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i *clientMobileAndroidPtrType) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidPtrOutput)
}

type ClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (ClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileAndroid)(nil)).Elem()
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidOutput() ClientMobileAndroidOutput {
	return o
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidOutputWithContext(ctx context.Context) ClientMobileAndroidOutput {
	return o
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return o.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientMobileAndroid) *ClientMobileAndroid {
		return &v
	}).(ClientMobileAndroidPtrOutput)
}

// String
func (o ClientMobileAndroidOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileAndroid) *string { return v.AppPackageName }).(pulumi.StringPtrOutput)
}

// List(String)
func (o ClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type ClientMobileAndroidPtrOutput struct{ *pulumi.OutputState }

func (ClientMobileAndroidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileAndroid)(nil)).Elem()
}

func (o ClientMobileAndroidPtrOutput) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return o
}

func (o ClientMobileAndroidPtrOutput) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return o
}

func (o ClientMobileAndroidPtrOutput) Elem() ClientMobileAndroidOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) ClientMobileAndroid {
		if v != nil {
			return *v
		}
		var ret ClientMobileAndroid
		return ret
	}).(ClientMobileAndroidOutput)
}

// String
func (o ClientMobileAndroidPtrOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) *string {
		if v == nil {
			return nil
		}
		return v.AppPackageName
	}).(pulumi.StringPtrOutput)
}

// List(String)
func (o ClientMobileAndroidPtrOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) []string {
		if v == nil {
			return nil
		}
		return v.Sha256CertFingerprints
	}).(pulumi.StringArrayOutput)
}

type ClientMobileIos struct {
	// String
	AppBundleIdentifier *string `pulumi:"appBundleIdentifier"`
	// String
	TeamId *string `pulumi:"teamId"`
}

// ClientMobileIosInput is an input type that accepts ClientMobileIosArgs and ClientMobileIosOutput values.
// You can construct a concrete instance of `ClientMobileIosInput` via:
//
//          ClientMobileIosArgs{...}
type ClientMobileIosInput interface {
	pulumi.Input

	ToClientMobileIosOutput() ClientMobileIosOutput
	ToClientMobileIosOutputWithContext(context.Context) ClientMobileIosOutput
}

type ClientMobileIosArgs struct {
	// String
	AppBundleIdentifier pulumi.StringPtrInput `pulumi:"appBundleIdentifier"`
	// String
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
}

func (ClientMobileIosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileIos)(nil)).Elem()
}

func (i ClientMobileIosArgs) ToClientMobileIosOutput() ClientMobileIosOutput {
	return i.ToClientMobileIosOutputWithContext(context.Background())
}

func (i ClientMobileIosArgs) ToClientMobileIosOutputWithContext(ctx context.Context) ClientMobileIosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosOutput)
}

func (i ClientMobileIosArgs) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return i.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (i ClientMobileIosArgs) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosOutput).ToClientMobileIosPtrOutputWithContext(ctx)
}

// ClientMobileIosPtrInput is an input type that accepts ClientMobileIosArgs, ClientMobileIosPtr and ClientMobileIosPtrOutput values.
// You can construct a concrete instance of `ClientMobileIosPtrInput` via:
//
//          ClientMobileIosArgs{...}
//
//  or:
//
//          nil
type ClientMobileIosPtrInput interface {
	pulumi.Input

	ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput
	ToClientMobileIosPtrOutputWithContext(context.Context) ClientMobileIosPtrOutput
}

type clientMobileIosPtrType ClientMobileIosArgs

func ClientMobileIosPtr(v *ClientMobileIosArgs) ClientMobileIosPtrInput {
	return (*clientMobileIosPtrType)(v)
}

func (*clientMobileIosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileIos)(nil)).Elem()
}

func (i *clientMobileIosPtrType) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return i.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (i *clientMobileIosPtrType) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosPtrOutput)
}

type ClientMobileIosOutput struct{ *pulumi.OutputState }

func (ClientMobileIosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileIos)(nil)).Elem()
}

func (o ClientMobileIosOutput) ToClientMobileIosOutput() ClientMobileIosOutput {
	return o
}

func (o ClientMobileIosOutput) ToClientMobileIosOutputWithContext(ctx context.Context) ClientMobileIosOutput {
	return o
}

func (o ClientMobileIosOutput) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return o.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (o ClientMobileIosOutput) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientMobileIos) *ClientMobileIos {
		return &v
	}).(ClientMobileIosPtrOutput)
}

// String
func (o ClientMobileIosOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileIos) *string { return v.AppBundleIdentifier }).(pulumi.StringPtrOutput)
}

// String
func (o ClientMobileIosOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileIos) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

type ClientMobileIosPtrOutput struct{ *pulumi.OutputState }

func (ClientMobileIosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileIos)(nil)).Elem()
}

func (o ClientMobileIosPtrOutput) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return o
}

func (o ClientMobileIosPtrOutput) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return o
}

func (o ClientMobileIosPtrOutput) Elem() ClientMobileIosOutput {
	return o.ApplyT(func(v *ClientMobileIos) ClientMobileIos {
		if v != nil {
			return *v
		}
		var ret ClientMobileIos
		return ret
	}).(ClientMobileIosOutput)
}

// String
func (o ClientMobileIosPtrOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.AppBundleIdentifier
	}).(pulumi.StringPtrOutput)
}

// String
func (o ClientMobileIosPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

type ClientNativeSocialLogin struct {
	// Resource:
	Apple *ClientNativeSocialLoginApple `pulumi:"apple"`
	// Resources:
	Facebook *ClientNativeSocialLoginFacebook `pulumi:"facebook"`
}

// ClientNativeSocialLoginInput is an input type that accepts ClientNativeSocialLoginArgs and ClientNativeSocialLoginOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginInput` via:
//
//          ClientNativeSocialLoginArgs{...}
type ClientNativeSocialLoginInput interface {
	pulumi.Input

	ToClientNativeSocialLoginOutput() ClientNativeSocialLoginOutput
	ToClientNativeSocialLoginOutputWithContext(context.Context) ClientNativeSocialLoginOutput
}

type ClientNativeSocialLoginArgs struct {
	// Resource:
	Apple ClientNativeSocialLoginApplePtrInput `pulumi:"apple"`
	// Resources:
	Facebook ClientNativeSocialLoginFacebookPtrInput `pulumi:"facebook"`
}

func (ClientNativeSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLogin)(nil)).Elem()
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginOutput() ClientNativeSocialLoginOutput {
	return i.ToClientNativeSocialLoginOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginOutputWithContext(ctx context.Context) ClientNativeSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginOutput)
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return i.ToClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginOutput).ToClientNativeSocialLoginPtrOutputWithContext(ctx)
}

// ClientNativeSocialLoginPtrInput is an input type that accepts ClientNativeSocialLoginArgs, ClientNativeSocialLoginPtr and ClientNativeSocialLoginPtrOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginPtrInput` via:
//
//          ClientNativeSocialLoginArgs{...}
//
//  or:
//
//          nil
type ClientNativeSocialLoginPtrInput interface {
	pulumi.Input

	ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput
	ToClientNativeSocialLoginPtrOutputWithContext(context.Context) ClientNativeSocialLoginPtrOutput
}

type clientNativeSocialLoginPtrType ClientNativeSocialLoginArgs

func ClientNativeSocialLoginPtr(v *ClientNativeSocialLoginArgs) ClientNativeSocialLoginPtrInput {
	return (*clientNativeSocialLoginPtrType)(v)
}

func (*clientNativeSocialLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLogin)(nil)).Elem()
}

func (i *clientNativeSocialLoginPtrType) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return i.ToClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (i *clientNativeSocialLoginPtrType) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginPtrOutput)
}

type ClientNativeSocialLoginOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLogin)(nil)).Elem()
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginOutput() ClientNativeSocialLoginOutput {
	return o
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginOutputWithContext(ctx context.Context) ClientNativeSocialLoginOutput {
	return o
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return o.ToClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientNativeSocialLogin) *ClientNativeSocialLogin {
		return &v
	}).(ClientNativeSocialLoginPtrOutput)
}

// Resource:
func (o ClientNativeSocialLoginOutput) Apple() ClientNativeSocialLoginApplePtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLogin) *ClientNativeSocialLoginApple { return v.Apple }).(ClientNativeSocialLoginApplePtrOutput)
}

// Resources:
func (o ClientNativeSocialLoginOutput) Facebook() ClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLogin) *ClientNativeSocialLoginFacebook { return v.Facebook }).(ClientNativeSocialLoginFacebookPtrOutput)
}

type ClientNativeSocialLoginPtrOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLogin)(nil)).Elem()
}

func (o ClientNativeSocialLoginPtrOutput) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return o
}

func (o ClientNativeSocialLoginPtrOutput) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return o
}

func (o ClientNativeSocialLoginPtrOutput) Elem() ClientNativeSocialLoginOutput {
	return o.ApplyT(func(v *ClientNativeSocialLogin) ClientNativeSocialLogin {
		if v != nil {
			return *v
		}
		var ret ClientNativeSocialLogin
		return ret
	}).(ClientNativeSocialLoginOutput)
}

// Resource:
func (o ClientNativeSocialLoginPtrOutput) Apple() ClientNativeSocialLoginApplePtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLogin) *ClientNativeSocialLoginApple {
		if v == nil {
			return nil
		}
		return v.Apple
	}).(ClientNativeSocialLoginApplePtrOutput)
}

// Resources:
func (o ClientNativeSocialLoginPtrOutput) Facebook() ClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLogin) *ClientNativeSocialLoginFacebook {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(ClientNativeSocialLoginFacebookPtrOutput)
}

type ClientNativeSocialLoginApple struct {
	// Boolean
	Enabled *bool `pulumi:"enabled"`
}

// ClientNativeSocialLoginAppleInput is an input type that accepts ClientNativeSocialLoginAppleArgs and ClientNativeSocialLoginAppleOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginAppleInput` via:
//
//          ClientNativeSocialLoginAppleArgs{...}
type ClientNativeSocialLoginAppleInput interface {
	pulumi.Input

	ToClientNativeSocialLoginAppleOutput() ClientNativeSocialLoginAppleOutput
	ToClientNativeSocialLoginAppleOutputWithContext(context.Context) ClientNativeSocialLoginAppleOutput
}

type ClientNativeSocialLoginAppleArgs struct {
	// Boolean
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClientNativeSocialLoginAppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginApple)(nil)).Elem()
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginAppleOutput() ClientNativeSocialLoginAppleOutput {
	return i.ToClientNativeSocialLoginAppleOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) ClientNativeSocialLoginAppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginAppleOutput)
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return i.ToClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginAppleOutput).ToClientNativeSocialLoginApplePtrOutputWithContext(ctx)
}

// ClientNativeSocialLoginApplePtrInput is an input type that accepts ClientNativeSocialLoginAppleArgs, ClientNativeSocialLoginApplePtr and ClientNativeSocialLoginApplePtrOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginApplePtrInput` via:
//
//          ClientNativeSocialLoginAppleArgs{...}
//
//  or:
//
//          nil
type ClientNativeSocialLoginApplePtrInput interface {
	pulumi.Input

	ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput
	ToClientNativeSocialLoginApplePtrOutputWithContext(context.Context) ClientNativeSocialLoginApplePtrOutput
}

type clientNativeSocialLoginApplePtrType ClientNativeSocialLoginAppleArgs

func ClientNativeSocialLoginApplePtr(v *ClientNativeSocialLoginAppleArgs) ClientNativeSocialLoginApplePtrInput {
	return (*clientNativeSocialLoginApplePtrType)(v)
}

func (*clientNativeSocialLoginApplePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginApple)(nil)).Elem()
}

func (i *clientNativeSocialLoginApplePtrType) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return i.ToClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (i *clientNativeSocialLoginApplePtrType) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginApplePtrOutput)
}

type ClientNativeSocialLoginAppleOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginAppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginApple)(nil)).Elem()
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginAppleOutput() ClientNativeSocialLoginAppleOutput {
	return o
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) ClientNativeSocialLoginAppleOutput {
	return o
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return o.ToClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientNativeSocialLoginApple) *ClientNativeSocialLoginApple {
		return &v
	}).(ClientNativeSocialLoginApplePtrOutput)
}

// Boolean
func (o ClientNativeSocialLoginAppleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLoginApple) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClientNativeSocialLoginApplePtrOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginApplePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginApple)(nil)).Elem()
}

func (o ClientNativeSocialLoginApplePtrOutput) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return o
}

func (o ClientNativeSocialLoginApplePtrOutput) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return o
}

func (o ClientNativeSocialLoginApplePtrOutput) Elem() ClientNativeSocialLoginAppleOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginApple) ClientNativeSocialLoginApple {
		if v != nil {
			return *v
		}
		var ret ClientNativeSocialLoginApple
		return ret
	}).(ClientNativeSocialLoginAppleOutput)
}

// Boolean
func (o ClientNativeSocialLoginApplePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginApple) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClientNativeSocialLoginFacebook struct {
	// Boolean
	Enabled *bool `pulumi:"enabled"`
}

// ClientNativeSocialLoginFacebookInput is an input type that accepts ClientNativeSocialLoginFacebookArgs and ClientNativeSocialLoginFacebookOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginFacebookInput` via:
//
//          ClientNativeSocialLoginFacebookArgs{...}
type ClientNativeSocialLoginFacebookInput interface {
	pulumi.Input

	ToClientNativeSocialLoginFacebookOutput() ClientNativeSocialLoginFacebookOutput
	ToClientNativeSocialLoginFacebookOutputWithContext(context.Context) ClientNativeSocialLoginFacebookOutput
}

type ClientNativeSocialLoginFacebookArgs struct {
	// Boolean
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClientNativeSocialLoginFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookOutput() ClientNativeSocialLoginFacebookOutput {
	return i.ToClientNativeSocialLoginFacebookOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginFacebookOutput)
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return i.ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginFacebookOutput).ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx)
}

// ClientNativeSocialLoginFacebookPtrInput is an input type that accepts ClientNativeSocialLoginFacebookArgs, ClientNativeSocialLoginFacebookPtr and ClientNativeSocialLoginFacebookPtrOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginFacebookPtrInput` via:
//
//          ClientNativeSocialLoginFacebookArgs{...}
//
//  or:
//
//          nil
type ClientNativeSocialLoginFacebookPtrInput interface {
	pulumi.Input

	ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput
	ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Context) ClientNativeSocialLoginFacebookPtrOutput
}

type clientNativeSocialLoginFacebookPtrType ClientNativeSocialLoginFacebookArgs

func ClientNativeSocialLoginFacebookPtr(v *ClientNativeSocialLoginFacebookArgs) ClientNativeSocialLoginFacebookPtrInput {
	return (*clientNativeSocialLoginFacebookPtrType)(v)
}

func (*clientNativeSocialLoginFacebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i *clientNativeSocialLoginFacebookPtrType) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return i.ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (i *clientNativeSocialLoginFacebookPtrType) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginFacebookPtrOutput)
}

type ClientNativeSocialLoginFacebookOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookOutput() ClientNativeSocialLoginFacebookOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return o.ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientNativeSocialLoginFacebook) *ClientNativeSocialLoginFacebook {
		return &v
	}).(ClientNativeSocialLoginFacebookPtrOutput)
}

// Boolean
func (o ClientNativeSocialLoginFacebookOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLoginFacebook) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClientNativeSocialLoginFacebookPtrOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginFacebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o ClientNativeSocialLoginFacebookPtrOutput) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookPtrOutput) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookPtrOutput) Elem() ClientNativeSocialLoginFacebookOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginFacebook) ClientNativeSocialLoginFacebook {
		if v != nil {
			return *v
		}
		var ret ClientNativeSocialLoginFacebook
		return ret
	}).(ClientNativeSocialLoginFacebookOutput)
}

// Boolean
func (o ClientNativeSocialLoginFacebookPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginFacebook) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClientRefreshToken struct {
	// String. Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
	ExpirationType string `pulumi:"expirationType"`
	// Integer. The time in seconds after which inactive refresh tokens will expire.
	IdleTokenLifetime *int `pulumi:"idleTokenLifetime"`
	// Boolean, (Default=false) Whether or not inactive refresh tokens should be remain valid indefinitely.
	InfiniteIdleTokenLifetime *bool `pulumi:"infiniteIdleTokenLifetime"`
	// Boolean, (Default=false) Whether or not refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set
	InfiniteTokenLifetime *bool `pulumi:"infiniteTokenLifetime"`
	// Integer. The amount of time in seconds in which a refresh token may be reused without trigging reuse detection.
	Leeway *int `pulumi:"leeway"`
	// String. Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
	RotationType string `pulumi:"rotationType"`
	// Integer. The absolute lifetime of a refresh token in seconds.
	TokenLifetime *int `pulumi:"tokenLifetime"`
}

// ClientRefreshTokenInput is an input type that accepts ClientRefreshTokenArgs and ClientRefreshTokenOutput values.
// You can construct a concrete instance of `ClientRefreshTokenInput` via:
//
//          ClientRefreshTokenArgs{...}
type ClientRefreshTokenInput interface {
	pulumi.Input

	ToClientRefreshTokenOutput() ClientRefreshTokenOutput
	ToClientRefreshTokenOutputWithContext(context.Context) ClientRefreshTokenOutput
}

type ClientRefreshTokenArgs struct {
	// String. Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
	ExpirationType pulumi.StringInput `pulumi:"expirationType"`
	// Integer. The time in seconds after which inactive refresh tokens will expire.
	IdleTokenLifetime pulumi.IntPtrInput `pulumi:"idleTokenLifetime"`
	// Boolean, (Default=false) Whether or not inactive refresh tokens should be remain valid indefinitely.
	InfiniteIdleTokenLifetime pulumi.BoolPtrInput `pulumi:"infiniteIdleTokenLifetime"`
	// Boolean, (Default=false) Whether or not refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set
	InfiniteTokenLifetime pulumi.BoolPtrInput `pulumi:"infiniteTokenLifetime"`
	// Integer. The amount of time in seconds in which a refresh token may be reused without trigging reuse detection.
	Leeway pulumi.IntPtrInput `pulumi:"leeway"`
	// String. Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
	RotationType pulumi.StringInput `pulumi:"rotationType"`
	// Integer. The absolute lifetime of a refresh token in seconds.
	TokenLifetime pulumi.IntPtrInput `pulumi:"tokenLifetime"`
}

func (ClientRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRefreshToken)(nil)).Elem()
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenOutput() ClientRefreshTokenOutput {
	return i.ToClientRefreshTokenOutputWithContext(context.Background())
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenOutputWithContext(ctx context.Context) ClientRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRefreshTokenOutput)
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return i.ToClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRefreshTokenOutput).ToClientRefreshTokenPtrOutputWithContext(ctx)
}

// ClientRefreshTokenPtrInput is an input type that accepts ClientRefreshTokenArgs, ClientRefreshTokenPtr and ClientRefreshTokenPtrOutput values.
// You can construct a concrete instance of `ClientRefreshTokenPtrInput` via:
//
//          ClientRefreshTokenArgs{...}
//
//  or:
//
//          nil
type ClientRefreshTokenPtrInput interface {
	pulumi.Input

	ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput
	ToClientRefreshTokenPtrOutputWithContext(context.Context) ClientRefreshTokenPtrOutput
}

type clientRefreshTokenPtrType ClientRefreshTokenArgs

func ClientRefreshTokenPtr(v *ClientRefreshTokenArgs) ClientRefreshTokenPtrInput {
	return (*clientRefreshTokenPtrType)(v)
}

func (*clientRefreshTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientRefreshToken)(nil)).Elem()
}

func (i *clientRefreshTokenPtrType) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return i.ToClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (i *clientRefreshTokenPtrType) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRefreshTokenPtrOutput)
}

type ClientRefreshTokenOutput struct{ *pulumi.OutputState }

func (ClientRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRefreshToken)(nil)).Elem()
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenOutput() ClientRefreshTokenOutput {
	return o
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenOutputWithContext(ctx context.Context) ClientRefreshTokenOutput {
	return o
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return o.ToClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientRefreshToken) *ClientRefreshToken {
		return &v
	}).(ClientRefreshTokenPtrOutput)
}

// String. Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
func (o ClientRefreshTokenOutput) ExpirationType() pulumi.StringOutput {
	return o.ApplyT(func(v ClientRefreshToken) string { return v.ExpirationType }).(pulumi.StringOutput)
}

// Integer. The time in seconds after which inactive refresh tokens will expire.
func (o ClientRefreshTokenOutput) IdleTokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *int { return v.IdleTokenLifetime }).(pulumi.IntPtrOutput)
}

// Boolean, (Default=false) Whether or not inactive refresh tokens should be remain valid indefinitely.
func (o ClientRefreshTokenOutput) InfiniteIdleTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *bool { return v.InfiniteIdleTokenLifetime }).(pulumi.BoolPtrOutput)
}

// Boolean, (Default=false) Whether or not refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set
func (o ClientRefreshTokenOutput) InfiniteTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *bool { return v.InfiniteTokenLifetime }).(pulumi.BoolPtrOutput)
}

// Integer. The amount of time in seconds in which a refresh token may be reused without trigging reuse detection.
func (o ClientRefreshTokenOutput) Leeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *int { return v.Leeway }).(pulumi.IntPtrOutput)
}

// String. Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
func (o ClientRefreshTokenOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v ClientRefreshToken) string { return v.RotationType }).(pulumi.StringOutput)
}

// Integer. The absolute lifetime of a refresh token in seconds.
func (o ClientRefreshTokenOutput) TokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *int { return v.TokenLifetime }).(pulumi.IntPtrOutput)
}

type ClientRefreshTokenPtrOutput struct{ *pulumi.OutputState }

func (ClientRefreshTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientRefreshToken)(nil)).Elem()
}

func (o ClientRefreshTokenPtrOutput) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return o
}

func (o ClientRefreshTokenPtrOutput) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return o
}

func (o ClientRefreshTokenPtrOutput) Elem() ClientRefreshTokenOutput {
	return o.ApplyT(func(v *ClientRefreshToken) ClientRefreshToken {
		if v != nil {
			return *v
		}
		var ret ClientRefreshToken
		return ret
	}).(ClientRefreshTokenOutput)
}

// String. Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
func (o ClientRefreshTokenPtrOutput) ExpirationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationType
	}).(pulumi.StringPtrOutput)
}

// Integer. The time in seconds after which inactive refresh tokens will expire.
func (o ClientRefreshTokenPtrOutput) IdleTokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.IdleTokenLifetime
	}).(pulumi.IntPtrOutput)
}

// Boolean, (Default=false) Whether or not inactive refresh tokens should be remain valid indefinitely.
func (o ClientRefreshTokenPtrOutput) InfiniteIdleTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *bool {
		if v == nil {
			return nil
		}
		return v.InfiniteIdleTokenLifetime
	}).(pulumi.BoolPtrOutput)
}

// Boolean, (Default=false) Whether or not refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set
func (o ClientRefreshTokenPtrOutput) InfiniteTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *bool {
		if v == nil {
			return nil
		}
		return v.InfiniteTokenLifetime
	}).(pulumi.BoolPtrOutput)
}

// Integer. The amount of time in seconds in which a refresh token may be reused without trigging reuse detection.
func (o ClientRefreshTokenPtrOutput) Leeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.Leeway
	}).(pulumi.IntPtrOutput)
}

// String. Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
func (o ClientRefreshTokenPtrOutput) RotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.RotationType
	}).(pulumi.StringPtrOutput)
}

// Integer. The absolute lifetime of a refresh token in seconds.
func (o ClientRefreshTokenPtrOutput) TokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.TokenLifetime
	}).(pulumi.IntPtrOutput)
}

type ConnectionOptions struct {
	// ADFS Metadata source.
	AdfsServer *string `pulumi:"adfsServer"`
	// List of allowed audiences.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	ApiEnableUsers   *bool    `pulumi:"apiEnableUsers"`
	// Azure AD domain name.
	//
	// Deprecated: Use domain instead
	AppDomain *string `pulumi:"appDomain"`
	// Azure AD app ID.
	AppId                 *string `pulumi:"appId"`
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// Indicates whether or not to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
	BruteForceProtection *bool `pulumi:"bruteForceProtection"`
	// OIDC provider client ID.
	ClientId *string `pulumi:"clientId"`
	// OIDC provider client secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// String.
	CommunityBaseUrl *string `pulumi:"communityBaseUrl"`
	// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
	Configuration map[string]string `pulumi:"configuration"`
	// Custom database action scripts. For more information, read [Custom Database Action Script Templates](https://auth0.com/docs/connections/database/custom-db/templates).
	CustomScripts map[string]string `pulumi:"customScripts"`
	// (Boolean) When enabled additional debugging information will be generated.
	Debug *bool `pulumi:"debug"`
	// Sign Request Algorithm Digest
	DigestAlgorithm *string `pulumi:"digestAlgorithm"`
	DisableCache    *bool   `pulumi:"disableCache"`
	// Boolean. Indicates whether or not to allow user sign-ups to your application.
	DisableSignup *bool `pulumi:"disableSignup"`
	// OpenID discovery URL. E.g. `https://auth.example.com/.well-known/openid-configuration`.
	DiscoveryUrl *string `pulumi:"discoveryUrl"`
	Domain       *string `pulumi:"domain"`
	// List of the domains that can be authenticated using the Identity Provider. Only needed for Identifier First authentication flows.
	DomainAliases                []string `pulumi:"domainAliases"`
	EnabledDatabaseCustomization *bool    `pulumi:"enabledDatabaseCustomization"`
	// Custom Entity ID for the connection.
	EntityId *string `pulumi:"entityId"`
	// SAML Attributes mapping. If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
	FieldsMap          map[string]string `pulumi:"fieldsMap"`
	ForwardRequestInfo *bool             `pulumi:"forwardRequestInfo"`
	// SMS number for the sender. Used when SMS Source is From.
	From                  *string                                 `pulumi:"from"`
	GatewayAuthentication *ConnectionOptionsGatewayAuthentication `pulumi:"gatewayAuthentication"`
	GatewayUrl            *string                                 `pulumi:"gatewayUrl"`
	IconUrl               *string                                 `pulumi:"iconUrl"`
	IdentityApi           *string                                 `pulumi:"identityApi"`
	// Configuration Options for IDP Initiated Authentication.  This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`
	IdpInitiated *ConnectionOptionsIdpInitiated `pulumi:"idpInitiated"`
	// Indicates whether or not you have a legacy user store and want to gradually migrate those users to the Auth0 user store. [Learn more](https://auth0.com/docs/users/guides/configure-automatic-migration).
	ImportMode *bool    `pulumi:"importMode"`
	Ips        []string `pulumi:"ips"`
	// Issuer URL. E.g. `https://auth.example.com`
	Issuer  *string `pulumi:"issuer"`
	JwksUri *string `pulumi:"jwksUri"`
	// Key ID.
	KeyId *string `pulumi:"keyId"`
	// Maximum number of groups to retrieve.
	MaxGroupsToRetrieve *string `pulumi:"maxGroupsToRetrieve"`
	// SID for Copilot. Used when SMS Source is Copilot.
	MessagingServiceSid *string `pulumi:"messagingServiceSid"`
	// Configuration settings Options for multifactor authentication. For details, see MFA Options.
	Mfa *ConnectionOptionsMfa `pulumi:"mfa"`
	// Name of the connection.
	Name *string `pulumi:"name"`
	// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the denylist. See [here](https://auth0.com/docs/security/denylist-user-attributes) for more info.
	NonPersistentAttrs []string `pulumi:"nonPersistentAttrs"`
	// Configuration settings for password complexity. For details, see Password Complexity Options.
	PasswordComplexityOptions *ConnectionOptionsPasswordComplexityOptions `pulumi:"passwordComplexityOptions"`
	// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary. For details, see Password Dictionary.
	PasswordDictionary *ConnectionOptionsPasswordDictionary `pulumi:"passwordDictionary"`
	// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords. For details, see Password History.
	PasswordHistories []ConnectionOptionsPasswordHistory `pulumi:"passwordHistories"`
	// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's name, username, nickname, user_metadata.name, user_metadata.first, user_metadata.last, user's email, or first part of the user's email. For details, see Password No Personal Info.
	PasswordNoPersonalInfo *ConnectionOptionsPasswordNoPersonalInfo `pulumi:"passwordNoPersonalInfo"`
	// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
	PasswordPolicy *string `pulumi:"passwordPolicy"`
	// The SAML Response Binding - how the SAML token is received by Auth0 from IdP. Two possible values are `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` (default) and `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST`
	ProtocolBinding *string `pulumi:"protocolBinding"`
	Provider        *string `pulumi:"provider"`
	// Template that formats the SAML request
	RequestTemplate *string `pulumi:"requestTemplate"`
	// Indicates whether or not the user is required to provide a username in addition to an email address.
	RequiresUsername *bool `pulumi:"requiresUsername"`
	// Scopes required by the connection. The value must be a list, for example `["openid", "profile", "email"]`.
	Scopes  []string          `pulumi:"scopes"`
	Scripts map[string]string `pulumi:"scripts"`
	// Determines whether the 'name', 'given_name', 'family_name', 'nickname', and 'picture' attributes can be independently updated when using the external IdP. Default is `onEachLogin` and can be set to `onFirstLogin`.
	SetUserRootAttributes *string `pulumi:"setUserRootAttributes"`
	// Determines how Auth0 sets the emailVerified field in the user profile. Can either be set to `neverSetEmailsAsVerified` or `alwaysSetEmailsAsVerified`.
	ShouldTrustEmailVerifiedConnection *string `pulumi:"shouldTrustEmailVerifiedConnection"`
	// SAML single login URL for the connection.
	SignInEndpoint *string `pulumi:"signInEndpoint"`
	// SAML single logout URL for the connection.
	SignOutEndpoint *string `pulumi:"signOutEndpoint"`
	// (Boolean) When enabled, the SAML authentication request will be signed.
	SignSamlRequest *bool `pulumi:"signSamlRequest"`
	// Sign Request Algorithm
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// The X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded
	SigningCert *string `pulumi:"signingCert"`
	// Version 1 is deprecated, use version 2.
	StrategyVersion *int    `pulumi:"strategyVersion"`
	Subject         *string `pulumi:"subject"`
	// Syntax of the SMS. Options include `markdown` and `liquid`.
	Syntax *string `pulumi:"syntax"`
	// Team ID.
	TeamId *string `pulumi:"teamId"`
	// Template for the SMS. You can use `@@password@@` as a placeholder for the password value.
	Template      *string `pulumi:"template"`
	TenantDomain  *string `pulumi:"tenantDomain"`
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
	// Configuration options for one-time passwords. For details, see TOTP.
	Totp *ConnectionOptionsTotp `pulumi:"totp"`
	// SID for your Twilio account.
	TwilioSid *string `pulumi:"twilioSid"`
	// AuthToken for your Twilio account.
	TwilioToken *string `pulumi:"twilioToken"`
	// Value can be `backChannel` or `frontChannel`.
	Type        *string `pulumi:"type"`
	UseCertAuth *bool   `pulumi:"useCertAuth"`
	UseKerberos *bool   `pulumi:"useKerberos"`
	UseWsfed    *bool   `pulumi:"useWsfed"`
	// Attribute in the SAML token that will be mapped to the userId property in Auth0.
	UserIdAttribute  *string `pulumi:"userIdAttribute"`
	UserinfoEndpoint *string `pulumi:"userinfoEndpoint"`
	// Validation of the minimum and maximum values allowed for a user to have as username. For details, see Validation.
	Validation *ConnectionOptionsValidation `pulumi:"validation"`
	// Indicates whether or not to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
	WaadCommonEndpoint *bool   `pulumi:"waadCommonEndpoint"`
	WaadProtocol       *string `pulumi:"waadProtocol"`
}

// ConnectionOptionsInput is an input type that accepts ConnectionOptionsArgs and ConnectionOptionsOutput values.
// You can construct a concrete instance of `ConnectionOptionsInput` via:
//
//          ConnectionOptionsArgs{...}
type ConnectionOptionsInput interface {
	pulumi.Input

	ToConnectionOptionsOutput() ConnectionOptionsOutput
	ToConnectionOptionsOutputWithContext(context.Context) ConnectionOptionsOutput
}

type ConnectionOptionsArgs struct {
	// ADFS Metadata source.
	AdfsServer pulumi.StringPtrInput `pulumi:"adfsServer"`
	// List of allowed audiences.
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
	ApiEnableUsers   pulumi.BoolPtrInput     `pulumi:"apiEnableUsers"`
	// Azure AD domain name.
	//
	// Deprecated: Use domain instead
	AppDomain pulumi.StringPtrInput `pulumi:"appDomain"`
	// Azure AD app ID.
	AppId                 pulumi.StringPtrInput `pulumi:"appId"`
	AuthorizationEndpoint pulumi.StringPtrInput `pulumi:"authorizationEndpoint"`
	// Indicates whether or not to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
	BruteForceProtection pulumi.BoolPtrInput `pulumi:"bruteForceProtection"`
	// OIDC provider client ID.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// OIDC provider client secret.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// String.
	CommunityBaseUrl pulumi.StringPtrInput `pulumi:"communityBaseUrl"`
	// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
	Configuration pulumi.StringMapInput `pulumi:"configuration"`
	// Custom database action scripts. For more information, read [Custom Database Action Script Templates](https://auth0.com/docs/connections/database/custom-db/templates).
	CustomScripts pulumi.StringMapInput `pulumi:"customScripts"`
	// (Boolean) When enabled additional debugging information will be generated.
	Debug pulumi.BoolPtrInput `pulumi:"debug"`
	// Sign Request Algorithm Digest
	DigestAlgorithm pulumi.StringPtrInput `pulumi:"digestAlgorithm"`
	DisableCache    pulumi.BoolPtrInput   `pulumi:"disableCache"`
	// Boolean. Indicates whether or not to allow user sign-ups to your application.
	DisableSignup pulumi.BoolPtrInput `pulumi:"disableSignup"`
	// OpenID discovery URL. E.g. `https://auth.example.com/.well-known/openid-configuration`.
	DiscoveryUrl pulumi.StringPtrInput `pulumi:"discoveryUrl"`
	Domain       pulumi.StringPtrInput `pulumi:"domain"`
	// List of the domains that can be authenticated using the Identity Provider. Only needed for Identifier First authentication flows.
	DomainAliases                pulumi.StringArrayInput `pulumi:"domainAliases"`
	EnabledDatabaseCustomization pulumi.BoolPtrInput     `pulumi:"enabledDatabaseCustomization"`
	// Custom Entity ID for the connection.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// SAML Attributes mapping. If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
	FieldsMap          pulumi.StringMapInput `pulumi:"fieldsMap"`
	ForwardRequestInfo pulumi.BoolPtrInput   `pulumi:"forwardRequestInfo"`
	// SMS number for the sender. Used when SMS Source is From.
	From                  pulumi.StringPtrInput                          `pulumi:"from"`
	GatewayAuthentication ConnectionOptionsGatewayAuthenticationPtrInput `pulumi:"gatewayAuthentication"`
	GatewayUrl            pulumi.StringPtrInput                          `pulumi:"gatewayUrl"`
	IconUrl               pulumi.StringPtrInput                          `pulumi:"iconUrl"`
	IdentityApi           pulumi.StringPtrInput                          `pulumi:"identityApi"`
	// Configuration Options for IDP Initiated Authentication.  This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`
	IdpInitiated ConnectionOptionsIdpInitiatedPtrInput `pulumi:"idpInitiated"`
	// Indicates whether or not you have a legacy user store and want to gradually migrate those users to the Auth0 user store. [Learn more](https://auth0.com/docs/users/guides/configure-automatic-migration).
	ImportMode pulumi.BoolPtrInput     `pulumi:"importMode"`
	Ips        pulumi.StringArrayInput `pulumi:"ips"`
	// Issuer URL. E.g. `https://auth.example.com`
	Issuer  pulumi.StringPtrInput `pulumi:"issuer"`
	JwksUri pulumi.StringPtrInput `pulumi:"jwksUri"`
	// Key ID.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
	// Maximum number of groups to retrieve.
	MaxGroupsToRetrieve pulumi.StringPtrInput `pulumi:"maxGroupsToRetrieve"`
	// SID for Copilot. Used when SMS Source is Copilot.
	MessagingServiceSid pulumi.StringPtrInput `pulumi:"messagingServiceSid"`
	// Configuration settings Options for multifactor authentication. For details, see MFA Options.
	Mfa ConnectionOptionsMfaPtrInput `pulumi:"mfa"`
	// Name of the connection.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the denylist. See [here](https://auth0.com/docs/security/denylist-user-attributes) for more info.
	NonPersistentAttrs pulumi.StringArrayInput `pulumi:"nonPersistentAttrs"`
	// Configuration settings for password complexity. For details, see Password Complexity Options.
	PasswordComplexityOptions ConnectionOptionsPasswordComplexityOptionsPtrInput `pulumi:"passwordComplexityOptions"`
	// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary. For details, see Password Dictionary.
	PasswordDictionary ConnectionOptionsPasswordDictionaryPtrInput `pulumi:"passwordDictionary"`
	// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords. For details, see Password History.
	PasswordHistories ConnectionOptionsPasswordHistoryArrayInput `pulumi:"passwordHistories"`
	// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's name, username, nickname, user_metadata.name, user_metadata.first, user_metadata.last, user's email, or first part of the user's email. For details, see Password No Personal Info.
	PasswordNoPersonalInfo ConnectionOptionsPasswordNoPersonalInfoPtrInput `pulumi:"passwordNoPersonalInfo"`
	// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
	PasswordPolicy pulumi.StringPtrInput `pulumi:"passwordPolicy"`
	// The SAML Response Binding - how the SAML token is received by Auth0 from IdP. Two possible values are `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` (default) and `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST`
	ProtocolBinding pulumi.StringPtrInput `pulumi:"protocolBinding"`
	Provider        pulumi.StringPtrInput `pulumi:"provider"`
	// Template that formats the SAML request
	RequestTemplate pulumi.StringPtrInput `pulumi:"requestTemplate"`
	// Indicates whether or not the user is required to provide a username in addition to an email address.
	RequiresUsername pulumi.BoolPtrInput `pulumi:"requiresUsername"`
	// Scopes required by the connection. The value must be a list, for example `["openid", "profile", "email"]`.
	Scopes  pulumi.StringArrayInput `pulumi:"scopes"`
	Scripts pulumi.StringMapInput   `pulumi:"scripts"`
	// Determines whether the 'name', 'given_name', 'family_name', 'nickname', and 'picture' attributes can be independently updated when using the external IdP. Default is `onEachLogin` and can be set to `onFirstLogin`.
	SetUserRootAttributes pulumi.StringPtrInput `pulumi:"setUserRootAttributes"`
	// Determines how Auth0 sets the emailVerified field in the user profile. Can either be set to `neverSetEmailsAsVerified` or `alwaysSetEmailsAsVerified`.
	ShouldTrustEmailVerifiedConnection pulumi.StringPtrInput `pulumi:"shouldTrustEmailVerifiedConnection"`
	// SAML single login URL for the connection.
	SignInEndpoint pulumi.StringPtrInput `pulumi:"signInEndpoint"`
	// SAML single logout URL for the connection.
	SignOutEndpoint pulumi.StringPtrInput `pulumi:"signOutEndpoint"`
	// (Boolean) When enabled, the SAML authentication request will be signed.
	SignSamlRequest pulumi.BoolPtrInput `pulumi:"signSamlRequest"`
	// Sign Request Algorithm
	SignatureAlgorithm pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
	// The X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded
	SigningCert pulumi.StringPtrInput `pulumi:"signingCert"`
	// Version 1 is deprecated, use version 2.
	StrategyVersion pulumi.IntPtrInput    `pulumi:"strategyVersion"`
	Subject         pulumi.StringPtrInput `pulumi:"subject"`
	// Syntax of the SMS. Options include `markdown` and `liquid`.
	Syntax pulumi.StringPtrInput `pulumi:"syntax"`
	// Team ID.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
	// Template for the SMS. You can use `@@password@@` as a placeholder for the password value.
	Template      pulumi.StringPtrInput `pulumi:"template"`
	TenantDomain  pulumi.StringPtrInput `pulumi:"tenantDomain"`
	TokenEndpoint pulumi.StringPtrInput `pulumi:"tokenEndpoint"`
	// Configuration options for one-time passwords. For details, see TOTP.
	Totp ConnectionOptionsTotpPtrInput `pulumi:"totp"`
	// SID for your Twilio account.
	TwilioSid pulumi.StringPtrInput `pulumi:"twilioSid"`
	// AuthToken for your Twilio account.
	TwilioToken pulumi.StringPtrInput `pulumi:"twilioToken"`
	// Value can be `backChannel` or `frontChannel`.
	Type        pulumi.StringPtrInput `pulumi:"type"`
	UseCertAuth pulumi.BoolPtrInput   `pulumi:"useCertAuth"`
	UseKerberos pulumi.BoolPtrInput   `pulumi:"useKerberos"`
	UseWsfed    pulumi.BoolPtrInput   `pulumi:"useWsfed"`
	// Attribute in the SAML token that will be mapped to the userId property in Auth0.
	UserIdAttribute  pulumi.StringPtrInput `pulumi:"userIdAttribute"`
	UserinfoEndpoint pulumi.StringPtrInput `pulumi:"userinfoEndpoint"`
	// Validation of the minimum and maximum values allowed for a user to have as username. For details, see Validation.
	Validation ConnectionOptionsValidationPtrInput `pulumi:"validation"`
	// Indicates whether or not to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
	WaadCommonEndpoint pulumi.BoolPtrInput   `pulumi:"waadCommonEndpoint"`
	WaadProtocol       pulumi.StringPtrInput `pulumi:"waadProtocol"`
}

func (ConnectionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptions)(nil)).Elem()
}

func (i ConnectionOptionsArgs) ToConnectionOptionsOutput() ConnectionOptionsOutput {
	return i.ToConnectionOptionsOutputWithContext(context.Background())
}

func (i ConnectionOptionsArgs) ToConnectionOptionsOutputWithContext(ctx context.Context) ConnectionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsOutput)
}

func (i ConnectionOptionsArgs) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return i.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsArgs) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsOutput).ToConnectionOptionsPtrOutputWithContext(ctx)
}

// ConnectionOptionsPtrInput is an input type that accepts ConnectionOptionsArgs, ConnectionOptionsPtr and ConnectionOptionsPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPtrInput` via:
//
//          ConnectionOptionsArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput
	ToConnectionOptionsPtrOutputWithContext(context.Context) ConnectionOptionsPtrOutput
}

type connectionOptionsPtrType ConnectionOptionsArgs

func ConnectionOptionsPtr(v *ConnectionOptionsArgs) ConnectionOptionsPtrInput {
	return (*connectionOptionsPtrType)(v)
}

func (*connectionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptions)(nil)).Elem()
}

func (i *connectionOptionsPtrType) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return i.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPtrType) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPtrOutput)
}

type ConnectionOptionsOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptions)(nil)).Elem()
}

func (o ConnectionOptionsOutput) ToConnectionOptionsOutput() ConnectionOptionsOutput {
	return o
}

func (o ConnectionOptionsOutput) ToConnectionOptionsOutputWithContext(ctx context.Context) ConnectionOptionsOutput {
	return o
}

func (o ConnectionOptionsOutput) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return o.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsOutput) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptions) *ConnectionOptions {
		return &v
	}).(ConnectionOptionsPtrOutput)
}

// ADFS Metadata source.
func (o ConnectionOptionsOutput) AdfsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AdfsServer }).(pulumi.StringPtrOutput)
}

// List of allowed audiences.
func (o ConnectionOptionsOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

func (o ConnectionOptionsOutput) ApiEnableUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ApiEnableUsers }).(pulumi.BoolPtrOutput)
}

// Azure AD domain name.
//
// Deprecated: Use domain instead
func (o ConnectionOptionsOutput) AppDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AppDomain }).(pulumi.StringPtrOutput)
}

// Azure AD app ID.
func (o ConnectionOptionsOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

// Indicates whether or not to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
func (o ConnectionOptionsOutput) BruteForceProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.BruteForceProtection }).(pulumi.BoolPtrOutput)
}

// OIDC provider client ID.
func (o ConnectionOptionsOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// OIDC provider client secret.
func (o ConnectionOptionsOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsOutput) CommunityBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.CommunityBaseUrl }).(pulumi.StringPtrOutput)
}

// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
func (o ConnectionOptionsOutput) Configuration() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.Configuration }).(pulumi.StringMapOutput)
}

// Custom database action scripts. For more information, read [Custom Database Action Script Templates](https://auth0.com/docs/connections/database/custom-db/templates).
func (o ConnectionOptionsOutput) CustomScripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.CustomScripts }).(pulumi.StringMapOutput)
}

// (Boolean) When enabled additional debugging information will be generated.
func (o ConnectionOptionsOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.Debug }).(pulumi.BoolPtrOutput)
}

// Sign Request Algorithm Digest
func (o ConnectionOptionsOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) DisableCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableCache }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not to allow user sign-ups to your application.
func (o ConnectionOptionsOutput) DisableSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableSignup }).(pulumi.BoolPtrOutput)
}

// OpenID discovery URL. E.g. `https://auth.example.com/.well-known/openid-configuration`.
func (o ConnectionOptionsOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.DiscoveryUrl }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// List of the domains that can be authenticated using the Identity Provider. Only needed for Identifier First authentication flows.
func (o ConnectionOptionsOutput) DomainAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.DomainAliases }).(pulumi.StringArrayOutput)
}

func (o ConnectionOptionsOutput) EnabledDatabaseCustomization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.EnabledDatabaseCustomization }).(pulumi.BoolPtrOutput)
}

// Custom Entity ID for the connection.
func (o ConnectionOptionsOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// SAML Attributes mapping. If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
func (o ConnectionOptionsOutput) FieldsMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.FieldsMap }).(pulumi.StringMapOutput)
}

func (o ConnectionOptionsOutput) ForwardRequestInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ForwardRequestInfo }).(pulumi.BoolPtrOutput)
}

// SMS number for the sender. Used when SMS Source is From.
func (o ConnectionOptionsOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) GatewayAuthentication() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsGatewayAuthentication { return v.GatewayAuthentication }).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

func (o ConnectionOptionsOutput) GatewayUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.GatewayUrl }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) IdentityApi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.IdentityApi }).(pulumi.StringPtrOutput)
}

// Configuration Options for IDP Initiated Authentication.  This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`
func (o ConnectionOptionsOutput) IdpInitiated() ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsIdpInitiated { return v.IdpInitiated }).(ConnectionOptionsIdpInitiatedPtrOutput)
}

// Indicates whether or not you have a legacy user store and want to gradually migrate those users to the Auth0 user store. [Learn more](https://auth0.com/docs/users/guides/configure-automatic-migration).
func (o ConnectionOptionsOutput) ImportMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ImportMode }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// Issuer URL. E.g. `https://auth.example.com`
func (o ConnectionOptionsOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.JwksUri }).(pulumi.StringPtrOutput)
}

// Key ID.
func (o ConnectionOptionsOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

// Maximum number of groups to retrieve.
func (o ConnectionOptionsOutput) MaxGroupsToRetrieve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MaxGroupsToRetrieve }).(pulumi.StringPtrOutput)
}

// SID for Copilot. Used when SMS Source is Copilot.
func (o ConnectionOptionsOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MessagingServiceSid }).(pulumi.StringPtrOutput)
}

// Configuration settings Options for multifactor authentication. For details, see MFA Options.
func (o ConnectionOptionsOutput) Mfa() ConnectionOptionsMfaPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsMfa { return v.Mfa }).(ConnectionOptionsMfaPtrOutput)
}

// Name of the connection.
func (o ConnectionOptionsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the denylist. See [here](https://auth0.com/docs/security/denylist-user-attributes) for more info.
func (o ConnectionOptionsOutput) NonPersistentAttrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.NonPersistentAttrs }).(pulumi.StringArrayOutput)
}

// Configuration settings for password complexity. For details, see Password Complexity Options.
func (o ConnectionOptionsOutput) PasswordComplexityOptions() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordComplexityOptions {
		return v.PasswordComplexityOptions
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary. For details, see Password Dictionary.
func (o ConnectionOptionsOutput) PasswordDictionary() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordDictionary { return v.PasswordDictionary }).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords. For details, see Password History.
func (o ConnectionOptionsOutput) PasswordHistories() ConnectionOptionsPasswordHistoryArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []ConnectionOptionsPasswordHistory { return v.PasswordHistories }).(ConnectionOptionsPasswordHistoryArrayOutput)
}

// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's name, username, nickname, user_metadata.name, user_metadata.first, user_metadata.last, user's email, or first part of the user's email. For details, see Password No Personal Info.
func (o ConnectionOptionsOutput) PasswordNoPersonalInfo() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordNoPersonalInfo { return v.PasswordNoPersonalInfo }).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
func (o ConnectionOptionsOutput) PasswordPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.PasswordPolicy }).(pulumi.StringPtrOutput)
}

// The SAML Response Binding - how the SAML token is received by Auth0 from IdP. Two possible values are `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` (default) and `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST`
func (o ConnectionOptionsOutput) ProtocolBinding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ProtocolBinding }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// Template that formats the SAML request
func (o ConnectionOptionsOutput) RequestTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.RequestTemplate }).(pulumi.StringPtrOutput)
}

// Indicates whether or not the user is required to provide a username in addition to an email address.
func (o ConnectionOptionsOutput) RequiresUsername() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.RequiresUsername }).(pulumi.BoolPtrOutput)
}

// Scopes required by the connection. The value must be a list, for example `["openid", "profile", "email"]`.
func (o ConnectionOptionsOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o ConnectionOptionsOutput) Scripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.Scripts }).(pulumi.StringMapOutput)
}

// Determines whether the 'name', 'given_name', 'family_name', 'nickname', and 'picture' attributes can be independently updated when using the external IdP. Default is `onEachLogin` and can be set to `onFirstLogin`.
func (o ConnectionOptionsOutput) SetUserRootAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SetUserRootAttributes }).(pulumi.StringPtrOutput)
}

// Determines how Auth0 sets the emailVerified field in the user profile. Can either be set to `neverSetEmailsAsVerified` or `alwaysSetEmailsAsVerified`.
func (o ConnectionOptionsOutput) ShouldTrustEmailVerifiedConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ShouldTrustEmailVerifiedConnection }).(pulumi.StringPtrOutput)
}

// SAML single login URL for the connection.
func (o ConnectionOptionsOutput) SignInEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SignInEndpoint }).(pulumi.StringPtrOutput)
}

// SAML single logout URL for the connection.
func (o ConnectionOptionsOutput) SignOutEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SignOutEndpoint }).(pulumi.StringPtrOutput)
}

// (Boolean) When enabled, the SAML authentication request will be signed.
func (o ConnectionOptionsOutput) SignSamlRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.SignSamlRequest }).(pulumi.BoolPtrOutput)
}

// Sign Request Algorithm
func (o ConnectionOptionsOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// The X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded
func (o ConnectionOptionsOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SigningCert }).(pulumi.StringPtrOutput)
}

// Version 1 is deprecated, use version 2.
func (o ConnectionOptionsOutput) StrategyVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *int { return v.StrategyVersion }).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// Syntax of the SMS. Options include `markdown` and `liquid`.
func (o ConnectionOptionsOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Syntax }).(pulumi.StringPtrOutput)
}

// Team ID.
func (o ConnectionOptionsOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

// Template for the SMS. You can use `@@password@@` as a placeholder for the password value.
func (o ConnectionOptionsOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Template }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) TenantDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TenantDomain }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TokenEndpoint }).(pulumi.StringPtrOutput)
}

// Configuration options for one-time passwords. For details, see TOTP.
func (o ConnectionOptionsOutput) Totp() ConnectionOptionsTotpPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsTotp { return v.Totp }).(ConnectionOptionsTotpPtrOutput)
}

// SID for your Twilio account.
func (o ConnectionOptionsOutput) TwilioSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TwilioSid }).(pulumi.StringPtrOutput)
}

// AuthToken for your Twilio account.
func (o ConnectionOptionsOutput) TwilioToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TwilioToken }).(pulumi.StringPtrOutput)
}

// Value can be `backChannel` or `frontChannel`.
func (o ConnectionOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) UseCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseCertAuth }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsOutput) UseKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseKerberos }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsOutput) UseWsfed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseWsfed }).(pulumi.BoolPtrOutput)
}

// Attribute in the SAML token that will be mapped to the userId property in Auth0.
func (o ConnectionOptionsOutput) UserIdAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.UserIdAttribute }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) UserinfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.UserinfoEndpoint }).(pulumi.StringPtrOutput)
}

// Validation of the minimum and maximum values allowed for a user to have as username. For details, see Validation.
func (o ConnectionOptionsOutput) Validation() ConnectionOptionsValidationPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsValidation { return v.Validation }).(ConnectionOptionsValidationPtrOutput)
}

// Indicates whether or not to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
func (o ConnectionOptionsOutput) WaadCommonEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.WaadCommonEndpoint }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsOutput) WaadProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.WaadProtocol }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptions)(nil)).Elem()
}

func (o ConnectionOptionsPtrOutput) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPtrOutput) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPtrOutput) Elem() ConnectionOptionsOutput {
	return o.ApplyT(func(v *ConnectionOptions) ConnectionOptions {
		if v != nil {
			return *v
		}
		var ret ConnectionOptions
		return ret
	}).(ConnectionOptionsOutput)
}

// ADFS Metadata source.
func (o ConnectionOptionsPtrOutput) AdfsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AdfsServer
	}).(pulumi.StringPtrOutput)
}

// List of allowed audiences.
func (o ConnectionOptionsPtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

func (o ConnectionOptionsPtrOutput) ApiEnableUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ApiEnableUsers
	}).(pulumi.BoolPtrOutput)
}

// Azure AD domain name.
//
// Deprecated: Use domain instead
func (o ConnectionOptionsPtrOutput) AppDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AppDomain
	}).(pulumi.StringPtrOutput)
}

// Azure AD app ID.
func (o ConnectionOptionsPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// Indicates whether or not to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
func (o ConnectionOptionsPtrOutput) BruteForceProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.BruteForceProtection
	}).(pulumi.BoolPtrOutput)
}

// OIDC provider client ID.
func (o ConnectionOptionsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// OIDC provider client secret.
func (o ConnectionOptionsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsPtrOutput) CommunityBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.CommunityBaseUrl
	}).(pulumi.StringPtrOutput)
}

// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
func (o ConnectionOptionsPtrOutput) Configuration() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(pulumi.StringMapOutput)
}

// Custom database action scripts. For more information, read [Custom Database Action Script Templates](https://auth0.com/docs/connections/database/custom-db/templates).
func (o ConnectionOptionsPtrOutput) CustomScripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomScripts
	}).(pulumi.StringMapOutput)
}

// (Boolean) When enabled additional debugging information will be generated.
func (o ConnectionOptionsPtrOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Debug
	}).(pulumi.BoolPtrOutput)
}

// Sign Request Algorithm Digest
func (o ConnectionOptionsPtrOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.DigestAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) DisableCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableCache
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not to allow user sign-ups to your application.
func (o ConnectionOptionsPtrOutput) DisableSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSignup
	}).(pulumi.BoolPtrOutput)
}

// OpenID discovery URL. E.g. `https://auth.example.com/.well-known/openid-configuration`.
func (o ConnectionOptionsPtrOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveryUrl
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// List of the domains that can be authenticated using the Identity Provider. Only needed for Identifier First authentication flows.
func (o ConnectionOptionsPtrOutput) DomainAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.DomainAliases
	}).(pulumi.StringArrayOutput)
}

func (o ConnectionOptionsPtrOutput) EnabledDatabaseCustomization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnabledDatabaseCustomization
	}).(pulumi.BoolPtrOutput)
}

// Custom Entity ID for the connection.
func (o ConnectionOptionsPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// SAML Attributes mapping. If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
func (o ConnectionOptionsPtrOutput) FieldsMap() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.FieldsMap
	}).(pulumi.StringMapOutput)
}

func (o ConnectionOptionsPtrOutput) ForwardRequestInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ForwardRequestInfo
	}).(pulumi.BoolPtrOutput)
}

// SMS number for the sender. Used when SMS Source is From.
func (o ConnectionOptionsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) GatewayAuthentication() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsGatewayAuthentication {
		if v == nil {
			return nil
		}
		return v.GatewayAuthentication
	}).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

func (o ConnectionOptionsPtrOutput) GatewayUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.GatewayUrl
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.IconUrl
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) IdentityApi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.IdentityApi
	}).(pulumi.StringPtrOutput)
}

// Configuration Options for IDP Initiated Authentication.  This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`
func (o ConnectionOptionsPtrOutput) IdpInitiated() ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsIdpInitiated {
		if v == nil {
			return nil
		}
		return v.IdpInitiated
	}).(ConnectionOptionsIdpInitiatedPtrOutput)
}

// Indicates whether or not you have a legacy user store and want to gradually migrate those users to the Auth0 user store. [Learn more](https://auth0.com/docs/users/guides/configure-automatic-migration).
func (o ConnectionOptionsPtrOutput) ImportMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ImportMode
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// Issuer URL. E.g. `https://auth.example.com`
func (o ConnectionOptionsPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.JwksUri
	}).(pulumi.StringPtrOutput)
}

// Key ID.
func (o ConnectionOptionsPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeyId
	}).(pulumi.StringPtrOutput)
}

// Maximum number of groups to retrieve.
func (o ConnectionOptionsPtrOutput) MaxGroupsToRetrieve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MaxGroupsToRetrieve
	}).(pulumi.StringPtrOutput)
}

// SID for Copilot. Used when SMS Source is Copilot.
func (o ConnectionOptionsPtrOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MessagingServiceSid
	}).(pulumi.StringPtrOutput)
}

// Configuration settings Options for multifactor authentication. For details, see MFA Options.
func (o ConnectionOptionsPtrOutput) Mfa() ConnectionOptionsMfaPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsMfa {
		if v == nil {
			return nil
		}
		return v.Mfa
	}).(ConnectionOptionsMfaPtrOutput)
}

// Name of the connection.
func (o ConnectionOptionsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the denylist. See [here](https://auth0.com/docs/security/denylist-user-attributes) for more info.
func (o ConnectionOptionsPtrOutput) NonPersistentAttrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.NonPersistentAttrs
	}).(pulumi.StringArrayOutput)
}

// Configuration settings for password complexity. For details, see Password Complexity Options.
func (o ConnectionOptionsPtrOutput) PasswordComplexityOptions() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordComplexityOptions {
		if v == nil {
			return nil
		}
		return v.PasswordComplexityOptions
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary. For details, see Password Dictionary.
func (o ConnectionOptionsPtrOutput) PasswordDictionary() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordDictionary {
		if v == nil {
			return nil
		}
		return v.PasswordDictionary
	}).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords. For details, see Password History.
func (o ConnectionOptionsPtrOutput) PasswordHistories() ConnectionOptionsPasswordHistoryArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []ConnectionOptionsPasswordHistory {
		if v == nil {
			return nil
		}
		return v.PasswordHistories
	}).(ConnectionOptionsPasswordHistoryArrayOutput)
}

// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's name, username, nickname, user_metadata.name, user_metadata.first, user_metadata.last, user's email, or first part of the user's email. For details, see Password No Personal Info.
func (o ConnectionOptionsPtrOutput) PasswordNoPersonalInfo() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordNoPersonalInfo {
		if v == nil {
			return nil
		}
		return v.PasswordNoPersonalInfo
	}).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
func (o ConnectionOptionsPtrOutput) PasswordPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.PasswordPolicy
	}).(pulumi.StringPtrOutput)
}

// The SAML Response Binding - how the SAML token is received by Auth0 from IdP. Two possible values are `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect` (default) and `urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST`
func (o ConnectionOptionsPtrOutput) ProtocolBinding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ProtocolBinding
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

// Template that formats the SAML request
func (o ConnectionOptionsPtrOutput) RequestTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.RequestTemplate
	}).(pulumi.StringPtrOutput)
}

// Indicates whether or not the user is required to provide a username in addition to an email address.
func (o ConnectionOptionsPtrOutput) RequiresUsername() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.RequiresUsername
	}).(pulumi.BoolPtrOutput)
}

// Scopes required by the connection. The value must be a list, for example `["openid", "profile", "email"]`.
func (o ConnectionOptionsPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

func (o ConnectionOptionsPtrOutput) Scripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Scripts
	}).(pulumi.StringMapOutput)
}

// Determines whether the 'name', 'given_name', 'family_name', 'nickname', and 'picture' attributes can be independently updated when using the external IdP. Default is `onEachLogin` and can be set to `onFirstLogin`.
func (o ConnectionOptionsPtrOutput) SetUserRootAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SetUserRootAttributes
	}).(pulumi.StringPtrOutput)
}

// Determines how Auth0 sets the emailVerified field in the user profile. Can either be set to `neverSetEmailsAsVerified` or `alwaysSetEmailsAsVerified`.
func (o ConnectionOptionsPtrOutput) ShouldTrustEmailVerifiedConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ShouldTrustEmailVerifiedConnection
	}).(pulumi.StringPtrOutput)
}

// SAML single login URL for the connection.
func (o ConnectionOptionsPtrOutput) SignInEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignInEndpoint
	}).(pulumi.StringPtrOutput)
}

// SAML single logout URL for the connection.
func (o ConnectionOptionsPtrOutput) SignOutEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignOutEndpoint
	}).(pulumi.StringPtrOutput)
}

// (Boolean) When enabled, the SAML authentication request will be signed.
func (o ConnectionOptionsPtrOutput) SignSamlRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.SignSamlRequest
	}).(pulumi.BoolPtrOutput)
}

// Sign Request Algorithm
func (o ConnectionOptionsPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

// The X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded
func (o ConnectionOptionsPtrOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SigningCert
	}).(pulumi.StringPtrOutput)
}

// Version 1 is deprecated, use version 2.
func (o ConnectionOptionsPtrOutput) StrategyVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *int {
		if v == nil {
			return nil
		}
		return v.StrategyVersion
	}).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

// Syntax of the SMS. Options include `markdown` and `liquid`.
func (o ConnectionOptionsPtrOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Syntax
	}).(pulumi.StringPtrOutput)
}

// Team ID.
func (o ConnectionOptionsPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

// Template for the SMS. You can use `@@password@@` as a placeholder for the password value.
func (o ConnectionOptionsPtrOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) TenantDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TenantDomain
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// Configuration options for one-time passwords. For details, see TOTP.
func (o ConnectionOptionsPtrOutput) Totp() ConnectionOptionsTotpPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsTotp {
		if v == nil {
			return nil
		}
		return v.Totp
	}).(ConnectionOptionsTotpPtrOutput)
}

// SID for your Twilio account.
func (o ConnectionOptionsPtrOutput) TwilioSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TwilioSid
	}).(pulumi.StringPtrOutput)
}

// AuthToken for your Twilio account.
func (o ConnectionOptionsPtrOutput) TwilioToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TwilioToken
	}).(pulumi.StringPtrOutput)
}

// Value can be `backChannel` or `frontChannel`.
func (o ConnectionOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) UseCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseCertAuth
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsPtrOutput) UseKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseKerberos
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsPtrOutput) UseWsfed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseWsfed
	}).(pulumi.BoolPtrOutput)
}

// Attribute in the SAML token that will be mapped to the userId property in Auth0.
func (o ConnectionOptionsPtrOutput) UserIdAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.UserIdAttribute
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) UserinfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.UserinfoEndpoint
	}).(pulumi.StringPtrOutput)
}

// Validation of the minimum and maximum values allowed for a user to have as username. For details, see Validation.
func (o ConnectionOptionsPtrOutput) Validation() ConnectionOptionsValidationPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsValidation {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(ConnectionOptionsValidationPtrOutput)
}

// Indicates whether or not to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
func (o ConnectionOptionsPtrOutput) WaadCommonEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.WaadCommonEndpoint
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsPtrOutput) WaadProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.WaadProtocol
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsGatewayAuthentication struct {
	Audience            *string `pulumi:"audience"`
	Method              *string `pulumi:"method"`
	Secret              *string `pulumi:"secret"`
	SecretBase64Encoded *bool   `pulumi:"secretBase64Encoded"`
	Subject             *string `pulumi:"subject"`
}

// ConnectionOptionsGatewayAuthenticationInput is an input type that accepts ConnectionOptionsGatewayAuthenticationArgs and ConnectionOptionsGatewayAuthenticationOutput values.
// You can construct a concrete instance of `ConnectionOptionsGatewayAuthenticationInput` via:
//
//          ConnectionOptionsGatewayAuthenticationArgs{...}
type ConnectionOptionsGatewayAuthenticationInput interface {
	pulumi.Input

	ToConnectionOptionsGatewayAuthenticationOutput() ConnectionOptionsGatewayAuthenticationOutput
	ToConnectionOptionsGatewayAuthenticationOutputWithContext(context.Context) ConnectionOptionsGatewayAuthenticationOutput
}

type ConnectionOptionsGatewayAuthenticationArgs struct {
	Audience            pulumi.StringPtrInput `pulumi:"audience"`
	Method              pulumi.StringPtrInput `pulumi:"method"`
	Secret              pulumi.StringPtrInput `pulumi:"secret"`
	SecretBase64Encoded pulumi.BoolPtrInput   `pulumi:"secretBase64Encoded"`
	Subject             pulumi.StringPtrInput `pulumi:"subject"`
}

func (ConnectionOptionsGatewayAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationOutput() ConnectionOptionsGatewayAuthenticationOutput {
	return i.ToConnectionOptionsGatewayAuthenticationOutputWithContext(context.Background())
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsGatewayAuthenticationOutput)
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return i.ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsGatewayAuthenticationOutput).ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx)
}

// ConnectionOptionsGatewayAuthenticationPtrInput is an input type that accepts ConnectionOptionsGatewayAuthenticationArgs, ConnectionOptionsGatewayAuthenticationPtr and ConnectionOptionsGatewayAuthenticationPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsGatewayAuthenticationPtrInput` via:
//
//          ConnectionOptionsGatewayAuthenticationArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsGatewayAuthenticationPtrInput interface {
	pulumi.Input

	ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput
	ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput
}

type connectionOptionsGatewayAuthenticationPtrType ConnectionOptionsGatewayAuthenticationArgs

func ConnectionOptionsGatewayAuthenticationPtr(v *ConnectionOptionsGatewayAuthenticationArgs) ConnectionOptionsGatewayAuthenticationPtrInput {
	return (*connectionOptionsGatewayAuthenticationPtrType)(v)
}

func (*connectionOptionsGatewayAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (i *connectionOptionsGatewayAuthenticationPtrType) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return i.ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsGatewayAuthenticationPtrType) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

type ConnectionOptionsGatewayAuthenticationOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsGatewayAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationOutput() ConnectionOptionsGatewayAuthenticationOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsGatewayAuthentication) *ConnectionOptionsGatewayAuthentication {
		return &v
	}).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) SecretBase64Encoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *bool { return v.SecretBase64Encoded }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsGatewayAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsGatewayAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Elem() ConnectionOptionsGatewayAuthenticationOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) ConnectionOptionsGatewayAuthentication {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsGatewayAuthentication
		return ret
	}).(ConnectionOptionsGatewayAuthenticationOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) SecretBase64Encoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.SecretBase64Encoded
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsIdpInitiated struct {
	ClientAuthorizeQuery *string `pulumi:"clientAuthorizeQuery"`
	// Google client ID.
	ClientId       *string `pulumi:"clientId"`
	ClientProtocol *string `pulumi:"clientProtocol"`
}

// ConnectionOptionsIdpInitiatedInput is an input type that accepts ConnectionOptionsIdpInitiatedArgs and ConnectionOptionsIdpInitiatedOutput values.
// You can construct a concrete instance of `ConnectionOptionsIdpInitiatedInput` via:
//
//          ConnectionOptionsIdpInitiatedArgs{...}
type ConnectionOptionsIdpInitiatedInput interface {
	pulumi.Input

	ToConnectionOptionsIdpInitiatedOutput() ConnectionOptionsIdpInitiatedOutput
	ToConnectionOptionsIdpInitiatedOutputWithContext(context.Context) ConnectionOptionsIdpInitiatedOutput
}

type ConnectionOptionsIdpInitiatedArgs struct {
	ClientAuthorizeQuery pulumi.StringPtrInput `pulumi:"clientAuthorizeQuery"`
	// Google client ID.
	ClientId       pulumi.StringPtrInput `pulumi:"clientId"`
	ClientProtocol pulumi.StringPtrInput `pulumi:"clientProtocol"`
}

func (ConnectionOptionsIdpInitiatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedOutput() ConnectionOptionsIdpInitiatedOutput {
	return i.ToConnectionOptionsIdpInitiatedOutputWithContext(context.Background())
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsIdpInitiatedOutput)
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return i.ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsIdpInitiatedOutput).ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx)
}

// ConnectionOptionsIdpInitiatedPtrInput is an input type that accepts ConnectionOptionsIdpInitiatedArgs, ConnectionOptionsIdpInitiatedPtr and ConnectionOptionsIdpInitiatedPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsIdpInitiatedPtrInput` via:
//
//          ConnectionOptionsIdpInitiatedArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsIdpInitiatedPtrInput interface {
	pulumi.Input

	ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput
	ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Context) ConnectionOptionsIdpInitiatedPtrOutput
}

type connectionOptionsIdpInitiatedPtrType ConnectionOptionsIdpInitiatedArgs

func ConnectionOptionsIdpInitiatedPtr(v *ConnectionOptionsIdpInitiatedArgs) ConnectionOptionsIdpInitiatedPtrInput {
	return (*connectionOptionsIdpInitiatedPtrType)(v)
}

func (*connectionOptionsIdpInitiatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (i *connectionOptionsIdpInitiatedPtrType) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return i.ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsIdpInitiatedPtrType) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsIdpInitiatedPtrOutput)
}

type ConnectionOptionsIdpInitiatedOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsIdpInitiatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedOutput() ConnectionOptionsIdpInitiatedOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsIdpInitiated) *ConnectionOptionsIdpInitiated {
		return &v
	}).(ConnectionOptionsIdpInitiatedPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedOutput) ClientAuthorizeQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsIdpInitiated) *string { return v.ClientAuthorizeQuery }).(pulumi.StringPtrOutput)
}

// Google client ID.
func (o ConnectionOptionsIdpInitiatedOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsIdpInitiated) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedOutput) ClientProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsIdpInitiated) *string { return v.ClientProtocol }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsIdpInitiatedPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsIdpInitiatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) Elem() ConnectionOptionsIdpInitiatedOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) ConnectionOptionsIdpInitiated {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsIdpInitiated
		return ret
	}).(ConnectionOptionsIdpInitiatedOutput)
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ClientAuthorizeQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) *string {
		if v == nil {
			return nil
		}
		return v.ClientAuthorizeQuery
	}).(pulumi.StringPtrOutput)
}

// Google client ID.
func (o ConnectionOptionsIdpInitiatedPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ClientProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) *string {
		if v == nil {
			return nil
		}
		return v.ClientProtocol
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsMfa struct {
	// Indicates whether multifactor authentication is enabled for this connection.
	Active *bool `pulumi:"active"`
	// Indicates whether multifactor authentication enrollment settings will be returned.
	ReturnEnrollSettings *bool `pulumi:"returnEnrollSettings"`
}

// ConnectionOptionsMfaInput is an input type that accepts ConnectionOptionsMfaArgs and ConnectionOptionsMfaOutput values.
// You can construct a concrete instance of `ConnectionOptionsMfaInput` via:
//
//          ConnectionOptionsMfaArgs{...}
type ConnectionOptionsMfaInput interface {
	pulumi.Input

	ToConnectionOptionsMfaOutput() ConnectionOptionsMfaOutput
	ToConnectionOptionsMfaOutputWithContext(context.Context) ConnectionOptionsMfaOutput
}

type ConnectionOptionsMfaArgs struct {
	// Indicates whether multifactor authentication is enabled for this connection.
	Active pulumi.BoolPtrInput `pulumi:"active"`
	// Indicates whether multifactor authentication enrollment settings will be returned.
	ReturnEnrollSettings pulumi.BoolPtrInput `pulumi:"returnEnrollSettings"`
}

func (ConnectionOptionsMfaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsMfa)(nil)).Elem()
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaOutput() ConnectionOptionsMfaOutput {
	return i.ToConnectionOptionsMfaOutputWithContext(context.Background())
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaOutputWithContext(ctx context.Context) ConnectionOptionsMfaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsMfaOutput)
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return i.ToConnectionOptionsMfaPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsMfaOutput).ToConnectionOptionsMfaPtrOutputWithContext(ctx)
}

// ConnectionOptionsMfaPtrInput is an input type that accepts ConnectionOptionsMfaArgs, ConnectionOptionsMfaPtr and ConnectionOptionsMfaPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsMfaPtrInput` via:
//
//          ConnectionOptionsMfaArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsMfaPtrInput interface {
	pulumi.Input

	ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput
	ToConnectionOptionsMfaPtrOutputWithContext(context.Context) ConnectionOptionsMfaPtrOutput
}

type connectionOptionsMfaPtrType ConnectionOptionsMfaArgs

func ConnectionOptionsMfaPtr(v *ConnectionOptionsMfaArgs) ConnectionOptionsMfaPtrInput {
	return (*connectionOptionsMfaPtrType)(v)
}

func (*connectionOptionsMfaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsMfa)(nil)).Elem()
}

func (i *connectionOptionsMfaPtrType) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return i.ToConnectionOptionsMfaPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsMfaPtrType) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsMfaPtrOutput)
}

type ConnectionOptionsMfaOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsMfaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsMfa)(nil)).Elem()
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaOutput() ConnectionOptionsMfaOutput {
	return o
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaOutputWithContext(ctx context.Context) ConnectionOptionsMfaOutput {
	return o
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return o.ToConnectionOptionsMfaPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsMfa) *ConnectionOptionsMfa {
		return &v
	}).(ConnectionOptionsMfaPtrOutput)
}

// Indicates whether multifactor authentication is enabled for this connection.
func (o ConnectionOptionsMfaOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsMfa) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

// Indicates whether multifactor authentication enrollment settings will be returned.
func (o ConnectionOptionsMfaOutput) ReturnEnrollSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsMfa) *bool { return v.ReturnEnrollSettings }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsMfaPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsMfaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsMfa)(nil)).Elem()
}

func (o ConnectionOptionsMfaPtrOutput) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return o
}

func (o ConnectionOptionsMfaPtrOutput) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return o
}

func (o ConnectionOptionsMfaPtrOutput) Elem() ConnectionOptionsMfaOutput {
	return o.ApplyT(func(v *ConnectionOptionsMfa) ConnectionOptionsMfa {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsMfa
		return ret
	}).(ConnectionOptionsMfaOutput)
}

// Indicates whether multifactor authentication is enabled for this connection.
func (o ConnectionOptionsMfaPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsMfa) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether multifactor authentication enrollment settings will be returned.
func (o ConnectionOptionsMfaPtrOutput) ReturnEnrollSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsMfa) *bool {
		if v == nil {
			return nil
		}
		return v.ReturnEnrollSettings
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptions struct {
	// Minimum number of characters allowed in passwords.
	MinLength *int `pulumi:"minLength"`
}

// ConnectionOptionsPasswordComplexityOptionsInput is an input type that accepts ConnectionOptionsPasswordComplexityOptionsArgs and ConnectionOptionsPasswordComplexityOptionsOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordComplexityOptionsInput` via:
//
//          ConnectionOptionsPasswordComplexityOptionsArgs{...}
type ConnectionOptionsPasswordComplexityOptionsInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput
	ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(context.Context) ConnectionOptionsPasswordComplexityOptionsOutput
}

type ConnectionOptionsPasswordComplexityOptionsArgs struct {
	// Minimum number of characters allowed in passwords.
	MinLength pulumi.IntPtrInput `pulumi:"minLength"`
}

func (ConnectionOptionsPasswordComplexityOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsOutput)
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsOutput).ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordComplexityOptionsPtrInput is an input type that accepts ConnectionOptionsPasswordComplexityOptionsArgs, ConnectionOptionsPasswordComplexityOptionsPtr and ConnectionOptionsPasswordComplexityOptionsPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordComplexityOptionsPtrInput` via:
//
//          ConnectionOptionsPasswordComplexityOptionsArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsPasswordComplexityOptionsPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput
	ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput
}

type connectionOptionsPasswordComplexityOptionsPtrType ConnectionOptionsPasswordComplexityOptionsArgs

func ConnectionOptionsPasswordComplexityOptionsPtr(v *ConnectionOptionsPasswordComplexityOptionsArgs) ConnectionOptionsPasswordComplexityOptionsPtrInput {
	return (*connectionOptionsPasswordComplexityOptionsPtrType)(v)
}

func (*connectionOptionsPasswordComplexityOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (i *connectionOptionsPasswordComplexityOptionsPtrType) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordComplexityOptionsPtrType) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptionsOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordComplexityOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsPasswordComplexityOptions) *ConnectionOptionsPasswordComplexityOptions {
		return &v
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

// Minimum number of characters allowed in passwords.
func (o ConnectionOptionsPasswordComplexityOptionsOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordComplexityOptions) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptionsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordComplexityOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) Elem() ConnectionOptionsPasswordComplexityOptionsOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordComplexityOptions) ConnectionOptionsPasswordComplexityOptions {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsPasswordComplexityOptions
		return ret
	}).(ConnectionOptionsPasswordComplexityOptionsOutput)
}

// Minimum number of characters allowed in passwords.
func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordComplexityOptions) *int {
		if v == nil {
			return nil
		}
		return v.MinLength
	}).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordDictionary struct {
	// Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.
	Dictionaries []string `pulumi:"dictionaries"`
	// Indicates whether the password dictionary check is enabled for this connection.
	Enable *bool `pulumi:"enable"`
}

// ConnectionOptionsPasswordDictionaryInput is an input type that accepts ConnectionOptionsPasswordDictionaryArgs and ConnectionOptionsPasswordDictionaryOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordDictionaryInput` via:
//
//          ConnectionOptionsPasswordDictionaryArgs{...}
type ConnectionOptionsPasswordDictionaryInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput
	ToConnectionOptionsPasswordDictionaryOutputWithContext(context.Context) ConnectionOptionsPasswordDictionaryOutput
}

type ConnectionOptionsPasswordDictionaryArgs struct {
	// Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.
	Dictionaries pulumi.StringArrayInput `pulumi:"dictionaries"`
	// Indicates whether the password dictionary check is enabled for this connection.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (ConnectionOptionsPasswordDictionaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput {
	return i.ToConnectionOptionsPasswordDictionaryOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryOutput)
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return i.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryOutput).ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordDictionaryPtrInput is an input type that accepts ConnectionOptionsPasswordDictionaryArgs, ConnectionOptionsPasswordDictionaryPtr and ConnectionOptionsPasswordDictionaryPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordDictionaryPtrInput` via:
//
//          ConnectionOptionsPasswordDictionaryArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsPasswordDictionaryPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput
	ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Context) ConnectionOptionsPasswordDictionaryPtrOutput
}

type connectionOptionsPasswordDictionaryPtrType ConnectionOptionsPasswordDictionaryArgs

func ConnectionOptionsPasswordDictionaryPtr(v *ConnectionOptionsPasswordDictionaryArgs) ConnectionOptionsPasswordDictionaryPtrInput {
	return (*connectionOptionsPasswordDictionaryPtrType)(v)
}

func (*connectionOptionsPasswordDictionaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (i *connectionOptionsPasswordDictionaryPtrType) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return i.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordDictionaryPtrType) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

type ConnectionOptionsPasswordDictionaryOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordDictionaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsPasswordDictionary) *ConnectionOptionsPasswordDictionary {
		return &v
	}).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

// Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.
func (o ConnectionOptionsPasswordDictionaryOutput) Dictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordDictionary) []string { return v.Dictionaries }).(pulumi.StringArrayOutput)
}

// Indicates whether the password dictionary check is enabled for this connection.
func (o ConnectionOptionsPasswordDictionaryOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordDictionary) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordDictionaryPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordDictionaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) Elem() ConnectionOptionsPasswordDictionaryOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) ConnectionOptionsPasswordDictionary {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsPasswordDictionary
		return ret
	}).(ConnectionOptionsPasswordDictionaryOutput)
}

// Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.
func (o ConnectionOptionsPasswordDictionaryPtrOutput) Dictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) []string {
		if v == nil {
			return nil
		}
		return v.Dictionaries
	}).(pulumi.StringArrayOutput)
}

// Indicates whether the password dictionary check is enabled for this connection.
func (o ConnectionOptionsPasswordDictionaryPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordHistory struct {
	// Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
	Enable *bool `pulumi:"enable"`
	// Indicates the number of passwords to keep in history with a maximum of 24.
	Size *int `pulumi:"size"`
}

// ConnectionOptionsPasswordHistoryInput is an input type that accepts ConnectionOptionsPasswordHistoryArgs and ConnectionOptionsPasswordHistoryOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordHistoryInput` via:
//
//          ConnectionOptionsPasswordHistoryArgs{...}
type ConnectionOptionsPasswordHistoryInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput
	ToConnectionOptionsPasswordHistoryOutputWithContext(context.Context) ConnectionOptionsPasswordHistoryOutput
}

type ConnectionOptionsPasswordHistoryArgs struct {
	// Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Indicates the number of passwords to keep in history with a maximum of 24.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (ConnectionOptionsPasswordHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (i ConnectionOptionsPasswordHistoryArgs) ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput {
	return i.ToConnectionOptionsPasswordHistoryOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordHistoryArgs) ToConnectionOptionsPasswordHistoryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordHistoryOutput)
}

// ConnectionOptionsPasswordHistoryArrayInput is an input type that accepts ConnectionOptionsPasswordHistoryArray and ConnectionOptionsPasswordHistoryArrayOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordHistoryArrayInput` via:
//
//          ConnectionOptionsPasswordHistoryArray{ ConnectionOptionsPasswordHistoryArgs{...} }
type ConnectionOptionsPasswordHistoryArrayInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput
	ToConnectionOptionsPasswordHistoryArrayOutputWithContext(context.Context) ConnectionOptionsPasswordHistoryArrayOutput
}

type ConnectionOptionsPasswordHistoryArray []ConnectionOptionsPasswordHistoryInput

func (ConnectionOptionsPasswordHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (i ConnectionOptionsPasswordHistoryArray) ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput {
	return i.ToConnectionOptionsPasswordHistoryArrayOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordHistoryArray) ToConnectionOptionsPasswordHistoryArrayOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordHistoryArrayOutput)
}

type ConnectionOptionsPasswordHistoryOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (o ConnectionOptionsPasswordHistoryOutput) ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryOutput) ToConnectionOptionsPasswordHistoryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryOutput {
	return o
}

// Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
func (o ConnectionOptionsPasswordHistoryOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordHistory) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Indicates the number of passwords to keep in history with a maximum of 24.
func (o ConnectionOptionsPasswordHistoryOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordHistory) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordHistoryArrayOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) ToConnectionOptionsPasswordHistoryArrayOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryArrayOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) Index(i pulumi.IntInput) ConnectionOptionsPasswordHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionOptionsPasswordHistory {
		return vs[0].([]ConnectionOptionsPasswordHistory)[vs[1].(int)]
	}).(ConnectionOptionsPasswordHistoryOutput)
}

type ConnectionOptionsPasswordNoPersonalInfo struct {
	// Indicates whether the password personal info check is enabled for this connection.
	Enable *bool `pulumi:"enable"`
}

// ConnectionOptionsPasswordNoPersonalInfoInput is an input type that accepts ConnectionOptionsPasswordNoPersonalInfoArgs and ConnectionOptionsPasswordNoPersonalInfoOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordNoPersonalInfoInput` via:
//
//          ConnectionOptionsPasswordNoPersonalInfoArgs{...}
type ConnectionOptionsPasswordNoPersonalInfoInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput
	ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput
}

type ConnectionOptionsPasswordNoPersonalInfoArgs struct {
	// Indicates whether the password personal info check is enabled for this connection.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (ConnectionOptionsPasswordNoPersonalInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoOutput)
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoOutput).ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordNoPersonalInfoPtrInput is an input type that accepts ConnectionOptionsPasswordNoPersonalInfoArgs, ConnectionOptionsPasswordNoPersonalInfoPtr and ConnectionOptionsPasswordNoPersonalInfoPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordNoPersonalInfoPtrInput` via:
//
//          ConnectionOptionsPasswordNoPersonalInfoArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsPasswordNoPersonalInfoPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput
	ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput
}

type connectionOptionsPasswordNoPersonalInfoPtrType ConnectionOptionsPasswordNoPersonalInfoArgs

func ConnectionOptionsPasswordNoPersonalInfoPtr(v *ConnectionOptionsPasswordNoPersonalInfoArgs) ConnectionOptionsPasswordNoPersonalInfoPtrInput {
	return (*connectionOptionsPasswordNoPersonalInfoPtrType)(v)
}

func (*connectionOptionsPasswordNoPersonalInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (i *connectionOptionsPasswordNoPersonalInfoPtrType) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordNoPersonalInfoPtrType) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

type ConnectionOptionsPasswordNoPersonalInfoOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordNoPersonalInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsPasswordNoPersonalInfo) *ConnectionOptionsPasswordNoPersonalInfo {
		return &v
	}).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

// Indicates whether the password personal info check is enabled for this connection.
func (o ConnectionOptionsPasswordNoPersonalInfoOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordNoPersonalInfo) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordNoPersonalInfoPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) Elem() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordNoPersonalInfo) ConnectionOptionsPasswordNoPersonalInfo {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsPasswordNoPersonalInfo
		return ret
	}).(ConnectionOptionsPasswordNoPersonalInfoOutput)
}

// Indicates whether the password personal info check is enabled for this connection.
func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordNoPersonalInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsTotp struct {
	// Integer. Length of the one-time password.
	Length *int `pulumi:"length"`
	// Integer. Seconds between allowed generation of new passwords.
	TimeStep *int `pulumi:"timeStep"`
}

// ConnectionOptionsTotpInput is an input type that accepts ConnectionOptionsTotpArgs and ConnectionOptionsTotpOutput values.
// You can construct a concrete instance of `ConnectionOptionsTotpInput` via:
//
//          ConnectionOptionsTotpArgs{...}
type ConnectionOptionsTotpInput interface {
	pulumi.Input

	ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput
	ToConnectionOptionsTotpOutputWithContext(context.Context) ConnectionOptionsTotpOutput
}

type ConnectionOptionsTotpArgs struct {
	// Integer. Length of the one-time password.
	Length pulumi.IntPtrInput `pulumi:"length"`
	// Integer. Seconds between allowed generation of new passwords.
	TimeStep pulumi.IntPtrInput `pulumi:"timeStep"`
}

func (ConnectionOptionsTotpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsTotp)(nil)).Elem()
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput {
	return i.ToConnectionOptionsTotpOutputWithContext(context.Background())
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpOutputWithContext(ctx context.Context) ConnectionOptionsTotpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpOutput)
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return i.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpOutput).ToConnectionOptionsTotpPtrOutputWithContext(ctx)
}

// ConnectionOptionsTotpPtrInput is an input type that accepts ConnectionOptionsTotpArgs, ConnectionOptionsTotpPtr and ConnectionOptionsTotpPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsTotpPtrInput` via:
//
//          ConnectionOptionsTotpArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsTotpPtrInput interface {
	pulumi.Input

	ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput
	ToConnectionOptionsTotpPtrOutputWithContext(context.Context) ConnectionOptionsTotpPtrOutput
}

type connectionOptionsTotpPtrType ConnectionOptionsTotpArgs

func ConnectionOptionsTotpPtr(v *ConnectionOptionsTotpArgs) ConnectionOptionsTotpPtrInput {
	return (*connectionOptionsTotpPtrType)(v)
}

func (*connectionOptionsTotpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsTotp)(nil)).Elem()
}

func (i *connectionOptionsTotpPtrType) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return i.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsTotpPtrType) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpPtrOutput)
}

type ConnectionOptionsTotpOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsTotpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsTotp)(nil)).Elem()
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput {
	return o
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpOutputWithContext(ctx context.Context) ConnectionOptionsTotpOutput {
	return o
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return o.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsTotp) *ConnectionOptionsTotp {
		return &v
	}).(ConnectionOptionsTotpPtrOutput)
}

// Integer. Length of the one-time password.
func (o ConnectionOptionsTotpOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsTotp) *int { return v.Length }).(pulumi.IntPtrOutput)
}

// Integer. Seconds between allowed generation of new passwords.
func (o ConnectionOptionsTotpOutput) TimeStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsTotp) *int { return v.TimeStep }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsTotpPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsTotpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsTotp)(nil)).Elem()
}

func (o ConnectionOptionsTotpPtrOutput) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return o
}

func (o ConnectionOptionsTotpPtrOutput) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return o
}

func (o ConnectionOptionsTotpPtrOutput) Elem() ConnectionOptionsTotpOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) ConnectionOptionsTotp {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsTotp
		return ret
	}).(ConnectionOptionsTotpOutput)
}

// Integer. Length of the one-time password.
func (o ConnectionOptionsTotpPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

// Integer. Seconds between allowed generation of new passwords.
func (o ConnectionOptionsTotpPtrOutput) TimeStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) *int {
		if v == nil {
			return nil
		}
		return v.TimeStep
	}).(pulumi.IntPtrOutput)
}

type ConnectionOptionsValidation struct {
	// Specifies the `min` and `max` values of username length. `min` and `max` are integers.
	Username *ConnectionOptionsValidationUsername `pulumi:"username"`
}

// ConnectionOptionsValidationInput is an input type that accepts ConnectionOptionsValidationArgs and ConnectionOptionsValidationOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationInput` via:
//
//          ConnectionOptionsValidationArgs{...}
type ConnectionOptionsValidationInput interface {
	pulumi.Input

	ToConnectionOptionsValidationOutput() ConnectionOptionsValidationOutput
	ToConnectionOptionsValidationOutputWithContext(context.Context) ConnectionOptionsValidationOutput
}

type ConnectionOptionsValidationArgs struct {
	// Specifies the `min` and `max` values of username length. `min` and `max` are integers.
	Username ConnectionOptionsValidationUsernamePtrInput `pulumi:"username"`
}

func (ConnectionOptionsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidation)(nil)).Elem()
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationOutput() ConnectionOptionsValidationOutput {
	return i.ToConnectionOptionsValidationOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationOutputWithContext(ctx context.Context) ConnectionOptionsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationOutput)
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return i.ToConnectionOptionsValidationPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationOutput).ToConnectionOptionsValidationPtrOutputWithContext(ctx)
}

// ConnectionOptionsValidationPtrInput is an input type that accepts ConnectionOptionsValidationArgs, ConnectionOptionsValidationPtr and ConnectionOptionsValidationPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationPtrInput` via:
//
//          ConnectionOptionsValidationArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsValidationPtrInput interface {
	pulumi.Input

	ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput
	ToConnectionOptionsValidationPtrOutputWithContext(context.Context) ConnectionOptionsValidationPtrOutput
}

type connectionOptionsValidationPtrType ConnectionOptionsValidationArgs

func ConnectionOptionsValidationPtr(v *ConnectionOptionsValidationArgs) ConnectionOptionsValidationPtrInput {
	return (*connectionOptionsValidationPtrType)(v)
}

func (*connectionOptionsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidation)(nil)).Elem()
}

func (i *connectionOptionsValidationPtrType) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return i.ToConnectionOptionsValidationPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsValidationPtrType) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationPtrOutput)
}

type ConnectionOptionsValidationOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidation)(nil)).Elem()
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationOutput() ConnectionOptionsValidationOutput {
	return o
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationOutputWithContext(ctx context.Context) ConnectionOptionsValidationOutput {
	return o
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return o.ToConnectionOptionsValidationPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsValidation) *ConnectionOptionsValidation {
		return &v
	}).(ConnectionOptionsValidationPtrOutput)
}

// Specifies the `min` and `max` values of username length. `min` and `max` are integers.
func (o ConnectionOptionsValidationOutput) Username() ConnectionOptionsValidationUsernamePtrOutput {
	return o.ApplyT(func(v ConnectionOptionsValidation) *ConnectionOptionsValidationUsername { return v.Username }).(ConnectionOptionsValidationUsernamePtrOutput)
}

type ConnectionOptionsValidationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidation)(nil)).Elem()
}

func (o ConnectionOptionsValidationPtrOutput) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return o
}

func (o ConnectionOptionsValidationPtrOutput) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return o
}

func (o ConnectionOptionsValidationPtrOutput) Elem() ConnectionOptionsValidationOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidation) ConnectionOptionsValidation {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsValidation
		return ret
	}).(ConnectionOptionsValidationOutput)
}

// Specifies the `min` and `max` values of username length. `min` and `max` are integers.
func (o ConnectionOptionsValidationPtrOutput) Username() ConnectionOptionsValidationUsernamePtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidation) *ConnectionOptionsValidationUsername {
		if v == nil {
			return nil
		}
		return v.Username
	}).(ConnectionOptionsValidationUsernamePtrOutput)
}

type ConnectionOptionsValidationUsername struct {
	Max *int `pulumi:"max"`
	Min *int `pulumi:"min"`
}

// ConnectionOptionsValidationUsernameInput is an input type that accepts ConnectionOptionsValidationUsernameArgs and ConnectionOptionsValidationUsernameOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationUsernameInput` via:
//
//          ConnectionOptionsValidationUsernameArgs{...}
type ConnectionOptionsValidationUsernameInput interface {
	pulumi.Input

	ToConnectionOptionsValidationUsernameOutput() ConnectionOptionsValidationUsernameOutput
	ToConnectionOptionsValidationUsernameOutputWithContext(context.Context) ConnectionOptionsValidationUsernameOutput
}

type ConnectionOptionsValidationUsernameArgs struct {
	Max pulumi.IntPtrInput `pulumi:"max"`
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (ConnectionOptionsValidationUsernameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernameOutput() ConnectionOptionsValidationUsernameOutput {
	return i.ToConnectionOptionsValidationUsernameOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernameOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationUsernameOutput)
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return i.ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationUsernameOutput).ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx)
}

// ConnectionOptionsValidationUsernamePtrInput is an input type that accepts ConnectionOptionsValidationUsernameArgs, ConnectionOptionsValidationUsernamePtr and ConnectionOptionsValidationUsernamePtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationUsernamePtrInput` via:
//
//          ConnectionOptionsValidationUsernameArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsValidationUsernamePtrInput interface {
	pulumi.Input

	ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput
	ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Context) ConnectionOptionsValidationUsernamePtrOutput
}

type connectionOptionsValidationUsernamePtrType ConnectionOptionsValidationUsernameArgs

func ConnectionOptionsValidationUsernamePtr(v *ConnectionOptionsValidationUsernameArgs) ConnectionOptionsValidationUsernamePtrInput {
	return (*connectionOptionsValidationUsernamePtrType)(v)
}

func (*connectionOptionsValidationUsernamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (i *connectionOptionsValidationUsernamePtrType) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return i.ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Background())
}

func (i *connectionOptionsValidationUsernamePtrType) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationUsernamePtrOutput)
}

type ConnectionOptionsValidationUsernameOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationUsernameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernameOutput() ConnectionOptionsValidationUsernameOutput {
	return o
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernameOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernameOutput {
	return o
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return o.ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsValidationUsername) *ConnectionOptionsValidationUsername {
		return &v
	}).(ConnectionOptionsValidationUsernamePtrOutput)
}

func (o ConnectionOptionsValidationUsernameOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsValidationUsername) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsValidationUsernameOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsValidationUsername) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsValidationUsernamePtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationUsernamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (o ConnectionOptionsValidationUsernamePtrOutput) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return o
}

func (o ConnectionOptionsValidationUsernamePtrOutput) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return o
}

func (o ConnectionOptionsValidationUsernamePtrOutput) Elem() ConnectionOptionsValidationUsernameOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidationUsername) ConnectionOptionsValidationUsername {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsValidationUsername
		return ret
	}).(ConnectionOptionsValidationUsernameOutput)
}

func (o ConnectionOptionsValidationUsernamePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidationUsername) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsValidationUsernamePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidationUsername) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

type CustomDomainVerificationType struct {
	// List(Map). Verification methods for the domain.
	Methods []interface{} `pulumi:"methods"`
}

// CustomDomainVerificationTypeInput is an input type that accepts CustomDomainVerificationTypeArgs and CustomDomainVerificationTypeOutput values.
// You can construct a concrete instance of `CustomDomainVerificationTypeInput` via:
//
//          CustomDomainVerificationTypeArgs{...}
type CustomDomainVerificationTypeInput interface {
	pulumi.Input

	ToCustomDomainVerificationTypeOutput() CustomDomainVerificationTypeOutput
	ToCustomDomainVerificationTypeOutputWithContext(context.Context) CustomDomainVerificationTypeOutput
}

type CustomDomainVerificationTypeArgs struct {
	// List(Map). Verification methods for the domain.
	Methods pulumi.ArrayInput `pulumi:"methods"`
}

func (CustomDomainVerificationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainVerificationType)(nil)).Elem()
}

func (i CustomDomainVerificationTypeArgs) ToCustomDomainVerificationTypeOutput() CustomDomainVerificationTypeOutput {
	return i.ToCustomDomainVerificationTypeOutputWithContext(context.Background())
}

func (i CustomDomainVerificationTypeArgs) ToCustomDomainVerificationTypeOutputWithContext(ctx context.Context) CustomDomainVerificationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainVerificationTypeOutput)
}

func (i CustomDomainVerificationTypeArgs) ToCustomDomainVerificationTypePtrOutput() CustomDomainVerificationTypePtrOutput {
	return i.ToCustomDomainVerificationTypePtrOutputWithContext(context.Background())
}

func (i CustomDomainVerificationTypeArgs) ToCustomDomainVerificationTypePtrOutputWithContext(ctx context.Context) CustomDomainVerificationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainVerificationTypeOutput).ToCustomDomainVerificationTypePtrOutputWithContext(ctx)
}

// CustomDomainVerificationTypePtrInput is an input type that accepts CustomDomainVerificationTypeArgs, CustomDomainVerificationTypePtr and CustomDomainVerificationTypePtrOutput values.
// You can construct a concrete instance of `CustomDomainVerificationTypePtrInput` via:
//
//          CustomDomainVerificationTypeArgs{...}
//
//  or:
//
//          nil
type CustomDomainVerificationTypePtrInput interface {
	pulumi.Input

	ToCustomDomainVerificationTypePtrOutput() CustomDomainVerificationTypePtrOutput
	ToCustomDomainVerificationTypePtrOutputWithContext(context.Context) CustomDomainVerificationTypePtrOutput
}

type customDomainVerificationTypePtrType CustomDomainVerificationTypeArgs

func CustomDomainVerificationTypePtr(v *CustomDomainVerificationTypeArgs) CustomDomainVerificationTypePtrInput {
	return (*customDomainVerificationTypePtrType)(v)
}

func (*customDomainVerificationTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainVerificationType)(nil)).Elem()
}

func (i *customDomainVerificationTypePtrType) ToCustomDomainVerificationTypePtrOutput() CustomDomainVerificationTypePtrOutput {
	return i.ToCustomDomainVerificationTypePtrOutputWithContext(context.Background())
}

func (i *customDomainVerificationTypePtrType) ToCustomDomainVerificationTypePtrOutputWithContext(ctx context.Context) CustomDomainVerificationTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainVerificationTypePtrOutput)
}

type CustomDomainVerificationTypeOutput struct{ *pulumi.OutputState }

func (CustomDomainVerificationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainVerificationType)(nil)).Elem()
}

func (o CustomDomainVerificationTypeOutput) ToCustomDomainVerificationTypeOutput() CustomDomainVerificationTypeOutput {
	return o
}

func (o CustomDomainVerificationTypeOutput) ToCustomDomainVerificationTypeOutputWithContext(ctx context.Context) CustomDomainVerificationTypeOutput {
	return o
}

func (o CustomDomainVerificationTypeOutput) ToCustomDomainVerificationTypePtrOutput() CustomDomainVerificationTypePtrOutput {
	return o.ToCustomDomainVerificationTypePtrOutputWithContext(context.Background())
}

func (o CustomDomainVerificationTypeOutput) ToCustomDomainVerificationTypePtrOutputWithContext(ctx context.Context) CustomDomainVerificationTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomDomainVerificationType) *CustomDomainVerificationType {
		return &v
	}).(CustomDomainVerificationTypePtrOutput)
}

// List(Map). Verification methods for the domain.
func (o CustomDomainVerificationTypeOutput) Methods() pulumi.ArrayOutput {
	return o.ApplyT(func(v CustomDomainVerificationType) []interface{} { return v.Methods }).(pulumi.ArrayOutput)
}

type CustomDomainVerificationTypePtrOutput struct{ *pulumi.OutputState }

func (CustomDomainVerificationTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainVerificationType)(nil)).Elem()
}

func (o CustomDomainVerificationTypePtrOutput) ToCustomDomainVerificationTypePtrOutput() CustomDomainVerificationTypePtrOutput {
	return o
}

func (o CustomDomainVerificationTypePtrOutput) ToCustomDomainVerificationTypePtrOutputWithContext(ctx context.Context) CustomDomainVerificationTypePtrOutput {
	return o
}

func (o CustomDomainVerificationTypePtrOutput) Elem() CustomDomainVerificationTypeOutput {
	return o.ApplyT(func(v *CustomDomainVerificationType) CustomDomainVerificationType {
		if v != nil {
			return *v
		}
		var ret CustomDomainVerificationType
		return ret
	}).(CustomDomainVerificationTypeOutput)
}

// List(Map). Verification methods for the domain.
func (o CustomDomainVerificationTypePtrOutput) Methods() pulumi.ArrayOutput {
	return o.ApplyT(func(v *CustomDomainVerificationType) []interface{} {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(pulumi.ArrayOutput)
}

type EmailCredentials struct {
	// String, Case-sensitive. AWS Access Key ID. Used only for AWS.
	AccessKeyId *string `pulumi:"accessKeyId"`
	// String, Case-sensitive. API Key for your email service. Will always be encrypted in our database.
	ApiKey *string `pulumi:"apiKey"`
	// String. API User for your email service.
	ApiUser *string `pulumi:"apiUser"`
	Domain  *string `pulumi:"domain"`
	// String. Default region. Used only for AWS, Mailgun, and SparkPost.
	Region *string `pulumi:"region"`
	// String, Case-sensitive. AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	SecretAccessKey *string `pulumi:"secretAccessKey"`
	// String. Hostname or IP address of your SMTP server. Used only for SMTP.
	SmtpHost *string `pulumi:"smtpHost"`
	// String, Case-sensitive. SMTP password. Used only for SMTP.
	SmtpPass *string `pulumi:"smtpPass"`
	// Integer. Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	SmtpPort *int `pulumi:"smtpPort"`
	// String. SMTP username. Used only for SMTP.
	SmtpUser *string `pulumi:"smtpUser"`
}

// EmailCredentialsInput is an input type that accepts EmailCredentialsArgs and EmailCredentialsOutput values.
// You can construct a concrete instance of `EmailCredentialsInput` via:
//
//          EmailCredentialsArgs{...}
type EmailCredentialsInput interface {
	pulumi.Input

	ToEmailCredentialsOutput() EmailCredentialsOutput
	ToEmailCredentialsOutputWithContext(context.Context) EmailCredentialsOutput
}

type EmailCredentialsArgs struct {
	// String, Case-sensitive. AWS Access Key ID. Used only for AWS.
	AccessKeyId pulumi.StringPtrInput `pulumi:"accessKeyId"`
	// String, Case-sensitive. API Key for your email service. Will always be encrypted in our database.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// String. API User for your email service.
	ApiUser pulumi.StringPtrInput `pulumi:"apiUser"`
	Domain  pulumi.StringPtrInput `pulumi:"domain"`
	// String. Default region. Used only for AWS, Mailgun, and SparkPost.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// String, Case-sensitive. AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
	// String. Hostname or IP address of your SMTP server. Used only for SMTP.
	SmtpHost pulumi.StringPtrInput `pulumi:"smtpHost"`
	// String, Case-sensitive. SMTP password. Used only for SMTP.
	SmtpPass pulumi.StringPtrInput `pulumi:"smtpPass"`
	// Integer. Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	SmtpPort pulumi.IntPtrInput `pulumi:"smtpPort"`
	// String. SMTP username. Used only for SMTP.
	SmtpUser pulumi.StringPtrInput `pulumi:"smtpUser"`
}

func (EmailCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailCredentials)(nil)).Elem()
}

func (i EmailCredentialsArgs) ToEmailCredentialsOutput() EmailCredentialsOutput {
	return i.ToEmailCredentialsOutputWithContext(context.Background())
}

func (i EmailCredentialsArgs) ToEmailCredentialsOutputWithContext(ctx context.Context) EmailCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailCredentialsOutput)
}

func (i EmailCredentialsArgs) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return i.ToEmailCredentialsPtrOutputWithContext(context.Background())
}

func (i EmailCredentialsArgs) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailCredentialsOutput).ToEmailCredentialsPtrOutputWithContext(ctx)
}

// EmailCredentialsPtrInput is an input type that accepts EmailCredentialsArgs, EmailCredentialsPtr and EmailCredentialsPtrOutput values.
// You can construct a concrete instance of `EmailCredentialsPtrInput` via:
//
//          EmailCredentialsArgs{...}
//
//  or:
//
//          nil
type EmailCredentialsPtrInput interface {
	pulumi.Input

	ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput
	ToEmailCredentialsPtrOutputWithContext(context.Context) EmailCredentialsPtrOutput
}

type emailCredentialsPtrType EmailCredentialsArgs

func EmailCredentialsPtr(v *EmailCredentialsArgs) EmailCredentialsPtrInput {
	return (*emailCredentialsPtrType)(v)
}

func (*emailCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailCredentials)(nil)).Elem()
}

func (i *emailCredentialsPtrType) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return i.ToEmailCredentialsPtrOutputWithContext(context.Background())
}

func (i *emailCredentialsPtrType) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailCredentialsPtrOutput)
}

type EmailCredentialsOutput struct{ *pulumi.OutputState }

func (EmailCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailCredentials)(nil)).Elem()
}

func (o EmailCredentialsOutput) ToEmailCredentialsOutput() EmailCredentialsOutput {
	return o
}

func (o EmailCredentialsOutput) ToEmailCredentialsOutputWithContext(ctx context.Context) EmailCredentialsOutput {
	return o
}

func (o EmailCredentialsOutput) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return o.ToEmailCredentialsPtrOutputWithContext(context.Background())
}

func (o EmailCredentialsOutput) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailCredentials) *EmailCredentials {
		return &v
	}).(EmailCredentialsPtrOutput)
}

// String, Case-sensitive. AWS Access Key ID. Used only for AWS.
func (o EmailCredentialsOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. API Key for your email service. Will always be encrypted in our database.
func (o EmailCredentialsOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// String. API User for your email service.
func (o EmailCredentialsOutput) ApiUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.ApiUser }).(pulumi.StringPtrOutput)
}

func (o EmailCredentialsOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// String. Default region. Used only for AWS, Mailgun, and SparkPost.
func (o EmailCredentialsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
func (o EmailCredentialsOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

// String. Hostname or IP address of your SMTP server. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SmtpHost }).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. SMTP password. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SmtpPass }).(pulumi.StringPtrOutput)
}

// Integer. Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *int { return v.SmtpPort }).(pulumi.IntPtrOutput)
}

// String. SMTP username. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SmtpUser }).(pulumi.StringPtrOutput)
}

type EmailCredentialsPtrOutput struct{ *pulumi.OutputState }

func (EmailCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailCredentials)(nil)).Elem()
}

func (o EmailCredentialsPtrOutput) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return o
}

func (o EmailCredentialsPtrOutput) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return o
}

func (o EmailCredentialsPtrOutput) Elem() EmailCredentialsOutput {
	return o.ApplyT(func(v *EmailCredentials) EmailCredentials {
		if v != nil {
			return *v
		}
		var ret EmailCredentials
		return ret
	}).(EmailCredentialsOutput)
}

// String, Case-sensitive. AWS Access Key ID. Used only for AWS.
func (o EmailCredentialsPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. API Key for your email service. Will always be encrypted in our database.
func (o EmailCredentialsPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// String. API User for your email service.
func (o EmailCredentialsPtrOutput) ApiUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ApiUser
	}).(pulumi.StringPtrOutput)
}

func (o EmailCredentialsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// String. Default region. Used only for AWS, Mailgun, and SparkPost.
func (o EmailCredentialsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
func (o EmailCredentialsPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// String. Hostname or IP address of your SMTP server. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpHost
	}).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. SMTP password. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpPass
	}).(pulumi.StringPtrOutput)
}

// Integer. Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *int {
		if v == nil {
			return nil
		}
		return v.SmtpPort
	}).(pulumi.IntPtrOutput)
}

// String. SMTP username. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpUser
	}).(pulumi.StringPtrOutput)
}

type GlobalClientAddons struct {
	Aws                  map[string]interface{}   `pulumi:"aws"`
	AzureBlob            map[string]interface{}   `pulumi:"azureBlob"`
	AzureSb              map[string]interface{}   `pulumi:"azureSb"`
	Box                  map[string]interface{}   `pulumi:"box"`
	Cloudbees            map[string]interface{}   `pulumi:"cloudbees"`
	Concur               map[string]interface{}   `pulumi:"concur"`
	Dropbox              map[string]interface{}   `pulumi:"dropbox"`
	Echosign             map[string]interface{}   `pulumi:"echosign"`
	Egnyte               map[string]interface{}   `pulumi:"egnyte"`
	Firebase             map[string]interface{}   `pulumi:"firebase"`
	Layer                map[string]interface{}   `pulumi:"layer"`
	Mscrm                map[string]interface{}   `pulumi:"mscrm"`
	Newrelic             map[string]interface{}   `pulumi:"newrelic"`
	Office365            map[string]interface{}   `pulumi:"office365"`
	Rms                  map[string]interface{}   `pulumi:"rms"`
	Salesforce           map[string]interface{}   `pulumi:"salesforce"`
	SalesforceApi        map[string]interface{}   `pulumi:"salesforceApi"`
	SalesforceSandboxApi map[string]interface{}   `pulumi:"salesforceSandboxApi"`
	Samlp                *GlobalClientAddonsSamlp `pulumi:"samlp"`
	SapApi               map[string]interface{}   `pulumi:"sapApi"`
	Sentry               map[string]interface{}   `pulumi:"sentry"`
	Sharepoint           map[string]interface{}   `pulumi:"sharepoint"`
	Slack                map[string]interface{}   `pulumi:"slack"`
	Springcm             map[string]interface{}   `pulumi:"springcm"`
	Wams                 map[string]interface{}   `pulumi:"wams"`
	Wsfed                map[string]interface{}   `pulumi:"wsfed"`
	Zendesk              map[string]interface{}   `pulumi:"zendesk"`
	Zoom                 map[string]interface{}   `pulumi:"zoom"`
}

// GlobalClientAddonsInput is an input type that accepts GlobalClientAddonsArgs and GlobalClientAddonsOutput values.
// You can construct a concrete instance of `GlobalClientAddonsInput` via:
//
//          GlobalClientAddonsArgs{...}
type GlobalClientAddonsInput interface {
	pulumi.Input

	ToGlobalClientAddonsOutput() GlobalClientAddonsOutput
	ToGlobalClientAddonsOutputWithContext(context.Context) GlobalClientAddonsOutput
}

type GlobalClientAddonsArgs struct {
	Aws                  pulumi.MapInput                 `pulumi:"aws"`
	AzureBlob            pulumi.MapInput                 `pulumi:"azureBlob"`
	AzureSb              pulumi.MapInput                 `pulumi:"azureSb"`
	Box                  pulumi.MapInput                 `pulumi:"box"`
	Cloudbees            pulumi.MapInput                 `pulumi:"cloudbees"`
	Concur               pulumi.MapInput                 `pulumi:"concur"`
	Dropbox              pulumi.MapInput                 `pulumi:"dropbox"`
	Echosign             pulumi.MapInput                 `pulumi:"echosign"`
	Egnyte               pulumi.MapInput                 `pulumi:"egnyte"`
	Firebase             pulumi.MapInput                 `pulumi:"firebase"`
	Layer                pulumi.MapInput                 `pulumi:"layer"`
	Mscrm                pulumi.MapInput                 `pulumi:"mscrm"`
	Newrelic             pulumi.MapInput                 `pulumi:"newrelic"`
	Office365            pulumi.MapInput                 `pulumi:"office365"`
	Rms                  pulumi.MapInput                 `pulumi:"rms"`
	Salesforce           pulumi.MapInput                 `pulumi:"salesforce"`
	SalesforceApi        pulumi.MapInput                 `pulumi:"salesforceApi"`
	SalesforceSandboxApi pulumi.MapInput                 `pulumi:"salesforceSandboxApi"`
	Samlp                GlobalClientAddonsSamlpPtrInput `pulumi:"samlp"`
	SapApi               pulumi.MapInput                 `pulumi:"sapApi"`
	Sentry               pulumi.MapInput                 `pulumi:"sentry"`
	Sharepoint           pulumi.MapInput                 `pulumi:"sharepoint"`
	Slack                pulumi.MapInput                 `pulumi:"slack"`
	Springcm             pulumi.MapInput                 `pulumi:"springcm"`
	Wams                 pulumi.MapInput                 `pulumi:"wams"`
	Wsfed                pulumi.MapInput                 `pulumi:"wsfed"`
	Zendesk              pulumi.MapInput                 `pulumi:"zendesk"`
	Zoom                 pulumi.MapInput                 `pulumi:"zoom"`
}

func (GlobalClientAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddons)(nil)).Elem()
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsOutput() GlobalClientAddonsOutput {
	return i.ToGlobalClientAddonsOutputWithContext(context.Background())
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsOutputWithContext(ctx context.Context) GlobalClientAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsOutput)
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return i.ToGlobalClientAddonsPtrOutputWithContext(context.Background())
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsOutput).ToGlobalClientAddonsPtrOutputWithContext(ctx)
}

// GlobalClientAddonsPtrInput is an input type that accepts GlobalClientAddonsArgs, GlobalClientAddonsPtr and GlobalClientAddonsPtrOutput values.
// You can construct a concrete instance of `GlobalClientAddonsPtrInput` via:
//
//          GlobalClientAddonsArgs{...}
//
//  or:
//
//          nil
type GlobalClientAddonsPtrInput interface {
	pulumi.Input

	ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput
	ToGlobalClientAddonsPtrOutputWithContext(context.Context) GlobalClientAddonsPtrOutput
}

type globalClientAddonsPtrType GlobalClientAddonsArgs

func GlobalClientAddonsPtr(v *GlobalClientAddonsArgs) GlobalClientAddonsPtrInput {
	return (*globalClientAddonsPtrType)(v)
}

func (*globalClientAddonsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddons)(nil)).Elem()
}

func (i *globalClientAddonsPtrType) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return i.ToGlobalClientAddonsPtrOutputWithContext(context.Background())
}

func (i *globalClientAddonsPtrType) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsPtrOutput)
}

type GlobalClientAddonsOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddons)(nil)).Elem()
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsOutput() GlobalClientAddonsOutput {
	return o
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsOutputWithContext(ctx context.Context) GlobalClientAddonsOutput {
	return o
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return o.ToGlobalClientAddonsPtrOutputWithContext(context.Background())
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientAddons) *GlobalClientAddons {
		return &v
	}).(GlobalClientAddonsPtrOutput)
}

func (o GlobalClientAddonsOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Aws }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.AzureBlob }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.AzureSb }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Box }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Cloudbees }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Concur }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Dropbox }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Echosign }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Egnyte }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Firebase }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Layer }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Mscrm }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Newrelic }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Office365 }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Rms }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Salesforce }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.SalesforceApi }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.SalesforceSandboxApi }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Samlp() GlobalClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v GlobalClientAddons) *GlobalClientAddonsSamlp { return v.Samlp }).(GlobalClientAddonsSamlpPtrOutput)
}

func (o GlobalClientAddonsOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.SapApi }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Sentry }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Sharepoint }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Slack }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Springcm }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Wams }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Wsfed }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Zendesk }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Zoom }).(pulumi.MapOutput)
}

type GlobalClientAddonsPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddons)(nil)).Elem()
}

func (o GlobalClientAddonsPtrOutput) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return o
}

func (o GlobalClientAddonsPtrOutput) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return o
}

func (o GlobalClientAddonsPtrOutput) Elem() GlobalClientAddonsOutput {
	return o.ApplyT(func(v *GlobalClientAddons) GlobalClientAddons {
		if v != nil {
			return *v
		}
		var ret GlobalClientAddons
		return ret
	}).(GlobalClientAddonsOutput)
}

func (o GlobalClientAddonsPtrOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureBlob
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureSb
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Box
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cloudbees
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Concur
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Dropbox
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Echosign
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Egnyte
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Firebase
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Layer
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mscrm
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Newrelic
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Office365
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Rms
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceApi
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceSandboxApi
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Samlp() GlobalClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddons) *GlobalClientAddonsSamlp {
		if v == nil {
			return nil
		}
		return v.Samlp
	}).(GlobalClientAddonsSamlpPtrOutput)
}

func (o GlobalClientAddonsPtrOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SapApi
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sentry
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sharepoint
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Springcm
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wams
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wsfed
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zoom
	}).(pulumi.MapOutput)
}

type GlobalClientAddonsSamlp struct {
	Audience                       *string                `pulumi:"audience"`
	AuthnContextClassRef           *string                `pulumi:"authnContextClassRef"`
	Binding                        *string                `pulumi:"binding"`
	CreateUpnClaim                 *bool                  `pulumi:"createUpnClaim"`
	Destination                    *string                `pulumi:"destination"`
	DigestAlgorithm                *string                `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     *bool                  `pulumi:"includeAttributeNameFormat"`
	LifetimeInSeconds              *int                   `pulumi:"lifetimeInSeconds"`
	Logout                         map[string]interface{} `pulumi:"logout"`
	MapIdentities                  *bool                  `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           *bool                  `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       map[string]interface{} `pulumi:"mappings"`
	NameIdentifierFormat           *string                `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           []string               `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping *bool                  `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      *string                `pulumi:"recipient"`
	SignResponse                   *bool                  `pulumi:"signResponse"`
	SignatureAlgorithm             *string                `pulumi:"signatureAlgorithm"`
	SigningCert                    *string                `pulumi:"signingCert"`
	TypedAttributes                *bool                  `pulumi:"typedAttributes"`
}

// GlobalClientAddonsSamlpInput is an input type that accepts GlobalClientAddonsSamlpArgs and GlobalClientAddonsSamlpOutput values.
// You can construct a concrete instance of `GlobalClientAddonsSamlpInput` via:
//
//          GlobalClientAddonsSamlpArgs{...}
type GlobalClientAddonsSamlpInput interface {
	pulumi.Input

	ToGlobalClientAddonsSamlpOutput() GlobalClientAddonsSamlpOutput
	ToGlobalClientAddonsSamlpOutputWithContext(context.Context) GlobalClientAddonsSamlpOutput
}

type GlobalClientAddonsSamlpArgs struct {
	Audience                       pulumi.StringPtrInput   `pulumi:"audience"`
	AuthnContextClassRef           pulumi.StringPtrInput   `pulumi:"authnContextClassRef"`
	Binding                        pulumi.StringPtrInput   `pulumi:"binding"`
	CreateUpnClaim                 pulumi.BoolPtrInput     `pulumi:"createUpnClaim"`
	Destination                    pulumi.StringPtrInput   `pulumi:"destination"`
	DigestAlgorithm                pulumi.StringPtrInput   `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     pulumi.BoolPtrInput     `pulumi:"includeAttributeNameFormat"`
	LifetimeInSeconds              pulumi.IntPtrInput      `pulumi:"lifetimeInSeconds"`
	Logout                         pulumi.MapInput         `pulumi:"logout"`
	MapIdentities                  pulumi.BoolPtrInput     `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           pulumi.BoolPtrInput     `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       pulumi.MapInput         `pulumi:"mappings"`
	NameIdentifierFormat           pulumi.StringPtrInput   `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           pulumi.StringArrayInput `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping pulumi.BoolPtrInput     `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      pulumi.StringPtrInput   `pulumi:"recipient"`
	SignResponse                   pulumi.BoolPtrInput     `pulumi:"signResponse"`
	SignatureAlgorithm             pulumi.StringPtrInput   `pulumi:"signatureAlgorithm"`
	SigningCert                    pulumi.StringPtrInput   `pulumi:"signingCert"`
	TypedAttributes                pulumi.BoolPtrInput     `pulumi:"typedAttributes"`
}

func (GlobalClientAddonsSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddonsSamlp)(nil)).Elem()
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpOutput() GlobalClientAddonsSamlpOutput {
	return i.ToGlobalClientAddonsSamlpOutputWithContext(context.Background())
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpOutput)
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return i.ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpOutput).ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx)
}

// GlobalClientAddonsSamlpPtrInput is an input type that accepts GlobalClientAddonsSamlpArgs, GlobalClientAddonsSamlpPtr and GlobalClientAddonsSamlpPtrOutput values.
// You can construct a concrete instance of `GlobalClientAddonsSamlpPtrInput` via:
//
//          GlobalClientAddonsSamlpArgs{...}
//
//  or:
//
//          nil
type GlobalClientAddonsSamlpPtrInput interface {
	pulumi.Input

	ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput
	ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Context) GlobalClientAddonsSamlpPtrOutput
}

type globalClientAddonsSamlpPtrType GlobalClientAddonsSamlpArgs

func GlobalClientAddonsSamlpPtr(v *GlobalClientAddonsSamlpArgs) GlobalClientAddonsSamlpPtrInput {
	return (*globalClientAddonsSamlpPtrType)(v)
}

func (*globalClientAddonsSamlpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddonsSamlp)(nil)).Elem()
}

func (i *globalClientAddonsSamlpPtrType) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return i.ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i *globalClientAddonsSamlpPtrType) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpPtrOutput)
}

type GlobalClientAddonsSamlpOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddonsSamlp)(nil)).Elem()
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpOutput() GlobalClientAddonsSamlpOutput {
	return o
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpOutput {
	return o
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return o.ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientAddonsSamlp) *GlobalClientAddonsSamlp {
		return &v
	}).(GlobalClientAddonsSamlpPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.AuthnContextClassRef }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Binding }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.CreateUpnClaim }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) map[string]interface{} { return v.Logout }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsSamlpOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.MapIdentities }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsSamlpOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.NameIdentifierFormat }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

func (o GlobalClientAddonsSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Recipient }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.SignResponse }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.SigningCert }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.TypedAttributes }).(pulumi.BoolPtrOutput)
}

type GlobalClientAddonsSamlpPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsSamlpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddonsSamlp)(nil)).Elem()
}

func (o GlobalClientAddonsSamlpPtrOutput) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return o
}

func (o GlobalClientAddonsSamlpPtrOutput) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return o
}

func (o GlobalClientAddonsSamlpPtrOutput) Elem() GlobalClientAddonsSamlpOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) GlobalClientAddonsSamlp {
		if v != nil {
			return *v
		}
		var ret GlobalClientAddonsSamlp
		return ret
	}).(GlobalClientAddonsSamlpOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.AuthnContextClassRef
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Binding
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.CreateUpnClaim
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.DigestAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAttributeNameFormat
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Logout
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapIdentities
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapUnknownClaimsAsIs
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierFormat
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) []string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierProbes
	}).(pulumi.StringArrayOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.PassthroughClaimsWithNoMapping
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Recipient
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.SignResponse
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SigningCert
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.TypedAttributes
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientJwtConfiguration struct {
	Alg               *string           `pulumi:"alg"`
	LifetimeInSeconds *int              `pulumi:"lifetimeInSeconds"`
	Scopes            map[string]string `pulumi:"scopes"`
	SecretEncoded     *bool             `pulumi:"secretEncoded"`
}

// GlobalClientJwtConfigurationInput is an input type that accepts GlobalClientJwtConfigurationArgs and GlobalClientJwtConfigurationOutput values.
// You can construct a concrete instance of `GlobalClientJwtConfigurationInput` via:
//
//          GlobalClientJwtConfigurationArgs{...}
type GlobalClientJwtConfigurationInput interface {
	pulumi.Input

	ToGlobalClientJwtConfigurationOutput() GlobalClientJwtConfigurationOutput
	ToGlobalClientJwtConfigurationOutputWithContext(context.Context) GlobalClientJwtConfigurationOutput
}

type GlobalClientJwtConfigurationArgs struct {
	Alg               pulumi.StringPtrInput `pulumi:"alg"`
	LifetimeInSeconds pulumi.IntPtrInput    `pulumi:"lifetimeInSeconds"`
	Scopes            pulumi.StringMapInput `pulumi:"scopes"`
	SecretEncoded     pulumi.BoolPtrInput   `pulumi:"secretEncoded"`
}

func (GlobalClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientJwtConfiguration)(nil)).Elem()
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationOutput() GlobalClientJwtConfigurationOutput {
	return i.ToGlobalClientJwtConfigurationOutputWithContext(context.Background())
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientJwtConfigurationOutput)
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return i.ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientJwtConfigurationOutput).ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx)
}

// GlobalClientJwtConfigurationPtrInput is an input type that accepts GlobalClientJwtConfigurationArgs, GlobalClientJwtConfigurationPtr and GlobalClientJwtConfigurationPtrOutput values.
// You can construct a concrete instance of `GlobalClientJwtConfigurationPtrInput` via:
//
//          GlobalClientJwtConfigurationArgs{...}
//
//  or:
//
//          nil
type GlobalClientJwtConfigurationPtrInput interface {
	pulumi.Input

	ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput
	ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Context) GlobalClientJwtConfigurationPtrOutput
}

type globalClientJwtConfigurationPtrType GlobalClientJwtConfigurationArgs

func GlobalClientJwtConfigurationPtr(v *GlobalClientJwtConfigurationArgs) GlobalClientJwtConfigurationPtrInput {
	return (*globalClientJwtConfigurationPtrType)(v)
}

func (*globalClientJwtConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientJwtConfiguration)(nil)).Elem()
}

func (i *globalClientJwtConfigurationPtrType) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return i.ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i *globalClientJwtConfigurationPtrType) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientJwtConfigurationPtrOutput)
}

type GlobalClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (GlobalClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientJwtConfiguration)(nil)).Elem()
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationOutput() GlobalClientJwtConfigurationOutput {
	return o
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationOutput {
	return o
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return o.ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientJwtConfiguration) *GlobalClientJwtConfiguration {
		return &v
	}).(GlobalClientJwtConfigurationPtrOutput)
}

func (o GlobalClientJwtConfigurationOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) *string { return v.Alg }).(pulumi.StringPtrOutput)
}

func (o GlobalClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

func (o GlobalClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

func (o GlobalClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) *bool { return v.SecretEncoded }).(pulumi.BoolPtrOutput)
}

type GlobalClientJwtConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientJwtConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientJwtConfiguration)(nil)).Elem()
}

func (o GlobalClientJwtConfigurationPtrOutput) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return o
}

func (o GlobalClientJwtConfigurationPtrOutput) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return o
}

func (o GlobalClientJwtConfigurationPtrOutput) Elem() GlobalClientJwtConfigurationOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) GlobalClientJwtConfiguration {
		if v != nil {
			return *v
		}
		var ret GlobalClientJwtConfiguration
		return ret
	}).(GlobalClientJwtConfigurationOutput)
}

func (o GlobalClientJwtConfigurationPtrOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Alg
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientJwtConfigurationPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o GlobalClientJwtConfigurationPtrOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringMapOutput)
}

func (o GlobalClientJwtConfigurationPtrOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.SecretEncoded
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientMobile struct {
	Android *GlobalClientMobileAndroid `pulumi:"android"`
	Ios     *GlobalClientMobileIos     `pulumi:"ios"`
}

// GlobalClientMobileInput is an input type that accepts GlobalClientMobileArgs and GlobalClientMobileOutput values.
// You can construct a concrete instance of `GlobalClientMobileInput` via:
//
//          GlobalClientMobileArgs{...}
type GlobalClientMobileInput interface {
	pulumi.Input

	ToGlobalClientMobileOutput() GlobalClientMobileOutput
	ToGlobalClientMobileOutputWithContext(context.Context) GlobalClientMobileOutput
}

type GlobalClientMobileArgs struct {
	Android GlobalClientMobileAndroidPtrInput `pulumi:"android"`
	Ios     GlobalClientMobileIosPtrInput     `pulumi:"ios"`
}

func (GlobalClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobile)(nil)).Elem()
}

func (i GlobalClientMobileArgs) ToGlobalClientMobileOutput() GlobalClientMobileOutput {
	return i.ToGlobalClientMobileOutputWithContext(context.Background())
}

func (i GlobalClientMobileArgs) ToGlobalClientMobileOutputWithContext(ctx context.Context) GlobalClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileOutput)
}

func (i GlobalClientMobileArgs) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return i.ToGlobalClientMobilePtrOutputWithContext(context.Background())
}

func (i GlobalClientMobileArgs) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileOutput).ToGlobalClientMobilePtrOutputWithContext(ctx)
}

// GlobalClientMobilePtrInput is an input type that accepts GlobalClientMobileArgs, GlobalClientMobilePtr and GlobalClientMobilePtrOutput values.
// You can construct a concrete instance of `GlobalClientMobilePtrInput` via:
//
//          GlobalClientMobileArgs{...}
//
//  or:
//
//          nil
type GlobalClientMobilePtrInput interface {
	pulumi.Input

	ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput
	ToGlobalClientMobilePtrOutputWithContext(context.Context) GlobalClientMobilePtrOutput
}

type globalClientMobilePtrType GlobalClientMobileArgs

func GlobalClientMobilePtr(v *GlobalClientMobileArgs) GlobalClientMobilePtrInput {
	return (*globalClientMobilePtrType)(v)
}

func (*globalClientMobilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobile)(nil)).Elem()
}

func (i *globalClientMobilePtrType) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return i.ToGlobalClientMobilePtrOutputWithContext(context.Background())
}

func (i *globalClientMobilePtrType) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobilePtrOutput)
}

type GlobalClientMobileOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobile)(nil)).Elem()
}

func (o GlobalClientMobileOutput) ToGlobalClientMobileOutput() GlobalClientMobileOutput {
	return o
}

func (o GlobalClientMobileOutput) ToGlobalClientMobileOutputWithContext(ctx context.Context) GlobalClientMobileOutput {
	return o
}

func (o GlobalClientMobileOutput) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return o.ToGlobalClientMobilePtrOutputWithContext(context.Background())
}

func (o GlobalClientMobileOutput) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientMobile) *GlobalClientMobile {
		return &v
	}).(GlobalClientMobilePtrOutput)
}

func (o GlobalClientMobileOutput) Android() GlobalClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v GlobalClientMobile) *GlobalClientMobileAndroid { return v.Android }).(GlobalClientMobileAndroidPtrOutput)
}

func (o GlobalClientMobileOutput) Ios() GlobalClientMobileIosPtrOutput {
	return o.ApplyT(func(v GlobalClientMobile) *GlobalClientMobileIos { return v.Ios }).(GlobalClientMobileIosPtrOutput)
}

type GlobalClientMobilePtrOutput struct{ *pulumi.OutputState }

func (GlobalClientMobilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobile)(nil)).Elem()
}

func (o GlobalClientMobilePtrOutput) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return o
}

func (o GlobalClientMobilePtrOutput) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return o
}

func (o GlobalClientMobilePtrOutput) Elem() GlobalClientMobileOutput {
	return o.ApplyT(func(v *GlobalClientMobile) GlobalClientMobile {
		if v != nil {
			return *v
		}
		var ret GlobalClientMobile
		return ret
	}).(GlobalClientMobileOutput)
}

func (o GlobalClientMobilePtrOutput) Android() GlobalClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobile) *GlobalClientMobileAndroid {
		if v == nil {
			return nil
		}
		return v.Android
	}).(GlobalClientMobileAndroidPtrOutput)
}

func (o GlobalClientMobilePtrOutput) Ios() GlobalClientMobileIosPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobile) *GlobalClientMobileIos {
		if v == nil {
			return nil
		}
		return v.Ios
	}).(GlobalClientMobileIosPtrOutput)
}

type GlobalClientMobileAndroid struct {
	AppPackageName         *string  `pulumi:"appPackageName"`
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// GlobalClientMobileAndroidInput is an input type that accepts GlobalClientMobileAndroidArgs and GlobalClientMobileAndroidOutput values.
// You can construct a concrete instance of `GlobalClientMobileAndroidInput` via:
//
//          GlobalClientMobileAndroidArgs{...}
type GlobalClientMobileAndroidInput interface {
	pulumi.Input

	ToGlobalClientMobileAndroidOutput() GlobalClientMobileAndroidOutput
	ToGlobalClientMobileAndroidOutputWithContext(context.Context) GlobalClientMobileAndroidOutput
}

type GlobalClientMobileAndroidArgs struct {
	AppPackageName         pulumi.StringPtrInput   `pulumi:"appPackageName"`
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (GlobalClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileAndroid)(nil)).Elem()
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidOutput() GlobalClientMobileAndroidOutput {
	return i.ToGlobalClientMobileAndroidOutputWithContext(context.Background())
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidOutputWithContext(ctx context.Context) GlobalClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileAndroidOutput)
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return i.ToGlobalClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileAndroidOutput).ToGlobalClientMobileAndroidPtrOutputWithContext(ctx)
}

// GlobalClientMobileAndroidPtrInput is an input type that accepts GlobalClientMobileAndroidArgs, GlobalClientMobileAndroidPtr and GlobalClientMobileAndroidPtrOutput values.
// You can construct a concrete instance of `GlobalClientMobileAndroidPtrInput` via:
//
//          GlobalClientMobileAndroidArgs{...}
//
//  or:
//
//          nil
type GlobalClientMobileAndroidPtrInput interface {
	pulumi.Input

	ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput
	ToGlobalClientMobileAndroidPtrOutputWithContext(context.Context) GlobalClientMobileAndroidPtrOutput
}

type globalClientMobileAndroidPtrType GlobalClientMobileAndroidArgs

func GlobalClientMobileAndroidPtr(v *GlobalClientMobileAndroidArgs) GlobalClientMobileAndroidPtrInput {
	return (*globalClientMobileAndroidPtrType)(v)
}

func (*globalClientMobileAndroidPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileAndroid)(nil)).Elem()
}

func (i *globalClientMobileAndroidPtrType) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return i.ToGlobalClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i *globalClientMobileAndroidPtrType) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileAndroidPtrOutput)
}

type GlobalClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileAndroid)(nil)).Elem()
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidOutput() GlobalClientMobileAndroidOutput {
	return o
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidOutputWithContext(ctx context.Context) GlobalClientMobileAndroidOutput {
	return o
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return o.ToGlobalClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientMobileAndroid) *GlobalClientMobileAndroid {
		return &v
	}).(GlobalClientMobileAndroidPtrOutput)
}

func (o GlobalClientMobileAndroidOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileAndroid) *string { return v.AppPackageName }).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GlobalClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type GlobalClientMobileAndroidPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileAndroidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileAndroid)(nil)).Elem()
}

func (o GlobalClientMobileAndroidPtrOutput) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return o
}

func (o GlobalClientMobileAndroidPtrOutput) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return o
}

func (o GlobalClientMobileAndroidPtrOutput) Elem() GlobalClientMobileAndroidOutput {
	return o.ApplyT(func(v *GlobalClientMobileAndroid) GlobalClientMobileAndroid {
		if v != nil {
			return *v
		}
		var ret GlobalClientMobileAndroid
		return ret
	}).(GlobalClientMobileAndroidOutput)
}

func (o GlobalClientMobileAndroidPtrOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobileAndroid) *string {
		if v == nil {
			return nil
		}
		return v.AppPackageName
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileAndroidPtrOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GlobalClientMobileAndroid) []string {
		if v == nil {
			return nil
		}
		return v.Sha256CertFingerprints
	}).(pulumi.StringArrayOutput)
}

type GlobalClientMobileIos struct {
	AppBundleIdentifier *string `pulumi:"appBundleIdentifier"`
	TeamId              *string `pulumi:"teamId"`
}

// GlobalClientMobileIosInput is an input type that accepts GlobalClientMobileIosArgs and GlobalClientMobileIosOutput values.
// You can construct a concrete instance of `GlobalClientMobileIosInput` via:
//
//          GlobalClientMobileIosArgs{...}
type GlobalClientMobileIosInput interface {
	pulumi.Input

	ToGlobalClientMobileIosOutput() GlobalClientMobileIosOutput
	ToGlobalClientMobileIosOutputWithContext(context.Context) GlobalClientMobileIosOutput
}

type GlobalClientMobileIosArgs struct {
	AppBundleIdentifier pulumi.StringPtrInput `pulumi:"appBundleIdentifier"`
	TeamId              pulumi.StringPtrInput `pulumi:"teamId"`
}

func (GlobalClientMobileIosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileIos)(nil)).Elem()
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosOutput() GlobalClientMobileIosOutput {
	return i.ToGlobalClientMobileIosOutputWithContext(context.Background())
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosOutputWithContext(ctx context.Context) GlobalClientMobileIosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileIosOutput)
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return i.ToGlobalClientMobileIosPtrOutputWithContext(context.Background())
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileIosOutput).ToGlobalClientMobileIosPtrOutputWithContext(ctx)
}

// GlobalClientMobileIosPtrInput is an input type that accepts GlobalClientMobileIosArgs, GlobalClientMobileIosPtr and GlobalClientMobileIosPtrOutput values.
// You can construct a concrete instance of `GlobalClientMobileIosPtrInput` via:
//
//          GlobalClientMobileIosArgs{...}
//
//  or:
//
//          nil
type GlobalClientMobileIosPtrInput interface {
	pulumi.Input

	ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput
	ToGlobalClientMobileIosPtrOutputWithContext(context.Context) GlobalClientMobileIosPtrOutput
}

type globalClientMobileIosPtrType GlobalClientMobileIosArgs

func GlobalClientMobileIosPtr(v *GlobalClientMobileIosArgs) GlobalClientMobileIosPtrInput {
	return (*globalClientMobileIosPtrType)(v)
}

func (*globalClientMobileIosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileIos)(nil)).Elem()
}

func (i *globalClientMobileIosPtrType) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return i.ToGlobalClientMobileIosPtrOutputWithContext(context.Background())
}

func (i *globalClientMobileIosPtrType) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileIosPtrOutput)
}

type GlobalClientMobileIosOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileIosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileIos)(nil)).Elem()
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosOutput() GlobalClientMobileIosOutput {
	return o
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosOutputWithContext(ctx context.Context) GlobalClientMobileIosOutput {
	return o
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return o.ToGlobalClientMobileIosPtrOutputWithContext(context.Background())
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientMobileIos) *GlobalClientMobileIos {
		return &v
	}).(GlobalClientMobileIosPtrOutput)
}

func (o GlobalClientMobileIosOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileIos) *string { return v.AppBundleIdentifier }).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileIosOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileIos) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

type GlobalClientMobileIosPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileIosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileIos)(nil)).Elem()
}

func (o GlobalClientMobileIosPtrOutput) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return o
}

func (o GlobalClientMobileIosPtrOutput) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return o
}

func (o GlobalClientMobileIosPtrOutput) Elem() GlobalClientMobileIosOutput {
	return o.ApplyT(func(v *GlobalClientMobileIos) GlobalClientMobileIos {
		if v != nil {
			return *v
		}
		var ret GlobalClientMobileIos
		return ret
	}).(GlobalClientMobileIosOutput)
}

func (o GlobalClientMobileIosPtrOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.AppBundleIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileIosPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

type GlobalClientNativeSocialLogin struct {
	Apple    *GlobalClientNativeSocialLoginApple    `pulumi:"apple"`
	Facebook *GlobalClientNativeSocialLoginFacebook `pulumi:"facebook"`
}

// GlobalClientNativeSocialLoginInput is an input type that accepts GlobalClientNativeSocialLoginArgs and GlobalClientNativeSocialLoginOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginInput` via:
//
//          GlobalClientNativeSocialLoginArgs{...}
type GlobalClientNativeSocialLoginInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginOutput() GlobalClientNativeSocialLoginOutput
	ToGlobalClientNativeSocialLoginOutputWithContext(context.Context) GlobalClientNativeSocialLoginOutput
}

type GlobalClientNativeSocialLoginArgs struct {
	Apple    GlobalClientNativeSocialLoginApplePtrInput    `pulumi:"apple"`
	Facebook GlobalClientNativeSocialLoginFacebookPtrInput `pulumi:"facebook"`
}

func (GlobalClientNativeSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLogin)(nil)).Elem()
}

func (i GlobalClientNativeSocialLoginArgs) ToGlobalClientNativeSocialLoginOutput() GlobalClientNativeSocialLoginOutput {
	return i.ToGlobalClientNativeSocialLoginOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginArgs) ToGlobalClientNativeSocialLoginOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginOutput)
}

func (i GlobalClientNativeSocialLoginArgs) ToGlobalClientNativeSocialLoginPtrOutput() GlobalClientNativeSocialLoginPtrOutput {
	return i.ToGlobalClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginArgs) ToGlobalClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginOutput).ToGlobalClientNativeSocialLoginPtrOutputWithContext(ctx)
}

// GlobalClientNativeSocialLoginPtrInput is an input type that accepts GlobalClientNativeSocialLoginArgs, GlobalClientNativeSocialLoginPtr and GlobalClientNativeSocialLoginPtrOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginPtrInput` via:
//
//          GlobalClientNativeSocialLoginArgs{...}
//
//  or:
//
//          nil
type GlobalClientNativeSocialLoginPtrInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginPtrOutput() GlobalClientNativeSocialLoginPtrOutput
	ToGlobalClientNativeSocialLoginPtrOutputWithContext(context.Context) GlobalClientNativeSocialLoginPtrOutput
}

type globalClientNativeSocialLoginPtrType GlobalClientNativeSocialLoginArgs

func GlobalClientNativeSocialLoginPtr(v *GlobalClientNativeSocialLoginArgs) GlobalClientNativeSocialLoginPtrInput {
	return (*globalClientNativeSocialLoginPtrType)(v)
}

func (*globalClientNativeSocialLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLogin)(nil)).Elem()
}

func (i *globalClientNativeSocialLoginPtrType) ToGlobalClientNativeSocialLoginPtrOutput() GlobalClientNativeSocialLoginPtrOutput {
	return i.ToGlobalClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (i *globalClientNativeSocialLoginPtrType) ToGlobalClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginPtrOutput)
}

type GlobalClientNativeSocialLoginOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLogin)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginOutput) ToGlobalClientNativeSocialLoginOutput() GlobalClientNativeSocialLoginOutput {
	return o
}

func (o GlobalClientNativeSocialLoginOutput) ToGlobalClientNativeSocialLoginOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginOutput {
	return o
}

func (o GlobalClientNativeSocialLoginOutput) ToGlobalClientNativeSocialLoginPtrOutput() GlobalClientNativeSocialLoginPtrOutput {
	return o.ToGlobalClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (o GlobalClientNativeSocialLoginOutput) ToGlobalClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientNativeSocialLogin) *GlobalClientNativeSocialLogin {
		return &v
	}).(GlobalClientNativeSocialLoginPtrOutput)
}

func (o GlobalClientNativeSocialLoginOutput) Apple() GlobalClientNativeSocialLoginApplePtrOutput {
	return o.ApplyT(func(v GlobalClientNativeSocialLogin) *GlobalClientNativeSocialLoginApple { return v.Apple }).(GlobalClientNativeSocialLoginApplePtrOutput)
}

func (o GlobalClientNativeSocialLoginOutput) Facebook() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyT(func(v GlobalClientNativeSocialLogin) *GlobalClientNativeSocialLoginFacebook { return v.Facebook }).(GlobalClientNativeSocialLoginFacebookPtrOutput)
}

type GlobalClientNativeSocialLoginPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLogin)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginPtrOutput) ToGlobalClientNativeSocialLoginPtrOutput() GlobalClientNativeSocialLoginPtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginPtrOutput) ToGlobalClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginPtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginPtrOutput) Elem() GlobalClientNativeSocialLoginOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLogin) GlobalClientNativeSocialLogin {
		if v != nil {
			return *v
		}
		var ret GlobalClientNativeSocialLogin
		return ret
	}).(GlobalClientNativeSocialLoginOutput)
}

func (o GlobalClientNativeSocialLoginPtrOutput) Apple() GlobalClientNativeSocialLoginApplePtrOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLogin) *GlobalClientNativeSocialLoginApple {
		if v == nil {
			return nil
		}
		return v.Apple
	}).(GlobalClientNativeSocialLoginApplePtrOutput)
}

func (o GlobalClientNativeSocialLoginPtrOutput) Facebook() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLogin) *GlobalClientNativeSocialLoginFacebook {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(GlobalClientNativeSocialLoginFacebookPtrOutput)
}

type GlobalClientNativeSocialLoginApple struct {
	Enabled *bool `pulumi:"enabled"`
}

// GlobalClientNativeSocialLoginAppleInput is an input type that accepts GlobalClientNativeSocialLoginAppleArgs and GlobalClientNativeSocialLoginAppleOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginAppleInput` via:
//
//          GlobalClientNativeSocialLoginAppleArgs{...}
type GlobalClientNativeSocialLoginAppleInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginAppleOutput() GlobalClientNativeSocialLoginAppleOutput
	ToGlobalClientNativeSocialLoginAppleOutputWithContext(context.Context) GlobalClientNativeSocialLoginAppleOutput
}

type GlobalClientNativeSocialLoginAppleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (GlobalClientNativeSocialLoginAppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GlobalClientNativeSocialLoginAppleArgs) ToGlobalClientNativeSocialLoginAppleOutput() GlobalClientNativeSocialLoginAppleOutput {
	return i.ToGlobalClientNativeSocialLoginAppleOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginAppleArgs) ToGlobalClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginAppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginAppleOutput)
}

func (i GlobalClientNativeSocialLoginAppleArgs) ToGlobalClientNativeSocialLoginApplePtrOutput() GlobalClientNativeSocialLoginApplePtrOutput {
	return i.ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginAppleArgs) ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginAppleOutput).ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(ctx)
}

// GlobalClientNativeSocialLoginApplePtrInput is an input type that accepts GlobalClientNativeSocialLoginAppleArgs, GlobalClientNativeSocialLoginApplePtr and GlobalClientNativeSocialLoginApplePtrOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginApplePtrInput` via:
//
//          GlobalClientNativeSocialLoginAppleArgs{...}
//
//  or:
//
//          nil
type GlobalClientNativeSocialLoginApplePtrInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginApplePtrOutput() GlobalClientNativeSocialLoginApplePtrOutput
	ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(context.Context) GlobalClientNativeSocialLoginApplePtrOutput
}

type globalClientNativeSocialLoginApplePtrType GlobalClientNativeSocialLoginAppleArgs

func GlobalClientNativeSocialLoginApplePtr(v *GlobalClientNativeSocialLoginAppleArgs) GlobalClientNativeSocialLoginApplePtrInput {
	return (*globalClientNativeSocialLoginApplePtrType)(v)
}

func (*globalClientNativeSocialLoginApplePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (i *globalClientNativeSocialLoginApplePtrType) ToGlobalClientNativeSocialLoginApplePtrOutput() GlobalClientNativeSocialLoginApplePtrOutput {
	return i.ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (i *globalClientNativeSocialLoginApplePtrType) ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginApplePtrOutput)
}

type GlobalClientNativeSocialLoginAppleOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginAppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginAppleOutput) ToGlobalClientNativeSocialLoginAppleOutput() GlobalClientNativeSocialLoginAppleOutput {
	return o
}

func (o GlobalClientNativeSocialLoginAppleOutput) ToGlobalClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginAppleOutput {
	return o
}

func (o GlobalClientNativeSocialLoginAppleOutput) ToGlobalClientNativeSocialLoginApplePtrOutput() GlobalClientNativeSocialLoginApplePtrOutput {
	return o.ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (o GlobalClientNativeSocialLoginAppleOutput) ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginApplePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientNativeSocialLoginApple) *GlobalClientNativeSocialLoginApple {
		return &v
	}).(GlobalClientNativeSocialLoginApplePtrOutput)
}

func (o GlobalClientNativeSocialLoginAppleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientNativeSocialLoginApple) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type GlobalClientNativeSocialLoginApplePtrOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginApplePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginApplePtrOutput) ToGlobalClientNativeSocialLoginApplePtrOutput() GlobalClientNativeSocialLoginApplePtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginApplePtrOutput) ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginApplePtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginApplePtrOutput) Elem() GlobalClientNativeSocialLoginAppleOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLoginApple) GlobalClientNativeSocialLoginApple {
		if v != nil {
			return *v
		}
		var ret GlobalClientNativeSocialLoginApple
		return ret
	}).(GlobalClientNativeSocialLoginAppleOutput)
}

func (o GlobalClientNativeSocialLoginApplePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLoginApple) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientNativeSocialLoginFacebook struct {
	Enabled *bool `pulumi:"enabled"`
}

// GlobalClientNativeSocialLoginFacebookInput is an input type that accepts GlobalClientNativeSocialLoginFacebookArgs and GlobalClientNativeSocialLoginFacebookOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginFacebookInput` via:
//
//          GlobalClientNativeSocialLoginFacebookArgs{...}
type GlobalClientNativeSocialLoginFacebookInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginFacebookOutput() GlobalClientNativeSocialLoginFacebookOutput
	ToGlobalClientNativeSocialLoginFacebookOutputWithContext(context.Context) GlobalClientNativeSocialLoginFacebookOutput
}

type GlobalClientNativeSocialLoginFacebookArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (GlobalClientNativeSocialLoginFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GlobalClientNativeSocialLoginFacebookArgs) ToGlobalClientNativeSocialLoginFacebookOutput() GlobalClientNativeSocialLoginFacebookOutput {
	return i.ToGlobalClientNativeSocialLoginFacebookOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginFacebookArgs) ToGlobalClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginFacebookOutput)
}

func (i GlobalClientNativeSocialLoginFacebookArgs) ToGlobalClientNativeSocialLoginFacebookPtrOutput() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return i.ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginFacebookArgs) ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginFacebookOutput).ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(ctx)
}

// GlobalClientNativeSocialLoginFacebookPtrInput is an input type that accepts GlobalClientNativeSocialLoginFacebookArgs, GlobalClientNativeSocialLoginFacebookPtr and GlobalClientNativeSocialLoginFacebookPtrOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginFacebookPtrInput` via:
//
//          GlobalClientNativeSocialLoginFacebookArgs{...}
//
//  or:
//
//          nil
type GlobalClientNativeSocialLoginFacebookPtrInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginFacebookPtrOutput() GlobalClientNativeSocialLoginFacebookPtrOutput
	ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(context.Context) GlobalClientNativeSocialLoginFacebookPtrOutput
}

type globalClientNativeSocialLoginFacebookPtrType GlobalClientNativeSocialLoginFacebookArgs

func GlobalClientNativeSocialLoginFacebookPtr(v *GlobalClientNativeSocialLoginFacebookArgs) GlobalClientNativeSocialLoginFacebookPtrInput {
	return (*globalClientNativeSocialLoginFacebookPtrType)(v)
}

func (*globalClientNativeSocialLoginFacebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i *globalClientNativeSocialLoginFacebookPtrType) ToGlobalClientNativeSocialLoginFacebookPtrOutput() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return i.ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (i *globalClientNativeSocialLoginFacebookPtrType) ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginFacebookPtrOutput)
}

type GlobalClientNativeSocialLoginFacebookOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginFacebookOutput) ToGlobalClientNativeSocialLoginFacebookOutput() GlobalClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GlobalClientNativeSocialLoginFacebookOutput) ToGlobalClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GlobalClientNativeSocialLoginFacebookOutput) ToGlobalClientNativeSocialLoginFacebookPtrOutput() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o.ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (o GlobalClientNativeSocialLoginFacebookOutput) ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientNativeSocialLoginFacebook) *GlobalClientNativeSocialLoginFacebook {
		return &v
	}).(GlobalClientNativeSocialLoginFacebookPtrOutput)
}

func (o GlobalClientNativeSocialLoginFacebookOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientNativeSocialLoginFacebook) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type GlobalClientNativeSocialLoginFacebookPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginFacebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginFacebookPtrOutput) ToGlobalClientNativeSocialLoginFacebookPtrOutput() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginFacebookPtrOutput) ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginFacebookPtrOutput) Elem() GlobalClientNativeSocialLoginFacebookOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLoginFacebook) GlobalClientNativeSocialLoginFacebook {
		if v != nil {
			return *v
		}
		var ret GlobalClientNativeSocialLoginFacebook
		return ret
	}).(GlobalClientNativeSocialLoginFacebookOutput)
}

func (o GlobalClientNativeSocialLoginFacebookPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLoginFacebook) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientRefreshToken struct {
	ExpirationType            string `pulumi:"expirationType"`
	IdleTokenLifetime         *int   `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime *bool  `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     *bool  `pulumi:"infiniteTokenLifetime"`
	Leeway                    *int   `pulumi:"leeway"`
	RotationType              string `pulumi:"rotationType"`
	TokenLifetime             *int   `pulumi:"tokenLifetime"`
}

// GlobalClientRefreshTokenInput is an input type that accepts GlobalClientRefreshTokenArgs and GlobalClientRefreshTokenOutput values.
// You can construct a concrete instance of `GlobalClientRefreshTokenInput` via:
//
//          GlobalClientRefreshTokenArgs{...}
type GlobalClientRefreshTokenInput interface {
	pulumi.Input

	ToGlobalClientRefreshTokenOutput() GlobalClientRefreshTokenOutput
	ToGlobalClientRefreshTokenOutputWithContext(context.Context) GlobalClientRefreshTokenOutput
}

type GlobalClientRefreshTokenArgs struct {
	ExpirationType            pulumi.StringInput  `pulumi:"expirationType"`
	IdleTokenLifetime         pulumi.IntPtrInput  `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime pulumi.BoolPtrInput `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     pulumi.BoolPtrInput `pulumi:"infiniteTokenLifetime"`
	Leeway                    pulumi.IntPtrInput  `pulumi:"leeway"`
	RotationType              pulumi.StringInput  `pulumi:"rotationType"`
	TokenLifetime             pulumi.IntPtrInput  `pulumi:"tokenLifetime"`
}

func (GlobalClientRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientRefreshToken)(nil)).Elem()
}

func (i GlobalClientRefreshTokenArgs) ToGlobalClientRefreshTokenOutput() GlobalClientRefreshTokenOutput {
	return i.ToGlobalClientRefreshTokenOutputWithContext(context.Background())
}

func (i GlobalClientRefreshTokenArgs) ToGlobalClientRefreshTokenOutputWithContext(ctx context.Context) GlobalClientRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientRefreshTokenOutput)
}

func (i GlobalClientRefreshTokenArgs) ToGlobalClientRefreshTokenPtrOutput() GlobalClientRefreshTokenPtrOutput {
	return i.ToGlobalClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (i GlobalClientRefreshTokenArgs) ToGlobalClientRefreshTokenPtrOutputWithContext(ctx context.Context) GlobalClientRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientRefreshTokenOutput).ToGlobalClientRefreshTokenPtrOutputWithContext(ctx)
}

// GlobalClientRefreshTokenPtrInput is an input type that accepts GlobalClientRefreshTokenArgs, GlobalClientRefreshTokenPtr and GlobalClientRefreshTokenPtrOutput values.
// You can construct a concrete instance of `GlobalClientRefreshTokenPtrInput` via:
//
//          GlobalClientRefreshTokenArgs{...}
//
//  or:
//
//          nil
type GlobalClientRefreshTokenPtrInput interface {
	pulumi.Input

	ToGlobalClientRefreshTokenPtrOutput() GlobalClientRefreshTokenPtrOutput
	ToGlobalClientRefreshTokenPtrOutputWithContext(context.Context) GlobalClientRefreshTokenPtrOutput
}

type globalClientRefreshTokenPtrType GlobalClientRefreshTokenArgs

func GlobalClientRefreshTokenPtr(v *GlobalClientRefreshTokenArgs) GlobalClientRefreshTokenPtrInput {
	return (*globalClientRefreshTokenPtrType)(v)
}

func (*globalClientRefreshTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientRefreshToken)(nil)).Elem()
}

func (i *globalClientRefreshTokenPtrType) ToGlobalClientRefreshTokenPtrOutput() GlobalClientRefreshTokenPtrOutput {
	return i.ToGlobalClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (i *globalClientRefreshTokenPtrType) ToGlobalClientRefreshTokenPtrOutputWithContext(ctx context.Context) GlobalClientRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientRefreshTokenPtrOutput)
}

type GlobalClientRefreshTokenOutput struct{ *pulumi.OutputState }

func (GlobalClientRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientRefreshToken)(nil)).Elem()
}

func (o GlobalClientRefreshTokenOutput) ToGlobalClientRefreshTokenOutput() GlobalClientRefreshTokenOutput {
	return o
}

func (o GlobalClientRefreshTokenOutput) ToGlobalClientRefreshTokenOutputWithContext(ctx context.Context) GlobalClientRefreshTokenOutput {
	return o
}

func (o GlobalClientRefreshTokenOutput) ToGlobalClientRefreshTokenPtrOutput() GlobalClientRefreshTokenPtrOutput {
	return o.ToGlobalClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (o GlobalClientRefreshTokenOutput) ToGlobalClientRefreshTokenPtrOutputWithContext(ctx context.Context) GlobalClientRefreshTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientRefreshToken) *GlobalClientRefreshToken {
		return &v
	}).(GlobalClientRefreshTokenPtrOutput)
}

func (o GlobalClientRefreshTokenOutput) ExpirationType() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) string { return v.ExpirationType }).(pulumi.StringOutput)
}

func (o GlobalClientRefreshTokenOutput) IdleTokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) *int { return v.IdleTokenLifetime }).(pulumi.IntPtrOutput)
}

func (o GlobalClientRefreshTokenOutput) InfiniteIdleTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) *bool { return v.InfiniteIdleTokenLifetime }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientRefreshTokenOutput) InfiniteTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) *bool { return v.InfiniteTokenLifetime }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientRefreshTokenOutput) Leeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) *int { return v.Leeway }).(pulumi.IntPtrOutput)
}

func (o GlobalClientRefreshTokenOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) string { return v.RotationType }).(pulumi.StringOutput)
}

func (o GlobalClientRefreshTokenOutput) TokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) *int { return v.TokenLifetime }).(pulumi.IntPtrOutput)
}

type GlobalClientRefreshTokenPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientRefreshTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientRefreshToken)(nil)).Elem()
}

func (o GlobalClientRefreshTokenPtrOutput) ToGlobalClientRefreshTokenPtrOutput() GlobalClientRefreshTokenPtrOutput {
	return o
}

func (o GlobalClientRefreshTokenPtrOutput) ToGlobalClientRefreshTokenPtrOutputWithContext(ctx context.Context) GlobalClientRefreshTokenPtrOutput {
	return o
}

func (o GlobalClientRefreshTokenPtrOutput) Elem() GlobalClientRefreshTokenOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) GlobalClientRefreshToken {
		if v != nil {
			return *v
		}
		var ret GlobalClientRefreshToken
		return ret
	}).(GlobalClientRefreshTokenOutput)
}

func (o GlobalClientRefreshTokenPtrOutput) ExpirationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationType
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientRefreshTokenPtrOutput) IdleTokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.IdleTokenLifetime
	}).(pulumi.IntPtrOutput)
}

func (o GlobalClientRefreshTokenPtrOutput) InfiniteIdleTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *bool {
		if v == nil {
			return nil
		}
		return v.InfiniteIdleTokenLifetime
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientRefreshTokenPtrOutput) InfiniteTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *bool {
		if v == nil {
			return nil
		}
		return v.InfiniteTokenLifetime
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientRefreshTokenPtrOutput) Leeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.Leeway
	}).(pulumi.IntPtrOutput)
}

func (o GlobalClientRefreshTokenPtrOutput) RotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.RotationType
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientRefreshTokenPtrOutput) TokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.TokenLifetime
	}).(pulumi.IntPtrOutput)
}

type GuardianPhone struct {
	// List(String). Message types to use, array of `sms` and or `voice`. Adding both to array should enable the user to choose.
	MessageTypes []string `pulumi:"messageTypes"`
	// List(Resource). Options for the various providers. See Options.
	Options *GuardianPhoneOptions `pulumi:"options"`
	// String, Case-sensitive. Provider to use, one of `auth0`, `twilio` or `phone-message-hook`.
	Provider string `pulumi:"provider"`
}

// GuardianPhoneInput is an input type that accepts GuardianPhoneArgs and GuardianPhoneOutput values.
// You can construct a concrete instance of `GuardianPhoneInput` via:
//
//          GuardianPhoneArgs{...}
type GuardianPhoneInput interface {
	pulumi.Input

	ToGuardianPhoneOutput() GuardianPhoneOutput
	ToGuardianPhoneOutputWithContext(context.Context) GuardianPhoneOutput
}

type GuardianPhoneArgs struct {
	// List(String). Message types to use, array of `sms` and or `voice`. Adding both to array should enable the user to choose.
	MessageTypes pulumi.StringArrayInput `pulumi:"messageTypes"`
	// List(Resource). Options for the various providers. See Options.
	Options GuardianPhoneOptionsPtrInput `pulumi:"options"`
	// String, Case-sensitive. Provider to use, one of `auth0`, `twilio` or `phone-message-hook`.
	Provider pulumi.StringInput `pulumi:"provider"`
}

func (GuardianPhoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhone)(nil)).Elem()
}

func (i GuardianPhoneArgs) ToGuardianPhoneOutput() GuardianPhoneOutput {
	return i.ToGuardianPhoneOutputWithContext(context.Background())
}

func (i GuardianPhoneArgs) ToGuardianPhoneOutputWithContext(ctx context.Context) GuardianPhoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOutput)
}

func (i GuardianPhoneArgs) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return i.ToGuardianPhonePtrOutputWithContext(context.Background())
}

func (i GuardianPhoneArgs) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOutput).ToGuardianPhonePtrOutputWithContext(ctx)
}

// GuardianPhonePtrInput is an input type that accepts GuardianPhoneArgs, GuardianPhonePtr and GuardianPhonePtrOutput values.
// You can construct a concrete instance of `GuardianPhonePtrInput` via:
//
//          GuardianPhoneArgs{...}
//
//  or:
//
//          nil
type GuardianPhonePtrInput interface {
	pulumi.Input

	ToGuardianPhonePtrOutput() GuardianPhonePtrOutput
	ToGuardianPhonePtrOutputWithContext(context.Context) GuardianPhonePtrOutput
}

type guardianPhonePtrType GuardianPhoneArgs

func GuardianPhonePtr(v *GuardianPhoneArgs) GuardianPhonePtrInput {
	return (*guardianPhonePtrType)(v)
}

func (*guardianPhonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhone)(nil)).Elem()
}

func (i *guardianPhonePtrType) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return i.ToGuardianPhonePtrOutputWithContext(context.Background())
}

func (i *guardianPhonePtrType) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhonePtrOutput)
}

type GuardianPhoneOutput struct{ *pulumi.OutputState }

func (GuardianPhoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhone)(nil)).Elem()
}

func (o GuardianPhoneOutput) ToGuardianPhoneOutput() GuardianPhoneOutput {
	return o
}

func (o GuardianPhoneOutput) ToGuardianPhoneOutputWithContext(ctx context.Context) GuardianPhoneOutput {
	return o
}

func (o GuardianPhoneOutput) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return o.ToGuardianPhonePtrOutputWithContext(context.Background())
}

func (o GuardianPhoneOutput) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPhone) *GuardianPhone {
		return &v
	}).(GuardianPhonePtrOutput)
}

// List(String). Message types to use, array of `sms` and or `voice`. Adding both to array should enable the user to choose.
func (o GuardianPhoneOutput) MessageTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuardianPhone) []string { return v.MessageTypes }).(pulumi.StringArrayOutput)
}

// List(Resource). Options for the various providers. See Options.
func (o GuardianPhoneOutput) Options() GuardianPhoneOptionsPtrOutput {
	return o.ApplyT(func(v GuardianPhone) *GuardianPhoneOptions { return v.Options }).(GuardianPhoneOptionsPtrOutput)
}

// String, Case-sensitive. Provider to use, one of `auth0`, `twilio` or `phone-message-hook`.
func (o GuardianPhoneOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPhone) string { return v.Provider }).(pulumi.StringOutput)
}

type GuardianPhonePtrOutput struct{ *pulumi.OutputState }

func (GuardianPhonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhone)(nil)).Elem()
}

func (o GuardianPhonePtrOutput) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return o
}

func (o GuardianPhonePtrOutput) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return o
}

func (o GuardianPhonePtrOutput) Elem() GuardianPhoneOutput {
	return o.ApplyT(func(v *GuardianPhone) GuardianPhone {
		if v != nil {
			return *v
		}
		var ret GuardianPhone
		return ret
	}).(GuardianPhoneOutput)
}

// List(String). Message types to use, array of `sms` and or `voice`. Adding both to array should enable the user to choose.
func (o GuardianPhonePtrOutput) MessageTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuardianPhone) []string {
		if v == nil {
			return nil
		}
		return v.MessageTypes
	}).(pulumi.StringArrayOutput)
}

// List(Resource). Options for the various providers. See Options.
func (o GuardianPhonePtrOutput) Options() GuardianPhoneOptionsPtrOutput {
	return o.ApplyT(func(v *GuardianPhone) *GuardianPhoneOptions {
		if v == nil {
			return nil
		}
		return v.Options
	}).(GuardianPhoneOptionsPtrOutput)
}

// String, Case-sensitive. Provider to use, one of `auth0`, `twilio` or `phone-message-hook`.
func (o GuardianPhonePtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhone) *string {
		if v == nil {
			return nil
		}
		return &v.Provider
	}).(pulumi.StringPtrOutput)
}

type GuardianPhoneOptions struct {
	// String.
	AuthToken *string `pulumi:"authToken"`
	// String. This message will be sent whenever a user enrolls a new device for the first time using MFA. Supports liquid syntax, see [Auth0 docs](https://auth0.com/docs/mfa/customize-sms-or-voice-messages).
	EnrollmentMessage *string `pulumi:"enrollmentMessage"`
	// String.
	From *string `pulumi:"from"`
	// String.
	MessagingServiceSid *string `pulumi:"messagingServiceSid"`
	// String.
	Sid *string `pulumi:"sid"`
	// String. This message will be sent whenever a user logs in after the enrollment. Supports liquid syntax, see [Auth0 docs](https://auth0.com/docs/mfa/customize-sms-or-voice-messages).
	VerificationMessage *string `pulumi:"verificationMessage"`
}

// GuardianPhoneOptionsInput is an input type that accepts GuardianPhoneOptionsArgs and GuardianPhoneOptionsOutput values.
// You can construct a concrete instance of `GuardianPhoneOptionsInput` via:
//
//          GuardianPhoneOptionsArgs{...}
type GuardianPhoneOptionsInput interface {
	pulumi.Input

	ToGuardianPhoneOptionsOutput() GuardianPhoneOptionsOutput
	ToGuardianPhoneOptionsOutputWithContext(context.Context) GuardianPhoneOptionsOutput
}

type GuardianPhoneOptionsArgs struct {
	// String.
	AuthToken pulumi.StringPtrInput `pulumi:"authToken"`
	// String. This message will be sent whenever a user enrolls a new device for the first time using MFA. Supports liquid syntax, see [Auth0 docs](https://auth0.com/docs/mfa/customize-sms-or-voice-messages).
	EnrollmentMessage pulumi.StringPtrInput `pulumi:"enrollmentMessage"`
	// String.
	From pulumi.StringPtrInput `pulumi:"from"`
	// String.
	MessagingServiceSid pulumi.StringPtrInput `pulumi:"messagingServiceSid"`
	// String.
	Sid pulumi.StringPtrInput `pulumi:"sid"`
	// String. This message will be sent whenever a user logs in after the enrollment. Supports liquid syntax, see [Auth0 docs](https://auth0.com/docs/mfa/customize-sms-or-voice-messages).
	VerificationMessage pulumi.StringPtrInput `pulumi:"verificationMessage"`
}

func (GuardianPhoneOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhoneOptions)(nil)).Elem()
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsOutput() GuardianPhoneOptionsOutput {
	return i.ToGuardianPhoneOptionsOutputWithContext(context.Background())
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsOutputWithContext(ctx context.Context) GuardianPhoneOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOptionsOutput)
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return i.ToGuardianPhoneOptionsPtrOutputWithContext(context.Background())
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOptionsOutput).ToGuardianPhoneOptionsPtrOutputWithContext(ctx)
}

// GuardianPhoneOptionsPtrInput is an input type that accepts GuardianPhoneOptionsArgs, GuardianPhoneOptionsPtr and GuardianPhoneOptionsPtrOutput values.
// You can construct a concrete instance of `GuardianPhoneOptionsPtrInput` via:
//
//          GuardianPhoneOptionsArgs{...}
//
//  or:
//
//          nil
type GuardianPhoneOptionsPtrInput interface {
	pulumi.Input

	ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput
	ToGuardianPhoneOptionsPtrOutputWithContext(context.Context) GuardianPhoneOptionsPtrOutput
}

type guardianPhoneOptionsPtrType GuardianPhoneOptionsArgs

func GuardianPhoneOptionsPtr(v *GuardianPhoneOptionsArgs) GuardianPhoneOptionsPtrInput {
	return (*guardianPhoneOptionsPtrType)(v)
}

func (*guardianPhoneOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhoneOptions)(nil)).Elem()
}

func (i *guardianPhoneOptionsPtrType) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return i.ToGuardianPhoneOptionsPtrOutputWithContext(context.Background())
}

func (i *guardianPhoneOptionsPtrType) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOptionsPtrOutput)
}

type GuardianPhoneOptionsOutput struct{ *pulumi.OutputState }

func (GuardianPhoneOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhoneOptions)(nil)).Elem()
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsOutput() GuardianPhoneOptionsOutput {
	return o
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsOutputWithContext(ctx context.Context) GuardianPhoneOptionsOutput {
	return o
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return o.ToGuardianPhoneOptionsPtrOutputWithContext(context.Background())
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPhoneOptions) *GuardianPhoneOptions {
		return &v
	}).(GuardianPhoneOptionsPtrOutput)
}

// String.
func (o GuardianPhoneOptionsOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.AuthToken }).(pulumi.StringPtrOutput)
}

// String. This message will be sent whenever a user enrolls a new device for the first time using MFA. Supports liquid syntax, see [Auth0 docs](https://auth0.com/docs/mfa/customize-sms-or-voice-messages).
func (o GuardianPhoneOptionsOutput) EnrollmentMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.EnrollmentMessage }).(pulumi.StringPtrOutput)
}

// String.
func (o GuardianPhoneOptionsOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.From }).(pulumi.StringPtrOutput)
}

// String.
func (o GuardianPhoneOptionsOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.MessagingServiceSid }).(pulumi.StringPtrOutput)
}

// String.
func (o GuardianPhoneOptionsOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.Sid }).(pulumi.StringPtrOutput)
}

// String. This message will be sent whenever a user logs in after the enrollment. Supports liquid syntax, see [Auth0 docs](https://auth0.com/docs/mfa/customize-sms-or-voice-messages).
func (o GuardianPhoneOptionsOutput) VerificationMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.VerificationMessage }).(pulumi.StringPtrOutput)
}

type GuardianPhoneOptionsPtrOutput struct{ *pulumi.OutputState }

func (GuardianPhoneOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhoneOptions)(nil)).Elem()
}

func (o GuardianPhoneOptionsPtrOutput) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return o
}

func (o GuardianPhoneOptionsPtrOutput) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return o
}

func (o GuardianPhoneOptionsPtrOutput) Elem() GuardianPhoneOptionsOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) GuardianPhoneOptions {
		if v != nil {
			return *v
		}
		var ret GuardianPhoneOptions
		return ret
	}).(GuardianPhoneOptionsOutput)
}

// String.
func (o GuardianPhoneOptionsPtrOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.AuthToken
	}).(pulumi.StringPtrOutput)
}

// String. This message will be sent whenever a user enrolls a new device for the first time using MFA. Supports liquid syntax, see [Auth0 docs](https://auth0.com/docs/mfa/customize-sms-or-voice-messages).
func (o GuardianPhoneOptionsPtrOutput) EnrollmentMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.EnrollmentMessage
	}).(pulumi.StringPtrOutput)
}

// String.
func (o GuardianPhoneOptionsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

// String.
func (o GuardianPhoneOptionsPtrOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.MessagingServiceSid
	}).(pulumi.StringPtrOutput)
}

// String.
func (o GuardianPhoneOptionsPtrOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.Sid
	}).(pulumi.StringPtrOutput)
}

// String. This message will be sent whenever a user logs in after the enrollment. Supports liquid syntax, see [Auth0 docs](https://auth0.com/docs/mfa/customize-sms-or-voice-messages).
func (o GuardianPhoneOptionsPtrOutput) VerificationMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.VerificationMessage
	}).(pulumi.StringPtrOutput)
}

type LogStreamSink struct {
	// The AWS Account ID
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS so this should generally be an output attribute.
	AwsPartnerEventSource *string `pulumi:"awsPartnerEventSource"`
	// The AWS Region (i.e "us-east-2")
	AwsRegion *string `pulumi:"awsRegion"`
	// Name of the Partner Topic to be used with Azure.  Generally should not be specified.
	AzurePartnerTopic *string `pulumi:"azurePartnerTopic"`
	// The Azure region code (i.e. "ne")
	AzureRegion *string `pulumi:"azureRegion"`
	// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription
	AzureResourceGroup *string `pulumi:"azureResourceGroup"`
	// The unique alphanumeric string that identifies your Azure subscription
	AzureSubscriptionId *string `pulumi:"azureSubscriptionId"`
	// The Datadog API key
	DatadogApiKey *string `pulumi:"datadogApiKey"`
	// The Datadog region
	DatadogRegion *string `pulumi:"datadogRegion"`
	// Sent in the HTTP "Authorization" header with each request
	HttpAuthorization *string `pulumi:"httpAuthorization"`
	// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
	HttpContentFormat *string `pulumi:"httpContentFormat"`
	// The ContentType header to send over HTTP.  Common value is "application/json"
	HttpContentType *string `pulumi:"httpContentType"`
	// Additional HTTP headers to be included as part of the HTTP request
	HttpCustomHeaders []string `pulumi:"httpCustomHeaders"`
	// The HTTP endpoint to send streaming logs
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The Splunk domain name
	SplunkDomain *string `pulumi:"splunkDomain"`
	SplunkPort   *string `pulumi:"splunkPort"`
	// This toggle should be turned off when using self-signed certificates
	SplunkSecure *bool `pulumi:"splunkSecure"`
	// The Splunk access token
	SplunkToken *string `pulumi:"splunkToken"`
	// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0
	SumoSourceAddress *string `pulumi:"sumoSourceAddress"`
}

// LogStreamSinkInput is an input type that accepts LogStreamSinkArgs and LogStreamSinkOutput values.
// You can construct a concrete instance of `LogStreamSinkInput` via:
//
//          LogStreamSinkArgs{...}
type LogStreamSinkInput interface {
	pulumi.Input

	ToLogStreamSinkOutput() LogStreamSinkOutput
	ToLogStreamSinkOutputWithContext(context.Context) LogStreamSinkOutput
}

type LogStreamSinkArgs struct {
	// The AWS Account ID
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS so this should generally be an output attribute.
	AwsPartnerEventSource pulumi.StringPtrInput `pulumi:"awsPartnerEventSource"`
	// The AWS Region (i.e "us-east-2")
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// Name of the Partner Topic to be used with Azure.  Generally should not be specified.
	AzurePartnerTopic pulumi.StringPtrInput `pulumi:"azurePartnerTopic"`
	// The Azure region code (i.e. "ne")
	AzureRegion pulumi.StringPtrInput `pulumi:"azureRegion"`
	// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription
	AzureResourceGroup pulumi.StringPtrInput `pulumi:"azureResourceGroup"`
	// The unique alphanumeric string that identifies your Azure subscription
	AzureSubscriptionId pulumi.StringPtrInput `pulumi:"azureSubscriptionId"`
	// The Datadog API key
	DatadogApiKey pulumi.StringPtrInput `pulumi:"datadogApiKey"`
	// The Datadog region
	DatadogRegion pulumi.StringPtrInput `pulumi:"datadogRegion"`
	// Sent in the HTTP "Authorization" header with each request
	HttpAuthorization pulumi.StringPtrInput `pulumi:"httpAuthorization"`
	// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
	HttpContentFormat pulumi.StringPtrInput `pulumi:"httpContentFormat"`
	// The ContentType header to send over HTTP.  Common value is "application/json"
	HttpContentType pulumi.StringPtrInput `pulumi:"httpContentType"`
	// Additional HTTP headers to be included as part of the HTTP request
	HttpCustomHeaders pulumi.StringArrayInput `pulumi:"httpCustomHeaders"`
	// The HTTP endpoint to send streaming logs
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The Splunk domain name
	SplunkDomain pulumi.StringPtrInput `pulumi:"splunkDomain"`
	SplunkPort   pulumi.StringPtrInput `pulumi:"splunkPort"`
	// This toggle should be turned off when using self-signed certificates
	SplunkSecure pulumi.BoolPtrInput `pulumi:"splunkSecure"`
	// The Splunk access token
	SplunkToken pulumi.StringPtrInput `pulumi:"splunkToken"`
	// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0
	SumoSourceAddress pulumi.StringPtrInput `pulumi:"sumoSourceAddress"`
}

func (LogStreamSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogStreamSink)(nil)).Elem()
}

func (i LogStreamSinkArgs) ToLogStreamSinkOutput() LogStreamSinkOutput {
	return i.ToLogStreamSinkOutputWithContext(context.Background())
}

func (i LogStreamSinkArgs) ToLogStreamSinkOutputWithContext(ctx context.Context) LogStreamSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogStreamSinkOutput)
}

func (i LogStreamSinkArgs) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return i.ToLogStreamSinkPtrOutputWithContext(context.Background())
}

func (i LogStreamSinkArgs) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogStreamSinkOutput).ToLogStreamSinkPtrOutputWithContext(ctx)
}

// LogStreamSinkPtrInput is an input type that accepts LogStreamSinkArgs, LogStreamSinkPtr and LogStreamSinkPtrOutput values.
// You can construct a concrete instance of `LogStreamSinkPtrInput` via:
//
//          LogStreamSinkArgs{...}
//
//  or:
//
//          nil
type LogStreamSinkPtrInput interface {
	pulumi.Input

	ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput
	ToLogStreamSinkPtrOutputWithContext(context.Context) LogStreamSinkPtrOutput
}

type logStreamSinkPtrType LogStreamSinkArgs

func LogStreamSinkPtr(v *LogStreamSinkArgs) LogStreamSinkPtrInput {
	return (*logStreamSinkPtrType)(v)
}

func (*logStreamSinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogStreamSink)(nil)).Elem()
}

func (i *logStreamSinkPtrType) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return i.ToLogStreamSinkPtrOutputWithContext(context.Background())
}

func (i *logStreamSinkPtrType) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogStreamSinkPtrOutput)
}

type LogStreamSinkOutput struct{ *pulumi.OutputState }

func (LogStreamSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogStreamSink)(nil)).Elem()
}

func (o LogStreamSinkOutput) ToLogStreamSinkOutput() LogStreamSinkOutput {
	return o
}

func (o LogStreamSinkOutput) ToLogStreamSinkOutputWithContext(ctx context.Context) LogStreamSinkOutput {
	return o
}

func (o LogStreamSinkOutput) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return o.ToLogStreamSinkPtrOutputWithContext(context.Background())
}

func (o LogStreamSinkOutput) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogStreamSink) *LogStreamSink {
		return &v
	}).(LogStreamSinkPtrOutput)
}

// The AWS Account ID
func (o LogStreamSinkOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS so this should generally be an output attribute.
func (o LogStreamSinkOutput) AwsPartnerEventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AwsPartnerEventSource }).(pulumi.StringPtrOutput)
}

// The AWS Region (i.e "us-east-2")
func (o LogStreamSinkOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// Name of the Partner Topic to be used with Azure.  Generally should not be specified.
func (o LogStreamSinkOutput) AzurePartnerTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzurePartnerTopic }).(pulumi.StringPtrOutput)
}

// The Azure region code (i.e. "ne")
func (o LogStreamSinkOutput) AzureRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzureRegion }).(pulumi.StringPtrOutput)
}

// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription
func (o LogStreamSinkOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzureResourceGroup }).(pulumi.StringPtrOutput)
}

// The unique alphanumeric string that identifies your Azure subscription
func (o LogStreamSinkOutput) AzureSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzureSubscriptionId }).(pulumi.StringPtrOutput)
}

// The Datadog API key
func (o LogStreamSinkOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.DatadogApiKey }).(pulumi.StringPtrOutput)
}

// The Datadog region
func (o LogStreamSinkOutput) DatadogRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.DatadogRegion }).(pulumi.StringPtrOutput)
}

// Sent in the HTTP "Authorization" header with each request
func (o LogStreamSinkOutput) HttpAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpAuthorization }).(pulumi.StringPtrOutput)
}

// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
func (o LogStreamSinkOutput) HttpContentFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpContentFormat }).(pulumi.StringPtrOutput)
}

// The ContentType header to send over HTTP.  Common value is "application/json"
func (o LogStreamSinkOutput) HttpContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpContentType }).(pulumi.StringPtrOutput)
}

// Additional HTTP headers to be included as part of the HTTP request
func (o LogStreamSinkOutput) HttpCustomHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LogStreamSink) []string { return v.HttpCustomHeaders }).(pulumi.StringArrayOutput)
}

// The HTTP endpoint to send streaming logs
func (o LogStreamSinkOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The Splunk domain name
func (o LogStreamSinkOutput) SplunkDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SplunkDomain }).(pulumi.StringPtrOutput)
}

func (o LogStreamSinkOutput) SplunkPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SplunkPort }).(pulumi.StringPtrOutput)
}

// This toggle should be turned off when using self-signed certificates
func (o LogStreamSinkOutput) SplunkSecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *bool { return v.SplunkSecure }).(pulumi.BoolPtrOutput)
}

// The Splunk access token
func (o LogStreamSinkOutput) SplunkToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SplunkToken }).(pulumi.StringPtrOutput)
}

// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0
func (o LogStreamSinkOutput) SumoSourceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SumoSourceAddress }).(pulumi.StringPtrOutput)
}

type LogStreamSinkPtrOutput struct{ *pulumi.OutputState }

func (LogStreamSinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogStreamSink)(nil)).Elem()
}

func (o LogStreamSinkPtrOutput) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return o
}

func (o LogStreamSinkPtrOutput) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return o
}

func (o LogStreamSinkPtrOutput) Elem() LogStreamSinkOutput {
	return o.ApplyT(func(v *LogStreamSink) LogStreamSink {
		if v != nil {
			return *v
		}
		var ret LogStreamSink
		return ret
	}).(LogStreamSinkOutput)
}

// The AWS Account ID
func (o LogStreamSinkPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS so this should generally be an output attribute.
func (o LogStreamSinkPtrOutput) AwsPartnerEventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AwsPartnerEventSource
	}).(pulumi.StringPtrOutput)
}

// The AWS Region (i.e "us-east-2")
func (o LogStreamSinkPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// Name of the Partner Topic to be used with Azure.  Generally should not be specified.
func (o LogStreamSinkPtrOutput) AzurePartnerTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzurePartnerTopic
	}).(pulumi.StringPtrOutput)
}

// The Azure region code (i.e. "ne")
func (o LogStreamSinkPtrOutput) AzureRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzureRegion
	}).(pulumi.StringPtrOutput)
}

// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription
func (o LogStreamSinkPtrOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The unique alphanumeric string that identifies your Azure subscription
func (o LogStreamSinkPtrOutput) AzureSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzureSubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The Datadog API key
func (o LogStreamSinkPtrOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.DatadogApiKey
	}).(pulumi.StringPtrOutput)
}

// The Datadog region
func (o LogStreamSinkPtrOutput) DatadogRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.DatadogRegion
	}).(pulumi.StringPtrOutput)
}

// Sent in the HTTP "Authorization" header with each request
func (o LogStreamSinkPtrOutput) HttpAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpAuthorization
	}).(pulumi.StringPtrOutput)
}

// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
func (o LogStreamSinkPtrOutput) HttpContentFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpContentFormat
	}).(pulumi.StringPtrOutput)
}

// The ContentType header to send over HTTP.  Common value is "application/json"
func (o LogStreamSinkPtrOutput) HttpContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpContentType
	}).(pulumi.StringPtrOutput)
}

// Additional HTTP headers to be included as part of the HTTP request
func (o LogStreamSinkPtrOutput) HttpCustomHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LogStreamSink) []string {
		if v == nil {
			return nil
		}
		return v.HttpCustomHeaders
	}).(pulumi.StringArrayOutput)
}

// The HTTP endpoint to send streaming logs
func (o LogStreamSinkPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Splunk domain name
func (o LogStreamSinkPtrOutput) SplunkDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SplunkDomain
	}).(pulumi.StringPtrOutput)
}

func (o LogStreamSinkPtrOutput) SplunkPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SplunkPort
	}).(pulumi.StringPtrOutput)
}

// This toggle should be turned off when using self-signed certificates
func (o LogStreamSinkPtrOutput) SplunkSecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *bool {
		if v == nil {
			return nil
		}
		return v.SplunkSecure
	}).(pulumi.BoolPtrOutput)
}

// The Splunk access token
func (o LogStreamSinkPtrOutput) SplunkToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SplunkToken
	}).(pulumi.StringPtrOutput)
}

// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0
func (o LogStreamSinkPtrOutput) SumoSourceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SumoSourceAddress
	}).(pulumi.StringPtrOutput)
}

type OrganizationBranding struct {
	// Color scheme used to customize the login pages
	Colors map[string]string `pulumi:"colors"`
	// URL of logo to display on login page
	LogoUrl *string `pulumi:"logoUrl"`
}

// OrganizationBrandingInput is an input type that accepts OrganizationBrandingArgs and OrganizationBrandingOutput values.
// You can construct a concrete instance of `OrganizationBrandingInput` via:
//
//          OrganizationBrandingArgs{...}
type OrganizationBrandingInput interface {
	pulumi.Input

	ToOrganizationBrandingOutput() OrganizationBrandingOutput
	ToOrganizationBrandingOutputWithContext(context.Context) OrganizationBrandingOutput
}

type OrganizationBrandingArgs struct {
	// Color scheme used to customize the login pages
	Colors pulumi.StringMapInput `pulumi:"colors"`
	// URL of logo to display on login page
	LogoUrl pulumi.StringPtrInput `pulumi:"logoUrl"`
}

func (OrganizationBrandingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationBranding)(nil)).Elem()
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingOutput() OrganizationBrandingOutput {
	return i.ToOrganizationBrandingOutputWithContext(context.Background())
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingOutputWithContext(ctx context.Context) OrganizationBrandingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBrandingOutput)
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return i.ToOrganizationBrandingPtrOutputWithContext(context.Background())
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBrandingOutput).ToOrganizationBrandingPtrOutputWithContext(ctx)
}

// OrganizationBrandingPtrInput is an input type that accepts OrganizationBrandingArgs, OrganizationBrandingPtr and OrganizationBrandingPtrOutput values.
// You can construct a concrete instance of `OrganizationBrandingPtrInput` via:
//
//          OrganizationBrandingArgs{...}
//
//  or:
//
//          nil
type OrganizationBrandingPtrInput interface {
	pulumi.Input

	ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput
	ToOrganizationBrandingPtrOutputWithContext(context.Context) OrganizationBrandingPtrOutput
}

type organizationBrandingPtrType OrganizationBrandingArgs

func OrganizationBrandingPtr(v *OrganizationBrandingArgs) OrganizationBrandingPtrInput {
	return (*organizationBrandingPtrType)(v)
}

func (*organizationBrandingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationBranding)(nil)).Elem()
}

func (i *organizationBrandingPtrType) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return i.ToOrganizationBrandingPtrOutputWithContext(context.Background())
}

func (i *organizationBrandingPtrType) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBrandingPtrOutput)
}

type OrganizationBrandingOutput struct{ *pulumi.OutputState }

func (OrganizationBrandingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationBranding)(nil)).Elem()
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingOutput() OrganizationBrandingOutput {
	return o
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingOutputWithContext(ctx context.Context) OrganizationBrandingOutput {
	return o
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return o.ToOrganizationBrandingPtrOutputWithContext(context.Background())
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationBranding) *OrganizationBranding {
		return &v
	}).(OrganizationBrandingPtrOutput)
}

// Color scheme used to customize the login pages
func (o OrganizationBrandingOutput) Colors() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrganizationBranding) map[string]string { return v.Colors }).(pulumi.StringMapOutput)
}

// URL of logo to display on login page
func (o OrganizationBrandingOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationBranding) *string { return v.LogoUrl }).(pulumi.StringPtrOutput)
}

type OrganizationBrandingPtrOutput struct{ *pulumi.OutputState }

func (OrganizationBrandingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationBranding)(nil)).Elem()
}

func (o OrganizationBrandingPtrOutput) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return o
}

func (o OrganizationBrandingPtrOutput) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return o
}

func (o OrganizationBrandingPtrOutput) Elem() OrganizationBrandingOutput {
	return o.ApplyT(func(v *OrganizationBranding) OrganizationBranding {
		if v != nil {
			return *v
		}
		var ret OrganizationBranding
		return ret
	}).(OrganizationBrandingOutput)
}

// Color scheme used to customize the login pages
func (o OrganizationBrandingPtrOutput) Colors() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrganizationBranding) map[string]string {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(pulumi.StringMapOutput)
}

// URL of logo to display on login page
func (o OrganizationBrandingPtrOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationBranding) *string {
		if v == nil {
			return nil
		}
		return v.LogoUrl
	}).(pulumi.StringPtrOutput)
}

type OrganizationConnection struct {
	// When true, all users that log in
	// with this connection will be automatically granted membership in the
	// organization. When false, users must be granted membership in the organization
	// before logging in with this connection.
	AssignMembershipOnLogin *bool `pulumi:"assignMembershipOnLogin"`
	// The connection ID of the connection to add to the
	// organization
	ConnectionId string `pulumi:"connectionId"`
}

// OrganizationConnectionInput is an input type that accepts OrganizationConnectionArgs and OrganizationConnectionOutput values.
// You can construct a concrete instance of `OrganizationConnectionInput` via:
//
//          OrganizationConnectionArgs{...}
type OrganizationConnectionInput interface {
	pulumi.Input

	ToOrganizationConnectionOutput() OrganizationConnectionOutput
	ToOrganizationConnectionOutputWithContext(context.Context) OrganizationConnectionOutput
}

type OrganizationConnectionArgs struct {
	// When true, all users that log in
	// with this connection will be automatically granted membership in the
	// organization. When false, users must be granted membership in the organization
	// before logging in with this connection.
	AssignMembershipOnLogin pulumi.BoolPtrInput `pulumi:"assignMembershipOnLogin"`
	// The connection ID of the connection to add to the
	// organization
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
}

func (OrganizationConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConnection)(nil)).Elem()
}

func (i OrganizationConnectionArgs) ToOrganizationConnectionOutput() OrganizationConnectionOutput {
	return i.ToOrganizationConnectionOutputWithContext(context.Background())
}

func (i OrganizationConnectionArgs) ToOrganizationConnectionOutputWithContext(ctx context.Context) OrganizationConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConnectionOutput)
}

// OrganizationConnectionArrayInput is an input type that accepts OrganizationConnectionArray and OrganizationConnectionArrayOutput values.
// You can construct a concrete instance of `OrganizationConnectionArrayInput` via:
//
//          OrganizationConnectionArray{ OrganizationConnectionArgs{...} }
type OrganizationConnectionArrayInput interface {
	pulumi.Input

	ToOrganizationConnectionArrayOutput() OrganizationConnectionArrayOutput
	ToOrganizationConnectionArrayOutputWithContext(context.Context) OrganizationConnectionArrayOutput
}

type OrganizationConnectionArray []OrganizationConnectionInput

func (OrganizationConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationConnection)(nil)).Elem()
}

func (i OrganizationConnectionArray) ToOrganizationConnectionArrayOutput() OrganizationConnectionArrayOutput {
	return i.ToOrganizationConnectionArrayOutputWithContext(context.Background())
}

func (i OrganizationConnectionArray) ToOrganizationConnectionArrayOutputWithContext(ctx context.Context) OrganizationConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConnectionArrayOutput)
}

type OrganizationConnectionOutput struct{ *pulumi.OutputState }

func (OrganizationConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConnection)(nil)).Elem()
}

func (o OrganizationConnectionOutput) ToOrganizationConnectionOutput() OrganizationConnectionOutput {
	return o
}

func (o OrganizationConnectionOutput) ToOrganizationConnectionOutputWithContext(ctx context.Context) OrganizationConnectionOutput {
	return o
}

// When true, all users that log in
// with this connection will be automatically granted membership in the
// organization. When false, users must be granted membership in the organization
// before logging in with this connection.
func (o OrganizationConnectionOutput) AssignMembershipOnLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationConnection) *bool { return v.AssignMembershipOnLogin }).(pulumi.BoolPtrOutput)
}

// The connection ID of the connection to add to the
// organization
func (o OrganizationConnectionOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationConnection) string { return v.ConnectionId }).(pulumi.StringOutput)
}

type OrganizationConnectionArrayOutput struct{ *pulumi.OutputState }

func (OrganizationConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationConnection)(nil)).Elem()
}

func (o OrganizationConnectionArrayOutput) ToOrganizationConnectionArrayOutput() OrganizationConnectionArrayOutput {
	return o
}

func (o OrganizationConnectionArrayOutput) ToOrganizationConnectionArrayOutputWithContext(ctx context.Context) OrganizationConnectionArrayOutput {
	return o
}

func (o OrganizationConnectionArrayOutput) Index(i pulumi.IntInput) OrganizationConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationConnection {
		return vs[0].([]OrganizationConnection)[vs[1].(int)]
	}).(OrganizationConnectionOutput)
}

type ResourceServerScope struct {
	// String. Description of the permission (scope).
	Description *string `pulumi:"description"`
	// String. Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.
	Value string `pulumi:"value"`
}

// ResourceServerScopeInput is an input type that accepts ResourceServerScopeArgs and ResourceServerScopeOutput values.
// You can construct a concrete instance of `ResourceServerScopeInput` via:
//
//          ResourceServerScopeArgs{...}
type ResourceServerScopeInput interface {
	pulumi.Input

	ToResourceServerScopeOutput() ResourceServerScopeOutput
	ToResourceServerScopeOutputWithContext(context.Context) ResourceServerScopeOutput
}

type ResourceServerScopeArgs struct {
	// String. Description of the permission (scope).
	Description pulumi.StringPtrInput `pulumi:"description"`
	// String. Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ResourceServerScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScope)(nil)).Elem()
}

func (i ResourceServerScopeArgs) ToResourceServerScopeOutput() ResourceServerScopeOutput {
	return i.ToResourceServerScopeOutputWithContext(context.Background())
}

func (i ResourceServerScopeArgs) ToResourceServerScopeOutputWithContext(ctx context.Context) ResourceServerScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopeOutput)
}

// ResourceServerScopeArrayInput is an input type that accepts ResourceServerScopeArray and ResourceServerScopeArrayOutput values.
// You can construct a concrete instance of `ResourceServerScopeArrayInput` via:
//
//          ResourceServerScopeArray{ ResourceServerScopeArgs{...} }
type ResourceServerScopeArrayInput interface {
	pulumi.Input

	ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput
	ToResourceServerScopeArrayOutputWithContext(context.Context) ResourceServerScopeArrayOutput
}

type ResourceServerScopeArray []ResourceServerScopeInput

func (ResourceServerScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScope)(nil)).Elem()
}

func (i ResourceServerScopeArray) ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput {
	return i.ToResourceServerScopeArrayOutputWithContext(context.Background())
}

func (i ResourceServerScopeArray) ToResourceServerScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopeArrayOutput)
}

type ResourceServerScopeOutput struct{ *pulumi.OutputState }

func (ResourceServerScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScope)(nil)).Elem()
}

func (o ResourceServerScopeOutput) ToResourceServerScopeOutput() ResourceServerScopeOutput {
	return o
}

func (o ResourceServerScopeOutput) ToResourceServerScopeOutputWithContext(ctx context.Context) ResourceServerScopeOutput {
	return o
}

// String. Description of the permission (scope).
func (o ResourceServerScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceServerScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// String. Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.
func (o ResourceServerScopeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceServerScope) string { return v.Value }).(pulumi.StringOutput)
}

type ResourceServerScopeArrayOutput struct{ *pulumi.OutputState }

func (ResourceServerScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScope)(nil)).Elem()
}

func (o ResourceServerScopeArrayOutput) ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput {
	return o
}

func (o ResourceServerScopeArrayOutput) ToResourceServerScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopeArrayOutput {
	return o
}

func (o ResourceServerScopeArrayOutput) Index(i pulumi.IntInput) ResourceServerScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceServerScope {
		return vs[0].([]ResourceServerScope)[vs[1].(int)]
	}).(ResourceServerScopeOutput)
}

type RolePermission struct {
	// String. Name of the permission (scope).
	Name string `pulumi:"name"`
	// String. Unique identifier for the resource server.
	ResourceServerIdentifier string `pulumi:"resourceServerIdentifier"`
}

// RolePermissionInput is an input type that accepts RolePermissionArgs and RolePermissionOutput values.
// You can construct a concrete instance of `RolePermissionInput` via:
//
//          RolePermissionArgs{...}
type RolePermissionInput interface {
	pulumi.Input

	ToRolePermissionOutput() RolePermissionOutput
	ToRolePermissionOutputWithContext(context.Context) RolePermissionOutput
}

type RolePermissionArgs struct {
	// String. Name of the permission (scope).
	Name pulumi.StringInput `pulumi:"name"`
	// String. Unique identifier for the resource server.
	ResourceServerIdentifier pulumi.StringInput `pulumi:"resourceServerIdentifier"`
}

func (RolePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermission)(nil)).Elem()
}

func (i RolePermissionArgs) ToRolePermissionOutput() RolePermissionOutput {
	return i.ToRolePermissionOutputWithContext(context.Background())
}

func (i RolePermissionArgs) ToRolePermissionOutputWithContext(ctx context.Context) RolePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionOutput)
}

// RolePermissionArrayInput is an input type that accepts RolePermissionArray and RolePermissionArrayOutput values.
// You can construct a concrete instance of `RolePermissionArrayInput` via:
//
//          RolePermissionArray{ RolePermissionArgs{...} }
type RolePermissionArrayInput interface {
	pulumi.Input

	ToRolePermissionArrayOutput() RolePermissionArrayOutput
	ToRolePermissionArrayOutputWithContext(context.Context) RolePermissionArrayOutput
}

type RolePermissionArray []RolePermissionInput

func (RolePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermission)(nil)).Elem()
}

func (i RolePermissionArray) ToRolePermissionArrayOutput() RolePermissionArrayOutput {
	return i.ToRolePermissionArrayOutputWithContext(context.Background())
}

func (i RolePermissionArray) ToRolePermissionArrayOutputWithContext(ctx context.Context) RolePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionArrayOutput)
}

type RolePermissionOutput struct{ *pulumi.OutputState }

func (RolePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermission)(nil)).Elem()
}

func (o RolePermissionOutput) ToRolePermissionOutput() RolePermissionOutput {
	return o
}

func (o RolePermissionOutput) ToRolePermissionOutputWithContext(ctx context.Context) RolePermissionOutput {
	return o
}

// String. Name of the permission (scope).
func (o RolePermissionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RolePermission) string { return v.Name }).(pulumi.StringOutput)
}

// String. Unique identifier for the resource server.
func (o RolePermissionOutput) ResourceServerIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v RolePermission) string { return v.ResourceServerIdentifier }).(pulumi.StringOutput)
}

type RolePermissionArrayOutput struct{ *pulumi.OutputState }

func (RolePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermission)(nil)).Elem()
}

func (o RolePermissionArrayOutput) ToRolePermissionArrayOutput() RolePermissionArrayOutput {
	return o
}

func (o RolePermissionArrayOutput) ToRolePermissionArrayOutputWithContext(ctx context.Context) RolePermissionArrayOutput {
	return o
}

func (o RolePermissionArrayOutput) Index(i pulumi.IntInput) RolePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolePermission {
		return vs[0].([]RolePermission)[vs[1].(int)]
	}).(RolePermissionOutput)
}

type TenantChangePassword struct {
	// Boolean. Indicates whether to use the custom change password page.
	Enabled bool `pulumi:"enabled"`
	// String, HTML format with supported Liquid syntax. Customized content of the change password page.
	Html string `pulumi:"html"`
}

// TenantChangePasswordInput is an input type that accepts TenantChangePasswordArgs and TenantChangePasswordOutput values.
// You can construct a concrete instance of `TenantChangePasswordInput` via:
//
//          TenantChangePasswordArgs{...}
type TenantChangePasswordInput interface {
	pulumi.Input

	ToTenantChangePasswordOutput() TenantChangePasswordOutput
	ToTenantChangePasswordOutputWithContext(context.Context) TenantChangePasswordOutput
}

type TenantChangePasswordArgs struct {
	// Boolean. Indicates whether to use the custom change password page.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// String, HTML format with supported Liquid syntax. Customized content of the change password page.
	Html pulumi.StringInput `pulumi:"html"`
}

func (TenantChangePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantChangePassword)(nil)).Elem()
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordOutput() TenantChangePasswordOutput {
	return i.ToTenantChangePasswordOutputWithContext(context.Background())
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordOutputWithContext(ctx context.Context) TenantChangePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantChangePasswordOutput)
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return i.ToTenantChangePasswordPtrOutputWithContext(context.Background())
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantChangePasswordOutput).ToTenantChangePasswordPtrOutputWithContext(ctx)
}

// TenantChangePasswordPtrInput is an input type that accepts TenantChangePasswordArgs, TenantChangePasswordPtr and TenantChangePasswordPtrOutput values.
// You can construct a concrete instance of `TenantChangePasswordPtrInput` via:
//
//          TenantChangePasswordArgs{...}
//
//  or:
//
//          nil
type TenantChangePasswordPtrInput interface {
	pulumi.Input

	ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput
	ToTenantChangePasswordPtrOutputWithContext(context.Context) TenantChangePasswordPtrOutput
}

type tenantChangePasswordPtrType TenantChangePasswordArgs

func TenantChangePasswordPtr(v *TenantChangePasswordArgs) TenantChangePasswordPtrInput {
	return (*tenantChangePasswordPtrType)(v)
}

func (*tenantChangePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantChangePassword)(nil)).Elem()
}

func (i *tenantChangePasswordPtrType) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return i.ToTenantChangePasswordPtrOutputWithContext(context.Background())
}

func (i *tenantChangePasswordPtrType) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantChangePasswordPtrOutput)
}

type TenantChangePasswordOutput struct{ *pulumi.OutputState }

func (TenantChangePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantChangePassword)(nil)).Elem()
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordOutput() TenantChangePasswordOutput {
	return o
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordOutputWithContext(ctx context.Context) TenantChangePasswordOutput {
	return o
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return o.ToTenantChangePasswordPtrOutputWithContext(context.Background())
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantChangePassword) *TenantChangePassword {
		return &v
	}).(TenantChangePasswordPtrOutput)
}

// Boolean. Indicates whether to use the custom change password page.
func (o TenantChangePasswordOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TenantChangePassword) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the change password page.
func (o TenantChangePasswordOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v TenantChangePassword) string { return v.Html }).(pulumi.StringOutput)
}

type TenantChangePasswordPtrOutput struct{ *pulumi.OutputState }

func (TenantChangePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantChangePassword)(nil)).Elem()
}

func (o TenantChangePasswordPtrOutput) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return o
}

func (o TenantChangePasswordPtrOutput) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return o
}

func (o TenantChangePasswordPtrOutput) Elem() TenantChangePasswordOutput {
	return o.ApplyT(func(v *TenantChangePassword) TenantChangePassword {
		if v != nil {
			return *v
		}
		var ret TenantChangePassword
		return ret
	}).(TenantChangePasswordOutput)
}

// Boolean. Indicates whether to use the custom change password page.
func (o TenantChangePasswordPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantChangePassword) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the change password page.
func (o TenantChangePasswordPtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantChangePassword) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

type TenantErrorPage struct {
	// String, HTML format with supported Liquid syntax. Customized content of the error page.
	Html string `pulumi:"html"`
	// Boolean. Indicates whether to show the link to logs as part of the default error page.
	ShowLogLink bool `pulumi:"showLogLink"`
	// String. URL to redirect to when an error occurs rather than showing the default error page.
	Url string `pulumi:"url"`
}

// TenantErrorPageInput is an input type that accepts TenantErrorPageArgs and TenantErrorPageOutput values.
// You can construct a concrete instance of `TenantErrorPageInput` via:
//
//          TenantErrorPageArgs{...}
type TenantErrorPageInput interface {
	pulumi.Input

	ToTenantErrorPageOutput() TenantErrorPageOutput
	ToTenantErrorPageOutputWithContext(context.Context) TenantErrorPageOutput
}

type TenantErrorPageArgs struct {
	// String, HTML format with supported Liquid syntax. Customized content of the error page.
	Html pulumi.StringInput `pulumi:"html"`
	// Boolean. Indicates whether to show the link to logs as part of the default error page.
	ShowLogLink pulumi.BoolInput `pulumi:"showLogLink"`
	// String. URL to redirect to when an error occurs rather than showing the default error page.
	Url pulumi.StringInput `pulumi:"url"`
}

func (TenantErrorPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantErrorPage)(nil)).Elem()
}

func (i TenantErrorPageArgs) ToTenantErrorPageOutput() TenantErrorPageOutput {
	return i.ToTenantErrorPageOutputWithContext(context.Background())
}

func (i TenantErrorPageArgs) ToTenantErrorPageOutputWithContext(ctx context.Context) TenantErrorPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantErrorPageOutput)
}

func (i TenantErrorPageArgs) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return i.ToTenantErrorPagePtrOutputWithContext(context.Background())
}

func (i TenantErrorPageArgs) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantErrorPageOutput).ToTenantErrorPagePtrOutputWithContext(ctx)
}

// TenantErrorPagePtrInput is an input type that accepts TenantErrorPageArgs, TenantErrorPagePtr and TenantErrorPagePtrOutput values.
// You can construct a concrete instance of `TenantErrorPagePtrInput` via:
//
//          TenantErrorPageArgs{...}
//
//  or:
//
//          nil
type TenantErrorPagePtrInput interface {
	pulumi.Input

	ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput
	ToTenantErrorPagePtrOutputWithContext(context.Context) TenantErrorPagePtrOutput
}

type tenantErrorPagePtrType TenantErrorPageArgs

func TenantErrorPagePtr(v *TenantErrorPageArgs) TenantErrorPagePtrInput {
	return (*tenantErrorPagePtrType)(v)
}

func (*tenantErrorPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantErrorPage)(nil)).Elem()
}

func (i *tenantErrorPagePtrType) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return i.ToTenantErrorPagePtrOutputWithContext(context.Background())
}

func (i *tenantErrorPagePtrType) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantErrorPagePtrOutput)
}

type TenantErrorPageOutput struct{ *pulumi.OutputState }

func (TenantErrorPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantErrorPage)(nil)).Elem()
}

func (o TenantErrorPageOutput) ToTenantErrorPageOutput() TenantErrorPageOutput {
	return o
}

func (o TenantErrorPageOutput) ToTenantErrorPageOutputWithContext(ctx context.Context) TenantErrorPageOutput {
	return o
}

func (o TenantErrorPageOutput) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return o.ToTenantErrorPagePtrOutputWithContext(context.Background())
}

func (o TenantErrorPageOutput) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantErrorPage) *TenantErrorPage {
		return &v
	}).(TenantErrorPagePtrOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the error page.
func (o TenantErrorPageOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v TenantErrorPage) string { return v.Html }).(pulumi.StringOutput)
}

// Boolean. Indicates whether to show the link to logs as part of the default error page.
func (o TenantErrorPageOutput) ShowLogLink() pulumi.BoolOutput {
	return o.ApplyT(func(v TenantErrorPage) bool { return v.ShowLogLink }).(pulumi.BoolOutput)
}

// String. URL to redirect to when an error occurs rather than showing the default error page.
func (o TenantErrorPageOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v TenantErrorPage) string { return v.Url }).(pulumi.StringOutput)
}

type TenantErrorPagePtrOutput struct{ *pulumi.OutputState }

func (TenantErrorPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantErrorPage)(nil)).Elem()
}

func (o TenantErrorPagePtrOutput) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return o
}

func (o TenantErrorPagePtrOutput) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return o
}

func (o TenantErrorPagePtrOutput) Elem() TenantErrorPageOutput {
	return o.ApplyT(func(v *TenantErrorPage) TenantErrorPage {
		if v != nil {
			return *v
		}
		var ret TenantErrorPage
		return ret
	}).(TenantErrorPageOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the error page.
func (o TenantErrorPagePtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantErrorPage) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether to show the link to logs as part of the default error page.
func (o TenantErrorPagePtrOutput) ShowLogLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantErrorPage) *bool {
		if v == nil {
			return nil
		}
		return &v.ShowLogLink
	}).(pulumi.BoolPtrOutput)
}

// String. URL to redirect to when an error occurs rather than showing the default error page.
func (o TenantErrorPagePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantErrorPage) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type TenantFlags struct {
	// Boolean. Indicated whether classic Universal Login prompts include additional security headers to prevent clickjacking.
	DisableClickjackProtectionHeaders *bool `pulumi:"disableClickjackProtectionHeaders"`
	// Boolean. Indicates whether the APIs section is enabled for the tenant.
	EnableApisSection *bool `pulumi:"enableApisSection"`
	// Boolean. Indicates whether all current connections should be enabled when a new client is created.
	EnableClientConnections *bool `pulumi:"enableClientConnections"`
	// Boolean. Indicates whether the tenant allows custom domains in emails.
	EnableCustomDomainInEmails *bool `pulumi:"enableCustomDomainInEmails"`
	// Boolean. Indicates whether the tenant allows dynamic client registration.
	EnableDynamicClientRegistration *bool `pulumi:"enableDynamicClientRegistration"`
	// Boolean. Indicates whether to use the older v2 legacy logs search.
	EnableLegacyLogsSearchV2 *bool `pulumi:"enableLegacyLogsSearchV2"`
	// Boolean. Indicates whether advanced API Authorization scenarios are enabled.
	EnablePipeline2 *bool `pulumi:"enablePipeline2"`
	// Boolean. Indicates whether the public sign up process shows a userExists error if the user already exists.
	EnablePublicSignupUserExistsError *bool `pulumi:"enablePublicSignupUserExistsError"`
	// Boolean. Indicates whether the tenant uses universal login.
	UniversalLogin                 *bool `pulumi:"universalLogin"`
	UseScopeDescriptionsForConsent *bool `pulumi:"useScopeDescriptionsForConsent"`
}

// TenantFlagsInput is an input type that accepts TenantFlagsArgs and TenantFlagsOutput values.
// You can construct a concrete instance of `TenantFlagsInput` via:
//
//          TenantFlagsArgs{...}
type TenantFlagsInput interface {
	pulumi.Input

	ToTenantFlagsOutput() TenantFlagsOutput
	ToTenantFlagsOutputWithContext(context.Context) TenantFlagsOutput
}

type TenantFlagsArgs struct {
	// Boolean. Indicated whether classic Universal Login prompts include additional security headers to prevent clickjacking.
	DisableClickjackProtectionHeaders pulumi.BoolPtrInput `pulumi:"disableClickjackProtectionHeaders"`
	// Boolean. Indicates whether the APIs section is enabled for the tenant.
	EnableApisSection pulumi.BoolPtrInput `pulumi:"enableApisSection"`
	// Boolean. Indicates whether all current connections should be enabled when a new client is created.
	EnableClientConnections pulumi.BoolPtrInput `pulumi:"enableClientConnections"`
	// Boolean. Indicates whether the tenant allows custom domains in emails.
	EnableCustomDomainInEmails pulumi.BoolPtrInput `pulumi:"enableCustomDomainInEmails"`
	// Boolean. Indicates whether the tenant allows dynamic client registration.
	EnableDynamicClientRegistration pulumi.BoolPtrInput `pulumi:"enableDynamicClientRegistration"`
	// Boolean. Indicates whether to use the older v2 legacy logs search.
	EnableLegacyLogsSearchV2 pulumi.BoolPtrInput `pulumi:"enableLegacyLogsSearchV2"`
	// Boolean. Indicates whether advanced API Authorization scenarios are enabled.
	EnablePipeline2 pulumi.BoolPtrInput `pulumi:"enablePipeline2"`
	// Boolean. Indicates whether the public sign up process shows a userExists error if the user already exists.
	EnablePublicSignupUserExistsError pulumi.BoolPtrInput `pulumi:"enablePublicSignupUserExistsError"`
	// Boolean. Indicates whether the tenant uses universal login.
	UniversalLogin                 pulumi.BoolPtrInput `pulumi:"universalLogin"`
	UseScopeDescriptionsForConsent pulumi.BoolPtrInput `pulumi:"useScopeDescriptionsForConsent"`
}

func (TenantFlagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantFlags)(nil)).Elem()
}

func (i TenantFlagsArgs) ToTenantFlagsOutput() TenantFlagsOutput {
	return i.ToTenantFlagsOutputWithContext(context.Background())
}

func (i TenantFlagsArgs) ToTenantFlagsOutputWithContext(ctx context.Context) TenantFlagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsOutput)
}

func (i TenantFlagsArgs) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return i.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (i TenantFlagsArgs) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsOutput).ToTenantFlagsPtrOutputWithContext(ctx)
}

// TenantFlagsPtrInput is an input type that accepts TenantFlagsArgs, TenantFlagsPtr and TenantFlagsPtrOutput values.
// You can construct a concrete instance of `TenantFlagsPtrInput` via:
//
//          TenantFlagsArgs{...}
//
//  or:
//
//          nil
type TenantFlagsPtrInput interface {
	pulumi.Input

	ToTenantFlagsPtrOutput() TenantFlagsPtrOutput
	ToTenantFlagsPtrOutputWithContext(context.Context) TenantFlagsPtrOutput
}

type tenantFlagsPtrType TenantFlagsArgs

func TenantFlagsPtr(v *TenantFlagsArgs) TenantFlagsPtrInput {
	return (*tenantFlagsPtrType)(v)
}

func (*tenantFlagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantFlags)(nil)).Elem()
}

func (i *tenantFlagsPtrType) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return i.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (i *tenantFlagsPtrType) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsPtrOutput)
}

type TenantFlagsOutput struct{ *pulumi.OutputState }

func (TenantFlagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantFlags)(nil)).Elem()
}

func (o TenantFlagsOutput) ToTenantFlagsOutput() TenantFlagsOutput {
	return o
}

func (o TenantFlagsOutput) ToTenantFlagsOutputWithContext(ctx context.Context) TenantFlagsOutput {
	return o
}

func (o TenantFlagsOutput) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return o.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (o TenantFlagsOutput) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantFlags) *TenantFlags {
		return &v
	}).(TenantFlagsPtrOutput)
}

// Boolean. Indicated whether classic Universal Login prompts include additional security headers to prevent clickjacking.
func (o TenantFlagsOutput) DisableClickjackProtectionHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DisableClickjackProtectionHeaders }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether the APIs section is enabled for the tenant.
func (o TenantFlagsOutput) EnableApisSection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableApisSection }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether all current connections should be enabled when a new client is created.
func (o TenantFlagsOutput) EnableClientConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableClientConnections }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether the tenant allows custom domains in emails.
func (o TenantFlagsOutput) EnableCustomDomainInEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableCustomDomainInEmails }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether the tenant allows dynamic client registration.
func (o TenantFlagsOutput) EnableDynamicClientRegistration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableDynamicClientRegistration }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether to use the older v2 legacy logs search.
func (o TenantFlagsOutput) EnableLegacyLogsSearchV2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableLegacyLogsSearchV2 }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether advanced API Authorization scenarios are enabled.
func (o TenantFlagsOutput) EnablePipeline2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnablePipeline2 }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether the public sign up process shows a userExists error if the user already exists.
func (o TenantFlagsOutput) EnablePublicSignupUserExistsError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnablePublicSignupUserExistsError }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether the tenant uses universal login.
func (o TenantFlagsOutput) UniversalLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.UniversalLogin }).(pulumi.BoolPtrOutput)
}

func (o TenantFlagsOutput) UseScopeDescriptionsForConsent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.UseScopeDescriptionsForConsent }).(pulumi.BoolPtrOutput)
}

type TenantFlagsPtrOutput struct{ *pulumi.OutputState }

func (TenantFlagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantFlags)(nil)).Elem()
}

func (o TenantFlagsPtrOutput) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return o
}

func (o TenantFlagsPtrOutput) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return o
}

func (o TenantFlagsPtrOutput) Elem() TenantFlagsOutput {
	return o.ApplyT(func(v *TenantFlags) TenantFlags {
		if v != nil {
			return *v
		}
		var ret TenantFlags
		return ret
	}).(TenantFlagsOutput)
}

// Boolean. Indicated whether classic Universal Login prompts include additional security headers to prevent clickjacking.
func (o TenantFlagsPtrOutput) DisableClickjackProtectionHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DisableClickjackProtectionHeaders
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether the APIs section is enabled for the tenant.
func (o TenantFlagsPtrOutput) EnableApisSection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableApisSection
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether all current connections should be enabled when a new client is created.
func (o TenantFlagsPtrOutput) EnableClientConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableClientConnections
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether the tenant allows custom domains in emails.
func (o TenantFlagsPtrOutput) EnableCustomDomainInEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCustomDomainInEmails
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether the tenant allows dynamic client registration.
func (o TenantFlagsPtrOutput) EnableDynamicClientRegistration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDynamicClientRegistration
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether to use the older v2 legacy logs search.
func (o TenantFlagsPtrOutput) EnableLegacyLogsSearchV2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableLegacyLogsSearchV2
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether advanced API Authorization scenarios are enabled.
func (o TenantFlagsPtrOutput) EnablePipeline2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePipeline2
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether the public sign up process shows a userExists error if the user already exists.
func (o TenantFlagsPtrOutput) EnablePublicSignupUserExistsError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePublicSignupUserExistsError
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether the tenant uses universal login.
func (o TenantFlagsPtrOutput) UniversalLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.UniversalLogin
	}).(pulumi.BoolPtrOutput)
}

func (o TenantFlagsPtrOutput) UseScopeDescriptionsForConsent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.UseScopeDescriptionsForConsent
	}).(pulumi.BoolPtrOutput)
}

type TenantGuardianMfaPage struct {
	// Boolean. Indicates whether to use the custom Guardian page.
	Enabled bool `pulumi:"enabled"`
	// String, HTML format with supported Liquid syntax. Customized content of the Guardian page.
	Html string `pulumi:"html"`
}

// TenantGuardianMfaPageInput is an input type that accepts TenantGuardianMfaPageArgs and TenantGuardianMfaPageOutput values.
// You can construct a concrete instance of `TenantGuardianMfaPageInput` via:
//
//          TenantGuardianMfaPageArgs{...}
type TenantGuardianMfaPageInput interface {
	pulumi.Input

	ToTenantGuardianMfaPageOutput() TenantGuardianMfaPageOutput
	ToTenantGuardianMfaPageOutputWithContext(context.Context) TenantGuardianMfaPageOutput
}

type TenantGuardianMfaPageArgs struct {
	// Boolean. Indicates whether to use the custom Guardian page.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// String, HTML format with supported Liquid syntax. Customized content of the Guardian page.
	Html pulumi.StringInput `pulumi:"html"`
}

func (TenantGuardianMfaPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantGuardianMfaPage)(nil)).Elem()
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPageOutput() TenantGuardianMfaPageOutput {
	return i.ToTenantGuardianMfaPageOutputWithContext(context.Background())
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPageOutputWithContext(ctx context.Context) TenantGuardianMfaPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantGuardianMfaPageOutput)
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return i.ToTenantGuardianMfaPagePtrOutputWithContext(context.Background())
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantGuardianMfaPageOutput).ToTenantGuardianMfaPagePtrOutputWithContext(ctx)
}

// TenantGuardianMfaPagePtrInput is an input type that accepts TenantGuardianMfaPageArgs, TenantGuardianMfaPagePtr and TenantGuardianMfaPagePtrOutput values.
// You can construct a concrete instance of `TenantGuardianMfaPagePtrInput` via:
//
//          TenantGuardianMfaPageArgs{...}
//
//  or:
//
//          nil
type TenantGuardianMfaPagePtrInput interface {
	pulumi.Input

	ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput
	ToTenantGuardianMfaPagePtrOutputWithContext(context.Context) TenantGuardianMfaPagePtrOutput
}

type tenantGuardianMfaPagePtrType TenantGuardianMfaPageArgs

func TenantGuardianMfaPagePtr(v *TenantGuardianMfaPageArgs) TenantGuardianMfaPagePtrInput {
	return (*tenantGuardianMfaPagePtrType)(v)
}

func (*tenantGuardianMfaPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantGuardianMfaPage)(nil)).Elem()
}

func (i *tenantGuardianMfaPagePtrType) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return i.ToTenantGuardianMfaPagePtrOutputWithContext(context.Background())
}

func (i *tenantGuardianMfaPagePtrType) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantGuardianMfaPagePtrOutput)
}

type TenantGuardianMfaPageOutput struct{ *pulumi.OutputState }

func (TenantGuardianMfaPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantGuardianMfaPage)(nil)).Elem()
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPageOutput() TenantGuardianMfaPageOutput {
	return o
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPageOutputWithContext(ctx context.Context) TenantGuardianMfaPageOutput {
	return o
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return o.ToTenantGuardianMfaPagePtrOutputWithContext(context.Background())
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantGuardianMfaPage) *TenantGuardianMfaPage {
		return &v
	}).(TenantGuardianMfaPagePtrOutput)
}

// Boolean. Indicates whether to use the custom Guardian page.
func (o TenantGuardianMfaPageOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TenantGuardianMfaPage) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the Guardian page.
func (o TenantGuardianMfaPageOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v TenantGuardianMfaPage) string { return v.Html }).(pulumi.StringOutput)
}

type TenantGuardianMfaPagePtrOutput struct{ *pulumi.OutputState }

func (TenantGuardianMfaPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantGuardianMfaPage)(nil)).Elem()
}

func (o TenantGuardianMfaPagePtrOutput) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return o
}

func (o TenantGuardianMfaPagePtrOutput) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return o
}

func (o TenantGuardianMfaPagePtrOutput) Elem() TenantGuardianMfaPageOutput {
	return o.ApplyT(func(v *TenantGuardianMfaPage) TenantGuardianMfaPage {
		if v != nil {
			return *v
		}
		var ret TenantGuardianMfaPage
		return ret
	}).(TenantGuardianMfaPageOutput)
}

// Boolean. Indicates whether to use the custom Guardian page.
func (o TenantGuardianMfaPagePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantGuardianMfaPage) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the Guardian page.
func (o TenantGuardianMfaPagePtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantGuardianMfaPage) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

type TenantUniversalLogin struct {
	// List(Resource). Configuration settings for Universal Login colors. See Universal Login - Colors.
	Colors *TenantUniversalLoginColors `pulumi:"colors"`
}

// TenantUniversalLoginInput is an input type that accepts TenantUniversalLoginArgs and TenantUniversalLoginOutput values.
// You can construct a concrete instance of `TenantUniversalLoginInput` via:
//
//          TenantUniversalLoginArgs{...}
type TenantUniversalLoginInput interface {
	pulumi.Input

	ToTenantUniversalLoginOutput() TenantUniversalLoginOutput
	ToTenantUniversalLoginOutputWithContext(context.Context) TenantUniversalLoginOutput
}

type TenantUniversalLoginArgs struct {
	// List(Resource). Configuration settings for Universal Login colors. See Universal Login - Colors.
	Colors TenantUniversalLoginColorsPtrInput `pulumi:"colors"`
}

func (TenantUniversalLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLogin)(nil)).Elem()
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginOutput() TenantUniversalLoginOutput {
	return i.ToTenantUniversalLoginOutputWithContext(context.Background())
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginOutputWithContext(ctx context.Context) TenantUniversalLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginOutput)
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return i.ToTenantUniversalLoginPtrOutputWithContext(context.Background())
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginOutput).ToTenantUniversalLoginPtrOutputWithContext(ctx)
}

// TenantUniversalLoginPtrInput is an input type that accepts TenantUniversalLoginArgs, TenantUniversalLoginPtr and TenantUniversalLoginPtrOutput values.
// You can construct a concrete instance of `TenantUniversalLoginPtrInput` via:
//
//          TenantUniversalLoginArgs{...}
//
//  or:
//
//          nil
type TenantUniversalLoginPtrInput interface {
	pulumi.Input

	ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput
	ToTenantUniversalLoginPtrOutputWithContext(context.Context) TenantUniversalLoginPtrOutput
}

type tenantUniversalLoginPtrType TenantUniversalLoginArgs

func TenantUniversalLoginPtr(v *TenantUniversalLoginArgs) TenantUniversalLoginPtrInput {
	return (*tenantUniversalLoginPtrType)(v)
}

func (*tenantUniversalLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLogin)(nil)).Elem()
}

func (i *tenantUniversalLoginPtrType) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return i.ToTenantUniversalLoginPtrOutputWithContext(context.Background())
}

func (i *tenantUniversalLoginPtrType) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginPtrOutput)
}

type TenantUniversalLoginOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLogin)(nil)).Elem()
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginOutput() TenantUniversalLoginOutput {
	return o
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginOutputWithContext(ctx context.Context) TenantUniversalLoginOutput {
	return o
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return o.ToTenantUniversalLoginPtrOutputWithContext(context.Background())
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantUniversalLogin) *TenantUniversalLogin {
		return &v
	}).(TenantUniversalLoginPtrOutput)
}

// List(Resource). Configuration settings for Universal Login colors. See Universal Login - Colors.
func (o TenantUniversalLoginOutput) Colors() TenantUniversalLoginColorsPtrOutput {
	return o.ApplyT(func(v TenantUniversalLogin) *TenantUniversalLoginColors { return v.Colors }).(TenantUniversalLoginColorsPtrOutput)
}

type TenantUniversalLoginPtrOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLogin)(nil)).Elem()
}

func (o TenantUniversalLoginPtrOutput) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return o
}

func (o TenantUniversalLoginPtrOutput) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return o
}

func (o TenantUniversalLoginPtrOutput) Elem() TenantUniversalLoginOutput {
	return o.ApplyT(func(v *TenantUniversalLogin) TenantUniversalLogin {
		if v != nil {
			return *v
		}
		var ret TenantUniversalLogin
		return ret
	}).(TenantUniversalLoginOutput)
}

// List(Resource). Configuration settings for Universal Login colors. See Universal Login - Colors.
func (o TenantUniversalLoginPtrOutput) Colors() TenantUniversalLoginColorsPtrOutput {
	return o.ApplyT(func(v *TenantUniversalLogin) *TenantUniversalLoginColors {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TenantUniversalLoginColorsPtrOutput)
}

type TenantUniversalLoginColors struct {
	// String, Hexadecimal. Background color of login pages.
	PageBackground *string `pulumi:"pageBackground"`
	// String, Hexadecimal. Primary button background color.
	Primary *string `pulumi:"primary"`
}

// TenantUniversalLoginColorsInput is an input type that accepts TenantUniversalLoginColorsArgs and TenantUniversalLoginColorsOutput values.
// You can construct a concrete instance of `TenantUniversalLoginColorsInput` via:
//
//          TenantUniversalLoginColorsArgs{...}
type TenantUniversalLoginColorsInput interface {
	pulumi.Input

	ToTenantUniversalLoginColorsOutput() TenantUniversalLoginColorsOutput
	ToTenantUniversalLoginColorsOutputWithContext(context.Context) TenantUniversalLoginColorsOutput
}

type TenantUniversalLoginColorsArgs struct {
	// String, Hexadecimal. Background color of login pages.
	PageBackground pulumi.StringPtrInput `pulumi:"pageBackground"`
	// String, Hexadecimal. Primary button background color.
	Primary pulumi.StringPtrInput `pulumi:"primary"`
}

func (TenantUniversalLoginColorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLoginColors)(nil)).Elem()
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsOutput() TenantUniversalLoginColorsOutput {
	return i.ToTenantUniversalLoginColorsOutputWithContext(context.Background())
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsOutputWithContext(ctx context.Context) TenantUniversalLoginColorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginColorsOutput)
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return i.ToTenantUniversalLoginColorsPtrOutputWithContext(context.Background())
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginColorsOutput).ToTenantUniversalLoginColorsPtrOutputWithContext(ctx)
}

// TenantUniversalLoginColorsPtrInput is an input type that accepts TenantUniversalLoginColorsArgs, TenantUniversalLoginColorsPtr and TenantUniversalLoginColorsPtrOutput values.
// You can construct a concrete instance of `TenantUniversalLoginColorsPtrInput` via:
//
//          TenantUniversalLoginColorsArgs{...}
//
//  or:
//
//          nil
type TenantUniversalLoginColorsPtrInput interface {
	pulumi.Input

	ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput
	ToTenantUniversalLoginColorsPtrOutputWithContext(context.Context) TenantUniversalLoginColorsPtrOutput
}

type tenantUniversalLoginColorsPtrType TenantUniversalLoginColorsArgs

func TenantUniversalLoginColorsPtr(v *TenantUniversalLoginColorsArgs) TenantUniversalLoginColorsPtrInput {
	return (*tenantUniversalLoginColorsPtrType)(v)
}

func (*tenantUniversalLoginColorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLoginColors)(nil)).Elem()
}

func (i *tenantUniversalLoginColorsPtrType) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return i.ToTenantUniversalLoginColorsPtrOutputWithContext(context.Background())
}

func (i *tenantUniversalLoginColorsPtrType) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginColorsPtrOutput)
}

type TenantUniversalLoginColorsOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginColorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLoginColors)(nil)).Elem()
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsOutput() TenantUniversalLoginColorsOutput {
	return o
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsOutputWithContext(ctx context.Context) TenantUniversalLoginColorsOutput {
	return o
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return o.ToTenantUniversalLoginColorsPtrOutputWithContext(context.Background())
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantUniversalLoginColors) *TenantUniversalLoginColors {
		return &v
	}).(TenantUniversalLoginColorsPtrOutput)
}

// String, Hexadecimal. Background color of login pages.
func (o TenantUniversalLoginColorsOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantUniversalLoginColors) *string { return v.PageBackground }).(pulumi.StringPtrOutput)
}

// String, Hexadecimal. Primary button background color.
func (o TenantUniversalLoginColorsOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantUniversalLoginColors) *string { return v.Primary }).(pulumi.StringPtrOutput)
}

type TenantUniversalLoginColorsPtrOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginColorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLoginColors)(nil)).Elem()
}

func (o TenantUniversalLoginColorsPtrOutput) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return o
}

func (o TenantUniversalLoginColorsPtrOutput) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return o
}

func (o TenantUniversalLoginColorsPtrOutput) Elem() TenantUniversalLoginColorsOutput {
	return o.ApplyT(func(v *TenantUniversalLoginColors) TenantUniversalLoginColors {
		if v != nil {
			return *v
		}
		var ret TenantUniversalLoginColors
		return ret
	}).(TenantUniversalLoginColorsOutput)
}

// String, Hexadecimal. Background color of login pages.
func (o TenantUniversalLoginColorsPtrOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantUniversalLoginColors) *string {
		if v == nil {
			return nil
		}
		return v.PageBackground
	}).(pulumi.StringPtrOutput)
}

// String, Hexadecimal. Primary button background color.
func (o TenantUniversalLoginColorsPtrOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantUniversalLoginColors) *string {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.StringPtrOutput)
}

type TriggerBindingAction struct {
	// The name of an action.
	DisplayName string `pulumi:"displayName"`
	// Trigger ID.
	Id string `pulumi:"id"`
}

// TriggerBindingActionInput is an input type that accepts TriggerBindingActionArgs and TriggerBindingActionOutput values.
// You can construct a concrete instance of `TriggerBindingActionInput` via:
//
//          TriggerBindingActionArgs{...}
type TriggerBindingActionInput interface {
	pulumi.Input

	ToTriggerBindingActionOutput() TriggerBindingActionOutput
	ToTriggerBindingActionOutputWithContext(context.Context) TriggerBindingActionOutput
}

type TriggerBindingActionArgs struct {
	// The name of an action.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Trigger ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (TriggerBindingActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBindingAction)(nil)).Elem()
}

func (i TriggerBindingActionArgs) ToTriggerBindingActionOutput() TriggerBindingActionOutput {
	return i.ToTriggerBindingActionOutputWithContext(context.Background())
}

func (i TriggerBindingActionArgs) ToTriggerBindingActionOutputWithContext(ctx context.Context) TriggerBindingActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBindingActionOutput)
}

// TriggerBindingActionArrayInput is an input type that accepts TriggerBindingActionArray and TriggerBindingActionArrayOutput values.
// You can construct a concrete instance of `TriggerBindingActionArrayInput` via:
//
//          TriggerBindingActionArray{ TriggerBindingActionArgs{...} }
type TriggerBindingActionArrayInput interface {
	pulumi.Input

	ToTriggerBindingActionArrayOutput() TriggerBindingActionArrayOutput
	ToTriggerBindingActionArrayOutputWithContext(context.Context) TriggerBindingActionArrayOutput
}

type TriggerBindingActionArray []TriggerBindingActionInput

func (TriggerBindingActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBindingAction)(nil)).Elem()
}

func (i TriggerBindingActionArray) ToTriggerBindingActionArrayOutput() TriggerBindingActionArrayOutput {
	return i.ToTriggerBindingActionArrayOutputWithContext(context.Background())
}

func (i TriggerBindingActionArray) ToTriggerBindingActionArrayOutputWithContext(ctx context.Context) TriggerBindingActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBindingActionArrayOutput)
}

type TriggerBindingActionOutput struct{ *pulumi.OutputState }

func (TriggerBindingActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBindingAction)(nil)).Elem()
}

func (o TriggerBindingActionOutput) ToTriggerBindingActionOutput() TriggerBindingActionOutput {
	return o
}

func (o TriggerBindingActionOutput) ToTriggerBindingActionOutputWithContext(ctx context.Context) TriggerBindingActionOutput {
	return o
}

// The name of an action.
func (o TriggerBindingActionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBindingAction) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Trigger ID.
func (o TriggerBindingActionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBindingAction) string { return v.Id }).(pulumi.StringOutput)
}

type TriggerBindingActionArrayOutput struct{ *pulumi.OutputState }

func (TriggerBindingActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBindingAction)(nil)).Elem()
}

func (o TriggerBindingActionArrayOutput) ToTriggerBindingActionArrayOutput() TriggerBindingActionArrayOutput {
	return o
}

func (o TriggerBindingActionArrayOutput) ToTriggerBindingActionArrayOutputWithContext(ctx context.Context) TriggerBindingActionArrayOutput {
	return o
}

func (o TriggerBindingActionArrayOutput) Index(i pulumi.IntInput) TriggerBindingActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBindingAction {
		return vs[0].([]TriggerBindingAction)[vs[1].(int)]
	}).(TriggerBindingActionOutput)
}

type GetClientAddon struct {
	Aws                  map[string]interface{} `pulumi:"aws"`
	AzureBlob            map[string]interface{} `pulumi:"azureBlob"`
	AzureSb              map[string]interface{} `pulumi:"azureSb"`
	Box                  map[string]interface{} `pulumi:"box"`
	Cloudbees            map[string]interface{} `pulumi:"cloudbees"`
	Concur               map[string]interface{} `pulumi:"concur"`
	Dropbox              map[string]interface{} `pulumi:"dropbox"`
	Echosign             map[string]interface{} `pulumi:"echosign"`
	Egnyte               map[string]interface{} `pulumi:"egnyte"`
	Firebase             map[string]interface{} `pulumi:"firebase"`
	Layer                map[string]interface{} `pulumi:"layer"`
	Mscrm                map[string]interface{} `pulumi:"mscrm"`
	Newrelic             map[string]interface{} `pulumi:"newrelic"`
	Office365            map[string]interface{} `pulumi:"office365"`
	Rms                  map[string]interface{} `pulumi:"rms"`
	Salesforce           map[string]interface{} `pulumi:"salesforce"`
	SalesforceApi        map[string]interface{} `pulumi:"salesforceApi"`
	SalesforceSandboxApi map[string]interface{} `pulumi:"salesforceSandboxApi"`
	Samlps               []GetClientAddonSamlp  `pulumi:"samlps"`
	SapApi               map[string]interface{} `pulumi:"sapApi"`
	Sentry               map[string]interface{} `pulumi:"sentry"`
	Sharepoint           map[string]interface{} `pulumi:"sharepoint"`
	Slack                map[string]interface{} `pulumi:"slack"`
	Springcm             map[string]interface{} `pulumi:"springcm"`
	Wams                 map[string]interface{} `pulumi:"wams"`
	Wsfed                map[string]interface{} `pulumi:"wsfed"`
	Zendesk              map[string]interface{} `pulumi:"zendesk"`
	Zoom                 map[string]interface{} `pulumi:"zoom"`
}

// GetClientAddonInput is an input type that accepts GetClientAddonArgs and GetClientAddonOutput values.
// You can construct a concrete instance of `GetClientAddonInput` via:
//
//          GetClientAddonArgs{...}
type GetClientAddonInput interface {
	pulumi.Input

	ToGetClientAddonOutput() GetClientAddonOutput
	ToGetClientAddonOutputWithContext(context.Context) GetClientAddonOutput
}

type GetClientAddonArgs struct {
	Aws                  pulumi.MapInput               `pulumi:"aws"`
	AzureBlob            pulumi.MapInput               `pulumi:"azureBlob"`
	AzureSb              pulumi.MapInput               `pulumi:"azureSb"`
	Box                  pulumi.MapInput               `pulumi:"box"`
	Cloudbees            pulumi.MapInput               `pulumi:"cloudbees"`
	Concur               pulumi.MapInput               `pulumi:"concur"`
	Dropbox              pulumi.MapInput               `pulumi:"dropbox"`
	Echosign             pulumi.MapInput               `pulumi:"echosign"`
	Egnyte               pulumi.MapInput               `pulumi:"egnyte"`
	Firebase             pulumi.MapInput               `pulumi:"firebase"`
	Layer                pulumi.MapInput               `pulumi:"layer"`
	Mscrm                pulumi.MapInput               `pulumi:"mscrm"`
	Newrelic             pulumi.MapInput               `pulumi:"newrelic"`
	Office365            pulumi.MapInput               `pulumi:"office365"`
	Rms                  pulumi.MapInput               `pulumi:"rms"`
	Salesforce           pulumi.MapInput               `pulumi:"salesforce"`
	SalesforceApi        pulumi.MapInput               `pulumi:"salesforceApi"`
	SalesforceSandboxApi pulumi.MapInput               `pulumi:"salesforceSandboxApi"`
	Samlps               GetClientAddonSamlpArrayInput `pulumi:"samlps"`
	SapApi               pulumi.MapInput               `pulumi:"sapApi"`
	Sentry               pulumi.MapInput               `pulumi:"sentry"`
	Sharepoint           pulumi.MapInput               `pulumi:"sharepoint"`
	Slack                pulumi.MapInput               `pulumi:"slack"`
	Springcm             pulumi.MapInput               `pulumi:"springcm"`
	Wams                 pulumi.MapInput               `pulumi:"wams"`
	Wsfed                pulumi.MapInput               `pulumi:"wsfed"`
	Zendesk              pulumi.MapInput               `pulumi:"zendesk"`
	Zoom                 pulumi.MapInput               `pulumi:"zoom"`
}

func (GetClientAddonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddon)(nil)).Elem()
}

func (i GetClientAddonArgs) ToGetClientAddonOutput() GetClientAddonOutput {
	return i.ToGetClientAddonOutputWithContext(context.Background())
}

func (i GetClientAddonArgs) ToGetClientAddonOutputWithContext(ctx context.Context) GetClientAddonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonOutput)
}

// GetClientAddonArrayInput is an input type that accepts GetClientAddonArray and GetClientAddonArrayOutput values.
// You can construct a concrete instance of `GetClientAddonArrayInput` via:
//
//          GetClientAddonArray{ GetClientAddonArgs{...} }
type GetClientAddonArrayInput interface {
	pulumi.Input

	ToGetClientAddonArrayOutput() GetClientAddonArrayOutput
	ToGetClientAddonArrayOutputWithContext(context.Context) GetClientAddonArrayOutput
}

type GetClientAddonArray []GetClientAddonInput

func (GetClientAddonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddon)(nil)).Elem()
}

func (i GetClientAddonArray) ToGetClientAddonArrayOutput() GetClientAddonArrayOutput {
	return i.ToGetClientAddonArrayOutputWithContext(context.Background())
}

func (i GetClientAddonArray) ToGetClientAddonArrayOutputWithContext(ctx context.Context) GetClientAddonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonArrayOutput)
}

type GetClientAddonOutput struct{ *pulumi.OutputState }

func (GetClientAddonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddon)(nil)).Elem()
}

func (o GetClientAddonOutput) ToGetClientAddonOutput() GetClientAddonOutput {
	return o
}

func (o GetClientAddonOutput) ToGetClientAddonOutputWithContext(ctx context.Context) GetClientAddonOutput {
	return o
}

func (o GetClientAddonOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Aws }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.AzureBlob }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.AzureSb }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Box }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Cloudbees }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Concur }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Dropbox }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Echosign }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Egnyte }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Firebase }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Layer }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Mscrm }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Newrelic }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Office365 }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Rms }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Salesforce }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.SalesforceApi }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.SalesforceSandboxApi }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Samlps() GetClientAddonSamlpArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSamlp { return v.Samlps }).(GetClientAddonSamlpArrayOutput)
}

func (o GetClientAddonOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.SapApi }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Sentry }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Sharepoint }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Slack }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Springcm }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Wams }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Wsfed }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Zendesk }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Zoom }).(pulumi.MapOutput)
}

type GetClientAddonArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddon)(nil)).Elem()
}

func (o GetClientAddonArrayOutput) ToGetClientAddonArrayOutput() GetClientAddonArrayOutput {
	return o
}

func (o GetClientAddonArrayOutput) ToGetClientAddonArrayOutputWithContext(ctx context.Context) GetClientAddonArrayOutput {
	return o
}

func (o GetClientAddonArrayOutput) Index(i pulumi.IntInput) GetClientAddonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddon {
		return vs[0].([]GetClientAddon)[vs[1].(int)]
	}).(GetClientAddonOutput)
}

type GetClientAddonSamlp struct {
	Audience                       string                 `pulumi:"audience"`
	AuthnContextClassRef           string                 `pulumi:"authnContextClassRef"`
	Binding                        string                 `pulumi:"binding"`
	CreateUpnClaim                 bool                   `pulumi:"createUpnClaim"`
	Destination                    string                 `pulumi:"destination"`
	DigestAlgorithm                string                 `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     bool                   `pulumi:"includeAttributeNameFormat"`
	LifetimeInSeconds              int                    `pulumi:"lifetimeInSeconds"`
	Logout                         map[string]interface{} `pulumi:"logout"`
	MapIdentities                  bool                   `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           bool                   `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       map[string]interface{} `pulumi:"mappings"`
	NameIdentifierFormat           string                 `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           []string               `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping bool                   `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      string                 `pulumi:"recipient"`
	SignResponse                   bool                   `pulumi:"signResponse"`
	SignatureAlgorithm             string                 `pulumi:"signatureAlgorithm"`
	SigningCert                    string                 `pulumi:"signingCert"`
	TypedAttributes                bool                   `pulumi:"typedAttributes"`
}

// GetClientAddonSamlpInput is an input type that accepts GetClientAddonSamlpArgs and GetClientAddonSamlpOutput values.
// You can construct a concrete instance of `GetClientAddonSamlpInput` via:
//
//          GetClientAddonSamlpArgs{...}
type GetClientAddonSamlpInput interface {
	pulumi.Input

	ToGetClientAddonSamlpOutput() GetClientAddonSamlpOutput
	ToGetClientAddonSamlpOutputWithContext(context.Context) GetClientAddonSamlpOutput
}

type GetClientAddonSamlpArgs struct {
	Audience                       pulumi.StringInput      `pulumi:"audience"`
	AuthnContextClassRef           pulumi.StringInput      `pulumi:"authnContextClassRef"`
	Binding                        pulumi.StringInput      `pulumi:"binding"`
	CreateUpnClaim                 pulumi.BoolInput        `pulumi:"createUpnClaim"`
	Destination                    pulumi.StringInput      `pulumi:"destination"`
	DigestAlgorithm                pulumi.StringInput      `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     pulumi.BoolInput        `pulumi:"includeAttributeNameFormat"`
	LifetimeInSeconds              pulumi.IntInput         `pulumi:"lifetimeInSeconds"`
	Logout                         pulumi.MapInput         `pulumi:"logout"`
	MapIdentities                  pulumi.BoolInput        `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           pulumi.BoolInput        `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       pulumi.MapInput         `pulumi:"mappings"`
	NameIdentifierFormat           pulumi.StringInput      `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           pulumi.StringArrayInput `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping pulumi.BoolInput        `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      pulumi.StringInput      `pulumi:"recipient"`
	SignResponse                   pulumi.BoolInput        `pulumi:"signResponse"`
	SignatureAlgorithm             pulumi.StringInput      `pulumi:"signatureAlgorithm"`
	SigningCert                    pulumi.StringInput      `pulumi:"signingCert"`
	TypedAttributes                pulumi.BoolInput        `pulumi:"typedAttributes"`
}

func (GetClientAddonSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSamlp)(nil)).Elem()
}

func (i GetClientAddonSamlpArgs) ToGetClientAddonSamlpOutput() GetClientAddonSamlpOutput {
	return i.ToGetClientAddonSamlpOutputWithContext(context.Background())
}

func (i GetClientAddonSamlpArgs) ToGetClientAddonSamlpOutputWithContext(ctx context.Context) GetClientAddonSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSamlpOutput)
}

// GetClientAddonSamlpArrayInput is an input type that accepts GetClientAddonSamlpArray and GetClientAddonSamlpArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSamlpArrayInput` via:
//
//          GetClientAddonSamlpArray{ GetClientAddonSamlpArgs{...} }
type GetClientAddonSamlpArrayInput interface {
	pulumi.Input

	ToGetClientAddonSamlpArrayOutput() GetClientAddonSamlpArrayOutput
	ToGetClientAddonSamlpArrayOutputWithContext(context.Context) GetClientAddonSamlpArrayOutput
}

type GetClientAddonSamlpArray []GetClientAddonSamlpInput

func (GetClientAddonSamlpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSamlp)(nil)).Elem()
}

func (i GetClientAddonSamlpArray) ToGetClientAddonSamlpArrayOutput() GetClientAddonSamlpArrayOutput {
	return i.ToGetClientAddonSamlpArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSamlpArray) ToGetClientAddonSamlpArrayOutputWithContext(ctx context.Context) GetClientAddonSamlpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSamlpArrayOutput)
}

type GetClientAddonSamlpOutput struct{ *pulumi.OutputState }

func (GetClientAddonSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSamlp)(nil)).Elem()
}

func (o GetClientAddonSamlpOutput) ToGetClientAddonSamlpOutput() GetClientAddonSamlpOutput {
	return o
}

func (o GetClientAddonSamlpOutput) ToGetClientAddonSamlpOutputWithContext(ctx context.Context) GetClientAddonSamlpOutput {
	return o
}

func (o GetClientAddonSamlpOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Audience }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) AuthnContextClassRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.AuthnContextClassRef }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) Binding() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Binding }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) CreateUpnClaim() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.CreateUpnClaim }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) DigestAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.DigestAlgorithm }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetClientAddonSamlpOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) map[string]interface{} { return v.Logout }).(pulumi.MapOutput)
}

func (o GetClientAddonSamlpOutput) MapIdentities() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.MapIdentities }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

func (o GetClientAddonSamlpOutput) NameIdentifierFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.NameIdentifierFormat }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

func (o GetClientAddonSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Recipient() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Recipient }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) SignResponse() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.SignResponse }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) SigningCert() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.SigningCert }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) TypedAttributes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.TypedAttributes }).(pulumi.BoolOutput)
}

type GetClientAddonSamlpArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSamlpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSamlp)(nil)).Elem()
}

func (o GetClientAddonSamlpArrayOutput) ToGetClientAddonSamlpArrayOutput() GetClientAddonSamlpArrayOutput {
	return o
}

func (o GetClientAddonSamlpArrayOutput) ToGetClientAddonSamlpArrayOutputWithContext(ctx context.Context) GetClientAddonSamlpArrayOutput {
	return o
}

func (o GetClientAddonSamlpArrayOutput) Index(i pulumi.IntInput) GetClientAddonSamlpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSamlp {
		return vs[0].([]GetClientAddonSamlp)[vs[1].(int)]
	}).(GetClientAddonSamlpOutput)
}

type GetClientJwtConfiguration struct {
	Alg               string            `pulumi:"alg"`
	LifetimeInSeconds int               `pulumi:"lifetimeInSeconds"`
	Scopes            map[string]string `pulumi:"scopes"`
	SecretEncoded     bool              `pulumi:"secretEncoded"`
}

// GetClientJwtConfigurationInput is an input type that accepts GetClientJwtConfigurationArgs and GetClientJwtConfigurationOutput values.
// You can construct a concrete instance of `GetClientJwtConfigurationInput` via:
//
//          GetClientJwtConfigurationArgs{...}
type GetClientJwtConfigurationInput interface {
	pulumi.Input

	ToGetClientJwtConfigurationOutput() GetClientJwtConfigurationOutput
	ToGetClientJwtConfigurationOutputWithContext(context.Context) GetClientJwtConfigurationOutput
}

type GetClientJwtConfigurationArgs struct {
	Alg               pulumi.StringInput    `pulumi:"alg"`
	LifetimeInSeconds pulumi.IntInput       `pulumi:"lifetimeInSeconds"`
	Scopes            pulumi.StringMapInput `pulumi:"scopes"`
	SecretEncoded     pulumi.BoolInput      `pulumi:"secretEncoded"`
}

func (GetClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientJwtConfiguration)(nil)).Elem()
}

func (i GetClientJwtConfigurationArgs) ToGetClientJwtConfigurationOutput() GetClientJwtConfigurationOutput {
	return i.ToGetClientJwtConfigurationOutputWithContext(context.Background())
}

func (i GetClientJwtConfigurationArgs) ToGetClientJwtConfigurationOutputWithContext(ctx context.Context) GetClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientJwtConfigurationOutput)
}

// GetClientJwtConfigurationArrayInput is an input type that accepts GetClientJwtConfigurationArray and GetClientJwtConfigurationArrayOutput values.
// You can construct a concrete instance of `GetClientJwtConfigurationArrayInput` via:
//
//          GetClientJwtConfigurationArray{ GetClientJwtConfigurationArgs{...} }
type GetClientJwtConfigurationArrayInput interface {
	pulumi.Input

	ToGetClientJwtConfigurationArrayOutput() GetClientJwtConfigurationArrayOutput
	ToGetClientJwtConfigurationArrayOutputWithContext(context.Context) GetClientJwtConfigurationArrayOutput
}

type GetClientJwtConfigurationArray []GetClientJwtConfigurationInput

func (GetClientJwtConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientJwtConfiguration)(nil)).Elem()
}

func (i GetClientJwtConfigurationArray) ToGetClientJwtConfigurationArrayOutput() GetClientJwtConfigurationArrayOutput {
	return i.ToGetClientJwtConfigurationArrayOutputWithContext(context.Background())
}

func (i GetClientJwtConfigurationArray) ToGetClientJwtConfigurationArrayOutputWithContext(ctx context.Context) GetClientJwtConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientJwtConfigurationArrayOutput)
}

type GetClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (GetClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientJwtConfiguration)(nil)).Elem()
}

func (o GetClientJwtConfigurationOutput) ToGetClientJwtConfigurationOutput() GetClientJwtConfigurationOutput {
	return o
}

func (o GetClientJwtConfigurationOutput) ToGetClientJwtConfigurationOutputWithContext(ctx context.Context) GetClientJwtConfigurationOutput {
	return o
}

func (o GetClientJwtConfigurationOutput) Alg() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) string { return v.Alg }).(pulumi.StringOutput)
}

func (o GetClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

func (o GetClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) bool { return v.SecretEncoded }).(pulumi.BoolOutput)
}

type GetClientJwtConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetClientJwtConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientJwtConfiguration)(nil)).Elem()
}

func (o GetClientJwtConfigurationArrayOutput) ToGetClientJwtConfigurationArrayOutput() GetClientJwtConfigurationArrayOutput {
	return o
}

func (o GetClientJwtConfigurationArrayOutput) ToGetClientJwtConfigurationArrayOutputWithContext(ctx context.Context) GetClientJwtConfigurationArrayOutput {
	return o
}

func (o GetClientJwtConfigurationArrayOutput) Index(i pulumi.IntInput) GetClientJwtConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientJwtConfiguration {
		return vs[0].([]GetClientJwtConfiguration)[vs[1].(int)]
	}).(GetClientJwtConfigurationOutput)
}

type GetClientMobile struct {
	Androids []GetClientMobileAndroid `pulumi:"androids"`
	Ios      []GetClientMobileIo      `pulumi:"ios"`
}

// GetClientMobileInput is an input type that accepts GetClientMobileArgs and GetClientMobileOutput values.
// You can construct a concrete instance of `GetClientMobileInput` via:
//
//          GetClientMobileArgs{...}
type GetClientMobileInput interface {
	pulumi.Input

	ToGetClientMobileOutput() GetClientMobileOutput
	ToGetClientMobileOutputWithContext(context.Context) GetClientMobileOutput
}

type GetClientMobileArgs struct {
	Androids GetClientMobileAndroidArrayInput `pulumi:"androids"`
	Ios      GetClientMobileIoArrayInput      `pulumi:"ios"`
}

func (GetClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobile)(nil)).Elem()
}

func (i GetClientMobileArgs) ToGetClientMobileOutput() GetClientMobileOutput {
	return i.ToGetClientMobileOutputWithContext(context.Background())
}

func (i GetClientMobileArgs) ToGetClientMobileOutputWithContext(ctx context.Context) GetClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileOutput)
}

// GetClientMobileArrayInput is an input type that accepts GetClientMobileArray and GetClientMobileArrayOutput values.
// You can construct a concrete instance of `GetClientMobileArrayInput` via:
//
//          GetClientMobileArray{ GetClientMobileArgs{...} }
type GetClientMobileArrayInput interface {
	pulumi.Input

	ToGetClientMobileArrayOutput() GetClientMobileArrayOutput
	ToGetClientMobileArrayOutputWithContext(context.Context) GetClientMobileArrayOutput
}

type GetClientMobileArray []GetClientMobileInput

func (GetClientMobileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobile)(nil)).Elem()
}

func (i GetClientMobileArray) ToGetClientMobileArrayOutput() GetClientMobileArrayOutput {
	return i.ToGetClientMobileArrayOutputWithContext(context.Background())
}

func (i GetClientMobileArray) ToGetClientMobileArrayOutputWithContext(ctx context.Context) GetClientMobileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileArrayOutput)
}

type GetClientMobileOutput struct{ *pulumi.OutputState }

func (GetClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobile)(nil)).Elem()
}

func (o GetClientMobileOutput) ToGetClientMobileOutput() GetClientMobileOutput {
	return o
}

func (o GetClientMobileOutput) ToGetClientMobileOutputWithContext(ctx context.Context) GetClientMobileOutput {
	return o
}

func (o GetClientMobileOutput) Androids() GetClientMobileAndroidArrayOutput {
	return o.ApplyT(func(v GetClientMobile) []GetClientMobileAndroid { return v.Androids }).(GetClientMobileAndroidArrayOutput)
}

func (o GetClientMobileOutput) Ios() GetClientMobileIoArrayOutput {
	return o.ApplyT(func(v GetClientMobile) []GetClientMobileIo { return v.Ios }).(GetClientMobileIoArrayOutput)
}

type GetClientMobileArrayOutput struct{ *pulumi.OutputState }

func (GetClientMobileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobile)(nil)).Elem()
}

func (o GetClientMobileArrayOutput) ToGetClientMobileArrayOutput() GetClientMobileArrayOutput {
	return o
}

func (o GetClientMobileArrayOutput) ToGetClientMobileArrayOutputWithContext(ctx context.Context) GetClientMobileArrayOutput {
	return o
}

func (o GetClientMobileArrayOutput) Index(i pulumi.IntInput) GetClientMobileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientMobile {
		return vs[0].([]GetClientMobile)[vs[1].(int)]
	}).(GetClientMobileOutput)
}

type GetClientMobileAndroid struct {
	AppPackageName         string   `pulumi:"appPackageName"`
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// GetClientMobileAndroidInput is an input type that accepts GetClientMobileAndroidArgs and GetClientMobileAndroidOutput values.
// You can construct a concrete instance of `GetClientMobileAndroidInput` via:
//
//          GetClientMobileAndroidArgs{...}
type GetClientMobileAndroidInput interface {
	pulumi.Input

	ToGetClientMobileAndroidOutput() GetClientMobileAndroidOutput
	ToGetClientMobileAndroidOutputWithContext(context.Context) GetClientMobileAndroidOutput
}

type GetClientMobileAndroidArgs struct {
	AppPackageName         pulumi.StringInput      `pulumi:"appPackageName"`
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (GetClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileAndroid)(nil)).Elem()
}

func (i GetClientMobileAndroidArgs) ToGetClientMobileAndroidOutput() GetClientMobileAndroidOutput {
	return i.ToGetClientMobileAndroidOutputWithContext(context.Background())
}

func (i GetClientMobileAndroidArgs) ToGetClientMobileAndroidOutputWithContext(ctx context.Context) GetClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileAndroidOutput)
}

// GetClientMobileAndroidArrayInput is an input type that accepts GetClientMobileAndroidArray and GetClientMobileAndroidArrayOutput values.
// You can construct a concrete instance of `GetClientMobileAndroidArrayInput` via:
//
//          GetClientMobileAndroidArray{ GetClientMobileAndroidArgs{...} }
type GetClientMobileAndroidArrayInput interface {
	pulumi.Input

	ToGetClientMobileAndroidArrayOutput() GetClientMobileAndroidArrayOutput
	ToGetClientMobileAndroidArrayOutputWithContext(context.Context) GetClientMobileAndroidArrayOutput
}

type GetClientMobileAndroidArray []GetClientMobileAndroidInput

func (GetClientMobileAndroidArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileAndroid)(nil)).Elem()
}

func (i GetClientMobileAndroidArray) ToGetClientMobileAndroidArrayOutput() GetClientMobileAndroidArrayOutput {
	return i.ToGetClientMobileAndroidArrayOutputWithContext(context.Background())
}

func (i GetClientMobileAndroidArray) ToGetClientMobileAndroidArrayOutputWithContext(ctx context.Context) GetClientMobileAndroidArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileAndroidArrayOutput)
}

type GetClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (GetClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileAndroid)(nil)).Elem()
}

func (o GetClientMobileAndroidOutput) ToGetClientMobileAndroidOutput() GetClientMobileAndroidOutput {
	return o
}

func (o GetClientMobileAndroidOutput) ToGetClientMobileAndroidOutputWithContext(ctx context.Context) GetClientMobileAndroidOutput {
	return o
}

func (o GetClientMobileAndroidOutput) AppPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientMobileAndroid) string { return v.AppPackageName }).(pulumi.StringOutput)
}

func (o GetClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type GetClientMobileAndroidArrayOutput struct{ *pulumi.OutputState }

func (GetClientMobileAndroidArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileAndroid)(nil)).Elem()
}

func (o GetClientMobileAndroidArrayOutput) ToGetClientMobileAndroidArrayOutput() GetClientMobileAndroidArrayOutput {
	return o
}

func (o GetClientMobileAndroidArrayOutput) ToGetClientMobileAndroidArrayOutputWithContext(ctx context.Context) GetClientMobileAndroidArrayOutput {
	return o
}

func (o GetClientMobileAndroidArrayOutput) Index(i pulumi.IntInput) GetClientMobileAndroidOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientMobileAndroid {
		return vs[0].([]GetClientMobileAndroid)[vs[1].(int)]
	}).(GetClientMobileAndroidOutput)
}

type GetClientMobileIo struct {
	AppBundleIdentifier string `pulumi:"appBundleIdentifier"`
	TeamId              string `pulumi:"teamId"`
}

// GetClientMobileIoInput is an input type that accepts GetClientMobileIoArgs and GetClientMobileIoOutput values.
// You can construct a concrete instance of `GetClientMobileIoInput` via:
//
//          GetClientMobileIoArgs{...}
type GetClientMobileIoInput interface {
	pulumi.Input

	ToGetClientMobileIoOutput() GetClientMobileIoOutput
	ToGetClientMobileIoOutputWithContext(context.Context) GetClientMobileIoOutput
}

type GetClientMobileIoArgs struct {
	AppBundleIdentifier pulumi.StringInput `pulumi:"appBundleIdentifier"`
	TeamId              pulumi.StringInput `pulumi:"teamId"`
}

func (GetClientMobileIoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileIo)(nil)).Elem()
}

func (i GetClientMobileIoArgs) ToGetClientMobileIoOutput() GetClientMobileIoOutput {
	return i.ToGetClientMobileIoOutputWithContext(context.Background())
}

func (i GetClientMobileIoArgs) ToGetClientMobileIoOutputWithContext(ctx context.Context) GetClientMobileIoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileIoOutput)
}

// GetClientMobileIoArrayInput is an input type that accepts GetClientMobileIoArray and GetClientMobileIoArrayOutput values.
// You can construct a concrete instance of `GetClientMobileIoArrayInput` via:
//
//          GetClientMobileIoArray{ GetClientMobileIoArgs{...} }
type GetClientMobileIoArrayInput interface {
	pulumi.Input

	ToGetClientMobileIoArrayOutput() GetClientMobileIoArrayOutput
	ToGetClientMobileIoArrayOutputWithContext(context.Context) GetClientMobileIoArrayOutput
}

type GetClientMobileIoArray []GetClientMobileIoInput

func (GetClientMobileIoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileIo)(nil)).Elem()
}

func (i GetClientMobileIoArray) ToGetClientMobileIoArrayOutput() GetClientMobileIoArrayOutput {
	return i.ToGetClientMobileIoArrayOutputWithContext(context.Background())
}

func (i GetClientMobileIoArray) ToGetClientMobileIoArrayOutputWithContext(ctx context.Context) GetClientMobileIoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileIoArrayOutput)
}

type GetClientMobileIoOutput struct{ *pulumi.OutputState }

func (GetClientMobileIoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileIo)(nil)).Elem()
}

func (o GetClientMobileIoOutput) ToGetClientMobileIoOutput() GetClientMobileIoOutput {
	return o
}

func (o GetClientMobileIoOutput) ToGetClientMobileIoOutputWithContext(ctx context.Context) GetClientMobileIoOutput {
	return o
}

func (o GetClientMobileIoOutput) AppBundleIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientMobileIo) string { return v.AppBundleIdentifier }).(pulumi.StringOutput)
}

func (o GetClientMobileIoOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientMobileIo) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetClientMobileIoArrayOutput struct{ *pulumi.OutputState }

func (GetClientMobileIoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileIo)(nil)).Elem()
}

func (o GetClientMobileIoArrayOutput) ToGetClientMobileIoArrayOutput() GetClientMobileIoArrayOutput {
	return o
}

func (o GetClientMobileIoArrayOutput) ToGetClientMobileIoArrayOutputWithContext(ctx context.Context) GetClientMobileIoArrayOutput {
	return o
}

func (o GetClientMobileIoArrayOutput) Index(i pulumi.IntInput) GetClientMobileIoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientMobileIo {
		return vs[0].([]GetClientMobileIo)[vs[1].(int)]
	}).(GetClientMobileIoOutput)
}

type GetClientNativeSocialLogin struct {
	Apples    []GetClientNativeSocialLoginApple    `pulumi:"apples"`
	Facebooks []GetClientNativeSocialLoginFacebook `pulumi:"facebooks"`
}

// GetClientNativeSocialLoginInput is an input type that accepts GetClientNativeSocialLoginArgs and GetClientNativeSocialLoginOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginInput` via:
//
//          GetClientNativeSocialLoginArgs{...}
type GetClientNativeSocialLoginInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginOutput() GetClientNativeSocialLoginOutput
	ToGetClientNativeSocialLoginOutputWithContext(context.Context) GetClientNativeSocialLoginOutput
}

type GetClientNativeSocialLoginArgs struct {
	Apples    GetClientNativeSocialLoginAppleArrayInput    `pulumi:"apples"`
	Facebooks GetClientNativeSocialLoginFacebookArrayInput `pulumi:"facebooks"`
}

func (GetClientNativeSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLogin)(nil)).Elem()
}

func (i GetClientNativeSocialLoginArgs) ToGetClientNativeSocialLoginOutput() GetClientNativeSocialLoginOutput {
	return i.ToGetClientNativeSocialLoginOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginArgs) ToGetClientNativeSocialLoginOutputWithContext(ctx context.Context) GetClientNativeSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginOutput)
}

// GetClientNativeSocialLoginArrayInput is an input type that accepts GetClientNativeSocialLoginArray and GetClientNativeSocialLoginArrayOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginArrayInput` via:
//
//          GetClientNativeSocialLoginArray{ GetClientNativeSocialLoginArgs{...} }
type GetClientNativeSocialLoginArrayInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginArrayOutput() GetClientNativeSocialLoginArrayOutput
	ToGetClientNativeSocialLoginArrayOutputWithContext(context.Context) GetClientNativeSocialLoginArrayOutput
}

type GetClientNativeSocialLoginArray []GetClientNativeSocialLoginInput

func (GetClientNativeSocialLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLogin)(nil)).Elem()
}

func (i GetClientNativeSocialLoginArray) ToGetClientNativeSocialLoginArrayOutput() GetClientNativeSocialLoginArrayOutput {
	return i.ToGetClientNativeSocialLoginArrayOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginArray) ToGetClientNativeSocialLoginArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginArrayOutput)
}

type GetClientNativeSocialLoginOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLogin)(nil)).Elem()
}

func (o GetClientNativeSocialLoginOutput) ToGetClientNativeSocialLoginOutput() GetClientNativeSocialLoginOutput {
	return o
}

func (o GetClientNativeSocialLoginOutput) ToGetClientNativeSocialLoginOutputWithContext(ctx context.Context) GetClientNativeSocialLoginOutput {
	return o
}

func (o GetClientNativeSocialLoginOutput) Apples() GetClientNativeSocialLoginAppleArrayOutput {
	return o.ApplyT(func(v GetClientNativeSocialLogin) []GetClientNativeSocialLoginApple { return v.Apples }).(GetClientNativeSocialLoginAppleArrayOutput)
}

func (o GetClientNativeSocialLoginOutput) Facebooks() GetClientNativeSocialLoginFacebookArrayOutput {
	return o.ApplyT(func(v GetClientNativeSocialLogin) []GetClientNativeSocialLoginFacebook { return v.Facebooks }).(GetClientNativeSocialLoginFacebookArrayOutput)
}

type GetClientNativeSocialLoginArrayOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLogin)(nil)).Elem()
}

func (o GetClientNativeSocialLoginArrayOutput) ToGetClientNativeSocialLoginArrayOutput() GetClientNativeSocialLoginArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginArrayOutput) ToGetClientNativeSocialLoginArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginArrayOutput) Index(i pulumi.IntInput) GetClientNativeSocialLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientNativeSocialLogin {
		return vs[0].([]GetClientNativeSocialLogin)[vs[1].(int)]
	}).(GetClientNativeSocialLoginOutput)
}

type GetClientNativeSocialLoginApple struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClientNativeSocialLoginAppleInput is an input type that accepts GetClientNativeSocialLoginAppleArgs and GetClientNativeSocialLoginAppleOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginAppleInput` via:
//
//          GetClientNativeSocialLoginAppleArgs{...}
type GetClientNativeSocialLoginAppleInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginAppleOutput() GetClientNativeSocialLoginAppleOutput
	ToGetClientNativeSocialLoginAppleOutputWithContext(context.Context) GetClientNativeSocialLoginAppleOutput
}

type GetClientNativeSocialLoginAppleArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClientNativeSocialLoginAppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GetClientNativeSocialLoginAppleArgs) ToGetClientNativeSocialLoginAppleOutput() GetClientNativeSocialLoginAppleOutput {
	return i.ToGetClientNativeSocialLoginAppleOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginAppleArgs) ToGetClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginAppleOutput)
}

// GetClientNativeSocialLoginAppleArrayInput is an input type that accepts GetClientNativeSocialLoginAppleArray and GetClientNativeSocialLoginAppleArrayOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginAppleArrayInput` via:
//
//          GetClientNativeSocialLoginAppleArray{ GetClientNativeSocialLoginAppleArgs{...} }
type GetClientNativeSocialLoginAppleArrayInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginAppleArrayOutput() GetClientNativeSocialLoginAppleArrayOutput
	ToGetClientNativeSocialLoginAppleArrayOutputWithContext(context.Context) GetClientNativeSocialLoginAppleArrayOutput
}

type GetClientNativeSocialLoginAppleArray []GetClientNativeSocialLoginAppleInput

func (GetClientNativeSocialLoginAppleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GetClientNativeSocialLoginAppleArray) ToGetClientNativeSocialLoginAppleArrayOutput() GetClientNativeSocialLoginAppleArrayOutput {
	return i.ToGetClientNativeSocialLoginAppleArrayOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginAppleArray) ToGetClientNativeSocialLoginAppleArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginAppleArrayOutput)
}

type GetClientNativeSocialLoginAppleOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginAppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GetClientNativeSocialLoginAppleOutput) ToGetClientNativeSocialLoginAppleOutput() GetClientNativeSocialLoginAppleOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleOutput) ToGetClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientNativeSocialLoginApple) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClientNativeSocialLoginAppleArrayOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginAppleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GetClientNativeSocialLoginAppleArrayOutput) ToGetClientNativeSocialLoginAppleArrayOutput() GetClientNativeSocialLoginAppleArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleArrayOutput) ToGetClientNativeSocialLoginAppleArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleArrayOutput) Index(i pulumi.IntInput) GetClientNativeSocialLoginAppleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientNativeSocialLoginApple {
		return vs[0].([]GetClientNativeSocialLoginApple)[vs[1].(int)]
	}).(GetClientNativeSocialLoginAppleOutput)
}

type GetClientNativeSocialLoginFacebook struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClientNativeSocialLoginFacebookInput is an input type that accepts GetClientNativeSocialLoginFacebookArgs and GetClientNativeSocialLoginFacebookOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginFacebookInput` via:
//
//          GetClientNativeSocialLoginFacebookArgs{...}
type GetClientNativeSocialLoginFacebookInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginFacebookOutput() GetClientNativeSocialLoginFacebookOutput
	ToGetClientNativeSocialLoginFacebookOutputWithContext(context.Context) GetClientNativeSocialLoginFacebookOutput
}

type GetClientNativeSocialLoginFacebookArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClientNativeSocialLoginFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GetClientNativeSocialLoginFacebookArgs) ToGetClientNativeSocialLoginFacebookOutput() GetClientNativeSocialLoginFacebookOutput {
	return i.ToGetClientNativeSocialLoginFacebookOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginFacebookArgs) ToGetClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginFacebookOutput)
}

// GetClientNativeSocialLoginFacebookArrayInput is an input type that accepts GetClientNativeSocialLoginFacebookArray and GetClientNativeSocialLoginFacebookArrayOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginFacebookArrayInput` via:
//
//          GetClientNativeSocialLoginFacebookArray{ GetClientNativeSocialLoginFacebookArgs{...} }
type GetClientNativeSocialLoginFacebookArrayInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginFacebookArrayOutput() GetClientNativeSocialLoginFacebookArrayOutput
	ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(context.Context) GetClientNativeSocialLoginFacebookArrayOutput
}

type GetClientNativeSocialLoginFacebookArray []GetClientNativeSocialLoginFacebookInput

func (GetClientNativeSocialLoginFacebookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GetClientNativeSocialLoginFacebookArray) ToGetClientNativeSocialLoginFacebookArrayOutput() GetClientNativeSocialLoginFacebookArrayOutput {
	return i.ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginFacebookArray) ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginFacebookArrayOutput)
}

type GetClientNativeSocialLoginFacebookOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GetClientNativeSocialLoginFacebookOutput) ToGetClientNativeSocialLoginFacebookOutput() GetClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookOutput) ToGetClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientNativeSocialLoginFacebook) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClientNativeSocialLoginFacebookArrayOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginFacebookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GetClientNativeSocialLoginFacebookArrayOutput) ToGetClientNativeSocialLoginFacebookArrayOutput() GetClientNativeSocialLoginFacebookArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookArrayOutput) ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookArrayOutput) Index(i pulumi.IntInput) GetClientNativeSocialLoginFacebookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientNativeSocialLoginFacebook {
		return vs[0].([]GetClientNativeSocialLoginFacebook)[vs[1].(int)]
	}).(GetClientNativeSocialLoginFacebookOutput)
}

type GetClientRefreshToken struct {
	ExpirationType            string `pulumi:"expirationType"`
	IdleTokenLifetime         int    `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime bool   `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     bool   `pulumi:"infiniteTokenLifetime"`
	Leeway                    int    `pulumi:"leeway"`
	RotationType              string `pulumi:"rotationType"`
	TokenLifetime             int    `pulumi:"tokenLifetime"`
}

// GetClientRefreshTokenInput is an input type that accepts GetClientRefreshTokenArgs and GetClientRefreshTokenOutput values.
// You can construct a concrete instance of `GetClientRefreshTokenInput` via:
//
//          GetClientRefreshTokenArgs{...}
type GetClientRefreshTokenInput interface {
	pulumi.Input

	ToGetClientRefreshTokenOutput() GetClientRefreshTokenOutput
	ToGetClientRefreshTokenOutputWithContext(context.Context) GetClientRefreshTokenOutput
}

type GetClientRefreshTokenArgs struct {
	ExpirationType            pulumi.StringInput `pulumi:"expirationType"`
	IdleTokenLifetime         pulumi.IntInput    `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime pulumi.BoolInput   `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     pulumi.BoolInput   `pulumi:"infiniteTokenLifetime"`
	Leeway                    pulumi.IntInput    `pulumi:"leeway"`
	RotationType              pulumi.StringInput `pulumi:"rotationType"`
	TokenLifetime             pulumi.IntInput    `pulumi:"tokenLifetime"`
}

func (GetClientRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientRefreshToken)(nil)).Elem()
}

func (i GetClientRefreshTokenArgs) ToGetClientRefreshTokenOutput() GetClientRefreshTokenOutput {
	return i.ToGetClientRefreshTokenOutputWithContext(context.Background())
}

func (i GetClientRefreshTokenArgs) ToGetClientRefreshTokenOutputWithContext(ctx context.Context) GetClientRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientRefreshTokenOutput)
}

// GetClientRefreshTokenArrayInput is an input type that accepts GetClientRefreshTokenArray and GetClientRefreshTokenArrayOutput values.
// You can construct a concrete instance of `GetClientRefreshTokenArrayInput` via:
//
//          GetClientRefreshTokenArray{ GetClientRefreshTokenArgs{...} }
type GetClientRefreshTokenArrayInput interface {
	pulumi.Input

	ToGetClientRefreshTokenArrayOutput() GetClientRefreshTokenArrayOutput
	ToGetClientRefreshTokenArrayOutputWithContext(context.Context) GetClientRefreshTokenArrayOutput
}

type GetClientRefreshTokenArray []GetClientRefreshTokenInput

func (GetClientRefreshTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientRefreshToken)(nil)).Elem()
}

func (i GetClientRefreshTokenArray) ToGetClientRefreshTokenArrayOutput() GetClientRefreshTokenArrayOutput {
	return i.ToGetClientRefreshTokenArrayOutputWithContext(context.Background())
}

func (i GetClientRefreshTokenArray) ToGetClientRefreshTokenArrayOutputWithContext(ctx context.Context) GetClientRefreshTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientRefreshTokenArrayOutput)
}

type GetClientRefreshTokenOutput struct{ *pulumi.OutputState }

func (GetClientRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientRefreshToken)(nil)).Elem()
}

func (o GetClientRefreshTokenOutput) ToGetClientRefreshTokenOutput() GetClientRefreshTokenOutput {
	return o
}

func (o GetClientRefreshTokenOutput) ToGetClientRefreshTokenOutputWithContext(ctx context.Context) GetClientRefreshTokenOutput {
	return o
}

func (o GetClientRefreshTokenOutput) ExpirationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientRefreshToken) string { return v.ExpirationType }).(pulumi.StringOutput)
}

func (o GetClientRefreshTokenOutput) IdleTokenLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientRefreshToken) int { return v.IdleTokenLifetime }).(pulumi.IntOutput)
}

func (o GetClientRefreshTokenOutput) InfiniteIdleTokenLifetime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientRefreshToken) bool { return v.InfiniteIdleTokenLifetime }).(pulumi.BoolOutput)
}

func (o GetClientRefreshTokenOutput) InfiniteTokenLifetime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientRefreshToken) bool { return v.InfiniteTokenLifetime }).(pulumi.BoolOutput)
}

func (o GetClientRefreshTokenOutput) Leeway() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientRefreshToken) int { return v.Leeway }).(pulumi.IntOutput)
}

func (o GetClientRefreshTokenOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientRefreshToken) string { return v.RotationType }).(pulumi.StringOutput)
}

func (o GetClientRefreshTokenOutput) TokenLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientRefreshToken) int { return v.TokenLifetime }).(pulumi.IntOutput)
}

type GetClientRefreshTokenArrayOutput struct{ *pulumi.OutputState }

func (GetClientRefreshTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientRefreshToken)(nil)).Elem()
}

func (o GetClientRefreshTokenArrayOutput) ToGetClientRefreshTokenArrayOutput() GetClientRefreshTokenArrayOutput {
	return o
}

func (o GetClientRefreshTokenArrayOutput) ToGetClientRefreshTokenArrayOutputWithContext(ctx context.Context) GetClientRefreshTokenArrayOutput {
	return o
}

func (o GetClientRefreshTokenArrayOutput) Index(i pulumi.IntInput) GetClientRefreshTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientRefreshToken {
		return vs[0].([]GetClientRefreshToken)[vs[1].(int)]
	}).(GetClientRefreshTokenOutput)
}

type GetGlobalClientAddon struct {
	Aws                  map[string]interface{}      `pulumi:"aws"`
	AzureBlob            map[string]interface{}      `pulumi:"azureBlob"`
	AzureSb              map[string]interface{}      `pulumi:"azureSb"`
	Box                  map[string]interface{}      `pulumi:"box"`
	Cloudbees            map[string]interface{}      `pulumi:"cloudbees"`
	Concur               map[string]interface{}      `pulumi:"concur"`
	Dropbox              map[string]interface{}      `pulumi:"dropbox"`
	Echosign             map[string]interface{}      `pulumi:"echosign"`
	Egnyte               map[string]interface{}      `pulumi:"egnyte"`
	Firebase             map[string]interface{}      `pulumi:"firebase"`
	Layer                map[string]interface{}      `pulumi:"layer"`
	Mscrm                map[string]interface{}      `pulumi:"mscrm"`
	Newrelic             map[string]interface{}      `pulumi:"newrelic"`
	Office365            map[string]interface{}      `pulumi:"office365"`
	Rms                  map[string]interface{}      `pulumi:"rms"`
	Salesforce           map[string]interface{}      `pulumi:"salesforce"`
	SalesforceApi        map[string]interface{}      `pulumi:"salesforceApi"`
	SalesforceSandboxApi map[string]interface{}      `pulumi:"salesforceSandboxApi"`
	Samlps               []GetGlobalClientAddonSamlp `pulumi:"samlps"`
	SapApi               map[string]interface{}      `pulumi:"sapApi"`
	Sentry               map[string]interface{}      `pulumi:"sentry"`
	Sharepoint           map[string]interface{}      `pulumi:"sharepoint"`
	Slack                map[string]interface{}      `pulumi:"slack"`
	Springcm             map[string]interface{}      `pulumi:"springcm"`
	Wams                 map[string]interface{}      `pulumi:"wams"`
	Wsfed                map[string]interface{}      `pulumi:"wsfed"`
	Zendesk              map[string]interface{}      `pulumi:"zendesk"`
	Zoom                 map[string]interface{}      `pulumi:"zoom"`
}

// GetGlobalClientAddonInput is an input type that accepts GetGlobalClientAddonArgs and GetGlobalClientAddonOutput values.
// You can construct a concrete instance of `GetGlobalClientAddonInput` via:
//
//          GetGlobalClientAddonArgs{...}
type GetGlobalClientAddonInput interface {
	pulumi.Input

	ToGetGlobalClientAddonOutput() GetGlobalClientAddonOutput
	ToGetGlobalClientAddonOutputWithContext(context.Context) GetGlobalClientAddonOutput
}

type GetGlobalClientAddonArgs struct {
	Aws                  pulumi.MapInput                     `pulumi:"aws"`
	AzureBlob            pulumi.MapInput                     `pulumi:"azureBlob"`
	AzureSb              pulumi.MapInput                     `pulumi:"azureSb"`
	Box                  pulumi.MapInput                     `pulumi:"box"`
	Cloudbees            pulumi.MapInput                     `pulumi:"cloudbees"`
	Concur               pulumi.MapInput                     `pulumi:"concur"`
	Dropbox              pulumi.MapInput                     `pulumi:"dropbox"`
	Echosign             pulumi.MapInput                     `pulumi:"echosign"`
	Egnyte               pulumi.MapInput                     `pulumi:"egnyte"`
	Firebase             pulumi.MapInput                     `pulumi:"firebase"`
	Layer                pulumi.MapInput                     `pulumi:"layer"`
	Mscrm                pulumi.MapInput                     `pulumi:"mscrm"`
	Newrelic             pulumi.MapInput                     `pulumi:"newrelic"`
	Office365            pulumi.MapInput                     `pulumi:"office365"`
	Rms                  pulumi.MapInput                     `pulumi:"rms"`
	Salesforce           pulumi.MapInput                     `pulumi:"salesforce"`
	SalesforceApi        pulumi.MapInput                     `pulumi:"salesforceApi"`
	SalesforceSandboxApi pulumi.MapInput                     `pulumi:"salesforceSandboxApi"`
	Samlps               GetGlobalClientAddonSamlpArrayInput `pulumi:"samlps"`
	SapApi               pulumi.MapInput                     `pulumi:"sapApi"`
	Sentry               pulumi.MapInput                     `pulumi:"sentry"`
	Sharepoint           pulumi.MapInput                     `pulumi:"sharepoint"`
	Slack                pulumi.MapInput                     `pulumi:"slack"`
	Springcm             pulumi.MapInput                     `pulumi:"springcm"`
	Wams                 pulumi.MapInput                     `pulumi:"wams"`
	Wsfed                pulumi.MapInput                     `pulumi:"wsfed"`
	Zendesk              pulumi.MapInput                     `pulumi:"zendesk"`
	Zoom                 pulumi.MapInput                     `pulumi:"zoom"`
}

func (GetGlobalClientAddonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientAddon)(nil)).Elem()
}

func (i GetGlobalClientAddonArgs) ToGetGlobalClientAddonOutput() GetGlobalClientAddonOutput {
	return i.ToGetGlobalClientAddonOutputWithContext(context.Background())
}

func (i GetGlobalClientAddonArgs) ToGetGlobalClientAddonOutputWithContext(ctx context.Context) GetGlobalClientAddonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientAddonOutput)
}

// GetGlobalClientAddonArrayInput is an input type that accepts GetGlobalClientAddonArray and GetGlobalClientAddonArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientAddonArrayInput` via:
//
//          GetGlobalClientAddonArray{ GetGlobalClientAddonArgs{...} }
type GetGlobalClientAddonArrayInput interface {
	pulumi.Input

	ToGetGlobalClientAddonArrayOutput() GetGlobalClientAddonArrayOutput
	ToGetGlobalClientAddonArrayOutputWithContext(context.Context) GetGlobalClientAddonArrayOutput
}

type GetGlobalClientAddonArray []GetGlobalClientAddonInput

func (GetGlobalClientAddonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientAddon)(nil)).Elem()
}

func (i GetGlobalClientAddonArray) ToGetGlobalClientAddonArrayOutput() GetGlobalClientAddonArrayOutput {
	return i.ToGetGlobalClientAddonArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientAddonArray) ToGetGlobalClientAddonArrayOutputWithContext(ctx context.Context) GetGlobalClientAddonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientAddonArrayOutput)
}

type GetGlobalClientAddonOutput struct{ *pulumi.OutputState }

func (GetGlobalClientAddonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientAddon)(nil)).Elem()
}

func (o GetGlobalClientAddonOutput) ToGetGlobalClientAddonOutput() GetGlobalClientAddonOutput {
	return o
}

func (o GetGlobalClientAddonOutput) ToGetGlobalClientAddonOutputWithContext(ctx context.Context) GetGlobalClientAddonOutput {
	return o
}

func (o GetGlobalClientAddonOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Aws }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.AzureBlob }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.AzureSb }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Box }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Cloudbees }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Concur }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Dropbox }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Echosign }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Egnyte }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Firebase }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Layer }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Mscrm }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Newrelic }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Office365 }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Rms }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Salesforce }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.SalesforceApi }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.SalesforceSandboxApi }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Samlps() GetGlobalClientAddonSamlpArrayOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) []GetGlobalClientAddonSamlp { return v.Samlps }).(GetGlobalClientAddonSamlpArrayOutput)
}

func (o GetGlobalClientAddonOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.SapApi }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Sentry }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Sharepoint }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Slack }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Springcm }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Wams }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Wsfed }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Zendesk }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Zoom }).(pulumi.MapOutput)
}

type GetGlobalClientAddonArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientAddonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientAddon)(nil)).Elem()
}

func (o GetGlobalClientAddonArrayOutput) ToGetGlobalClientAddonArrayOutput() GetGlobalClientAddonArrayOutput {
	return o
}

func (o GetGlobalClientAddonArrayOutput) ToGetGlobalClientAddonArrayOutputWithContext(ctx context.Context) GetGlobalClientAddonArrayOutput {
	return o
}

func (o GetGlobalClientAddonArrayOutput) Index(i pulumi.IntInput) GetGlobalClientAddonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientAddon {
		return vs[0].([]GetGlobalClientAddon)[vs[1].(int)]
	}).(GetGlobalClientAddonOutput)
}

type GetGlobalClientAddonSamlp struct {
	Audience                       string                 `pulumi:"audience"`
	AuthnContextClassRef           string                 `pulumi:"authnContextClassRef"`
	Binding                        string                 `pulumi:"binding"`
	CreateUpnClaim                 bool                   `pulumi:"createUpnClaim"`
	Destination                    string                 `pulumi:"destination"`
	DigestAlgorithm                string                 `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     bool                   `pulumi:"includeAttributeNameFormat"`
	LifetimeInSeconds              int                    `pulumi:"lifetimeInSeconds"`
	Logout                         map[string]interface{} `pulumi:"logout"`
	MapIdentities                  bool                   `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           bool                   `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       map[string]interface{} `pulumi:"mappings"`
	NameIdentifierFormat           string                 `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           []string               `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping bool                   `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      string                 `pulumi:"recipient"`
	SignResponse                   bool                   `pulumi:"signResponse"`
	SignatureAlgorithm             string                 `pulumi:"signatureAlgorithm"`
	SigningCert                    string                 `pulumi:"signingCert"`
	TypedAttributes                bool                   `pulumi:"typedAttributes"`
}

// GetGlobalClientAddonSamlpInput is an input type that accepts GetGlobalClientAddonSamlpArgs and GetGlobalClientAddonSamlpOutput values.
// You can construct a concrete instance of `GetGlobalClientAddonSamlpInput` via:
//
//          GetGlobalClientAddonSamlpArgs{...}
type GetGlobalClientAddonSamlpInput interface {
	pulumi.Input

	ToGetGlobalClientAddonSamlpOutput() GetGlobalClientAddonSamlpOutput
	ToGetGlobalClientAddonSamlpOutputWithContext(context.Context) GetGlobalClientAddonSamlpOutput
}

type GetGlobalClientAddonSamlpArgs struct {
	Audience                       pulumi.StringInput      `pulumi:"audience"`
	AuthnContextClassRef           pulumi.StringInput      `pulumi:"authnContextClassRef"`
	Binding                        pulumi.StringInput      `pulumi:"binding"`
	CreateUpnClaim                 pulumi.BoolInput        `pulumi:"createUpnClaim"`
	Destination                    pulumi.StringInput      `pulumi:"destination"`
	DigestAlgorithm                pulumi.StringInput      `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     pulumi.BoolInput        `pulumi:"includeAttributeNameFormat"`
	LifetimeInSeconds              pulumi.IntInput         `pulumi:"lifetimeInSeconds"`
	Logout                         pulumi.MapInput         `pulumi:"logout"`
	MapIdentities                  pulumi.BoolInput        `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           pulumi.BoolInput        `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       pulumi.MapInput         `pulumi:"mappings"`
	NameIdentifierFormat           pulumi.StringInput      `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           pulumi.StringArrayInput `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping pulumi.BoolInput        `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      pulumi.StringInput      `pulumi:"recipient"`
	SignResponse                   pulumi.BoolInput        `pulumi:"signResponse"`
	SignatureAlgorithm             pulumi.StringInput      `pulumi:"signatureAlgorithm"`
	SigningCert                    pulumi.StringInput      `pulumi:"signingCert"`
	TypedAttributes                pulumi.BoolInput        `pulumi:"typedAttributes"`
}

func (GetGlobalClientAddonSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientAddonSamlp)(nil)).Elem()
}

func (i GetGlobalClientAddonSamlpArgs) ToGetGlobalClientAddonSamlpOutput() GetGlobalClientAddonSamlpOutput {
	return i.ToGetGlobalClientAddonSamlpOutputWithContext(context.Background())
}

func (i GetGlobalClientAddonSamlpArgs) ToGetGlobalClientAddonSamlpOutputWithContext(ctx context.Context) GetGlobalClientAddonSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientAddonSamlpOutput)
}

// GetGlobalClientAddonSamlpArrayInput is an input type that accepts GetGlobalClientAddonSamlpArray and GetGlobalClientAddonSamlpArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientAddonSamlpArrayInput` via:
//
//          GetGlobalClientAddonSamlpArray{ GetGlobalClientAddonSamlpArgs{...} }
type GetGlobalClientAddonSamlpArrayInput interface {
	pulumi.Input

	ToGetGlobalClientAddonSamlpArrayOutput() GetGlobalClientAddonSamlpArrayOutput
	ToGetGlobalClientAddonSamlpArrayOutputWithContext(context.Context) GetGlobalClientAddonSamlpArrayOutput
}

type GetGlobalClientAddonSamlpArray []GetGlobalClientAddonSamlpInput

func (GetGlobalClientAddonSamlpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientAddonSamlp)(nil)).Elem()
}

func (i GetGlobalClientAddonSamlpArray) ToGetGlobalClientAddonSamlpArrayOutput() GetGlobalClientAddonSamlpArrayOutput {
	return i.ToGetGlobalClientAddonSamlpArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientAddonSamlpArray) ToGetGlobalClientAddonSamlpArrayOutputWithContext(ctx context.Context) GetGlobalClientAddonSamlpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientAddonSamlpArrayOutput)
}

type GetGlobalClientAddonSamlpOutput struct{ *pulumi.OutputState }

func (GetGlobalClientAddonSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientAddonSamlp)(nil)).Elem()
}

func (o GetGlobalClientAddonSamlpOutput) ToGetGlobalClientAddonSamlpOutput() GetGlobalClientAddonSamlpOutput {
	return o
}

func (o GetGlobalClientAddonSamlpOutput) ToGetGlobalClientAddonSamlpOutputWithContext(ctx context.Context) GetGlobalClientAddonSamlpOutput {
	return o
}

func (o GetGlobalClientAddonSamlpOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.Audience }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) AuthnContextClassRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.AuthnContextClassRef }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Binding() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.Binding }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) CreateUpnClaim() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.CreateUpnClaim }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) DigestAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.DigestAlgorithm }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) map[string]interface{} { return v.Logout }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonSamlpOutput) MapIdentities() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.MapIdentities }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonSamlpOutput) NameIdentifierFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.NameIdentifierFormat }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

func (o GetGlobalClientAddonSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Recipient() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.Recipient }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) SignResponse() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.SignResponse }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) SigningCert() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.SigningCert }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) TypedAttributes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.TypedAttributes }).(pulumi.BoolOutput)
}

type GetGlobalClientAddonSamlpArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientAddonSamlpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientAddonSamlp)(nil)).Elem()
}

func (o GetGlobalClientAddonSamlpArrayOutput) ToGetGlobalClientAddonSamlpArrayOutput() GetGlobalClientAddonSamlpArrayOutput {
	return o
}

func (o GetGlobalClientAddonSamlpArrayOutput) ToGetGlobalClientAddonSamlpArrayOutputWithContext(ctx context.Context) GetGlobalClientAddonSamlpArrayOutput {
	return o
}

func (o GetGlobalClientAddonSamlpArrayOutput) Index(i pulumi.IntInput) GetGlobalClientAddonSamlpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientAddonSamlp {
		return vs[0].([]GetGlobalClientAddonSamlp)[vs[1].(int)]
	}).(GetGlobalClientAddonSamlpOutput)
}

type GetGlobalClientJwtConfiguration struct {
	Alg               string            `pulumi:"alg"`
	LifetimeInSeconds int               `pulumi:"lifetimeInSeconds"`
	Scopes            map[string]string `pulumi:"scopes"`
	SecretEncoded     bool              `pulumi:"secretEncoded"`
}

// GetGlobalClientJwtConfigurationInput is an input type that accepts GetGlobalClientJwtConfigurationArgs and GetGlobalClientJwtConfigurationOutput values.
// You can construct a concrete instance of `GetGlobalClientJwtConfigurationInput` via:
//
//          GetGlobalClientJwtConfigurationArgs{...}
type GetGlobalClientJwtConfigurationInput interface {
	pulumi.Input

	ToGetGlobalClientJwtConfigurationOutput() GetGlobalClientJwtConfigurationOutput
	ToGetGlobalClientJwtConfigurationOutputWithContext(context.Context) GetGlobalClientJwtConfigurationOutput
}

type GetGlobalClientJwtConfigurationArgs struct {
	Alg               pulumi.StringInput    `pulumi:"alg"`
	LifetimeInSeconds pulumi.IntInput       `pulumi:"lifetimeInSeconds"`
	Scopes            pulumi.StringMapInput `pulumi:"scopes"`
	SecretEncoded     pulumi.BoolInput      `pulumi:"secretEncoded"`
}

func (GetGlobalClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientJwtConfiguration)(nil)).Elem()
}

func (i GetGlobalClientJwtConfigurationArgs) ToGetGlobalClientJwtConfigurationOutput() GetGlobalClientJwtConfigurationOutput {
	return i.ToGetGlobalClientJwtConfigurationOutputWithContext(context.Background())
}

func (i GetGlobalClientJwtConfigurationArgs) ToGetGlobalClientJwtConfigurationOutputWithContext(ctx context.Context) GetGlobalClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientJwtConfigurationOutput)
}

// GetGlobalClientJwtConfigurationArrayInput is an input type that accepts GetGlobalClientJwtConfigurationArray and GetGlobalClientJwtConfigurationArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientJwtConfigurationArrayInput` via:
//
//          GetGlobalClientJwtConfigurationArray{ GetGlobalClientJwtConfigurationArgs{...} }
type GetGlobalClientJwtConfigurationArrayInput interface {
	pulumi.Input

	ToGetGlobalClientJwtConfigurationArrayOutput() GetGlobalClientJwtConfigurationArrayOutput
	ToGetGlobalClientJwtConfigurationArrayOutputWithContext(context.Context) GetGlobalClientJwtConfigurationArrayOutput
}

type GetGlobalClientJwtConfigurationArray []GetGlobalClientJwtConfigurationInput

func (GetGlobalClientJwtConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientJwtConfiguration)(nil)).Elem()
}

func (i GetGlobalClientJwtConfigurationArray) ToGetGlobalClientJwtConfigurationArrayOutput() GetGlobalClientJwtConfigurationArrayOutput {
	return i.ToGetGlobalClientJwtConfigurationArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientJwtConfigurationArray) ToGetGlobalClientJwtConfigurationArrayOutputWithContext(ctx context.Context) GetGlobalClientJwtConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientJwtConfigurationArrayOutput)
}

type GetGlobalClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (GetGlobalClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientJwtConfiguration)(nil)).Elem()
}

func (o GetGlobalClientJwtConfigurationOutput) ToGetGlobalClientJwtConfigurationOutput() GetGlobalClientJwtConfigurationOutput {
	return o
}

func (o GetGlobalClientJwtConfigurationOutput) ToGetGlobalClientJwtConfigurationOutputWithContext(ctx context.Context) GetGlobalClientJwtConfigurationOutput {
	return o
}

func (o GetGlobalClientJwtConfigurationOutput) Alg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientJwtConfiguration) string { return v.Alg }).(pulumi.StringOutput)
}

func (o GetGlobalClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalClientJwtConfiguration) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetGlobalClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGlobalClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

func (o GetGlobalClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientJwtConfiguration) bool { return v.SecretEncoded }).(pulumi.BoolOutput)
}

type GetGlobalClientJwtConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientJwtConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientJwtConfiguration)(nil)).Elem()
}

func (o GetGlobalClientJwtConfigurationArrayOutput) ToGetGlobalClientJwtConfigurationArrayOutput() GetGlobalClientJwtConfigurationArrayOutput {
	return o
}

func (o GetGlobalClientJwtConfigurationArrayOutput) ToGetGlobalClientJwtConfigurationArrayOutputWithContext(ctx context.Context) GetGlobalClientJwtConfigurationArrayOutput {
	return o
}

func (o GetGlobalClientJwtConfigurationArrayOutput) Index(i pulumi.IntInput) GetGlobalClientJwtConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientJwtConfiguration {
		return vs[0].([]GetGlobalClientJwtConfiguration)[vs[1].(int)]
	}).(GetGlobalClientJwtConfigurationOutput)
}

type GetGlobalClientMobile struct {
	Androids []GetGlobalClientMobileAndroid `pulumi:"androids"`
	Ios      []GetGlobalClientMobileIo      `pulumi:"ios"`
}

// GetGlobalClientMobileInput is an input type that accepts GetGlobalClientMobileArgs and GetGlobalClientMobileOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileInput` via:
//
//          GetGlobalClientMobileArgs{...}
type GetGlobalClientMobileInput interface {
	pulumi.Input

	ToGetGlobalClientMobileOutput() GetGlobalClientMobileOutput
	ToGetGlobalClientMobileOutputWithContext(context.Context) GetGlobalClientMobileOutput
}

type GetGlobalClientMobileArgs struct {
	Androids GetGlobalClientMobileAndroidArrayInput `pulumi:"androids"`
	Ios      GetGlobalClientMobileIoArrayInput      `pulumi:"ios"`
}

func (GetGlobalClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobile)(nil)).Elem()
}

func (i GetGlobalClientMobileArgs) ToGetGlobalClientMobileOutput() GetGlobalClientMobileOutput {
	return i.ToGetGlobalClientMobileOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileArgs) ToGetGlobalClientMobileOutputWithContext(ctx context.Context) GetGlobalClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileOutput)
}

// GetGlobalClientMobileArrayInput is an input type that accepts GetGlobalClientMobileArray and GetGlobalClientMobileArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileArrayInput` via:
//
//          GetGlobalClientMobileArray{ GetGlobalClientMobileArgs{...} }
type GetGlobalClientMobileArrayInput interface {
	pulumi.Input

	ToGetGlobalClientMobileArrayOutput() GetGlobalClientMobileArrayOutput
	ToGetGlobalClientMobileArrayOutputWithContext(context.Context) GetGlobalClientMobileArrayOutput
}

type GetGlobalClientMobileArray []GetGlobalClientMobileInput

func (GetGlobalClientMobileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobile)(nil)).Elem()
}

func (i GetGlobalClientMobileArray) ToGetGlobalClientMobileArrayOutput() GetGlobalClientMobileArrayOutput {
	return i.ToGetGlobalClientMobileArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileArray) ToGetGlobalClientMobileArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileArrayOutput)
}

type GetGlobalClientMobileOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobile)(nil)).Elem()
}

func (o GetGlobalClientMobileOutput) ToGetGlobalClientMobileOutput() GetGlobalClientMobileOutput {
	return o
}

func (o GetGlobalClientMobileOutput) ToGetGlobalClientMobileOutputWithContext(ctx context.Context) GetGlobalClientMobileOutput {
	return o
}

func (o GetGlobalClientMobileOutput) Androids() GetGlobalClientMobileAndroidArrayOutput {
	return o.ApplyT(func(v GetGlobalClientMobile) []GetGlobalClientMobileAndroid { return v.Androids }).(GetGlobalClientMobileAndroidArrayOutput)
}

func (o GetGlobalClientMobileOutput) Ios() GetGlobalClientMobileIoArrayOutput {
	return o.ApplyT(func(v GetGlobalClientMobile) []GetGlobalClientMobileIo { return v.Ios }).(GetGlobalClientMobileIoArrayOutput)
}

type GetGlobalClientMobileArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobile)(nil)).Elem()
}

func (o GetGlobalClientMobileArrayOutput) ToGetGlobalClientMobileArrayOutput() GetGlobalClientMobileArrayOutput {
	return o
}

func (o GetGlobalClientMobileArrayOutput) ToGetGlobalClientMobileArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileArrayOutput {
	return o
}

func (o GetGlobalClientMobileArrayOutput) Index(i pulumi.IntInput) GetGlobalClientMobileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientMobile {
		return vs[0].([]GetGlobalClientMobile)[vs[1].(int)]
	}).(GetGlobalClientMobileOutput)
}

type GetGlobalClientMobileAndroid struct {
	AppPackageName         string   `pulumi:"appPackageName"`
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// GetGlobalClientMobileAndroidInput is an input type that accepts GetGlobalClientMobileAndroidArgs and GetGlobalClientMobileAndroidOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileAndroidInput` via:
//
//          GetGlobalClientMobileAndroidArgs{...}
type GetGlobalClientMobileAndroidInput interface {
	pulumi.Input

	ToGetGlobalClientMobileAndroidOutput() GetGlobalClientMobileAndroidOutput
	ToGetGlobalClientMobileAndroidOutputWithContext(context.Context) GetGlobalClientMobileAndroidOutput
}

type GetGlobalClientMobileAndroidArgs struct {
	AppPackageName         pulumi.StringInput      `pulumi:"appPackageName"`
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (GetGlobalClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobileAndroid)(nil)).Elem()
}

func (i GetGlobalClientMobileAndroidArgs) ToGetGlobalClientMobileAndroidOutput() GetGlobalClientMobileAndroidOutput {
	return i.ToGetGlobalClientMobileAndroidOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileAndroidArgs) ToGetGlobalClientMobileAndroidOutputWithContext(ctx context.Context) GetGlobalClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileAndroidOutput)
}

// GetGlobalClientMobileAndroidArrayInput is an input type that accepts GetGlobalClientMobileAndroidArray and GetGlobalClientMobileAndroidArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileAndroidArrayInput` via:
//
//          GetGlobalClientMobileAndroidArray{ GetGlobalClientMobileAndroidArgs{...} }
type GetGlobalClientMobileAndroidArrayInput interface {
	pulumi.Input

	ToGetGlobalClientMobileAndroidArrayOutput() GetGlobalClientMobileAndroidArrayOutput
	ToGetGlobalClientMobileAndroidArrayOutputWithContext(context.Context) GetGlobalClientMobileAndroidArrayOutput
}

type GetGlobalClientMobileAndroidArray []GetGlobalClientMobileAndroidInput

func (GetGlobalClientMobileAndroidArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobileAndroid)(nil)).Elem()
}

func (i GetGlobalClientMobileAndroidArray) ToGetGlobalClientMobileAndroidArrayOutput() GetGlobalClientMobileAndroidArrayOutput {
	return i.ToGetGlobalClientMobileAndroidArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileAndroidArray) ToGetGlobalClientMobileAndroidArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileAndroidArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileAndroidArrayOutput)
}

type GetGlobalClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobileAndroid)(nil)).Elem()
}

func (o GetGlobalClientMobileAndroidOutput) ToGetGlobalClientMobileAndroidOutput() GetGlobalClientMobileAndroidOutput {
	return o
}

func (o GetGlobalClientMobileAndroidOutput) ToGetGlobalClientMobileAndroidOutputWithContext(ctx context.Context) GetGlobalClientMobileAndroidOutput {
	return o
}

func (o GetGlobalClientMobileAndroidOutput) AppPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientMobileAndroid) string { return v.AppPackageName }).(pulumi.StringOutput)
}

func (o GetGlobalClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type GetGlobalClientMobileAndroidArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileAndroidArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobileAndroid)(nil)).Elem()
}

func (o GetGlobalClientMobileAndroidArrayOutput) ToGetGlobalClientMobileAndroidArrayOutput() GetGlobalClientMobileAndroidArrayOutput {
	return o
}

func (o GetGlobalClientMobileAndroidArrayOutput) ToGetGlobalClientMobileAndroidArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileAndroidArrayOutput {
	return o
}

func (o GetGlobalClientMobileAndroidArrayOutput) Index(i pulumi.IntInput) GetGlobalClientMobileAndroidOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientMobileAndroid {
		return vs[0].([]GetGlobalClientMobileAndroid)[vs[1].(int)]
	}).(GetGlobalClientMobileAndroidOutput)
}

type GetGlobalClientMobileIo struct {
	AppBundleIdentifier string `pulumi:"appBundleIdentifier"`
	TeamId              string `pulumi:"teamId"`
}

// GetGlobalClientMobileIoInput is an input type that accepts GetGlobalClientMobileIoArgs and GetGlobalClientMobileIoOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileIoInput` via:
//
//          GetGlobalClientMobileIoArgs{...}
type GetGlobalClientMobileIoInput interface {
	pulumi.Input

	ToGetGlobalClientMobileIoOutput() GetGlobalClientMobileIoOutput
	ToGetGlobalClientMobileIoOutputWithContext(context.Context) GetGlobalClientMobileIoOutput
}

type GetGlobalClientMobileIoArgs struct {
	AppBundleIdentifier pulumi.StringInput `pulumi:"appBundleIdentifier"`
	TeamId              pulumi.StringInput `pulumi:"teamId"`
}

func (GetGlobalClientMobileIoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobileIo)(nil)).Elem()
}

func (i GetGlobalClientMobileIoArgs) ToGetGlobalClientMobileIoOutput() GetGlobalClientMobileIoOutput {
	return i.ToGetGlobalClientMobileIoOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileIoArgs) ToGetGlobalClientMobileIoOutputWithContext(ctx context.Context) GetGlobalClientMobileIoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileIoOutput)
}

// GetGlobalClientMobileIoArrayInput is an input type that accepts GetGlobalClientMobileIoArray and GetGlobalClientMobileIoArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileIoArrayInput` via:
//
//          GetGlobalClientMobileIoArray{ GetGlobalClientMobileIoArgs{...} }
type GetGlobalClientMobileIoArrayInput interface {
	pulumi.Input

	ToGetGlobalClientMobileIoArrayOutput() GetGlobalClientMobileIoArrayOutput
	ToGetGlobalClientMobileIoArrayOutputWithContext(context.Context) GetGlobalClientMobileIoArrayOutput
}

type GetGlobalClientMobileIoArray []GetGlobalClientMobileIoInput

func (GetGlobalClientMobileIoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobileIo)(nil)).Elem()
}

func (i GetGlobalClientMobileIoArray) ToGetGlobalClientMobileIoArrayOutput() GetGlobalClientMobileIoArrayOutput {
	return i.ToGetGlobalClientMobileIoArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileIoArray) ToGetGlobalClientMobileIoArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileIoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileIoArrayOutput)
}

type GetGlobalClientMobileIoOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileIoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobileIo)(nil)).Elem()
}

func (o GetGlobalClientMobileIoOutput) ToGetGlobalClientMobileIoOutput() GetGlobalClientMobileIoOutput {
	return o
}

func (o GetGlobalClientMobileIoOutput) ToGetGlobalClientMobileIoOutputWithContext(ctx context.Context) GetGlobalClientMobileIoOutput {
	return o
}

func (o GetGlobalClientMobileIoOutput) AppBundleIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientMobileIo) string { return v.AppBundleIdentifier }).(pulumi.StringOutput)
}

func (o GetGlobalClientMobileIoOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientMobileIo) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetGlobalClientMobileIoArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileIoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobileIo)(nil)).Elem()
}

func (o GetGlobalClientMobileIoArrayOutput) ToGetGlobalClientMobileIoArrayOutput() GetGlobalClientMobileIoArrayOutput {
	return o
}

func (o GetGlobalClientMobileIoArrayOutput) ToGetGlobalClientMobileIoArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileIoArrayOutput {
	return o
}

func (o GetGlobalClientMobileIoArrayOutput) Index(i pulumi.IntInput) GetGlobalClientMobileIoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientMobileIo {
		return vs[0].([]GetGlobalClientMobileIo)[vs[1].(int)]
	}).(GetGlobalClientMobileIoOutput)
}

type GetGlobalClientNativeSocialLogin struct {
	Apples    []GetGlobalClientNativeSocialLoginApple    `pulumi:"apples"`
	Facebooks []GetGlobalClientNativeSocialLoginFacebook `pulumi:"facebooks"`
}

// GetGlobalClientNativeSocialLoginInput is an input type that accepts GetGlobalClientNativeSocialLoginArgs and GetGlobalClientNativeSocialLoginOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginInput` via:
//
//          GetGlobalClientNativeSocialLoginArgs{...}
type GetGlobalClientNativeSocialLoginInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginOutput() GetGlobalClientNativeSocialLoginOutput
	ToGetGlobalClientNativeSocialLoginOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginOutput
}

type GetGlobalClientNativeSocialLoginArgs struct {
	Apples    GetGlobalClientNativeSocialLoginAppleArrayInput    `pulumi:"apples"`
	Facebooks GetGlobalClientNativeSocialLoginFacebookArrayInput `pulumi:"facebooks"`
}

func (GetGlobalClientNativeSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLogin)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginArgs) ToGetGlobalClientNativeSocialLoginOutput() GetGlobalClientNativeSocialLoginOutput {
	return i.ToGetGlobalClientNativeSocialLoginOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginArgs) ToGetGlobalClientNativeSocialLoginOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginOutput)
}

// GetGlobalClientNativeSocialLoginArrayInput is an input type that accepts GetGlobalClientNativeSocialLoginArray and GetGlobalClientNativeSocialLoginArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginArrayInput` via:
//
//          GetGlobalClientNativeSocialLoginArray{ GetGlobalClientNativeSocialLoginArgs{...} }
type GetGlobalClientNativeSocialLoginArrayInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginArrayOutput() GetGlobalClientNativeSocialLoginArrayOutput
	ToGetGlobalClientNativeSocialLoginArrayOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginArrayOutput
}

type GetGlobalClientNativeSocialLoginArray []GetGlobalClientNativeSocialLoginInput

func (GetGlobalClientNativeSocialLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLogin)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginArray) ToGetGlobalClientNativeSocialLoginArrayOutput() GetGlobalClientNativeSocialLoginArrayOutput {
	return i.ToGetGlobalClientNativeSocialLoginArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginArray) ToGetGlobalClientNativeSocialLoginArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginArrayOutput)
}

type GetGlobalClientNativeSocialLoginOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLogin)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginOutput) ToGetGlobalClientNativeSocialLoginOutput() GetGlobalClientNativeSocialLoginOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginOutput) ToGetGlobalClientNativeSocialLoginOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginOutput) Apples() GetGlobalClientNativeSocialLoginAppleArrayOutput {
	return o.ApplyT(func(v GetGlobalClientNativeSocialLogin) []GetGlobalClientNativeSocialLoginApple { return v.Apples }).(GetGlobalClientNativeSocialLoginAppleArrayOutput)
}

func (o GetGlobalClientNativeSocialLoginOutput) Facebooks() GetGlobalClientNativeSocialLoginFacebookArrayOutput {
	return o.ApplyT(func(v GetGlobalClientNativeSocialLogin) []GetGlobalClientNativeSocialLoginFacebook {
		return v.Facebooks
	}).(GetGlobalClientNativeSocialLoginFacebookArrayOutput)
}

type GetGlobalClientNativeSocialLoginArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLogin)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginArrayOutput) ToGetGlobalClientNativeSocialLoginArrayOutput() GetGlobalClientNativeSocialLoginArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginArrayOutput) ToGetGlobalClientNativeSocialLoginArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginArrayOutput) Index(i pulumi.IntInput) GetGlobalClientNativeSocialLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientNativeSocialLogin {
		return vs[0].([]GetGlobalClientNativeSocialLogin)[vs[1].(int)]
	}).(GetGlobalClientNativeSocialLoginOutput)
}

type GetGlobalClientNativeSocialLoginApple struct {
	Enabled bool `pulumi:"enabled"`
}

// GetGlobalClientNativeSocialLoginAppleInput is an input type that accepts GetGlobalClientNativeSocialLoginAppleArgs and GetGlobalClientNativeSocialLoginAppleOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginAppleInput` via:
//
//          GetGlobalClientNativeSocialLoginAppleArgs{...}
type GetGlobalClientNativeSocialLoginAppleInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginAppleOutput() GetGlobalClientNativeSocialLoginAppleOutput
	ToGetGlobalClientNativeSocialLoginAppleOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginAppleOutput
}

type GetGlobalClientNativeSocialLoginAppleArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetGlobalClientNativeSocialLoginAppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginAppleArgs) ToGetGlobalClientNativeSocialLoginAppleOutput() GetGlobalClientNativeSocialLoginAppleOutput {
	return i.ToGetGlobalClientNativeSocialLoginAppleOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginAppleArgs) ToGetGlobalClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginAppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginAppleOutput)
}

// GetGlobalClientNativeSocialLoginAppleArrayInput is an input type that accepts GetGlobalClientNativeSocialLoginAppleArray and GetGlobalClientNativeSocialLoginAppleArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginAppleArrayInput` via:
//
//          GetGlobalClientNativeSocialLoginAppleArray{ GetGlobalClientNativeSocialLoginAppleArgs{...} }
type GetGlobalClientNativeSocialLoginAppleArrayInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginAppleArrayOutput() GetGlobalClientNativeSocialLoginAppleArrayOutput
	ToGetGlobalClientNativeSocialLoginAppleArrayOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginAppleArrayOutput
}

type GetGlobalClientNativeSocialLoginAppleArray []GetGlobalClientNativeSocialLoginAppleInput

func (GetGlobalClientNativeSocialLoginAppleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginAppleArray) ToGetGlobalClientNativeSocialLoginAppleArrayOutput() GetGlobalClientNativeSocialLoginAppleArrayOutput {
	return i.ToGetGlobalClientNativeSocialLoginAppleArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginAppleArray) ToGetGlobalClientNativeSocialLoginAppleArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginAppleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginAppleArrayOutput)
}

type GetGlobalClientNativeSocialLoginAppleOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginAppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginAppleOutput) ToGetGlobalClientNativeSocialLoginAppleOutput() GetGlobalClientNativeSocialLoginAppleOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginAppleOutput) ToGetGlobalClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginAppleOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginAppleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientNativeSocialLoginApple) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetGlobalClientNativeSocialLoginAppleArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginAppleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginAppleArrayOutput) ToGetGlobalClientNativeSocialLoginAppleArrayOutput() GetGlobalClientNativeSocialLoginAppleArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginAppleArrayOutput) ToGetGlobalClientNativeSocialLoginAppleArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginAppleArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginAppleArrayOutput) Index(i pulumi.IntInput) GetGlobalClientNativeSocialLoginAppleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientNativeSocialLoginApple {
		return vs[0].([]GetGlobalClientNativeSocialLoginApple)[vs[1].(int)]
	}).(GetGlobalClientNativeSocialLoginAppleOutput)
}

type GetGlobalClientNativeSocialLoginFacebook struct {
	Enabled bool `pulumi:"enabled"`
}

// GetGlobalClientNativeSocialLoginFacebookInput is an input type that accepts GetGlobalClientNativeSocialLoginFacebookArgs and GetGlobalClientNativeSocialLoginFacebookOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginFacebookInput` via:
//
//          GetGlobalClientNativeSocialLoginFacebookArgs{...}
type GetGlobalClientNativeSocialLoginFacebookInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginFacebookOutput() GetGlobalClientNativeSocialLoginFacebookOutput
	ToGetGlobalClientNativeSocialLoginFacebookOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginFacebookOutput
}

type GetGlobalClientNativeSocialLoginFacebookArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetGlobalClientNativeSocialLoginFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginFacebookArgs) ToGetGlobalClientNativeSocialLoginFacebookOutput() GetGlobalClientNativeSocialLoginFacebookOutput {
	return i.ToGetGlobalClientNativeSocialLoginFacebookOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginFacebookArgs) ToGetGlobalClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginFacebookOutput)
}

// GetGlobalClientNativeSocialLoginFacebookArrayInput is an input type that accepts GetGlobalClientNativeSocialLoginFacebookArray and GetGlobalClientNativeSocialLoginFacebookArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginFacebookArrayInput` via:
//
//          GetGlobalClientNativeSocialLoginFacebookArray{ GetGlobalClientNativeSocialLoginFacebookArgs{...} }
type GetGlobalClientNativeSocialLoginFacebookArrayInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginFacebookArrayOutput() GetGlobalClientNativeSocialLoginFacebookArrayOutput
	ToGetGlobalClientNativeSocialLoginFacebookArrayOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginFacebookArrayOutput
}

type GetGlobalClientNativeSocialLoginFacebookArray []GetGlobalClientNativeSocialLoginFacebookInput

func (GetGlobalClientNativeSocialLoginFacebookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginFacebookArray) ToGetGlobalClientNativeSocialLoginFacebookArrayOutput() GetGlobalClientNativeSocialLoginFacebookArrayOutput {
	return i.ToGetGlobalClientNativeSocialLoginFacebookArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginFacebookArray) ToGetGlobalClientNativeSocialLoginFacebookArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginFacebookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginFacebookArrayOutput)
}

type GetGlobalClientNativeSocialLoginFacebookOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginFacebookOutput) ToGetGlobalClientNativeSocialLoginFacebookOutput() GetGlobalClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginFacebookOutput) ToGetGlobalClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginFacebookOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientNativeSocialLoginFacebook) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetGlobalClientNativeSocialLoginFacebookArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginFacebookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginFacebookArrayOutput) ToGetGlobalClientNativeSocialLoginFacebookArrayOutput() GetGlobalClientNativeSocialLoginFacebookArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginFacebookArrayOutput) ToGetGlobalClientNativeSocialLoginFacebookArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginFacebookArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginFacebookArrayOutput) Index(i pulumi.IntInput) GetGlobalClientNativeSocialLoginFacebookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientNativeSocialLoginFacebook {
		return vs[0].([]GetGlobalClientNativeSocialLoginFacebook)[vs[1].(int)]
	}).(GetGlobalClientNativeSocialLoginFacebookOutput)
}

type GetGlobalClientRefreshToken struct {
	ExpirationType            string `pulumi:"expirationType"`
	IdleTokenLifetime         int    `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime bool   `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     bool   `pulumi:"infiniteTokenLifetime"`
	Leeway                    int    `pulumi:"leeway"`
	RotationType              string `pulumi:"rotationType"`
	TokenLifetime             int    `pulumi:"tokenLifetime"`
}

// GetGlobalClientRefreshTokenInput is an input type that accepts GetGlobalClientRefreshTokenArgs and GetGlobalClientRefreshTokenOutput values.
// You can construct a concrete instance of `GetGlobalClientRefreshTokenInput` via:
//
//          GetGlobalClientRefreshTokenArgs{...}
type GetGlobalClientRefreshTokenInput interface {
	pulumi.Input

	ToGetGlobalClientRefreshTokenOutput() GetGlobalClientRefreshTokenOutput
	ToGetGlobalClientRefreshTokenOutputWithContext(context.Context) GetGlobalClientRefreshTokenOutput
}

type GetGlobalClientRefreshTokenArgs struct {
	ExpirationType            pulumi.StringInput `pulumi:"expirationType"`
	IdleTokenLifetime         pulumi.IntInput    `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime pulumi.BoolInput   `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     pulumi.BoolInput   `pulumi:"infiniteTokenLifetime"`
	Leeway                    pulumi.IntInput    `pulumi:"leeway"`
	RotationType              pulumi.StringInput `pulumi:"rotationType"`
	TokenLifetime             pulumi.IntInput    `pulumi:"tokenLifetime"`
}

func (GetGlobalClientRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientRefreshToken)(nil)).Elem()
}

func (i GetGlobalClientRefreshTokenArgs) ToGetGlobalClientRefreshTokenOutput() GetGlobalClientRefreshTokenOutput {
	return i.ToGetGlobalClientRefreshTokenOutputWithContext(context.Background())
}

func (i GetGlobalClientRefreshTokenArgs) ToGetGlobalClientRefreshTokenOutputWithContext(ctx context.Context) GetGlobalClientRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientRefreshTokenOutput)
}

// GetGlobalClientRefreshTokenArrayInput is an input type that accepts GetGlobalClientRefreshTokenArray and GetGlobalClientRefreshTokenArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientRefreshTokenArrayInput` via:
//
//          GetGlobalClientRefreshTokenArray{ GetGlobalClientRefreshTokenArgs{...} }
type GetGlobalClientRefreshTokenArrayInput interface {
	pulumi.Input

	ToGetGlobalClientRefreshTokenArrayOutput() GetGlobalClientRefreshTokenArrayOutput
	ToGetGlobalClientRefreshTokenArrayOutputWithContext(context.Context) GetGlobalClientRefreshTokenArrayOutput
}

type GetGlobalClientRefreshTokenArray []GetGlobalClientRefreshTokenInput

func (GetGlobalClientRefreshTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientRefreshToken)(nil)).Elem()
}

func (i GetGlobalClientRefreshTokenArray) ToGetGlobalClientRefreshTokenArrayOutput() GetGlobalClientRefreshTokenArrayOutput {
	return i.ToGetGlobalClientRefreshTokenArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientRefreshTokenArray) ToGetGlobalClientRefreshTokenArrayOutputWithContext(ctx context.Context) GetGlobalClientRefreshTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientRefreshTokenArrayOutput)
}

type GetGlobalClientRefreshTokenOutput struct{ *pulumi.OutputState }

func (GetGlobalClientRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientRefreshToken)(nil)).Elem()
}

func (o GetGlobalClientRefreshTokenOutput) ToGetGlobalClientRefreshTokenOutput() GetGlobalClientRefreshTokenOutput {
	return o
}

func (o GetGlobalClientRefreshTokenOutput) ToGetGlobalClientRefreshTokenOutputWithContext(ctx context.Context) GetGlobalClientRefreshTokenOutput {
	return o
}

func (o GetGlobalClientRefreshTokenOutput) ExpirationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) string { return v.ExpirationType }).(pulumi.StringOutput)
}

func (o GetGlobalClientRefreshTokenOutput) IdleTokenLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) int { return v.IdleTokenLifetime }).(pulumi.IntOutput)
}

func (o GetGlobalClientRefreshTokenOutput) InfiniteIdleTokenLifetime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) bool { return v.InfiniteIdleTokenLifetime }).(pulumi.BoolOutput)
}

func (o GetGlobalClientRefreshTokenOutput) InfiniteTokenLifetime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) bool { return v.InfiniteTokenLifetime }).(pulumi.BoolOutput)
}

func (o GetGlobalClientRefreshTokenOutput) Leeway() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) int { return v.Leeway }).(pulumi.IntOutput)
}

func (o GetGlobalClientRefreshTokenOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) string { return v.RotationType }).(pulumi.StringOutput)
}

func (o GetGlobalClientRefreshTokenOutput) TokenLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) int { return v.TokenLifetime }).(pulumi.IntOutput)
}

type GetGlobalClientRefreshTokenArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientRefreshTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientRefreshToken)(nil)).Elem()
}

func (o GetGlobalClientRefreshTokenArrayOutput) ToGetGlobalClientRefreshTokenArrayOutput() GetGlobalClientRefreshTokenArrayOutput {
	return o
}

func (o GetGlobalClientRefreshTokenArrayOutput) ToGetGlobalClientRefreshTokenArrayOutputWithContext(ctx context.Context) GetGlobalClientRefreshTokenArrayOutput {
	return o
}

func (o GetGlobalClientRefreshTokenArrayOutput) Index(i pulumi.IntInput) GetGlobalClientRefreshTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientRefreshToken {
		return vs[0].([]GetGlobalClientRefreshToken)[vs[1].(int)]
	}).(GetGlobalClientRefreshTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionDependencyInput)(nil)).Elem(), ActionDependencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionDependencyArrayInput)(nil)).Elem(), ActionDependencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSecretInput)(nil)).Elem(), ActionSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSecretArrayInput)(nil)).Elem(), ActionSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSupportedTriggersInput)(nil)).Elem(), ActionSupportedTriggersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSupportedTriggersPtrInput)(nil)).Elem(), ActionSupportedTriggersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionInput)(nil)).Elem(), AttackProtectionBreachedPasswordDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPtrInput)(nil)).Elem(), AttackProtectionBreachedPasswordDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBruteForceProtectionInput)(nil)).Elem(), AttackProtectionBruteForceProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBruteForceProtectionPtrInput)(nil)).Elem(), AttackProtectionBruteForceProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPtrInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLoginInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingColorsInput)(nil)).Elem(), BrandingColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingColorsPtrInput)(nil)).Elem(), BrandingColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingFontInput)(nil)).Elem(), BrandingFontArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingFontPtrInput)(nil)).Elem(), BrandingFontArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingUniversalLoginInput)(nil)).Elem(), BrandingUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingUniversalLoginPtrInput)(nil)).Elem(), BrandingUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsInput)(nil)).Elem(), ClientAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsPtrInput)(nil)).Elem(), ClientAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSamlpInput)(nil)).Elem(), ClientAddonsSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSamlpPtrInput)(nil)).Elem(), ClientAddonsSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientJwtConfigurationInput)(nil)).Elem(), ClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientJwtConfigurationPtrInput)(nil)).Elem(), ClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileInput)(nil)).Elem(), ClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobilePtrInput)(nil)).Elem(), ClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileAndroidInput)(nil)).Elem(), ClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileAndroidPtrInput)(nil)).Elem(), ClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileIosInput)(nil)).Elem(), ClientMobileIosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileIosPtrInput)(nil)).Elem(), ClientMobileIosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginInput)(nil)).Elem(), ClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginPtrInput)(nil)).Elem(), ClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginAppleInput)(nil)).Elem(), ClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginApplePtrInput)(nil)).Elem(), ClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginFacebookInput)(nil)).Elem(), ClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginFacebookPtrInput)(nil)).Elem(), ClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientRefreshTokenInput)(nil)).Elem(), ClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientRefreshTokenPtrInput)(nil)).Elem(), ClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsInput)(nil)).Elem(), ConnectionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPtrInput)(nil)).Elem(), ConnectionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsGatewayAuthenticationInput)(nil)).Elem(), ConnectionOptionsGatewayAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsGatewayAuthenticationPtrInput)(nil)).Elem(), ConnectionOptionsGatewayAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsIdpInitiatedInput)(nil)).Elem(), ConnectionOptionsIdpInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsIdpInitiatedPtrInput)(nil)).Elem(), ConnectionOptionsIdpInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsMfaInput)(nil)).Elem(), ConnectionOptionsMfaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsMfaPtrInput)(nil)).Elem(), ConnectionOptionsMfaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptionsInput)(nil)).Elem(), ConnectionOptionsPasswordComplexityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptionsPtrInput)(nil)).Elem(), ConnectionOptionsPasswordComplexityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordDictionaryInput)(nil)).Elem(), ConnectionOptionsPasswordDictionaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordDictionaryPtrInput)(nil)).Elem(), ConnectionOptionsPasswordDictionaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordHistoryInput)(nil)).Elem(), ConnectionOptionsPasswordHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordHistoryArrayInput)(nil)).Elem(), ConnectionOptionsPasswordHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfoInput)(nil)).Elem(), ConnectionOptionsPasswordNoPersonalInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfoPtrInput)(nil)).Elem(), ConnectionOptionsPasswordNoPersonalInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsTotpInput)(nil)).Elem(), ConnectionOptionsTotpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsTotpPtrInput)(nil)).Elem(), ConnectionOptionsTotpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationInput)(nil)).Elem(), ConnectionOptionsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationPtrInput)(nil)).Elem(), ConnectionOptionsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationUsernameInput)(nil)).Elem(), ConnectionOptionsValidationUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationUsernamePtrInput)(nil)).Elem(), ConnectionOptionsValidationUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainVerificationTypeInput)(nil)).Elem(), CustomDomainVerificationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainVerificationTypePtrInput)(nil)).Elem(), CustomDomainVerificationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailCredentialsInput)(nil)).Elem(), EmailCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailCredentialsPtrInput)(nil)).Elem(), EmailCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientAddonsInput)(nil)).Elem(), GlobalClientAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientAddonsPtrInput)(nil)).Elem(), GlobalClientAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientAddonsSamlpInput)(nil)).Elem(), GlobalClientAddonsSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientAddonsSamlpPtrInput)(nil)).Elem(), GlobalClientAddonsSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientJwtConfigurationInput)(nil)).Elem(), GlobalClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientJwtConfigurationPtrInput)(nil)).Elem(), GlobalClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobileInput)(nil)).Elem(), GlobalClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobilePtrInput)(nil)).Elem(), GlobalClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobileAndroidInput)(nil)).Elem(), GlobalClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobileAndroidPtrInput)(nil)).Elem(), GlobalClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobileIosInput)(nil)).Elem(), GlobalClientMobileIosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobileIosPtrInput)(nil)).Elem(), GlobalClientMobileIosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginInput)(nil)).Elem(), GlobalClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginPtrInput)(nil)).Elem(), GlobalClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginAppleInput)(nil)).Elem(), GlobalClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginApplePtrInput)(nil)).Elem(), GlobalClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginFacebookInput)(nil)).Elem(), GlobalClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginFacebookPtrInput)(nil)).Elem(), GlobalClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientRefreshTokenInput)(nil)).Elem(), GlobalClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientRefreshTokenPtrInput)(nil)).Elem(), GlobalClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhoneInput)(nil)).Elem(), GuardianPhoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhonePtrInput)(nil)).Elem(), GuardianPhoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhoneOptionsInput)(nil)).Elem(), GuardianPhoneOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhoneOptionsPtrInput)(nil)).Elem(), GuardianPhoneOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogStreamSinkInput)(nil)).Elem(), LogStreamSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogStreamSinkPtrInput)(nil)).Elem(), LogStreamSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationBrandingInput)(nil)).Elem(), OrganizationBrandingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationBrandingPtrInput)(nil)).Elem(), OrganizationBrandingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConnectionInput)(nil)).Elem(), OrganizationConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConnectionArrayInput)(nil)).Elem(), OrganizationConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceServerScopeInput)(nil)).Elem(), ResourceServerScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceServerScopeArrayInput)(nil)).Elem(), ResourceServerScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePermissionInput)(nil)).Elem(), RolePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePermissionArrayInput)(nil)).Elem(), RolePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantChangePasswordInput)(nil)).Elem(), TenantChangePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantChangePasswordPtrInput)(nil)).Elem(), TenantChangePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantErrorPageInput)(nil)).Elem(), TenantErrorPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantErrorPagePtrInput)(nil)).Elem(), TenantErrorPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantFlagsInput)(nil)).Elem(), TenantFlagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantFlagsPtrInput)(nil)).Elem(), TenantFlagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantGuardianMfaPageInput)(nil)).Elem(), TenantGuardianMfaPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantGuardianMfaPagePtrInput)(nil)).Elem(), TenantGuardianMfaPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantUniversalLoginInput)(nil)).Elem(), TenantUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantUniversalLoginPtrInput)(nil)).Elem(), TenantUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantUniversalLoginColorsInput)(nil)).Elem(), TenantUniversalLoginColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantUniversalLoginColorsPtrInput)(nil)).Elem(), TenantUniversalLoginColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBindingActionInput)(nil)).Elem(), TriggerBindingActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBindingActionArrayInput)(nil)).Elem(), TriggerBindingActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonInput)(nil)).Elem(), GetClientAddonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonArrayInput)(nil)).Elem(), GetClientAddonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSamlpInput)(nil)).Elem(), GetClientAddonSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSamlpArrayInput)(nil)).Elem(), GetClientAddonSamlpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientJwtConfigurationInput)(nil)).Elem(), GetClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientJwtConfigurationArrayInput)(nil)).Elem(), GetClientJwtConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileInput)(nil)).Elem(), GetClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileArrayInput)(nil)).Elem(), GetClientMobileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileAndroidInput)(nil)).Elem(), GetClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileAndroidArrayInput)(nil)).Elem(), GetClientMobileAndroidArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileIoInput)(nil)).Elem(), GetClientMobileIoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileIoArrayInput)(nil)).Elem(), GetClientMobileIoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginInput)(nil)).Elem(), GetClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginArrayInput)(nil)).Elem(), GetClientNativeSocialLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginAppleInput)(nil)).Elem(), GetClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginAppleArrayInput)(nil)).Elem(), GetClientNativeSocialLoginAppleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginFacebookInput)(nil)).Elem(), GetClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginFacebookArrayInput)(nil)).Elem(), GetClientNativeSocialLoginFacebookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientRefreshTokenInput)(nil)).Elem(), GetClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientRefreshTokenArrayInput)(nil)).Elem(), GetClientRefreshTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientAddonInput)(nil)).Elem(), GetGlobalClientAddonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientAddonArrayInput)(nil)).Elem(), GetGlobalClientAddonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientAddonSamlpInput)(nil)).Elem(), GetGlobalClientAddonSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientAddonSamlpArrayInput)(nil)).Elem(), GetGlobalClientAddonSamlpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientJwtConfigurationInput)(nil)).Elem(), GetGlobalClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientJwtConfigurationArrayInput)(nil)).Elem(), GetGlobalClientJwtConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileInput)(nil)).Elem(), GetGlobalClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileArrayInput)(nil)).Elem(), GetGlobalClientMobileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileAndroidInput)(nil)).Elem(), GetGlobalClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileAndroidArrayInput)(nil)).Elem(), GetGlobalClientMobileAndroidArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileIoInput)(nil)).Elem(), GetGlobalClientMobileIoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileIoArrayInput)(nil)).Elem(), GetGlobalClientMobileIoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginArrayInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginAppleInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginAppleArrayInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginAppleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginFacebookInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginFacebookArrayInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginFacebookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientRefreshTokenInput)(nil)).Elem(), GetGlobalClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientRefreshTokenArrayInput)(nil)).Elem(), GetGlobalClientRefreshTokenArray{})
	pulumi.RegisterOutputType(ActionDependencyOutput{})
	pulumi.RegisterOutputType(ActionDependencyArrayOutput{})
	pulumi.RegisterOutputType(ActionSecretOutput{})
	pulumi.RegisterOutputType(ActionSecretArrayOutput{})
	pulumi.RegisterOutputType(ActionSupportedTriggersOutput{})
	pulumi.RegisterOutputType(ActionSupportedTriggersPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionBreachedPasswordDetectionOutput{})
	pulumi.RegisterOutputType(AttackProtectionBreachedPasswordDetectionPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionBruteForceProtectionOutput{})
	pulumi.RegisterOutputType(AttackProtectionBruteForceProtectionPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreLoginOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput{})
	pulumi.RegisterOutputType(BrandingColorsOutput{})
	pulumi.RegisterOutputType(BrandingColorsPtrOutput{})
	pulumi.RegisterOutputType(BrandingFontOutput{})
	pulumi.RegisterOutputType(BrandingFontPtrOutput{})
	pulumi.RegisterOutputType(BrandingUniversalLoginOutput{})
	pulumi.RegisterOutputType(BrandingUniversalLoginPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsOutput{})
	pulumi.RegisterOutputType(ClientAddonsPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpPtrOutput{})
	pulumi.RegisterOutputType(ClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(ClientJwtConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClientMobileOutput{})
	pulumi.RegisterOutputType(ClientMobilePtrOutput{})
	pulumi.RegisterOutputType(ClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(ClientMobileAndroidPtrOutput{})
	pulumi.RegisterOutputType(ClientMobileIosOutput{})
	pulumi.RegisterOutputType(ClientMobileIosPtrOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginPtrOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginAppleOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginApplePtrOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginFacebookOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginFacebookPtrOutput{})
	pulumi.RegisterOutputType(ClientRefreshTokenOutput{})
	pulumi.RegisterOutputType(ClientRefreshTokenPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsGatewayAuthenticationOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsGatewayAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsIdpInitiatedOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsIdpInitiatedPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsMfaOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsMfaPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordComplexityOptionsOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordComplexityOptionsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordDictionaryOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordDictionaryPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordHistoryOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordHistoryArrayOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordNoPersonalInfoOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordNoPersonalInfoPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsTotpOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsTotpPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationUsernameOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationUsernamePtrOutput{})
	pulumi.RegisterOutputType(CustomDomainVerificationTypeOutput{})
	pulumi.RegisterOutputType(CustomDomainVerificationTypePtrOutput{})
	pulumi.RegisterOutputType(EmailCredentialsOutput{})
	pulumi.RegisterOutputType(EmailCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsSamlpOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsSamlpPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(GlobalClientJwtConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileOutput{})
	pulumi.RegisterOutputType(GlobalClientMobilePtrOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileAndroidPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileIosOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileIosPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginAppleOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginApplePtrOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginFacebookOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginFacebookPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientRefreshTokenOutput{})
	pulumi.RegisterOutputType(GlobalClientRefreshTokenPtrOutput{})
	pulumi.RegisterOutputType(GuardianPhoneOutput{})
	pulumi.RegisterOutputType(GuardianPhonePtrOutput{})
	pulumi.RegisterOutputType(GuardianPhoneOptionsOutput{})
	pulumi.RegisterOutputType(GuardianPhoneOptionsPtrOutput{})
	pulumi.RegisterOutputType(LogStreamSinkOutput{})
	pulumi.RegisterOutputType(LogStreamSinkPtrOutput{})
	pulumi.RegisterOutputType(OrganizationBrandingOutput{})
	pulumi.RegisterOutputType(OrganizationBrandingPtrOutput{})
	pulumi.RegisterOutputType(OrganizationConnectionOutput{})
	pulumi.RegisterOutputType(OrganizationConnectionArrayOutput{})
	pulumi.RegisterOutputType(ResourceServerScopeOutput{})
	pulumi.RegisterOutputType(ResourceServerScopeArrayOutput{})
	pulumi.RegisterOutputType(RolePermissionOutput{})
	pulumi.RegisterOutputType(RolePermissionArrayOutput{})
	pulumi.RegisterOutputType(TenantChangePasswordOutput{})
	pulumi.RegisterOutputType(TenantChangePasswordPtrOutput{})
	pulumi.RegisterOutputType(TenantErrorPageOutput{})
	pulumi.RegisterOutputType(TenantErrorPagePtrOutput{})
	pulumi.RegisterOutputType(TenantFlagsOutput{})
	pulumi.RegisterOutputType(TenantFlagsPtrOutput{})
	pulumi.RegisterOutputType(TenantGuardianMfaPageOutput{})
	pulumi.RegisterOutputType(TenantGuardianMfaPagePtrOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginPtrOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginColorsOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginColorsPtrOutput{})
	pulumi.RegisterOutputType(TriggerBindingActionOutput{})
	pulumi.RegisterOutputType(TriggerBindingActionArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonOutput{})
	pulumi.RegisterOutputType(GetClientAddonArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSamlpOutput{})
	pulumi.RegisterOutputType(GetClientAddonSamlpArrayOutput{})
	pulumi.RegisterOutputType(GetClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(GetClientJwtConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetClientMobileOutput{})
	pulumi.RegisterOutputType(GetClientMobileArrayOutput{})
	pulumi.RegisterOutputType(GetClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(GetClientMobileAndroidArrayOutput{})
	pulumi.RegisterOutputType(GetClientMobileIoOutput{})
	pulumi.RegisterOutputType(GetClientMobileIoArrayOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginArrayOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginAppleOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginAppleArrayOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginFacebookOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginFacebookArrayOutput{})
	pulumi.RegisterOutputType(GetClientRefreshTokenOutput{})
	pulumi.RegisterOutputType(GetClientRefreshTokenArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientAddonOutput{})
	pulumi.RegisterOutputType(GetGlobalClientAddonArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientAddonSamlpOutput{})
	pulumi.RegisterOutputType(GetGlobalClientAddonSamlpArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(GetGlobalClientJwtConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileAndroidArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileIoOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileIoArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginAppleOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginAppleArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginFacebookOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginFacebookArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientRefreshTokenOutput{})
	pulumi.RegisterOutputType(GetGlobalClientRefreshTokenArrayOutput{})
}
