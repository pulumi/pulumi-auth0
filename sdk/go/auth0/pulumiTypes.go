// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ActionDependency struct {
	// Dependency name, e.g. `lodash`.
	Name string `pulumi:"name"`
	// Dependency version, e.g. `latest` or `4.17.21`.
	Version string `pulumi:"version"`
}

// ActionDependencyInput is an input type that accepts ActionDependencyArgs and ActionDependencyOutput values.
// You can construct a concrete instance of `ActionDependencyInput` via:
//
//	ActionDependencyArgs{...}
type ActionDependencyInput interface {
	pulumi.Input

	ToActionDependencyOutput() ActionDependencyOutput
	ToActionDependencyOutputWithContext(context.Context) ActionDependencyOutput
}

type ActionDependencyArgs struct {
	// Dependency name, e.g. `lodash`.
	Name pulumi.StringInput `pulumi:"name"`
	// Dependency version, e.g. `latest` or `4.17.21`.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ActionDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionDependency)(nil)).Elem()
}

func (i ActionDependencyArgs) ToActionDependencyOutput() ActionDependencyOutput {
	return i.ToActionDependencyOutputWithContext(context.Background())
}

func (i ActionDependencyArgs) ToActionDependencyOutputWithContext(ctx context.Context) ActionDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionDependencyOutput)
}

// ActionDependencyArrayInput is an input type that accepts ActionDependencyArray and ActionDependencyArrayOutput values.
// You can construct a concrete instance of `ActionDependencyArrayInput` via:
//
//	ActionDependencyArray{ ActionDependencyArgs{...} }
type ActionDependencyArrayInput interface {
	pulumi.Input

	ToActionDependencyArrayOutput() ActionDependencyArrayOutput
	ToActionDependencyArrayOutputWithContext(context.Context) ActionDependencyArrayOutput
}

type ActionDependencyArray []ActionDependencyInput

func (ActionDependencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionDependency)(nil)).Elem()
}

func (i ActionDependencyArray) ToActionDependencyArrayOutput() ActionDependencyArrayOutput {
	return i.ToActionDependencyArrayOutputWithContext(context.Background())
}

func (i ActionDependencyArray) ToActionDependencyArrayOutputWithContext(ctx context.Context) ActionDependencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionDependencyArrayOutput)
}

type ActionDependencyOutput struct{ *pulumi.OutputState }

func (ActionDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionDependency)(nil)).Elem()
}

func (o ActionDependencyOutput) ToActionDependencyOutput() ActionDependencyOutput {
	return o
}

func (o ActionDependencyOutput) ToActionDependencyOutputWithContext(ctx context.Context) ActionDependencyOutput {
	return o
}

// Dependency name, e.g. `lodash`.
func (o ActionDependencyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ActionDependency) string { return v.Name }).(pulumi.StringOutput)
}

// Dependency version, e.g. `latest` or `4.17.21`.
func (o ActionDependencyOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ActionDependency) string { return v.Version }).(pulumi.StringOutput)
}

type ActionDependencyArrayOutput struct{ *pulumi.OutputState }

func (ActionDependencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionDependency)(nil)).Elem()
}

func (o ActionDependencyArrayOutput) ToActionDependencyArrayOutput() ActionDependencyArrayOutput {
	return o
}

func (o ActionDependencyArrayOutput) ToActionDependencyArrayOutputWithContext(ctx context.Context) ActionDependencyArrayOutput {
	return o
}

func (o ActionDependencyArrayOutput) Index(i pulumi.IntInput) ActionDependencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionDependency {
		return vs[0].([]ActionDependency)[vs[1].(int)]
	}).(ActionDependencyOutput)
}

type ActionSecret struct {
	// Secret name.
	Name string `pulumi:"name"`
	// Secret value.
	Value string `pulumi:"value"`
}

// ActionSecretInput is an input type that accepts ActionSecretArgs and ActionSecretOutput values.
// You can construct a concrete instance of `ActionSecretInput` via:
//
//	ActionSecretArgs{...}
type ActionSecretInput interface {
	pulumi.Input

	ToActionSecretOutput() ActionSecretOutput
	ToActionSecretOutputWithContext(context.Context) ActionSecretOutput
}

type ActionSecretArgs struct {
	// Secret name.
	Name pulumi.StringInput `pulumi:"name"`
	// Secret value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ActionSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSecret)(nil)).Elem()
}

func (i ActionSecretArgs) ToActionSecretOutput() ActionSecretOutput {
	return i.ToActionSecretOutputWithContext(context.Background())
}

func (i ActionSecretArgs) ToActionSecretOutputWithContext(ctx context.Context) ActionSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSecretOutput)
}

// ActionSecretArrayInput is an input type that accepts ActionSecretArray and ActionSecretArrayOutput values.
// You can construct a concrete instance of `ActionSecretArrayInput` via:
//
//	ActionSecretArray{ ActionSecretArgs{...} }
type ActionSecretArrayInput interface {
	pulumi.Input

	ToActionSecretArrayOutput() ActionSecretArrayOutput
	ToActionSecretArrayOutputWithContext(context.Context) ActionSecretArrayOutput
}

type ActionSecretArray []ActionSecretInput

func (ActionSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionSecret)(nil)).Elem()
}

func (i ActionSecretArray) ToActionSecretArrayOutput() ActionSecretArrayOutput {
	return i.ToActionSecretArrayOutputWithContext(context.Background())
}

func (i ActionSecretArray) ToActionSecretArrayOutputWithContext(ctx context.Context) ActionSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSecretArrayOutput)
}

type ActionSecretOutput struct{ *pulumi.OutputState }

func (ActionSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSecret)(nil)).Elem()
}

func (o ActionSecretOutput) ToActionSecretOutput() ActionSecretOutput {
	return o
}

func (o ActionSecretOutput) ToActionSecretOutputWithContext(ctx context.Context) ActionSecretOutput {
	return o
}

// Secret name.
func (o ActionSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Secret value.
func (o ActionSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSecret) string { return v.Value }).(pulumi.StringOutput)
}

type ActionSecretArrayOutput struct{ *pulumi.OutputState }

func (ActionSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionSecret)(nil)).Elem()
}

func (o ActionSecretArrayOutput) ToActionSecretArrayOutput() ActionSecretArrayOutput {
	return o
}

func (o ActionSecretArrayOutput) ToActionSecretArrayOutputWithContext(ctx context.Context) ActionSecretArrayOutput {
	return o
}

func (o ActionSecretArrayOutput) Index(i pulumi.IntInput) ActionSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionSecret {
		return vs[0].([]ActionSecret)[vs[1].(int)]
	}).(ActionSecretOutput)
}

type ActionSupportedTriggers struct {
	// The trigger ID.
	Id string `pulumi:"id"`
	// The trigger version. This regulates which `runtime` versions are supported.
	Version string `pulumi:"version"`
}

// ActionSupportedTriggersInput is an input type that accepts ActionSupportedTriggersArgs and ActionSupportedTriggersOutput values.
// You can construct a concrete instance of `ActionSupportedTriggersInput` via:
//
//	ActionSupportedTriggersArgs{...}
type ActionSupportedTriggersInput interface {
	pulumi.Input

	ToActionSupportedTriggersOutput() ActionSupportedTriggersOutput
	ToActionSupportedTriggersOutputWithContext(context.Context) ActionSupportedTriggersOutput
}

type ActionSupportedTriggersArgs struct {
	// The trigger ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The trigger version. This regulates which `runtime` versions are supported.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ActionSupportedTriggersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSupportedTriggers)(nil)).Elem()
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersOutput() ActionSupportedTriggersOutput {
	return i.ToActionSupportedTriggersOutputWithContext(context.Background())
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersOutputWithContext(ctx context.Context) ActionSupportedTriggersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSupportedTriggersOutput)
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return i.ToActionSupportedTriggersPtrOutputWithContext(context.Background())
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSupportedTriggersOutput).ToActionSupportedTriggersPtrOutputWithContext(ctx)
}

// ActionSupportedTriggersPtrInput is an input type that accepts ActionSupportedTriggersArgs, ActionSupportedTriggersPtr and ActionSupportedTriggersPtrOutput values.
// You can construct a concrete instance of `ActionSupportedTriggersPtrInput` via:
//
//	        ActionSupportedTriggersArgs{...}
//
//	or:
//
//	        nil
type ActionSupportedTriggersPtrInput interface {
	pulumi.Input

	ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput
	ToActionSupportedTriggersPtrOutputWithContext(context.Context) ActionSupportedTriggersPtrOutput
}

type actionSupportedTriggersPtrType ActionSupportedTriggersArgs

func ActionSupportedTriggersPtr(v *ActionSupportedTriggersArgs) ActionSupportedTriggersPtrInput {
	return (*actionSupportedTriggersPtrType)(v)
}

func (*actionSupportedTriggersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionSupportedTriggers)(nil)).Elem()
}

func (i *actionSupportedTriggersPtrType) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return i.ToActionSupportedTriggersPtrOutputWithContext(context.Background())
}

func (i *actionSupportedTriggersPtrType) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSupportedTriggersPtrOutput)
}

type ActionSupportedTriggersOutput struct{ *pulumi.OutputState }

func (ActionSupportedTriggersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSupportedTriggers)(nil)).Elem()
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersOutput() ActionSupportedTriggersOutput {
	return o
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersOutputWithContext(ctx context.Context) ActionSupportedTriggersOutput {
	return o
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return o.ToActionSupportedTriggersPtrOutputWithContext(context.Background())
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionSupportedTriggers) *ActionSupportedTriggers {
		return &v
	}).(ActionSupportedTriggersPtrOutput)
}

// The trigger ID.
func (o ActionSupportedTriggersOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSupportedTriggers) string { return v.Id }).(pulumi.StringOutput)
}

// The trigger version. This regulates which `runtime` versions are supported.
func (o ActionSupportedTriggersOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSupportedTriggers) string { return v.Version }).(pulumi.StringOutput)
}

type ActionSupportedTriggersPtrOutput struct{ *pulumi.OutputState }

func (ActionSupportedTriggersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionSupportedTriggers)(nil)).Elem()
}

func (o ActionSupportedTriggersPtrOutput) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return o
}

func (o ActionSupportedTriggersPtrOutput) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return o
}

func (o ActionSupportedTriggersPtrOutput) Elem() ActionSupportedTriggersOutput {
	return o.ApplyT(func(v *ActionSupportedTriggers) ActionSupportedTriggers {
		if v != nil {
			return *v
		}
		var ret ActionSupportedTriggers
		return ret
	}).(ActionSupportedTriggersOutput)
}

// The trigger ID.
func (o ActionSupportedTriggersPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionSupportedTriggers) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The trigger version. This regulates which `runtime` versions are supported.
func (o ActionSupportedTriggersPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionSupportedTriggers) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type AttackProtectionBreachedPasswordDetection struct {
	// When "adminNotification" is enabled, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
	AdminNotificationFrequencies []string `pulumi:"adminNotificationFrequencies"`
	// Whether breached password detection is active.
	Enabled *bool `pulumi:"enabled"`
	// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
	Method *string `pulumi:"method"`
	// Configuration options that apply before every user registration attempt. Only available on public tenants.
	PreUserRegistration *AttackProtectionBreachedPasswordDetectionPreUserRegistration `pulumi:"preUserRegistration"`
	// Action to take when a breached password is detected.
	Shields []string `pulumi:"shields"`
}

// AttackProtectionBreachedPasswordDetectionInput is an input type that accepts AttackProtectionBreachedPasswordDetectionArgs and AttackProtectionBreachedPasswordDetectionOutput values.
// You can construct a concrete instance of `AttackProtectionBreachedPasswordDetectionInput` via:
//
//	AttackProtectionBreachedPasswordDetectionArgs{...}
type AttackProtectionBreachedPasswordDetectionInput interface {
	pulumi.Input

	ToAttackProtectionBreachedPasswordDetectionOutput() AttackProtectionBreachedPasswordDetectionOutput
	ToAttackProtectionBreachedPasswordDetectionOutputWithContext(context.Context) AttackProtectionBreachedPasswordDetectionOutput
}

type AttackProtectionBreachedPasswordDetectionArgs struct {
	// When "adminNotification" is enabled, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
	AdminNotificationFrequencies pulumi.StringArrayInput `pulumi:"adminNotificationFrequencies"`
	// Whether breached password detection is active.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Configuration options that apply before every user registration attempt. Only available on public tenants.
	PreUserRegistration AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput `pulumi:"preUserRegistration"`
	// Action to take when a breached password is detected.
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionBreachedPasswordDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionOutput() AttackProtectionBreachedPasswordDetectionOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionOutputWithContext(context.Background())
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionOutput)
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Background())
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionOutput).ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx)
}

// AttackProtectionBreachedPasswordDetectionPtrInput is an input type that accepts AttackProtectionBreachedPasswordDetectionArgs, AttackProtectionBreachedPasswordDetectionPtr and AttackProtectionBreachedPasswordDetectionPtrOutput values.
// You can construct a concrete instance of `AttackProtectionBreachedPasswordDetectionPtrInput` via:
//
//	        AttackProtectionBreachedPasswordDetectionArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionBreachedPasswordDetectionPtrInput interface {
	pulumi.Input

	ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput
	ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput
}

type attackProtectionBreachedPasswordDetectionPtrType AttackProtectionBreachedPasswordDetectionArgs

func AttackProtectionBreachedPasswordDetectionPtr(v *AttackProtectionBreachedPasswordDetectionArgs) AttackProtectionBreachedPasswordDetectionPtrInput {
	return (*attackProtectionBreachedPasswordDetectionPtrType)(v)
}

func (*attackProtectionBreachedPasswordDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (i *attackProtectionBreachedPasswordDetectionPtrType) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Background())
}

func (i *attackProtectionBreachedPasswordDetectionPtrType) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionPtrOutput)
}

type AttackProtectionBreachedPasswordDetectionOutput struct{ *pulumi.OutputState }

func (AttackProtectionBreachedPasswordDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionOutput() AttackProtectionBreachedPasswordDetectionOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o.ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Background())
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionBreachedPasswordDetection) *AttackProtectionBreachedPasswordDetection {
		return &v
	}).(AttackProtectionBreachedPasswordDetectionPtrOutput)
}

// When "adminNotification" is enabled, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
func (o AttackProtectionBreachedPasswordDetectionOutput) AdminNotificationFrequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) []string { return v.AdminNotificationFrequencies }).(pulumi.StringArrayOutput)
}

// Whether breached password detection is active.
func (o AttackProtectionBreachedPasswordDetectionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
func (o AttackProtectionBreachedPasswordDetectionOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Configuration options that apply before every user registration attempt. Only available on public tenants.
func (o AttackProtectionBreachedPasswordDetectionOutput) PreUserRegistration() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) *AttackProtectionBreachedPasswordDetectionPreUserRegistration {
		return v.PreUserRegistration
	}).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput)
}

// Action to take when a breached password is detected.
func (o AttackProtectionBreachedPasswordDetectionOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionBreachedPasswordDetectionPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionBreachedPasswordDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (o AttackProtectionBreachedPasswordDetectionPtrOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPtrOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Elem() AttackProtectionBreachedPasswordDetectionOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) AttackProtectionBreachedPasswordDetection {
		if v != nil {
			return *v
		}
		var ret AttackProtectionBreachedPasswordDetection
		return ret
	}).(AttackProtectionBreachedPasswordDetectionOutput)
}

// When "adminNotification" is enabled, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) AdminNotificationFrequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) []string {
		if v == nil {
			return nil
		}
		return v.AdminNotificationFrequencies
	}).(pulumi.StringArrayOutput)
}

// Whether breached password detection is active.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Configuration options that apply before every user registration attempt. Only available on public tenants.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) PreUserRegistration() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) *AttackProtectionBreachedPasswordDetectionPreUserRegistration {
		if v == nil {
			return nil
		}
		return v.PreUserRegistration
	}).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput)
}

// Action to take when a breached password is detected.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionBreachedPasswordDetectionPreUserRegistration struct {
	Shields []string `pulumi:"shields"`
}

// AttackProtectionBreachedPasswordDetectionPreUserRegistrationInput is an input type that accepts AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs and AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput values.
// You can construct a concrete instance of `AttackProtectionBreachedPasswordDetectionPreUserRegistrationInput` via:
//
//	AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{...}
type AttackProtectionBreachedPasswordDetectionPreUserRegistrationInput interface {
	pulumi.Input

	ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput
	ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput
}

type AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs struct {
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (i AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(context.Background())
}

func (i AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput)
}

func (i AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (i AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput).ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx)
}

// AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput is an input type that accepts AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs, AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtr and AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput values.
// You can construct a concrete instance of `AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput` via:
//
//	        AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput interface {
	pulumi.Input

	ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput
	ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput
}

type attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs

func AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtr(v *AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput {
	return (*attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType)(v)
}

func (*attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (i *attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (i *attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput)
}

type AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput struct{ *pulumi.OutputState }

func (AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o.ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionBreachedPasswordDetectionPreUserRegistration) *AttackProtectionBreachedPasswordDetectionPreUserRegistration {
		return &v
	}).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput)
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetectionPreUserRegistration) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) Elem() AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetectionPreUserRegistration) AttackProtectionBreachedPasswordDetectionPreUserRegistration {
		if v != nil {
			return *v
		}
		var ret AttackProtectionBreachedPasswordDetectionPreUserRegistration
		return ret
	}).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput)
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetectionPreUserRegistration) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionBruteForceProtection struct {
	// List of trusted IP addresses that will not have attack protection enforced against them.
	Allowlists []string `pulumi:"allowlists"`
	// Whether brute force attack protections are active.
	Enabled *bool `pulumi:"enabled"`
	// Maximum number of unsuccessful attempts. Only available on public tenants.
	MaxAttempts *int `pulumi:"maxAttempts"`
	// Determines whether the IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` or `countPerIdentifier`.
	Mode *string `pulumi:"mode"`
	// Action to take when a brute force protection threshold is violated. Possible values: `block`, `userNotification`
	Shields []string `pulumi:"shields"`
}

// AttackProtectionBruteForceProtectionInput is an input type that accepts AttackProtectionBruteForceProtectionArgs and AttackProtectionBruteForceProtectionOutput values.
// You can construct a concrete instance of `AttackProtectionBruteForceProtectionInput` via:
//
//	AttackProtectionBruteForceProtectionArgs{...}
type AttackProtectionBruteForceProtectionInput interface {
	pulumi.Input

	ToAttackProtectionBruteForceProtectionOutput() AttackProtectionBruteForceProtectionOutput
	ToAttackProtectionBruteForceProtectionOutputWithContext(context.Context) AttackProtectionBruteForceProtectionOutput
}

type AttackProtectionBruteForceProtectionArgs struct {
	// List of trusted IP addresses that will not have attack protection enforced against them.
	Allowlists pulumi.StringArrayInput `pulumi:"allowlists"`
	// Whether brute force attack protections are active.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Maximum number of unsuccessful attempts. Only available on public tenants.
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	// Determines whether the IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` or `countPerIdentifier`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Action to take when a brute force protection threshold is violated. Possible values: `block`, `userNotification`
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionBruteForceProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionOutput() AttackProtectionBruteForceProtectionOutput {
	return i.ToAttackProtectionBruteForceProtectionOutputWithContext(context.Background())
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBruteForceProtectionOutput)
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return i.ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Background())
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBruteForceProtectionOutput).ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx)
}

// AttackProtectionBruteForceProtectionPtrInput is an input type that accepts AttackProtectionBruteForceProtectionArgs, AttackProtectionBruteForceProtectionPtr and AttackProtectionBruteForceProtectionPtrOutput values.
// You can construct a concrete instance of `AttackProtectionBruteForceProtectionPtrInput` via:
//
//	        AttackProtectionBruteForceProtectionArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionBruteForceProtectionPtrInput interface {
	pulumi.Input

	ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput
	ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Context) AttackProtectionBruteForceProtectionPtrOutput
}

type attackProtectionBruteForceProtectionPtrType AttackProtectionBruteForceProtectionArgs

func AttackProtectionBruteForceProtectionPtr(v *AttackProtectionBruteForceProtectionArgs) AttackProtectionBruteForceProtectionPtrInput {
	return (*attackProtectionBruteForceProtectionPtrType)(v)
}

func (*attackProtectionBruteForceProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (i *attackProtectionBruteForceProtectionPtrType) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return i.ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Background())
}

func (i *attackProtectionBruteForceProtectionPtrType) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBruteForceProtectionPtrOutput)
}

type AttackProtectionBruteForceProtectionOutput struct{ *pulumi.OutputState }

func (AttackProtectionBruteForceProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionOutput() AttackProtectionBruteForceProtectionOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return o.ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Background())
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionBruteForceProtection) *AttackProtectionBruteForceProtection {
		return &v
	}).(AttackProtectionBruteForceProtectionPtrOutput)
}

// List of trusted IP addresses that will not have attack protection enforced against them.
func (o AttackProtectionBruteForceProtectionOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) []string { return v.Allowlists }).(pulumi.StringArrayOutput)
}

// Whether brute force attack protections are active.
func (o AttackProtectionBruteForceProtectionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Maximum number of unsuccessful attempts. Only available on public tenants.
func (o AttackProtectionBruteForceProtectionOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

// Determines whether the IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` or `countPerIdentifier`.
func (o AttackProtectionBruteForceProtectionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Action to take when a brute force protection threshold is violated. Possible values: `block`, `userNotification`
func (o AttackProtectionBruteForceProtectionOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionBruteForceProtectionPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionBruteForceProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (o AttackProtectionBruteForceProtectionPtrOutput) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionPtrOutput) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionPtrOutput) Elem() AttackProtectionBruteForceProtectionOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) AttackProtectionBruteForceProtection {
		if v != nil {
			return *v
		}
		var ret AttackProtectionBruteForceProtection
		return ret
	}).(AttackProtectionBruteForceProtectionOutput)
}

// List of trusted IP addresses that will not have attack protection enforced against them.
func (o AttackProtectionBruteForceProtectionPtrOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) []string {
		if v == nil {
			return nil
		}
		return v.Allowlists
	}).(pulumi.StringArrayOutput)
}

// Whether brute force attack protections are active.
func (o AttackProtectionBruteForceProtectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of unsuccessful attempts. Only available on public tenants.
func (o AttackProtectionBruteForceProtectionPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) *int {
		if v == nil {
			return nil
		}
		return v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

// Determines whether the IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` or `countPerIdentifier`.
func (o AttackProtectionBruteForceProtectionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Action to take when a brute force protection threshold is violated. Possible values: `block`, `userNotification`
func (o AttackProtectionBruteForceProtectionPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionSuspiciousIpThrottling struct {
	// List of trusted IP addresses that will not have attack protection enforced against them.
	Allowlists []string `pulumi:"allowlists"`
	// Whether suspicious IP throttling attack protections are active.
	Enabled *bool `pulumi:"enabled"`
	// Configuration options that apply before every login attempt. Only available on public tenants.
	PreLogin *AttackProtectionSuspiciousIpThrottlingPreLogin `pulumi:"preLogin"`
	// Configuration options that apply before every user registration attempt. Only available on public tenants.
	PreUserRegistration *AttackProtectionSuspiciousIpThrottlingPreUserRegistration `pulumi:"preUserRegistration"`
	// Action to take when a suspicious IP throttling threshold is violated. Possible values: `block`, `adminNotification`
	Shields []string `pulumi:"shields"`
}

// AttackProtectionSuspiciousIpThrottlingInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingArgs and AttackProtectionSuspiciousIpThrottlingOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingInput` via:
//
//	AttackProtectionSuspiciousIpThrottlingArgs{...}
type AttackProtectionSuspiciousIpThrottlingInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingOutput() AttackProtectionSuspiciousIpThrottlingOutput
	ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingOutput
}

type AttackProtectionSuspiciousIpThrottlingArgs struct {
	// List of trusted IP addresses that will not have attack protection enforced against them.
	Allowlists pulumi.StringArrayInput `pulumi:"allowlists"`
	// Whether suspicious IP throttling attack protections are active.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Configuration options that apply before every login attempt. Only available on public tenants.
	PreLogin AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput `pulumi:"preLogin"`
	// Configuration options that apply before every user registration attempt. Only available on public tenants.
	PreUserRegistration AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput `pulumi:"preUserRegistration"`
	// Action to take when a suspicious IP throttling threshold is violated. Possible values: `block`, `adminNotification`
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionSuspiciousIpThrottlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingOutput() AttackProtectionSuspiciousIpThrottlingOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingOutput)
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingOutput).ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx)
}

// AttackProtectionSuspiciousIpThrottlingPtrInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingArgs, AttackProtectionSuspiciousIpThrottlingPtr and AttackProtectionSuspiciousIpThrottlingPtrOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPtrInput` via:
//
//	        AttackProtectionSuspiciousIpThrottlingArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionSuspiciousIpThrottlingPtrInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput
	ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput
}

type attackProtectionSuspiciousIpThrottlingPtrType AttackProtectionSuspiciousIpThrottlingArgs

func AttackProtectionSuspiciousIpThrottlingPtr(v *AttackProtectionSuspiciousIpThrottlingArgs) AttackProtectionSuspiciousIpThrottlingPtrInput {
	return (*attackProtectionSuspiciousIpThrottlingPtrType)(v)
}

func (*attackProtectionSuspiciousIpThrottlingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (i *attackProtectionSuspiciousIpThrottlingPtrType) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Background())
}

func (i *attackProtectionSuspiciousIpThrottlingPtrType) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingOutput() AttackProtectionSuspiciousIpThrottlingOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o.ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Background())
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottling {
		return &v
	}).(AttackProtectionSuspiciousIpThrottlingPtrOutput)
}

// List of trusted IP addresses that will not have attack protection enforced against them.
func (o AttackProtectionSuspiciousIpThrottlingOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) []string { return v.Allowlists }).(pulumi.StringArrayOutput)
}

// Whether suspicious IP throttling attack protections are active.
func (o AttackProtectionSuspiciousIpThrottlingOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Configuration options that apply before every login attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingOutput) PreLogin() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreLogin {
		return v.PreLogin
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

// Configuration options that apply before every user registration attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingOutput) PreUserRegistration() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		return v.PreUserRegistration
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

// Action to take when a suspicious IP throttling threshold is violated. Possible values: `block`, `adminNotification`
func (o AttackProtectionSuspiciousIpThrottlingOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionSuspiciousIpThrottlingPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Elem() AttackProtectionSuspiciousIpThrottlingOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) AttackProtectionSuspiciousIpThrottling {
		if v != nil {
			return *v
		}
		var ret AttackProtectionSuspiciousIpThrottling
		return ret
	}).(AttackProtectionSuspiciousIpThrottlingOutput)
}

// List of trusted IP addresses that will not have attack protection enforced against them.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) []string {
		if v == nil {
			return nil
		}
		return v.Allowlists
	}).(pulumi.StringArrayOutput)
}

// Whether suspicious IP throttling attack protections are active.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Configuration options that apply before every login attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) PreLogin() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreLogin {
		if v == nil {
			return nil
		}
		return v.PreLogin
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

// Configuration options that apply before every user registration attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) PreUserRegistration() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		if v == nil {
			return nil
		}
		return v.PreUserRegistration
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

// Action to take when a suspicious IP throttling threshold is violated. Possible values: `block`, `adminNotification`
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreLogin struct {
	MaxAttempts *int `pulumi:"maxAttempts"`
	Rate        *int `pulumi:"rate"`
}

// AttackProtectionSuspiciousIpThrottlingPreLoginInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreLoginArgs and AttackProtectionSuspiciousIpThrottlingPreLoginOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreLoginInput` via:
//
//	AttackProtectionSuspiciousIpThrottlingPreLoginArgs{...}
type AttackProtectionSuspiciousIpThrottlingPreLoginInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreLoginOutput() AttackProtectionSuspiciousIpThrottlingPreLoginOutput
	ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginOutput
}

type AttackProtectionSuspiciousIpThrottlingPreLoginArgs struct {
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	Rate        pulumi.IntPtrInput `pulumi:"rate"`
}

func (AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutput() AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreLoginOutput)
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreLoginOutput).ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx)
}

// AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreLoginArgs, AttackProtectionSuspiciousIpThrottlingPreLoginPtr and AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput` via:
//
//	        AttackProtectionSuspiciousIpThrottlingPreLoginArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput
	ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput
}

type attackProtectionSuspiciousIpThrottlingPreLoginPtrType AttackProtectionSuspiciousIpThrottlingPreLoginArgs

func AttackProtectionSuspiciousIpThrottlingPreLoginPtr(v *AttackProtectionSuspiciousIpThrottlingPreLoginArgs) AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput {
	return (*attackProtectionSuspiciousIpThrottlingPreLoginPtrType)(v)
}

func (*attackProtectionSuspiciousIpThrottlingPreLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (i *attackProtectionSuspiciousIpThrottlingPreLoginPtrType) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Background())
}

func (i *attackProtectionSuspiciousIpThrottlingPreLoginPtrType) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreLoginOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutput() AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Background())
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionSuspiciousIpThrottlingPreLogin) *AttackProtectionSuspiciousIpThrottlingPreLogin {
		return &v
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreLogin) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreLogin) *int { return v.Rate }).(pulumi.IntPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) Elem() AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreLogin) AttackProtectionSuspiciousIpThrottlingPreLogin {
		if v != nil {
			return *v
		}
		var ret AttackProtectionSuspiciousIpThrottlingPreLogin
		return ret
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreLogin) *int {
		if v == nil {
			return nil
		}
		return v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreLogin) *int {
		if v == nil {
			return nil
		}
		return v.Rate
	}).(pulumi.IntPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistration struct {
	MaxAttempts *int `pulumi:"maxAttempts"`
	Rate        *int `pulumi:"rate"`
}

// AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs and AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput` via:
//
//	AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{...}
type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput
	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs struct {
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	Rate        pulumi.IntPtrInput `pulumi:"rate"`
}

func (AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput)
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput).ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx)
}

// AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs, AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtr and AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput` via:
//
//	        AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput
	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput
}

type attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs

func AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtr(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput {
	return (*attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType)(v)
}

func (*attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (i *attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (i *attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		return &v
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int { return v.Rate }).(pulumi.IntPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) Elem() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistration) AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		if v != nil {
			return *v
		}
		var ret AttackProtectionSuspiciousIpThrottlingPreUserRegistration
		return ret
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int {
		if v == nil {
			return nil
		}
		return v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int {
		if v == nil {
			return nil
		}
		return v.Rate
	}).(pulumi.IntPtrOutput)
}

type BrandingColors struct {
	// Background color of login pages in hexadecimal.
	PageBackground *string `pulumi:"pageBackground"`
	// Primary button background color in hexadecimal.
	Primary *string `pulumi:"primary"`
}

// BrandingColorsInput is an input type that accepts BrandingColorsArgs and BrandingColorsOutput values.
// You can construct a concrete instance of `BrandingColorsInput` via:
//
//	BrandingColorsArgs{...}
type BrandingColorsInput interface {
	pulumi.Input

	ToBrandingColorsOutput() BrandingColorsOutput
	ToBrandingColorsOutputWithContext(context.Context) BrandingColorsOutput
}

type BrandingColorsArgs struct {
	// Background color of login pages in hexadecimal.
	PageBackground pulumi.StringPtrInput `pulumi:"pageBackground"`
	// Primary button background color in hexadecimal.
	Primary pulumi.StringPtrInput `pulumi:"primary"`
}

func (BrandingColorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingColors)(nil)).Elem()
}

func (i BrandingColorsArgs) ToBrandingColorsOutput() BrandingColorsOutput {
	return i.ToBrandingColorsOutputWithContext(context.Background())
}

func (i BrandingColorsArgs) ToBrandingColorsOutputWithContext(ctx context.Context) BrandingColorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingColorsOutput)
}

func (i BrandingColorsArgs) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return i.ToBrandingColorsPtrOutputWithContext(context.Background())
}

func (i BrandingColorsArgs) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingColorsOutput).ToBrandingColorsPtrOutputWithContext(ctx)
}

// BrandingColorsPtrInput is an input type that accepts BrandingColorsArgs, BrandingColorsPtr and BrandingColorsPtrOutput values.
// You can construct a concrete instance of `BrandingColorsPtrInput` via:
//
//	        BrandingColorsArgs{...}
//
//	or:
//
//	        nil
type BrandingColorsPtrInput interface {
	pulumi.Input

	ToBrandingColorsPtrOutput() BrandingColorsPtrOutput
	ToBrandingColorsPtrOutputWithContext(context.Context) BrandingColorsPtrOutput
}

type brandingColorsPtrType BrandingColorsArgs

func BrandingColorsPtr(v *BrandingColorsArgs) BrandingColorsPtrInput {
	return (*brandingColorsPtrType)(v)
}

func (*brandingColorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingColors)(nil)).Elem()
}

func (i *brandingColorsPtrType) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return i.ToBrandingColorsPtrOutputWithContext(context.Background())
}

func (i *brandingColorsPtrType) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingColorsPtrOutput)
}

type BrandingColorsOutput struct{ *pulumi.OutputState }

func (BrandingColorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingColors)(nil)).Elem()
}

func (o BrandingColorsOutput) ToBrandingColorsOutput() BrandingColorsOutput {
	return o
}

func (o BrandingColorsOutput) ToBrandingColorsOutputWithContext(ctx context.Context) BrandingColorsOutput {
	return o
}

func (o BrandingColorsOutput) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return o.ToBrandingColorsPtrOutputWithContext(context.Background())
}

func (o BrandingColorsOutput) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingColors) *BrandingColors {
		return &v
	}).(BrandingColorsPtrOutput)
}

// Background color of login pages in hexadecimal.
func (o BrandingColorsOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingColors) *string { return v.PageBackground }).(pulumi.StringPtrOutput)
}

// Primary button background color in hexadecimal.
func (o BrandingColorsOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingColors) *string { return v.Primary }).(pulumi.StringPtrOutput)
}

type BrandingColorsPtrOutput struct{ *pulumi.OutputState }

func (BrandingColorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingColors)(nil)).Elem()
}

func (o BrandingColorsPtrOutput) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return o
}

func (o BrandingColorsPtrOutput) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return o
}

func (o BrandingColorsPtrOutput) Elem() BrandingColorsOutput {
	return o.ApplyT(func(v *BrandingColors) BrandingColors {
		if v != nil {
			return *v
		}
		var ret BrandingColors
		return ret
	}).(BrandingColorsOutput)
}

// Background color of login pages in hexadecimal.
func (o BrandingColorsPtrOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingColors) *string {
		if v == nil {
			return nil
		}
		return v.PageBackground
	}).(pulumi.StringPtrOutput)
}

// Primary button background color in hexadecimal.
func (o BrandingColorsPtrOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingColors) *string {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.StringPtrOutput)
}

type BrandingFont struct {
	// URL for the custom font.
	Url *string `pulumi:"url"`
}

// BrandingFontInput is an input type that accepts BrandingFontArgs and BrandingFontOutput values.
// You can construct a concrete instance of `BrandingFontInput` via:
//
//	BrandingFontArgs{...}
type BrandingFontInput interface {
	pulumi.Input

	ToBrandingFontOutput() BrandingFontOutput
	ToBrandingFontOutputWithContext(context.Context) BrandingFontOutput
}

type BrandingFontArgs struct {
	// URL for the custom font.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (BrandingFontArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingFont)(nil)).Elem()
}

func (i BrandingFontArgs) ToBrandingFontOutput() BrandingFontOutput {
	return i.ToBrandingFontOutputWithContext(context.Background())
}

func (i BrandingFontArgs) ToBrandingFontOutputWithContext(ctx context.Context) BrandingFontOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingFontOutput)
}

func (i BrandingFontArgs) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return i.ToBrandingFontPtrOutputWithContext(context.Background())
}

func (i BrandingFontArgs) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingFontOutput).ToBrandingFontPtrOutputWithContext(ctx)
}

// BrandingFontPtrInput is an input type that accepts BrandingFontArgs, BrandingFontPtr and BrandingFontPtrOutput values.
// You can construct a concrete instance of `BrandingFontPtrInput` via:
//
//	        BrandingFontArgs{...}
//
//	or:
//
//	        nil
type BrandingFontPtrInput interface {
	pulumi.Input

	ToBrandingFontPtrOutput() BrandingFontPtrOutput
	ToBrandingFontPtrOutputWithContext(context.Context) BrandingFontPtrOutput
}

type brandingFontPtrType BrandingFontArgs

func BrandingFontPtr(v *BrandingFontArgs) BrandingFontPtrInput {
	return (*brandingFontPtrType)(v)
}

func (*brandingFontPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingFont)(nil)).Elem()
}

func (i *brandingFontPtrType) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return i.ToBrandingFontPtrOutputWithContext(context.Background())
}

func (i *brandingFontPtrType) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingFontPtrOutput)
}

type BrandingFontOutput struct{ *pulumi.OutputState }

func (BrandingFontOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingFont)(nil)).Elem()
}

func (o BrandingFontOutput) ToBrandingFontOutput() BrandingFontOutput {
	return o
}

func (o BrandingFontOutput) ToBrandingFontOutputWithContext(ctx context.Context) BrandingFontOutput {
	return o
}

func (o BrandingFontOutput) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return o.ToBrandingFontPtrOutputWithContext(context.Background())
}

func (o BrandingFontOutput) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingFont) *BrandingFont {
		return &v
	}).(BrandingFontPtrOutput)
}

// URL for the custom font.
func (o BrandingFontOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingFont) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type BrandingFontPtrOutput struct{ *pulumi.OutputState }

func (BrandingFontPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingFont)(nil)).Elem()
}

func (o BrandingFontPtrOutput) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return o
}

func (o BrandingFontPtrOutput) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return o
}

func (o BrandingFontPtrOutput) Elem() BrandingFontOutput {
	return o.ApplyT(func(v *BrandingFont) BrandingFont {
		if v != nil {
			return *v
		}
		var ret BrandingFont
		return ret
	}).(BrandingFontOutput)
}

// URL for the custom font.
func (o BrandingFontPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingFont) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type BrandingThemeBorders struct {
	// Button border radius. Value needs to be between `1` and `10`.
	ButtonBorderRadius float64 `pulumi:"buttonBorderRadius"`
	// Button border weight. Value needs to be between `0` and `10`.
	ButtonBorderWeight float64 `pulumi:"buttonBorderWeight"`
	// Buttons style. Available options: `pill`, `rounded`, `sharp`.
	ButtonsStyle string `pulumi:"buttonsStyle"`
	// Input border radius. Value needs to be between `0` and `10`.
	InputBorderRadius float64 `pulumi:"inputBorderRadius"`
	// Input border weight. Value needs to be between `0` and `3`.
	InputBorderWeight float64 `pulumi:"inputBorderWeight"`
	// Inputs style. Available options: `pill`, `rounded`, `sharp`.
	InputsStyle string `pulumi:"inputsStyle"`
	// Show widget shadow.
	ShowWidgetShadow bool `pulumi:"showWidgetShadow"`
	// Widget border weight. Value needs to be between `0` and `10`.
	WidgetBorderWeight float64 `pulumi:"widgetBorderWeight"`
	// Widget corner radius. Value needs to be between `0` and `50`.
	WidgetCornerRadius float64 `pulumi:"widgetCornerRadius"`
}

// BrandingThemeBordersInput is an input type that accepts BrandingThemeBordersArgs and BrandingThemeBordersOutput values.
// You can construct a concrete instance of `BrandingThemeBordersInput` via:
//
//	BrandingThemeBordersArgs{...}
type BrandingThemeBordersInput interface {
	pulumi.Input

	ToBrandingThemeBordersOutput() BrandingThemeBordersOutput
	ToBrandingThemeBordersOutputWithContext(context.Context) BrandingThemeBordersOutput
}

type BrandingThemeBordersArgs struct {
	// Button border radius. Value needs to be between `1` and `10`.
	ButtonBorderRadius pulumi.Float64Input `pulumi:"buttonBorderRadius"`
	// Button border weight. Value needs to be between `0` and `10`.
	ButtonBorderWeight pulumi.Float64Input `pulumi:"buttonBorderWeight"`
	// Buttons style. Available options: `pill`, `rounded`, `sharp`.
	ButtonsStyle pulumi.StringInput `pulumi:"buttonsStyle"`
	// Input border radius. Value needs to be between `0` and `10`.
	InputBorderRadius pulumi.Float64Input `pulumi:"inputBorderRadius"`
	// Input border weight. Value needs to be between `0` and `3`.
	InputBorderWeight pulumi.Float64Input `pulumi:"inputBorderWeight"`
	// Inputs style. Available options: `pill`, `rounded`, `sharp`.
	InputsStyle pulumi.StringInput `pulumi:"inputsStyle"`
	// Show widget shadow.
	ShowWidgetShadow pulumi.BoolInput `pulumi:"showWidgetShadow"`
	// Widget border weight. Value needs to be between `0` and `10`.
	WidgetBorderWeight pulumi.Float64Input `pulumi:"widgetBorderWeight"`
	// Widget corner radius. Value needs to be between `0` and `50`.
	WidgetCornerRadius pulumi.Float64Input `pulumi:"widgetCornerRadius"`
}

func (BrandingThemeBordersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeBorders)(nil)).Elem()
}

func (i BrandingThemeBordersArgs) ToBrandingThemeBordersOutput() BrandingThemeBordersOutput {
	return i.ToBrandingThemeBordersOutputWithContext(context.Background())
}

func (i BrandingThemeBordersArgs) ToBrandingThemeBordersOutputWithContext(ctx context.Context) BrandingThemeBordersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeBordersOutput)
}

func (i BrandingThemeBordersArgs) ToBrandingThemeBordersPtrOutput() BrandingThemeBordersPtrOutput {
	return i.ToBrandingThemeBordersPtrOutputWithContext(context.Background())
}

func (i BrandingThemeBordersArgs) ToBrandingThemeBordersPtrOutputWithContext(ctx context.Context) BrandingThemeBordersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeBordersOutput).ToBrandingThemeBordersPtrOutputWithContext(ctx)
}

// BrandingThemeBordersPtrInput is an input type that accepts BrandingThemeBordersArgs, BrandingThemeBordersPtr and BrandingThemeBordersPtrOutput values.
// You can construct a concrete instance of `BrandingThemeBordersPtrInput` via:
//
//	        BrandingThemeBordersArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeBordersPtrInput interface {
	pulumi.Input

	ToBrandingThemeBordersPtrOutput() BrandingThemeBordersPtrOutput
	ToBrandingThemeBordersPtrOutputWithContext(context.Context) BrandingThemeBordersPtrOutput
}

type brandingThemeBordersPtrType BrandingThemeBordersArgs

func BrandingThemeBordersPtr(v *BrandingThemeBordersArgs) BrandingThemeBordersPtrInput {
	return (*brandingThemeBordersPtrType)(v)
}

func (*brandingThemeBordersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeBorders)(nil)).Elem()
}

func (i *brandingThemeBordersPtrType) ToBrandingThemeBordersPtrOutput() BrandingThemeBordersPtrOutput {
	return i.ToBrandingThemeBordersPtrOutputWithContext(context.Background())
}

func (i *brandingThemeBordersPtrType) ToBrandingThemeBordersPtrOutputWithContext(ctx context.Context) BrandingThemeBordersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeBordersPtrOutput)
}

type BrandingThemeBordersOutput struct{ *pulumi.OutputState }

func (BrandingThemeBordersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeBorders)(nil)).Elem()
}

func (o BrandingThemeBordersOutput) ToBrandingThemeBordersOutput() BrandingThemeBordersOutput {
	return o
}

func (o BrandingThemeBordersOutput) ToBrandingThemeBordersOutputWithContext(ctx context.Context) BrandingThemeBordersOutput {
	return o
}

func (o BrandingThemeBordersOutput) ToBrandingThemeBordersPtrOutput() BrandingThemeBordersPtrOutput {
	return o.ToBrandingThemeBordersPtrOutputWithContext(context.Background())
}

func (o BrandingThemeBordersOutput) ToBrandingThemeBordersPtrOutputWithContext(ctx context.Context) BrandingThemeBordersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeBorders) *BrandingThemeBorders {
		return &v
	}).(BrandingThemeBordersPtrOutput)
}

// Button border radius. Value needs to be between `1` and `10`.
func (o BrandingThemeBordersOutput) ButtonBorderRadius() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeBorders) float64 { return v.ButtonBorderRadius }).(pulumi.Float64Output)
}

// Button border weight. Value needs to be between `0` and `10`.
func (o BrandingThemeBordersOutput) ButtonBorderWeight() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeBorders) float64 { return v.ButtonBorderWeight }).(pulumi.Float64Output)
}

// Buttons style. Available options: `pill`, `rounded`, `sharp`.
func (o BrandingThemeBordersOutput) ButtonsStyle() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeBorders) string { return v.ButtonsStyle }).(pulumi.StringOutput)
}

// Input border radius. Value needs to be between `0` and `10`.
func (o BrandingThemeBordersOutput) InputBorderRadius() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeBorders) float64 { return v.InputBorderRadius }).(pulumi.Float64Output)
}

// Input border weight. Value needs to be between `0` and `3`.
func (o BrandingThemeBordersOutput) InputBorderWeight() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeBorders) float64 { return v.InputBorderWeight }).(pulumi.Float64Output)
}

// Inputs style. Available options: `pill`, `rounded`, `sharp`.
func (o BrandingThemeBordersOutput) InputsStyle() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeBorders) string { return v.InputsStyle }).(pulumi.StringOutput)
}

// Show widget shadow.
func (o BrandingThemeBordersOutput) ShowWidgetShadow() pulumi.BoolOutput {
	return o.ApplyT(func(v BrandingThemeBorders) bool { return v.ShowWidgetShadow }).(pulumi.BoolOutput)
}

// Widget border weight. Value needs to be between `0` and `10`.
func (o BrandingThemeBordersOutput) WidgetBorderWeight() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeBorders) float64 { return v.WidgetBorderWeight }).(pulumi.Float64Output)
}

// Widget corner radius. Value needs to be between `0` and `50`.
func (o BrandingThemeBordersOutput) WidgetCornerRadius() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeBorders) float64 { return v.WidgetCornerRadius }).(pulumi.Float64Output)
}

type BrandingThemeBordersPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeBordersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeBorders)(nil)).Elem()
}

func (o BrandingThemeBordersPtrOutput) ToBrandingThemeBordersPtrOutput() BrandingThemeBordersPtrOutput {
	return o
}

func (o BrandingThemeBordersPtrOutput) ToBrandingThemeBordersPtrOutputWithContext(ctx context.Context) BrandingThemeBordersPtrOutput {
	return o
}

func (o BrandingThemeBordersPtrOutput) Elem() BrandingThemeBordersOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) BrandingThemeBorders {
		if v != nil {
			return *v
		}
		var ret BrandingThemeBorders
		return ret
	}).(BrandingThemeBordersOutput)
}

// Button border radius. Value needs to be between `1` and `10`.
func (o BrandingThemeBordersPtrOutput) ButtonBorderRadius() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return &v.ButtonBorderRadius
	}).(pulumi.Float64PtrOutput)
}

// Button border weight. Value needs to be between `0` and `10`.
func (o BrandingThemeBordersPtrOutput) ButtonBorderWeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return &v.ButtonBorderWeight
	}).(pulumi.Float64PtrOutput)
}

// Buttons style. Available options: `pill`, `rounded`, `sharp`.
func (o BrandingThemeBordersPtrOutput) ButtonsStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *string {
		if v == nil {
			return nil
		}
		return &v.ButtonsStyle
	}).(pulumi.StringPtrOutput)
}

// Input border radius. Value needs to be between `0` and `10`.
func (o BrandingThemeBordersPtrOutput) InputBorderRadius() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return &v.InputBorderRadius
	}).(pulumi.Float64PtrOutput)
}

// Input border weight. Value needs to be between `0` and `3`.
func (o BrandingThemeBordersPtrOutput) InputBorderWeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return &v.InputBorderWeight
	}).(pulumi.Float64PtrOutput)
}

// Inputs style. Available options: `pill`, `rounded`, `sharp`.
func (o BrandingThemeBordersPtrOutput) InputsStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *string {
		if v == nil {
			return nil
		}
		return &v.InputsStyle
	}).(pulumi.StringPtrOutput)
}

// Show widget shadow.
func (o BrandingThemeBordersPtrOutput) ShowWidgetShadow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *bool {
		if v == nil {
			return nil
		}
		return &v.ShowWidgetShadow
	}).(pulumi.BoolPtrOutput)
}

// Widget border weight. Value needs to be between `0` and `10`.
func (o BrandingThemeBordersPtrOutput) WidgetBorderWeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return &v.WidgetBorderWeight
	}).(pulumi.Float64PtrOutput)
}

// Widget corner radius. Value needs to be between `0` and `50`.
func (o BrandingThemeBordersPtrOutput) WidgetCornerRadius() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return &v.WidgetCornerRadius
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeColors struct {
	// Base focus color.
	BaseFocusColor *string `pulumi:"baseFocusColor"`
	// Base hover color.
	BaseHoverColor *string `pulumi:"baseHoverColor"`
	// Body text.
	BodyText string `pulumi:"bodyText"`
	// Error.
	Error string `pulumi:"error"`
	// Header.
	Header string `pulumi:"header"`
	// Icons.
	Icons string `pulumi:"icons"`
	// Input background.
	InputBackground string `pulumi:"inputBackground"`
	// Input border.
	InputBorder string `pulumi:"inputBorder"`
	// Input filled text.
	InputFilledText string `pulumi:"inputFilledText"`
	// Input labels & placeholders.
	InputLabelsPlaceholders string `pulumi:"inputLabelsPlaceholders"`
	// Links & focused components.
	LinksFocusedComponents string `pulumi:"linksFocusedComponents"`
	// Primary button.
	PrimaryButton string `pulumi:"primaryButton"`
	// Primary button label.
	PrimaryButtonLabel string `pulumi:"primaryButtonLabel"`
	// Secondary button border.
	SecondaryButtonBorder string `pulumi:"secondaryButtonBorder"`
	// Secondary button label.
	SecondaryButtonLabel string `pulumi:"secondaryButtonLabel"`
	// Success.
	Success string `pulumi:"success"`
	// Widget background.
	WidgetBackground string `pulumi:"widgetBackground"`
	// Widget border.
	WidgetBorder string `pulumi:"widgetBorder"`
}

// BrandingThemeColorsInput is an input type that accepts BrandingThemeColorsArgs and BrandingThemeColorsOutput values.
// You can construct a concrete instance of `BrandingThemeColorsInput` via:
//
//	BrandingThemeColorsArgs{...}
type BrandingThemeColorsInput interface {
	pulumi.Input

	ToBrandingThemeColorsOutput() BrandingThemeColorsOutput
	ToBrandingThemeColorsOutputWithContext(context.Context) BrandingThemeColorsOutput
}

type BrandingThemeColorsArgs struct {
	// Base focus color.
	BaseFocusColor pulumi.StringPtrInput `pulumi:"baseFocusColor"`
	// Base hover color.
	BaseHoverColor pulumi.StringPtrInput `pulumi:"baseHoverColor"`
	// Body text.
	BodyText pulumi.StringInput `pulumi:"bodyText"`
	// Error.
	Error pulumi.StringInput `pulumi:"error"`
	// Header.
	Header pulumi.StringInput `pulumi:"header"`
	// Icons.
	Icons pulumi.StringInput `pulumi:"icons"`
	// Input background.
	InputBackground pulumi.StringInput `pulumi:"inputBackground"`
	// Input border.
	InputBorder pulumi.StringInput `pulumi:"inputBorder"`
	// Input filled text.
	InputFilledText pulumi.StringInput `pulumi:"inputFilledText"`
	// Input labels & placeholders.
	InputLabelsPlaceholders pulumi.StringInput `pulumi:"inputLabelsPlaceholders"`
	// Links & focused components.
	LinksFocusedComponents pulumi.StringInput `pulumi:"linksFocusedComponents"`
	// Primary button.
	PrimaryButton pulumi.StringInput `pulumi:"primaryButton"`
	// Primary button label.
	PrimaryButtonLabel pulumi.StringInput `pulumi:"primaryButtonLabel"`
	// Secondary button border.
	SecondaryButtonBorder pulumi.StringInput `pulumi:"secondaryButtonBorder"`
	// Secondary button label.
	SecondaryButtonLabel pulumi.StringInput `pulumi:"secondaryButtonLabel"`
	// Success.
	Success pulumi.StringInput `pulumi:"success"`
	// Widget background.
	WidgetBackground pulumi.StringInput `pulumi:"widgetBackground"`
	// Widget border.
	WidgetBorder pulumi.StringInput `pulumi:"widgetBorder"`
}

func (BrandingThemeColorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeColors)(nil)).Elem()
}

func (i BrandingThemeColorsArgs) ToBrandingThemeColorsOutput() BrandingThemeColorsOutput {
	return i.ToBrandingThemeColorsOutputWithContext(context.Background())
}

func (i BrandingThemeColorsArgs) ToBrandingThemeColorsOutputWithContext(ctx context.Context) BrandingThemeColorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeColorsOutput)
}

func (i BrandingThemeColorsArgs) ToBrandingThemeColorsPtrOutput() BrandingThemeColorsPtrOutput {
	return i.ToBrandingThemeColorsPtrOutputWithContext(context.Background())
}

func (i BrandingThemeColorsArgs) ToBrandingThemeColorsPtrOutputWithContext(ctx context.Context) BrandingThemeColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeColorsOutput).ToBrandingThemeColorsPtrOutputWithContext(ctx)
}

// BrandingThemeColorsPtrInput is an input type that accepts BrandingThemeColorsArgs, BrandingThemeColorsPtr and BrandingThemeColorsPtrOutput values.
// You can construct a concrete instance of `BrandingThemeColorsPtrInput` via:
//
//	        BrandingThemeColorsArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeColorsPtrInput interface {
	pulumi.Input

	ToBrandingThemeColorsPtrOutput() BrandingThemeColorsPtrOutput
	ToBrandingThemeColorsPtrOutputWithContext(context.Context) BrandingThemeColorsPtrOutput
}

type brandingThemeColorsPtrType BrandingThemeColorsArgs

func BrandingThemeColorsPtr(v *BrandingThemeColorsArgs) BrandingThemeColorsPtrInput {
	return (*brandingThemeColorsPtrType)(v)
}

func (*brandingThemeColorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeColors)(nil)).Elem()
}

func (i *brandingThemeColorsPtrType) ToBrandingThemeColorsPtrOutput() BrandingThemeColorsPtrOutput {
	return i.ToBrandingThemeColorsPtrOutputWithContext(context.Background())
}

func (i *brandingThemeColorsPtrType) ToBrandingThemeColorsPtrOutputWithContext(ctx context.Context) BrandingThemeColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeColorsPtrOutput)
}

type BrandingThemeColorsOutput struct{ *pulumi.OutputState }

func (BrandingThemeColorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeColors)(nil)).Elem()
}

func (o BrandingThemeColorsOutput) ToBrandingThemeColorsOutput() BrandingThemeColorsOutput {
	return o
}

func (o BrandingThemeColorsOutput) ToBrandingThemeColorsOutputWithContext(ctx context.Context) BrandingThemeColorsOutput {
	return o
}

func (o BrandingThemeColorsOutput) ToBrandingThemeColorsPtrOutput() BrandingThemeColorsPtrOutput {
	return o.ToBrandingThemeColorsPtrOutputWithContext(context.Background())
}

func (o BrandingThemeColorsOutput) ToBrandingThemeColorsPtrOutputWithContext(ctx context.Context) BrandingThemeColorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeColors) *BrandingThemeColors {
		return &v
	}).(BrandingThemeColorsPtrOutput)
}

// Base focus color.
func (o BrandingThemeColorsOutput) BaseFocusColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.BaseFocusColor }).(pulumi.StringPtrOutput)
}

// Base hover color.
func (o BrandingThemeColorsOutput) BaseHoverColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.BaseHoverColor }).(pulumi.StringPtrOutput)
}

// Body text.
func (o BrandingThemeColorsOutput) BodyText() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.BodyText }).(pulumi.StringOutput)
}

// Error.
func (o BrandingThemeColorsOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.Error }).(pulumi.StringOutput)
}

// Header.
func (o BrandingThemeColorsOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.Header }).(pulumi.StringOutput)
}

// Icons.
func (o BrandingThemeColorsOutput) Icons() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.Icons }).(pulumi.StringOutput)
}

// Input background.
func (o BrandingThemeColorsOutput) InputBackground() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.InputBackground }).(pulumi.StringOutput)
}

// Input border.
func (o BrandingThemeColorsOutput) InputBorder() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.InputBorder }).(pulumi.StringOutput)
}

// Input filled text.
func (o BrandingThemeColorsOutput) InputFilledText() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.InputFilledText }).(pulumi.StringOutput)
}

// Input labels & placeholders.
func (o BrandingThemeColorsOutput) InputLabelsPlaceholders() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.InputLabelsPlaceholders }).(pulumi.StringOutput)
}

// Links & focused components.
func (o BrandingThemeColorsOutput) LinksFocusedComponents() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.LinksFocusedComponents }).(pulumi.StringOutput)
}

// Primary button.
func (o BrandingThemeColorsOutput) PrimaryButton() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.PrimaryButton }).(pulumi.StringOutput)
}

// Primary button label.
func (o BrandingThemeColorsOutput) PrimaryButtonLabel() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.PrimaryButtonLabel }).(pulumi.StringOutput)
}

// Secondary button border.
func (o BrandingThemeColorsOutput) SecondaryButtonBorder() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.SecondaryButtonBorder }).(pulumi.StringOutput)
}

// Secondary button label.
func (o BrandingThemeColorsOutput) SecondaryButtonLabel() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.SecondaryButtonLabel }).(pulumi.StringOutput)
}

// Success.
func (o BrandingThemeColorsOutput) Success() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.Success }).(pulumi.StringOutput)
}

// Widget background.
func (o BrandingThemeColorsOutput) WidgetBackground() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.WidgetBackground }).(pulumi.StringOutput)
}

// Widget border.
func (o BrandingThemeColorsOutput) WidgetBorder() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeColors) string { return v.WidgetBorder }).(pulumi.StringOutput)
}

type BrandingThemeColorsPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeColorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeColors)(nil)).Elem()
}

func (o BrandingThemeColorsPtrOutput) ToBrandingThemeColorsPtrOutput() BrandingThemeColorsPtrOutput {
	return o
}

func (o BrandingThemeColorsPtrOutput) ToBrandingThemeColorsPtrOutputWithContext(ctx context.Context) BrandingThemeColorsPtrOutput {
	return o
}

func (o BrandingThemeColorsPtrOutput) Elem() BrandingThemeColorsOutput {
	return o.ApplyT(func(v *BrandingThemeColors) BrandingThemeColors {
		if v != nil {
			return *v
		}
		var ret BrandingThemeColors
		return ret
	}).(BrandingThemeColorsOutput)
}

// Base focus color.
func (o BrandingThemeColorsPtrOutput) BaseFocusColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.BaseFocusColor
	}).(pulumi.StringPtrOutput)
}

// Base hover color.
func (o BrandingThemeColorsPtrOutput) BaseHoverColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.BaseHoverColor
	}).(pulumi.StringPtrOutput)
}

// Body text.
func (o BrandingThemeColorsPtrOutput) BodyText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.BodyText
	}).(pulumi.StringPtrOutput)
}

// Error.
func (o BrandingThemeColorsPtrOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.Error
	}).(pulumi.StringPtrOutput)
}

// Header.
func (o BrandingThemeColorsPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.Header
	}).(pulumi.StringPtrOutput)
}

// Icons.
func (o BrandingThemeColorsPtrOutput) Icons() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.Icons
	}).(pulumi.StringPtrOutput)
}

// Input background.
func (o BrandingThemeColorsPtrOutput) InputBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.InputBackground
	}).(pulumi.StringPtrOutput)
}

// Input border.
func (o BrandingThemeColorsPtrOutput) InputBorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.InputBorder
	}).(pulumi.StringPtrOutput)
}

// Input filled text.
func (o BrandingThemeColorsPtrOutput) InputFilledText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.InputFilledText
	}).(pulumi.StringPtrOutput)
}

// Input labels & placeholders.
func (o BrandingThemeColorsPtrOutput) InputLabelsPlaceholders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.InputLabelsPlaceholders
	}).(pulumi.StringPtrOutput)
}

// Links & focused components.
func (o BrandingThemeColorsPtrOutput) LinksFocusedComponents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.LinksFocusedComponents
	}).(pulumi.StringPtrOutput)
}

// Primary button.
func (o BrandingThemeColorsPtrOutput) PrimaryButton() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryButton
	}).(pulumi.StringPtrOutput)
}

// Primary button label.
func (o BrandingThemeColorsPtrOutput) PrimaryButtonLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.PrimaryButtonLabel
	}).(pulumi.StringPtrOutput)
}

// Secondary button border.
func (o BrandingThemeColorsPtrOutput) SecondaryButtonBorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryButtonBorder
	}).(pulumi.StringPtrOutput)
}

// Secondary button label.
func (o BrandingThemeColorsPtrOutput) SecondaryButtonLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.SecondaryButtonLabel
	}).(pulumi.StringPtrOutput)
}

// Success.
func (o BrandingThemeColorsPtrOutput) Success() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.Success
	}).(pulumi.StringPtrOutput)
}

// Widget background.
func (o BrandingThemeColorsPtrOutput) WidgetBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.WidgetBackground
	}).(pulumi.StringPtrOutput)
}

// Widget border.
func (o BrandingThemeColorsPtrOutput) WidgetBorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return &v.WidgetBorder
	}).(pulumi.StringPtrOutput)
}

type BrandingThemeFonts struct {
	// Body text.
	BodyText BrandingThemeFontsBodyText `pulumi:"bodyText"`
	// Buttons text.
	ButtonsText BrandingThemeFontsButtonsText `pulumi:"buttonsText"`
	// Font URL.
	FontUrl string `pulumi:"fontUrl"`
	// Input labels.
	InputLabels BrandingThemeFontsInputLabels `pulumi:"inputLabels"`
	// Links.
	Links BrandingThemeFontsLinks `pulumi:"links"`
	// Links style.
	LinksStyle string `pulumi:"linksStyle"`
	// Reference text size. Value needs to be between `12` and `24`.
	ReferenceTextSize float64 `pulumi:"referenceTextSize"`
	// Subtitle.
	Subtitle BrandingThemeFontsSubtitle `pulumi:"subtitle"`
	// Title.
	Title BrandingThemeFontsTitle `pulumi:"title"`
}

// BrandingThemeFontsInput is an input type that accepts BrandingThemeFontsArgs and BrandingThemeFontsOutput values.
// You can construct a concrete instance of `BrandingThemeFontsInput` via:
//
//	BrandingThemeFontsArgs{...}
type BrandingThemeFontsInput interface {
	pulumi.Input

	ToBrandingThemeFontsOutput() BrandingThemeFontsOutput
	ToBrandingThemeFontsOutputWithContext(context.Context) BrandingThemeFontsOutput
}

type BrandingThemeFontsArgs struct {
	// Body text.
	BodyText BrandingThemeFontsBodyTextInput `pulumi:"bodyText"`
	// Buttons text.
	ButtonsText BrandingThemeFontsButtonsTextInput `pulumi:"buttonsText"`
	// Font URL.
	FontUrl pulumi.StringInput `pulumi:"fontUrl"`
	// Input labels.
	InputLabels BrandingThemeFontsInputLabelsInput `pulumi:"inputLabels"`
	// Links.
	Links BrandingThemeFontsLinksInput `pulumi:"links"`
	// Links style.
	LinksStyle pulumi.StringInput `pulumi:"linksStyle"`
	// Reference text size. Value needs to be between `12` and `24`.
	ReferenceTextSize pulumi.Float64Input `pulumi:"referenceTextSize"`
	// Subtitle.
	Subtitle BrandingThemeFontsSubtitleInput `pulumi:"subtitle"`
	// Title.
	Title BrandingThemeFontsTitleInput `pulumi:"title"`
}

func (BrandingThemeFontsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFonts)(nil)).Elem()
}

func (i BrandingThemeFontsArgs) ToBrandingThemeFontsOutput() BrandingThemeFontsOutput {
	return i.ToBrandingThemeFontsOutputWithContext(context.Background())
}

func (i BrandingThemeFontsArgs) ToBrandingThemeFontsOutputWithContext(ctx context.Context) BrandingThemeFontsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsOutput)
}

func (i BrandingThemeFontsArgs) ToBrandingThemeFontsPtrOutput() BrandingThemeFontsPtrOutput {
	return i.ToBrandingThemeFontsPtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsArgs) ToBrandingThemeFontsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsOutput).ToBrandingThemeFontsPtrOutputWithContext(ctx)
}

// BrandingThemeFontsPtrInput is an input type that accepts BrandingThemeFontsArgs, BrandingThemeFontsPtr and BrandingThemeFontsPtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsPtrInput` via:
//
//	        BrandingThemeFontsArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsPtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsPtrOutput() BrandingThemeFontsPtrOutput
	ToBrandingThemeFontsPtrOutputWithContext(context.Context) BrandingThemeFontsPtrOutput
}

type brandingThemeFontsPtrType BrandingThemeFontsArgs

func BrandingThemeFontsPtr(v *BrandingThemeFontsArgs) BrandingThemeFontsPtrInput {
	return (*brandingThemeFontsPtrType)(v)
}

func (*brandingThemeFontsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFonts)(nil)).Elem()
}

func (i *brandingThemeFontsPtrType) ToBrandingThemeFontsPtrOutput() BrandingThemeFontsPtrOutput {
	return i.ToBrandingThemeFontsPtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsPtrType) ToBrandingThemeFontsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsPtrOutput)
}

type BrandingThemeFontsOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFonts)(nil)).Elem()
}

func (o BrandingThemeFontsOutput) ToBrandingThemeFontsOutput() BrandingThemeFontsOutput {
	return o
}

func (o BrandingThemeFontsOutput) ToBrandingThemeFontsOutputWithContext(ctx context.Context) BrandingThemeFontsOutput {
	return o
}

func (o BrandingThemeFontsOutput) ToBrandingThemeFontsPtrOutput() BrandingThemeFontsPtrOutput {
	return o.ToBrandingThemeFontsPtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsOutput) ToBrandingThemeFontsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFonts) *BrandingThemeFonts {
		return &v
	}).(BrandingThemeFontsPtrOutput)
}

// Body text.
func (o BrandingThemeFontsOutput) BodyText() BrandingThemeFontsBodyTextOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsBodyText { return v.BodyText }).(BrandingThemeFontsBodyTextOutput)
}

// Buttons text.
func (o BrandingThemeFontsOutput) ButtonsText() BrandingThemeFontsButtonsTextOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsButtonsText { return v.ButtonsText }).(BrandingThemeFontsButtonsTextOutput)
}

// Font URL.
func (o BrandingThemeFontsOutput) FontUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeFonts) string { return v.FontUrl }).(pulumi.StringOutput)
}

// Input labels.
func (o BrandingThemeFontsOutput) InputLabels() BrandingThemeFontsInputLabelsOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsInputLabels { return v.InputLabels }).(BrandingThemeFontsInputLabelsOutput)
}

// Links.
func (o BrandingThemeFontsOutput) Links() BrandingThemeFontsLinksOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsLinks { return v.Links }).(BrandingThemeFontsLinksOutput)
}

// Links style.
func (o BrandingThemeFontsOutput) LinksStyle() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeFonts) string { return v.LinksStyle }).(pulumi.StringOutput)
}

// Reference text size. Value needs to be between `12` and `24`.
func (o BrandingThemeFontsOutput) ReferenceTextSize() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeFonts) float64 { return v.ReferenceTextSize }).(pulumi.Float64Output)
}

// Subtitle.
func (o BrandingThemeFontsOutput) Subtitle() BrandingThemeFontsSubtitleOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsSubtitle { return v.Subtitle }).(BrandingThemeFontsSubtitleOutput)
}

// Title.
func (o BrandingThemeFontsOutput) Title() BrandingThemeFontsTitleOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsTitle { return v.Title }).(BrandingThemeFontsTitleOutput)
}

type BrandingThemeFontsPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFonts)(nil)).Elem()
}

func (o BrandingThemeFontsPtrOutput) ToBrandingThemeFontsPtrOutput() BrandingThemeFontsPtrOutput {
	return o
}

func (o BrandingThemeFontsPtrOutput) ToBrandingThemeFontsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsPtrOutput {
	return o
}

func (o BrandingThemeFontsPtrOutput) Elem() BrandingThemeFontsOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) BrandingThemeFonts {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFonts
		return ret
	}).(BrandingThemeFontsOutput)
}

// Body text.
func (o BrandingThemeFontsPtrOutput) BodyText() BrandingThemeFontsBodyTextPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsBodyText {
		if v == nil {
			return nil
		}
		return &v.BodyText
	}).(BrandingThemeFontsBodyTextPtrOutput)
}

// Buttons text.
func (o BrandingThemeFontsPtrOutput) ButtonsText() BrandingThemeFontsButtonsTextPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsButtonsText {
		if v == nil {
			return nil
		}
		return &v.ButtonsText
	}).(BrandingThemeFontsButtonsTextPtrOutput)
}

// Font URL.
func (o BrandingThemeFontsPtrOutput) FontUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *string {
		if v == nil {
			return nil
		}
		return &v.FontUrl
	}).(pulumi.StringPtrOutput)
}

// Input labels.
func (o BrandingThemeFontsPtrOutput) InputLabels() BrandingThemeFontsInputLabelsPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsInputLabels {
		if v == nil {
			return nil
		}
		return &v.InputLabels
	}).(BrandingThemeFontsInputLabelsPtrOutput)
}

// Links.
func (o BrandingThemeFontsPtrOutput) Links() BrandingThemeFontsLinksPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsLinks {
		if v == nil {
			return nil
		}
		return &v.Links
	}).(BrandingThemeFontsLinksPtrOutput)
}

// Links style.
func (o BrandingThemeFontsPtrOutput) LinksStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *string {
		if v == nil {
			return nil
		}
		return &v.LinksStyle
	}).(pulumi.StringPtrOutput)
}

// Reference text size. Value needs to be between `12` and `24`.
func (o BrandingThemeFontsPtrOutput) ReferenceTextSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *float64 {
		if v == nil {
			return nil
		}
		return &v.ReferenceTextSize
	}).(pulumi.Float64PtrOutput)
}

// Subtitle.
func (o BrandingThemeFontsPtrOutput) Subtitle() BrandingThemeFontsSubtitlePtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsSubtitle {
		if v == nil {
			return nil
		}
		return &v.Subtitle
	}).(BrandingThemeFontsSubtitlePtrOutput)
}

// Title.
func (o BrandingThemeFontsPtrOutput) Title() BrandingThemeFontsTitlePtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsTitle {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(BrandingThemeFontsTitlePtrOutput)
}

type BrandingThemeFontsBodyText struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// BrandingThemeFontsBodyTextInput is an input type that accepts BrandingThemeFontsBodyTextArgs and BrandingThemeFontsBodyTextOutput values.
// You can construct a concrete instance of `BrandingThemeFontsBodyTextInput` via:
//
//	BrandingThemeFontsBodyTextArgs{...}
type BrandingThemeFontsBodyTextInput interface {
	pulumi.Input

	ToBrandingThemeFontsBodyTextOutput() BrandingThemeFontsBodyTextOutput
	ToBrandingThemeFontsBodyTextOutputWithContext(context.Context) BrandingThemeFontsBodyTextOutput
}

type BrandingThemeFontsBodyTextArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (BrandingThemeFontsBodyTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsBodyText)(nil)).Elem()
}

func (i BrandingThemeFontsBodyTextArgs) ToBrandingThemeFontsBodyTextOutput() BrandingThemeFontsBodyTextOutput {
	return i.ToBrandingThemeFontsBodyTextOutputWithContext(context.Background())
}

func (i BrandingThemeFontsBodyTextArgs) ToBrandingThemeFontsBodyTextOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsBodyTextOutput)
}

func (i BrandingThemeFontsBodyTextArgs) ToBrandingThemeFontsBodyTextPtrOutput() BrandingThemeFontsBodyTextPtrOutput {
	return i.ToBrandingThemeFontsBodyTextPtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsBodyTextArgs) ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsBodyTextOutput).ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx)
}

// BrandingThemeFontsBodyTextPtrInput is an input type that accepts BrandingThemeFontsBodyTextArgs, BrandingThemeFontsBodyTextPtr and BrandingThemeFontsBodyTextPtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsBodyTextPtrInput` via:
//
//	        BrandingThemeFontsBodyTextArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsBodyTextPtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsBodyTextPtrOutput() BrandingThemeFontsBodyTextPtrOutput
	ToBrandingThemeFontsBodyTextPtrOutputWithContext(context.Context) BrandingThemeFontsBodyTextPtrOutput
}

type brandingThemeFontsBodyTextPtrType BrandingThemeFontsBodyTextArgs

func BrandingThemeFontsBodyTextPtr(v *BrandingThemeFontsBodyTextArgs) BrandingThemeFontsBodyTextPtrInput {
	return (*brandingThemeFontsBodyTextPtrType)(v)
}

func (*brandingThemeFontsBodyTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsBodyText)(nil)).Elem()
}

func (i *brandingThemeFontsBodyTextPtrType) ToBrandingThemeFontsBodyTextPtrOutput() BrandingThemeFontsBodyTextPtrOutput {
	return i.ToBrandingThemeFontsBodyTextPtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsBodyTextPtrType) ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsBodyTextPtrOutput)
}

type BrandingThemeFontsBodyTextOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsBodyTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsBodyText)(nil)).Elem()
}

func (o BrandingThemeFontsBodyTextOutput) ToBrandingThemeFontsBodyTextOutput() BrandingThemeFontsBodyTextOutput {
	return o
}

func (o BrandingThemeFontsBodyTextOutput) ToBrandingThemeFontsBodyTextOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextOutput {
	return o
}

func (o BrandingThemeFontsBodyTextOutput) ToBrandingThemeFontsBodyTextPtrOutput() BrandingThemeFontsBodyTextPtrOutput {
	return o.ToBrandingThemeFontsBodyTextPtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsBodyTextOutput) ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsBodyText) *BrandingThemeFontsBodyText {
		return &v
	}).(BrandingThemeFontsBodyTextPtrOutput)
}

func (o BrandingThemeFontsBodyTextOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v BrandingThemeFontsBodyText) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o BrandingThemeFontsBodyTextOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeFontsBodyText) float64 { return v.Size }).(pulumi.Float64Output)
}

type BrandingThemeFontsBodyTextPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsBodyTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsBodyText)(nil)).Elem()
}

func (o BrandingThemeFontsBodyTextPtrOutput) ToBrandingThemeFontsBodyTextPtrOutput() BrandingThemeFontsBodyTextPtrOutput {
	return o
}

func (o BrandingThemeFontsBodyTextPtrOutput) ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextPtrOutput {
	return o
}

func (o BrandingThemeFontsBodyTextPtrOutput) Elem() BrandingThemeFontsBodyTextOutput {
	return o.ApplyT(func(v *BrandingThemeFontsBodyText) BrandingThemeFontsBodyText {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsBodyText
		return ret
	}).(BrandingThemeFontsBodyTextOutput)
}

func (o BrandingThemeFontsBodyTextPtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsBodyText) *bool {
		if v == nil {
			return nil
		}
		return &v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsBodyTextPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsBodyText) *float64 {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsButtonsText struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// BrandingThemeFontsButtonsTextInput is an input type that accepts BrandingThemeFontsButtonsTextArgs and BrandingThemeFontsButtonsTextOutput values.
// You can construct a concrete instance of `BrandingThemeFontsButtonsTextInput` via:
//
//	BrandingThemeFontsButtonsTextArgs{...}
type BrandingThemeFontsButtonsTextInput interface {
	pulumi.Input

	ToBrandingThemeFontsButtonsTextOutput() BrandingThemeFontsButtonsTextOutput
	ToBrandingThemeFontsButtonsTextOutputWithContext(context.Context) BrandingThemeFontsButtonsTextOutput
}

type BrandingThemeFontsButtonsTextArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (BrandingThemeFontsButtonsTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsButtonsText)(nil)).Elem()
}

func (i BrandingThemeFontsButtonsTextArgs) ToBrandingThemeFontsButtonsTextOutput() BrandingThemeFontsButtonsTextOutput {
	return i.ToBrandingThemeFontsButtonsTextOutputWithContext(context.Background())
}

func (i BrandingThemeFontsButtonsTextArgs) ToBrandingThemeFontsButtonsTextOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsButtonsTextOutput)
}

func (i BrandingThemeFontsButtonsTextArgs) ToBrandingThemeFontsButtonsTextPtrOutput() BrandingThemeFontsButtonsTextPtrOutput {
	return i.ToBrandingThemeFontsButtonsTextPtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsButtonsTextArgs) ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsButtonsTextOutput).ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx)
}

// BrandingThemeFontsButtonsTextPtrInput is an input type that accepts BrandingThemeFontsButtonsTextArgs, BrandingThemeFontsButtonsTextPtr and BrandingThemeFontsButtonsTextPtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsButtonsTextPtrInput` via:
//
//	        BrandingThemeFontsButtonsTextArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsButtonsTextPtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsButtonsTextPtrOutput() BrandingThemeFontsButtonsTextPtrOutput
	ToBrandingThemeFontsButtonsTextPtrOutputWithContext(context.Context) BrandingThemeFontsButtonsTextPtrOutput
}

type brandingThemeFontsButtonsTextPtrType BrandingThemeFontsButtonsTextArgs

func BrandingThemeFontsButtonsTextPtr(v *BrandingThemeFontsButtonsTextArgs) BrandingThemeFontsButtonsTextPtrInput {
	return (*brandingThemeFontsButtonsTextPtrType)(v)
}

func (*brandingThemeFontsButtonsTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsButtonsText)(nil)).Elem()
}

func (i *brandingThemeFontsButtonsTextPtrType) ToBrandingThemeFontsButtonsTextPtrOutput() BrandingThemeFontsButtonsTextPtrOutput {
	return i.ToBrandingThemeFontsButtonsTextPtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsButtonsTextPtrType) ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsButtonsTextPtrOutput)
}

type BrandingThemeFontsButtonsTextOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsButtonsTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsButtonsText)(nil)).Elem()
}

func (o BrandingThemeFontsButtonsTextOutput) ToBrandingThemeFontsButtonsTextOutput() BrandingThemeFontsButtonsTextOutput {
	return o
}

func (o BrandingThemeFontsButtonsTextOutput) ToBrandingThemeFontsButtonsTextOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextOutput {
	return o
}

func (o BrandingThemeFontsButtonsTextOutput) ToBrandingThemeFontsButtonsTextPtrOutput() BrandingThemeFontsButtonsTextPtrOutput {
	return o.ToBrandingThemeFontsButtonsTextPtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsButtonsTextOutput) ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsButtonsText) *BrandingThemeFontsButtonsText {
		return &v
	}).(BrandingThemeFontsButtonsTextPtrOutput)
}

func (o BrandingThemeFontsButtonsTextOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v BrandingThemeFontsButtonsText) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o BrandingThemeFontsButtonsTextOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeFontsButtonsText) float64 { return v.Size }).(pulumi.Float64Output)
}

type BrandingThemeFontsButtonsTextPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsButtonsTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsButtonsText)(nil)).Elem()
}

func (o BrandingThemeFontsButtonsTextPtrOutput) ToBrandingThemeFontsButtonsTextPtrOutput() BrandingThemeFontsButtonsTextPtrOutput {
	return o
}

func (o BrandingThemeFontsButtonsTextPtrOutput) ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextPtrOutput {
	return o
}

func (o BrandingThemeFontsButtonsTextPtrOutput) Elem() BrandingThemeFontsButtonsTextOutput {
	return o.ApplyT(func(v *BrandingThemeFontsButtonsText) BrandingThemeFontsButtonsText {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsButtonsText
		return ret
	}).(BrandingThemeFontsButtonsTextOutput)
}

func (o BrandingThemeFontsButtonsTextPtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsButtonsText) *bool {
		if v == nil {
			return nil
		}
		return &v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsButtonsTextPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsButtonsText) *float64 {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsInputLabels struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// BrandingThemeFontsInputLabelsInput is an input type that accepts BrandingThemeFontsInputLabelsArgs and BrandingThemeFontsInputLabelsOutput values.
// You can construct a concrete instance of `BrandingThemeFontsInputLabelsInput` via:
//
//	BrandingThemeFontsInputLabelsArgs{...}
type BrandingThemeFontsInputLabelsInput interface {
	pulumi.Input

	ToBrandingThemeFontsInputLabelsOutput() BrandingThemeFontsInputLabelsOutput
	ToBrandingThemeFontsInputLabelsOutputWithContext(context.Context) BrandingThemeFontsInputLabelsOutput
}

type BrandingThemeFontsInputLabelsArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (BrandingThemeFontsInputLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsInputLabels)(nil)).Elem()
}

func (i BrandingThemeFontsInputLabelsArgs) ToBrandingThemeFontsInputLabelsOutput() BrandingThemeFontsInputLabelsOutput {
	return i.ToBrandingThemeFontsInputLabelsOutputWithContext(context.Background())
}

func (i BrandingThemeFontsInputLabelsArgs) ToBrandingThemeFontsInputLabelsOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsInputLabelsOutput)
}

func (i BrandingThemeFontsInputLabelsArgs) ToBrandingThemeFontsInputLabelsPtrOutput() BrandingThemeFontsInputLabelsPtrOutput {
	return i.ToBrandingThemeFontsInputLabelsPtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsInputLabelsArgs) ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsInputLabelsOutput).ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx)
}

// BrandingThemeFontsInputLabelsPtrInput is an input type that accepts BrandingThemeFontsInputLabelsArgs, BrandingThemeFontsInputLabelsPtr and BrandingThemeFontsInputLabelsPtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsInputLabelsPtrInput` via:
//
//	        BrandingThemeFontsInputLabelsArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsInputLabelsPtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsInputLabelsPtrOutput() BrandingThemeFontsInputLabelsPtrOutput
	ToBrandingThemeFontsInputLabelsPtrOutputWithContext(context.Context) BrandingThemeFontsInputLabelsPtrOutput
}

type brandingThemeFontsInputLabelsPtrType BrandingThemeFontsInputLabelsArgs

func BrandingThemeFontsInputLabelsPtr(v *BrandingThemeFontsInputLabelsArgs) BrandingThemeFontsInputLabelsPtrInput {
	return (*brandingThemeFontsInputLabelsPtrType)(v)
}

func (*brandingThemeFontsInputLabelsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsInputLabels)(nil)).Elem()
}

func (i *brandingThemeFontsInputLabelsPtrType) ToBrandingThemeFontsInputLabelsPtrOutput() BrandingThemeFontsInputLabelsPtrOutput {
	return i.ToBrandingThemeFontsInputLabelsPtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsInputLabelsPtrType) ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsInputLabelsPtrOutput)
}

type BrandingThemeFontsInputLabelsOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsInputLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsInputLabels)(nil)).Elem()
}

func (o BrandingThemeFontsInputLabelsOutput) ToBrandingThemeFontsInputLabelsOutput() BrandingThemeFontsInputLabelsOutput {
	return o
}

func (o BrandingThemeFontsInputLabelsOutput) ToBrandingThemeFontsInputLabelsOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsOutput {
	return o
}

func (o BrandingThemeFontsInputLabelsOutput) ToBrandingThemeFontsInputLabelsPtrOutput() BrandingThemeFontsInputLabelsPtrOutput {
	return o.ToBrandingThemeFontsInputLabelsPtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsInputLabelsOutput) ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsInputLabels) *BrandingThemeFontsInputLabels {
		return &v
	}).(BrandingThemeFontsInputLabelsPtrOutput)
}

func (o BrandingThemeFontsInputLabelsOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v BrandingThemeFontsInputLabels) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o BrandingThemeFontsInputLabelsOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeFontsInputLabels) float64 { return v.Size }).(pulumi.Float64Output)
}

type BrandingThemeFontsInputLabelsPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsInputLabelsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsInputLabels)(nil)).Elem()
}

func (o BrandingThemeFontsInputLabelsPtrOutput) ToBrandingThemeFontsInputLabelsPtrOutput() BrandingThemeFontsInputLabelsPtrOutput {
	return o
}

func (o BrandingThemeFontsInputLabelsPtrOutput) ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsPtrOutput {
	return o
}

func (o BrandingThemeFontsInputLabelsPtrOutput) Elem() BrandingThemeFontsInputLabelsOutput {
	return o.ApplyT(func(v *BrandingThemeFontsInputLabels) BrandingThemeFontsInputLabels {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsInputLabels
		return ret
	}).(BrandingThemeFontsInputLabelsOutput)
}

func (o BrandingThemeFontsInputLabelsPtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsInputLabels) *bool {
		if v == nil {
			return nil
		}
		return &v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsInputLabelsPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsInputLabels) *float64 {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsLinks struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// BrandingThemeFontsLinksInput is an input type that accepts BrandingThemeFontsLinksArgs and BrandingThemeFontsLinksOutput values.
// You can construct a concrete instance of `BrandingThemeFontsLinksInput` via:
//
//	BrandingThemeFontsLinksArgs{...}
type BrandingThemeFontsLinksInput interface {
	pulumi.Input

	ToBrandingThemeFontsLinksOutput() BrandingThemeFontsLinksOutput
	ToBrandingThemeFontsLinksOutputWithContext(context.Context) BrandingThemeFontsLinksOutput
}

type BrandingThemeFontsLinksArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (BrandingThemeFontsLinksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsLinks)(nil)).Elem()
}

func (i BrandingThemeFontsLinksArgs) ToBrandingThemeFontsLinksOutput() BrandingThemeFontsLinksOutput {
	return i.ToBrandingThemeFontsLinksOutputWithContext(context.Background())
}

func (i BrandingThemeFontsLinksArgs) ToBrandingThemeFontsLinksOutputWithContext(ctx context.Context) BrandingThemeFontsLinksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsLinksOutput)
}

func (i BrandingThemeFontsLinksArgs) ToBrandingThemeFontsLinksPtrOutput() BrandingThemeFontsLinksPtrOutput {
	return i.ToBrandingThemeFontsLinksPtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsLinksArgs) ToBrandingThemeFontsLinksPtrOutputWithContext(ctx context.Context) BrandingThemeFontsLinksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsLinksOutput).ToBrandingThemeFontsLinksPtrOutputWithContext(ctx)
}

// BrandingThemeFontsLinksPtrInput is an input type that accepts BrandingThemeFontsLinksArgs, BrandingThemeFontsLinksPtr and BrandingThemeFontsLinksPtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsLinksPtrInput` via:
//
//	        BrandingThemeFontsLinksArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsLinksPtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsLinksPtrOutput() BrandingThemeFontsLinksPtrOutput
	ToBrandingThemeFontsLinksPtrOutputWithContext(context.Context) BrandingThemeFontsLinksPtrOutput
}

type brandingThemeFontsLinksPtrType BrandingThemeFontsLinksArgs

func BrandingThemeFontsLinksPtr(v *BrandingThemeFontsLinksArgs) BrandingThemeFontsLinksPtrInput {
	return (*brandingThemeFontsLinksPtrType)(v)
}

func (*brandingThemeFontsLinksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsLinks)(nil)).Elem()
}

func (i *brandingThemeFontsLinksPtrType) ToBrandingThemeFontsLinksPtrOutput() BrandingThemeFontsLinksPtrOutput {
	return i.ToBrandingThemeFontsLinksPtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsLinksPtrType) ToBrandingThemeFontsLinksPtrOutputWithContext(ctx context.Context) BrandingThemeFontsLinksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsLinksPtrOutput)
}

type BrandingThemeFontsLinksOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsLinks)(nil)).Elem()
}

func (o BrandingThemeFontsLinksOutput) ToBrandingThemeFontsLinksOutput() BrandingThemeFontsLinksOutput {
	return o
}

func (o BrandingThemeFontsLinksOutput) ToBrandingThemeFontsLinksOutputWithContext(ctx context.Context) BrandingThemeFontsLinksOutput {
	return o
}

func (o BrandingThemeFontsLinksOutput) ToBrandingThemeFontsLinksPtrOutput() BrandingThemeFontsLinksPtrOutput {
	return o.ToBrandingThemeFontsLinksPtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsLinksOutput) ToBrandingThemeFontsLinksPtrOutputWithContext(ctx context.Context) BrandingThemeFontsLinksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsLinks) *BrandingThemeFontsLinks {
		return &v
	}).(BrandingThemeFontsLinksPtrOutput)
}

func (o BrandingThemeFontsLinksOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v BrandingThemeFontsLinks) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o BrandingThemeFontsLinksOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeFontsLinks) float64 { return v.Size }).(pulumi.Float64Output)
}

type BrandingThemeFontsLinksPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsLinksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsLinks)(nil)).Elem()
}

func (o BrandingThemeFontsLinksPtrOutput) ToBrandingThemeFontsLinksPtrOutput() BrandingThemeFontsLinksPtrOutput {
	return o
}

func (o BrandingThemeFontsLinksPtrOutput) ToBrandingThemeFontsLinksPtrOutputWithContext(ctx context.Context) BrandingThemeFontsLinksPtrOutput {
	return o
}

func (o BrandingThemeFontsLinksPtrOutput) Elem() BrandingThemeFontsLinksOutput {
	return o.ApplyT(func(v *BrandingThemeFontsLinks) BrandingThemeFontsLinks {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsLinks
		return ret
	}).(BrandingThemeFontsLinksOutput)
}

func (o BrandingThemeFontsLinksPtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsLinks) *bool {
		if v == nil {
			return nil
		}
		return &v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsLinksPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsLinks) *float64 {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsSubtitle struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// BrandingThemeFontsSubtitleInput is an input type that accepts BrandingThemeFontsSubtitleArgs and BrandingThemeFontsSubtitleOutput values.
// You can construct a concrete instance of `BrandingThemeFontsSubtitleInput` via:
//
//	BrandingThemeFontsSubtitleArgs{...}
type BrandingThemeFontsSubtitleInput interface {
	pulumi.Input

	ToBrandingThemeFontsSubtitleOutput() BrandingThemeFontsSubtitleOutput
	ToBrandingThemeFontsSubtitleOutputWithContext(context.Context) BrandingThemeFontsSubtitleOutput
}

type BrandingThemeFontsSubtitleArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (BrandingThemeFontsSubtitleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsSubtitle)(nil)).Elem()
}

func (i BrandingThemeFontsSubtitleArgs) ToBrandingThemeFontsSubtitleOutput() BrandingThemeFontsSubtitleOutput {
	return i.ToBrandingThemeFontsSubtitleOutputWithContext(context.Background())
}

func (i BrandingThemeFontsSubtitleArgs) ToBrandingThemeFontsSubtitleOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsSubtitleOutput)
}

func (i BrandingThemeFontsSubtitleArgs) ToBrandingThemeFontsSubtitlePtrOutput() BrandingThemeFontsSubtitlePtrOutput {
	return i.ToBrandingThemeFontsSubtitlePtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsSubtitleArgs) ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsSubtitleOutput).ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx)
}

// BrandingThemeFontsSubtitlePtrInput is an input type that accepts BrandingThemeFontsSubtitleArgs, BrandingThemeFontsSubtitlePtr and BrandingThemeFontsSubtitlePtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsSubtitlePtrInput` via:
//
//	        BrandingThemeFontsSubtitleArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsSubtitlePtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsSubtitlePtrOutput() BrandingThemeFontsSubtitlePtrOutput
	ToBrandingThemeFontsSubtitlePtrOutputWithContext(context.Context) BrandingThemeFontsSubtitlePtrOutput
}

type brandingThemeFontsSubtitlePtrType BrandingThemeFontsSubtitleArgs

func BrandingThemeFontsSubtitlePtr(v *BrandingThemeFontsSubtitleArgs) BrandingThemeFontsSubtitlePtrInput {
	return (*brandingThemeFontsSubtitlePtrType)(v)
}

func (*brandingThemeFontsSubtitlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsSubtitle)(nil)).Elem()
}

func (i *brandingThemeFontsSubtitlePtrType) ToBrandingThemeFontsSubtitlePtrOutput() BrandingThemeFontsSubtitlePtrOutput {
	return i.ToBrandingThemeFontsSubtitlePtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsSubtitlePtrType) ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsSubtitlePtrOutput)
}

type BrandingThemeFontsSubtitleOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsSubtitleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsSubtitle)(nil)).Elem()
}

func (o BrandingThemeFontsSubtitleOutput) ToBrandingThemeFontsSubtitleOutput() BrandingThemeFontsSubtitleOutput {
	return o
}

func (o BrandingThemeFontsSubtitleOutput) ToBrandingThemeFontsSubtitleOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitleOutput {
	return o
}

func (o BrandingThemeFontsSubtitleOutput) ToBrandingThemeFontsSubtitlePtrOutput() BrandingThemeFontsSubtitlePtrOutput {
	return o.ToBrandingThemeFontsSubtitlePtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsSubtitleOutput) ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsSubtitle) *BrandingThemeFontsSubtitle {
		return &v
	}).(BrandingThemeFontsSubtitlePtrOutput)
}

func (o BrandingThemeFontsSubtitleOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v BrandingThemeFontsSubtitle) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o BrandingThemeFontsSubtitleOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeFontsSubtitle) float64 { return v.Size }).(pulumi.Float64Output)
}

type BrandingThemeFontsSubtitlePtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsSubtitlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsSubtitle)(nil)).Elem()
}

func (o BrandingThemeFontsSubtitlePtrOutput) ToBrandingThemeFontsSubtitlePtrOutput() BrandingThemeFontsSubtitlePtrOutput {
	return o
}

func (o BrandingThemeFontsSubtitlePtrOutput) ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitlePtrOutput {
	return o
}

func (o BrandingThemeFontsSubtitlePtrOutput) Elem() BrandingThemeFontsSubtitleOutput {
	return o.ApplyT(func(v *BrandingThemeFontsSubtitle) BrandingThemeFontsSubtitle {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsSubtitle
		return ret
	}).(BrandingThemeFontsSubtitleOutput)
}

func (o BrandingThemeFontsSubtitlePtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsSubtitle) *bool {
		if v == nil {
			return nil
		}
		return &v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsSubtitlePtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsSubtitle) *float64 {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsTitle struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// BrandingThemeFontsTitleInput is an input type that accepts BrandingThemeFontsTitleArgs and BrandingThemeFontsTitleOutput values.
// You can construct a concrete instance of `BrandingThemeFontsTitleInput` via:
//
//	BrandingThemeFontsTitleArgs{...}
type BrandingThemeFontsTitleInput interface {
	pulumi.Input

	ToBrandingThemeFontsTitleOutput() BrandingThemeFontsTitleOutput
	ToBrandingThemeFontsTitleOutputWithContext(context.Context) BrandingThemeFontsTitleOutput
}

type BrandingThemeFontsTitleArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (BrandingThemeFontsTitleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsTitle)(nil)).Elem()
}

func (i BrandingThemeFontsTitleArgs) ToBrandingThemeFontsTitleOutput() BrandingThemeFontsTitleOutput {
	return i.ToBrandingThemeFontsTitleOutputWithContext(context.Background())
}

func (i BrandingThemeFontsTitleArgs) ToBrandingThemeFontsTitleOutputWithContext(ctx context.Context) BrandingThemeFontsTitleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsTitleOutput)
}

func (i BrandingThemeFontsTitleArgs) ToBrandingThemeFontsTitlePtrOutput() BrandingThemeFontsTitlePtrOutput {
	return i.ToBrandingThemeFontsTitlePtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsTitleArgs) ToBrandingThemeFontsTitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsTitlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsTitleOutput).ToBrandingThemeFontsTitlePtrOutputWithContext(ctx)
}

// BrandingThemeFontsTitlePtrInput is an input type that accepts BrandingThemeFontsTitleArgs, BrandingThemeFontsTitlePtr and BrandingThemeFontsTitlePtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsTitlePtrInput` via:
//
//	        BrandingThemeFontsTitleArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsTitlePtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsTitlePtrOutput() BrandingThemeFontsTitlePtrOutput
	ToBrandingThemeFontsTitlePtrOutputWithContext(context.Context) BrandingThemeFontsTitlePtrOutput
}

type brandingThemeFontsTitlePtrType BrandingThemeFontsTitleArgs

func BrandingThemeFontsTitlePtr(v *BrandingThemeFontsTitleArgs) BrandingThemeFontsTitlePtrInput {
	return (*brandingThemeFontsTitlePtrType)(v)
}

func (*brandingThemeFontsTitlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsTitle)(nil)).Elem()
}

func (i *brandingThemeFontsTitlePtrType) ToBrandingThemeFontsTitlePtrOutput() BrandingThemeFontsTitlePtrOutput {
	return i.ToBrandingThemeFontsTitlePtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsTitlePtrType) ToBrandingThemeFontsTitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsTitlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsTitlePtrOutput)
}

type BrandingThemeFontsTitleOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsTitleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsTitle)(nil)).Elem()
}

func (o BrandingThemeFontsTitleOutput) ToBrandingThemeFontsTitleOutput() BrandingThemeFontsTitleOutput {
	return o
}

func (o BrandingThemeFontsTitleOutput) ToBrandingThemeFontsTitleOutputWithContext(ctx context.Context) BrandingThemeFontsTitleOutput {
	return o
}

func (o BrandingThemeFontsTitleOutput) ToBrandingThemeFontsTitlePtrOutput() BrandingThemeFontsTitlePtrOutput {
	return o.ToBrandingThemeFontsTitlePtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsTitleOutput) ToBrandingThemeFontsTitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsTitlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsTitle) *BrandingThemeFontsTitle {
		return &v
	}).(BrandingThemeFontsTitlePtrOutput)
}

func (o BrandingThemeFontsTitleOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v BrandingThemeFontsTitle) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o BrandingThemeFontsTitleOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeFontsTitle) float64 { return v.Size }).(pulumi.Float64Output)
}

type BrandingThemeFontsTitlePtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsTitlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsTitle)(nil)).Elem()
}

func (o BrandingThemeFontsTitlePtrOutput) ToBrandingThemeFontsTitlePtrOutput() BrandingThemeFontsTitlePtrOutput {
	return o
}

func (o BrandingThemeFontsTitlePtrOutput) ToBrandingThemeFontsTitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsTitlePtrOutput {
	return o
}

func (o BrandingThemeFontsTitlePtrOutput) Elem() BrandingThemeFontsTitleOutput {
	return o.ApplyT(func(v *BrandingThemeFontsTitle) BrandingThemeFontsTitle {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsTitle
		return ret
	}).(BrandingThemeFontsTitleOutput)
}

func (o BrandingThemeFontsTitlePtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsTitle) *bool {
		if v == nil {
			return nil
		}
		return &v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsTitlePtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsTitle) *float64 {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemePageBackground struct {
	// Background color.
	BackgroundColor string `pulumi:"backgroundColor"`
	// Background image url.
	BackgroundImageUrl string `pulumi:"backgroundImageUrl"`
	// Page layout. Available options: `center`, `left`, `right`.
	PageLayout string `pulumi:"pageLayout"`
}

// BrandingThemePageBackgroundInput is an input type that accepts BrandingThemePageBackgroundArgs and BrandingThemePageBackgroundOutput values.
// You can construct a concrete instance of `BrandingThemePageBackgroundInput` via:
//
//	BrandingThemePageBackgroundArgs{...}
type BrandingThemePageBackgroundInput interface {
	pulumi.Input

	ToBrandingThemePageBackgroundOutput() BrandingThemePageBackgroundOutput
	ToBrandingThemePageBackgroundOutputWithContext(context.Context) BrandingThemePageBackgroundOutput
}

type BrandingThemePageBackgroundArgs struct {
	// Background color.
	BackgroundColor pulumi.StringInput `pulumi:"backgroundColor"`
	// Background image url.
	BackgroundImageUrl pulumi.StringInput `pulumi:"backgroundImageUrl"`
	// Page layout. Available options: `center`, `left`, `right`.
	PageLayout pulumi.StringInput `pulumi:"pageLayout"`
}

func (BrandingThemePageBackgroundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemePageBackground)(nil)).Elem()
}

func (i BrandingThemePageBackgroundArgs) ToBrandingThemePageBackgroundOutput() BrandingThemePageBackgroundOutput {
	return i.ToBrandingThemePageBackgroundOutputWithContext(context.Background())
}

func (i BrandingThemePageBackgroundArgs) ToBrandingThemePageBackgroundOutputWithContext(ctx context.Context) BrandingThemePageBackgroundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemePageBackgroundOutput)
}

func (i BrandingThemePageBackgroundArgs) ToBrandingThemePageBackgroundPtrOutput() BrandingThemePageBackgroundPtrOutput {
	return i.ToBrandingThemePageBackgroundPtrOutputWithContext(context.Background())
}

func (i BrandingThemePageBackgroundArgs) ToBrandingThemePageBackgroundPtrOutputWithContext(ctx context.Context) BrandingThemePageBackgroundPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemePageBackgroundOutput).ToBrandingThemePageBackgroundPtrOutputWithContext(ctx)
}

// BrandingThemePageBackgroundPtrInput is an input type that accepts BrandingThemePageBackgroundArgs, BrandingThemePageBackgroundPtr and BrandingThemePageBackgroundPtrOutput values.
// You can construct a concrete instance of `BrandingThemePageBackgroundPtrInput` via:
//
//	        BrandingThemePageBackgroundArgs{...}
//
//	or:
//
//	        nil
type BrandingThemePageBackgroundPtrInput interface {
	pulumi.Input

	ToBrandingThemePageBackgroundPtrOutput() BrandingThemePageBackgroundPtrOutput
	ToBrandingThemePageBackgroundPtrOutputWithContext(context.Context) BrandingThemePageBackgroundPtrOutput
}

type brandingThemePageBackgroundPtrType BrandingThemePageBackgroundArgs

func BrandingThemePageBackgroundPtr(v *BrandingThemePageBackgroundArgs) BrandingThemePageBackgroundPtrInput {
	return (*brandingThemePageBackgroundPtrType)(v)
}

func (*brandingThemePageBackgroundPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemePageBackground)(nil)).Elem()
}

func (i *brandingThemePageBackgroundPtrType) ToBrandingThemePageBackgroundPtrOutput() BrandingThemePageBackgroundPtrOutput {
	return i.ToBrandingThemePageBackgroundPtrOutputWithContext(context.Background())
}

func (i *brandingThemePageBackgroundPtrType) ToBrandingThemePageBackgroundPtrOutputWithContext(ctx context.Context) BrandingThemePageBackgroundPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemePageBackgroundPtrOutput)
}

type BrandingThemePageBackgroundOutput struct{ *pulumi.OutputState }

func (BrandingThemePageBackgroundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemePageBackground)(nil)).Elem()
}

func (o BrandingThemePageBackgroundOutput) ToBrandingThemePageBackgroundOutput() BrandingThemePageBackgroundOutput {
	return o
}

func (o BrandingThemePageBackgroundOutput) ToBrandingThemePageBackgroundOutputWithContext(ctx context.Context) BrandingThemePageBackgroundOutput {
	return o
}

func (o BrandingThemePageBackgroundOutput) ToBrandingThemePageBackgroundPtrOutput() BrandingThemePageBackgroundPtrOutput {
	return o.ToBrandingThemePageBackgroundPtrOutputWithContext(context.Background())
}

func (o BrandingThemePageBackgroundOutput) ToBrandingThemePageBackgroundPtrOutputWithContext(ctx context.Context) BrandingThemePageBackgroundPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemePageBackground) *BrandingThemePageBackground {
		return &v
	}).(BrandingThemePageBackgroundPtrOutput)
}

// Background color.
func (o BrandingThemePageBackgroundOutput) BackgroundColor() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemePageBackground) string { return v.BackgroundColor }).(pulumi.StringOutput)
}

// Background image url.
func (o BrandingThemePageBackgroundOutput) BackgroundImageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemePageBackground) string { return v.BackgroundImageUrl }).(pulumi.StringOutput)
}

// Page layout. Available options: `center`, `left`, `right`.
func (o BrandingThemePageBackgroundOutput) PageLayout() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemePageBackground) string { return v.PageLayout }).(pulumi.StringOutput)
}

type BrandingThemePageBackgroundPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemePageBackgroundPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemePageBackground)(nil)).Elem()
}

func (o BrandingThemePageBackgroundPtrOutput) ToBrandingThemePageBackgroundPtrOutput() BrandingThemePageBackgroundPtrOutput {
	return o
}

func (o BrandingThemePageBackgroundPtrOutput) ToBrandingThemePageBackgroundPtrOutputWithContext(ctx context.Context) BrandingThemePageBackgroundPtrOutput {
	return o
}

func (o BrandingThemePageBackgroundPtrOutput) Elem() BrandingThemePageBackgroundOutput {
	return o.ApplyT(func(v *BrandingThemePageBackground) BrandingThemePageBackground {
		if v != nil {
			return *v
		}
		var ret BrandingThemePageBackground
		return ret
	}).(BrandingThemePageBackgroundOutput)
}

// Background color.
func (o BrandingThemePageBackgroundPtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemePageBackground) *string {
		if v == nil {
			return nil
		}
		return &v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

// Background image url.
func (o BrandingThemePageBackgroundPtrOutput) BackgroundImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemePageBackground) *string {
		if v == nil {
			return nil
		}
		return &v.BackgroundImageUrl
	}).(pulumi.StringPtrOutput)
}

// Page layout. Available options: `center`, `left`, `right`.
func (o BrandingThemePageBackgroundPtrOutput) PageLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemePageBackground) *string {
		if v == nil {
			return nil
		}
		return &v.PageLayout
	}).(pulumi.StringPtrOutput)
}

type BrandingThemeWidget struct {
	// Header text alignment. Available options: `center`, `left`, `right`.
	HeaderTextAlignment string `pulumi:"headerTextAlignment"`
	// Logo height. Value needs to be between `1` and `100`.
	LogoHeight float64 `pulumi:"logoHeight"`
	// Logo position. Available options: `center`, `left`, `right`, `none`.
	LogoPosition string `pulumi:"logoPosition"`
	// Logo url.
	LogoUrl string `pulumi:"logoUrl"`
	// Social buttons layout.  Available options: `bottom`, `top`.
	SocialButtonsLayout string `pulumi:"socialButtonsLayout"`
}

// BrandingThemeWidgetInput is an input type that accepts BrandingThemeWidgetArgs and BrandingThemeWidgetOutput values.
// You can construct a concrete instance of `BrandingThemeWidgetInput` via:
//
//	BrandingThemeWidgetArgs{...}
type BrandingThemeWidgetInput interface {
	pulumi.Input

	ToBrandingThemeWidgetOutput() BrandingThemeWidgetOutput
	ToBrandingThemeWidgetOutputWithContext(context.Context) BrandingThemeWidgetOutput
}

type BrandingThemeWidgetArgs struct {
	// Header text alignment. Available options: `center`, `left`, `right`.
	HeaderTextAlignment pulumi.StringInput `pulumi:"headerTextAlignment"`
	// Logo height. Value needs to be between `1` and `100`.
	LogoHeight pulumi.Float64Input `pulumi:"logoHeight"`
	// Logo position. Available options: `center`, `left`, `right`, `none`.
	LogoPosition pulumi.StringInput `pulumi:"logoPosition"`
	// Logo url.
	LogoUrl pulumi.StringInput `pulumi:"logoUrl"`
	// Social buttons layout.  Available options: `bottom`, `top`.
	SocialButtonsLayout pulumi.StringInput `pulumi:"socialButtonsLayout"`
}

func (BrandingThemeWidgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeWidget)(nil)).Elem()
}

func (i BrandingThemeWidgetArgs) ToBrandingThemeWidgetOutput() BrandingThemeWidgetOutput {
	return i.ToBrandingThemeWidgetOutputWithContext(context.Background())
}

func (i BrandingThemeWidgetArgs) ToBrandingThemeWidgetOutputWithContext(ctx context.Context) BrandingThemeWidgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeWidgetOutput)
}

func (i BrandingThemeWidgetArgs) ToBrandingThemeWidgetPtrOutput() BrandingThemeWidgetPtrOutput {
	return i.ToBrandingThemeWidgetPtrOutputWithContext(context.Background())
}

func (i BrandingThemeWidgetArgs) ToBrandingThemeWidgetPtrOutputWithContext(ctx context.Context) BrandingThemeWidgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeWidgetOutput).ToBrandingThemeWidgetPtrOutputWithContext(ctx)
}

// BrandingThemeWidgetPtrInput is an input type that accepts BrandingThemeWidgetArgs, BrandingThemeWidgetPtr and BrandingThemeWidgetPtrOutput values.
// You can construct a concrete instance of `BrandingThemeWidgetPtrInput` via:
//
//	        BrandingThemeWidgetArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeWidgetPtrInput interface {
	pulumi.Input

	ToBrandingThemeWidgetPtrOutput() BrandingThemeWidgetPtrOutput
	ToBrandingThemeWidgetPtrOutputWithContext(context.Context) BrandingThemeWidgetPtrOutput
}

type brandingThemeWidgetPtrType BrandingThemeWidgetArgs

func BrandingThemeWidgetPtr(v *BrandingThemeWidgetArgs) BrandingThemeWidgetPtrInput {
	return (*brandingThemeWidgetPtrType)(v)
}

func (*brandingThemeWidgetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeWidget)(nil)).Elem()
}

func (i *brandingThemeWidgetPtrType) ToBrandingThemeWidgetPtrOutput() BrandingThemeWidgetPtrOutput {
	return i.ToBrandingThemeWidgetPtrOutputWithContext(context.Background())
}

func (i *brandingThemeWidgetPtrType) ToBrandingThemeWidgetPtrOutputWithContext(ctx context.Context) BrandingThemeWidgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeWidgetPtrOutput)
}

type BrandingThemeWidgetOutput struct{ *pulumi.OutputState }

func (BrandingThemeWidgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeWidget)(nil)).Elem()
}

func (o BrandingThemeWidgetOutput) ToBrandingThemeWidgetOutput() BrandingThemeWidgetOutput {
	return o
}

func (o BrandingThemeWidgetOutput) ToBrandingThemeWidgetOutputWithContext(ctx context.Context) BrandingThemeWidgetOutput {
	return o
}

func (o BrandingThemeWidgetOutput) ToBrandingThemeWidgetPtrOutput() BrandingThemeWidgetPtrOutput {
	return o.ToBrandingThemeWidgetPtrOutputWithContext(context.Background())
}

func (o BrandingThemeWidgetOutput) ToBrandingThemeWidgetPtrOutputWithContext(ctx context.Context) BrandingThemeWidgetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeWidget) *BrandingThemeWidget {
		return &v
	}).(BrandingThemeWidgetPtrOutput)
}

// Header text alignment. Available options: `center`, `left`, `right`.
func (o BrandingThemeWidgetOutput) HeaderTextAlignment() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeWidget) string { return v.HeaderTextAlignment }).(pulumi.StringOutput)
}

// Logo height. Value needs to be between `1` and `100`.
func (o BrandingThemeWidgetOutput) LogoHeight() pulumi.Float64Output {
	return o.ApplyT(func(v BrandingThemeWidget) float64 { return v.LogoHeight }).(pulumi.Float64Output)
}

// Logo position. Available options: `center`, `left`, `right`, `none`.
func (o BrandingThemeWidgetOutput) LogoPosition() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeWidget) string { return v.LogoPosition }).(pulumi.StringOutput)
}

// Logo url.
func (o BrandingThemeWidgetOutput) LogoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeWidget) string { return v.LogoUrl }).(pulumi.StringOutput)
}

// Social buttons layout.  Available options: `bottom`, `top`.
func (o BrandingThemeWidgetOutput) SocialButtonsLayout() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingThemeWidget) string { return v.SocialButtonsLayout }).(pulumi.StringOutput)
}

type BrandingThemeWidgetPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeWidgetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeWidget)(nil)).Elem()
}

func (o BrandingThemeWidgetPtrOutput) ToBrandingThemeWidgetPtrOutput() BrandingThemeWidgetPtrOutput {
	return o
}

func (o BrandingThemeWidgetPtrOutput) ToBrandingThemeWidgetPtrOutputWithContext(ctx context.Context) BrandingThemeWidgetPtrOutput {
	return o
}

func (o BrandingThemeWidgetPtrOutput) Elem() BrandingThemeWidgetOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) BrandingThemeWidget {
		if v != nil {
			return *v
		}
		var ret BrandingThemeWidget
		return ret
	}).(BrandingThemeWidgetOutput)
}

// Header text alignment. Available options: `center`, `left`, `right`.
func (o BrandingThemeWidgetPtrOutput) HeaderTextAlignment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) *string {
		if v == nil {
			return nil
		}
		return &v.HeaderTextAlignment
	}).(pulumi.StringPtrOutput)
}

// Logo height. Value needs to be between `1` and `100`.
func (o BrandingThemeWidgetPtrOutput) LogoHeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) *float64 {
		if v == nil {
			return nil
		}
		return &v.LogoHeight
	}).(pulumi.Float64PtrOutput)
}

// Logo position. Available options: `center`, `left`, `right`, `none`.
func (o BrandingThemeWidgetPtrOutput) LogoPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) *string {
		if v == nil {
			return nil
		}
		return &v.LogoPosition
	}).(pulumi.StringPtrOutput)
}

// Logo url.
func (o BrandingThemeWidgetPtrOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) *string {
		if v == nil {
			return nil
		}
		return &v.LogoUrl
	}).(pulumi.StringPtrOutput)
}

// Social buttons layout.  Available options: `bottom`, `top`.
func (o BrandingThemeWidgetPtrOutput) SocialButtonsLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) *string {
		if v == nil {
			return nil
		}
		return &v.SocialButtonsLayout
	}).(pulumi.StringPtrOutput)
}

type BrandingUniversalLogin struct {
	// The body of login pages.
	Body *string `pulumi:"body"`
}

// BrandingUniversalLoginInput is an input type that accepts BrandingUniversalLoginArgs and BrandingUniversalLoginOutput values.
// You can construct a concrete instance of `BrandingUniversalLoginInput` via:
//
//	BrandingUniversalLoginArgs{...}
type BrandingUniversalLoginInput interface {
	pulumi.Input

	ToBrandingUniversalLoginOutput() BrandingUniversalLoginOutput
	ToBrandingUniversalLoginOutputWithContext(context.Context) BrandingUniversalLoginOutput
}

type BrandingUniversalLoginArgs struct {
	// The body of login pages.
	Body pulumi.StringPtrInput `pulumi:"body"`
}

func (BrandingUniversalLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingUniversalLogin)(nil)).Elem()
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginOutput() BrandingUniversalLoginOutput {
	return i.ToBrandingUniversalLoginOutputWithContext(context.Background())
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginOutputWithContext(ctx context.Context) BrandingUniversalLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingUniversalLoginOutput)
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return i.ToBrandingUniversalLoginPtrOutputWithContext(context.Background())
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingUniversalLoginOutput).ToBrandingUniversalLoginPtrOutputWithContext(ctx)
}

// BrandingUniversalLoginPtrInput is an input type that accepts BrandingUniversalLoginArgs, BrandingUniversalLoginPtr and BrandingUniversalLoginPtrOutput values.
// You can construct a concrete instance of `BrandingUniversalLoginPtrInput` via:
//
//	        BrandingUniversalLoginArgs{...}
//
//	or:
//
//	        nil
type BrandingUniversalLoginPtrInput interface {
	pulumi.Input

	ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput
	ToBrandingUniversalLoginPtrOutputWithContext(context.Context) BrandingUniversalLoginPtrOutput
}

type brandingUniversalLoginPtrType BrandingUniversalLoginArgs

func BrandingUniversalLoginPtr(v *BrandingUniversalLoginArgs) BrandingUniversalLoginPtrInput {
	return (*brandingUniversalLoginPtrType)(v)
}

func (*brandingUniversalLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingUniversalLogin)(nil)).Elem()
}

func (i *brandingUniversalLoginPtrType) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return i.ToBrandingUniversalLoginPtrOutputWithContext(context.Background())
}

func (i *brandingUniversalLoginPtrType) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingUniversalLoginPtrOutput)
}

type BrandingUniversalLoginOutput struct{ *pulumi.OutputState }

func (BrandingUniversalLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingUniversalLogin)(nil)).Elem()
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginOutput() BrandingUniversalLoginOutput {
	return o
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginOutputWithContext(ctx context.Context) BrandingUniversalLoginOutput {
	return o
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return o.ToBrandingUniversalLoginPtrOutputWithContext(context.Background())
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingUniversalLogin) *BrandingUniversalLogin {
		return &v
	}).(BrandingUniversalLoginPtrOutput)
}

// The body of login pages.
func (o BrandingUniversalLoginOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingUniversalLogin) *string { return v.Body }).(pulumi.StringPtrOutput)
}

type BrandingUniversalLoginPtrOutput struct{ *pulumi.OutputState }

func (BrandingUniversalLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingUniversalLogin)(nil)).Elem()
}

func (o BrandingUniversalLoginPtrOutput) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return o
}

func (o BrandingUniversalLoginPtrOutput) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return o
}

func (o BrandingUniversalLoginPtrOutput) Elem() BrandingUniversalLoginOutput {
	return o.ApplyT(func(v *BrandingUniversalLogin) BrandingUniversalLogin {
		if v != nil {
			return *v
		}
		var ret BrandingUniversalLogin
		return ret
	}).(BrandingUniversalLoginOutput)
}

// The body of login pages.
func (o BrandingUniversalLoginPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingUniversalLogin) *string {
		if v == nil {
			return nil
		}
		return v.Body
	}).(pulumi.StringPtrOutput)
}

type ClientAddons struct {
	Aws                  map[string]interface{} `pulumi:"aws"`
	AzureBlob            map[string]interface{} `pulumi:"azureBlob"`
	AzureSb              map[string]interface{} `pulumi:"azureSb"`
	Box                  map[string]interface{} `pulumi:"box"`
	Cloudbees            map[string]interface{} `pulumi:"cloudbees"`
	Concur               map[string]interface{} `pulumi:"concur"`
	Dropbox              map[string]interface{} `pulumi:"dropbox"`
	Echosign             map[string]interface{} `pulumi:"echosign"`
	Egnyte               map[string]interface{} `pulumi:"egnyte"`
	Firebase             map[string]interface{} `pulumi:"firebase"`
	Layer                map[string]interface{} `pulumi:"layer"`
	Mscrm                map[string]interface{} `pulumi:"mscrm"`
	Newrelic             map[string]interface{} `pulumi:"newrelic"`
	Office365            map[string]interface{} `pulumi:"office365"`
	Rms                  map[string]interface{} `pulumi:"rms"`
	Salesforce           map[string]interface{} `pulumi:"salesforce"`
	SalesforceApi        map[string]interface{} `pulumi:"salesforceApi"`
	SalesforceSandboxApi map[string]interface{} `pulumi:"salesforceSandboxApi"`
	// Configuration settings for a SAML add-on.
	Samlp      *ClientAddonsSamlp     `pulumi:"samlp"`
	SapApi     map[string]interface{} `pulumi:"sapApi"`
	Sentry     map[string]interface{} `pulumi:"sentry"`
	Sharepoint map[string]interface{} `pulumi:"sharepoint"`
	Slack      map[string]interface{} `pulumi:"slack"`
	Springcm   map[string]interface{} `pulumi:"springcm"`
	Wams       map[string]interface{} `pulumi:"wams"`
	// WS-Fed (WIF) addon indicator. Actual configuration is stored in callback and `clientAliases` properties on the client.
	Wsfed   map[string]interface{} `pulumi:"wsfed"`
	Zendesk map[string]interface{} `pulumi:"zendesk"`
	Zoom    map[string]interface{} `pulumi:"zoom"`
}

// ClientAddonsInput is an input type that accepts ClientAddonsArgs and ClientAddonsOutput values.
// You can construct a concrete instance of `ClientAddonsInput` via:
//
//	ClientAddonsArgs{...}
type ClientAddonsInput interface {
	pulumi.Input

	ToClientAddonsOutput() ClientAddonsOutput
	ToClientAddonsOutputWithContext(context.Context) ClientAddonsOutput
}

type ClientAddonsArgs struct {
	Aws                  pulumi.MapInput `pulumi:"aws"`
	AzureBlob            pulumi.MapInput `pulumi:"azureBlob"`
	AzureSb              pulumi.MapInput `pulumi:"azureSb"`
	Box                  pulumi.MapInput `pulumi:"box"`
	Cloudbees            pulumi.MapInput `pulumi:"cloudbees"`
	Concur               pulumi.MapInput `pulumi:"concur"`
	Dropbox              pulumi.MapInput `pulumi:"dropbox"`
	Echosign             pulumi.MapInput `pulumi:"echosign"`
	Egnyte               pulumi.MapInput `pulumi:"egnyte"`
	Firebase             pulumi.MapInput `pulumi:"firebase"`
	Layer                pulumi.MapInput `pulumi:"layer"`
	Mscrm                pulumi.MapInput `pulumi:"mscrm"`
	Newrelic             pulumi.MapInput `pulumi:"newrelic"`
	Office365            pulumi.MapInput `pulumi:"office365"`
	Rms                  pulumi.MapInput `pulumi:"rms"`
	Salesforce           pulumi.MapInput `pulumi:"salesforce"`
	SalesforceApi        pulumi.MapInput `pulumi:"salesforceApi"`
	SalesforceSandboxApi pulumi.MapInput `pulumi:"salesforceSandboxApi"`
	// Configuration settings for a SAML add-on.
	Samlp      ClientAddonsSamlpPtrInput `pulumi:"samlp"`
	SapApi     pulumi.MapInput           `pulumi:"sapApi"`
	Sentry     pulumi.MapInput           `pulumi:"sentry"`
	Sharepoint pulumi.MapInput           `pulumi:"sharepoint"`
	Slack      pulumi.MapInput           `pulumi:"slack"`
	Springcm   pulumi.MapInput           `pulumi:"springcm"`
	Wams       pulumi.MapInput           `pulumi:"wams"`
	// WS-Fed (WIF) addon indicator. Actual configuration is stored in callback and `clientAliases` properties on the client.
	Wsfed   pulumi.MapInput `pulumi:"wsfed"`
	Zendesk pulumi.MapInput `pulumi:"zendesk"`
	Zoom    pulumi.MapInput `pulumi:"zoom"`
}

func (ClientAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddons)(nil)).Elem()
}

func (i ClientAddonsArgs) ToClientAddonsOutput() ClientAddonsOutput {
	return i.ToClientAddonsOutputWithContext(context.Background())
}

func (i ClientAddonsArgs) ToClientAddonsOutputWithContext(ctx context.Context) ClientAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOutput)
}

func (i ClientAddonsArgs) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return i.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (i ClientAddonsArgs) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOutput).ToClientAddonsPtrOutputWithContext(ctx)
}

// ClientAddonsPtrInput is an input type that accepts ClientAddonsArgs, ClientAddonsPtr and ClientAddonsPtrOutput values.
// You can construct a concrete instance of `ClientAddonsPtrInput` via:
//
//	        ClientAddonsArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsPtrInput interface {
	pulumi.Input

	ToClientAddonsPtrOutput() ClientAddonsPtrOutput
	ToClientAddonsPtrOutputWithContext(context.Context) ClientAddonsPtrOutput
}

type clientAddonsPtrType ClientAddonsArgs

func ClientAddonsPtr(v *ClientAddonsArgs) ClientAddonsPtrInput {
	return (*clientAddonsPtrType)(v)
}

func (*clientAddonsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddons)(nil)).Elem()
}

func (i *clientAddonsPtrType) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return i.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (i *clientAddonsPtrType) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsPtrOutput)
}

type ClientAddonsOutput struct{ *pulumi.OutputState }

func (ClientAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddons)(nil)).Elem()
}

func (o ClientAddonsOutput) ToClientAddonsOutput() ClientAddonsOutput {
	return o
}

func (o ClientAddonsOutput) ToClientAddonsOutputWithContext(ctx context.Context) ClientAddonsOutput {
	return o
}

func (o ClientAddonsOutput) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return o.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (o ClientAddonsOutput) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddons) *ClientAddons {
		return &v
	}).(ClientAddonsPtrOutput)
}

func (o ClientAddonsOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Aws }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.AzureBlob }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.AzureSb }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Box }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Cloudbees }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Concur }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Dropbox }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Echosign }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Egnyte }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Firebase }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Layer }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Mscrm }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Newrelic }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Office365 }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Rms }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Salesforce }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.SalesforceApi }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.SalesforceSandboxApi }).(pulumi.MapOutput)
}

// Configuration settings for a SAML add-on.
func (o ClientAddonsOutput) Samlp() ClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSamlp { return v.Samlp }).(ClientAddonsSamlpPtrOutput)
}

func (o ClientAddonsOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.SapApi }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Sentry }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Sharepoint }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Slack }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Springcm }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Wams }).(pulumi.MapOutput)
}

// WS-Fed (WIF) addon indicator. Actual configuration is stored in callback and `clientAliases` properties on the client.
func (o ClientAddonsOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Wsfed }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Zendesk }).(pulumi.MapOutput)
}

func (o ClientAddonsOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Zoom }).(pulumi.MapOutput)
}

type ClientAddonsPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddons)(nil)).Elem()
}

func (o ClientAddonsPtrOutput) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return o
}

func (o ClientAddonsPtrOutput) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return o
}

func (o ClientAddonsPtrOutput) Elem() ClientAddonsOutput {
	return o.ApplyT(func(v *ClientAddons) ClientAddons {
		if v != nil {
			return *v
		}
		var ret ClientAddons
		return ret
	}).(ClientAddonsOutput)
}

func (o ClientAddonsPtrOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureBlob
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureSb
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Box
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cloudbees
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Concur
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Dropbox
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Echosign
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Egnyte
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Firebase
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Layer
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mscrm
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Newrelic
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Office365
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Rms
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceApi
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceSandboxApi
	}).(pulumi.MapOutput)
}

// Configuration settings for a SAML add-on.
func (o ClientAddonsPtrOutput) Samlp() ClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSamlp {
		if v == nil {
			return nil
		}
		return v.Samlp
	}).(ClientAddonsSamlpPtrOutput)
}

func (o ClientAddonsPtrOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SapApi
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sentry
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sharepoint
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Springcm
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wams
	}).(pulumi.MapOutput)
}

// WS-Fed (WIF) addon indicator. Actual configuration is stored in callback and `clientAliases` properties on the client.
func (o ClientAddonsPtrOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wsfed
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(pulumi.MapOutput)
}

func (o ClientAddonsPtrOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zoom
	}).(pulumi.MapOutput)
}

type ClientAddonsSamlp struct {
	Audience                       *string                `pulumi:"audience"`
	AuthnContextClassRef           *string                `pulumi:"authnContextClassRef"`
	Binding                        *string                `pulumi:"binding"`
	CreateUpnClaim                 *bool                  `pulumi:"createUpnClaim"`
	Destination                    *string                `pulumi:"destination"`
	DigestAlgorithm                *string                `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     *bool                  `pulumi:"includeAttributeNameFormat"`
	Issuer                         *string                `pulumi:"issuer"`
	LifetimeInSeconds              *int                   `pulumi:"lifetimeInSeconds"`
	Logout                         map[string]interface{} `pulumi:"logout"`
	MapIdentities                  *bool                  `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           *bool                  `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       map[string]interface{} `pulumi:"mappings"`
	NameIdentifierFormat           *string                `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           []string               `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping *bool                  `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      *string                `pulumi:"recipient"`
	SignResponse                   *bool                  `pulumi:"signResponse"`
	SignatureAlgorithm             *string                `pulumi:"signatureAlgorithm"`
	SigningCert                    *string                `pulumi:"signingCert"`
	TypedAttributes                *bool                  `pulumi:"typedAttributes"`
}

// ClientAddonsSamlpInput is an input type that accepts ClientAddonsSamlpArgs and ClientAddonsSamlpOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpInput` via:
//
//	ClientAddonsSamlpArgs{...}
type ClientAddonsSamlpInput interface {
	pulumi.Input

	ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput
	ToClientAddonsSamlpOutputWithContext(context.Context) ClientAddonsSamlpOutput
}

type ClientAddonsSamlpArgs struct {
	Audience                       pulumi.StringPtrInput   `pulumi:"audience"`
	AuthnContextClassRef           pulumi.StringPtrInput   `pulumi:"authnContextClassRef"`
	Binding                        pulumi.StringPtrInput   `pulumi:"binding"`
	CreateUpnClaim                 pulumi.BoolPtrInput     `pulumi:"createUpnClaim"`
	Destination                    pulumi.StringPtrInput   `pulumi:"destination"`
	DigestAlgorithm                pulumi.StringPtrInput   `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     pulumi.BoolPtrInput     `pulumi:"includeAttributeNameFormat"`
	Issuer                         pulumi.StringPtrInput   `pulumi:"issuer"`
	LifetimeInSeconds              pulumi.IntPtrInput      `pulumi:"lifetimeInSeconds"`
	Logout                         pulumi.MapInput         `pulumi:"logout"`
	MapIdentities                  pulumi.BoolPtrInput     `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           pulumi.BoolPtrInput     `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       pulumi.MapInput         `pulumi:"mappings"`
	NameIdentifierFormat           pulumi.StringPtrInput   `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           pulumi.StringArrayInput `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping pulumi.BoolPtrInput     `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      pulumi.StringPtrInput   `pulumi:"recipient"`
	SignResponse                   pulumi.BoolPtrInput     `pulumi:"signResponse"`
	SignatureAlgorithm             pulumi.StringPtrInput   `pulumi:"signatureAlgorithm"`
	SigningCert                    pulumi.StringPtrInput   `pulumi:"signingCert"`
	TypedAttributes                pulumi.BoolPtrInput     `pulumi:"typedAttributes"`
}

func (ClientAddonsSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlp)(nil)).Elem()
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput {
	return i.ToClientAddonsSamlpOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpOutputWithContext(ctx context.Context) ClientAddonsSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpOutput)
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return i.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpOutput).ToClientAddonsSamlpPtrOutputWithContext(ctx)
}

// ClientAddonsSamlpPtrInput is an input type that accepts ClientAddonsSamlpArgs, ClientAddonsSamlpPtr and ClientAddonsSamlpPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpPtrInput` via:
//
//	        ClientAddonsSamlpArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSamlpPtrInput interface {
	pulumi.Input

	ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput
	ToClientAddonsSamlpPtrOutputWithContext(context.Context) ClientAddonsSamlpPtrOutput
}

type clientAddonsSamlpPtrType ClientAddonsSamlpArgs

func ClientAddonsSamlpPtr(v *ClientAddonsSamlpArgs) ClientAddonsSamlpPtrInput {
	return (*clientAddonsSamlpPtrType)(v)
}

func (*clientAddonsSamlpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlp)(nil)).Elem()
}

func (i *clientAddonsSamlpPtrType) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return i.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSamlpPtrType) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpPtrOutput)
}

type ClientAddonsSamlpOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlp)(nil)).Elem()
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput {
	return o
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpOutputWithContext(ctx context.Context) ClientAddonsSamlpOutput {
	return o
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return o.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSamlp) *ClientAddonsSamlp {
		return &v
	}).(ClientAddonsSamlpPtrOutput)
}

func (o ClientAddonsSamlpOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.AuthnContextClassRef }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Binding }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.CreateUpnClaim }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

func (o ClientAddonsSamlpOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) map[string]interface{} { return v.Logout }).(pulumi.MapOutput)
}

func (o ClientAddonsSamlpOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.MapIdentities }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

func (o ClientAddonsSamlpOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.NameIdentifierFormat }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

func (o ClientAddonsSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Recipient }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.SignResponse }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.SigningCert }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.TypedAttributes }).(pulumi.BoolPtrOutput)
}

type ClientAddonsSamlpPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlp)(nil)).Elem()
}

func (o ClientAddonsSamlpPtrOutput) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return o
}

func (o ClientAddonsSamlpPtrOutput) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return o
}

func (o ClientAddonsSamlpPtrOutput) Elem() ClientAddonsSamlpOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) ClientAddonsSamlp {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSamlp
		return ret
	}).(ClientAddonsSamlpOutput)
}

func (o ClientAddonsSamlpPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.AuthnContextClassRef
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Binding
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.CreateUpnClaim
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.DigestAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAttributeNameFormat
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Logout
	}).(pulumi.MapOutput)
}

func (o ClientAddonsSamlpPtrOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapIdentities
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapUnknownClaimsAsIs
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(pulumi.MapOutput)
}

func (o ClientAddonsSamlpPtrOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierFormat
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) []string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierProbes
	}).(pulumi.StringArrayOutput)
}

func (o ClientAddonsSamlpPtrOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.PassthroughClaimsWithNoMapping
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Recipient
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.SignResponse
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SigningCert
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.TypedAttributes
	}).(pulumi.BoolPtrOutput)
}

type ClientJwtConfiguration struct {
	// Algorithm used to sign JWTs.
	Alg *string `pulumi:"alg"`
	// Number of seconds during which the JWT will be valid.
	LifetimeInSeconds *int `pulumi:"lifetimeInSeconds"`
	// Permissions (scopes) included in JWTs.
	Scopes map[string]string `pulumi:"scopes"`
	// Indicates whether the client secret is Base64-encoded.
	SecretEncoded *bool `pulumi:"secretEncoded"`
}

// ClientJwtConfigurationInput is an input type that accepts ClientJwtConfigurationArgs and ClientJwtConfigurationOutput values.
// You can construct a concrete instance of `ClientJwtConfigurationInput` via:
//
//	ClientJwtConfigurationArgs{...}
type ClientJwtConfigurationInput interface {
	pulumi.Input

	ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput
	ToClientJwtConfigurationOutputWithContext(context.Context) ClientJwtConfigurationOutput
}

type ClientJwtConfigurationArgs struct {
	// Algorithm used to sign JWTs.
	Alg pulumi.StringPtrInput `pulumi:"alg"`
	// Number of seconds during which the JWT will be valid.
	LifetimeInSeconds pulumi.IntPtrInput `pulumi:"lifetimeInSeconds"`
	// Permissions (scopes) included in JWTs.
	Scopes pulumi.StringMapInput `pulumi:"scopes"`
	// Indicates whether the client secret is Base64-encoded.
	SecretEncoded pulumi.BoolPtrInput `pulumi:"secretEncoded"`
}

func (ClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientJwtConfiguration)(nil)).Elem()
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput {
	return i.ToClientJwtConfigurationOutputWithContext(context.Background())
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationOutputWithContext(ctx context.Context) ClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationOutput)
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return i.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationOutput).ToClientJwtConfigurationPtrOutputWithContext(ctx)
}

// ClientJwtConfigurationPtrInput is an input type that accepts ClientJwtConfigurationArgs, ClientJwtConfigurationPtr and ClientJwtConfigurationPtrOutput values.
// You can construct a concrete instance of `ClientJwtConfigurationPtrInput` via:
//
//	        ClientJwtConfigurationArgs{...}
//
//	or:
//
//	        nil
type ClientJwtConfigurationPtrInput interface {
	pulumi.Input

	ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput
	ToClientJwtConfigurationPtrOutputWithContext(context.Context) ClientJwtConfigurationPtrOutput
}

type clientJwtConfigurationPtrType ClientJwtConfigurationArgs

func ClientJwtConfigurationPtr(v *ClientJwtConfigurationArgs) ClientJwtConfigurationPtrInput {
	return (*clientJwtConfigurationPtrType)(v)
}

func (*clientJwtConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientJwtConfiguration)(nil)).Elem()
}

func (i *clientJwtConfigurationPtrType) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return i.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i *clientJwtConfigurationPtrType) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationPtrOutput)
}

type ClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (ClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientJwtConfiguration)(nil)).Elem()
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput {
	return o
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationOutputWithContext(ctx context.Context) ClientJwtConfigurationOutput {
	return o
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return o.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientJwtConfiguration) *ClientJwtConfiguration {
		return &v
	}).(ClientJwtConfigurationPtrOutput)
}

// Algorithm used to sign JWTs.
func (o ClientJwtConfigurationOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *string { return v.Alg }).(pulumi.StringPtrOutput)
}

// Number of seconds during which the JWT will be valid.
func (o ClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

// Permissions (scopes) included in JWTs.
func (o ClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

// Indicates whether the client secret is Base64-encoded.
func (o ClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *bool { return v.SecretEncoded }).(pulumi.BoolPtrOutput)
}

type ClientJwtConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClientJwtConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientJwtConfiguration)(nil)).Elem()
}

func (o ClientJwtConfigurationPtrOutput) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return o
}

func (o ClientJwtConfigurationPtrOutput) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return o
}

func (o ClientJwtConfigurationPtrOutput) Elem() ClientJwtConfigurationOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) ClientJwtConfiguration {
		if v != nil {
			return *v
		}
		var ret ClientJwtConfiguration
		return ret
	}).(ClientJwtConfigurationOutput)
}

// Algorithm used to sign JWTs.
func (o ClientJwtConfigurationPtrOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Alg
	}).(pulumi.StringPtrOutput)
}

// Number of seconds during which the JWT will be valid.
func (o ClientJwtConfigurationPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// Permissions (scopes) included in JWTs.
func (o ClientJwtConfigurationPtrOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringMapOutput)
}

// Indicates whether the client secret is Base64-encoded.
func (o ClientJwtConfigurationPtrOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.SecretEncoded
	}).(pulumi.BoolPtrOutput)
}

type ClientMobile struct {
	// Configuration settings for Android native apps.
	Android *ClientMobileAndroid `pulumi:"android"`
	// Configuration settings for i0S native apps.
	Ios *ClientMobileIos `pulumi:"ios"`
}

// ClientMobileInput is an input type that accepts ClientMobileArgs and ClientMobileOutput values.
// You can construct a concrete instance of `ClientMobileInput` via:
//
//	ClientMobileArgs{...}
type ClientMobileInput interface {
	pulumi.Input

	ToClientMobileOutput() ClientMobileOutput
	ToClientMobileOutputWithContext(context.Context) ClientMobileOutput
}

type ClientMobileArgs struct {
	// Configuration settings for Android native apps.
	Android ClientMobileAndroidPtrInput `pulumi:"android"`
	// Configuration settings for i0S native apps.
	Ios ClientMobileIosPtrInput `pulumi:"ios"`
}

func (ClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobile)(nil)).Elem()
}

func (i ClientMobileArgs) ToClientMobileOutput() ClientMobileOutput {
	return i.ToClientMobileOutputWithContext(context.Background())
}

func (i ClientMobileArgs) ToClientMobileOutputWithContext(ctx context.Context) ClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileOutput)
}

func (i ClientMobileArgs) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return i.ToClientMobilePtrOutputWithContext(context.Background())
}

func (i ClientMobileArgs) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileOutput).ToClientMobilePtrOutputWithContext(ctx)
}

// ClientMobilePtrInput is an input type that accepts ClientMobileArgs, ClientMobilePtr and ClientMobilePtrOutput values.
// You can construct a concrete instance of `ClientMobilePtrInput` via:
//
//	        ClientMobileArgs{...}
//
//	or:
//
//	        nil
type ClientMobilePtrInput interface {
	pulumi.Input

	ToClientMobilePtrOutput() ClientMobilePtrOutput
	ToClientMobilePtrOutputWithContext(context.Context) ClientMobilePtrOutput
}

type clientMobilePtrType ClientMobileArgs

func ClientMobilePtr(v *ClientMobileArgs) ClientMobilePtrInput {
	return (*clientMobilePtrType)(v)
}

func (*clientMobilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobile)(nil)).Elem()
}

func (i *clientMobilePtrType) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return i.ToClientMobilePtrOutputWithContext(context.Background())
}

func (i *clientMobilePtrType) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobilePtrOutput)
}

type ClientMobileOutput struct{ *pulumi.OutputState }

func (ClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobile)(nil)).Elem()
}

func (o ClientMobileOutput) ToClientMobileOutput() ClientMobileOutput {
	return o
}

func (o ClientMobileOutput) ToClientMobileOutputWithContext(ctx context.Context) ClientMobileOutput {
	return o
}

func (o ClientMobileOutput) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return o.ToClientMobilePtrOutputWithContext(context.Background())
}

func (o ClientMobileOutput) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientMobile) *ClientMobile {
		return &v
	}).(ClientMobilePtrOutput)
}

// Configuration settings for Android native apps.
func (o ClientMobileOutput) Android() ClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v ClientMobile) *ClientMobileAndroid { return v.Android }).(ClientMobileAndroidPtrOutput)
}

// Configuration settings for i0S native apps.
func (o ClientMobileOutput) Ios() ClientMobileIosPtrOutput {
	return o.ApplyT(func(v ClientMobile) *ClientMobileIos { return v.Ios }).(ClientMobileIosPtrOutput)
}

type ClientMobilePtrOutput struct{ *pulumi.OutputState }

func (ClientMobilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobile)(nil)).Elem()
}

func (o ClientMobilePtrOutput) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return o
}

func (o ClientMobilePtrOutput) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return o
}

func (o ClientMobilePtrOutput) Elem() ClientMobileOutput {
	return o.ApplyT(func(v *ClientMobile) ClientMobile {
		if v != nil {
			return *v
		}
		var ret ClientMobile
		return ret
	}).(ClientMobileOutput)
}

// Configuration settings for Android native apps.
func (o ClientMobilePtrOutput) Android() ClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v *ClientMobile) *ClientMobileAndroid {
		if v == nil {
			return nil
		}
		return v.Android
	}).(ClientMobileAndroidPtrOutput)
}

// Configuration settings for i0S native apps.
func (o ClientMobilePtrOutput) Ios() ClientMobileIosPtrOutput {
	return o.ApplyT(func(v *ClientMobile) *ClientMobileIos {
		if v == nil {
			return nil
		}
		return v.Ios
	}).(ClientMobileIosPtrOutput)
}

type ClientMobileAndroid struct {
	AppPackageName         *string  `pulumi:"appPackageName"`
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// ClientMobileAndroidInput is an input type that accepts ClientMobileAndroidArgs and ClientMobileAndroidOutput values.
// You can construct a concrete instance of `ClientMobileAndroidInput` via:
//
//	ClientMobileAndroidArgs{...}
type ClientMobileAndroidInput interface {
	pulumi.Input

	ToClientMobileAndroidOutput() ClientMobileAndroidOutput
	ToClientMobileAndroidOutputWithContext(context.Context) ClientMobileAndroidOutput
}

type ClientMobileAndroidArgs struct {
	AppPackageName         pulumi.StringPtrInput   `pulumi:"appPackageName"`
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (ClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileAndroid)(nil)).Elem()
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidOutput() ClientMobileAndroidOutput {
	return i.ToClientMobileAndroidOutputWithContext(context.Background())
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidOutputWithContext(ctx context.Context) ClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidOutput)
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return i.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidOutput).ToClientMobileAndroidPtrOutputWithContext(ctx)
}

// ClientMobileAndroidPtrInput is an input type that accepts ClientMobileAndroidArgs, ClientMobileAndroidPtr and ClientMobileAndroidPtrOutput values.
// You can construct a concrete instance of `ClientMobileAndroidPtrInput` via:
//
//	        ClientMobileAndroidArgs{...}
//
//	or:
//
//	        nil
type ClientMobileAndroidPtrInput interface {
	pulumi.Input

	ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput
	ToClientMobileAndroidPtrOutputWithContext(context.Context) ClientMobileAndroidPtrOutput
}

type clientMobileAndroidPtrType ClientMobileAndroidArgs

func ClientMobileAndroidPtr(v *ClientMobileAndroidArgs) ClientMobileAndroidPtrInput {
	return (*clientMobileAndroidPtrType)(v)
}

func (*clientMobileAndroidPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileAndroid)(nil)).Elem()
}

func (i *clientMobileAndroidPtrType) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return i.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i *clientMobileAndroidPtrType) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidPtrOutput)
}

type ClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (ClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileAndroid)(nil)).Elem()
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidOutput() ClientMobileAndroidOutput {
	return o
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidOutputWithContext(ctx context.Context) ClientMobileAndroidOutput {
	return o
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return o.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientMobileAndroid) *ClientMobileAndroid {
		return &v
	}).(ClientMobileAndroidPtrOutput)
}

func (o ClientMobileAndroidOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileAndroid) *string { return v.AppPackageName }).(pulumi.StringPtrOutput)
}

func (o ClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type ClientMobileAndroidPtrOutput struct{ *pulumi.OutputState }

func (ClientMobileAndroidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileAndroid)(nil)).Elem()
}

func (o ClientMobileAndroidPtrOutput) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return o
}

func (o ClientMobileAndroidPtrOutput) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return o
}

func (o ClientMobileAndroidPtrOutput) Elem() ClientMobileAndroidOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) ClientMobileAndroid {
		if v != nil {
			return *v
		}
		var ret ClientMobileAndroid
		return ret
	}).(ClientMobileAndroidOutput)
}

func (o ClientMobileAndroidPtrOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) *string {
		if v == nil {
			return nil
		}
		return v.AppPackageName
	}).(pulumi.StringPtrOutput)
}

func (o ClientMobileAndroidPtrOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) []string {
		if v == nil {
			return nil
		}
		return v.Sha256CertFingerprints
	}).(pulumi.StringArrayOutput)
}

type ClientMobileIos struct {
	AppBundleIdentifier *string `pulumi:"appBundleIdentifier"`
	TeamId              *string `pulumi:"teamId"`
}

// ClientMobileIosInput is an input type that accepts ClientMobileIosArgs and ClientMobileIosOutput values.
// You can construct a concrete instance of `ClientMobileIosInput` via:
//
//	ClientMobileIosArgs{...}
type ClientMobileIosInput interface {
	pulumi.Input

	ToClientMobileIosOutput() ClientMobileIosOutput
	ToClientMobileIosOutputWithContext(context.Context) ClientMobileIosOutput
}

type ClientMobileIosArgs struct {
	AppBundleIdentifier pulumi.StringPtrInput `pulumi:"appBundleIdentifier"`
	TeamId              pulumi.StringPtrInput `pulumi:"teamId"`
}

func (ClientMobileIosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileIos)(nil)).Elem()
}

func (i ClientMobileIosArgs) ToClientMobileIosOutput() ClientMobileIosOutput {
	return i.ToClientMobileIosOutputWithContext(context.Background())
}

func (i ClientMobileIosArgs) ToClientMobileIosOutputWithContext(ctx context.Context) ClientMobileIosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosOutput)
}

func (i ClientMobileIosArgs) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return i.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (i ClientMobileIosArgs) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosOutput).ToClientMobileIosPtrOutputWithContext(ctx)
}

// ClientMobileIosPtrInput is an input type that accepts ClientMobileIosArgs, ClientMobileIosPtr and ClientMobileIosPtrOutput values.
// You can construct a concrete instance of `ClientMobileIosPtrInput` via:
//
//	        ClientMobileIosArgs{...}
//
//	or:
//
//	        nil
type ClientMobileIosPtrInput interface {
	pulumi.Input

	ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput
	ToClientMobileIosPtrOutputWithContext(context.Context) ClientMobileIosPtrOutput
}

type clientMobileIosPtrType ClientMobileIosArgs

func ClientMobileIosPtr(v *ClientMobileIosArgs) ClientMobileIosPtrInput {
	return (*clientMobileIosPtrType)(v)
}

func (*clientMobileIosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileIos)(nil)).Elem()
}

func (i *clientMobileIosPtrType) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return i.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (i *clientMobileIosPtrType) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosPtrOutput)
}

type ClientMobileIosOutput struct{ *pulumi.OutputState }

func (ClientMobileIosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileIos)(nil)).Elem()
}

func (o ClientMobileIosOutput) ToClientMobileIosOutput() ClientMobileIosOutput {
	return o
}

func (o ClientMobileIosOutput) ToClientMobileIosOutputWithContext(ctx context.Context) ClientMobileIosOutput {
	return o
}

func (o ClientMobileIosOutput) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return o.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (o ClientMobileIosOutput) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientMobileIos) *ClientMobileIos {
		return &v
	}).(ClientMobileIosPtrOutput)
}

func (o ClientMobileIosOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileIos) *string { return v.AppBundleIdentifier }).(pulumi.StringPtrOutput)
}

func (o ClientMobileIosOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileIos) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

type ClientMobileIosPtrOutput struct{ *pulumi.OutputState }

func (ClientMobileIosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileIos)(nil)).Elem()
}

func (o ClientMobileIosPtrOutput) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return o
}

func (o ClientMobileIosPtrOutput) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return o
}

func (o ClientMobileIosPtrOutput) Elem() ClientMobileIosOutput {
	return o.ApplyT(func(v *ClientMobileIos) ClientMobileIos {
		if v != nil {
			return *v
		}
		var ret ClientMobileIos
		return ret
	}).(ClientMobileIosOutput)
}

func (o ClientMobileIosPtrOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.AppBundleIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o ClientMobileIosPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

type ClientNativeSocialLogin struct {
	Apple    *ClientNativeSocialLoginApple    `pulumi:"apple"`
	Facebook *ClientNativeSocialLoginFacebook `pulumi:"facebook"`
}

// ClientNativeSocialLoginInput is an input type that accepts ClientNativeSocialLoginArgs and ClientNativeSocialLoginOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginInput` via:
//
//	ClientNativeSocialLoginArgs{...}
type ClientNativeSocialLoginInput interface {
	pulumi.Input

	ToClientNativeSocialLoginOutput() ClientNativeSocialLoginOutput
	ToClientNativeSocialLoginOutputWithContext(context.Context) ClientNativeSocialLoginOutput
}

type ClientNativeSocialLoginArgs struct {
	Apple    ClientNativeSocialLoginApplePtrInput    `pulumi:"apple"`
	Facebook ClientNativeSocialLoginFacebookPtrInput `pulumi:"facebook"`
}

func (ClientNativeSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLogin)(nil)).Elem()
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginOutput() ClientNativeSocialLoginOutput {
	return i.ToClientNativeSocialLoginOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginOutputWithContext(ctx context.Context) ClientNativeSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginOutput)
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return i.ToClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginOutput).ToClientNativeSocialLoginPtrOutputWithContext(ctx)
}

// ClientNativeSocialLoginPtrInput is an input type that accepts ClientNativeSocialLoginArgs, ClientNativeSocialLoginPtr and ClientNativeSocialLoginPtrOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginPtrInput` via:
//
//	        ClientNativeSocialLoginArgs{...}
//
//	or:
//
//	        nil
type ClientNativeSocialLoginPtrInput interface {
	pulumi.Input

	ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput
	ToClientNativeSocialLoginPtrOutputWithContext(context.Context) ClientNativeSocialLoginPtrOutput
}

type clientNativeSocialLoginPtrType ClientNativeSocialLoginArgs

func ClientNativeSocialLoginPtr(v *ClientNativeSocialLoginArgs) ClientNativeSocialLoginPtrInput {
	return (*clientNativeSocialLoginPtrType)(v)
}

func (*clientNativeSocialLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLogin)(nil)).Elem()
}

func (i *clientNativeSocialLoginPtrType) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return i.ToClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (i *clientNativeSocialLoginPtrType) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginPtrOutput)
}

type ClientNativeSocialLoginOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLogin)(nil)).Elem()
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginOutput() ClientNativeSocialLoginOutput {
	return o
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginOutputWithContext(ctx context.Context) ClientNativeSocialLoginOutput {
	return o
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return o.ToClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientNativeSocialLogin) *ClientNativeSocialLogin {
		return &v
	}).(ClientNativeSocialLoginPtrOutput)
}

func (o ClientNativeSocialLoginOutput) Apple() ClientNativeSocialLoginApplePtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLogin) *ClientNativeSocialLoginApple { return v.Apple }).(ClientNativeSocialLoginApplePtrOutput)
}

func (o ClientNativeSocialLoginOutput) Facebook() ClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLogin) *ClientNativeSocialLoginFacebook { return v.Facebook }).(ClientNativeSocialLoginFacebookPtrOutput)
}

type ClientNativeSocialLoginPtrOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLogin)(nil)).Elem()
}

func (o ClientNativeSocialLoginPtrOutput) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return o
}

func (o ClientNativeSocialLoginPtrOutput) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return o
}

func (o ClientNativeSocialLoginPtrOutput) Elem() ClientNativeSocialLoginOutput {
	return o.ApplyT(func(v *ClientNativeSocialLogin) ClientNativeSocialLogin {
		if v != nil {
			return *v
		}
		var ret ClientNativeSocialLogin
		return ret
	}).(ClientNativeSocialLoginOutput)
}

func (o ClientNativeSocialLoginPtrOutput) Apple() ClientNativeSocialLoginApplePtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLogin) *ClientNativeSocialLoginApple {
		if v == nil {
			return nil
		}
		return v.Apple
	}).(ClientNativeSocialLoginApplePtrOutput)
}

func (o ClientNativeSocialLoginPtrOutput) Facebook() ClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLogin) *ClientNativeSocialLoginFacebook {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(ClientNativeSocialLoginFacebookPtrOutput)
}

type ClientNativeSocialLoginApple struct {
	Enabled *bool `pulumi:"enabled"`
}

// ClientNativeSocialLoginAppleInput is an input type that accepts ClientNativeSocialLoginAppleArgs and ClientNativeSocialLoginAppleOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginAppleInput` via:
//
//	ClientNativeSocialLoginAppleArgs{...}
type ClientNativeSocialLoginAppleInput interface {
	pulumi.Input

	ToClientNativeSocialLoginAppleOutput() ClientNativeSocialLoginAppleOutput
	ToClientNativeSocialLoginAppleOutputWithContext(context.Context) ClientNativeSocialLoginAppleOutput
}

type ClientNativeSocialLoginAppleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClientNativeSocialLoginAppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginApple)(nil)).Elem()
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginAppleOutput() ClientNativeSocialLoginAppleOutput {
	return i.ToClientNativeSocialLoginAppleOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) ClientNativeSocialLoginAppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginAppleOutput)
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return i.ToClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginAppleOutput).ToClientNativeSocialLoginApplePtrOutputWithContext(ctx)
}

// ClientNativeSocialLoginApplePtrInput is an input type that accepts ClientNativeSocialLoginAppleArgs, ClientNativeSocialLoginApplePtr and ClientNativeSocialLoginApplePtrOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginApplePtrInput` via:
//
//	        ClientNativeSocialLoginAppleArgs{...}
//
//	or:
//
//	        nil
type ClientNativeSocialLoginApplePtrInput interface {
	pulumi.Input

	ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput
	ToClientNativeSocialLoginApplePtrOutputWithContext(context.Context) ClientNativeSocialLoginApplePtrOutput
}

type clientNativeSocialLoginApplePtrType ClientNativeSocialLoginAppleArgs

func ClientNativeSocialLoginApplePtr(v *ClientNativeSocialLoginAppleArgs) ClientNativeSocialLoginApplePtrInput {
	return (*clientNativeSocialLoginApplePtrType)(v)
}

func (*clientNativeSocialLoginApplePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginApple)(nil)).Elem()
}

func (i *clientNativeSocialLoginApplePtrType) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return i.ToClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (i *clientNativeSocialLoginApplePtrType) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginApplePtrOutput)
}

type ClientNativeSocialLoginAppleOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginAppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginApple)(nil)).Elem()
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginAppleOutput() ClientNativeSocialLoginAppleOutput {
	return o
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) ClientNativeSocialLoginAppleOutput {
	return o
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return o.ToClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientNativeSocialLoginApple) *ClientNativeSocialLoginApple {
		return &v
	}).(ClientNativeSocialLoginApplePtrOutput)
}

func (o ClientNativeSocialLoginAppleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLoginApple) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClientNativeSocialLoginApplePtrOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginApplePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginApple)(nil)).Elem()
}

func (o ClientNativeSocialLoginApplePtrOutput) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return o
}

func (o ClientNativeSocialLoginApplePtrOutput) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return o
}

func (o ClientNativeSocialLoginApplePtrOutput) Elem() ClientNativeSocialLoginAppleOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginApple) ClientNativeSocialLoginApple {
		if v != nil {
			return *v
		}
		var ret ClientNativeSocialLoginApple
		return ret
	}).(ClientNativeSocialLoginAppleOutput)
}

func (o ClientNativeSocialLoginApplePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginApple) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClientNativeSocialLoginFacebook struct {
	Enabled *bool `pulumi:"enabled"`
}

// ClientNativeSocialLoginFacebookInput is an input type that accepts ClientNativeSocialLoginFacebookArgs and ClientNativeSocialLoginFacebookOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginFacebookInput` via:
//
//	ClientNativeSocialLoginFacebookArgs{...}
type ClientNativeSocialLoginFacebookInput interface {
	pulumi.Input

	ToClientNativeSocialLoginFacebookOutput() ClientNativeSocialLoginFacebookOutput
	ToClientNativeSocialLoginFacebookOutputWithContext(context.Context) ClientNativeSocialLoginFacebookOutput
}

type ClientNativeSocialLoginFacebookArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClientNativeSocialLoginFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookOutput() ClientNativeSocialLoginFacebookOutput {
	return i.ToClientNativeSocialLoginFacebookOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginFacebookOutput)
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return i.ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginFacebookOutput).ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx)
}

// ClientNativeSocialLoginFacebookPtrInput is an input type that accepts ClientNativeSocialLoginFacebookArgs, ClientNativeSocialLoginFacebookPtr and ClientNativeSocialLoginFacebookPtrOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginFacebookPtrInput` via:
//
//	        ClientNativeSocialLoginFacebookArgs{...}
//
//	or:
//
//	        nil
type ClientNativeSocialLoginFacebookPtrInput interface {
	pulumi.Input

	ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput
	ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Context) ClientNativeSocialLoginFacebookPtrOutput
}

type clientNativeSocialLoginFacebookPtrType ClientNativeSocialLoginFacebookArgs

func ClientNativeSocialLoginFacebookPtr(v *ClientNativeSocialLoginFacebookArgs) ClientNativeSocialLoginFacebookPtrInput {
	return (*clientNativeSocialLoginFacebookPtrType)(v)
}

func (*clientNativeSocialLoginFacebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i *clientNativeSocialLoginFacebookPtrType) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return i.ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (i *clientNativeSocialLoginFacebookPtrType) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginFacebookPtrOutput)
}

type ClientNativeSocialLoginFacebookOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookOutput() ClientNativeSocialLoginFacebookOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return o.ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientNativeSocialLoginFacebook) *ClientNativeSocialLoginFacebook {
		return &v
	}).(ClientNativeSocialLoginFacebookPtrOutput)
}

func (o ClientNativeSocialLoginFacebookOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLoginFacebook) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClientNativeSocialLoginFacebookPtrOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginFacebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o ClientNativeSocialLoginFacebookPtrOutput) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookPtrOutput) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookPtrOutput) Elem() ClientNativeSocialLoginFacebookOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginFacebook) ClientNativeSocialLoginFacebook {
		if v != nil {
			return *v
		}
		var ret ClientNativeSocialLoginFacebook
		return ret
	}).(ClientNativeSocialLoginFacebookOutput)
}

func (o ClientNativeSocialLoginFacebookPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginFacebook) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClientRefreshToken struct {
	// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
	ExpirationType string `pulumi:"expirationType"`
	// The time in seconds after which inactive refresh tokens will expire.
	IdleTokenLifetime *int `pulumi:"idleTokenLifetime"`
	// Whether inactive refresh tokens should remain valid indefinitely.
	InfiniteIdleTokenLifetime *bool `pulumi:"infiniteIdleTokenLifetime"`
	// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
	InfiniteTokenLifetime *bool `pulumi:"infiniteTokenLifetime"`
	// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
	Leeway *int `pulumi:"leeway"`
	// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
	RotationType string `pulumi:"rotationType"`
	// The absolute lifetime of a refresh token in seconds.
	TokenLifetime *int `pulumi:"tokenLifetime"`
}

// ClientRefreshTokenInput is an input type that accepts ClientRefreshTokenArgs and ClientRefreshTokenOutput values.
// You can construct a concrete instance of `ClientRefreshTokenInput` via:
//
//	ClientRefreshTokenArgs{...}
type ClientRefreshTokenInput interface {
	pulumi.Input

	ToClientRefreshTokenOutput() ClientRefreshTokenOutput
	ToClientRefreshTokenOutputWithContext(context.Context) ClientRefreshTokenOutput
}

type ClientRefreshTokenArgs struct {
	// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
	ExpirationType pulumi.StringInput `pulumi:"expirationType"`
	// The time in seconds after which inactive refresh tokens will expire.
	IdleTokenLifetime pulumi.IntPtrInput `pulumi:"idleTokenLifetime"`
	// Whether inactive refresh tokens should remain valid indefinitely.
	InfiniteIdleTokenLifetime pulumi.BoolPtrInput `pulumi:"infiniteIdleTokenLifetime"`
	// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
	InfiniteTokenLifetime pulumi.BoolPtrInput `pulumi:"infiniteTokenLifetime"`
	// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
	Leeway pulumi.IntPtrInput `pulumi:"leeway"`
	// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
	RotationType pulumi.StringInput `pulumi:"rotationType"`
	// The absolute lifetime of a refresh token in seconds.
	TokenLifetime pulumi.IntPtrInput `pulumi:"tokenLifetime"`
}

func (ClientRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRefreshToken)(nil)).Elem()
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenOutput() ClientRefreshTokenOutput {
	return i.ToClientRefreshTokenOutputWithContext(context.Background())
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenOutputWithContext(ctx context.Context) ClientRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRefreshTokenOutput)
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return i.ToClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRefreshTokenOutput).ToClientRefreshTokenPtrOutputWithContext(ctx)
}

// ClientRefreshTokenPtrInput is an input type that accepts ClientRefreshTokenArgs, ClientRefreshTokenPtr and ClientRefreshTokenPtrOutput values.
// You can construct a concrete instance of `ClientRefreshTokenPtrInput` via:
//
//	        ClientRefreshTokenArgs{...}
//
//	or:
//
//	        nil
type ClientRefreshTokenPtrInput interface {
	pulumi.Input

	ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput
	ToClientRefreshTokenPtrOutputWithContext(context.Context) ClientRefreshTokenPtrOutput
}

type clientRefreshTokenPtrType ClientRefreshTokenArgs

func ClientRefreshTokenPtr(v *ClientRefreshTokenArgs) ClientRefreshTokenPtrInput {
	return (*clientRefreshTokenPtrType)(v)
}

func (*clientRefreshTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientRefreshToken)(nil)).Elem()
}

func (i *clientRefreshTokenPtrType) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return i.ToClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (i *clientRefreshTokenPtrType) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRefreshTokenPtrOutput)
}

type ClientRefreshTokenOutput struct{ *pulumi.OutputState }

func (ClientRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRefreshToken)(nil)).Elem()
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenOutput() ClientRefreshTokenOutput {
	return o
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenOutputWithContext(ctx context.Context) ClientRefreshTokenOutput {
	return o
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return o.ToClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientRefreshToken) *ClientRefreshToken {
		return &v
	}).(ClientRefreshTokenPtrOutput)
}

// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
func (o ClientRefreshTokenOutput) ExpirationType() pulumi.StringOutput {
	return o.ApplyT(func(v ClientRefreshToken) string { return v.ExpirationType }).(pulumi.StringOutput)
}

// The time in seconds after which inactive refresh tokens will expire.
func (o ClientRefreshTokenOutput) IdleTokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *int { return v.IdleTokenLifetime }).(pulumi.IntPtrOutput)
}

// Whether inactive refresh tokens should remain valid indefinitely.
func (o ClientRefreshTokenOutput) InfiniteIdleTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *bool { return v.InfiniteIdleTokenLifetime }).(pulumi.BoolPtrOutput)
}

// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
func (o ClientRefreshTokenOutput) InfiniteTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *bool { return v.InfiniteTokenLifetime }).(pulumi.BoolPtrOutput)
}

// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
func (o ClientRefreshTokenOutput) Leeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *int { return v.Leeway }).(pulumi.IntPtrOutput)
}

// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
func (o ClientRefreshTokenOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v ClientRefreshToken) string { return v.RotationType }).(pulumi.StringOutput)
}

// The absolute lifetime of a refresh token in seconds.
func (o ClientRefreshTokenOutput) TokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *int { return v.TokenLifetime }).(pulumi.IntPtrOutput)
}

type ClientRefreshTokenPtrOutput struct{ *pulumi.OutputState }

func (ClientRefreshTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientRefreshToken)(nil)).Elem()
}

func (o ClientRefreshTokenPtrOutput) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return o
}

func (o ClientRefreshTokenPtrOutput) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return o
}

func (o ClientRefreshTokenPtrOutput) Elem() ClientRefreshTokenOutput {
	return o.ApplyT(func(v *ClientRefreshToken) ClientRefreshToken {
		if v != nil {
			return *v
		}
		var ret ClientRefreshToken
		return ret
	}).(ClientRefreshTokenOutput)
}

// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
func (o ClientRefreshTokenPtrOutput) ExpirationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationType
	}).(pulumi.StringPtrOutput)
}

// The time in seconds after which inactive refresh tokens will expire.
func (o ClientRefreshTokenPtrOutput) IdleTokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.IdleTokenLifetime
	}).(pulumi.IntPtrOutput)
}

// Whether inactive refresh tokens should remain valid indefinitely.
func (o ClientRefreshTokenPtrOutput) InfiniteIdleTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *bool {
		if v == nil {
			return nil
		}
		return v.InfiniteIdleTokenLifetime
	}).(pulumi.BoolPtrOutput)
}

// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
func (o ClientRefreshTokenPtrOutput) InfiniteTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *bool {
		if v == nil {
			return nil
		}
		return v.InfiniteTokenLifetime
	}).(pulumi.BoolPtrOutput)
}

// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
func (o ClientRefreshTokenPtrOutput) Leeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.Leeway
	}).(pulumi.IntPtrOutput)
}

// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
func (o ClientRefreshTokenPtrOutput) RotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.RotationType
	}).(pulumi.StringPtrOutput)
}

// The absolute lifetime of a refresh token in seconds.
func (o ClientRefreshTokenPtrOutput) TokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.TokenLifetime
	}).(pulumi.IntPtrOutput)
}

type ConnectionOptions struct {
	// ADFS URL where to fetch the metadata source.
	AdfsServer *string `pulumi:"adfsServer"`
	// List of allowed audiences.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// Enable API Access to users.
	ApiEnableUsers *bool `pulumi:"apiEnableUsers"`
	// App ID.
	AppId *string `pulumi:"appId"`
	// Query string parameters to be included as part of the generated passwordless email link.
	AuthParams map[string]string `pulumi:"authParams"`
	// Authorization endpoint.
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
	BruteForceProtection *bool `pulumi:"bruteForceProtection"`
	// The strategy's client ID.
	ClientId *string `pulumi:"clientId"`
	// The strategy's client secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// Salesforce community base URL.
	CommunityBaseUrl *string `pulumi:"communityBaseUrl"`
	// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
	Configuration map[string]interface{} `pulumi:"configuration"`
	// A map of scripts used to integrate with a custom database.
	CustomScripts map[string]string `pulumi:"customScripts"`
	// When enabled, additional debug information will be generated.
	Debug *bool `pulumi:"debug"`
	// Sign Request Algorithm Digest.
	DigestAlgorithm *string `pulumi:"digestAlgorithm"`
	// Indicates whether to disable the cache or not.
	DisableCache *bool `pulumi:"disableCache"`
	// When enabled, will disable sign out.
	DisableSignOut *bool `pulumi:"disableSignOut"`
	// Indicates whether to allow user sign-ups to your application.
	DisableSignup *bool `pulumi:"disableSignup"`
	// OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.
	DiscoveryUrl *string `pulumi:"discoveryUrl"`
	// Domain name.
	Domain *string `pulumi:"domain"`
	// List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.
	DomainAliases []string `pulumi:"domainAliases"`
	// Set to `true` to inject context into custom DB scripts (warning: cannot be disabled once enabled).
	EnableScriptContext *bool `pulumi:"enableScriptContext"`
	// Set to `true` to use a legacy user store.
	EnabledDatabaseCustomization *bool `pulumi:"enabledDatabaseCustomization"`
	// Custom Entity ID for the connection.
	EntityId *string `pulumi:"entityId"`
	// Federation Metadata for the ADFS connection.
	FedMetadataXml *string `pulumi:"fedMetadataXml"`
	// If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
	FieldsMap *string `pulumi:"fieldsMap"`
	// Specifies whether or not request info should be forwarded to sms gateway.
	ForwardRequestInfo *bool `pulumi:"forwardRequestInfo"`
	// Address to use as the sender.
	From *string `pulumi:"from"`
	// Defines the parameters used to generate the auth token for the custom gateway.
	GatewayAuthentication *ConnectionOptionsGatewayAuthentication `pulumi:"gatewayAuthentication"`
	// Defines a custom sms gateway to use instead of Twilio.
	GatewayUrl *string `pulumi:"gatewayUrl"`
	// Icon URL.
	IconUrl *string `pulumi:"iconUrl"`
	// Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.
	IdentityApi *string `pulumi:"identityApi"`
	// Configuration options for IDP Initiated Authentication. This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`.
	IdpInitiated *ConnectionOptionsIdpInitiated `pulumi:"idpInitiated"`
	// Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.
	ImportMode *bool `pulumi:"importMode"`
	// A list of IPs.
	Ips []string `pulumi:"ips"`
	// Issuer URL, e.g. `https://auth.example.com`.
	Issuer *string `pulumi:"issuer"`
	// JWKS URI.
	JwksUri *string `pulumi:"jwksUri"`
	// Apple Key ID.
	KeyId *string `pulumi:"keyId"`
	// Maximum number of groups to retrieve.
	MaxGroupsToRetrieve *string `pulumi:"maxGroupsToRetrieve"`
	// SID for Copilot. Used when SMS Source is Copilot.
	MessagingServiceSid *string `pulumi:"messagingServiceSid"`
	// The URL of the SAML metadata document.
	MetadataUrl *string `pulumi:"metadataUrl"`
	// The XML content for the SAML metadata document.
	MetadataXml *string `pulumi:"metadataXml"`
	// Configuration options for multifactor authentication.
	Mfa *ConnectionOptionsMfa `pulumi:"mfa"`
	// The public name of the email or SMS Connection. In most cases this is the same name as the connection name.
	Name *string `pulumi:"name"`
	// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.
	NonPersistentAttrs []string `pulumi:"nonPersistentAttrs"`
	// Configuration settings for password complexity.
	PasswordComplexityOptions *ConnectionOptionsPasswordComplexityOptions `pulumi:"passwordComplexityOptions"`
	// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.
	PasswordDictionary *ConnectionOptionsPasswordDictionary `pulumi:"passwordDictionary"`
	// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.
	PasswordHistories []ConnectionOptionsPasswordHistory `pulumi:"passwordHistories"`
	// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's `name`, `username`, `nickname`, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's `email`, or first part of the user's `email`.
	PasswordNoPersonalInfo *ConnectionOptionsPasswordNoPersonalInfo `pulumi:"passwordNoPersonalInfo"`
	// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
	PasswordPolicy *string `pulumi:"passwordPolicy"`
	// Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.
	PkceEnabled *bool `pulumi:"pkceEnabled"`
	// The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.
	ProtocolBinding *string `pulumi:"protocolBinding"`
	// Defines the custom `smsGateway` provider.
	Provider *string `pulumi:"provider"`
	// Template that formats the SAML request.
	RequestTemplate *string `pulumi:"requestTemplate"`
	// Indicates whether the user is required to provide a username in addition to an email address.
	RequiresUsername *bool `pulumi:"requiresUsername"`
	// Permissions to grant to the connection. Within the Auth0 dashboard these appear under the "Attributes" and "Extended Attributes" sections. Some examples: `basicProfile`, `extProfile`, `extNestedGroups`, etc.
	Scopes []string `pulumi:"scopes"`
	// A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.
	Scripts map[string]string `pulumi:"scripts"`
	// Determines whether the 'name', 'given*name', 'family*name', 'nickname', and 'picture' attributes can be independently updated when using an external IdP. Possible values are 'on*each*login' (default value, it configures the connection to automatically update the root attributes from the external IdP with each user login. When this setting is used, root attributes cannot be independently updated), 'on*first*login' (configures the connection to only set the root attributes on first login, allowing them to be independently updated thereafter).
	SetUserRootAttributes *string `pulumi:"setUserRootAttributes"`
	// Choose how Auth0 sets the emailVerified field in the user profile.
	ShouldTrustEmailVerifiedConnection *string `pulumi:"shouldTrustEmailVerifiedConnection"`
	// SAML single login URL for the connection.
	SignInEndpoint *string `pulumi:"signInEndpoint"`
	// SAML single logout URL for the connection.
	SignOutEndpoint *string `pulumi:"signOutEndpoint"`
	// When enabled, the SAML authentication request will be signed.
	SignSamlRequest *bool `pulumi:"signSamlRequest"`
	// Sign Request Algorithm.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.
	SigningCert *string `pulumi:"signingCert"`
	// The key used to sign requests in the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
	SigningKey *ConnectionOptionsSigningKey `pulumi:"signingKey"`
	// Version 1 is deprecated, use version 2.
	StrategyVersion *int `pulumi:"strategyVersion"`
	// Subject line of the email.
	Subject *string `pulumi:"subject"`
	// Syntax of the template body.
	Syntax *string `pulumi:"syntax"`
	// Apple Team ID.
	TeamId *string `pulumi:"teamId"`
	// Body of the template.
	Template *string `pulumi:"template"`
	// Tenant domain name.
	TenantDomain *string `pulumi:"tenantDomain"`
	// Token endpoint.
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
	// Configuration options for one-time passwords.
	Totp *ConnectionOptionsTotp `pulumi:"totp"`
	// SID for your Twilio account.
	TwilioSid *string `pulumi:"twilioSid"`
	// AuthToken for your Twilio account.
	TwilioToken *string `pulumi:"twilioToken"`
	// Value can be `backChannel` or `frontChannel`.
	Type *string `pulumi:"type"`
	// You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.
	UpstreamParams *string `pulumi:"upstreamParams"`
	// Indicates whether to use cert auth or not.
	UseCertAuth *bool `pulumi:"useCertAuth"`
	// Indicates whether to use Kerberos or not.
	UseKerberos *bool `pulumi:"useKerberos"`
	// Whether to use WS-Fed.
	UseWsfed *bool `pulumi:"useWsfed"`
	// Attribute in the SAML token that will be mapped to the userId property in Auth0.
	UserIdAttribute *string `pulumi:"userIdAttribute"`
	// User info endpoint.
	UserinfoEndpoint *string `pulumi:"userinfoEndpoint"`
	// Validation of the minimum and maximum values allowed for a user to have as username.
	Validation *ConnectionOptionsValidation `pulumi:"validation"`
	// Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
	WaadCommonEndpoint *bool `pulumi:"waadCommonEndpoint"`
	// Protocol to use.
	WaadProtocol *string `pulumi:"waadProtocol"`
}

// ConnectionOptionsInput is an input type that accepts ConnectionOptionsArgs and ConnectionOptionsOutput values.
// You can construct a concrete instance of `ConnectionOptionsInput` via:
//
//	ConnectionOptionsArgs{...}
type ConnectionOptionsInput interface {
	pulumi.Input

	ToConnectionOptionsOutput() ConnectionOptionsOutput
	ToConnectionOptionsOutputWithContext(context.Context) ConnectionOptionsOutput
}

type ConnectionOptionsArgs struct {
	// ADFS URL where to fetch the metadata source.
	AdfsServer pulumi.StringPtrInput `pulumi:"adfsServer"`
	// List of allowed audiences.
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
	// Enable API Access to users.
	ApiEnableUsers pulumi.BoolPtrInput `pulumi:"apiEnableUsers"`
	// App ID.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// Query string parameters to be included as part of the generated passwordless email link.
	AuthParams pulumi.StringMapInput `pulumi:"authParams"`
	// Authorization endpoint.
	AuthorizationEndpoint pulumi.StringPtrInput `pulumi:"authorizationEndpoint"`
	// Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
	BruteForceProtection pulumi.BoolPtrInput `pulumi:"bruteForceProtection"`
	// The strategy's client ID.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The strategy's client secret.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Salesforce community base URL.
	CommunityBaseUrl pulumi.StringPtrInput `pulumi:"communityBaseUrl"`
	// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
	Configuration pulumi.MapInput `pulumi:"configuration"`
	// A map of scripts used to integrate with a custom database.
	CustomScripts pulumi.StringMapInput `pulumi:"customScripts"`
	// When enabled, additional debug information will be generated.
	Debug pulumi.BoolPtrInput `pulumi:"debug"`
	// Sign Request Algorithm Digest.
	DigestAlgorithm pulumi.StringPtrInput `pulumi:"digestAlgorithm"`
	// Indicates whether to disable the cache or not.
	DisableCache pulumi.BoolPtrInput `pulumi:"disableCache"`
	// When enabled, will disable sign out.
	DisableSignOut pulumi.BoolPtrInput `pulumi:"disableSignOut"`
	// Indicates whether to allow user sign-ups to your application.
	DisableSignup pulumi.BoolPtrInput `pulumi:"disableSignup"`
	// OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.
	DiscoveryUrl pulumi.StringPtrInput `pulumi:"discoveryUrl"`
	// Domain name.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.
	DomainAliases pulumi.StringArrayInput `pulumi:"domainAliases"`
	// Set to `true` to inject context into custom DB scripts (warning: cannot be disabled once enabled).
	EnableScriptContext pulumi.BoolPtrInput `pulumi:"enableScriptContext"`
	// Set to `true` to use a legacy user store.
	EnabledDatabaseCustomization pulumi.BoolPtrInput `pulumi:"enabledDatabaseCustomization"`
	// Custom Entity ID for the connection.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// Federation Metadata for the ADFS connection.
	FedMetadataXml pulumi.StringPtrInput `pulumi:"fedMetadataXml"`
	// If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
	FieldsMap pulumi.StringPtrInput `pulumi:"fieldsMap"`
	// Specifies whether or not request info should be forwarded to sms gateway.
	ForwardRequestInfo pulumi.BoolPtrInput `pulumi:"forwardRequestInfo"`
	// Address to use as the sender.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Defines the parameters used to generate the auth token for the custom gateway.
	GatewayAuthentication ConnectionOptionsGatewayAuthenticationPtrInput `pulumi:"gatewayAuthentication"`
	// Defines a custom sms gateway to use instead of Twilio.
	GatewayUrl pulumi.StringPtrInput `pulumi:"gatewayUrl"`
	// Icon URL.
	IconUrl pulumi.StringPtrInput `pulumi:"iconUrl"`
	// Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.
	IdentityApi pulumi.StringPtrInput `pulumi:"identityApi"`
	// Configuration options for IDP Initiated Authentication. This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`.
	IdpInitiated ConnectionOptionsIdpInitiatedPtrInput `pulumi:"idpInitiated"`
	// Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.
	ImportMode pulumi.BoolPtrInput `pulumi:"importMode"`
	// A list of IPs.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// Issuer URL, e.g. `https://auth.example.com`.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// JWKS URI.
	JwksUri pulumi.StringPtrInput `pulumi:"jwksUri"`
	// Apple Key ID.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
	// Maximum number of groups to retrieve.
	MaxGroupsToRetrieve pulumi.StringPtrInput `pulumi:"maxGroupsToRetrieve"`
	// SID for Copilot. Used when SMS Source is Copilot.
	MessagingServiceSid pulumi.StringPtrInput `pulumi:"messagingServiceSid"`
	// The URL of the SAML metadata document.
	MetadataUrl pulumi.StringPtrInput `pulumi:"metadataUrl"`
	// The XML content for the SAML metadata document.
	MetadataXml pulumi.StringPtrInput `pulumi:"metadataXml"`
	// Configuration options for multifactor authentication.
	Mfa ConnectionOptionsMfaPtrInput `pulumi:"mfa"`
	// The public name of the email or SMS Connection. In most cases this is the same name as the connection name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.
	NonPersistentAttrs pulumi.StringArrayInput `pulumi:"nonPersistentAttrs"`
	// Configuration settings for password complexity.
	PasswordComplexityOptions ConnectionOptionsPasswordComplexityOptionsPtrInput `pulumi:"passwordComplexityOptions"`
	// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.
	PasswordDictionary ConnectionOptionsPasswordDictionaryPtrInput `pulumi:"passwordDictionary"`
	// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.
	PasswordHistories ConnectionOptionsPasswordHistoryArrayInput `pulumi:"passwordHistories"`
	// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's `name`, `username`, `nickname`, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's `email`, or first part of the user's `email`.
	PasswordNoPersonalInfo ConnectionOptionsPasswordNoPersonalInfoPtrInput `pulumi:"passwordNoPersonalInfo"`
	// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
	PasswordPolicy pulumi.StringPtrInput `pulumi:"passwordPolicy"`
	// Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.
	PkceEnabled pulumi.BoolPtrInput `pulumi:"pkceEnabled"`
	// The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.
	ProtocolBinding pulumi.StringPtrInput `pulumi:"protocolBinding"`
	// Defines the custom `smsGateway` provider.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	// Template that formats the SAML request.
	RequestTemplate pulumi.StringPtrInput `pulumi:"requestTemplate"`
	// Indicates whether the user is required to provide a username in addition to an email address.
	RequiresUsername pulumi.BoolPtrInput `pulumi:"requiresUsername"`
	// Permissions to grant to the connection. Within the Auth0 dashboard these appear under the "Attributes" and "Extended Attributes" sections. Some examples: `basicProfile`, `extProfile`, `extNestedGroups`, etc.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.
	Scripts pulumi.StringMapInput `pulumi:"scripts"`
	// Determines whether the 'name', 'given*name', 'family*name', 'nickname', and 'picture' attributes can be independently updated when using an external IdP. Possible values are 'on*each*login' (default value, it configures the connection to automatically update the root attributes from the external IdP with each user login. When this setting is used, root attributes cannot be independently updated), 'on*first*login' (configures the connection to only set the root attributes on first login, allowing them to be independently updated thereafter).
	SetUserRootAttributes pulumi.StringPtrInput `pulumi:"setUserRootAttributes"`
	// Choose how Auth0 sets the emailVerified field in the user profile.
	ShouldTrustEmailVerifiedConnection pulumi.StringPtrInput `pulumi:"shouldTrustEmailVerifiedConnection"`
	// SAML single login URL for the connection.
	SignInEndpoint pulumi.StringPtrInput `pulumi:"signInEndpoint"`
	// SAML single logout URL for the connection.
	SignOutEndpoint pulumi.StringPtrInput `pulumi:"signOutEndpoint"`
	// When enabled, the SAML authentication request will be signed.
	SignSamlRequest pulumi.BoolPtrInput `pulumi:"signSamlRequest"`
	// Sign Request Algorithm.
	SignatureAlgorithm pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
	// X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.
	SigningCert pulumi.StringPtrInput `pulumi:"signingCert"`
	// The key used to sign requests in the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
	SigningKey ConnectionOptionsSigningKeyPtrInput `pulumi:"signingKey"`
	// Version 1 is deprecated, use version 2.
	StrategyVersion pulumi.IntPtrInput `pulumi:"strategyVersion"`
	// Subject line of the email.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// Syntax of the template body.
	Syntax pulumi.StringPtrInput `pulumi:"syntax"`
	// Apple Team ID.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
	// Body of the template.
	Template pulumi.StringPtrInput `pulumi:"template"`
	// Tenant domain name.
	TenantDomain pulumi.StringPtrInput `pulumi:"tenantDomain"`
	// Token endpoint.
	TokenEndpoint pulumi.StringPtrInput `pulumi:"tokenEndpoint"`
	// Configuration options for one-time passwords.
	Totp ConnectionOptionsTotpPtrInput `pulumi:"totp"`
	// SID for your Twilio account.
	TwilioSid pulumi.StringPtrInput `pulumi:"twilioSid"`
	// AuthToken for your Twilio account.
	TwilioToken pulumi.StringPtrInput `pulumi:"twilioToken"`
	// Value can be `backChannel` or `frontChannel`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.
	UpstreamParams pulumi.StringPtrInput `pulumi:"upstreamParams"`
	// Indicates whether to use cert auth or not.
	UseCertAuth pulumi.BoolPtrInput `pulumi:"useCertAuth"`
	// Indicates whether to use Kerberos or not.
	UseKerberos pulumi.BoolPtrInput `pulumi:"useKerberos"`
	// Whether to use WS-Fed.
	UseWsfed pulumi.BoolPtrInput `pulumi:"useWsfed"`
	// Attribute in the SAML token that will be mapped to the userId property in Auth0.
	UserIdAttribute pulumi.StringPtrInput `pulumi:"userIdAttribute"`
	// User info endpoint.
	UserinfoEndpoint pulumi.StringPtrInput `pulumi:"userinfoEndpoint"`
	// Validation of the minimum and maximum values allowed for a user to have as username.
	Validation ConnectionOptionsValidationPtrInput `pulumi:"validation"`
	// Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
	WaadCommonEndpoint pulumi.BoolPtrInput `pulumi:"waadCommonEndpoint"`
	// Protocol to use.
	WaadProtocol pulumi.StringPtrInput `pulumi:"waadProtocol"`
}

func (ConnectionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptions)(nil)).Elem()
}

func (i ConnectionOptionsArgs) ToConnectionOptionsOutput() ConnectionOptionsOutput {
	return i.ToConnectionOptionsOutputWithContext(context.Background())
}

func (i ConnectionOptionsArgs) ToConnectionOptionsOutputWithContext(ctx context.Context) ConnectionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsOutput)
}

func (i ConnectionOptionsArgs) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return i.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsArgs) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsOutput).ToConnectionOptionsPtrOutputWithContext(ctx)
}

// ConnectionOptionsPtrInput is an input type that accepts ConnectionOptionsArgs, ConnectionOptionsPtr and ConnectionOptionsPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPtrInput` via:
//
//	        ConnectionOptionsArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput
	ToConnectionOptionsPtrOutputWithContext(context.Context) ConnectionOptionsPtrOutput
}

type connectionOptionsPtrType ConnectionOptionsArgs

func ConnectionOptionsPtr(v *ConnectionOptionsArgs) ConnectionOptionsPtrInput {
	return (*connectionOptionsPtrType)(v)
}

func (*connectionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptions)(nil)).Elem()
}

func (i *connectionOptionsPtrType) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return i.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPtrType) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPtrOutput)
}

type ConnectionOptionsOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptions)(nil)).Elem()
}

func (o ConnectionOptionsOutput) ToConnectionOptionsOutput() ConnectionOptionsOutput {
	return o
}

func (o ConnectionOptionsOutput) ToConnectionOptionsOutputWithContext(ctx context.Context) ConnectionOptionsOutput {
	return o
}

func (o ConnectionOptionsOutput) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return o.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsOutput) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptions) *ConnectionOptions {
		return &v
	}).(ConnectionOptionsPtrOutput)
}

// ADFS URL where to fetch the metadata source.
func (o ConnectionOptionsOutput) AdfsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AdfsServer }).(pulumi.StringPtrOutput)
}

// List of allowed audiences.
func (o ConnectionOptionsOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

// Enable API Access to users.
func (o ConnectionOptionsOutput) ApiEnableUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ApiEnableUsers }).(pulumi.BoolPtrOutput)
}

// App ID.
func (o ConnectionOptionsOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// Query string parameters to be included as part of the generated passwordless email link.
func (o ConnectionOptionsOutput) AuthParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.AuthParams }).(pulumi.StringMapOutput)
}

// Authorization endpoint.
func (o ConnectionOptionsOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

// Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
func (o ConnectionOptionsOutput) BruteForceProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.BruteForceProtection }).(pulumi.BoolPtrOutput)
}

// The strategy's client ID.
func (o ConnectionOptionsOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The strategy's client secret.
func (o ConnectionOptionsOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Salesforce community base URL.
func (o ConnectionOptionsOutput) CommunityBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.CommunityBaseUrl }).(pulumi.StringPtrOutput)
}

// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
func (o ConnectionOptionsOutput) Configuration() pulumi.MapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]interface{} { return v.Configuration }).(pulumi.MapOutput)
}

// A map of scripts used to integrate with a custom database.
func (o ConnectionOptionsOutput) CustomScripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.CustomScripts }).(pulumi.StringMapOutput)
}

// When enabled, additional debug information will be generated.
func (o ConnectionOptionsOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.Debug }).(pulumi.BoolPtrOutput)
}

// Sign Request Algorithm Digest.
func (o ConnectionOptionsOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

// Indicates whether to disable the cache or not.
func (o ConnectionOptionsOutput) DisableCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableCache }).(pulumi.BoolPtrOutput)
}

// When enabled, will disable sign out.
func (o ConnectionOptionsOutput) DisableSignOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableSignOut }).(pulumi.BoolPtrOutput)
}

// Indicates whether to allow user sign-ups to your application.
func (o ConnectionOptionsOutput) DisableSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableSignup }).(pulumi.BoolPtrOutput)
}

// OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.
func (o ConnectionOptionsOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.DiscoveryUrl }).(pulumi.StringPtrOutput)
}

// Domain name.
func (o ConnectionOptionsOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.
func (o ConnectionOptionsOutput) DomainAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.DomainAliases }).(pulumi.StringArrayOutput)
}

// Set to `true` to inject context into custom DB scripts (warning: cannot be disabled once enabled).
func (o ConnectionOptionsOutput) EnableScriptContext() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.EnableScriptContext }).(pulumi.BoolPtrOutput)
}

// Set to `true` to use a legacy user store.
func (o ConnectionOptionsOutput) EnabledDatabaseCustomization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.EnabledDatabaseCustomization }).(pulumi.BoolPtrOutput)
}

// Custom Entity ID for the connection.
func (o ConnectionOptionsOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Federation Metadata for the ADFS connection.
func (o ConnectionOptionsOutput) FedMetadataXml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.FedMetadataXml }).(pulumi.StringPtrOutput)
}

// If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
func (o ConnectionOptionsOutput) FieldsMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.FieldsMap }).(pulumi.StringPtrOutput)
}

// Specifies whether or not request info should be forwarded to sms gateway.
func (o ConnectionOptionsOutput) ForwardRequestInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ForwardRequestInfo }).(pulumi.BoolPtrOutput)
}

// Address to use as the sender.
func (o ConnectionOptionsOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.From }).(pulumi.StringPtrOutput)
}

// Defines the parameters used to generate the auth token for the custom gateway.
func (o ConnectionOptionsOutput) GatewayAuthentication() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsGatewayAuthentication { return v.GatewayAuthentication }).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

// Defines a custom sms gateway to use instead of Twilio.
func (o ConnectionOptionsOutput) GatewayUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.GatewayUrl }).(pulumi.StringPtrOutput)
}

// Icon URL.
func (o ConnectionOptionsOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.
func (o ConnectionOptionsOutput) IdentityApi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.IdentityApi }).(pulumi.StringPtrOutput)
}

// Configuration options for IDP Initiated Authentication. This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`.
func (o ConnectionOptionsOutput) IdpInitiated() ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsIdpInitiated { return v.IdpInitiated }).(ConnectionOptionsIdpInitiatedPtrOutput)
}

// Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.
func (o ConnectionOptionsOutput) ImportMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ImportMode }).(pulumi.BoolPtrOutput)
}

// A list of IPs.
func (o ConnectionOptionsOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// Issuer URL, e.g. `https://auth.example.com`.
func (o ConnectionOptionsOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// JWKS URI.
func (o ConnectionOptionsOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.JwksUri }).(pulumi.StringPtrOutput)
}

// Apple Key ID.
func (o ConnectionOptionsOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

// Maximum number of groups to retrieve.
func (o ConnectionOptionsOutput) MaxGroupsToRetrieve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MaxGroupsToRetrieve }).(pulumi.StringPtrOutput)
}

// SID for Copilot. Used when SMS Source is Copilot.
func (o ConnectionOptionsOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MessagingServiceSid }).(pulumi.StringPtrOutput)
}

// The URL of the SAML metadata document.
func (o ConnectionOptionsOutput) MetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MetadataUrl }).(pulumi.StringPtrOutput)
}

// The XML content for the SAML metadata document.
func (o ConnectionOptionsOutput) MetadataXml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MetadataXml }).(pulumi.StringPtrOutput)
}

// Configuration options for multifactor authentication.
func (o ConnectionOptionsOutput) Mfa() ConnectionOptionsMfaPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsMfa { return v.Mfa }).(ConnectionOptionsMfaPtrOutput)
}

// The public name of the email or SMS Connection. In most cases this is the same name as the connection name.
func (o ConnectionOptionsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.
func (o ConnectionOptionsOutput) NonPersistentAttrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.NonPersistentAttrs }).(pulumi.StringArrayOutput)
}

// Configuration settings for password complexity.
func (o ConnectionOptionsOutput) PasswordComplexityOptions() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordComplexityOptions {
		return v.PasswordComplexityOptions
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.
func (o ConnectionOptionsOutput) PasswordDictionary() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordDictionary { return v.PasswordDictionary }).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.
func (o ConnectionOptionsOutput) PasswordHistories() ConnectionOptionsPasswordHistoryArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []ConnectionOptionsPasswordHistory { return v.PasswordHistories }).(ConnectionOptionsPasswordHistoryArrayOutput)
}

// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's `name`, `username`, `nickname`, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's `email`, or first part of the user's `email`.
func (o ConnectionOptionsOutput) PasswordNoPersonalInfo() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordNoPersonalInfo { return v.PasswordNoPersonalInfo }).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
func (o ConnectionOptionsOutput) PasswordPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.PasswordPolicy }).(pulumi.StringPtrOutput)
}

// Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.
func (o ConnectionOptionsOutput) PkceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.PkceEnabled }).(pulumi.BoolPtrOutput)
}

// The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.
func (o ConnectionOptionsOutput) ProtocolBinding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ProtocolBinding }).(pulumi.StringPtrOutput)
}

// Defines the custom `smsGateway` provider.
func (o ConnectionOptionsOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// Template that formats the SAML request.
func (o ConnectionOptionsOutput) RequestTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.RequestTemplate }).(pulumi.StringPtrOutput)
}

// Indicates whether the user is required to provide a username in addition to an email address.
func (o ConnectionOptionsOutput) RequiresUsername() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.RequiresUsername }).(pulumi.BoolPtrOutput)
}

// Permissions to grant to the connection. Within the Auth0 dashboard these appear under the "Attributes" and "Extended Attributes" sections. Some examples: `basicProfile`, `extProfile`, `extNestedGroups`, etc.
func (o ConnectionOptionsOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.
func (o ConnectionOptionsOutput) Scripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.Scripts }).(pulumi.StringMapOutput)
}

// Determines whether the 'name', 'given*name', 'family*name', 'nickname', and 'picture' attributes can be independently updated when using an external IdP. Possible values are 'on*each*login' (default value, it configures the connection to automatically update the root attributes from the external IdP with each user login. When this setting is used, root attributes cannot be independently updated), 'on*first*login' (configures the connection to only set the root attributes on first login, allowing them to be independently updated thereafter).
func (o ConnectionOptionsOutput) SetUserRootAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SetUserRootAttributes }).(pulumi.StringPtrOutput)
}

// Choose how Auth0 sets the emailVerified field in the user profile.
func (o ConnectionOptionsOutput) ShouldTrustEmailVerifiedConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ShouldTrustEmailVerifiedConnection }).(pulumi.StringPtrOutput)
}

// SAML single login URL for the connection.
func (o ConnectionOptionsOutput) SignInEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SignInEndpoint }).(pulumi.StringPtrOutput)
}

// SAML single logout URL for the connection.
func (o ConnectionOptionsOutput) SignOutEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SignOutEndpoint }).(pulumi.StringPtrOutput)
}

// When enabled, the SAML authentication request will be signed.
func (o ConnectionOptionsOutput) SignSamlRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.SignSamlRequest }).(pulumi.BoolPtrOutput)
}

// Sign Request Algorithm.
func (o ConnectionOptionsOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.
func (o ConnectionOptionsOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SigningCert }).(pulumi.StringPtrOutput)
}

// The key used to sign requests in the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
func (o ConnectionOptionsOutput) SigningKey() ConnectionOptionsSigningKeyPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsSigningKey { return v.SigningKey }).(ConnectionOptionsSigningKeyPtrOutput)
}

// Version 1 is deprecated, use version 2.
func (o ConnectionOptionsOutput) StrategyVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *int { return v.StrategyVersion }).(pulumi.IntPtrOutput)
}

// Subject line of the email.
func (o ConnectionOptionsOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// Syntax of the template body.
func (o ConnectionOptionsOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Syntax }).(pulumi.StringPtrOutput)
}

// Apple Team ID.
func (o ConnectionOptionsOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

// Body of the template.
func (o ConnectionOptionsOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Template }).(pulumi.StringPtrOutput)
}

// Tenant domain name.
func (o ConnectionOptionsOutput) TenantDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TenantDomain }).(pulumi.StringPtrOutput)
}

// Token endpoint.
func (o ConnectionOptionsOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TokenEndpoint }).(pulumi.StringPtrOutput)
}

// Configuration options for one-time passwords.
func (o ConnectionOptionsOutput) Totp() ConnectionOptionsTotpPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsTotp { return v.Totp }).(ConnectionOptionsTotpPtrOutput)
}

// SID for your Twilio account.
func (o ConnectionOptionsOutput) TwilioSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TwilioSid }).(pulumi.StringPtrOutput)
}

// AuthToken for your Twilio account.
func (o ConnectionOptionsOutput) TwilioToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TwilioToken }).(pulumi.StringPtrOutput)
}

// Value can be `backChannel` or `frontChannel`.
func (o ConnectionOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.
func (o ConnectionOptionsOutput) UpstreamParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.UpstreamParams }).(pulumi.StringPtrOutput)
}

// Indicates whether to use cert auth or not.
func (o ConnectionOptionsOutput) UseCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseCertAuth }).(pulumi.BoolPtrOutput)
}

// Indicates whether to use Kerberos or not.
func (o ConnectionOptionsOutput) UseKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseKerberos }).(pulumi.BoolPtrOutput)
}

// Whether to use WS-Fed.
func (o ConnectionOptionsOutput) UseWsfed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseWsfed }).(pulumi.BoolPtrOutput)
}

// Attribute in the SAML token that will be mapped to the userId property in Auth0.
func (o ConnectionOptionsOutput) UserIdAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.UserIdAttribute }).(pulumi.StringPtrOutput)
}

// User info endpoint.
func (o ConnectionOptionsOutput) UserinfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.UserinfoEndpoint }).(pulumi.StringPtrOutput)
}

// Validation of the minimum and maximum values allowed for a user to have as username.
func (o ConnectionOptionsOutput) Validation() ConnectionOptionsValidationPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsValidation { return v.Validation }).(ConnectionOptionsValidationPtrOutput)
}

// Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
func (o ConnectionOptionsOutput) WaadCommonEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.WaadCommonEndpoint }).(pulumi.BoolPtrOutput)
}

// Protocol to use.
func (o ConnectionOptionsOutput) WaadProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.WaadProtocol }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptions)(nil)).Elem()
}

func (o ConnectionOptionsPtrOutput) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPtrOutput) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPtrOutput) Elem() ConnectionOptionsOutput {
	return o.ApplyT(func(v *ConnectionOptions) ConnectionOptions {
		if v != nil {
			return *v
		}
		var ret ConnectionOptions
		return ret
	}).(ConnectionOptionsOutput)
}

// ADFS URL where to fetch the metadata source.
func (o ConnectionOptionsPtrOutput) AdfsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AdfsServer
	}).(pulumi.StringPtrOutput)
}

// List of allowed audiences.
func (o ConnectionOptionsPtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

// Enable API Access to users.
func (o ConnectionOptionsPtrOutput) ApiEnableUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ApiEnableUsers
	}).(pulumi.BoolPtrOutput)
}

// App ID.
func (o ConnectionOptionsPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// Query string parameters to be included as part of the generated passwordless email link.
func (o ConnectionOptionsPtrOutput) AuthParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.AuthParams
	}).(pulumi.StringMapOutput)
}

// Authorization endpoint.
func (o ConnectionOptionsPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
func (o ConnectionOptionsPtrOutput) BruteForceProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.BruteForceProtection
	}).(pulumi.BoolPtrOutput)
}

// The strategy's client ID.
func (o ConnectionOptionsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The strategy's client secret.
func (o ConnectionOptionsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Salesforce community base URL.
func (o ConnectionOptionsPtrOutput) CommunityBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.CommunityBaseUrl
	}).(pulumi.StringPtrOutput)
}

// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
func (o ConnectionOptionsPtrOutput) Configuration() pulumi.MapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(pulumi.MapOutput)
}

// A map of scripts used to integrate with a custom database.
func (o ConnectionOptionsPtrOutput) CustomScripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomScripts
	}).(pulumi.StringMapOutput)
}

// When enabled, additional debug information will be generated.
func (o ConnectionOptionsPtrOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Debug
	}).(pulumi.BoolPtrOutput)
}

// Sign Request Algorithm Digest.
func (o ConnectionOptionsPtrOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.DigestAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to disable the cache or not.
func (o ConnectionOptionsPtrOutput) DisableCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableCache
	}).(pulumi.BoolPtrOutput)
}

// When enabled, will disable sign out.
func (o ConnectionOptionsPtrOutput) DisableSignOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSignOut
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to allow user sign-ups to your application.
func (o ConnectionOptionsPtrOutput) DisableSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSignup
	}).(pulumi.BoolPtrOutput)
}

// OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.
func (o ConnectionOptionsPtrOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveryUrl
	}).(pulumi.StringPtrOutput)
}

// Domain name.
func (o ConnectionOptionsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.
func (o ConnectionOptionsPtrOutput) DomainAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.DomainAliases
	}).(pulumi.StringArrayOutput)
}

// Set to `true` to inject context into custom DB scripts (warning: cannot be disabled once enabled).
func (o ConnectionOptionsPtrOutput) EnableScriptContext() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnableScriptContext
	}).(pulumi.BoolPtrOutput)
}

// Set to `true` to use a legacy user store.
func (o ConnectionOptionsPtrOutput) EnabledDatabaseCustomization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnabledDatabaseCustomization
	}).(pulumi.BoolPtrOutput)
}

// Custom Entity ID for the connection.
func (o ConnectionOptionsPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// Federation Metadata for the ADFS connection.
func (o ConnectionOptionsPtrOutput) FedMetadataXml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.FedMetadataXml
	}).(pulumi.StringPtrOutput)
}

// If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
func (o ConnectionOptionsPtrOutput) FieldsMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.FieldsMap
	}).(pulumi.StringPtrOutput)
}

// Specifies whether or not request info should be forwarded to sms gateway.
func (o ConnectionOptionsPtrOutput) ForwardRequestInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ForwardRequestInfo
	}).(pulumi.BoolPtrOutput)
}

// Address to use as the sender.
func (o ConnectionOptionsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Defines the parameters used to generate the auth token for the custom gateway.
func (o ConnectionOptionsPtrOutput) GatewayAuthentication() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsGatewayAuthentication {
		if v == nil {
			return nil
		}
		return v.GatewayAuthentication
	}).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

// Defines a custom sms gateway to use instead of Twilio.
func (o ConnectionOptionsPtrOutput) GatewayUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.GatewayUrl
	}).(pulumi.StringPtrOutput)
}

// Icon URL.
func (o ConnectionOptionsPtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.IconUrl
	}).(pulumi.StringPtrOutput)
}

// Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.
func (o ConnectionOptionsPtrOutput) IdentityApi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.IdentityApi
	}).(pulumi.StringPtrOutput)
}

// Configuration options for IDP Initiated Authentication. This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`.
func (o ConnectionOptionsPtrOutput) IdpInitiated() ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsIdpInitiated {
		if v == nil {
			return nil
		}
		return v.IdpInitiated
	}).(ConnectionOptionsIdpInitiatedPtrOutput)
}

// Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.
func (o ConnectionOptionsPtrOutput) ImportMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ImportMode
	}).(pulumi.BoolPtrOutput)
}

// A list of IPs.
func (o ConnectionOptionsPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// Issuer URL, e.g. `https://auth.example.com`.
func (o ConnectionOptionsPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// JWKS URI.
func (o ConnectionOptionsPtrOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.JwksUri
	}).(pulumi.StringPtrOutput)
}

// Apple Key ID.
func (o ConnectionOptionsPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeyId
	}).(pulumi.StringPtrOutput)
}

// Maximum number of groups to retrieve.
func (o ConnectionOptionsPtrOutput) MaxGroupsToRetrieve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MaxGroupsToRetrieve
	}).(pulumi.StringPtrOutput)
}

// SID for Copilot. Used when SMS Source is Copilot.
func (o ConnectionOptionsPtrOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MessagingServiceSid
	}).(pulumi.StringPtrOutput)
}

// The URL of the SAML metadata document.
func (o ConnectionOptionsPtrOutput) MetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MetadataUrl
	}).(pulumi.StringPtrOutput)
}

// The XML content for the SAML metadata document.
func (o ConnectionOptionsPtrOutput) MetadataXml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MetadataXml
	}).(pulumi.StringPtrOutput)
}

// Configuration options for multifactor authentication.
func (o ConnectionOptionsPtrOutput) Mfa() ConnectionOptionsMfaPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsMfa {
		if v == nil {
			return nil
		}
		return v.Mfa
	}).(ConnectionOptionsMfaPtrOutput)
}

// The public name of the email or SMS Connection. In most cases this is the same name as the connection name.
func (o ConnectionOptionsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.
func (o ConnectionOptionsPtrOutput) NonPersistentAttrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.NonPersistentAttrs
	}).(pulumi.StringArrayOutput)
}

// Configuration settings for password complexity.
func (o ConnectionOptionsPtrOutput) PasswordComplexityOptions() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordComplexityOptions {
		if v == nil {
			return nil
		}
		return v.PasswordComplexityOptions
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.
func (o ConnectionOptionsPtrOutput) PasswordDictionary() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordDictionary {
		if v == nil {
			return nil
		}
		return v.PasswordDictionary
	}).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.
func (o ConnectionOptionsPtrOutput) PasswordHistories() ConnectionOptionsPasswordHistoryArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []ConnectionOptionsPasswordHistory {
		if v == nil {
			return nil
		}
		return v.PasswordHistories
	}).(ConnectionOptionsPasswordHistoryArrayOutput)
}

// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's `name`, `username`, `nickname`, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's `email`, or first part of the user's `email`.
func (o ConnectionOptionsPtrOutput) PasswordNoPersonalInfo() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordNoPersonalInfo {
		if v == nil {
			return nil
		}
		return v.PasswordNoPersonalInfo
	}).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
func (o ConnectionOptionsPtrOutput) PasswordPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.PasswordPolicy
	}).(pulumi.StringPtrOutput)
}

// Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.
func (o ConnectionOptionsPtrOutput) PkceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.PkceEnabled
	}).(pulumi.BoolPtrOutput)
}

// The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.
func (o ConnectionOptionsPtrOutput) ProtocolBinding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ProtocolBinding
	}).(pulumi.StringPtrOutput)
}

// Defines the custom `smsGateway` provider.
func (o ConnectionOptionsPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

// Template that formats the SAML request.
func (o ConnectionOptionsPtrOutput) RequestTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.RequestTemplate
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the user is required to provide a username in addition to an email address.
func (o ConnectionOptionsPtrOutput) RequiresUsername() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.RequiresUsername
	}).(pulumi.BoolPtrOutput)
}

// Permissions to grant to the connection. Within the Auth0 dashboard these appear under the "Attributes" and "Extended Attributes" sections. Some examples: `basicProfile`, `extProfile`, `extNestedGroups`, etc.
func (o ConnectionOptionsPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.
func (o ConnectionOptionsPtrOutput) Scripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Scripts
	}).(pulumi.StringMapOutput)
}

// Determines whether the 'name', 'given*name', 'family*name', 'nickname', and 'picture' attributes can be independently updated when using an external IdP. Possible values are 'on*each*login' (default value, it configures the connection to automatically update the root attributes from the external IdP with each user login. When this setting is used, root attributes cannot be independently updated), 'on*first*login' (configures the connection to only set the root attributes on first login, allowing them to be independently updated thereafter).
func (o ConnectionOptionsPtrOutput) SetUserRootAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SetUserRootAttributes
	}).(pulumi.StringPtrOutput)
}

// Choose how Auth0 sets the emailVerified field in the user profile.
func (o ConnectionOptionsPtrOutput) ShouldTrustEmailVerifiedConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ShouldTrustEmailVerifiedConnection
	}).(pulumi.StringPtrOutput)
}

// SAML single login URL for the connection.
func (o ConnectionOptionsPtrOutput) SignInEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignInEndpoint
	}).(pulumi.StringPtrOutput)
}

// SAML single logout URL for the connection.
func (o ConnectionOptionsPtrOutput) SignOutEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignOutEndpoint
	}).(pulumi.StringPtrOutput)
}

// When enabled, the SAML authentication request will be signed.
func (o ConnectionOptionsPtrOutput) SignSamlRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.SignSamlRequest
	}).(pulumi.BoolPtrOutput)
}

// Sign Request Algorithm.
func (o ConnectionOptionsPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

// X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.
func (o ConnectionOptionsPtrOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SigningCert
	}).(pulumi.StringPtrOutput)
}

// The key used to sign requests in the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
func (o ConnectionOptionsPtrOutput) SigningKey() ConnectionOptionsSigningKeyPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsSigningKey {
		if v == nil {
			return nil
		}
		return v.SigningKey
	}).(ConnectionOptionsSigningKeyPtrOutput)
}

// Version 1 is deprecated, use version 2.
func (o ConnectionOptionsPtrOutput) StrategyVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *int {
		if v == nil {
			return nil
		}
		return v.StrategyVersion
	}).(pulumi.IntPtrOutput)
}

// Subject line of the email.
func (o ConnectionOptionsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

// Syntax of the template body.
func (o ConnectionOptionsPtrOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Syntax
	}).(pulumi.StringPtrOutput)
}

// Apple Team ID.
func (o ConnectionOptionsPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

// Body of the template.
func (o ConnectionOptionsPtrOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringPtrOutput)
}

// Tenant domain name.
func (o ConnectionOptionsPtrOutput) TenantDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TenantDomain
	}).(pulumi.StringPtrOutput)
}

// Token endpoint.
func (o ConnectionOptionsPtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// Configuration options for one-time passwords.
func (o ConnectionOptionsPtrOutput) Totp() ConnectionOptionsTotpPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsTotp {
		if v == nil {
			return nil
		}
		return v.Totp
	}).(ConnectionOptionsTotpPtrOutput)
}

// SID for your Twilio account.
func (o ConnectionOptionsPtrOutput) TwilioSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TwilioSid
	}).(pulumi.StringPtrOutput)
}

// AuthToken for your Twilio account.
func (o ConnectionOptionsPtrOutput) TwilioToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TwilioToken
	}).(pulumi.StringPtrOutput)
}

// Value can be `backChannel` or `frontChannel`.
func (o ConnectionOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.
func (o ConnectionOptionsPtrOutput) UpstreamParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.UpstreamParams
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to use cert auth or not.
func (o ConnectionOptionsPtrOutput) UseCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseCertAuth
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to use Kerberos or not.
func (o ConnectionOptionsPtrOutput) UseKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseKerberos
	}).(pulumi.BoolPtrOutput)
}

// Whether to use WS-Fed.
func (o ConnectionOptionsPtrOutput) UseWsfed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseWsfed
	}).(pulumi.BoolPtrOutput)
}

// Attribute in the SAML token that will be mapped to the userId property in Auth0.
func (o ConnectionOptionsPtrOutput) UserIdAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.UserIdAttribute
	}).(pulumi.StringPtrOutput)
}

// User info endpoint.
func (o ConnectionOptionsPtrOutput) UserinfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.UserinfoEndpoint
	}).(pulumi.StringPtrOutput)
}

// Validation of the minimum and maximum values allowed for a user to have as username.
func (o ConnectionOptionsPtrOutput) Validation() ConnectionOptionsValidationPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsValidation {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(ConnectionOptionsValidationPtrOutput)
}

// Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
func (o ConnectionOptionsPtrOutput) WaadCommonEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.WaadCommonEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Protocol to use.
func (o ConnectionOptionsPtrOutput) WaadProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.WaadProtocol
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsGatewayAuthentication struct {
	Audience            *string `pulumi:"audience"`
	Method              *string `pulumi:"method"`
	Secret              *string `pulumi:"secret"`
	SecretBase64Encoded *bool   `pulumi:"secretBase64Encoded"`
	Subject             *string `pulumi:"subject"`
}

// ConnectionOptionsGatewayAuthenticationInput is an input type that accepts ConnectionOptionsGatewayAuthenticationArgs and ConnectionOptionsGatewayAuthenticationOutput values.
// You can construct a concrete instance of `ConnectionOptionsGatewayAuthenticationInput` via:
//
//	ConnectionOptionsGatewayAuthenticationArgs{...}
type ConnectionOptionsGatewayAuthenticationInput interface {
	pulumi.Input

	ToConnectionOptionsGatewayAuthenticationOutput() ConnectionOptionsGatewayAuthenticationOutput
	ToConnectionOptionsGatewayAuthenticationOutputWithContext(context.Context) ConnectionOptionsGatewayAuthenticationOutput
}

type ConnectionOptionsGatewayAuthenticationArgs struct {
	Audience            pulumi.StringPtrInput `pulumi:"audience"`
	Method              pulumi.StringPtrInput `pulumi:"method"`
	Secret              pulumi.StringPtrInput `pulumi:"secret"`
	SecretBase64Encoded pulumi.BoolPtrInput   `pulumi:"secretBase64Encoded"`
	Subject             pulumi.StringPtrInput `pulumi:"subject"`
}

func (ConnectionOptionsGatewayAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationOutput() ConnectionOptionsGatewayAuthenticationOutput {
	return i.ToConnectionOptionsGatewayAuthenticationOutputWithContext(context.Background())
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsGatewayAuthenticationOutput)
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return i.ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsGatewayAuthenticationOutput).ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx)
}

// ConnectionOptionsGatewayAuthenticationPtrInput is an input type that accepts ConnectionOptionsGatewayAuthenticationArgs, ConnectionOptionsGatewayAuthenticationPtr and ConnectionOptionsGatewayAuthenticationPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsGatewayAuthenticationPtrInput` via:
//
//	        ConnectionOptionsGatewayAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsGatewayAuthenticationPtrInput interface {
	pulumi.Input

	ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput
	ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput
}

type connectionOptionsGatewayAuthenticationPtrType ConnectionOptionsGatewayAuthenticationArgs

func ConnectionOptionsGatewayAuthenticationPtr(v *ConnectionOptionsGatewayAuthenticationArgs) ConnectionOptionsGatewayAuthenticationPtrInput {
	return (*connectionOptionsGatewayAuthenticationPtrType)(v)
}

func (*connectionOptionsGatewayAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (i *connectionOptionsGatewayAuthenticationPtrType) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return i.ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsGatewayAuthenticationPtrType) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

type ConnectionOptionsGatewayAuthenticationOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsGatewayAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationOutput() ConnectionOptionsGatewayAuthenticationOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsGatewayAuthentication) *ConnectionOptionsGatewayAuthentication {
		return &v
	}).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) SecretBase64Encoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *bool { return v.SecretBase64Encoded }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsGatewayAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsGatewayAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Elem() ConnectionOptionsGatewayAuthenticationOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) ConnectionOptionsGatewayAuthentication {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsGatewayAuthentication
		return ret
	}).(ConnectionOptionsGatewayAuthenticationOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) SecretBase64Encoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.SecretBase64Encoded
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsIdpInitiated struct {
	ClientAuthorizeQuery *string `pulumi:"clientAuthorizeQuery"`
	ClientId             *string `pulumi:"clientId"`
	ClientProtocol       *string `pulumi:"clientProtocol"`
}

// ConnectionOptionsIdpInitiatedInput is an input type that accepts ConnectionOptionsIdpInitiatedArgs and ConnectionOptionsIdpInitiatedOutput values.
// You can construct a concrete instance of `ConnectionOptionsIdpInitiatedInput` via:
//
//	ConnectionOptionsIdpInitiatedArgs{...}
type ConnectionOptionsIdpInitiatedInput interface {
	pulumi.Input

	ToConnectionOptionsIdpInitiatedOutput() ConnectionOptionsIdpInitiatedOutput
	ToConnectionOptionsIdpInitiatedOutputWithContext(context.Context) ConnectionOptionsIdpInitiatedOutput
}

type ConnectionOptionsIdpInitiatedArgs struct {
	ClientAuthorizeQuery pulumi.StringPtrInput `pulumi:"clientAuthorizeQuery"`
	ClientId             pulumi.StringPtrInput `pulumi:"clientId"`
	ClientProtocol       pulumi.StringPtrInput `pulumi:"clientProtocol"`
}

func (ConnectionOptionsIdpInitiatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedOutput() ConnectionOptionsIdpInitiatedOutput {
	return i.ToConnectionOptionsIdpInitiatedOutputWithContext(context.Background())
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsIdpInitiatedOutput)
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return i.ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsIdpInitiatedOutput).ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx)
}

// ConnectionOptionsIdpInitiatedPtrInput is an input type that accepts ConnectionOptionsIdpInitiatedArgs, ConnectionOptionsIdpInitiatedPtr and ConnectionOptionsIdpInitiatedPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsIdpInitiatedPtrInput` via:
//
//	        ConnectionOptionsIdpInitiatedArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsIdpInitiatedPtrInput interface {
	pulumi.Input

	ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput
	ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Context) ConnectionOptionsIdpInitiatedPtrOutput
}

type connectionOptionsIdpInitiatedPtrType ConnectionOptionsIdpInitiatedArgs

func ConnectionOptionsIdpInitiatedPtr(v *ConnectionOptionsIdpInitiatedArgs) ConnectionOptionsIdpInitiatedPtrInput {
	return (*connectionOptionsIdpInitiatedPtrType)(v)
}

func (*connectionOptionsIdpInitiatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (i *connectionOptionsIdpInitiatedPtrType) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return i.ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsIdpInitiatedPtrType) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsIdpInitiatedPtrOutput)
}

type ConnectionOptionsIdpInitiatedOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsIdpInitiatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedOutput() ConnectionOptionsIdpInitiatedOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsIdpInitiated) *ConnectionOptionsIdpInitiated {
		return &v
	}).(ConnectionOptionsIdpInitiatedPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedOutput) ClientAuthorizeQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsIdpInitiated) *string { return v.ClientAuthorizeQuery }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsIdpInitiated) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedOutput) ClientProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsIdpInitiated) *string { return v.ClientProtocol }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsIdpInitiatedPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsIdpInitiatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) Elem() ConnectionOptionsIdpInitiatedOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) ConnectionOptionsIdpInitiated {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsIdpInitiated
		return ret
	}).(ConnectionOptionsIdpInitiatedOutput)
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ClientAuthorizeQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) *string {
		if v == nil {
			return nil
		}
		return v.ClientAuthorizeQuery
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ClientProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) *string {
		if v == nil {
			return nil
		}
		return v.ClientProtocol
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsMfa struct {
	Active               *bool `pulumi:"active"`
	ReturnEnrollSettings *bool `pulumi:"returnEnrollSettings"`
}

// ConnectionOptionsMfaInput is an input type that accepts ConnectionOptionsMfaArgs and ConnectionOptionsMfaOutput values.
// You can construct a concrete instance of `ConnectionOptionsMfaInput` via:
//
//	ConnectionOptionsMfaArgs{...}
type ConnectionOptionsMfaInput interface {
	pulumi.Input

	ToConnectionOptionsMfaOutput() ConnectionOptionsMfaOutput
	ToConnectionOptionsMfaOutputWithContext(context.Context) ConnectionOptionsMfaOutput
}

type ConnectionOptionsMfaArgs struct {
	Active               pulumi.BoolPtrInput `pulumi:"active"`
	ReturnEnrollSettings pulumi.BoolPtrInput `pulumi:"returnEnrollSettings"`
}

func (ConnectionOptionsMfaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsMfa)(nil)).Elem()
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaOutput() ConnectionOptionsMfaOutput {
	return i.ToConnectionOptionsMfaOutputWithContext(context.Background())
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaOutputWithContext(ctx context.Context) ConnectionOptionsMfaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsMfaOutput)
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return i.ToConnectionOptionsMfaPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsMfaOutput).ToConnectionOptionsMfaPtrOutputWithContext(ctx)
}

// ConnectionOptionsMfaPtrInput is an input type that accepts ConnectionOptionsMfaArgs, ConnectionOptionsMfaPtr and ConnectionOptionsMfaPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsMfaPtrInput` via:
//
//	        ConnectionOptionsMfaArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsMfaPtrInput interface {
	pulumi.Input

	ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput
	ToConnectionOptionsMfaPtrOutputWithContext(context.Context) ConnectionOptionsMfaPtrOutput
}

type connectionOptionsMfaPtrType ConnectionOptionsMfaArgs

func ConnectionOptionsMfaPtr(v *ConnectionOptionsMfaArgs) ConnectionOptionsMfaPtrInput {
	return (*connectionOptionsMfaPtrType)(v)
}

func (*connectionOptionsMfaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsMfa)(nil)).Elem()
}

func (i *connectionOptionsMfaPtrType) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return i.ToConnectionOptionsMfaPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsMfaPtrType) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsMfaPtrOutput)
}

type ConnectionOptionsMfaOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsMfaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsMfa)(nil)).Elem()
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaOutput() ConnectionOptionsMfaOutput {
	return o
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaOutputWithContext(ctx context.Context) ConnectionOptionsMfaOutput {
	return o
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return o.ToConnectionOptionsMfaPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsMfa) *ConnectionOptionsMfa {
		return &v
	}).(ConnectionOptionsMfaPtrOutput)
}

func (o ConnectionOptionsMfaOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsMfa) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsMfaOutput) ReturnEnrollSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsMfa) *bool { return v.ReturnEnrollSettings }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsMfaPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsMfaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsMfa)(nil)).Elem()
}

func (o ConnectionOptionsMfaPtrOutput) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return o
}

func (o ConnectionOptionsMfaPtrOutput) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return o
}

func (o ConnectionOptionsMfaPtrOutput) Elem() ConnectionOptionsMfaOutput {
	return o.ApplyT(func(v *ConnectionOptionsMfa) ConnectionOptionsMfa {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsMfa
		return ret
	}).(ConnectionOptionsMfaOutput)
}

func (o ConnectionOptionsMfaPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsMfa) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsMfaPtrOutput) ReturnEnrollSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsMfa) *bool {
		if v == nil {
			return nil
		}
		return v.ReturnEnrollSettings
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptions struct {
	MinLength *int `pulumi:"minLength"`
}

// ConnectionOptionsPasswordComplexityOptionsInput is an input type that accepts ConnectionOptionsPasswordComplexityOptionsArgs and ConnectionOptionsPasswordComplexityOptionsOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordComplexityOptionsInput` via:
//
//	ConnectionOptionsPasswordComplexityOptionsArgs{...}
type ConnectionOptionsPasswordComplexityOptionsInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput
	ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(context.Context) ConnectionOptionsPasswordComplexityOptionsOutput
}

type ConnectionOptionsPasswordComplexityOptionsArgs struct {
	MinLength pulumi.IntPtrInput `pulumi:"minLength"`
}

func (ConnectionOptionsPasswordComplexityOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsOutput)
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsOutput).ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordComplexityOptionsPtrInput is an input type that accepts ConnectionOptionsPasswordComplexityOptionsArgs, ConnectionOptionsPasswordComplexityOptionsPtr and ConnectionOptionsPasswordComplexityOptionsPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordComplexityOptionsPtrInput` via:
//
//	        ConnectionOptionsPasswordComplexityOptionsArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsPasswordComplexityOptionsPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput
	ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput
}

type connectionOptionsPasswordComplexityOptionsPtrType ConnectionOptionsPasswordComplexityOptionsArgs

func ConnectionOptionsPasswordComplexityOptionsPtr(v *ConnectionOptionsPasswordComplexityOptionsArgs) ConnectionOptionsPasswordComplexityOptionsPtrInput {
	return (*connectionOptionsPasswordComplexityOptionsPtrType)(v)
}

func (*connectionOptionsPasswordComplexityOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (i *connectionOptionsPasswordComplexityOptionsPtrType) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordComplexityOptionsPtrType) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptionsOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordComplexityOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsPasswordComplexityOptions) *ConnectionOptionsPasswordComplexityOptions {
		return &v
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordComplexityOptions) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptionsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordComplexityOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) Elem() ConnectionOptionsPasswordComplexityOptionsOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordComplexityOptions) ConnectionOptionsPasswordComplexityOptions {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsPasswordComplexityOptions
		return ret
	}).(ConnectionOptionsPasswordComplexityOptionsOutput)
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordComplexityOptions) *int {
		if v == nil {
			return nil
		}
		return v.MinLength
	}).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordDictionary struct {
	Dictionaries []string `pulumi:"dictionaries"`
	Enable       *bool    `pulumi:"enable"`
}

// ConnectionOptionsPasswordDictionaryInput is an input type that accepts ConnectionOptionsPasswordDictionaryArgs and ConnectionOptionsPasswordDictionaryOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordDictionaryInput` via:
//
//	ConnectionOptionsPasswordDictionaryArgs{...}
type ConnectionOptionsPasswordDictionaryInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput
	ToConnectionOptionsPasswordDictionaryOutputWithContext(context.Context) ConnectionOptionsPasswordDictionaryOutput
}

type ConnectionOptionsPasswordDictionaryArgs struct {
	Dictionaries pulumi.StringArrayInput `pulumi:"dictionaries"`
	Enable       pulumi.BoolPtrInput     `pulumi:"enable"`
}

func (ConnectionOptionsPasswordDictionaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput {
	return i.ToConnectionOptionsPasswordDictionaryOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryOutput)
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return i.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryOutput).ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordDictionaryPtrInput is an input type that accepts ConnectionOptionsPasswordDictionaryArgs, ConnectionOptionsPasswordDictionaryPtr and ConnectionOptionsPasswordDictionaryPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordDictionaryPtrInput` via:
//
//	        ConnectionOptionsPasswordDictionaryArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsPasswordDictionaryPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput
	ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Context) ConnectionOptionsPasswordDictionaryPtrOutput
}

type connectionOptionsPasswordDictionaryPtrType ConnectionOptionsPasswordDictionaryArgs

func ConnectionOptionsPasswordDictionaryPtr(v *ConnectionOptionsPasswordDictionaryArgs) ConnectionOptionsPasswordDictionaryPtrInput {
	return (*connectionOptionsPasswordDictionaryPtrType)(v)
}

func (*connectionOptionsPasswordDictionaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (i *connectionOptionsPasswordDictionaryPtrType) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return i.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordDictionaryPtrType) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

type ConnectionOptionsPasswordDictionaryOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordDictionaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsPasswordDictionary) *ConnectionOptionsPasswordDictionary {
		return &v
	}).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

func (o ConnectionOptionsPasswordDictionaryOutput) Dictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordDictionary) []string { return v.Dictionaries }).(pulumi.StringArrayOutput)
}

func (o ConnectionOptionsPasswordDictionaryOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordDictionary) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordDictionaryPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordDictionaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) Elem() ConnectionOptionsPasswordDictionaryOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) ConnectionOptionsPasswordDictionary {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsPasswordDictionary
		return ret
	}).(ConnectionOptionsPasswordDictionaryOutput)
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) Dictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) []string {
		if v == nil {
			return nil
		}
		return v.Dictionaries
	}).(pulumi.StringArrayOutput)
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordHistory struct {
	Enable *bool `pulumi:"enable"`
	Size   *int  `pulumi:"size"`
}

// ConnectionOptionsPasswordHistoryInput is an input type that accepts ConnectionOptionsPasswordHistoryArgs and ConnectionOptionsPasswordHistoryOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordHistoryInput` via:
//
//	ConnectionOptionsPasswordHistoryArgs{...}
type ConnectionOptionsPasswordHistoryInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput
	ToConnectionOptionsPasswordHistoryOutputWithContext(context.Context) ConnectionOptionsPasswordHistoryOutput
}

type ConnectionOptionsPasswordHistoryArgs struct {
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	Size   pulumi.IntPtrInput  `pulumi:"size"`
}

func (ConnectionOptionsPasswordHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (i ConnectionOptionsPasswordHistoryArgs) ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput {
	return i.ToConnectionOptionsPasswordHistoryOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordHistoryArgs) ToConnectionOptionsPasswordHistoryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordHistoryOutput)
}

// ConnectionOptionsPasswordHistoryArrayInput is an input type that accepts ConnectionOptionsPasswordHistoryArray and ConnectionOptionsPasswordHistoryArrayOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordHistoryArrayInput` via:
//
//	ConnectionOptionsPasswordHistoryArray{ ConnectionOptionsPasswordHistoryArgs{...} }
type ConnectionOptionsPasswordHistoryArrayInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput
	ToConnectionOptionsPasswordHistoryArrayOutputWithContext(context.Context) ConnectionOptionsPasswordHistoryArrayOutput
}

type ConnectionOptionsPasswordHistoryArray []ConnectionOptionsPasswordHistoryInput

func (ConnectionOptionsPasswordHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (i ConnectionOptionsPasswordHistoryArray) ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput {
	return i.ToConnectionOptionsPasswordHistoryArrayOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordHistoryArray) ToConnectionOptionsPasswordHistoryArrayOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordHistoryArrayOutput)
}

type ConnectionOptionsPasswordHistoryOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (o ConnectionOptionsPasswordHistoryOutput) ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryOutput) ToConnectionOptionsPasswordHistoryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordHistory) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsPasswordHistoryOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordHistory) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordHistoryArrayOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) ToConnectionOptionsPasswordHistoryArrayOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryArrayOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) Index(i pulumi.IntInput) ConnectionOptionsPasswordHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionOptionsPasswordHistory {
		return vs[0].([]ConnectionOptionsPasswordHistory)[vs[1].(int)]
	}).(ConnectionOptionsPasswordHistoryOutput)
}

type ConnectionOptionsPasswordNoPersonalInfo struct {
	Enable *bool `pulumi:"enable"`
}

// ConnectionOptionsPasswordNoPersonalInfoInput is an input type that accepts ConnectionOptionsPasswordNoPersonalInfoArgs and ConnectionOptionsPasswordNoPersonalInfoOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordNoPersonalInfoInput` via:
//
//	ConnectionOptionsPasswordNoPersonalInfoArgs{...}
type ConnectionOptionsPasswordNoPersonalInfoInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput
	ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput
}

type ConnectionOptionsPasswordNoPersonalInfoArgs struct {
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (ConnectionOptionsPasswordNoPersonalInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoOutput)
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoOutput).ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordNoPersonalInfoPtrInput is an input type that accepts ConnectionOptionsPasswordNoPersonalInfoArgs, ConnectionOptionsPasswordNoPersonalInfoPtr and ConnectionOptionsPasswordNoPersonalInfoPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordNoPersonalInfoPtrInput` via:
//
//	        ConnectionOptionsPasswordNoPersonalInfoArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsPasswordNoPersonalInfoPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput
	ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput
}

type connectionOptionsPasswordNoPersonalInfoPtrType ConnectionOptionsPasswordNoPersonalInfoArgs

func ConnectionOptionsPasswordNoPersonalInfoPtr(v *ConnectionOptionsPasswordNoPersonalInfoArgs) ConnectionOptionsPasswordNoPersonalInfoPtrInput {
	return (*connectionOptionsPasswordNoPersonalInfoPtrType)(v)
}

func (*connectionOptionsPasswordNoPersonalInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (i *connectionOptionsPasswordNoPersonalInfoPtrType) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordNoPersonalInfoPtrType) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

type ConnectionOptionsPasswordNoPersonalInfoOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordNoPersonalInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsPasswordNoPersonalInfo) *ConnectionOptionsPasswordNoPersonalInfo {
		return &v
	}).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordNoPersonalInfo) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordNoPersonalInfoPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) Elem() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordNoPersonalInfo) ConnectionOptionsPasswordNoPersonalInfo {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsPasswordNoPersonalInfo
		return ret
	}).(ConnectionOptionsPasswordNoPersonalInfoOutput)
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordNoPersonalInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsSigningKey struct {
	Cert string `pulumi:"cert"`
	Key  string `pulumi:"key"`
}

// ConnectionOptionsSigningKeyInput is an input type that accepts ConnectionOptionsSigningKeyArgs and ConnectionOptionsSigningKeyOutput values.
// You can construct a concrete instance of `ConnectionOptionsSigningKeyInput` via:
//
//	ConnectionOptionsSigningKeyArgs{...}
type ConnectionOptionsSigningKeyInput interface {
	pulumi.Input

	ToConnectionOptionsSigningKeyOutput() ConnectionOptionsSigningKeyOutput
	ToConnectionOptionsSigningKeyOutputWithContext(context.Context) ConnectionOptionsSigningKeyOutput
}

type ConnectionOptionsSigningKeyArgs struct {
	Cert pulumi.StringInput `pulumi:"cert"`
	Key  pulumi.StringInput `pulumi:"key"`
}

func (ConnectionOptionsSigningKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsSigningKey)(nil)).Elem()
}

func (i ConnectionOptionsSigningKeyArgs) ToConnectionOptionsSigningKeyOutput() ConnectionOptionsSigningKeyOutput {
	return i.ToConnectionOptionsSigningKeyOutputWithContext(context.Background())
}

func (i ConnectionOptionsSigningKeyArgs) ToConnectionOptionsSigningKeyOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsSigningKeyOutput)
}

func (i ConnectionOptionsSigningKeyArgs) ToConnectionOptionsSigningKeyPtrOutput() ConnectionOptionsSigningKeyPtrOutput {
	return i.ToConnectionOptionsSigningKeyPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsSigningKeyArgs) ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsSigningKeyOutput).ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx)
}

// ConnectionOptionsSigningKeyPtrInput is an input type that accepts ConnectionOptionsSigningKeyArgs, ConnectionOptionsSigningKeyPtr and ConnectionOptionsSigningKeyPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsSigningKeyPtrInput` via:
//
//	        ConnectionOptionsSigningKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsSigningKeyPtrInput interface {
	pulumi.Input

	ToConnectionOptionsSigningKeyPtrOutput() ConnectionOptionsSigningKeyPtrOutput
	ToConnectionOptionsSigningKeyPtrOutputWithContext(context.Context) ConnectionOptionsSigningKeyPtrOutput
}

type connectionOptionsSigningKeyPtrType ConnectionOptionsSigningKeyArgs

func ConnectionOptionsSigningKeyPtr(v *ConnectionOptionsSigningKeyArgs) ConnectionOptionsSigningKeyPtrInput {
	return (*connectionOptionsSigningKeyPtrType)(v)
}

func (*connectionOptionsSigningKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsSigningKey)(nil)).Elem()
}

func (i *connectionOptionsSigningKeyPtrType) ToConnectionOptionsSigningKeyPtrOutput() ConnectionOptionsSigningKeyPtrOutput {
	return i.ToConnectionOptionsSigningKeyPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsSigningKeyPtrType) ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsSigningKeyPtrOutput)
}

type ConnectionOptionsSigningKeyOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsSigningKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsSigningKey)(nil)).Elem()
}

func (o ConnectionOptionsSigningKeyOutput) ToConnectionOptionsSigningKeyOutput() ConnectionOptionsSigningKeyOutput {
	return o
}

func (o ConnectionOptionsSigningKeyOutput) ToConnectionOptionsSigningKeyOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyOutput {
	return o
}

func (o ConnectionOptionsSigningKeyOutput) ToConnectionOptionsSigningKeyPtrOutput() ConnectionOptionsSigningKeyPtrOutput {
	return o.ToConnectionOptionsSigningKeyPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsSigningKeyOutput) ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsSigningKey) *ConnectionOptionsSigningKey {
		return &v
	}).(ConnectionOptionsSigningKeyPtrOutput)
}

func (o ConnectionOptionsSigningKeyOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionOptionsSigningKey) string { return v.Cert }).(pulumi.StringOutput)
}

func (o ConnectionOptionsSigningKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionOptionsSigningKey) string { return v.Key }).(pulumi.StringOutput)
}

type ConnectionOptionsSigningKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsSigningKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsSigningKey)(nil)).Elem()
}

func (o ConnectionOptionsSigningKeyPtrOutput) ToConnectionOptionsSigningKeyPtrOutput() ConnectionOptionsSigningKeyPtrOutput {
	return o
}

func (o ConnectionOptionsSigningKeyPtrOutput) ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyPtrOutput {
	return o
}

func (o ConnectionOptionsSigningKeyPtrOutput) Elem() ConnectionOptionsSigningKeyOutput {
	return o.ApplyT(func(v *ConnectionOptionsSigningKey) ConnectionOptionsSigningKey {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsSigningKey
		return ret
	}).(ConnectionOptionsSigningKeyOutput)
}

func (o ConnectionOptionsSigningKeyPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsSigningKey) *string {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsSigningKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsSigningKey) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsTotp struct {
	Length   *int `pulumi:"length"`
	TimeStep *int `pulumi:"timeStep"`
}

// ConnectionOptionsTotpInput is an input type that accepts ConnectionOptionsTotpArgs and ConnectionOptionsTotpOutput values.
// You can construct a concrete instance of `ConnectionOptionsTotpInput` via:
//
//	ConnectionOptionsTotpArgs{...}
type ConnectionOptionsTotpInput interface {
	pulumi.Input

	ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput
	ToConnectionOptionsTotpOutputWithContext(context.Context) ConnectionOptionsTotpOutput
}

type ConnectionOptionsTotpArgs struct {
	Length   pulumi.IntPtrInput `pulumi:"length"`
	TimeStep pulumi.IntPtrInput `pulumi:"timeStep"`
}

func (ConnectionOptionsTotpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsTotp)(nil)).Elem()
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput {
	return i.ToConnectionOptionsTotpOutputWithContext(context.Background())
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpOutputWithContext(ctx context.Context) ConnectionOptionsTotpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpOutput)
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return i.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpOutput).ToConnectionOptionsTotpPtrOutputWithContext(ctx)
}

// ConnectionOptionsTotpPtrInput is an input type that accepts ConnectionOptionsTotpArgs, ConnectionOptionsTotpPtr and ConnectionOptionsTotpPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsTotpPtrInput` via:
//
//	        ConnectionOptionsTotpArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsTotpPtrInput interface {
	pulumi.Input

	ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput
	ToConnectionOptionsTotpPtrOutputWithContext(context.Context) ConnectionOptionsTotpPtrOutput
}

type connectionOptionsTotpPtrType ConnectionOptionsTotpArgs

func ConnectionOptionsTotpPtr(v *ConnectionOptionsTotpArgs) ConnectionOptionsTotpPtrInput {
	return (*connectionOptionsTotpPtrType)(v)
}

func (*connectionOptionsTotpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsTotp)(nil)).Elem()
}

func (i *connectionOptionsTotpPtrType) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return i.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsTotpPtrType) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpPtrOutput)
}

type ConnectionOptionsTotpOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsTotpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsTotp)(nil)).Elem()
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput {
	return o
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpOutputWithContext(ctx context.Context) ConnectionOptionsTotpOutput {
	return o
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return o.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsTotp) *ConnectionOptionsTotp {
		return &v
	}).(ConnectionOptionsTotpPtrOutput)
}

func (o ConnectionOptionsTotpOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsTotp) *int { return v.Length }).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsTotpOutput) TimeStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsTotp) *int { return v.TimeStep }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsTotpPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsTotpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsTotp)(nil)).Elem()
}

func (o ConnectionOptionsTotpPtrOutput) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return o
}

func (o ConnectionOptionsTotpPtrOutput) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return o
}

func (o ConnectionOptionsTotpPtrOutput) Elem() ConnectionOptionsTotpOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) ConnectionOptionsTotp {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsTotp
		return ret
	}).(ConnectionOptionsTotpOutput)
}

func (o ConnectionOptionsTotpPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsTotpPtrOutput) TimeStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) *int {
		if v == nil {
			return nil
		}
		return v.TimeStep
	}).(pulumi.IntPtrOutput)
}

type ConnectionOptionsValidation struct {
	Username *ConnectionOptionsValidationUsername `pulumi:"username"`
}

// ConnectionOptionsValidationInput is an input type that accepts ConnectionOptionsValidationArgs and ConnectionOptionsValidationOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationInput` via:
//
//	ConnectionOptionsValidationArgs{...}
type ConnectionOptionsValidationInput interface {
	pulumi.Input

	ToConnectionOptionsValidationOutput() ConnectionOptionsValidationOutput
	ToConnectionOptionsValidationOutputWithContext(context.Context) ConnectionOptionsValidationOutput
}

type ConnectionOptionsValidationArgs struct {
	Username ConnectionOptionsValidationUsernamePtrInput `pulumi:"username"`
}

func (ConnectionOptionsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidation)(nil)).Elem()
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationOutput() ConnectionOptionsValidationOutput {
	return i.ToConnectionOptionsValidationOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationOutputWithContext(ctx context.Context) ConnectionOptionsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationOutput)
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return i.ToConnectionOptionsValidationPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationOutput).ToConnectionOptionsValidationPtrOutputWithContext(ctx)
}

// ConnectionOptionsValidationPtrInput is an input type that accepts ConnectionOptionsValidationArgs, ConnectionOptionsValidationPtr and ConnectionOptionsValidationPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationPtrInput` via:
//
//	        ConnectionOptionsValidationArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsValidationPtrInput interface {
	pulumi.Input

	ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput
	ToConnectionOptionsValidationPtrOutputWithContext(context.Context) ConnectionOptionsValidationPtrOutput
}

type connectionOptionsValidationPtrType ConnectionOptionsValidationArgs

func ConnectionOptionsValidationPtr(v *ConnectionOptionsValidationArgs) ConnectionOptionsValidationPtrInput {
	return (*connectionOptionsValidationPtrType)(v)
}

func (*connectionOptionsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidation)(nil)).Elem()
}

func (i *connectionOptionsValidationPtrType) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return i.ToConnectionOptionsValidationPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsValidationPtrType) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationPtrOutput)
}

type ConnectionOptionsValidationOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidation)(nil)).Elem()
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationOutput() ConnectionOptionsValidationOutput {
	return o
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationOutputWithContext(ctx context.Context) ConnectionOptionsValidationOutput {
	return o
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return o.ToConnectionOptionsValidationPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsValidation) *ConnectionOptionsValidation {
		return &v
	}).(ConnectionOptionsValidationPtrOutput)
}

func (o ConnectionOptionsValidationOutput) Username() ConnectionOptionsValidationUsernamePtrOutput {
	return o.ApplyT(func(v ConnectionOptionsValidation) *ConnectionOptionsValidationUsername { return v.Username }).(ConnectionOptionsValidationUsernamePtrOutput)
}

type ConnectionOptionsValidationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidation)(nil)).Elem()
}

func (o ConnectionOptionsValidationPtrOutput) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return o
}

func (o ConnectionOptionsValidationPtrOutput) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return o
}

func (o ConnectionOptionsValidationPtrOutput) Elem() ConnectionOptionsValidationOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidation) ConnectionOptionsValidation {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsValidation
		return ret
	}).(ConnectionOptionsValidationOutput)
}

func (o ConnectionOptionsValidationPtrOutput) Username() ConnectionOptionsValidationUsernamePtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidation) *ConnectionOptionsValidationUsername {
		if v == nil {
			return nil
		}
		return v.Username
	}).(ConnectionOptionsValidationUsernamePtrOutput)
}

type ConnectionOptionsValidationUsername struct {
	Max *int `pulumi:"max"`
	Min *int `pulumi:"min"`
}

// ConnectionOptionsValidationUsernameInput is an input type that accepts ConnectionOptionsValidationUsernameArgs and ConnectionOptionsValidationUsernameOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationUsernameInput` via:
//
//	ConnectionOptionsValidationUsernameArgs{...}
type ConnectionOptionsValidationUsernameInput interface {
	pulumi.Input

	ToConnectionOptionsValidationUsernameOutput() ConnectionOptionsValidationUsernameOutput
	ToConnectionOptionsValidationUsernameOutputWithContext(context.Context) ConnectionOptionsValidationUsernameOutput
}

type ConnectionOptionsValidationUsernameArgs struct {
	Max pulumi.IntPtrInput `pulumi:"max"`
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (ConnectionOptionsValidationUsernameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernameOutput() ConnectionOptionsValidationUsernameOutput {
	return i.ToConnectionOptionsValidationUsernameOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernameOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationUsernameOutput)
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return i.ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationUsernameOutput).ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx)
}

// ConnectionOptionsValidationUsernamePtrInput is an input type that accepts ConnectionOptionsValidationUsernameArgs, ConnectionOptionsValidationUsernamePtr and ConnectionOptionsValidationUsernamePtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationUsernamePtrInput` via:
//
//	        ConnectionOptionsValidationUsernameArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsValidationUsernamePtrInput interface {
	pulumi.Input

	ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput
	ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Context) ConnectionOptionsValidationUsernamePtrOutput
}

type connectionOptionsValidationUsernamePtrType ConnectionOptionsValidationUsernameArgs

func ConnectionOptionsValidationUsernamePtr(v *ConnectionOptionsValidationUsernameArgs) ConnectionOptionsValidationUsernamePtrInput {
	return (*connectionOptionsValidationUsernamePtrType)(v)
}

func (*connectionOptionsValidationUsernamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (i *connectionOptionsValidationUsernamePtrType) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return i.ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Background())
}

func (i *connectionOptionsValidationUsernamePtrType) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationUsernamePtrOutput)
}

type ConnectionOptionsValidationUsernameOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationUsernameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernameOutput() ConnectionOptionsValidationUsernameOutput {
	return o
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernameOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernameOutput {
	return o
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return o.ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsValidationUsername) *ConnectionOptionsValidationUsername {
		return &v
	}).(ConnectionOptionsValidationUsernamePtrOutput)
}

func (o ConnectionOptionsValidationUsernameOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsValidationUsername) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsValidationUsernameOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsValidationUsername) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsValidationUsernamePtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationUsernamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (o ConnectionOptionsValidationUsernamePtrOutput) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return o
}

func (o ConnectionOptionsValidationUsernamePtrOutput) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return o
}

func (o ConnectionOptionsValidationUsernamePtrOutput) Elem() ConnectionOptionsValidationUsernameOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidationUsername) ConnectionOptionsValidationUsername {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsValidationUsername
		return ret
	}).(ConnectionOptionsValidationUsernameOutput)
}

func (o ConnectionOptionsValidationUsernamePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidationUsername) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsValidationUsernamePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidationUsername) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

type CustomDomainVerificationType struct {
	Methods []interface{} `pulumi:"methods"`
}

// CustomDomainVerificationTypeInput is an input type that accepts CustomDomainVerificationTypeArgs and CustomDomainVerificationTypeOutput values.
// You can construct a concrete instance of `CustomDomainVerificationTypeInput` via:
//
//	CustomDomainVerificationTypeArgs{...}
type CustomDomainVerificationTypeInput interface {
	pulumi.Input

	ToCustomDomainVerificationTypeOutput() CustomDomainVerificationTypeOutput
	ToCustomDomainVerificationTypeOutputWithContext(context.Context) CustomDomainVerificationTypeOutput
}

type CustomDomainVerificationTypeArgs struct {
	Methods pulumi.ArrayInput `pulumi:"methods"`
}

func (CustomDomainVerificationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainVerificationType)(nil)).Elem()
}

func (i CustomDomainVerificationTypeArgs) ToCustomDomainVerificationTypeOutput() CustomDomainVerificationTypeOutput {
	return i.ToCustomDomainVerificationTypeOutputWithContext(context.Background())
}

func (i CustomDomainVerificationTypeArgs) ToCustomDomainVerificationTypeOutputWithContext(ctx context.Context) CustomDomainVerificationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainVerificationTypeOutput)
}

// CustomDomainVerificationTypeArrayInput is an input type that accepts CustomDomainVerificationTypeArray and CustomDomainVerificationTypeArrayOutput values.
// You can construct a concrete instance of `CustomDomainVerificationTypeArrayInput` via:
//
//	CustomDomainVerificationTypeArray{ CustomDomainVerificationTypeArgs{...} }
type CustomDomainVerificationTypeArrayInput interface {
	pulumi.Input

	ToCustomDomainVerificationTypeArrayOutput() CustomDomainVerificationTypeArrayOutput
	ToCustomDomainVerificationTypeArrayOutputWithContext(context.Context) CustomDomainVerificationTypeArrayOutput
}

type CustomDomainVerificationTypeArray []CustomDomainVerificationTypeInput

func (CustomDomainVerificationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainVerificationType)(nil)).Elem()
}

func (i CustomDomainVerificationTypeArray) ToCustomDomainVerificationTypeArrayOutput() CustomDomainVerificationTypeArrayOutput {
	return i.ToCustomDomainVerificationTypeArrayOutputWithContext(context.Background())
}

func (i CustomDomainVerificationTypeArray) ToCustomDomainVerificationTypeArrayOutputWithContext(ctx context.Context) CustomDomainVerificationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainVerificationTypeArrayOutput)
}

type CustomDomainVerificationTypeOutput struct{ *pulumi.OutputState }

func (CustomDomainVerificationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainVerificationType)(nil)).Elem()
}

func (o CustomDomainVerificationTypeOutput) ToCustomDomainVerificationTypeOutput() CustomDomainVerificationTypeOutput {
	return o
}

func (o CustomDomainVerificationTypeOutput) ToCustomDomainVerificationTypeOutputWithContext(ctx context.Context) CustomDomainVerificationTypeOutput {
	return o
}

func (o CustomDomainVerificationTypeOutput) Methods() pulumi.ArrayOutput {
	return o.ApplyT(func(v CustomDomainVerificationType) []interface{} { return v.Methods }).(pulumi.ArrayOutput)
}

type CustomDomainVerificationTypeArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainVerificationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainVerificationType)(nil)).Elem()
}

func (o CustomDomainVerificationTypeArrayOutput) ToCustomDomainVerificationTypeArrayOutput() CustomDomainVerificationTypeArrayOutput {
	return o
}

func (o CustomDomainVerificationTypeArrayOutput) ToCustomDomainVerificationTypeArrayOutputWithContext(ctx context.Context) CustomDomainVerificationTypeArrayOutput {
	return o
}

func (o CustomDomainVerificationTypeArrayOutput) Index(i pulumi.IntInput) CustomDomainVerificationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDomainVerificationType {
		return vs[0].([]CustomDomainVerificationType)[vs[1].(int)]
	}).(CustomDomainVerificationTypeOutput)
}

type EmailCredentials struct {
	// AWS Access Key ID. Used only for AWS.
	AccessKeyId *string `pulumi:"accessKeyId"`
	// API Key for your email service. Will always be encrypted in our database.
	ApiKey *string `pulumi:"apiKey"`
	// API User for your email service.
	//
	// Deprecated: This field is not accepted by the API any more so it will be removed soon.
	ApiUser *string `pulumi:"apiUser"`
	// Domain name.
	Domain *string `pulumi:"domain"`
	// Default region. Used only for AWS, Mailgun, and SparkPost.
	Region *string `pulumi:"region"`
	// AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	SecretAccessKey *string `pulumi:"secretAccessKey"`
	// Hostname or IP address of your SMTP server. Used only for SMTP.
	SmtpHost *string `pulumi:"smtpHost"`
	// SMTP password. Used only for SMTP.
	SmtpPass *string `pulumi:"smtpPass"`
	// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	SmtpPort *int `pulumi:"smtpPort"`
	// SMTP username. Used only for SMTP.
	SmtpUser *string `pulumi:"smtpUser"`
}

// EmailCredentialsInput is an input type that accepts EmailCredentialsArgs and EmailCredentialsOutput values.
// You can construct a concrete instance of `EmailCredentialsInput` via:
//
//	EmailCredentialsArgs{...}
type EmailCredentialsInput interface {
	pulumi.Input

	ToEmailCredentialsOutput() EmailCredentialsOutput
	ToEmailCredentialsOutputWithContext(context.Context) EmailCredentialsOutput
}

type EmailCredentialsArgs struct {
	// AWS Access Key ID. Used only for AWS.
	AccessKeyId pulumi.StringPtrInput `pulumi:"accessKeyId"`
	// API Key for your email service. Will always be encrypted in our database.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// API User for your email service.
	//
	// Deprecated: This field is not accepted by the API any more so it will be removed soon.
	ApiUser pulumi.StringPtrInput `pulumi:"apiUser"`
	// Domain name.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Default region. Used only for AWS, Mailgun, and SparkPost.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
	// Hostname or IP address of your SMTP server. Used only for SMTP.
	SmtpHost pulumi.StringPtrInput `pulumi:"smtpHost"`
	// SMTP password. Used only for SMTP.
	SmtpPass pulumi.StringPtrInput `pulumi:"smtpPass"`
	// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	SmtpPort pulumi.IntPtrInput `pulumi:"smtpPort"`
	// SMTP username. Used only for SMTP.
	SmtpUser pulumi.StringPtrInput `pulumi:"smtpUser"`
}

func (EmailCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailCredentials)(nil)).Elem()
}

func (i EmailCredentialsArgs) ToEmailCredentialsOutput() EmailCredentialsOutput {
	return i.ToEmailCredentialsOutputWithContext(context.Background())
}

func (i EmailCredentialsArgs) ToEmailCredentialsOutputWithContext(ctx context.Context) EmailCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailCredentialsOutput)
}

func (i EmailCredentialsArgs) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return i.ToEmailCredentialsPtrOutputWithContext(context.Background())
}

func (i EmailCredentialsArgs) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailCredentialsOutput).ToEmailCredentialsPtrOutputWithContext(ctx)
}

// EmailCredentialsPtrInput is an input type that accepts EmailCredentialsArgs, EmailCredentialsPtr and EmailCredentialsPtrOutput values.
// You can construct a concrete instance of `EmailCredentialsPtrInput` via:
//
//	        EmailCredentialsArgs{...}
//
//	or:
//
//	        nil
type EmailCredentialsPtrInput interface {
	pulumi.Input

	ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput
	ToEmailCredentialsPtrOutputWithContext(context.Context) EmailCredentialsPtrOutput
}

type emailCredentialsPtrType EmailCredentialsArgs

func EmailCredentialsPtr(v *EmailCredentialsArgs) EmailCredentialsPtrInput {
	return (*emailCredentialsPtrType)(v)
}

func (*emailCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailCredentials)(nil)).Elem()
}

func (i *emailCredentialsPtrType) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return i.ToEmailCredentialsPtrOutputWithContext(context.Background())
}

func (i *emailCredentialsPtrType) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailCredentialsPtrOutput)
}

type EmailCredentialsOutput struct{ *pulumi.OutputState }

func (EmailCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailCredentials)(nil)).Elem()
}

func (o EmailCredentialsOutput) ToEmailCredentialsOutput() EmailCredentialsOutput {
	return o
}

func (o EmailCredentialsOutput) ToEmailCredentialsOutputWithContext(ctx context.Context) EmailCredentialsOutput {
	return o
}

func (o EmailCredentialsOutput) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return o.ToEmailCredentialsPtrOutputWithContext(context.Background())
}

func (o EmailCredentialsOutput) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailCredentials) *EmailCredentials {
		return &v
	}).(EmailCredentialsPtrOutput)
}

// AWS Access Key ID. Used only for AWS.
func (o EmailCredentialsOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

// API Key for your email service. Will always be encrypted in our database.
func (o EmailCredentialsOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// API User for your email service.
//
// Deprecated: This field is not accepted by the API any more so it will be removed soon.
func (o EmailCredentialsOutput) ApiUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.ApiUser }).(pulumi.StringPtrOutput)
}

// Domain name.
func (o EmailCredentialsOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Default region. Used only for AWS, Mailgun, and SparkPost.
func (o EmailCredentialsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
func (o EmailCredentialsOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

// Hostname or IP address of your SMTP server. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SmtpHost }).(pulumi.StringPtrOutput)
}

// SMTP password. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SmtpPass }).(pulumi.StringPtrOutput)
}

// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *int { return v.SmtpPort }).(pulumi.IntPtrOutput)
}

// SMTP username. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SmtpUser }).(pulumi.StringPtrOutput)
}

type EmailCredentialsPtrOutput struct{ *pulumi.OutputState }

func (EmailCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailCredentials)(nil)).Elem()
}

func (o EmailCredentialsPtrOutput) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return o
}

func (o EmailCredentialsPtrOutput) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return o
}

func (o EmailCredentialsPtrOutput) Elem() EmailCredentialsOutput {
	return o.ApplyT(func(v *EmailCredentials) EmailCredentials {
		if v != nil {
			return *v
		}
		var ret EmailCredentials
		return ret
	}).(EmailCredentialsOutput)
}

// AWS Access Key ID. Used only for AWS.
func (o EmailCredentialsPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// API Key for your email service. Will always be encrypted in our database.
func (o EmailCredentialsPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// API User for your email service.
//
// Deprecated: This field is not accepted by the API any more so it will be removed soon.
func (o EmailCredentialsPtrOutput) ApiUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ApiUser
	}).(pulumi.StringPtrOutput)
}

// Domain name.
func (o EmailCredentialsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Default region. Used only for AWS, Mailgun, and SparkPost.
func (o EmailCredentialsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
func (o EmailCredentialsPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// Hostname or IP address of your SMTP server. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpHost
	}).(pulumi.StringPtrOutput)
}

// SMTP password. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpPass
	}).(pulumi.StringPtrOutput)
}

// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *int {
		if v == nil {
			return nil
		}
		return v.SmtpPort
	}).(pulumi.IntPtrOutput)
}

// SMTP username. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpUser
	}).(pulumi.StringPtrOutput)
}

type EmailSettings struct {
	// Headers settings for the `smtp` email provider.
	Headers *EmailSettingsHeaders `pulumi:"headers"`
	// Message settings for the `mandrill` or `ses` email provider.
	Message *EmailSettingsMessage `pulumi:"message"`
}

// EmailSettingsInput is an input type that accepts EmailSettingsArgs and EmailSettingsOutput values.
// You can construct a concrete instance of `EmailSettingsInput` via:
//
//	EmailSettingsArgs{...}
type EmailSettingsInput interface {
	pulumi.Input

	ToEmailSettingsOutput() EmailSettingsOutput
	ToEmailSettingsOutputWithContext(context.Context) EmailSettingsOutput
}

type EmailSettingsArgs struct {
	// Headers settings for the `smtp` email provider.
	Headers EmailSettingsHeadersPtrInput `pulumi:"headers"`
	// Message settings for the `mandrill` or `ses` email provider.
	Message EmailSettingsMessagePtrInput `pulumi:"message"`
}

func (EmailSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailSettings)(nil)).Elem()
}

func (i EmailSettingsArgs) ToEmailSettingsOutput() EmailSettingsOutput {
	return i.ToEmailSettingsOutputWithContext(context.Background())
}

func (i EmailSettingsArgs) ToEmailSettingsOutputWithContext(ctx context.Context) EmailSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSettingsOutput)
}

func (i EmailSettingsArgs) ToEmailSettingsPtrOutput() EmailSettingsPtrOutput {
	return i.ToEmailSettingsPtrOutputWithContext(context.Background())
}

func (i EmailSettingsArgs) ToEmailSettingsPtrOutputWithContext(ctx context.Context) EmailSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSettingsOutput).ToEmailSettingsPtrOutputWithContext(ctx)
}

// EmailSettingsPtrInput is an input type that accepts EmailSettingsArgs, EmailSettingsPtr and EmailSettingsPtrOutput values.
// You can construct a concrete instance of `EmailSettingsPtrInput` via:
//
//	        EmailSettingsArgs{...}
//
//	or:
//
//	        nil
type EmailSettingsPtrInput interface {
	pulumi.Input

	ToEmailSettingsPtrOutput() EmailSettingsPtrOutput
	ToEmailSettingsPtrOutputWithContext(context.Context) EmailSettingsPtrOutput
}

type emailSettingsPtrType EmailSettingsArgs

func EmailSettingsPtr(v *EmailSettingsArgs) EmailSettingsPtrInput {
	return (*emailSettingsPtrType)(v)
}

func (*emailSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailSettings)(nil)).Elem()
}

func (i *emailSettingsPtrType) ToEmailSettingsPtrOutput() EmailSettingsPtrOutput {
	return i.ToEmailSettingsPtrOutputWithContext(context.Background())
}

func (i *emailSettingsPtrType) ToEmailSettingsPtrOutputWithContext(ctx context.Context) EmailSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSettingsPtrOutput)
}

type EmailSettingsOutput struct{ *pulumi.OutputState }

func (EmailSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailSettings)(nil)).Elem()
}

func (o EmailSettingsOutput) ToEmailSettingsOutput() EmailSettingsOutput {
	return o
}

func (o EmailSettingsOutput) ToEmailSettingsOutputWithContext(ctx context.Context) EmailSettingsOutput {
	return o
}

func (o EmailSettingsOutput) ToEmailSettingsPtrOutput() EmailSettingsPtrOutput {
	return o.ToEmailSettingsPtrOutputWithContext(context.Background())
}

func (o EmailSettingsOutput) ToEmailSettingsPtrOutputWithContext(ctx context.Context) EmailSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailSettings) *EmailSettings {
		return &v
	}).(EmailSettingsPtrOutput)
}

// Headers settings for the `smtp` email provider.
func (o EmailSettingsOutput) Headers() EmailSettingsHeadersPtrOutput {
	return o.ApplyT(func(v EmailSettings) *EmailSettingsHeaders { return v.Headers }).(EmailSettingsHeadersPtrOutput)
}

// Message settings for the `mandrill` or `ses` email provider.
func (o EmailSettingsOutput) Message() EmailSettingsMessagePtrOutput {
	return o.ApplyT(func(v EmailSettings) *EmailSettingsMessage { return v.Message }).(EmailSettingsMessagePtrOutput)
}

type EmailSettingsPtrOutput struct{ *pulumi.OutputState }

func (EmailSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailSettings)(nil)).Elem()
}

func (o EmailSettingsPtrOutput) ToEmailSettingsPtrOutput() EmailSettingsPtrOutput {
	return o
}

func (o EmailSettingsPtrOutput) ToEmailSettingsPtrOutputWithContext(ctx context.Context) EmailSettingsPtrOutput {
	return o
}

func (o EmailSettingsPtrOutput) Elem() EmailSettingsOutput {
	return o.ApplyT(func(v *EmailSettings) EmailSettings {
		if v != nil {
			return *v
		}
		var ret EmailSettings
		return ret
	}).(EmailSettingsOutput)
}

// Headers settings for the `smtp` email provider.
func (o EmailSettingsPtrOutput) Headers() EmailSettingsHeadersPtrOutput {
	return o.ApplyT(func(v *EmailSettings) *EmailSettingsHeaders {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(EmailSettingsHeadersPtrOutput)
}

// Message settings for the `mandrill` or `ses` email provider.
func (o EmailSettingsPtrOutput) Message() EmailSettingsMessagePtrOutput {
	return o.ApplyT(func(v *EmailSettings) *EmailSettingsMessage {
		if v == nil {
			return nil
		}
		return v.Message
	}).(EmailSettingsMessagePtrOutput)
}

type EmailSettingsHeaders struct {
	XMcViewContentLink   *string `pulumi:"xMcViewContentLink"`
	XSesConfigurationSet *string `pulumi:"xSesConfigurationSet"`
}

// EmailSettingsHeadersInput is an input type that accepts EmailSettingsHeadersArgs and EmailSettingsHeadersOutput values.
// You can construct a concrete instance of `EmailSettingsHeadersInput` via:
//
//	EmailSettingsHeadersArgs{...}
type EmailSettingsHeadersInput interface {
	pulumi.Input

	ToEmailSettingsHeadersOutput() EmailSettingsHeadersOutput
	ToEmailSettingsHeadersOutputWithContext(context.Context) EmailSettingsHeadersOutput
}

type EmailSettingsHeadersArgs struct {
	XMcViewContentLink   pulumi.StringPtrInput `pulumi:"xMcViewContentLink"`
	XSesConfigurationSet pulumi.StringPtrInput `pulumi:"xSesConfigurationSet"`
}

func (EmailSettingsHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailSettingsHeaders)(nil)).Elem()
}

func (i EmailSettingsHeadersArgs) ToEmailSettingsHeadersOutput() EmailSettingsHeadersOutput {
	return i.ToEmailSettingsHeadersOutputWithContext(context.Background())
}

func (i EmailSettingsHeadersArgs) ToEmailSettingsHeadersOutputWithContext(ctx context.Context) EmailSettingsHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSettingsHeadersOutput)
}

func (i EmailSettingsHeadersArgs) ToEmailSettingsHeadersPtrOutput() EmailSettingsHeadersPtrOutput {
	return i.ToEmailSettingsHeadersPtrOutputWithContext(context.Background())
}

func (i EmailSettingsHeadersArgs) ToEmailSettingsHeadersPtrOutputWithContext(ctx context.Context) EmailSettingsHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSettingsHeadersOutput).ToEmailSettingsHeadersPtrOutputWithContext(ctx)
}

// EmailSettingsHeadersPtrInput is an input type that accepts EmailSettingsHeadersArgs, EmailSettingsHeadersPtr and EmailSettingsHeadersPtrOutput values.
// You can construct a concrete instance of `EmailSettingsHeadersPtrInput` via:
//
//	        EmailSettingsHeadersArgs{...}
//
//	or:
//
//	        nil
type EmailSettingsHeadersPtrInput interface {
	pulumi.Input

	ToEmailSettingsHeadersPtrOutput() EmailSettingsHeadersPtrOutput
	ToEmailSettingsHeadersPtrOutputWithContext(context.Context) EmailSettingsHeadersPtrOutput
}

type emailSettingsHeadersPtrType EmailSettingsHeadersArgs

func EmailSettingsHeadersPtr(v *EmailSettingsHeadersArgs) EmailSettingsHeadersPtrInput {
	return (*emailSettingsHeadersPtrType)(v)
}

func (*emailSettingsHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailSettingsHeaders)(nil)).Elem()
}

func (i *emailSettingsHeadersPtrType) ToEmailSettingsHeadersPtrOutput() EmailSettingsHeadersPtrOutput {
	return i.ToEmailSettingsHeadersPtrOutputWithContext(context.Background())
}

func (i *emailSettingsHeadersPtrType) ToEmailSettingsHeadersPtrOutputWithContext(ctx context.Context) EmailSettingsHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSettingsHeadersPtrOutput)
}

type EmailSettingsHeadersOutput struct{ *pulumi.OutputState }

func (EmailSettingsHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailSettingsHeaders)(nil)).Elem()
}

func (o EmailSettingsHeadersOutput) ToEmailSettingsHeadersOutput() EmailSettingsHeadersOutput {
	return o
}

func (o EmailSettingsHeadersOutput) ToEmailSettingsHeadersOutputWithContext(ctx context.Context) EmailSettingsHeadersOutput {
	return o
}

func (o EmailSettingsHeadersOutput) ToEmailSettingsHeadersPtrOutput() EmailSettingsHeadersPtrOutput {
	return o.ToEmailSettingsHeadersPtrOutputWithContext(context.Background())
}

func (o EmailSettingsHeadersOutput) ToEmailSettingsHeadersPtrOutputWithContext(ctx context.Context) EmailSettingsHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailSettingsHeaders) *EmailSettingsHeaders {
		return &v
	}).(EmailSettingsHeadersPtrOutput)
}

func (o EmailSettingsHeadersOutput) XMcViewContentLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailSettingsHeaders) *string { return v.XMcViewContentLink }).(pulumi.StringPtrOutput)
}

func (o EmailSettingsHeadersOutput) XSesConfigurationSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailSettingsHeaders) *string { return v.XSesConfigurationSet }).(pulumi.StringPtrOutput)
}

type EmailSettingsHeadersPtrOutput struct{ *pulumi.OutputState }

func (EmailSettingsHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailSettingsHeaders)(nil)).Elem()
}

func (o EmailSettingsHeadersPtrOutput) ToEmailSettingsHeadersPtrOutput() EmailSettingsHeadersPtrOutput {
	return o
}

func (o EmailSettingsHeadersPtrOutput) ToEmailSettingsHeadersPtrOutputWithContext(ctx context.Context) EmailSettingsHeadersPtrOutput {
	return o
}

func (o EmailSettingsHeadersPtrOutput) Elem() EmailSettingsHeadersOutput {
	return o.ApplyT(func(v *EmailSettingsHeaders) EmailSettingsHeaders {
		if v != nil {
			return *v
		}
		var ret EmailSettingsHeaders
		return ret
	}).(EmailSettingsHeadersOutput)
}

func (o EmailSettingsHeadersPtrOutput) XMcViewContentLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailSettingsHeaders) *string {
		if v == nil {
			return nil
		}
		return v.XMcViewContentLink
	}).(pulumi.StringPtrOutput)
}

func (o EmailSettingsHeadersPtrOutput) XSesConfigurationSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailSettingsHeaders) *string {
		if v == nil {
			return nil
		}
		return v.XSesConfigurationSet
	}).(pulumi.StringPtrOutput)
}

type EmailSettingsMessage struct {
	ConfigurationSetName *string `pulumi:"configurationSetName"`
	ViewContentLink      *bool   `pulumi:"viewContentLink"`
}

// EmailSettingsMessageInput is an input type that accepts EmailSettingsMessageArgs and EmailSettingsMessageOutput values.
// You can construct a concrete instance of `EmailSettingsMessageInput` via:
//
//	EmailSettingsMessageArgs{...}
type EmailSettingsMessageInput interface {
	pulumi.Input

	ToEmailSettingsMessageOutput() EmailSettingsMessageOutput
	ToEmailSettingsMessageOutputWithContext(context.Context) EmailSettingsMessageOutput
}

type EmailSettingsMessageArgs struct {
	ConfigurationSetName pulumi.StringPtrInput `pulumi:"configurationSetName"`
	ViewContentLink      pulumi.BoolPtrInput   `pulumi:"viewContentLink"`
}

func (EmailSettingsMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailSettingsMessage)(nil)).Elem()
}

func (i EmailSettingsMessageArgs) ToEmailSettingsMessageOutput() EmailSettingsMessageOutput {
	return i.ToEmailSettingsMessageOutputWithContext(context.Background())
}

func (i EmailSettingsMessageArgs) ToEmailSettingsMessageOutputWithContext(ctx context.Context) EmailSettingsMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSettingsMessageOutput)
}

func (i EmailSettingsMessageArgs) ToEmailSettingsMessagePtrOutput() EmailSettingsMessagePtrOutput {
	return i.ToEmailSettingsMessagePtrOutputWithContext(context.Background())
}

func (i EmailSettingsMessageArgs) ToEmailSettingsMessagePtrOutputWithContext(ctx context.Context) EmailSettingsMessagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSettingsMessageOutput).ToEmailSettingsMessagePtrOutputWithContext(ctx)
}

// EmailSettingsMessagePtrInput is an input type that accepts EmailSettingsMessageArgs, EmailSettingsMessagePtr and EmailSettingsMessagePtrOutput values.
// You can construct a concrete instance of `EmailSettingsMessagePtrInput` via:
//
//	        EmailSettingsMessageArgs{...}
//
//	or:
//
//	        nil
type EmailSettingsMessagePtrInput interface {
	pulumi.Input

	ToEmailSettingsMessagePtrOutput() EmailSettingsMessagePtrOutput
	ToEmailSettingsMessagePtrOutputWithContext(context.Context) EmailSettingsMessagePtrOutput
}

type emailSettingsMessagePtrType EmailSettingsMessageArgs

func EmailSettingsMessagePtr(v *EmailSettingsMessageArgs) EmailSettingsMessagePtrInput {
	return (*emailSettingsMessagePtrType)(v)
}

func (*emailSettingsMessagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailSettingsMessage)(nil)).Elem()
}

func (i *emailSettingsMessagePtrType) ToEmailSettingsMessagePtrOutput() EmailSettingsMessagePtrOutput {
	return i.ToEmailSettingsMessagePtrOutputWithContext(context.Background())
}

func (i *emailSettingsMessagePtrType) ToEmailSettingsMessagePtrOutputWithContext(ctx context.Context) EmailSettingsMessagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailSettingsMessagePtrOutput)
}

type EmailSettingsMessageOutput struct{ *pulumi.OutputState }

func (EmailSettingsMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailSettingsMessage)(nil)).Elem()
}

func (o EmailSettingsMessageOutput) ToEmailSettingsMessageOutput() EmailSettingsMessageOutput {
	return o
}

func (o EmailSettingsMessageOutput) ToEmailSettingsMessageOutputWithContext(ctx context.Context) EmailSettingsMessageOutput {
	return o
}

func (o EmailSettingsMessageOutput) ToEmailSettingsMessagePtrOutput() EmailSettingsMessagePtrOutput {
	return o.ToEmailSettingsMessagePtrOutputWithContext(context.Background())
}

func (o EmailSettingsMessageOutput) ToEmailSettingsMessagePtrOutputWithContext(ctx context.Context) EmailSettingsMessagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailSettingsMessage) *EmailSettingsMessage {
		return &v
	}).(EmailSettingsMessagePtrOutput)
}

func (o EmailSettingsMessageOutput) ConfigurationSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailSettingsMessage) *string { return v.ConfigurationSetName }).(pulumi.StringPtrOutput)
}

func (o EmailSettingsMessageOutput) ViewContentLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EmailSettingsMessage) *bool { return v.ViewContentLink }).(pulumi.BoolPtrOutput)
}

type EmailSettingsMessagePtrOutput struct{ *pulumi.OutputState }

func (EmailSettingsMessagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailSettingsMessage)(nil)).Elem()
}

func (o EmailSettingsMessagePtrOutput) ToEmailSettingsMessagePtrOutput() EmailSettingsMessagePtrOutput {
	return o
}

func (o EmailSettingsMessagePtrOutput) ToEmailSettingsMessagePtrOutputWithContext(ctx context.Context) EmailSettingsMessagePtrOutput {
	return o
}

func (o EmailSettingsMessagePtrOutput) Elem() EmailSettingsMessageOutput {
	return o.ApplyT(func(v *EmailSettingsMessage) EmailSettingsMessage {
		if v != nil {
			return *v
		}
		var ret EmailSettingsMessage
		return ret
	}).(EmailSettingsMessageOutput)
}

func (o EmailSettingsMessagePtrOutput) ConfigurationSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailSettingsMessage) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationSetName
	}).(pulumi.StringPtrOutput)
}

func (o EmailSettingsMessagePtrOutput) ViewContentLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EmailSettingsMessage) *bool {
		if v == nil {
			return nil
		}
		return v.ViewContentLink
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientAddons struct {
	Aws                  map[string]interface{} `pulumi:"aws"`
	AzureBlob            map[string]interface{} `pulumi:"azureBlob"`
	AzureSb              map[string]interface{} `pulumi:"azureSb"`
	Box                  map[string]interface{} `pulumi:"box"`
	Cloudbees            map[string]interface{} `pulumi:"cloudbees"`
	Concur               map[string]interface{} `pulumi:"concur"`
	Dropbox              map[string]interface{} `pulumi:"dropbox"`
	Echosign             map[string]interface{} `pulumi:"echosign"`
	Egnyte               map[string]interface{} `pulumi:"egnyte"`
	Firebase             map[string]interface{} `pulumi:"firebase"`
	Layer                map[string]interface{} `pulumi:"layer"`
	Mscrm                map[string]interface{} `pulumi:"mscrm"`
	Newrelic             map[string]interface{} `pulumi:"newrelic"`
	Office365            map[string]interface{} `pulumi:"office365"`
	Rms                  map[string]interface{} `pulumi:"rms"`
	Salesforce           map[string]interface{} `pulumi:"salesforce"`
	SalesforceApi        map[string]interface{} `pulumi:"salesforceApi"`
	SalesforceSandboxApi map[string]interface{} `pulumi:"salesforceSandboxApi"`
	// Configuration settings for a SAML add-on.
	Samlp      *GlobalClientAddonsSamlp `pulumi:"samlp"`
	SapApi     map[string]interface{}   `pulumi:"sapApi"`
	Sentry     map[string]interface{}   `pulumi:"sentry"`
	Sharepoint map[string]interface{}   `pulumi:"sharepoint"`
	Slack      map[string]interface{}   `pulumi:"slack"`
	Springcm   map[string]interface{}   `pulumi:"springcm"`
	Wams       map[string]interface{}   `pulumi:"wams"`
	// WS-Fed (WIF) addon indicator. Actual configuration is stored in callback and `clientAliases` properties on the client.
	Wsfed   map[string]interface{} `pulumi:"wsfed"`
	Zendesk map[string]interface{} `pulumi:"zendesk"`
	Zoom    map[string]interface{} `pulumi:"zoom"`
}

// GlobalClientAddonsInput is an input type that accepts GlobalClientAddonsArgs and GlobalClientAddonsOutput values.
// You can construct a concrete instance of `GlobalClientAddonsInput` via:
//
//	GlobalClientAddonsArgs{...}
type GlobalClientAddonsInput interface {
	pulumi.Input

	ToGlobalClientAddonsOutput() GlobalClientAddonsOutput
	ToGlobalClientAddonsOutputWithContext(context.Context) GlobalClientAddonsOutput
}

type GlobalClientAddonsArgs struct {
	Aws                  pulumi.MapInput `pulumi:"aws"`
	AzureBlob            pulumi.MapInput `pulumi:"azureBlob"`
	AzureSb              pulumi.MapInput `pulumi:"azureSb"`
	Box                  pulumi.MapInput `pulumi:"box"`
	Cloudbees            pulumi.MapInput `pulumi:"cloudbees"`
	Concur               pulumi.MapInput `pulumi:"concur"`
	Dropbox              pulumi.MapInput `pulumi:"dropbox"`
	Echosign             pulumi.MapInput `pulumi:"echosign"`
	Egnyte               pulumi.MapInput `pulumi:"egnyte"`
	Firebase             pulumi.MapInput `pulumi:"firebase"`
	Layer                pulumi.MapInput `pulumi:"layer"`
	Mscrm                pulumi.MapInput `pulumi:"mscrm"`
	Newrelic             pulumi.MapInput `pulumi:"newrelic"`
	Office365            pulumi.MapInput `pulumi:"office365"`
	Rms                  pulumi.MapInput `pulumi:"rms"`
	Salesforce           pulumi.MapInput `pulumi:"salesforce"`
	SalesforceApi        pulumi.MapInput `pulumi:"salesforceApi"`
	SalesforceSandboxApi pulumi.MapInput `pulumi:"salesforceSandboxApi"`
	// Configuration settings for a SAML add-on.
	Samlp      GlobalClientAddonsSamlpPtrInput `pulumi:"samlp"`
	SapApi     pulumi.MapInput                 `pulumi:"sapApi"`
	Sentry     pulumi.MapInput                 `pulumi:"sentry"`
	Sharepoint pulumi.MapInput                 `pulumi:"sharepoint"`
	Slack      pulumi.MapInput                 `pulumi:"slack"`
	Springcm   pulumi.MapInput                 `pulumi:"springcm"`
	Wams       pulumi.MapInput                 `pulumi:"wams"`
	// WS-Fed (WIF) addon indicator. Actual configuration is stored in callback and `clientAliases` properties on the client.
	Wsfed   pulumi.MapInput `pulumi:"wsfed"`
	Zendesk pulumi.MapInput `pulumi:"zendesk"`
	Zoom    pulumi.MapInput `pulumi:"zoom"`
}

func (GlobalClientAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddons)(nil)).Elem()
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsOutput() GlobalClientAddonsOutput {
	return i.ToGlobalClientAddonsOutputWithContext(context.Background())
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsOutputWithContext(ctx context.Context) GlobalClientAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsOutput)
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return i.ToGlobalClientAddonsPtrOutputWithContext(context.Background())
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsOutput).ToGlobalClientAddonsPtrOutputWithContext(ctx)
}

// GlobalClientAddonsPtrInput is an input type that accepts GlobalClientAddonsArgs, GlobalClientAddonsPtr and GlobalClientAddonsPtrOutput values.
// You can construct a concrete instance of `GlobalClientAddonsPtrInput` via:
//
//	        GlobalClientAddonsArgs{...}
//
//	or:
//
//	        nil
type GlobalClientAddonsPtrInput interface {
	pulumi.Input

	ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput
	ToGlobalClientAddonsPtrOutputWithContext(context.Context) GlobalClientAddonsPtrOutput
}

type globalClientAddonsPtrType GlobalClientAddonsArgs

func GlobalClientAddonsPtr(v *GlobalClientAddonsArgs) GlobalClientAddonsPtrInput {
	return (*globalClientAddonsPtrType)(v)
}

func (*globalClientAddonsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddons)(nil)).Elem()
}

func (i *globalClientAddonsPtrType) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return i.ToGlobalClientAddonsPtrOutputWithContext(context.Background())
}

func (i *globalClientAddonsPtrType) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsPtrOutput)
}

type GlobalClientAddonsOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddons)(nil)).Elem()
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsOutput() GlobalClientAddonsOutput {
	return o
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsOutputWithContext(ctx context.Context) GlobalClientAddonsOutput {
	return o
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return o.ToGlobalClientAddonsPtrOutputWithContext(context.Background())
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientAddons) *GlobalClientAddons {
		return &v
	}).(GlobalClientAddonsPtrOutput)
}

func (o GlobalClientAddonsOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Aws }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.AzureBlob }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.AzureSb }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Box }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Cloudbees }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Concur }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Dropbox }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Echosign }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Egnyte }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Firebase }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Layer }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Mscrm }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Newrelic }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Office365 }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Rms }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Salesforce }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.SalesforceApi }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.SalesforceSandboxApi }).(pulumi.MapOutput)
}

// Configuration settings for a SAML add-on.
func (o GlobalClientAddonsOutput) Samlp() GlobalClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v GlobalClientAddons) *GlobalClientAddonsSamlp { return v.Samlp }).(GlobalClientAddonsSamlpPtrOutput)
}

func (o GlobalClientAddonsOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.SapApi }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Sentry }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Sharepoint }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Slack }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Springcm }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Wams }).(pulumi.MapOutput)
}

// WS-Fed (WIF) addon indicator. Actual configuration is stored in callback and `clientAliases` properties on the client.
func (o GlobalClientAddonsOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Wsfed }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Zendesk }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Zoom }).(pulumi.MapOutput)
}

type GlobalClientAddonsPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddons)(nil)).Elem()
}

func (o GlobalClientAddonsPtrOutput) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return o
}

func (o GlobalClientAddonsPtrOutput) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return o
}

func (o GlobalClientAddonsPtrOutput) Elem() GlobalClientAddonsOutput {
	return o.ApplyT(func(v *GlobalClientAddons) GlobalClientAddons {
		if v != nil {
			return *v
		}
		var ret GlobalClientAddons
		return ret
	}).(GlobalClientAddonsOutput)
}

func (o GlobalClientAddonsPtrOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureBlob
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureSb
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Box
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cloudbees
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Concur
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Dropbox
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Echosign
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Egnyte
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Firebase
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Layer
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mscrm
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Newrelic
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Office365
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Rms
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceApi
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceSandboxApi
	}).(pulumi.MapOutput)
}

// Configuration settings for a SAML add-on.
func (o GlobalClientAddonsPtrOutput) Samlp() GlobalClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddons) *GlobalClientAddonsSamlp {
		if v == nil {
			return nil
		}
		return v.Samlp
	}).(GlobalClientAddonsSamlpPtrOutput)
}

func (o GlobalClientAddonsPtrOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SapApi
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sentry
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sharepoint
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Springcm
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wams
	}).(pulumi.MapOutput)
}

// WS-Fed (WIF) addon indicator. Actual configuration is stored in callback and `clientAliases` properties on the client.
func (o GlobalClientAddonsPtrOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wsfed
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zoom
	}).(pulumi.MapOutput)
}

type GlobalClientAddonsSamlp struct {
	Audience                       *string                `pulumi:"audience"`
	AuthnContextClassRef           *string                `pulumi:"authnContextClassRef"`
	Binding                        *string                `pulumi:"binding"`
	CreateUpnClaim                 *bool                  `pulumi:"createUpnClaim"`
	Destination                    *string                `pulumi:"destination"`
	DigestAlgorithm                *string                `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     *bool                  `pulumi:"includeAttributeNameFormat"`
	Issuer                         *string                `pulumi:"issuer"`
	LifetimeInSeconds              *int                   `pulumi:"lifetimeInSeconds"`
	Logout                         map[string]interface{} `pulumi:"logout"`
	MapIdentities                  *bool                  `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           *bool                  `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       map[string]interface{} `pulumi:"mappings"`
	NameIdentifierFormat           *string                `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           []string               `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping *bool                  `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      *string                `pulumi:"recipient"`
	SignResponse                   *bool                  `pulumi:"signResponse"`
	SignatureAlgorithm             *string                `pulumi:"signatureAlgorithm"`
	SigningCert                    *string                `pulumi:"signingCert"`
	TypedAttributes                *bool                  `pulumi:"typedAttributes"`
}

// GlobalClientAddonsSamlpInput is an input type that accepts GlobalClientAddonsSamlpArgs and GlobalClientAddonsSamlpOutput values.
// You can construct a concrete instance of `GlobalClientAddonsSamlpInput` via:
//
//	GlobalClientAddonsSamlpArgs{...}
type GlobalClientAddonsSamlpInput interface {
	pulumi.Input

	ToGlobalClientAddonsSamlpOutput() GlobalClientAddonsSamlpOutput
	ToGlobalClientAddonsSamlpOutputWithContext(context.Context) GlobalClientAddonsSamlpOutput
}

type GlobalClientAddonsSamlpArgs struct {
	Audience                       pulumi.StringPtrInput   `pulumi:"audience"`
	AuthnContextClassRef           pulumi.StringPtrInput   `pulumi:"authnContextClassRef"`
	Binding                        pulumi.StringPtrInput   `pulumi:"binding"`
	CreateUpnClaim                 pulumi.BoolPtrInput     `pulumi:"createUpnClaim"`
	Destination                    pulumi.StringPtrInput   `pulumi:"destination"`
	DigestAlgorithm                pulumi.StringPtrInput   `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     pulumi.BoolPtrInput     `pulumi:"includeAttributeNameFormat"`
	Issuer                         pulumi.StringPtrInput   `pulumi:"issuer"`
	LifetimeInSeconds              pulumi.IntPtrInput      `pulumi:"lifetimeInSeconds"`
	Logout                         pulumi.MapInput         `pulumi:"logout"`
	MapIdentities                  pulumi.BoolPtrInput     `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           pulumi.BoolPtrInput     `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       pulumi.MapInput         `pulumi:"mappings"`
	NameIdentifierFormat           pulumi.StringPtrInput   `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           pulumi.StringArrayInput `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping pulumi.BoolPtrInput     `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      pulumi.StringPtrInput   `pulumi:"recipient"`
	SignResponse                   pulumi.BoolPtrInput     `pulumi:"signResponse"`
	SignatureAlgorithm             pulumi.StringPtrInput   `pulumi:"signatureAlgorithm"`
	SigningCert                    pulumi.StringPtrInput   `pulumi:"signingCert"`
	TypedAttributes                pulumi.BoolPtrInput     `pulumi:"typedAttributes"`
}

func (GlobalClientAddonsSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddonsSamlp)(nil)).Elem()
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpOutput() GlobalClientAddonsSamlpOutput {
	return i.ToGlobalClientAddonsSamlpOutputWithContext(context.Background())
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpOutput)
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return i.ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpOutput).ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx)
}

// GlobalClientAddonsSamlpPtrInput is an input type that accepts GlobalClientAddonsSamlpArgs, GlobalClientAddonsSamlpPtr and GlobalClientAddonsSamlpPtrOutput values.
// You can construct a concrete instance of `GlobalClientAddonsSamlpPtrInput` via:
//
//	        GlobalClientAddonsSamlpArgs{...}
//
//	or:
//
//	        nil
type GlobalClientAddonsSamlpPtrInput interface {
	pulumi.Input

	ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput
	ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Context) GlobalClientAddonsSamlpPtrOutput
}

type globalClientAddonsSamlpPtrType GlobalClientAddonsSamlpArgs

func GlobalClientAddonsSamlpPtr(v *GlobalClientAddonsSamlpArgs) GlobalClientAddonsSamlpPtrInput {
	return (*globalClientAddonsSamlpPtrType)(v)
}

func (*globalClientAddonsSamlpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddonsSamlp)(nil)).Elem()
}

func (i *globalClientAddonsSamlpPtrType) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return i.ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i *globalClientAddonsSamlpPtrType) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpPtrOutput)
}

type GlobalClientAddonsSamlpOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddonsSamlp)(nil)).Elem()
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpOutput() GlobalClientAddonsSamlpOutput {
	return o
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpOutput {
	return o
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return o.ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientAddonsSamlp) *GlobalClientAddonsSamlp {
		return &v
	}).(GlobalClientAddonsSamlpPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.AuthnContextClassRef }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Binding }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.CreateUpnClaim }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) map[string]interface{} { return v.Logout }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsSamlpOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.MapIdentities }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsSamlpOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.NameIdentifierFormat }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

func (o GlobalClientAddonsSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Recipient }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.SignResponse }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.SigningCert }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.TypedAttributes }).(pulumi.BoolPtrOutput)
}

type GlobalClientAddonsSamlpPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsSamlpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddonsSamlp)(nil)).Elem()
}

func (o GlobalClientAddonsSamlpPtrOutput) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return o
}

func (o GlobalClientAddonsSamlpPtrOutput) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return o
}

func (o GlobalClientAddonsSamlpPtrOutput) Elem() GlobalClientAddonsSamlpOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) GlobalClientAddonsSamlp {
		if v != nil {
			return *v
		}
		var ret GlobalClientAddonsSamlp
		return ret
	}).(GlobalClientAddonsSamlpOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.AuthnContextClassRef
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Binding
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.CreateUpnClaim
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.DigestAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAttributeNameFormat
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Logout
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapIdentities
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapUnknownClaimsAsIs
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierFormat
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) []string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierProbes
	}).(pulumi.StringArrayOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.PassthroughClaimsWithNoMapping
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Recipient
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.SignResponse
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SigningCert
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.TypedAttributes
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientJwtConfiguration struct {
	// Algorithm used to sign JWTs.
	Alg *string `pulumi:"alg"`
	// Number of seconds during which the JWT will be valid.
	LifetimeInSeconds *int `pulumi:"lifetimeInSeconds"`
	// Permissions (scopes) included in JWTs.
	Scopes map[string]string `pulumi:"scopes"`
	// Indicates whether the client secret is Base64-encoded.
	SecretEncoded *bool `pulumi:"secretEncoded"`
}

// GlobalClientJwtConfigurationInput is an input type that accepts GlobalClientJwtConfigurationArgs and GlobalClientJwtConfigurationOutput values.
// You can construct a concrete instance of `GlobalClientJwtConfigurationInput` via:
//
//	GlobalClientJwtConfigurationArgs{...}
type GlobalClientJwtConfigurationInput interface {
	pulumi.Input

	ToGlobalClientJwtConfigurationOutput() GlobalClientJwtConfigurationOutput
	ToGlobalClientJwtConfigurationOutputWithContext(context.Context) GlobalClientJwtConfigurationOutput
}

type GlobalClientJwtConfigurationArgs struct {
	// Algorithm used to sign JWTs.
	Alg pulumi.StringPtrInput `pulumi:"alg"`
	// Number of seconds during which the JWT will be valid.
	LifetimeInSeconds pulumi.IntPtrInput `pulumi:"lifetimeInSeconds"`
	// Permissions (scopes) included in JWTs.
	Scopes pulumi.StringMapInput `pulumi:"scopes"`
	// Indicates whether the client secret is Base64-encoded.
	SecretEncoded pulumi.BoolPtrInput `pulumi:"secretEncoded"`
}

func (GlobalClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientJwtConfiguration)(nil)).Elem()
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationOutput() GlobalClientJwtConfigurationOutput {
	return i.ToGlobalClientJwtConfigurationOutputWithContext(context.Background())
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientJwtConfigurationOutput)
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return i.ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientJwtConfigurationOutput).ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx)
}

// GlobalClientJwtConfigurationPtrInput is an input type that accepts GlobalClientJwtConfigurationArgs, GlobalClientJwtConfigurationPtr and GlobalClientJwtConfigurationPtrOutput values.
// You can construct a concrete instance of `GlobalClientJwtConfigurationPtrInput` via:
//
//	        GlobalClientJwtConfigurationArgs{...}
//
//	or:
//
//	        nil
type GlobalClientJwtConfigurationPtrInput interface {
	pulumi.Input

	ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput
	ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Context) GlobalClientJwtConfigurationPtrOutput
}

type globalClientJwtConfigurationPtrType GlobalClientJwtConfigurationArgs

func GlobalClientJwtConfigurationPtr(v *GlobalClientJwtConfigurationArgs) GlobalClientJwtConfigurationPtrInput {
	return (*globalClientJwtConfigurationPtrType)(v)
}

func (*globalClientJwtConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientJwtConfiguration)(nil)).Elem()
}

func (i *globalClientJwtConfigurationPtrType) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return i.ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i *globalClientJwtConfigurationPtrType) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientJwtConfigurationPtrOutput)
}

type GlobalClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (GlobalClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientJwtConfiguration)(nil)).Elem()
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationOutput() GlobalClientJwtConfigurationOutput {
	return o
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationOutput {
	return o
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return o.ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientJwtConfiguration) *GlobalClientJwtConfiguration {
		return &v
	}).(GlobalClientJwtConfigurationPtrOutput)
}

// Algorithm used to sign JWTs.
func (o GlobalClientJwtConfigurationOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) *string { return v.Alg }).(pulumi.StringPtrOutput)
}

// Number of seconds during which the JWT will be valid.
func (o GlobalClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

// Permissions (scopes) included in JWTs.
func (o GlobalClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

// Indicates whether the client secret is Base64-encoded.
func (o GlobalClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) *bool { return v.SecretEncoded }).(pulumi.BoolPtrOutput)
}

type GlobalClientJwtConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientJwtConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientJwtConfiguration)(nil)).Elem()
}

func (o GlobalClientJwtConfigurationPtrOutput) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return o
}

func (o GlobalClientJwtConfigurationPtrOutput) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return o
}

func (o GlobalClientJwtConfigurationPtrOutput) Elem() GlobalClientJwtConfigurationOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) GlobalClientJwtConfiguration {
		if v != nil {
			return *v
		}
		var ret GlobalClientJwtConfiguration
		return ret
	}).(GlobalClientJwtConfigurationOutput)
}

// Algorithm used to sign JWTs.
func (o GlobalClientJwtConfigurationPtrOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Alg
	}).(pulumi.StringPtrOutput)
}

// Number of seconds during which the JWT will be valid.
func (o GlobalClientJwtConfigurationPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// Permissions (scopes) included in JWTs.
func (o GlobalClientJwtConfigurationPtrOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringMapOutput)
}

// Indicates whether the client secret is Base64-encoded.
func (o GlobalClientJwtConfigurationPtrOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.SecretEncoded
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientMobile struct {
	// Configuration settings for Android native apps.
	Android *GlobalClientMobileAndroid `pulumi:"android"`
	// Configuration settings for i0S native apps.
	Ios *GlobalClientMobileIos `pulumi:"ios"`
}

// GlobalClientMobileInput is an input type that accepts GlobalClientMobileArgs and GlobalClientMobileOutput values.
// You can construct a concrete instance of `GlobalClientMobileInput` via:
//
//	GlobalClientMobileArgs{...}
type GlobalClientMobileInput interface {
	pulumi.Input

	ToGlobalClientMobileOutput() GlobalClientMobileOutput
	ToGlobalClientMobileOutputWithContext(context.Context) GlobalClientMobileOutput
}

type GlobalClientMobileArgs struct {
	// Configuration settings for Android native apps.
	Android GlobalClientMobileAndroidPtrInput `pulumi:"android"`
	// Configuration settings for i0S native apps.
	Ios GlobalClientMobileIosPtrInput `pulumi:"ios"`
}

func (GlobalClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobile)(nil)).Elem()
}

func (i GlobalClientMobileArgs) ToGlobalClientMobileOutput() GlobalClientMobileOutput {
	return i.ToGlobalClientMobileOutputWithContext(context.Background())
}

func (i GlobalClientMobileArgs) ToGlobalClientMobileOutputWithContext(ctx context.Context) GlobalClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileOutput)
}

func (i GlobalClientMobileArgs) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return i.ToGlobalClientMobilePtrOutputWithContext(context.Background())
}

func (i GlobalClientMobileArgs) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileOutput).ToGlobalClientMobilePtrOutputWithContext(ctx)
}

// GlobalClientMobilePtrInput is an input type that accepts GlobalClientMobileArgs, GlobalClientMobilePtr and GlobalClientMobilePtrOutput values.
// You can construct a concrete instance of `GlobalClientMobilePtrInput` via:
//
//	        GlobalClientMobileArgs{...}
//
//	or:
//
//	        nil
type GlobalClientMobilePtrInput interface {
	pulumi.Input

	ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput
	ToGlobalClientMobilePtrOutputWithContext(context.Context) GlobalClientMobilePtrOutput
}

type globalClientMobilePtrType GlobalClientMobileArgs

func GlobalClientMobilePtr(v *GlobalClientMobileArgs) GlobalClientMobilePtrInput {
	return (*globalClientMobilePtrType)(v)
}

func (*globalClientMobilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobile)(nil)).Elem()
}

func (i *globalClientMobilePtrType) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return i.ToGlobalClientMobilePtrOutputWithContext(context.Background())
}

func (i *globalClientMobilePtrType) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobilePtrOutput)
}

type GlobalClientMobileOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobile)(nil)).Elem()
}

func (o GlobalClientMobileOutput) ToGlobalClientMobileOutput() GlobalClientMobileOutput {
	return o
}

func (o GlobalClientMobileOutput) ToGlobalClientMobileOutputWithContext(ctx context.Context) GlobalClientMobileOutput {
	return o
}

func (o GlobalClientMobileOutput) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return o.ToGlobalClientMobilePtrOutputWithContext(context.Background())
}

func (o GlobalClientMobileOutput) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientMobile) *GlobalClientMobile {
		return &v
	}).(GlobalClientMobilePtrOutput)
}

// Configuration settings for Android native apps.
func (o GlobalClientMobileOutput) Android() GlobalClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v GlobalClientMobile) *GlobalClientMobileAndroid { return v.Android }).(GlobalClientMobileAndroidPtrOutput)
}

// Configuration settings for i0S native apps.
func (o GlobalClientMobileOutput) Ios() GlobalClientMobileIosPtrOutput {
	return o.ApplyT(func(v GlobalClientMobile) *GlobalClientMobileIos { return v.Ios }).(GlobalClientMobileIosPtrOutput)
}

type GlobalClientMobilePtrOutput struct{ *pulumi.OutputState }

func (GlobalClientMobilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobile)(nil)).Elem()
}

func (o GlobalClientMobilePtrOutput) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return o
}

func (o GlobalClientMobilePtrOutput) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return o
}

func (o GlobalClientMobilePtrOutput) Elem() GlobalClientMobileOutput {
	return o.ApplyT(func(v *GlobalClientMobile) GlobalClientMobile {
		if v != nil {
			return *v
		}
		var ret GlobalClientMobile
		return ret
	}).(GlobalClientMobileOutput)
}

// Configuration settings for Android native apps.
func (o GlobalClientMobilePtrOutput) Android() GlobalClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobile) *GlobalClientMobileAndroid {
		if v == nil {
			return nil
		}
		return v.Android
	}).(GlobalClientMobileAndroidPtrOutput)
}

// Configuration settings for i0S native apps.
func (o GlobalClientMobilePtrOutput) Ios() GlobalClientMobileIosPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobile) *GlobalClientMobileIos {
		if v == nil {
			return nil
		}
		return v.Ios
	}).(GlobalClientMobileIosPtrOutput)
}

type GlobalClientMobileAndroid struct {
	AppPackageName         *string  `pulumi:"appPackageName"`
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// GlobalClientMobileAndroidInput is an input type that accepts GlobalClientMobileAndroidArgs and GlobalClientMobileAndroidOutput values.
// You can construct a concrete instance of `GlobalClientMobileAndroidInput` via:
//
//	GlobalClientMobileAndroidArgs{...}
type GlobalClientMobileAndroidInput interface {
	pulumi.Input

	ToGlobalClientMobileAndroidOutput() GlobalClientMobileAndroidOutput
	ToGlobalClientMobileAndroidOutputWithContext(context.Context) GlobalClientMobileAndroidOutput
}

type GlobalClientMobileAndroidArgs struct {
	AppPackageName         pulumi.StringPtrInput   `pulumi:"appPackageName"`
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (GlobalClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileAndroid)(nil)).Elem()
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidOutput() GlobalClientMobileAndroidOutput {
	return i.ToGlobalClientMobileAndroidOutputWithContext(context.Background())
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidOutputWithContext(ctx context.Context) GlobalClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileAndroidOutput)
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return i.ToGlobalClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileAndroidOutput).ToGlobalClientMobileAndroidPtrOutputWithContext(ctx)
}

// GlobalClientMobileAndroidPtrInput is an input type that accepts GlobalClientMobileAndroidArgs, GlobalClientMobileAndroidPtr and GlobalClientMobileAndroidPtrOutput values.
// You can construct a concrete instance of `GlobalClientMobileAndroidPtrInput` via:
//
//	        GlobalClientMobileAndroidArgs{...}
//
//	or:
//
//	        nil
type GlobalClientMobileAndroidPtrInput interface {
	pulumi.Input

	ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput
	ToGlobalClientMobileAndroidPtrOutputWithContext(context.Context) GlobalClientMobileAndroidPtrOutput
}

type globalClientMobileAndroidPtrType GlobalClientMobileAndroidArgs

func GlobalClientMobileAndroidPtr(v *GlobalClientMobileAndroidArgs) GlobalClientMobileAndroidPtrInput {
	return (*globalClientMobileAndroidPtrType)(v)
}

func (*globalClientMobileAndroidPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileAndroid)(nil)).Elem()
}

func (i *globalClientMobileAndroidPtrType) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return i.ToGlobalClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i *globalClientMobileAndroidPtrType) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileAndroidPtrOutput)
}

type GlobalClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileAndroid)(nil)).Elem()
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidOutput() GlobalClientMobileAndroidOutput {
	return o
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidOutputWithContext(ctx context.Context) GlobalClientMobileAndroidOutput {
	return o
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return o.ToGlobalClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientMobileAndroid) *GlobalClientMobileAndroid {
		return &v
	}).(GlobalClientMobileAndroidPtrOutput)
}

func (o GlobalClientMobileAndroidOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileAndroid) *string { return v.AppPackageName }).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GlobalClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type GlobalClientMobileAndroidPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileAndroidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileAndroid)(nil)).Elem()
}

func (o GlobalClientMobileAndroidPtrOutput) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return o
}

func (o GlobalClientMobileAndroidPtrOutput) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return o
}

func (o GlobalClientMobileAndroidPtrOutput) Elem() GlobalClientMobileAndroidOutput {
	return o.ApplyT(func(v *GlobalClientMobileAndroid) GlobalClientMobileAndroid {
		if v != nil {
			return *v
		}
		var ret GlobalClientMobileAndroid
		return ret
	}).(GlobalClientMobileAndroidOutput)
}

func (o GlobalClientMobileAndroidPtrOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobileAndroid) *string {
		if v == nil {
			return nil
		}
		return v.AppPackageName
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileAndroidPtrOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GlobalClientMobileAndroid) []string {
		if v == nil {
			return nil
		}
		return v.Sha256CertFingerprints
	}).(pulumi.StringArrayOutput)
}

type GlobalClientMobileIos struct {
	AppBundleIdentifier *string `pulumi:"appBundleIdentifier"`
	TeamId              *string `pulumi:"teamId"`
}

// GlobalClientMobileIosInput is an input type that accepts GlobalClientMobileIosArgs and GlobalClientMobileIosOutput values.
// You can construct a concrete instance of `GlobalClientMobileIosInput` via:
//
//	GlobalClientMobileIosArgs{...}
type GlobalClientMobileIosInput interface {
	pulumi.Input

	ToGlobalClientMobileIosOutput() GlobalClientMobileIosOutput
	ToGlobalClientMobileIosOutputWithContext(context.Context) GlobalClientMobileIosOutput
}

type GlobalClientMobileIosArgs struct {
	AppBundleIdentifier pulumi.StringPtrInput `pulumi:"appBundleIdentifier"`
	TeamId              pulumi.StringPtrInput `pulumi:"teamId"`
}

func (GlobalClientMobileIosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileIos)(nil)).Elem()
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosOutput() GlobalClientMobileIosOutput {
	return i.ToGlobalClientMobileIosOutputWithContext(context.Background())
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosOutputWithContext(ctx context.Context) GlobalClientMobileIosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileIosOutput)
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return i.ToGlobalClientMobileIosPtrOutputWithContext(context.Background())
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileIosOutput).ToGlobalClientMobileIosPtrOutputWithContext(ctx)
}

// GlobalClientMobileIosPtrInput is an input type that accepts GlobalClientMobileIosArgs, GlobalClientMobileIosPtr and GlobalClientMobileIosPtrOutput values.
// You can construct a concrete instance of `GlobalClientMobileIosPtrInput` via:
//
//	        GlobalClientMobileIosArgs{...}
//
//	or:
//
//	        nil
type GlobalClientMobileIosPtrInput interface {
	pulumi.Input

	ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput
	ToGlobalClientMobileIosPtrOutputWithContext(context.Context) GlobalClientMobileIosPtrOutput
}

type globalClientMobileIosPtrType GlobalClientMobileIosArgs

func GlobalClientMobileIosPtr(v *GlobalClientMobileIosArgs) GlobalClientMobileIosPtrInput {
	return (*globalClientMobileIosPtrType)(v)
}

func (*globalClientMobileIosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileIos)(nil)).Elem()
}

func (i *globalClientMobileIosPtrType) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return i.ToGlobalClientMobileIosPtrOutputWithContext(context.Background())
}

func (i *globalClientMobileIosPtrType) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileIosPtrOutput)
}

type GlobalClientMobileIosOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileIosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileIos)(nil)).Elem()
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosOutput() GlobalClientMobileIosOutput {
	return o
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosOutputWithContext(ctx context.Context) GlobalClientMobileIosOutput {
	return o
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return o.ToGlobalClientMobileIosPtrOutputWithContext(context.Background())
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientMobileIos) *GlobalClientMobileIos {
		return &v
	}).(GlobalClientMobileIosPtrOutput)
}

func (o GlobalClientMobileIosOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileIos) *string { return v.AppBundleIdentifier }).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileIosOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileIos) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

type GlobalClientMobileIosPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileIosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileIos)(nil)).Elem()
}

func (o GlobalClientMobileIosPtrOutput) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return o
}

func (o GlobalClientMobileIosPtrOutput) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return o
}

func (o GlobalClientMobileIosPtrOutput) Elem() GlobalClientMobileIosOutput {
	return o.ApplyT(func(v *GlobalClientMobileIos) GlobalClientMobileIos {
		if v != nil {
			return *v
		}
		var ret GlobalClientMobileIos
		return ret
	}).(GlobalClientMobileIosOutput)
}

func (o GlobalClientMobileIosPtrOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.AppBundleIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileIosPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

type GlobalClientNativeSocialLogin struct {
	Apple    *GlobalClientNativeSocialLoginApple    `pulumi:"apple"`
	Facebook *GlobalClientNativeSocialLoginFacebook `pulumi:"facebook"`
}

// GlobalClientNativeSocialLoginInput is an input type that accepts GlobalClientNativeSocialLoginArgs and GlobalClientNativeSocialLoginOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginInput` via:
//
//	GlobalClientNativeSocialLoginArgs{...}
type GlobalClientNativeSocialLoginInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginOutput() GlobalClientNativeSocialLoginOutput
	ToGlobalClientNativeSocialLoginOutputWithContext(context.Context) GlobalClientNativeSocialLoginOutput
}

type GlobalClientNativeSocialLoginArgs struct {
	Apple    GlobalClientNativeSocialLoginApplePtrInput    `pulumi:"apple"`
	Facebook GlobalClientNativeSocialLoginFacebookPtrInput `pulumi:"facebook"`
}

func (GlobalClientNativeSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLogin)(nil)).Elem()
}

func (i GlobalClientNativeSocialLoginArgs) ToGlobalClientNativeSocialLoginOutput() GlobalClientNativeSocialLoginOutput {
	return i.ToGlobalClientNativeSocialLoginOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginArgs) ToGlobalClientNativeSocialLoginOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginOutput)
}

func (i GlobalClientNativeSocialLoginArgs) ToGlobalClientNativeSocialLoginPtrOutput() GlobalClientNativeSocialLoginPtrOutput {
	return i.ToGlobalClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginArgs) ToGlobalClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginOutput).ToGlobalClientNativeSocialLoginPtrOutputWithContext(ctx)
}

// GlobalClientNativeSocialLoginPtrInput is an input type that accepts GlobalClientNativeSocialLoginArgs, GlobalClientNativeSocialLoginPtr and GlobalClientNativeSocialLoginPtrOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginPtrInput` via:
//
//	        GlobalClientNativeSocialLoginArgs{...}
//
//	or:
//
//	        nil
type GlobalClientNativeSocialLoginPtrInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginPtrOutput() GlobalClientNativeSocialLoginPtrOutput
	ToGlobalClientNativeSocialLoginPtrOutputWithContext(context.Context) GlobalClientNativeSocialLoginPtrOutput
}

type globalClientNativeSocialLoginPtrType GlobalClientNativeSocialLoginArgs

func GlobalClientNativeSocialLoginPtr(v *GlobalClientNativeSocialLoginArgs) GlobalClientNativeSocialLoginPtrInput {
	return (*globalClientNativeSocialLoginPtrType)(v)
}

func (*globalClientNativeSocialLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLogin)(nil)).Elem()
}

func (i *globalClientNativeSocialLoginPtrType) ToGlobalClientNativeSocialLoginPtrOutput() GlobalClientNativeSocialLoginPtrOutput {
	return i.ToGlobalClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (i *globalClientNativeSocialLoginPtrType) ToGlobalClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginPtrOutput)
}

type GlobalClientNativeSocialLoginOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLogin)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginOutput) ToGlobalClientNativeSocialLoginOutput() GlobalClientNativeSocialLoginOutput {
	return o
}

func (o GlobalClientNativeSocialLoginOutput) ToGlobalClientNativeSocialLoginOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginOutput {
	return o
}

func (o GlobalClientNativeSocialLoginOutput) ToGlobalClientNativeSocialLoginPtrOutput() GlobalClientNativeSocialLoginPtrOutput {
	return o.ToGlobalClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (o GlobalClientNativeSocialLoginOutput) ToGlobalClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientNativeSocialLogin) *GlobalClientNativeSocialLogin {
		return &v
	}).(GlobalClientNativeSocialLoginPtrOutput)
}

func (o GlobalClientNativeSocialLoginOutput) Apple() GlobalClientNativeSocialLoginApplePtrOutput {
	return o.ApplyT(func(v GlobalClientNativeSocialLogin) *GlobalClientNativeSocialLoginApple { return v.Apple }).(GlobalClientNativeSocialLoginApplePtrOutput)
}

func (o GlobalClientNativeSocialLoginOutput) Facebook() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyT(func(v GlobalClientNativeSocialLogin) *GlobalClientNativeSocialLoginFacebook { return v.Facebook }).(GlobalClientNativeSocialLoginFacebookPtrOutput)
}

type GlobalClientNativeSocialLoginPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLogin)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginPtrOutput) ToGlobalClientNativeSocialLoginPtrOutput() GlobalClientNativeSocialLoginPtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginPtrOutput) ToGlobalClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginPtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginPtrOutput) Elem() GlobalClientNativeSocialLoginOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLogin) GlobalClientNativeSocialLogin {
		if v != nil {
			return *v
		}
		var ret GlobalClientNativeSocialLogin
		return ret
	}).(GlobalClientNativeSocialLoginOutput)
}

func (o GlobalClientNativeSocialLoginPtrOutput) Apple() GlobalClientNativeSocialLoginApplePtrOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLogin) *GlobalClientNativeSocialLoginApple {
		if v == nil {
			return nil
		}
		return v.Apple
	}).(GlobalClientNativeSocialLoginApplePtrOutput)
}

func (o GlobalClientNativeSocialLoginPtrOutput) Facebook() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLogin) *GlobalClientNativeSocialLoginFacebook {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(GlobalClientNativeSocialLoginFacebookPtrOutput)
}

type GlobalClientNativeSocialLoginApple struct {
	Enabled *bool `pulumi:"enabled"`
}

// GlobalClientNativeSocialLoginAppleInput is an input type that accepts GlobalClientNativeSocialLoginAppleArgs and GlobalClientNativeSocialLoginAppleOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginAppleInput` via:
//
//	GlobalClientNativeSocialLoginAppleArgs{...}
type GlobalClientNativeSocialLoginAppleInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginAppleOutput() GlobalClientNativeSocialLoginAppleOutput
	ToGlobalClientNativeSocialLoginAppleOutputWithContext(context.Context) GlobalClientNativeSocialLoginAppleOutput
}

type GlobalClientNativeSocialLoginAppleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (GlobalClientNativeSocialLoginAppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GlobalClientNativeSocialLoginAppleArgs) ToGlobalClientNativeSocialLoginAppleOutput() GlobalClientNativeSocialLoginAppleOutput {
	return i.ToGlobalClientNativeSocialLoginAppleOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginAppleArgs) ToGlobalClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginAppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginAppleOutput)
}

func (i GlobalClientNativeSocialLoginAppleArgs) ToGlobalClientNativeSocialLoginApplePtrOutput() GlobalClientNativeSocialLoginApplePtrOutput {
	return i.ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginAppleArgs) ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginAppleOutput).ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(ctx)
}

// GlobalClientNativeSocialLoginApplePtrInput is an input type that accepts GlobalClientNativeSocialLoginAppleArgs, GlobalClientNativeSocialLoginApplePtr and GlobalClientNativeSocialLoginApplePtrOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginApplePtrInput` via:
//
//	        GlobalClientNativeSocialLoginAppleArgs{...}
//
//	or:
//
//	        nil
type GlobalClientNativeSocialLoginApplePtrInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginApplePtrOutput() GlobalClientNativeSocialLoginApplePtrOutput
	ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(context.Context) GlobalClientNativeSocialLoginApplePtrOutput
}

type globalClientNativeSocialLoginApplePtrType GlobalClientNativeSocialLoginAppleArgs

func GlobalClientNativeSocialLoginApplePtr(v *GlobalClientNativeSocialLoginAppleArgs) GlobalClientNativeSocialLoginApplePtrInput {
	return (*globalClientNativeSocialLoginApplePtrType)(v)
}

func (*globalClientNativeSocialLoginApplePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (i *globalClientNativeSocialLoginApplePtrType) ToGlobalClientNativeSocialLoginApplePtrOutput() GlobalClientNativeSocialLoginApplePtrOutput {
	return i.ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (i *globalClientNativeSocialLoginApplePtrType) ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginApplePtrOutput)
}

type GlobalClientNativeSocialLoginAppleOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginAppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginAppleOutput) ToGlobalClientNativeSocialLoginAppleOutput() GlobalClientNativeSocialLoginAppleOutput {
	return o
}

func (o GlobalClientNativeSocialLoginAppleOutput) ToGlobalClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginAppleOutput {
	return o
}

func (o GlobalClientNativeSocialLoginAppleOutput) ToGlobalClientNativeSocialLoginApplePtrOutput() GlobalClientNativeSocialLoginApplePtrOutput {
	return o.ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (o GlobalClientNativeSocialLoginAppleOutput) ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginApplePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientNativeSocialLoginApple) *GlobalClientNativeSocialLoginApple {
		return &v
	}).(GlobalClientNativeSocialLoginApplePtrOutput)
}

func (o GlobalClientNativeSocialLoginAppleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientNativeSocialLoginApple) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type GlobalClientNativeSocialLoginApplePtrOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginApplePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginApplePtrOutput) ToGlobalClientNativeSocialLoginApplePtrOutput() GlobalClientNativeSocialLoginApplePtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginApplePtrOutput) ToGlobalClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginApplePtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginApplePtrOutput) Elem() GlobalClientNativeSocialLoginAppleOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLoginApple) GlobalClientNativeSocialLoginApple {
		if v != nil {
			return *v
		}
		var ret GlobalClientNativeSocialLoginApple
		return ret
	}).(GlobalClientNativeSocialLoginAppleOutput)
}

func (o GlobalClientNativeSocialLoginApplePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLoginApple) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientNativeSocialLoginFacebook struct {
	Enabled *bool `pulumi:"enabled"`
}

// GlobalClientNativeSocialLoginFacebookInput is an input type that accepts GlobalClientNativeSocialLoginFacebookArgs and GlobalClientNativeSocialLoginFacebookOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginFacebookInput` via:
//
//	GlobalClientNativeSocialLoginFacebookArgs{...}
type GlobalClientNativeSocialLoginFacebookInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginFacebookOutput() GlobalClientNativeSocialLoginFacebookOutput
	ToGlobalClientNativeSocialLoginFacebookOutputWithContext(context.Context) GlobalClientNativeSocialLoginFacebookOutput
}

type GlobalClientNativeSocialLoginFacebookArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (GlobalClientNativeSocialLoginFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GlobalClientNativeSocialLoginFacebookArgs) ToGlobalClientNativeSocialLoginFacebookOutput() GlobalClientNativeSocialLoginFacebookOutput {
	return i.ToGlobalClientNativeSocialLoginFacebookOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginFacebookArgs) ToGlobalClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginFacebookOutput)
}

func (i GlobalClientNativeSocialLoginFacebookArgs) ToGlobalClientNativeSocialLoginFacebookPtrOutput() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return i.ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (i GlobalClientNativeSocialLoginFacebookArgs) ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginFacebookOutput).ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(ctx)
}

// GlobalClientNativeSocialLoginFacebookPtrInput is an input type that accepts GlobalClientNativeSocialLoginFacebookArgs, GlobalClientNativeSocialLoginFacebookPtr and GlobalClientNativeSocialLoginFacebookPtrOutput values.
// You can construct a concrete instance of `GlobalClientNativeSocialLoginFacebookPtrInput` via:
//
//	        GlobalClientNativeSocialLoginFacebookArgs{...}
//
//	or:
//
//	        nil
type GlobalClientNativeSocialLoginFacebookPtrInput interface {
	pulumi.Input

	ToGlobalClientNativeSocialLoginFacebookPtrOutput() GlobalClientNativeSocialLoginFacebookPtrOutput
	ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(context.Context) GlobalClientNativeSocialLoginFacebookPtrOutput
}

type globalClientNativeSocialLoginFacebookPtrType GlobalClientNativeSocialLoginFacebookArgs

func GlobalClientNativeSocialLoginFacebookPtr(v *GlobalClientNativeSocialLoginFacebookArgs) GlobalClientNativeSocialLoginFacebookPtrInput {
	return (*globalClientNativeSocialLoginFacebookPtrType)(v)
}

func (*globalClientNativeSocialLoginFacebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i *globalClientNativeSocialLoginFacebookPtrType) ToGlobalClientNativeSocialLoginFacebookPtrOutput() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return i.ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (i *globalClientNativeSocialLoginFacebookPtrType) ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientNativeSocialLoginFacebookPtrOutput)
}

type GlobalClientNativeSocialLoginFacebookOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginFacebookOutput) ToGlobalClientNativeSocialLoginFacebookOutput() GlobalClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GlobalClientNativeSocialLoginFacebookOutput) ToGlobalClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GlobalClientNativeSocialLoginFacebookOutput) ToGlobalClientNativeSocialLoginFacebookPtrOutput() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o.ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (o GlobalClientNativeSocialLoginFacebookOutput) ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientNativeSocialLoginFacebook) *GlobalClientNativeSocialLoginFacebook {
		return &v
	}).(GlobalClientNativeSocialLoginFacebookPtrOutput)
}

func (o GlobalClientNativeSocialLoginFacebookOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientNativeSocialLoginFacebook) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type GlobalClientNativeSocialLoginFacebookPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientNativeSocialLoginFacebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GlobalClientNativeSocialLoginFacebookPtrOutput) ToGlobalClientNativeSocialLoginFacebookPtrOutput() GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginFacebookPtrOutput) ToGlobalClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) GlobalClientNativeSocialLoginFacebookPtrOutput {
	return o
}

func (o GlobalClientNativeSocialLoginFacebookPtrOutput) Elem() GlobalClientNativeSocialLoginFacebookOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLoginFacebook) GlobalClientNativeSocialLoginFacebook {
		if v != nil {
			return *v
		}
		var ret GlobalClientNativeSocialLoginFacebook
		return ret
	}).(GlobalClientNativeSocialLoginFacebookOutput)
}

func (o GlobalClientNativeSocialLoginFacebookPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientNativeSocialLoginFacebook) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientRefreshToken struct {
	// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
	ExpirationType string `pulumi:"expirationType"`
	// The time in seconds after which inactive refresh tokens will expire.
	IdleTokenLifetime *int `pulumi:"idleTokenLifetime"`
	// Whether inactive refresh tokens should remain valid indefinitely.
	InfiniteIdleTokenLifetime *bool `pulumi:"infiniteIdleTokenLifetime"`
	// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
	InfiniteTokenLifetime *bool `pulumi:"infiniteTokenLifetime"`
	// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
	Leeway *int `pulumi:"leeway"`
	// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
	RotationType string `pulumi:"rotationType"`
	// The absolute lifetime of a refresh token in seconds.
	TokenLifetime *int `pulumi:"tokenLifetime"`
}

// GlobalClientRefreshTokenInput is an input type that accepts GlobalClientRefreshTokenArgs and GlobalClientRefreshTokenOutput values.
// You can construct a concrete instance of `GlobalClientRefreshTokenInput` via:
//
//	GlobalClientRefreshTokenArgs{...}
type GlobalClientRefreshTokenInput interface {
	pulumi.Input

	ToGlobalClientRefreshTokenOutput() GlobalClientRefreshTokenOutput
	ToGlobalClientRefreshTokenOutputWithContext(context.Context) GlobalClientRefreshTokenOutput
}

type GlobalClientRefreshTokenArgs struct {
	// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
	ExpirationType pulumi.StringInput `pulumi:"expirationType"`
	// The time in seconds after which inactive refresh tokens will expire.
	IdleTokenLifetime pulumi.IntPtrInput `pulumi:"idleTokenLifetime"`
	// Whether inactive refresh tokens should remain valid indefinitely.
	InfiniteIdleTokenLifetime pulumi.BoolPtrInput `pulumi:"infiniteIdleTokenLifetime"`
	// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
	InfiniteTokenLifetime pulumi.BoolPtrInput `pulumi:"infiniteTokenLifetime"`
	// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
	Leeway pulumi.IntPtrInput `pulumi:"leeway"`
	// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
	RotationType pulumi.StringInput `pulumi:"rotationType"`
	// The absolute lifetime of a refresh token in seconds.
	TokenLifetime pulumi.IntPtrInput `pulumi:"tokenLifetime"`
}

func (GlobalClientRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientRefreshToken)(nil)).Elem()
}

func (i GlobalClientRefreshTokenArgs) ToGlobalClientRefreshTokenOutput() GlobalClientRefreshTokenOutput {
	return i.ToGlobalClientRefreshTokenOutputWithContext(context.Background())
}

func (i GlobalClientRefreshTokenArgs) ToGlobalClientRefreshTokenOutputWithContext(ctx context.Context) GlobalClientRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientRefreshTokenOutput)
}

func (i GlobalClientRefreshTokenArgs) ToGlobalClientRefreshTokenPtrOutput() GlobalClientRefreshTokenPtrOutput {
	return i.ToGlobalClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (i GlobalClientRefreshTokenArgs) ToGlobalClientRefreshTokenPtrOutputWithContext(ctx context.Context) GlobalClientRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientRefreshTokenOutput).ToGlobalClientRefreshTokenPtrOutputWithContext(ctx)
}

// GlobalClientRefreshTokenPtrInput is an input type that accepts GlobalClientRefreshTokenArgs, GlobalClientRefreshTokenPtr and GlobalClientRefreshTokenPtrOutput values.
// You can construct a concrete instance of `GlobalClientRefreshTokenPtrInput` via:
//
//	        GlobalClientRefreshTokenArgs{...}
//
//	or:
//
//	        nil
type GlobalClientRefreshTokenPtrInput interface {
	pulumi.Input

	ToGlobalClientRefreshTokenPtrOutput() GlobalClientRefreshTokenPtrOutput
	ToGlobalClientRefreshTokenPtrOutputWithContext(context.Context) GlobalClientRefreshTokenPtrOutput
}

type globalClientRefreshTokenPtrType GlobalClientRefreshTokenArgs

func GlobalClientRefreshTokenPtr(v *GlobalClientRefreshTokenArgs) GlobalClientRefreshTokenPtrInput {
	return (*globalClientRefreshTokenPtrType)(v)
}

func (*globalClientRefreshTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientRefreshToken)(nil)).Elem()
}

func (i *globalClientRefreshTokenPtrType) ToGlobalClientRefreshTokenPtrOutput() GlobalClientRefreshTokenPtrOutput {
	return i.ToGlobalClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (i *globalClientRefreshTokenPtrType) ToGlobalClientRefreshTokenPtrOutputWithContext(ctx context.Context) GlobalClientRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientRefreshTokenPtrOutput)
}

type GlobalClientRefreshTokenOutput struct{ *pulumi.OutputState }

func (GlobalClientRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientRefreshToken)(nil)).Elem()
}

func (o GlobalClientRefreshTokenOutput) ToGlobalClientRefreshTokenOutput() GlobalClientRefreshTokenOutput {
	return o
}

func (o GlobalClientRefreshTokenOutput) ToGlobalClientRefreshTokenOutputWithContext(ctx context.Context) GlobalClientRefreshTokenOutput {
	return o
}

func (o GlobalClientRefreshTokenOutput) ToGlobalClientRefreshTokenPtrOutput() GlobalClientRefreshTokenPtrOutput {
	return o.ToGlobalClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (o GlobalClientRefreshTokenOutput) ToGlobalClientRefreshTokenPtrOutputWithContext(ctx context.Context) GlobalClientRefreshTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GlobalClientRefreshToken) *GlobalClientRefreshToken {
		return &v
	}).(GlobalClientRefreshTokenPtrOutput)
}

// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
func (o GlobalClientRefreshTokenOutput) ExpirationType() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) string { return v.ExpirationType }).(pulumi.StringOutput)
}

// The time in seconds after which inactive refresh tokens will expire.
func (o GlobalClientRefreshTokenOutput) IdleTokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) *int { return v.IdleTokenLifetime }).(pulumi.IntPtrOutput)
}

// Whether inactive refresh tokens should remain valid indefinitely.
func (o GlobalClientRefreshTokenOutput) InfiniteIdleTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) *bool { return v.InfiniteIdleTokenLifetime }).(pulumi.BoolPtrOutput)
}

// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
func (o GlobalClientRefreshTokenOutput) InfiniteTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) *bool { return v.InfiniteTokenLifetime }).(pulumi.BoolPtrOutput)
}

// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
func (o GlobalClientRefreshTokenOutput) Leeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) *int { return v.Leeway }).(pulumi.IntPtrOutput)
}

// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
func (o GlobalClientRefreshTokenOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) string { return v.RotationType }).(pulumi.StringOutput)
}

// The absolute lifetime of a refresh token in seconds.
func (o GlobalClientRefreshTokenOutput) TokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientRefreshToken) *int { return v.TokenLifetime }).(pulumi.IntPtrOutput)
}

type GlobalClientRefreshTokenPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientRefreshTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientRefreshToken)(nil)).Elem()
}

func (o GlobalClientRefreshTokenPtrOutput) ToGlobalClientRefreshTokenPtrOutput() GlobalClientRefreshTokenPtrOutput {
	return o
}

func (o GlobalClientRefreshTokenPtrOutput) ToGlobalClientRefreshTokenPtrOutputWithContext(ctx context.Context) GlobalClientRefreshTokenPtrOutput {
	return o
}

func (o GlobalClientRefreshTokenPtrOutput) Elem() GlobalClientRefreshTokenOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) GlobalClientRefreshToken {
		if v != nil {
			return *v
		}
		var ret GlobalClientRefreshToken
		return ret
	}).(GlobalClientRefreshTokenOutput)
}

// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
func (o GlobalClientRefreshTokenPtrOutput) ExpirationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationType
	}).(pulumi.StringPtrOutput)
}

// The time in seconds after which inactive refresh tokens will expire.
func (o GlobalClientRefreshTokenPtrOutput) IdleTokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.IdleTokenLifetime
	}).(pulumi.IntPtrOutput)
}

// Whether inactive refresh tokens should remain valid indefinitely.
func (o GlobalClientRefreshTokenPtrOutput) InfiniteIdleTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *bool {
		if v == nil {
			return nil
		}
		return v.InfiniteIdleTokenLifetime
	}).(pulumi.BoolPtrOutput)
}

// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
func (o GlobalClientRefreshTokenPtrOutput) InfiniteTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *bool {
		if v == nil {
			return nil
		}
		return v.InfiniteTokenLifetime
	}).(pulumi.BoolPtrOutput)
}

// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
func (o GlobalClientRefreshTokenPtrOutput) Leeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.Leeway
	}).(pulumi.IntPtrOutput)
}

// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
func (o GlobalClientRefreshTokenPtrOutput) RotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.RotationType
	}).(pulumi.StringPtrOutput)
}

// The absolute lifetime of a refresh token in seconds.
func (o GlobalClientRefreshTokenPtrOutput) TokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.TokenLifetime
	}).(pulumi.IntPtrOutput)
}

type GuardianDuo struct {
	// Indicates whether Duo MFA is enabled.
	Enabled bool `pulumi:"enabled"`
	// Duo API Hostname, see the Duo documentation for more details on Duo setup.
	Hostname *string `pulumi:"hostname"`
	// Duo client ID, see the Duo documentation for more details on Duo setup.
	IntegrationKey *string `pulumi:"integrationKey"`
	// Duo client secret, see the Duo documentation for more details on Duo setup.
	SecretKey *string `pulumi:"secretKey"`
}

// GuardianDuoInput is an input type that accepts GuardianDuoArgs and GuardianDuoOutput values.
// You can construct a concrete instance of `GuardianDuoInput` via:
//
//	GuardianDuoArgs{...}
type GuardianDuoInput interface {
	pulumi.Input

	ToGuardianDuoOutput() GuardianDuoOutput
	ToGuardianDuoOutputWithContext(context.Context) GuardianDuoOutput
}

type GuardianDuoArgs struct {
	// Indicates whether Duo MFA is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Duo API Hostname, see the Duo documentation for more details on Duo setup.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// Duo client ID, see the Duo documentation for more details on Duo setup.
	IntegrationKey pulumi.StringPtrInput `pulumi:"integrationKey"`
	// Duo client secret, see the Duo documentation for more details on Duo setup.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (GuardianDuoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianDuo)(nil)).Elem()
}

func (i GuardianDuoArgs) ToGuardianDuoOutput() GuardianDuoOutput {
	return i.ToGuardianDuoOutputWithContext(context.Background())
}

func (i GuardianDuoArgs) ToGuardianDuoOutputWithContext(ctx context.Context) GuardianDuoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianDuoOutput)
}

func (i GuardianDuoArgs) ToGuardianDuoPtrOutput() GuardianDuoPtrOutput {
	return i.ToGuardianDuoPtrOutputWithContext(context.Background())
}

func (i GuardianDuoArgs) ToGuardianDuoPtrOutputWithContext(ctx context.Context) GuardianDuoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianDuoOutput).ToGuardianDuoPtrOutputWithContext(ctx)
}

// GuardianDuoPtrInput is an input type that accepts GuardianDuoArgs, GuardianDuoPtr and GuardianDuoPtrOutput values.
// You can construct a concrete instance of `GuardianDuoPtrInput` via:
//
//	        GuardianDuoArgs{...}
//
//	or:
//
//	        nil
type GuardianDuoPtrInput interface {
	pulumi.Input

	ToGuardianDuoPtrOutput() GuardianDuoPtrOutput
	ToGuardianDuoPtrOutputWithContext(context.Context) GuardianDuoPtrOutput
}

type guardianDuoPtrType GuardianDuoArgs

func GuardianDuoPtr(v *GuardianDuoArgs) GuardianDuoPtrInput {
	return (*guardianDuoPtrType)(v)
}

func (*guardianDuoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianDuo)(nil)).Elem()
}

func (i *guardianDuoPtrType) ToGuardianDuoPtrOutput() GuardianDuoPtrOutput {
	return i.ToGuardianDuoPtrOutputWithContext(context.Background())
}

func (i *guardianDuoPtrType) ToGuardianDuoPtrOutputWithContext(ctx context.Context) GuardianDuoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianDuoPtrOutput)
}

type GuardianDuoOutput struct{ *pulumi.OutputState }

func (GuardianDuoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianDuo)(nil)).Elem()
}

func (o GuardianDuoOutput) ToGuardianDuoOutput() GuardianDuoOutput {
	return o
}

func (o GuardianDuoOutput) ToGuardianDuoOutputWithContext(ctx context.Context) GuardianDuoOutput {
	return o
}

func (o GuardianDuoOutput) ToGuardianDuoPtrOutput() GuardianDuoPtrOutput {
	return o.ToGuardianDuoPtrOutputWithContext(context.Background())
}

func (o GuardianDuoOutput) ToGuardianDuoPtrOutputWithContext(ctx context.Context) GuardianDuoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianDuo) *GuardianDuo {
		return &v
	}).(GuardianDuoPtrOutput)
}

// Indicates whether Duo MFA is enabled.
func (o GuardianDuoOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianDuo) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Duo API Hostname, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianDuo) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// Duo client ID, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoOutput) IntegrationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianDuo) *string { return v.IntegrationKey }).(pulumi.StringPtrOutput)
}

// Duo client secret, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianDuo) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type GuardianDuoPtrOutput struct{ *pulumi.OutputState }

func (GuardianDuoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianDuo)(nil)).Elem()
}

func (o GuardianDuoPtrOutput) ToGuardianDuoPtrOutput() GuardianDuoPtrOutput {
	return o
}

func (o GuardianDuoPtrOutput) ToGuardianDuoPtrOutputWithContext(ctx context.Context) GuardianDuoPtrOutput {
	return o
}

func (o GuardianDuoPtrOutput) Elem() GuardianDuoOutput {
	return o.ApplyT(func(v *GuardianDuo) GuardianDuo {
		if v != nil {
			return *v
		}
		var ret GuardianDuo
		return ret
	}).(GuardianDuoOutput)
}

// Indicates whether Duo MFA is enabled.
func (o GuardianDuoPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianDuo) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Duo API Hostname, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianDuo) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// Duo client ID, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoPtrOutput) IntegrationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianDuo) *string {
		if v == nil {
			return nil
		}
		return v.IntegrationKey
	}).(pulumi.StringPtrOutput)
}

// Duo client secret, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianDuo) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type GuardianPhone struct {
	// Indicates whether Phone MFA is enabled.
	Enabled bool `pulumi:"enabled"`
	// Message types to use, array of `sms` and/or `voice`. Adding both to the array should enable the user to choose.
	MessageTypes []string `pulumi:"messageTypes"`
	// Options for the various providers.
	Options *GuardianPhoneOptions `pulumi:"options"`
	// Provider to use, one of `auth0`, `twilio` or `phone-message-hook`. Selecting `phone-message-hook` will require a Phone Message Action to be created before. [Learn how](https://auth0.com/docs/customize/actions/flows-and-triggers/send-phone-message-flow).
	Provider *string `pulumi:"provider"`
}

// GuardianPhoneInput is an input type that accepts GuardianPhoneArgs and GuardianPhoneOutput values.
// You can construct a concrete instance of `GuardianPhoneInput` via:
//
//	GuardianPhoneArgs{...}
type GuardianPhoneInput interface {
	pulumi.Input

	ToGuardianPhoneOutput() GuardianPhoneOutput
	ToGuardianPhoneOutputWithContext(context.Context) GuardianPhoneOutput
}

type GuardianPhoneArgs struct {
	// Indicates whether Phone MFA is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Message types to use, array of `sms` and/or `voice`. Adding both to the array should enable the user to choose.
	MessageTypes pulumi.StringArrayInput `pulumi:"messageTypes"`
	// Options for the various providers.
	Options GuardianPhoneOptionsPtrInput `pulumi:"options"`
	// Provider to use, one of `auth0`, `twilio` or `phone-message-hook`. Selecting `phone-message-hook` will require a Phone Message Action to be created before. [Learn how](https://auth0.com/docs/customize/actions/flows-and-triggers/send-phone-message-flow).
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (GuardianPhoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhone)(nil)).Elem()
}

func (i GuardianPhoneArgs) ToGuardianPhoneOutput() GuardianPhoneOutput {
	return i.ToGuardianPhoneOutputWithContext(context.Background())
}

func (i GuardianPhoneArgs) ToGuardianPhoneOutputWithContext(ctx context.Context) GuardianPhoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOutput)
}

func (i GuardianPhoneArgs) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return i.ToGuardianPhonePtrOutputWithContext(context.Background())
}

func (i GuardianPhoneArgs) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOutput).ToGuardianPhonePtrOutputWithContext(ctx)
}

// GuardianPhonePtrInput is an input type that accepts GuardianPhoneArgs, GuardianPhonePtr and GuardianPhonePtrOutput values.
// You can construct a concrete instance of `GuardianPhonePtrInput` via:
//
//	        GuardianPhoneArgs{...}
//
//	or:
//
//	        nil
type GuardianPhonePtrInput interface {
	pulumi.Input

	ToGuardianPhonePtrOutput() GuardianPhonePtrOutput
	ToGuardianPhonePtrOutputWithContext(context.Context) GuardianPhonePtrOutput
}

type guardianPhonePtrType GuardianPhoneArgs

func GuardianPhonePtr(v *GuardianPhoneArgs) GuardianPhonePtrInput {
	return (*guardianPhonePtrType)(v)
}

func (*guardianPhonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhone)(nil)).Elem()
}

func (i *guardianPhonePtrType) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return i.ToGuardianPhonePtrOutputWithContext(context.Background())
}

func (i *guardianPhonePtrType) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhonePtrOutput)
}

type GuardianPhoneOutput struct{ *pulumi.OutputState }

func (GuardianPhoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhone)(nil)).Elem()
}

func (o GuardianPhoneOutput) ToGuardianPhoneOutput() GuardianPhoneOutput {
	return o
}

func (o GuardianPhoneOutput) ToGuardianPhoneOutputWithContext(ctx context.Context) GuardianPhoneOutput {
	return o
}

func (o GuardianPhoneOutput) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return o.ToGuardianPhonePtrOutputWithContext(context.Background())
}

func (o GuardianPhoneOutput) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPhone) *GuardianPhone {
		return &v
	}).(GuardianPhonePtrOutput)
}

// Indicates whether Phone MFA is enabled.
func (o GuardianPhoneOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianPhone) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Message types to use, array of `sms` and/or `voice`. Adding both to the array should enable the user to choose.
func (o GuardianPhoneOutput) MessageTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuardianPhone) []string { return v.MessageTypes }).(pulumi.StringArrayOutput)
}

// Options for the various providers.
func (o GuardianPhoneOutput) Options() GuardianPhoneOptionsPtrOutput {
	return o.ApplyT(func(v GuardianPhone) *GuardianPhoneOptions { return v.Options }).(GuardianPhoneOptionsPtrOutput)
}

// Provider to use, one of `auth0`, `twilio` or `phone-message-hook`. Selecting `phone-message-hook` will require a Phone Message Action to be created before. [Learn how](https://auth0.com/docs/customize/actions/flows-and-triggers/send-phone-message-flow).
func (o GuardianPhoneOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhone) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type GuardianPhonePtrOutput struct{ *pulumi.OutputState }

func (GuardianPhonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhone)(nil)).Elem()
}

func (o GuardianPhonePtrOutput) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return o
}

func (o GuardianPhonePtrOutput) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return o
}

func (o GuardianPhonePtrOutput) Elem() GuardianPhoneOutput {
	return o.ApplyT(func(v *GuardianPhone) GuardianPhone {
		if v != nil {
			return *v
		}
		var ret GuardianPhone
		return ret
	}).(GuardianPhoneOutput)
}

// Indicates whether Phone MFA is enabled.
func (o GuardianPhonePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianPhone) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Message types to use, array of `sms` and/or `voice`. Adding both to the array should enable the user to choose.
func (o GuardianPhonePtrOutput) MessageTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuardianPhone) []string {
		if v == nil {
			return nil
		}
		return v.MessageTypes
	}).(pulumi.StringArrayOutput)
}

// Options for the various providers.
func (o GuardianPhonePtrOutput) Options() GuardianPhoneOptionsPtrOutput {
	return o.ApplyT(func(v *GuardianPhone) *GuardianPhoneOptions {
		if v == nil {
			return nil
		}
		return v.Options
	}).(GuardianPhoneOptionsPtrOutput)
}

// Provider to use, one of `auth0`, `twilio` or `phone-message-hook`. Selecting `phone-message-hook` will require a Phone Message Action to be created before. [Learn how](https://auth0.com/docs/customize/actions/flows-and-triggers/send-phone-message-flow).
func (o GuardianPhonePtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhone) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

type GuardianPhoneOptions struct {
	AuthToken           *string `pulumi:"authToken"`
	EnrollmentMessage   *string `pulumi:"enrollmentMessage"`
	From                *string `pulumi:"from"`
	MessagingServiceSid *string `pulumi:"messagingServiceSid"`
	Sid                 *string `pulumi:"sid"`
	VerificationMessage *string `pulumi:"verificationMessage"`
}

// GuardianPhoneOptionsInput is an input type that accepts GuardianPhoneOptionsArgs and GuardianPhoneOptionsOutput values.
// You can construct a concrete instance of `GuardianPhoneOptionsInput` via:
//
//	GuardianPhoneOptionsArgs{...}
type GuardianPhoneOptionsInput interface {
	pulumi.Input

	ToGuardianPhoneOptionsOutput() GuardianPhoneOptionsOutput
	ToGuardianPhoneOptionsOutputWithContext(context.Context) GuardianPhoneOptionsOutput
}

type GuardianPhoneOptionsArgs struct {
	AuthToken           pulumi.StringPtrInput `pulumi:"authToken"`
	EnrollmentMessage   pulumi.StringPtrInput `pulumi:"enrollmentMessage"`
	From                pulumi.StringPtrInput `pulumi:"from"`
	MessagingServiceSid pulumi.StringPtrInput `pulumi:"messagingServiceSid"`
	Sid                 pulumi.StringPtrInput `pulumi:"sid"`
	VerificationMessage pulumi.StringPtrInput `pulumi:"verificationMessage"`
}

func (GuardianPhoneOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhoneOptions)(nil)).Elem()
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsOutput() GuardianPhoneOptionsOutput {
	return i.ToGuardianPhoneOptionsOutputWithContext(context.Background())
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsOutputWithContext(ctx context.Context) GuardianPhoneOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOptionsOutput)
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return i.ToGuardianPhoneOptionsPtrOutputWithContext(context.Background())
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOptionsOutput).ToGuardianPhoneOptionsPtrOutputWithContext(ctx)
}

// GuardianPhoneOptionsPtrInput is an input type that accepts GuardianPhoneOptionsArgs, GuardianPhoneOptionsPtr and GuardianPhoneOptionsPtrOutput values.
// You can construct a concrete instance of `GuardianPhoneOptionsPtrInput` via:
//
//	        GuardianPhoneOptionsArgs{...}
//
//	or:
//
//	        nil
type GuardianPhoneOptionsPtrInput interface {
	pulumi.Input

	ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput
	ToGuardianPhoneOptionsPtrOutputWithContext(context.Context) GuardianPhoneOptionsPtrOutput
}

type guardianPhoneOptionsPtrType GuardianPhoneOptionsArgs

func GuardianPhoneOptionsPtr(v *GuardianPhoneOptionsArgs) GuardianPhoneOptionsPtrInput {
	return (*guardianPhoneOptionsPtrType)(v)
}

func (*guardianPhoneOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhoneOptions)(nil)).Elem()
}

func (i *guardianPhoneOptionsPtrType) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return i.ToGuardianPhoneOptionsPtrOutputWithContext(context.Background())
}

func (i *guardianPhoneOptionsPtrType) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOptionsPtrOutput)
}

type GuardianPhoneOptionsOutput struct{ *pulumi.OutputState }

func (GuardianPhoneOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhoneOptions)(nil)).Elem()
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsOutput() GuardianPhoneOptionsOutput {
	return o
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsOutputWithContext(ctx context.Context) GuardianPhoneOptionsOutput {
	return o
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return o.ToGuardianPhoneOptionsPtrOutputWithContext(context.Background())
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPhoneOptions) *GuardianPhoneOptions {
		return &v
	}).(GuardianPhoneOptionsPtrOutput)
}

func (o GuardianPhoneOptionsOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.AuthToken }).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsOutput) EnrollmentMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.EnrollmentMessage }).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.MessagingServiceSid }).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.Sid }).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsOutput) VerificationMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.VerificationMessage }).(pulumi.StringPtrOutput)
}

type GuardianPhoneOptionsPtrOutput struct{ *pulumi.OutputState }

func (GuardianPhoneOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhoneOptions)(nil)).Elem()
}

func (o GuardianPhoneOptionsPtrOutput) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return o
}

func (o GuardianPhoneOptionsPtrOutput) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return o
}

func (o GuardianPhoneOptionsPtrOutput) Elem() GuardianPhoneOptionsOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) GuardianPhoneOptions {
		if v != nil {
			return *v
		}
		var ret GuardianPhoneOptions
		return ret
	}).(GuardianPhoneOptionsOutput)
}

func (o GuardianPhoneOptionsPtrOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.AuthToken
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsPtrOutput) EnrollmentMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.EnrollmentMessage
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsPtrOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.MessagingServiceSid
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsPtrOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.Sid
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsPtrOutput) VerificationMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.VerificationMessage
	}).(pulumi.StringPtrOutput)
}

type GuardianPush struct {
	// Configuration for Amazon SNS.
	AmazonSns *GuardianPushAmazonSns `pulumi:"amazonSns"`
	// Configuration for the Guardian Custom App.
	CustomApp *GuardianPushCustomApp `pulumi:"customApp"`
	// Indicates whether Push MFA is enabled.
	Enabled bool `pulumi:"enabled"`
	// Provider to use, one of `guardian`, `sns`.
	Provider *string `pulumi:"provider"`
}

// GuardianPushInput is an input type that accepts GuardianPushArgs and GuardianPushOutput values.
// You can construct a concrete instance of `GuardianPushInput` via:
//
//	GuardianPushArgs{...}
type GuardianPushInput interface {
	pulumi.Input

	ToGuardianPushOutput() GuardianPushOutput
	ToGuardianPushOutputWithContext(context.Context) GuardianPushOutput
}

type GuardianPushArgs struct {
	// Configuration for Amazon SNS.
	AmazonSns GuardianPushAmazonSnsPtrInput `pulumi:"amazonSns"`
	// Configuration for the Guardian Custom App.
	CustomApp GuardianPushCustomAppPtrInput `pulumi:"customApp"`
	// Indicates whether Push MFA is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Provider to use, one of `guardian`, `sns`.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (GuardianPushArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPush)(nil)).Elem()
}

func (i GuardianPushArgs) ToGuardianPushOutput() GuardianPushOutput {
	return i.ToGuardianPushOutputWithContext(context.Background())
}

func (i GuardianPushArgs) ToGuardianPushOutputWithContext(ctx context.Context) GuardianPushOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushOutput)
}

func (i GuardianPushArgs) ToGuardianPushPtrOutput() GuardianPushPtrOutput {
	return i.ToGuardianPushPtrOutputWithContext(context.Background())
}

func (i GuardianPushArgs) ToGuardianPushPtrOutputWithContext(ctx context.Context) GuardianPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushOutput).ToGuardianPushPtrOutputWithContext(ctx)
}

// GuardianPushPtrInput is an input type that accepts GuardianPushArgs, GuardianPushPtr and GuardianPushPtrOutput values.
// You can construct a concrete instance of `GuardianPushPtrInput` via:
//
//	        GuardianPushArgs{...}
//
//	or:
//
//	        nil
type GuardianPushPtrInput interface {
	pulumi.Input

	ToGuardianPushPtrOutput() GuardianPushPtrOutput
	ToGuardianPushPtrOutputWithContext(context.Context) GuardianPushPtrOutput
}

type guardianPushPtrType GuardianPushArgs

func GuardianPushPtr(v *GuardianPushArgs) GuardianPushPtrInput {
	return (*guardianPushPtrType)(v)
}

func (*guardianPushPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPush)(nil)).Elem()
}

func (i *guardianPushPtrType) ToGuardianPushPtrOutput() GuardianPushPtrOutput {
	return i.ToGuardianPushPtrOutputWithContext(context.Background())
}

func (i *guardianPushPtrType) ToGuardianPushPtrOutputWithContext(ctx context.Context) GuardianPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushPtrOutput)
}

type GuardianPushOutput struct{ *pulumi.OutputState }

func (GuardianPushOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPush)(nil)).Elem()
}

func (o GuardianPushOutput) ToGuardianPushOutput() GuardianPushOutput {
	return o
}

func (o GuardianPushOutput) ToGuardianPushOutputWithContext(ctx context.Context) GuardianPushOutput {
	return o
}

func (o GuardianPushOutput) ToGuardianPushPtrOutput() GuardianPushPtrOutput {
	return o.ToGuardianPushPtrOutputWithContext(context.Background())
}

func (o GuardianPushOutput) ToGuardianPushPtrOutputWithContext(ctx context.Context) GuardianPushPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPush) *GuardianPush {
		return &v
	}).(GuardianPushPtrOutput)
}

// Configuration for Amazon SNS.
func (o GuardianPushOutput) AmazonSns() GuardianPushAmazonSnsPtrOutput {
	return o.ApplyT(func(v GuardianPush) *GuardianPushAmazonSns { return v.AmazonSns }).(GuardianPushAmazonSnsPtrOutput)
}

// Configuration for the Guardian Custom App.
func (o GuardianPushOutput) CustomApp() GuardianPushCustomAppPtrOutput {
	return o.ApplyT(func(v GuardianPush) *GuardianPushCustomApp { return v.CustomApp }).(GuardianPushCustomAppPtrOutput)
}

// Indicates whether Push MFA is enabled.
func (o GuardianPushOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianPush) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Provider to use, one of `guardian`, `sns`.
func (o GuardianPushOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPush) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type GuardianPushPtrOutput struct{ *pulumi.OutputState }

func (GuardianPushPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPush)(nil)).Elem()
}

func (o GuardianPushPtrOutput) ToGuardianPushPtrOutput() GuardianPushPtrOutput {
	return o
}

func (o GuardianPushPtrOutput) ToGuardianPushPtrOutputWithContext(ctx context.Context) GuardianPushPtrOutput {
	return o
}

func (o GuardianPushPtrOutput) Elem() GuardianPushOutput {
	return o.ApplyT(func(v *GuardianPush) GuardianPush {
		if v != nil {
			return *v
		}
		var ret GuardianPush
		return ret
	}).(GuardianPushOutput)
}

// Configuration for Amazon SNS.
func (o GuardianPushPtrOutput) AmazonSns() GuardianPushAmazonSnsPtrOutput {
	return o.ApplyT(func(v *GuardianPush) *GuardianPushAmazonSns {
		if v == nil {
			return nil
		}
		return v.AmazonSns
	}).(GuardianPushAmazonSnsPtrOutput)
}

// Configuration for the Guardian Custom App.
func (o GuardianPushPtrOutput) CustomApp() GuardianPushCustomAppPtrOutput {
	return o.ApplyT(func(v *GuardianPush) *GuardianPushCustomApp {
		if v == nil {
			return nil
		}
		return v.CustomApp
	}).(GuardianPushCustomAppPtrOutput)
}

// Indicates whether Push MFA is enabled.
func (o GuardianPushPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianPush) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Provider to use, one of `guardian`, `sns`.
func (o GuardianPushPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPush) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

type GuardianPushAmazonSns struct {
	AwsAccessKeyId                string `pulumi:"awsAccessKeyId"`
	AwsRegion                     string `pulumi:"awsRegion"`
	AwsSecretAccessKey            string `pulumi:"awsSecretAccessKey"`
	SnsApnsPlatformApplicationArn string `pulumi:"snsApnsPlatformApplicationArn"`
	SnsGcmPlatformApplicationArn  string `pulumi:"snsGcmPlatformApplicationArn"`
}

// GuardianPushAmazonSnsInput is an input type that accepts GuardianPushAmazonSnsArgs and GuardianPushAmazonSnsOutput values.
// You can construct a concrete instance of `GuardianPushAmazonSnsInput` via:
//
//	GuardianPushAmazonSnsArgs{...}
type GuardianPushAmazonSnsInput interface {
	pulumi.Input

	ToGuardianPushAmazonSnsOutput() GuardianPushAmazonSnsOutput
	ToGuardianPushAmazonSnsOutputWithContext(context.Context) GuardianPushAmazonSnsOutput
}

type GuardianPushAmazonSnsArgs struct {
	AwsAccessKeyId                pulumi.StringInput `pulumi:"awsAccessKeyId"`
	AwsRegion                     pulumi.StringInput `pulumi:"awsRegion"`
	AwsSecretAccessKey            pulumi.StringInput `pulumi:"awsSecretAccessKey"`
	SnsApnsPlatformApplicationArn pulumi.StringInput `pulumi:"snsApnsPlatformApplicationArn"`
	SnsGcmPlatformApplicationArn  pulumi.StringInput `pulumi:"snsGcmPlatformApplicationArn"`
}

func (GuardianPushAmazonSnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushAmazonSns)(nil)).Elem()
}

func (i GuardianPushAmazonSnsArgs) ToGuardianPushAmazonSnsOutput() GuardianPushAmazonSnsOutput {
	return i.ToGuardianPushAmazonSnsOutputWithContext(context.Background())
}

func (i GuardianPushAmazonSnsArgs) ToGuardianPushAmazonSnsOutputWithContext(ctx context.Context) GuardianPushAmazonSnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushAmazonSnsOutput)
}

func (i GuardianPushAmazonSnsArgs) ToGuardianPushAmazonSnsPtrOutput() GuardianPushAmazonSnsPtrOutput {
	return i.ToGuardianPushAmazonSnsPtrOutputWithContext(context.Background())
}

func (i GuardianPushAmazonSnsArgs) ToGuardianPushAmazonSnsPtrOutputWithContext(ctx context.Context) GuardianPushAmazonSnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushAmazonSnsOutput).ToGuardianPushAmazonSnsPtrOutputWithContext(ctx)
}

// GuardianPushAmazonSnsPtrInput is an input type that accepts GuardianPushAmazonSnsArgs, GuardianPushAmazonSnsPtr and GuardianPushAmazonSnsPtrOutput values.
// You can construct a concrete instance of `GuardianPushAmazonSnsPtrInput` via:
//
//	        GuardianPushAmazonSnsArgs{...}
//
//	or:
//
//	        nil
type GuardianPushAmazonSnsPtrInput interface {
	pulumi.Input

	ToGuardianPushAmazonSnsPtrOutput() GuardianPushAmazonSnsPtrOutput
	ToGuardianPushAmazonSnsPtrOutputWithContext(context.Context) GuardianPushAmazonSnsPtrOutput
}

type guardianPushAmazonSnsPtrType GuardianPushAmazonSnsArgs

func GuardianPushAmazonSnsPtr(v *GuardianPushAmazonSnsArgs) GuardianPushAmazonSnsPtrInput {
	return (*guardianPushAmazonSnsPtrType)(v)
}

func (*guardianPushAmazonSnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushAmazonSns)(nil)).Elem()
}

func (i *guardianPushAmazonSnsPtrType) ToGuardianPushAmazonSnsPtrOutput() GuardianPushAmazonSnsPtrOutput {
	return i.ToGuardianPushAmazonSnsPtrOutputWithContext(context.Background())
}

func (i *guardianPushAmazonSnsPtrType) ToGuardianPushAmazonSnsPtrOutputWithContext(ctx context.Context) GuardianPushAmazonSnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushAmazonSnsPtrOutput)
}

type GuardianPushAmazonSnsOutput struct{ *pulumi.OutputState }

func (GuardianPushAmazonSnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushAmazonSns)(nil)).Elem()
}

func (o GuardianPushAmazonSnsOutput) ToGuardianPushAmazonSnsOutput() GuardianPushAmazonSnsOutput {
	return o
}

func (o GuardianPushAmazonSnsOutput) ToGuardianPushAmazonSnsOutputWithContext(ctx context.Context) GuardianPushAmazonSnsOutput {
	return o
}

func (o GuardianPushAmazonSnsOutput) ToGuardianPushAmazonSnsPtrOutput() GuardianPushAmazonSnsPtrOutput {
	return o.ToGuardianPushAmazonSnsPtrOutputWithContext(context.Background())
}

func (o GuardianPushAmazonSnsOutput) ToGuardianPushAmazonSnsPtrOutputWithContext(ctx context.Context) GuardianPushAmazonSnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPushAmazonSns) *GuardianPushAmazonSns {
		return &v
	}).(GuardianPushAmazonSnsPtrOutput)
}

func (o GuardianPushAmazonSnsOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushAmazonSns) string { return v.AwsAccessKeyId }).(pulumi.StringOutput)
}

func (o GuardianPushAmazonSnsOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushAmazonSns) string { return v.AwsRegion }).(pulumi.StringOutput)
}

func (o GuardianPushAmazonSnsOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushAmazonSns) string { return v.AwsSecretAccessKey }).(pulumi.StringOutput)
}

func (o GuardianPushAmazonSnsOutput) SnsApnsPlatformApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushAmazonSns) string { return v.SnsApnsPlatformApplicationArn }).(pulumi.StringOutput)
}

func (o GuardianPushAmazonSnsOutput) SnsGcmPlatformApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushAmazonSns) string { return v.SnsGcmPlatformApplicationArn }).(pulumi.StringOutput)
}

type GuardianPushAmazonSnsPtrOutput struct{ *pulumi.OutputState }

func (GuardianPushAmazonSnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushAmazonSns)(nil)).Elem()
}

func (o GuardianPushAmazonSnsPtrOutput) ToGuardianPushAmazonSnsPtrOutput() GuardianPushAmazonSnsPtrOutput {
	return o
}

func (o GuardianPushAmazonSnsPtrOutput) ToGuardianPushAmazonSnsPtrOutputWithContext(ctx context.Context) GuardianPushAmazonSnsPtrOutput {
	return o
}

func (o GuardianPushAmazonSnsPtrOutput) Elem() GuardianPushAmazonSnsOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) GuardianPushAmazonSns {
		if v != nil {
			return *v
		}
		var ret GuardianPushAmazonSns
		return ret
	}).(GuardianPushAmazonSnsOutput)
}

func (o GuardianPushAmazonSnsPtrOutput) AwsAccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) *string {
		if v == nil {
			return nil
		}
		return &v.AwsAccessKeyId
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushAmazonSnsPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) *string {
		if v == nil {
			return nil
		}
		return &v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushAmazonSnsPtrOutput) AwsSecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) *string {
		if v == nil {
			return nil
		}
		return &v.AwsSecretAccessKey
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushAmazonSnsPtrOutput) SnsApnsPlatformApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) *string {
		if v == nil {
			return nil
		}
		return &v.SnsApnsPlatformApplicationArn
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushAmazonSnsPtrOutput) SnsGcmPlatformApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) *string {
		if v == nil {
			return nil
		}
		return &v.SnsGcmPlatformApplicationArn
	}).(pulumi.StringPtrOutput)
}

type GuardianPushCustomApp struct {
	AppName       *string `pulumi:"appName"`
	AppleAppLink  *string `pulumi:"appleAppLink"`
	GoogleAppLink *string `pulumi:"googleAppLink"`
}

// GuardianPushCustomAppInput is an input type that accepts GuardianPushCustomAppArgs and GuardianPushCustomAppOutput values.
// You can construct a concrete instance of `GuardianPushCustomAppInput` via:
//
//	GuardianPushCustomAppArgs{...}
type GuardianPushCustomAppInput interface {
	pulumi.Input

	ToGuardianPushCustomAppOutput() GuardianPushCustomAppOutput
	ToGuardianPushCustomAppOutputWithContext(context.Context) GuardianPushCustomAppOutput
}

type GuardianPushCustomAppArgs struct {
	AppName       pulumi.StringPtrInput `pulumi:"appName"`
	AppleAppLink  pulumi.StringPtrInput `pulumi:"appleAppLink"`
	GoogleAppLink pulumi.StringPtrInput `pulumi:"googleAppLink"`
}

func (GuardianPushCustomAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushCustomApp)(nil)).Elem()
}

func (i GuardianPushCustomAppArgs) ToGuardianPushCustomAppOutput() GuardianPushCustomAppOutput {
	return i.ToGuardianPushCustomAppOutputWithContext(context.Background())
}

func (i GuardianPushCustomAppArgs) ToGuardianPushCustomAppOutputWithContext(ctx context.Context) GuardianPushCustomAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushCustomAppOutput)
}

func (i GuardianPushCustomAppArgs) ToGuardianPushCustomAppPtrOutput() GuardianPushCustomAppPtrOutput {
	return i.ToGuardianPushCustomAppPtrOutputWithContext(context.Background())
}

func (i GuardianPushCustomAppArgs) ToGuardianPushCustomAppPtrOutputWithContext(ctx context.Context) GuardianPushCustomAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushCustomAppOutput).ToGuardianPushCustomAppPtrOutputWithContext(ctx)
}

// GuardianPushCustomAppPtrInput is an input type that accepts GuardianPushCustomAppArgs, GuardianPushCustomAppPtr and GuardianPushCustomAppPtrOutput values.
// You can construct a concrete instance of `GuardianPushCustomAppPtrInput` via:
//
//	        GuardianPushCustomAppArgs{...}
//
//	or:
//
//	        nil
type GuardianPushCustomAppPtrInput interface {
	pulumi.Input

	ToGuardianPushCustomAppPtrOutput() GuardianPushCustomAppPtrOutput
	ToGuardianPushCustomAppPtrOutputWithContext(context.Context) GuardianPushCustomAppPtrOutput
}

type guardianPushCustomAppPtrType GuardianPushCustomAppArgs

func GuardianPushCustomAppPtr(v *GuardianPushCustomAppArgs) GuardianPushCustomAppPtrInput {
	return (*guardianPushCustomAppPtrType)(v)
}

func (*guardianPushCustomAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushCustomApp)(nil)).Elem()
}

func (i *guardianPushCustomAppPtrType) ToGuardianPushCustomAppPtrOutput() GuardianPushCustomAppPtrOutput {
	return i.ToGuardianPushCustomAppPtrOutputWithContext(context.Background())
}

func (i *guardianPushCustomAppPtrType) ToGuardianPushCustomAppPtrOutputWithContext(ctx context.Context) GuardianPushCustomAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushCustomAppPtrOutput)
}

type GuardianPushCustomAppOutput struct{ *pulumi.OutputState }

func (GuardianPushCustomAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushCustomApp)(nil)).Elem()
}

func (o GuardianPushCustomAppOutput) ToGuardianPushCustomAppOutput() GuardianPushCustomAppOutput {
	return o
}

func (o GuardianPushCustomAppOutput) ToGuardianPushCustomAppOutputWithContext(ctx context.Context) GuardianPushCustomAppOutput {
	return o
}

func (o GuardianPushCustomAppOutput) ToGuardianPushCustomAppPtrOutput() GuardianPushCustomAppPtrOutput {
	return o.ToGuardianPushCustomAppPtrOutputWithContext(context.Background())
}

func (o GuardianPushCustomAppOutput) ToGuardianPushCustomAppPtrOutputWithContext(ctx context.Context) GuardianPushCustomAppPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPushCustomApp) *GuardianPushCustomApp {
		return &v
	}).(GuardianPushCustomAppPtrOutput)
}

func (o GuardianPushCustomAppOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPushCustomApp) *string { return v.AppName }).(pulumi.StringPtrOutput)
}

func (o GuardianPushCustomAppOutput) AppleAppLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPushCustomApp) *string { return v.AppleAppLink }).(pulumi.StringPtrOutput)
}

func (o GuardianPushCustomAppOutput) GoogleAppLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPushCustomApp) *string { return v.GoogleAppLink }).(pulumi.StringPtrOutput)
}

type GuardianPushCustomAppPtrOutput struct{ *pulumi.OutputState }

func (GuardianPushCustomAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushCustomApp)(nil)).Elem()
}

func (o GuardianPushCustomAppPtrOutput) ToGuardianPushCustomAppPtrOutput() GuardianPushCustomAppPtrOutput {
	return o
}

func (o GuardianPushCustomAppPtrOutput) ToGuardianPushCustomAppPtrOutputWithContext(ctx context.Context) GuardianPushCustomAppPtrOutput {
	return o
}

func (o GuardianPushCustomAppPtrOutput) Elem() GuardianPushCustomAppOutput {
	return o.ApplyT(func(v *GuardianPushCustomApp) GuardianPushCustomApp {
		if v != nil {
			return *v
		}
		var ret GuardianPushCustomApp
		return ret
	}).(GuardianPushCustomAppOutput)
}

func (o GuardianPushCustomAppPtrOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushCustomApp) *string {
		if v == nil {
			return nil
		}
		return v.AppName
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushCustomAppPtrOutput) AppleAppLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushCustomApp) *string {
		if v == nil {
			return nil
		}
		return v.AppleAppLink
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushCustomAppPtrOutput) GoogleAppLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushCustomApp) *string {
		if v == nil {
			return nil
		}
		return v.GoogleAppLink
	}).(pulumi.StringPtrOutput)
}

type GuardianWebauthnPlatform struct {
	// Indicates whether WebAuthn with FIDO Device Biometrics MFA is enabled.
	Enabled bool `pulumi:"enabled"`
	// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
	OverrideRelyingParty *bool `pulumi:"overrideRelyingParty"`
	// The Relying Party should be a suffix of the custom domain.
	RelyingPartyIdentifier *string `pulumi:"relyingPartyIdentifier"`
}

// GuardianWebauthnPlatformInput is an input type that accepts GuardianWebauthnPlatformArgs and GuardianWebauthnPlatformOutput values.
// You can construct a concrete instance of `GuardianWebauthnPlatformInput` via:
//
//	GuardianWebauthnPlatformArgs{...}
type GuardianWebauthnPlatformInput interface {
	pulumi.Input

	ToGuardianWebauthnPlatformOutput() GuardianWebauthnPlatformOutput
	ToGuardianWebauthnPlatformOutputWithContext(context.Context) GuardianWebauthnPlatformOutput
}

type GuardianWebauthnPlatformArgs struct {
	// Indicates whether WebAuthn with FIDO Device Biometrics MFA is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
	OverrideRelyingParty pulumi.BoolPtrInput `pulumi:"overrideRelyingParty"`
	// The Relying Party should be a suffix of the custom domain.
	RelyingPartyIdentifier pulumi.StringPtrInput `pulumi:"relyingPartyIdentifier"`
}

func (GuardianWebauthnPlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianWebauthnPlatform)(nil)).Elem()
}

func (i GuardianWebauthnPlatformArgs) ToGuardianWebauthnPlatformOutput() GuardianWebauthnPlatformOutput {
	return i.ToGuardianWebauthnPlatformOutputWithContext(context.Background())
}

func (i GuardianWebauthnPlatformArgs) ToGuardianWebauthnPlatformOutputWithContext(ctx context.Context) GuardianWebauthnPlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnPlatformOutput)
}

func (i GuardianWebauthnPlatformArgs) ToGuardianWebauthnPlatformPtrOutput() GuardianWebauthnPlatformPtrOutput {
	return i.ToGuardianWebauthnPlatformPtrOutputWithContext(context.Background())
}

func (i GuardianWebauthnPlatformArgs) ToGuardianWebauthnPlatformPtrOutputWithContext(ctx context.Context) GuardianWebauthnPlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnPlatformOutput).ToGuardianWebauthnPlatformPtrOutputWithContext(ctx)
}

// GuardianWebauthnPlatformPtrInput is an input type that accepts GuardianWebauthnPlatformArgs, GuardianWebauthnPlatformPtr and GuardianWebauthnPlatformPtrOutput values.
// You can construct a concrete instance of `GuardianWebauthnPlatformPtrInput` via:
//
//	        GuardianWebauthnPlatformArgs{...}
//
//	or:
//
//	        nil
type GuardianWebauthnPlatformPtrInput interface {
	pulumi.Input

	ToGuardianWebauthnPlatformPtrOutput() GuardianWebauthnPlatformPtrOutput
	ToGuardianWebauthnPlatformPtrOutputWithContext(context.Context) GuardianWebauthnPlatformPtrOutput
}

type guardianWebauthnPlatformPtrType GuardianWebauthnPlatformArgs

func GuardianWebauthnPlatformPtr(v *GuardianWebauthnPlatformArgs) GuardianWebauthnPlatformPtrInput {
	return (*guardianWebauthnPlatformPtrType)(v)
}

func (*guardianWebauthnPlatformPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianWebauthnPlatform)(nil)).Elem()
}

func (i *guardianWebauthnPlatformPtrType) ToGuardianWebauthnPlatformPtrOutput() GuardianWebauthnPlatformPtrOutput {
	return i.ToGuardianWebauthnPlatformPtrOutputWithContext(context.Background())
}

func (i *guardianWebauthnPlatformPtrType) ToGuardianWebauthnPlatformPtrOutputWithContext(ctx context.Context) GuardianWebauthnPlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnPlatformPtrOutput)
}

type GuardianWebauthnPlatformOutput struct{ *pulumi.OutputState }

func (GuardianWebauthnPlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianWebauthnPlatform)(nil)).Elem()
}

func (o GuardianWebauthnPlatformOutput) ToGuardianWebauthnPlatformOutput() GuardianWebauthnPlatformOutput {
	return o
}

func (o GuardianWebauthnPlatformOutput) ToGuardianWebauthnPlatformOutputWithContext(ctx context.Context) GuardianWebauthnPlatformOutput {
	return o
}

func (o GuardianWebauthnPlatformOutput) ToGuardianWebauthnPlatformPtrOutput() GuardianWebauthnPlatformPtrOutput {
	return o.ToGuardianWebauthnPlatformPtrOutputWithContext(context.Background())
}

func (o GuardianWebauthnPlatformOutput) ToGuardianWebauthnPlatformPtrOutputWithContext(ctx context.Context) GuardianWebauthnPlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianWebauthnPlatform) *GuardianWebauthnPlatform {
		return &v
	}).(GuardianWebauthnPlatformPtrOutput)
}

// Indicates whether WebAuthn with FIDO Device Biometrics MFA is enabled.
func (o GuardianWebauthnPlatformOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianWebauthnPlatform) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
func (o GuardianWebauthnPlatformOutput) OverrideRelyingParty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GuardianWebauthnPlatform) *bool { return v.OverrideRelyingParty }).(pulumi.BoolPtrOutput)
}

// The Relying Party should be a suffix of the custom domain.
func (o GuardianWebauthnPlatformOutput) RelyingPartyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianWebauthnPlatform) *string { return v.RelyingPartyIdentifier }).(pulumi.StringPtrOutput)
}

type GuardianWebauthnPlatformPtrOutput struct{ *pulumi.OutputState }

func (GuardianWebauthnPlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianWebauthnPlatform)(nil)).Elem()
}

func (o GuardianWebauthnPlatformPtrOutput) ToGuardianWebauthnPlatformPtrOutput() GuardianWebauthnPlatformPtrOutput {
	return o
}

func (o GuardianWebauthnPlatformPtrOutput) ToGuardianWebauthnPlatformPtrOutputWithContext(ctx context.Context) GuardianWebauthnPlatformPtrOutput {
	return o
}

func (o GuardianWebauthnPlatformPtrOutput) Elem() GuardianWebauthnPlatformOutput {
	return o.ApplyT(func(v *GuardianWebauthnPlatform) GuardianWebauthnPlatform {
		if v != nil {
			return *v
		}
		var ret GuardianWebauthnPlatform
		return ret
	}).(GuardianWebauthnPlatformOutput)
}

// Indicates whether WebAuthn with FIDO Device Biometrics MFA is enabled.
func (o GuardianWebauthnPlatformPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnPlatform) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
func (o GuardianWebauthnPlatformPtrOutput) OverrideRelyingParty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnPlatform) *bool {
		if v == nil {
			return nil
		}
		return v.OverrideRelyingParty
	}).(pulumi.BoolPtrOutput)
}

// The Relying Party should be a suffix of the custom domain.
func (o GuardianWebauthnPlatformPtrOutput) RelyingPartyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnPlatform) *string {
		if v == nil {
			return nil
		}
		return v.RelyingPartyIdentifier
	}).(pulumi.StringPtrOutput)
}

type GuardianWebauthnRoaming struct {
	// Indicates whether WebAuthn with FIDO Security Keys MFA is enabled.
	Enabled bool `pulumi:"enabled"`
	// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
	OverrideRelyingParty *bool `pulumi:"overrideRelyingParty"`
	// The Relying Party should be a suffix of the custom domain.
	RelyingPartyIdentifier *string `pulumi:"relyingPartyIdentifier"`
	// User verification, one of `discouraged`, `preferred` or `required`.
	UserVerification *string `pulumi:"userVerification"`
}

// GuardianWebauthnRoamingInput is an input type that accepts GuardianWebauthnRoamingArgs and GuardianWebauthnRoamingOutput values.
// You can construct a concrete instance of `GuardianWebauthnRoamingInput` via:
//
//	GuardianWebauthnRoamingArgs{...}
type GuardianWebauthnRoamingInput interface {
	pulumi.Input

	ToGuardianWebauthnRoamingOutput() GuardianWebauthnRoamingOutput
	ToGuardianWebauthnRoamingOutputWithContext(context.Context) GuardianWebauthnRoamingOutput
}

type GuardianWebauthnRoamingArgs struct {
	// Indicates whether WebAuthn with FIDO Security Keys MFA is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
	OverrideRelyingParty pulumi.BoolPtrInput `pulumi:"overrideRelyingParty"`
	// The Relying Party should be a suffix of the custom domain.
	RelyingPartyIdentifier pulumi.StringPtrInput `pulumi:"relyingPartyIdentifier"`
	// User verification, one of `discouraged`, `preferred` or `required`.
	UserVerification pulumi.StringPtrInput `pulumi:"userVerification"`
}

func (GuardianWebauthnRoamingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianWebauthnRoaming)(nil)).Elem()
}

func (i GuardianWebauthnRoamingArgs) ToGuardianWebauthnRoamingOutput() GuardianWebauthnRoamingOutput {
	return i.ToGuardianWebauthnRoamingOutputWithContext(context.Background())
}

func (i GuardianWebauthnRoamingArgs) ToGuardianWebauthnRoamingOutputWithContext(ctx context.Context) GuardianWebauthnRoamingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnRoamingOutput)
}

func (i GuardianWebauthnRoamingArgs) ToGuardianWebauthnRoamingPtrOutput() GuardianWebauthnRoamingPtrOutput {
	return i.ToGuardianWebauthnRoamingPtrOutputWithContext(context.Background())
}

func (i GuardianWebauthnRoamingArgs) ToGuardianWebauthnRoamingPtrOutputWithContext(ctx context.Context) GuardianWebauthnRoamingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnRoamingOutput).ToGuardianWebauthnRoamingPtrOutputWithContext(ctx)
}

// GuardianWebauthnRoamingPtrInput is an input type that accepts GuardianWebauthnRoamingArgs, GuardianWebauthnRoamingPtr and GuardianWebauthnRoamingPtrOutput values.
// You can construct a concrete instance of `GuardianWebauthnRoamingPtrInput` via:
//
//	        GuardianWebauthnRoamingArgs{...}
//
//	or:
//
//	        nil
type GuardianWebauthnRoamingPtrInput interface {
	pulumi.Input

	ToGuardianWebauthnRoamingPtrOutput() GuardianWebauthnRoamingPtrOutput
	ToGuardianWebauthnRoamingPtrOutputWithContext(context.Context) GuardianWebauthnRoamingPtrOutput
}

type guardianWebauthnRoamingPtrType GuardianWebauthnRoamingArgs

func GuardianWebauthnRoamingPtr(v *GuardianWebauthnRoamingArgs) GuardianWebauthnRoamingPtrInput {
	return (*guardianWebauthnRoamingPtrType)(v)
}

func (*guardianWebauthnRoamingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianWebauthnRoaming)(nil)).Elem()
}

func (i *guardianWebauthnRoamingPtrType) ToGuardianWebauthnRoamingPtrOutput() GuardianWebauthnRoamingPtrOutput {
	return i.ToGuardianWebauthnRoamingPtrOutputWithContext(context.Background())
}

func (i *guardianWebauthnRoamingPtrType) ToGuardianWebauthnRoamingPtrOutputWithContext(ctx context.Context) GuardianWebauthnRoamingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnRoamingPtrOutput)
}

type GuardianWebauthnRoamingOutput struct{ *pulumi.OutputState }

func (GuardianWebauthnRoamingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianWebauthnRoaming)(nil)).Elem()
}

func (o GuardianWebauthnRoamingOutput) ToGuardianWebauthnRoamingOutput() GuardianWebauthnRoamingOutput {
	return o
}

func (o GuardianWebauthnRoamingOutput) ToGuardianWebauthnRoamingOutputWithContext(ctx context.Context) GuardianWebauthnRoamingOutput {
	return o
}

func (o GuardianWebauthnRoamingOutput) ToGuardianWebauthnRoamingPtrOutput() GuardianWebauthnRoamingPtrOutput {
	return o.ToGuardianWebauthnRoamingPtrOutputWithContext(context.Background())
}

func (o GuardianWebauthnRoamingOutput) ToGuardianWebauthnRoamingPtrOutputWithContext(ctx context.Context) GuardianWebauthnRoamingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianWebauthnRoaming) *GuardianWebauthnRoaming {
		return &v
	}).(GuardianWebauthnRoamingPtrOutput)
}

// Indicates whether WebAuthn with FIDO Security Keys MFA is enabled.
func (o GuardianWebauthnRoamingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianWebauthnRoaming) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
func (o GuardianWebauthnRoamingOutput) OverrideRelyingParty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GuardianWebauthnRoaming) *bool { return v.OverrideRelyingParty }).(pulumi.BoolPtrOutput)
}

// The Relying Party should be a suffix of the custom domain.
func (o GuardianWebauthnRoamingOutput) RelyingPartyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianWebauthnRoaming) *string { return v.RelyingPartyIdentifier }).(pulumi.StringPtrOutput)
}

// User verification, one of `discouraged`, `preferred` or `required`.
func (o GuardianWebauthnRoamingOutput) UserVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianWebauthnRoaming) *string { return v.UserVerification }).(pulumi.StringPtrOutput)
}

type GuardianWebauthnRoamingPtrOutput struct{ *pulumi.OutputState }

func (GuardianWebauthnRoamingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianWebauthnRoaming)(nil)).Elem()
}

func (o GuardianWebauthnRoamingPtrOutput) ToGuardianWebauthnRoamingPtrOutput() GuardianWebauthnRoamingPtrOutput {
	return o
}

func (o GuardianWebauthnRoamingPtrOutput) ToGuardianWebauthnRoamingPtrOutputWithContext(ctx context.Context) GuardianWebauthnRoamingPtrOutput {
	return o
}

func (o GuardianWebauthnRoamingPtrOutput) Elem() GuardianWebauthnRoamingOutput {
	return o.ApplyT(func(v *GuardianWebauthnRoaming) GuardianWebauthnRoaming {
		if v != nil {
			return *v
		}
		var ret GuardianWebauthnRoaming
		return ret
	}).(GuardianWebauthnRoamingOutput)
}

// Indicates whether WebAuthn with FIDO Security Keys MFA is enabled.
func (o GuardianWebauthnRoamingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnRoaming) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
func (o GuardianWebauthnRoamingPtrOutput) OverrideRelyingParty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnRoaming) *bool {
		if v == nil {
			return nil
		}
		return v.OverrideRelyingParty
	}).(pulumi.BoolPtrOutput)
}

// The Relying Party should be a suffix of the custom domain.
func (o GuardianWebauthnRoamingPtrOutput) RelyingPartyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnRoaming) *string {
		if v == nil {
			return nil
		}
		return v.RelyingPartyIdentifier
	}).(pulumi.StringPtrOutput)
}

// User verification, one of `discouraged`, `preferred` or `required`.
func (o GuardianWebauthnRoamingPtrOutput) UserVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnRoaming) *string {
		if v == nil {
			return nil
		}
		return v.UserVerification
	}).(pulumi.StringPtrOutput)
}

type LogStreamSink struct {
	// The AWS Account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS, so this should be an output attribute.
	AwsPartnerEventSource *string `pulumi:"awsPartnerEventSource"`
	// The AWS Region, e.g. "us-east-2").
	AwsRegion *string `pulumi:"awsRegion"`
	// Name of the Partner Topic to be used with Azure. Generally should not be specified.
	AzurePartnerTopic *string `pulumi:"azurePartnerTopic"`
	// The Azure region code, e.g. "ne")
	AzureRegion *string `pulumi:"azureRegion"`
	// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription.
	AzureResourceGroup *string `pulumi:"azureResourceGroup"`
	// The unique alphanumeric string that identifies your Azure subscription.
	AzureSubscriptionId *string `pulumi:"azureSubscriptionId"`
	// The Datadog API key.
	DatadogApiKey *string `pulumi:"datadogApiKey"`
	// The Datadog region. Options are ["us", "eu", "us3", "us5"].
	DatadogRegion *string `pulumi:"datadogRegion"`
	// Sent in the HTTP "Authorization" header with each request.
	HttpAuthorization *string `pulumi:"httpAuthorization"`
	// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
	HttpContentFormat *string `pulumi:"httpContentFormat"`
	// The "Content-Type" header to send over HTTP. Common value is "application/json".
	HttpContentType *string `pulumi:"httpContentType"`
	// Additional HTTP headers to be included as part of the HTTP request.
	HttpCustomHeaders []map[string]string `pulumi:"httpCustomHeaders"`
	// The HTTP endpoint to send streaming logs.
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The Mixpanel project ID, found on the Project Settings page.
	MixpanelProjectId *string `pulumi:"mixpanelProjectId"`
	// The Mixpanel region. Options are ["us", "eu"]. EU is required for customers with EU data residency requirements.
	MixpanelRegion *string `pulumi:"mixpanelRegion"`
	// The Mixpanel Service Account password.
	MixpanelServiceAccountPassword *string `pulumi:"mixpanelServiceAccountPassword"`
	// The Mixpanel Service Account username. Services Accounts can be created in the Project Settings page.
	MixpanelServiceAccountUsername *string `pulumi:"mixpanelServiceAccountUsername"`
	// The [Segment Write Key](https://segment.com/docs/connections/find-writekey/).
	SegmentWriteKey *string `pulumi:"segmentWriteKey"`
	// The Splunk domain name.
	SplunkDomain *string `pulumi:"splunkDomain"`
	// The Splunk port.
	SplunkPort *string `pulumi:"splunkPort"`
	// This toggle should be turned off when using self-signed certificates.
	SplunkSecure *bool `pulumi:"splunkSecure"`
	// The Splunk access token.
	SplunkToken *string `pulumi:"splunkToken"`
	// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0.
	SumoSourceAddress *string `pulumi:"sumoSourceAddress"`
}

// LogStreamSinkInput is an input type that accepts LogStreamSinkArgs and LogStreamSinkOutput values.
// You can construct a concrete instance of `LogStreamSinkInput` via:
//
//	LogStreamSinkArgs{...}
type LogStreamSinkInput interface {
	pulumi.Input

	ToLogStreamSinkOutput() LogStreamSinkOutput
	ToLogStreamSinkOutputWithContext(context.Context) LogStreamSinkOutput
}

type LogStreamSinkArgs struct {
	// The AWS Account ID.
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS, so this should be an output attribute.
	AwsPartnerEventSource pulumi.StringPtrInput `pulumi:"awsPartnerEventSource"`
	// The AWS Region, e.g. "us-east-2").
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// Name of the Partner Topic to be used with Azure. Generally should not be specified.
	AzurePartnerTopic pulumi.StringPtrInput `pulumi:"azurePartnerTopic"`
	// The Azure region code, e.g. "ne")
	AzureRegion pulumi.StringPtrInput `pulumi:"azureRegion"`
	// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription.
	AzureResourceGroup pulumi.StringPtrInput `pulumi:"azureResourceGroup"`
	// The unique alphanumeric string that identifies your Azure subscription.
	AzureSubscriptionId pulumi.StringPtrInput `pulumi:"azureSubscriptionId"`
	// The Datadog API key.
	DatadogApiKey pulumi.StringPtrInput `pulumi:"datadogApiKey"`
	// The Datadog region. Options are ["us", "eu", "us3", "us5"].
	DatadogRegion pulumi.StringPtrInput `pulumi:"datadogRegion"`
	// Sent in the HTTP "Authorization" header with each request.
	HttpAuthorization pulumi.StringPtrInput `pulumi:"httpAuthorization"`
	// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
	HttpContentFormat pulumi.StringPtrInput `pulumi:"httpContentFormat"`
	// The "Content-Type" header to send over HTTP. Common value is "application/json".
	HttpContentType pulumi.StringPtrInput `pulumi:"httpContentType"`
	// Additional HTTP headers to be included as part of the HTTP request.
	HttpCustomHeaders pulumi.StringMapArrayInput `pulumi:"httpCustomHeaders"`
	// The HTTP endpoint to send streaming logs.
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The Mixpanel project ID, found on the Project Settings page.
	MixpanelProjectId pulumi.StringPtrInput `pulumi:"mixpanelProjectId"`
	// The Mixpanel region. Options are ["us", "eu"]. EU is required for customers with EU data residency requirements.
	MixpanelRegion pulumi.StringPtrInput `pulumi:"mixpanelRegion"`
	// The Mixpanel Service Account password.
	MixpanelServiceAccountPassword pulumi.StringPtrInput `pulumi:"mixpanelServiceAccountPassword"`
	// The Mixpanel Service Account username. Services Accounts can be created in the Project Settings page.
	MixpanelServiceAccountUsername pulumi.StringPtrInput `pulumi:"mixpanelServiceAccountUsername"`
	// The [Segment Write Key](https://segment.com/docs/connections/find-writekey/).
	SegmentWriteKey pulumi.StringPtrInput `pulumi:"segmentWriteKey"`
	// The Splunk domain name.
	SplunkDomain pulumi.StringPtrInput `pulumi:"splunkDomain"`
	// The Splunk port.
	SplunkPort pulumi.StringPtrInput `pulumi:"splunkPort"`
	// This toggle should be turned off when using self-signed certificates.
	SplunkSecure pulumi.BoolPtrInput `pulumi:"splunkSecure"`
	// The Splunk access token.
	SplunkToken pulumi.StringPtrInput `pulumi:"splunkToken"`
	// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0.
	SumoSourceAddress pulumi.StringPtrInput `pulumi:"sumoSourceAddress"`
}

func (LogStreamSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogStreamSink)(nil)).Elem()
}

func (i LogStreamSinkArgs) ToLogStreamSinkOutput() LogStreamSinkOutput {
	return i.ToLogStreamSinkOutputWithContext(context.Background())
}

func (i LogStreamSinkArgs) ToLogStreamSinkOutputWithContext(ctx context.Context) LogStreamSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogStreamSinkOutput)
}

func (i LogStreamSinkArgs) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return i.ToLogStreamSinkPtrOutputWithContext(context.Background())
}

func (i LogStreamSinkArgs) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogStreamSinkOutput).ToLogStreamSinkPtrOutputWithContext(ctx)
}

// LogStreamSinkPtrInput is an input type that accepts LogStreamSinkArgs, LogStreamSinkPtr and LogStreamSinkPtrOutput values.
// You can construct a concrete instance of `LogStreamSinkPtrInput` via:
//
//	        LogStreamSinkArgs{...}
//
//	or:
//
//	        nil
type LogStreamSinkPtrInput interface {
	pulumi.Input

	ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput
	ToLogStreamSinkPtrOutputWithContext(context.Context) LogStreamSinkPtrOutput
}

type logStreamSinkPtrType LogStreamSinkArgs

func LogStreamSinkPtr(v *LogStreamSinkArgs) LogStreamSinkPtrInput {
	return (*logStreamSinkPtrType)(v)
}

func (*logStreamSinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogStreamSink)(nil)).Elem()
}

func (i *logStreamSinkPtrType) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return i.ToLogStreamSinkPtrOutputWithContext(context.Background())
}

func (i *logStreamSinkPtrType) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogStreamSinkPtrOutput)
}

type LogStreamSinkOutput struct{ *pulumi.OutputState }

func (LogStreamSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogStreamSink)(nil)).Elem()
}

func (o LogStreamSinkOutput) ToLogStreamSinkOutput() LogStreamSinkOutput {
	return o
}

func (o LogStreamSinkOutput) ToLogStreamSinkOutputWithContext(ctx context.Context) LogStreamSinkOutput {
	return o
}

func (o LogStreamSinkOutput) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return o.ToLogStreamSinkPtrOutputWithContext(context.Background())
}

func (o LogStreamSinkOutput) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogStreamSink) *LogStreamSink {
		return &v
	}).(LogStreamSinkPtrOutput)
}

// The AWS Account ID.
func (o LogStreamSinkOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS, so this should be an output attribute.
func (o LogStreamSinkOutput) AwsPartnerEventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AwsPartnerEventSource }).(pulumi.StringPtrOutput)
}

// The AWS Region, e.g. "us-east-2").
func (o LogStreamSinkOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// Name of the Partner Topic to be used with Azure. Generally should not be specified.
func (o LogStreamSinkOutput) AzurePartnerTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzurePartnerTopic }).(pulumi.StringPtrOutput)
}

// The Azure region code, e.g. "ne")
func (o LogStreamSinkOutput) AzureRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzureRegion }).(pulumi.StringPtrOutput)
}

// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription.
func (o LogStreamSinkOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzureResourceGroup }).(pulumi.StringPtrOutput)
}

// The unique alphanumeric string that identifies your Azure subscription.
func (o LogStreamSinkOutput) AzureSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzureSubscriptionId }).(pulumi.StringPtrOutput)
}

// The Datadog API key.
func (o LogStreamSinkOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.DatadogApiKey }).(pulumi.StringPtrOutput)
}

// The Datadog region. Options are ["us", "eu", "us3", "us5"].
func (o LogStreamSinkOutput) DatadogRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.DatadogRegion }).(pulumi.StringPtrOutput)
}

// Sent in the HTTP "Authorization" header with each request.
func (o LogStreamSinkOutput) HttpAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpAuthorization }).(pulumi.StringPtrOutput)
}

// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
func (o LogStreamSinkOutput) HttpContentFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpContentFormat }).(pulumi.StringPtrOutput)
}

// The "Content-Type" header to send over HTTP. Common value is "application/json".
func (o LogStreamSinkOutput) HttpContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpContentType }).(pulumi.StringPtrOutput)
}

// Additional HTTP headers to be included as part of the HTTP request.
func (o LogStreamSinkOutput) HttpCustomHeaders() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v LogStreamSink) []map[string]string { return v.HttpCustomHeaders }).(pulumi.StringMapArrayOutput)
}

// The HTTP endpoint to send streaming logs.
func (o LogStreamSinkOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The Mixpanel project ID, found on the Project Settings page.
func (o LogStreamSinkOutput) MixpanelProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.MixpanelProjectId }).(pulumi.StringPtrOutput)
}

// The Mixpanel region. Options are ["us", "eu"]. EU is required for customers with EU data residency requirements.
func (o LogStreamSinkOutput) MixpanelRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.MixpanelRegion }).(pulumi.StringPtrOutput)
}

// The Mixpanel Service Account password.
func (o LogStreamSinkOutput) MixpanelServiceAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.MixpanelServiceAccountPassword }).(pulumi.StringPtrOutput)
}

// The Mixpanel Service Account username. Services Accounts can be created in the Project Settings page.
func (o LogStreamSinkOutput) MixpanelServiceAccountUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.MixpanelServiceAccountUsername }).(pulumi.StringPtrOutput)
}

// The [Segment Write Key](https://segment.com/docs/connections/find-writekey/).
func (o LogStreamSinkOutput) SegmentWriteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SegmentWriteKey }).(pulumi.StringPtrOutput)
}

// The Splunk domain name.
func (o LogStreamSinkOutput) SplunkDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SplunkDomain }).(pulumi.StringPtrOutput)
}

// The Splunk port.
func (o LogStreamSinkOutput) SplunkPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SplunkPort }).(pulumi.StringPtrOutput)
}

// This toggle should be turned off when using self-signed certificates.
func (o LogStreamSinkOutput) SplunkSecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *bool { return v.SplunkSecure }).(pulumi.BoolPtrOutput)
}

// The Splunk access token.
func (o LogStreamSinkOutput) SplunkToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SplunkToken }).(pulumi.StringPtrOutput)
}

// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0.
func (o LogStreamSinkOutput) SumoSourceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SumoSourceAddress }).(pulumi.StringPtrOutput)
}

type LogStreamSinkPtrOutput struct{ *pulumi.OutputState }

func (LogStreamSinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogStreamSink)(nil)).Elem()
}

func (o LogStreamSinkPtrOutput) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return o
}

func (o LogStreamSinkPtrOutput) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return o
}

func (o LogStreamSinkPtrOutput) Elem() LogStreamSinkOutput {
	return o.ApplyT(func(v *LogStreamSink) LogStreamSink {
		if v != nil {
			return *v
		}
		var ret LogStreamSink
		return ret
	}).(LogStreamSinkOutput)
}

// The AWS Account ID.
func (o LogStreamSinkPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS, so this should be an output attribute.
func (o LogStreamSinkPtrOutput) AwsPartnerEventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AwsPartnerEventSource
	}).(pulumi.StringPtrOutput)
}

// The AWS Region, e.g. "us-east-2").
func (o LogStreamSinkPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// Name of the Partner Topic to be used with Azure. Generally should not be specified.
func (o LogStreamSinkPtrOutput) AzurePartnerTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzurePartnerTopic
	}).(pulumi.StringPtrOutput)
}

// The Azure region code, e.g. "ne")
func (o LogStreamSinkPtrOutput) AzureRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzureRegion
	}).(pulumi.StringPtrOutput)
}

// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription.
func (o LogStreamSinkPtrOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The unique alphanumeric string that identifies your Azure subscription.
func (o LogStreamSinkPtrOutput) AzureSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzureSubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The Datadog API key.
func (o LogStreamSinkPtrOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.DatadogApiKey
	}).(pulumi.StringPtrOutput)
}

// The Datadog region. Options are ["us", "eu", "us3", "us5"].
func (o LogStreamSinkPtrOutput) DatadogRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.DatadogRegion
	}).(pulumi.StringPtrOutput)
}

// Sent in the HTTP "Authorization" header with each request.
func (o LogStreamSinkPtrOutput) HttpAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpAuthorization
	}).(pulumi.StringPtrOutput)
}

// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
func (o LogStreamSinkPtrOutput) HttpContentFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpContentFormat
	}).(pulumi.StringPtrOutput)
}

// The "Content-Type" header to send over HTTP. Common value is "application/json".
func (o LogStreamSinkPtrOutput) HttpContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpContentType
	}).(pulumi.StringPtrOutput)
}

// Additional HTTP headers to be included as part of the HTTP request.
func (o LogStreamSinkPtrOutput) HttpCustomHeaders() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v *LogStreamSink) []map[string]string {
		if v == nil {
			return nil
		}
		return v.HttpCustomHeaders
	}).(pulumi.StringMapArrayOutput)
}

// The HTTP endpoint to send streaming logs.
func (o LogStreamSinkPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Mixpanel project ID, found on the Project Settings page.
func (o LogStreamSinkPtrOutput) MixpanelProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.MixpanelProjectId
	}).(pulumi.StringPtrOutput)
}

// The Mixpanel region. Options are ["us", "eu"]. EU is required for customers with EU data residency requirements.
func (o LogStreamSinkPtrOutput) MixpanelRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.MixpanelRegion
	}).(pulumi.StringPtrOutput)
}

// The Mixpanel Service Account password.
func (o LogStreamSinkPtrOutput) MixpanelServiceAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.MixpanelServiceAccountPassword
	}).(pulumi.StringPtrOutput)
}

// The Mixpanel Service Account username. Services Accounts can be created in the Project Settings page.
func (o LogStreamSinkPtrOutput) MixpanelServiceAccountUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.MixpanelServiceAccountUsername
	}).(pulumi.StringPtrOutput)
}

// The [Segment Write Key](https://segment.com/docs/connections/find-writekey/).
func (o LogStreamSinkPtrOutput) SegmentWriteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SegmentWriteKey
	}).(pulumi.StringPtrOutput)
}

// The Splunk domain name.
func (o LogStreamSinkPtrOutput) SplunkDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SplunkDomain
	}).(pulumi.StringPtrOutput)
}

// The Splunk port.
func (o LogStreamSinkPtrOutput) SplunkPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SplunkPort
	}).(pulumi.StringPtrOutput)
}

// This toggle should be turned off when using self-signed certificates.
func (o LogStreamSinkPtrOutput) SplunkSecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *bool {
		if v == nil {
			return nil
		}
		return v.SplunkSecure
	}).(pulumi.BoolPtrOutput)
}

// The Splunk access token.
func (o LogStreamSinkPtrOutput) SplunkToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SplunkToken
	}).(pulumi.StringPtrOutput)
}

// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0.
func (o LogStreamSinkPtrOutput) SumoSourceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SumoSourceAddress
	}).(pulumi.StringPtrOutput)
}

type OrganizationBranding struct {
	// Color scheme used to customize the login pages.
	Colors map[string]string `pulumi:"colors"`
	// URL of logo to display on login page.
	LogoUrl *string `pulumi:"logoUrl"`
}

// OrganizationBrandingInput is an input type that accepts OrganizationBrandingArgs and OrganizationBrandingOutput values.
// You can construct a concrete instance of `OrganizationBrandingInput` via:
//
//	OrganizationBrandingArgs{...}
type OrganizationBrandingInput interface {
	pulumi.Input

	ToOrganizationBrandingOutput() OrganizationBrandingOutput
	ToOrganizationBrandingOutputWithContext(context.Context) OrganizationBrandingOutput
}

type OrganizationBrandingArgs struct {
	// Color scheme used to customize the login pages.
	Colors pulumi.StringMapInput `pulumi:"colors"`
	// URL of logo to display on login page.
	LogoUrl pulumi.StringPtrInput `pulumi:"logoUrl"`
}

func (OrganizationBrandingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationBranding)(nil)).Elem()
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingOutput() OrganizationBrandingOutput {
	return i.ToOrganizationBrandingOutputWithContext(context.Background())
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingOutputWithContext(ctx context.Context) OrganizationBrandingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBrandingOutput)
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return i.ToOrganizationBrandingPtrOutputWithContext(context.Background())
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBrandingOutput).ToOrganizationBrandingPtrOutputWithContext(ctx)
}

// OrganizationBrandingPtrInput is an input type that accepts OrganizationBrandingArgs, OrganizationBrandingPtr and OrganizationBrandingPtrOutput values.
// You can construct a concrete instance of `OrganizationBrandingPtrInput` via:
//
//	        OrganizationBrandingArgs{...}
//
//	or:
//
//	        nil
type OrganizationBrandingPtrInput interface {
	pulumi.Input

	ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput
	ToOrganizationBrandingPtrOutputWithContext(context.Context) OrganizationBrandingPtrOutput
}

type organizationBrandingPtrType OrganizationBrandingArgs

func OrganizationBrandingPtr(v *OrganizationBrandingArgs) OrganizationBrandingPtrInput {
	return (*organizationBrandingPtrType)(v)
}

func (*organizationBrandingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationBranding)(nil)).Elem()
}

func (i *organizationBrandingPtrType) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return i.ToOrganizationBrandingPtrOutputWithContext(context.Background())
}

func (i *organizationBrandingPtrType) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBrandingPtrOutput)
}

type OrganizationBrandingOutput struct{ *pulumi.OutputState }

func (OrganizationBrandingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationBranding)(nil)).Elem()
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingOutput() OrganizationBrandingOutput {
	return o
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingOutputWithContext(ctx context.Context) OrganizationBrandingOutput {
	return o
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return o.ToOrganizationBrandingPtrOutputWithContext(context.Background())
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationBranding) *OrganizationBranding {
		return &v
	}).(OrganizationBrandingPtrOutput)
}

// Color scheme used to customize the login pages.
func (o OrganizationBrandingOutput) Colors() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrganizationBranding) map[string]string { return v.Colors }).(pulumi.StringMapOutput)
}

// URL of logo to display on login page.
func (o OrganizationBrandingOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationBranding) *string { return v.LogoUrl }).(pulumi.StringPtrOutput)
}

type OrganizationBrandingPtrOutput struct{ *pulumi.OutputState }

func (OrganizationBrandingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationBranding)(nil)).Elem()
}

func (o OrganizationBrandingPtrOutput) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return o
}

func (o OrganizationBrandingPtrOutput) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return o
}

func (o OrganizationBrandingPtrOutput) Elem() OrganizationBrandingOutput {
	return o.ApplyT(func(v *OrganizationBranding) OrganizationBranding {
		if v != nil {
			return *v
		}
		var ret OrganizationBranding
		return ret
	}).(OrganizationBrandingOutput)
}

// Color scheme used to customize the login pages.
func (o OrganizationBrandingPtrOutput) Colors() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrganizationBranding) map[string]string {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(pulumi.StringMapOutput)
}

// URL of logo to display on login page.
func (o OrganizationBrandingPtrOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationBranding) *string {
		if v == nil {
			return nil
		}
		return v.LogoUrl
	}).(pulumi.StringPtrOutput)
}

type ResourceServerScope struct {
	// Description of the permission (scope).
	Description *string `pulumi:"description"`
	// Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.
	Value string `pulumi:"value"`
}

// ResourceServerScopeInput is an input type that accepts ResourceServerScopeArgs and ResourceServerScopeOutput values.
// You can construct a concrete instance of `ResourceServerScopeInput` via:
//
//	ResourceServerScopeArgs{...}
type ResourceServerScopeInput interface {
	pulumi.Input

	ToResourceServerScopeOutput() ResourceServerScopeOutput
	ToResourceServerScopeOutputWithContext(context.Context) ResourceServerScopeOutput
}

type ResourceServerScopeArgs struct {
	// Description of the permission (scope).
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ResourceServerScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScope)(nil)).Elem()
}

func (i ResourceServerScopeArgs) ToResourceServerScopeOutput() ResourceServerScopeOutput {
	return i.ToResourceServerScopeOutputWithContext(context.Background())
}

func (i ResourceServerScopeArgs) ToResourceServerScopeOutputWithContext(ctx context.Context) ResourceServerScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopeOutput)
}

// ResourceServerScopeArrayInput is an input type that accepts ResourceServerScopeArray and ResourceServerScopeArrayOutput values.
// You can construct a concrete instance of `ResourceServerScopeArrayInput` via:
//
//	ResourceServerScopeArray{ ResourceServerScopeArgs{...} }
type ResourceServerScopeArrayInput interface {
	pulumi.Input

	ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput
	ToResourceServerScopeArrayOutputWithContext(context.Context) ResourceServerScopeArrayOutput
}

type ResourceServerScopeArray []ResourceServerScopeInput

func (ResourceServerScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScope)(nil)).Elem()
}

func (i ResourceServerScopeArray) ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput {
	return i.ToResourceServerScopeArrayOutputWithContext(context.Background())
}

func (i ResourceServerScopeArray) ToResourceServerScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopeArrayOutput)
}

type ResourceServerScopeOutput struct{ *pulumi.OutputState }

func (ResourceServerScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScope)(nil)).Elem()
}

func (o ResourceServerScopeOutput) ToResourceServerScopeOutput() ResourceServerScopeOutput {
	return o
}

func (o ResourceServerScopeOutput) ToResourceServerScopeOutputWithContext(ctx context.Context) ResourceServerScopeOutput {
	return o
}

// Description of the permission (scope).
func (o ResourceServerScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceServerScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.
func (o ResourceServerScopeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceServerScope) string { return v.Value }).(pulumi.StringOutput)
}

type ResourceServerScopeArrayOutput struct{ *pulumi.OutputState }

func (ResourceServerScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScope)(nil)).Elem()
}

func (o ResourceServerScopeArrayOutput) ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput {
	return o
}

func (o ResourceServerScopeArrayOutput) ToResourceServerScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopeArrayOutput {
	return o
}

func (o ResourceServerScopeArrayOutput) Index(i pulumi.IntInput) ResourceServerScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceServerScope {
		return vs[0].([]ResourceServerScope)[vs[1].(int)]
	}).(ResourceServerScopeOutput)
}

type RolePermission struct {
	// Name of the permission (scope).
	Name string `pulumi:"name"`
	// Unique identifier for the resource server.
	ResourceServerIdentifier string `pulumi:"resourceServerIdentifier"`
}

// RolePermissionInput is an input type that accepts RolePermissionArgs and RolePermissionOutput values.
// You can construct a concrete instance of `RolePermissionInput` via:
//
//	RolePermissionArgs{...}
type RolePermissionInput interface {
	pulumi.Input

	ToRolePermissionOutput() RolePermissionOutput
	ToRolePermissionOutputWithContext(context.Context) RolePermissionOutput
}

type RolePermissionArgs struct {
	// Name of the permission (scope).
	Name pulumi.StringInput `pulumi:"name"`
	// Unique identifier for the resource server.
	ResourceServerIdentifier pulumi.StringInput `pulumi:"resourceServerIdentifier"`
}

func (RolePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermission)(nil)).Elem()
}

func (i RolePermissionArgs) ToRolePermissionOutput() RolePermissionOutput {
	return i.ToRolePermissionOutputWithContext(context.Background())
}

func (i RolePermissionArgs) ToRolePermissionOutputWithContext(ctx context.Context) RolePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionOutput)
}

// RolePermissionArrayInput is an input type that accepts RolePermissionArray and RolePermissionArrayOutput values.
// You can construct a concrete instance of `RolePermissionArrayInput` via:
//
//	RolePermissionArray{ RolePermissionArgs{...} }
type RolePermissionArrayInput interface {
	pulumi.Input

	ToRolePermissionArrayOutput() RolePermissionArrayOutput
	ToRolePermissionArrayOutputWithContext(context.Context) RolePermissionArrayOutput
}

type RolePermissionArray []RolePermissionInput

func (RolePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermission)(nil)).Elem()
}

func (i RolePermissionArray) ToRolePermissionArrayOutput() RolePermissionArrayOutput {
	return i.ToRolePermissionArrayOutputWithContext(context.Background())
}

func (i RolePermissionArray) ToRolePermissionArrayOutputWithContext(ctx context.Context) RolePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionArrayOutput)
}

type RolePermissionOutput struct{ *pulumi.OutputState }

func (RolePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermission)(nil)).Elem()
}

func (o RolePermissionOutput) ToRolePermissionOutput() RolePermissionOutput {
	return o
}

func (o RolePermissionOutput) ToRolePermissionOutputWithContext(ctx context.Context) RolePermissionOutput {
	return o
}

// Name of the permission (scope).
func (o RolePermissionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RolePermission) string { return v.Name }).(pulumi.StringOutput)
}

// Unique identifier for the resource server.
func (o RolePermissionOutput) ResourceServerIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v RolePermission) string { return v.ResourceServerIdentifier }).(pulumi.StringOutput)
}

type RolePermissionArrayOutput struct{ *pulumi.OutputState }

func (RolePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermission)(nil)).Elem()
}

func (o RolePermissionArrayOutput) ToRolePermissionArrayOutput() RolePermissionArrayOutput {
	return o
}

func (o RolePermissionArrayOutput) ToRolePermissionArrayOutputWithContext(ctx context.Context) RolePermissionArrayOutput {
	return o
}

func (o RolePermissionArrayOutput) Index(i pulumi.IntInput) RolePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolePermission {
		return vs[0].([]RolePermission)[vs[1].(int)]
	}).(RolePermissionOutput)
}

type TenantChangePassword struct {
	// Indicates whether to use the custom change password page.
	Enabled bool `pulumi:"enabled"`
	// HTML format with supported Liquid syntax. Customized content of the change password page.
	Html string `pulumi:"html"`
}

// TenantChangePasswordInput is an input type that accepts TenantChangePasswordArgs and TenantChangePasswordOutput values.
// You can construct a concrete instance of `TenantChangePasswordInput` via:
//
//	TenantChangePasswordArgs{...}
type TenantChangePasswordInput interface {
	pulumi.Input

	ToTenantChangePasswordOutput() TenantChangePasswordOutput
	ToTenantChangePasswordOutputWithContext(context.Context) TenantChangePasswordOutput
}

type TenantChangePasswordArgs struct {
	// Indicates whether to use the custom change password page.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// HTML format with supported Liquid syntax. Customized content of the change password page.
	Html pulumi.StringInput `pulumi:"html"`
}

func (TenantChangePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantChangePassword)(nil)).Elem()
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordOutput() TenantChangePasswordOutput {
	return i.ToTenantChangePasswordOutputWithContext(context.Background())
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordOutputWithContext(ctx context.Context) TenantChangePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantChangePasswordOutput)
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return i.ToTenantChangePasswordPtrOutputWithContext(context.Background())
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantChangePasswordOutput).ToTenantChangePasswordPtrOutputWithContext(ctx)
}

// TenantChangePasswordPtrInput is an input type that accepts TenantChangePasswordArgs, TenantChangePasswordPtr and TenantChangePasswordPtrOutput values.
// You can construct a concrete instance of `TenantChangePasswordPtrInput` via:
//
//	        TenantChangePasswordArgs{...}
//
//	or:
//
//	        nil
type TenantChangePasswordPtrInput interface {
	pulumi.Input

	ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput
	ToTenantChangePasswordPtrOutputWithContext(context.Context) TenantChangePasswordPtrOutput
}

type tenantChangePasswordPtrType TenantChangePasswordArgs

func TenantChangePasswordPtr(v *TenantChangePasswordArgs) TenantChangePasswordPtrInput {
	return (*tenantChangePasswordPtrType)(v)
}

func (*tenantChangePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantChangePassword)(nil)).Elem()
}

func (i *tenantChangePasswordPtrType) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return i.ToTenantChangePasswordPtrOutputWithContext(context.Background())
}

func (i *tenantChangePasswordPtrType) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantChangePasswordPtrOutput)
}

type TenantChangePasswordOutput struct{ *pulumi.OutputState }

func (TenantChangePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantChangePassword)(nil)).Elem()
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordOutput() TenantChangePasswordOutput {
	return o
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordOutputWithContext(ctx context.Context) TenantChangePasswordOutput {
	return o
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return o.ToTenantChangePasswordPtrOutputWithContext(context.Background())
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantChangePassword) *TenantChangePassword {
		return &v
	}).(TenantChangePasswordPtrOutput)
}

// Indicates whether to use the custom change password page.
func (o TenantChangePasswordOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TenantChangePassword) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// HTML format with supported Liquid syntax. Customized content of the change password page.
func (o TenantChangePasswordOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v TenantChangePassword) string { return v.Html }).(pulumi.StringOutput)
}

type TenantChangePasswordPtrOutput struct{ *pulumi.OutputState }

func (TenantChangePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantChangePassword)(nil)).Elem()
}

func (o TenantChangePasswordPtrOutput) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return o
}

func (o TenantChangePasswordPtrOutput) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return o
}

func (o TenantChangePasswordPtrOutput) Elem() TenantChangePasswordOutput {
	return o.ApplyT(func(v *TenantChangePassword) TenantChangePassword {
		if v != nil {
			return *v
		}
		var ret TenantChangePassword
		return ret
	}).(TenantChangePasswordOutput)
}

// Indicates whether to use the custom change password page.
func (o TenantChangePasswordPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantChangePassword) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// HTML format with supported Liquid syntax. Customized content of the change password page.
func (o TenantChangePasswordPtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantChangePassword) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

type TenantErrorPage struct {
	// HTML format with supported Liquid syntax. Customized content of the error page.
	Html string `pulumi:"html"`
	// Indicates whether to show the link to logs as part of the default error page.
	ShowLogLink bool `pulumi:"showLogLink"`
	// URL to redirect to when an error occurs rather than showing the default error page.
	Url string `pulumi:"url"`
}

// TenantErrorPageInput is an input type that accepts TenantErrorPageArgs and TenantErrorPageOutput values.
// You can construct a concrete instance of `TenantErrorPageInput` via:
//
//	TenantErrorPageArgs{...}
type TenantErrorPageInput interface {
	pulumi.Input

	ToTenantErrorPageOutput() TenantErrorPageOutput
	ToTenantErrorPageOutputWithContext(context.Context) TenantErrorPageOutput
}

type TenantErrorPageArgs struct {
	// HTML format with supported Liquid syntax. Customized content of the error page.
	Html pulumi.StringInput `pulumi:"html"`
	// Indicates whether to show the link to logs as part of the default error page.
	ShowLogLink pulumi.BoolInput `pulumi:"showLogLink"`
	// URL to redirect to when an error occurs rather than showing the default error page.
	Url pulumi.StringInput `pulumi:"url"`
}

func (TenantErrorPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantErrorPage)(nil)).Elem()
}

func (i TenantErrorPageArgs) ToTenantErrorPageOutput() TenantErrorPageOutput {
	return i.ToTenantErrorPageOutputWithContext(context.Background())
}

func (i TenantErrorPageArgs) ToTenantErrorPageOutputWithContext(ctx context.Context) TenantErrorPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantErrorPageOutput)
}

func (i TenantErrorPageArgs) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return i.ToTenantErrorPagePtrOutputWithContext(context.Background())
}

func (i TenantErrorPageArgs) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantErrorPageOutput).ToTenantErrorPagePtrOutputWithContext(ctx)
}

// TenantErrorPagePtrInput is an input type that accepts TenantErrorPageArgs, TenantErrorPagePtr and TenantErrorPagePtrOutput values.
// You can construct a concrete instance of `TenantErrorPagePtrInput` via:
//
//	        TenantErrorPageArgs{...}
//
//	or:
//
//	        nil
type TenantErrorPagePtrInput interface {
	pulumi.Input

	ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput
	ToTenantErrorPagePtrOutputWithContext(context.Context) TenantErrorPagePtrOutput
}

type tenantErrorPagePtrType TenantErrorPageArgs

func TenantErrorPagePtr(v *TenantErrorPageArgs) TenantErrorPagePtrInput {
	return (*tenantErrorPagePtrType)(v)
}

func (*tenantErrorPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantErrorPage)(nil)).Elem()
}

func (i *tenantErrorPagePtrType) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return i.ToTenantErrorPagePtrOutputWithContext(context.Background())
}

func (i *tenantErrorPagePtrType) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantErrorPagePtrOutput)
}

type TenantErrorPageOutput struct{ *pulumi.OutputState }

func (TenantErrorPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantErrorPage)(nil)).Elem()
}

func (o TenantErrorPageOutput) ToTenantErrorPageOutput() TenantErrorPageOutput {
	return o
}

func (o TenantErrorPageOutput) ToTenantErrorPageOutputWithContext(ctx context.Context) TenantErrorPageOutput {
	return o
}

func (o TenantErrorPageOutput) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return o.ToTenantErrorPagePtrOutputWithContext(context.Background())
}

func (o TenantErrorPageOutput) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantErrorPage) *TenantErrorPage {
		return &v
	}).(TenantErrorPagePtrOutput)
}

// HTML format with supported Liquid syntax. Customized content of the error page.
func (o TenantErrorPageOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v TenantErrorPage) string { return v.Html }).(pulumi.StringOutput)
}

// Indicates whether to show the link to logs as part of the default error page.
func (o TenantErrorPageOutput) ShowLogLink() pulumi.BoolOutput {
	return o.ApplyT(func(v TenantErrorPage) bool { return v.ShowLogLink }).(pulumi.BoolOutput)
}

// URL to redirect to when an error occurs rather than showing the default error page.
func (o TenantErrorPageOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v TenantErrorPage) string { return v.Url }).(pulumi.StringOutput)
}

type TenantErrorPagePtrOutput struct{ *pulumi.OutputState }

func (TenantErrorPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantErrorPage)(nil)).Elem()
}

func (o TenantErrorPagePtrOutput) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return o
}

func (o TenantErrorPagePtrOutput) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return o
}

func (o TenantErrorPagePtrOutput) Elem() TenantErrorPageOutput {
	return o.ApplyT(func(v *TenantErrorPage) TenantErrorPage {
		if v != nil {
			return *v
		}
		var ret TenantErrorPage
		return ret
	}).(TenantErrorPageOutput)
}

// HTML format with supported Liquid syntax. Customized content of the error page.
func (o TenantErrorPagePtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantErrorPage) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to show the link to logs as part of the default error page.
func (o TenantErrorPagePtrOutput) ShowLogLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantErrorPage) *bool {
		if v == nil {
			return nil
		}
		return &v.ShowLogLink
	}).(pulumi.BoolPtrOutput)
}

// URL to redirect to when an error occurs rather than showing the default error page.
func (o TenantErrorPagePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantErrorPage) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type TenantFlags struct {
	// Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).
	AllowLegacyDelegationGrantTypes *bool `pulumi:"allowLegacyDelegationGrantTypes"`
	// Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).
	AllowLegacyRoGrantTypes *bool `pulumi:"allowLegacyRoGrantTypes"`
	// If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.
	AllowLegacyTokeninfoEndpoint *bool `pulumi:"allowLegacyTokeninfoEndpoint"`
	// Enables new insights activity page view.
	DashboardInsightsView *bool `pulumi:"dashboardInsightsView"`
	// Enables beta access to log streaming changes.
	DashboardLogStreamsNext *bool `pulumi:"dashboardLogStreamsNext"`
	// Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.
	DisableClickjackProtectionHeaders *bool `pulumi:"disableClickjackProtectionHeaders"`
	// Disables SAML fields map fix for bad mappings with repeated attributes.
	DisableFieldsMapFix *bool `pulumi:"disableFieldsMapFix"`
	// If true, SMS phone numbers will not be obfuscated in Management API GET calls.
	DisableManagementApiSmsObfuscation *bool `pulumi:"disableManagementApiSmsObfuscation"`
	// If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.
	EnableAdfsWaadEmailVerification *bool `pulumi:"enableAdfsWaadEmailVerification"`
	// Indicates whether the APIs section is enabled for the tenant.
	EnableApisSection *bool `pulumi:"enableApisSection"`
	// Indicates whether all current connections should be enabled when a new client is created.
	EnableClientConnections *bool `pulumi:"enableClientConnections"`
	// Indicates whether the tenant allows custom domains in emails.
	EnableCustomDomainInEmails *bool `pulumi:"enableCustomDomainInEmails"`
	// Indicates whether the tenant allows dynamic client registration.
	EnableDynamicClientRegistration *bool `pulumi:"enableDynamicClientRegistration"`
	// Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).
	EnableIdtokenApi2 *bool `pulumi:"enableIdtokenApi2"`
	// Indicates whether to use the older v2 legacy logs search.
	EnableLegacyLogsSearchV2 *bool `pulumi:"enableLegacyLogsSearchV2"`
	// Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).
	EnableLegacyProfile *bool `pulumi:"enableLegacyProfile"`
	// Indicates whether advanced API Authorization scenarios are enabled.
	EnablePipeline2 *bool `pulumi:"enablePipeline2"`
	// Indicates whether the public sign up process shows a `userExists` error if the user already exists.
	EnablePublicSignupUserExistsError *bool `pulumi:"enablePublicSignupUserExistsError"`
	// Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.
	NoDiscloseEnterpriseConnections *bool `pulumi:"noDiscloseEnterpriseConnections"`
	// Delete underlying grant when a refresh token is revoked via the Authentication API.
	RevokeRefreshTokenGrant *bool `pulumi:"revokeRefreshTokenGrant"`
	// Indicates whether the tenant uses Universal Login.
	UniversalLogin *bool `pulumi:"universalLogin"`
	// Indicates whether to use scope descriptions for consent.
	UseScopeDescriptionsForConsent *bool `pulumi:"useScopeDescriptionsForConsent"`
}

// TenantFlagsInput is an input type that accepts TenantFlagsArgs and TenantFlagsOutput values.
// You can construct a concrete instance of `TenantFlagsInput` via:
//
//	TenantFlagsArgs{...}
type TenantFlagsInput interface {
	pulumi.Input

	ToTenantFlagsOutput() TenantFlagsOutput
	ToTenantFlagsOutputWithContext(context.Context) TenantFlagsOutput
}

type TenantFlagsArgs struct {
	// Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).
	AllowLegacyDelegationGrantTypes pulumi.BoolPtrInput `pulumi:"allowLegacyDelegationGrantTypes"`
	// Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).
	AllowLegacyRoGrantTypes pulumi.BoolPtrInput `pulumi:"allowLegacyRoGrantTypes"`
	// If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.
	AllowLegacyTokeninfoEndpoint pulumi.BoolPtrInput `pulumi:"allowLegacyTokeninfoEndpoint"`
	// Enables new insights activity page view.
	DashboardInsightsView pulumi.BoolPtrInput `pulumi:"dashboardInsightsView"`
	// Enables beta access to log streaming changes.
	DashboardLogStreamsNext pulumi.BoolPtrInput `pulumi:"dashboardLogStreamsNext"`
	// Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.
	DisableClickjackProtectionHeaders pulumi.BoolPtrInput `pulumi:"disableClickjackProtectionHeaders"`
	// Disables SAML fields map fix for bad mappings with repeated attributes.
	DisableFieldsMapFix pulumi.BoolPtrInput `pulumi:"disableFieldsMapFix"`
	// If true, SMS phone numbers will not be obfuscated in Management API GET calls.
	DisableManagementApiSmsObfuscation pulumi.BoolPtrInput `pulumi:"disableManagementApiSmsObfuscation"`
	// If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.
	EnableAdfsWaadEmailVerification pulumi.BoolPtrInput `pulumi:"enableAdfsWaadEmailVerification"`
	// Indicates whether the APIs section is enabled for the tenant.
	EnableApisSection pulumi.BoolPtrInput `pulumi:"enableApisSection"`
	// Indicates whether all current connections should be enabled when a new client is created.
	EnableClientConnections pulumi.BoolPtrInput `pulumi:"enableClientConnections"`
	// Indicates whether the tenant allows custom domains in emails.
	EnableCustomDomainInEmails pulumi.BoolPtrInput `pulumi:"enableCustomDomainInEmails"`
	// Indicates whether the tenant allows dynamic client registration.
	EnableDynamicClientRegistration pulumi.BoolPtrInput `pulumi:"enableDynamicClientRegistration"`
	// Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).
	EnableIdtokenApi2 pulumi.BoolPtrInput `pulumi:"enableIdtokenApi2"`
	// Indicates whether to use the older v2 legacy logs search.
	EnableLegacyLogsSearchV2 pulumi.BoolPtrInput `pulumi:"enableLegacyLogsSearchV2"`
	// Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).
	EnableLegacyProfile pulumi.BoolPtrInput `pulumi:"enableLegacyProfile"`
	// Indicates whether advanced API Authorization scenarios are enabled.
	EnablePipeline2 pulumi.BoolPtrInput `pulumi:"enablePipeline2"`
	// Indicates whether the public sign up process shows a `userExists` error if the user already exists.
	EnablePublicSignupUserExistsError pulumi.BoolPtrInput `pulumi:"enablePublicSignupUserExistsError"`
	// Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.
	NoDiscloseEnterpriseConnections pulumi.BoolPtrInput `pulumi:"noDiscloseEnterpriseConnections"`
	// Delete underlying grant when a refresh token is revoked via the Authentication API.
	RevokeRefreshTokenGrant pulumi.BoolPtrInput `pulumi:"revokeRefreshTokenGrant"`
	// Indicates whether the tenant uses Universal Login.
	UniversalLogin pulumi.BoolPtrInput `pulumi:"universalLogin"`
	// Indicates whether to use scope descriptions for consent.
	UseScopeDescriptionsForConsent pulumi.BoolPtrInput `pulumi:"useScopeDescriptionsForConsent"`
}

func (TenantFlagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantFlags)(nil)).Elem()
}

func (i TenantFlagsArgs) ToTenantFlagsOutput() TenantFlagsOutput {
	return i.ToTenantFlagsOutputWithContext(context.Background())
}

func (i TenantFlagsArgs) ToTenantFlagsOutputWithContext(ctx context.Context) TenantFlagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsOutput)
}

func (i TenantFlagsArgs) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return i.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (i TenantFlagsArgs) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsOutput).ToTenantFlagsPtrOutputWithContext(ctx)
}

// TenantFlagsPtrInput is an input type that accepts TenantFlagsArgs, TenantFlagsPtr and TenantFlagsPtrOutput values.
// You can construct a concrete instance of `TenantFlagsPtrInput` via:
//
//	        TenantFlagsArgs{...}
//
//	or:
//
//	        nil
type TenantFlagsPtrInput interface {
	pulumi.Input

	ToTenantFlagsPtrOutput() TenantFlagsPtrOutput
	ToTenantFlagsPtrOutputWithContext(context.Context) TenantFlagsPtrOutput
}

type tenantFlagsPtrType TenantFlagsArgs

func TenantFlagsPtr(v *TenantFlagsArgs) TenantFlagsPtrInput {
	return (*tenantFlagsPtrType)(v)
}

func (*tenantFlagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantFlags)(nil)).Elem()
}

func (i *tenantFlagsPtrType) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return i.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (i *tenantFlagsPtrType) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsPtrOutput)
}

type TenantFlagsOutput struct{ *pulumi.OutputState }

func (TenantFlagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantFlags)(nil)).Elem()
}

func (o TenantFlagsOutput) ToTenantFlagsOutput() TenantFlagsOutput {
	return o
}

func (o TenantFlagsOutput) ToTenantFlagsOutputWithContext(ctx context.Context) TenantFlagsOutput {
	return o
}

func (o TenantFlagsOutput) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return o.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (o TenantFlagsOutput) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantFlags) *TenantFlags {
		return &v
	}).(TenantFlagsPtrOutput)
}

// Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).
func (o TenantFlagsOutput) AllowLegacyDelegationGrantTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.AllowLegacyDelegationGrantTypes }).(pulumi.BoolPtrOutput)
}

// Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).
func (o TenantFlagsOutput) AllowLegacyRoGrantTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.AllowLegacyRoGrantTypes }).(pulumi.BoolPtrOutput)
}

// If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.
func (o TenantFlagsOutput) AllowLegacyTokeninfoEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.AllowLegacyTokeninfoEndpoint }).(pulumi.BoolPtrOutput)
}

// Enables new insights activity page view.
func (o TenantFlagsOutput) DashboardInsightsView() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DashboardInsightsView }).(pulumi.BoolPtrOutput)
}

// Enables beta access to log streaming changes.
func (o TenantFlagsOutput) DashboardLogStreamsNext() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DashboardLogStreamsNext }).(pulumi.BoolPtrOutput)
}

// Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.
func (o TenantFlagsOutput) DisableClickjackProtectionHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DisableClickjackProtectionHeaders }).(pulumi.BoolPtrOutput)
}

// Disables SAML fields map fix for bad mappings with repeated attributes.
func (o TenantFlagsOutput) DisableFieldsMapFix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DisableFieldsMapFix }).(pulumi.BoolPtrOutput)
}

// If true, SMS phone numbers will not be obfuscated in Management API GET calls.
func (o TenantFlagsOutput) DisableManagementApiSmsObfuscation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DisableManagementApiSmsObfuscation }).(pulumi.BoolPtrOutput)
}

// If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.
func (o TenantFlagsOutput) EnableAdfsWaadEmailVerification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableAdfsWaadEmailVerification }).(pulumi.BoolPtrOutput)
}

// Indicates whether the APIs section is enabled for the tenant.
func (o TenantFlagsOutput) EnableApisSection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableApisSection }).(pulumi.BoolPtrOutput)
}

// Indicates whether all current connections should be enabled when a new client is created.
func (o TenantFlagsOutput) EnableClientConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableClientConnections }).(pulumi.BoolPtrOutput)
}

// Indicates whether the tenant allows custom domains in emails.
func (o TenantFlagsOutput) EnableCustomDomainInEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableCustomDomainInEmails }).(pulumi.BoolPtrOutput)
}

// Indicates whether the tenant allows dynamic client registration.
func (o TenantFlagsOutput) EnableDynamicClientRegistration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableDynamicClientRegistration }).(pulumi.BoolPtrOutput)
}

// Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).
func (o TenantFlagsOutput) EnableIdtokenApi2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableIdtokenApi2 }).(pulumi.BoolPtrOutput)
}

// Indicates whether to use the older v2 legacy logs search.
func (o TenantFlagsOutput) EnableLegacyLogsSearchV2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableLegacyLogsSearchV2 }).(pulumi.BoolPtrOutput)
}

// Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).
func (o TenantFlagsOutput) EnableLegacyProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableLegacyProfile }).(pulumi.BoolPtrOutput)
}

// Indicates whether advanced API Authorization scenarios are enabled.
func (o TenantFlagsOutput) EnablePipeline2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnablePipeline2 }).(pulumi.BoolPtrOutput)
}

// Indicates whether the public sign up process shows a `userExists` error if the user already exists.
func (o TenantFlagsOutput) EnablePublicSignupUserExistsError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnablePublicSignupUserExistsError }).(pulumi.BoolPtrOutput)
}

// Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.
func (o TenantFlagsOutput) NoDiscloseEnterpriseConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.NoDiscloseEnterpriseConnections }).(pulumi.BoolPtrOutput)
}

// Delete underlying grant when a refresh token is revoked via the Authentication API.
func (o TenantFlagsOutput) RevokeRefreshTokenGrant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.RevokeRefreshTokenGrant }).(pulumi.BoolPtrOutput)
}

// Indicates whether the tenant uses Universal Login.
func (o TenantFlagsOutput) UniversalLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.UniversalLogin }).(pulumi.BoolPtrOutput)
}

// Indicates whether to use scope descriptions for consent.
func (o TenantFlagsOutput) UseScopeDescriptionsForConsent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.UseScopeDescriptionsForConsent }).(pulumi.BoolPtrOutput)
}

type TenantFlagsPtrOutput struct{ *pulumi.OutputState }

func (TenantFlagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantFlags)(nil)).Elem()
}

func (o TenantFlagsPtrOutput) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return o
}

func (o TenantFlagsPtrOutput) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return o
}

func (o TenantFlagsPtrOutput) Elem() TenantFlagsOutput {
	return o.ApplyT(func(v *TenantFlags) TenantFlags {
		if v != nil {
			return *v
		}
		var ret TenantFlags
		return ret
	}).(TenantFlagsOutput)
}

// Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).
func (o TenantFlagsPtrOutput) AllowLegacyDelegationGrantTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.AllowLegacyDelegationGrantTypes
	}).(pulumi.BoolPtrOutput)
}

// Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).
func (o TenantFlagsPtrOutput) AllowLegacyRoGrantTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.AllowLegacyRoGrantTypes
	}).(pulumi.BoolPtrOutput)
}

// If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.
func (o TenantFlagsPtrOutput) AllowLegacyTokeninfoEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.AllowLegacyTokeninfoEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Enables new insights activity page view.
func (o TenantFlagsPtrOutput) DashboardInsightsView() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DashboardInsightsView
	}).(pulumi.BoolPtrOutput)
}

// Enables beta access to log streaming changes.
func (o TenantFlagsPtrOutput) DashboardLogStreamsNext() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DashboardLogStreamsNext
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.
func (o TenantFlagsPtrOutput) DisableClickjackProtectionHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DisableClickjackProtectionHeaders
	}).(pulumi.BoolPtrOutput)
}

// Disables SAML fields map fix for bad mappings with repeated attributes.
func (o TenantFlagsPtrOutput) DisableFieldsMapFix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DisableFieldsMapFix
	}).(pulumi.BoolPtrOutput)
}

// If true, SMS phone numbers will not be obfuscated in Management API GET calls.
func (o TenantFlagsPtrOutput) DisableManagementApiSmsObfuscation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DisableManagementApiSmsObfuscation
	}).(pulumi.BoolPtrOutput)
}

// If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.
func (o TenantFlagsPtrOutput) EnableAdfsWaadEmailVerification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAdfsWaadEmailVerification
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the APIs section is enabled for the tenant.
func (o TenantFlagsPtrOutput) EnableApisSection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableApisSection
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether all current connections should be enabled when a new client is created.
func (o TenantFlagsPtrOutput) EnableClientConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableClientConnections
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the tenant allows custom domains in emails.
func (o TenantFlagsPtrOutput) EnableCustomDomainInEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCustomDomainInEmails
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the tenant allows dynamic client registration.
func (o TenantFlagsPtrOutput) EnableDynamicClientRegistration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDynamicClientRegistration
	}).(pulumi.BoolPtrOutput)
}

// Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).
func (o TenantFlagsPtrOutput) EnableIdtokenApi2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIdtokenApi2
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to use the older v2 legacy logs search.
func (o TenantFlagsPtrOutput) EnableLegacyLogsSearchV2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableLegacyLogsSearchV2
	}).(pulumi.BoolPtrOutput)
}

// Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).
func (o TenantFlagsPtrOutput) EnableLegacyProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableLegacyProfile
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether advanced API Authorization scenarios are enabled.
func (o TenantFlagsPtrOutput) EnablePipeline2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePipeline2
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the public sign up process shows a `userExists` error if the user already exists.
func (o TenantFlagsPtrOutput) EnablePublicSignupUserExistsError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePublicSignupUserExistsError
	}).(pulumi.BoolPtrOutput)
}

// Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.
func (o TenantFlagsPtrOutput) NoDiscloseEnterpriseConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.NoDiscloseEnterpriseConnections
	}).(pulumi.BoolPtrOutput)
}

// Delete underlying grant when a refresh token is revoked via the Authentication API.
func (o TenantFlagsPtrOutput) RevokeRefreshTokenGrant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.RevokeRefreshTokenGrant
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the tenant uses Universal Login.
func (o TenantFlagsPtrOutput) UniversalLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.UniversalLogin
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to use scope descriptions for consent.
func (o TenantFlagsPtrOutput) UseScopeDescriptionsForConsent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.UseScopeDescriptionsForConsent
	}).(pulumi.BoolPtrOutput)
}

type TenantGuardianMfaPage struct {
	// Indicates whether to use the custom Guardian page.
	Enabled bool `pulumi:"enabled"`
	// HTML format with supported Liquid syntax. Customized content of the Guardian page.
	Html string `pulumi:"html"`
}

// TenantGuardianMfaPageInput is an input type that accepts TenantGuardianMfaPageArgs and TenantGuardianMfaPageOutput values.
// You can construct a concrete instance of `TenantGuardianMfaPageInput` via:
//
//	TenantGuardianMfaPageArgs{...}
type TenantGuardianMfaPageInput interface {
	pulumi.Input

	ToTenantGuardianMfaPageOutput() TenantGuardianMfaPageOutput
	ToTenantGuardianMfaPageOutputWithContext(context.Context) TenantGuardianMfaPageOutput
}

type TenantGuardianMfaPageArgs struct {
	// Indicates whether to use the custom Guardian page.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// HTML format with supported Liquid syntax. Customized content of the Guardian page.
	Html pulumi.StringInput `pulumi:"html"`
}

func (TenantGuardianMfaPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantGuardianMfaPage)(nil)).Elem()
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPageOutput() TenantGuardianMfaPageOutput {
	return i.ToTenantGuardianMfaPageOutputWithContext(context.Background())
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPageOutputWithContext(ctx context.Context) TenantGuardianMfaPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantGuardianMfaPageOutput)
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return i.ToTenantGuardianMfaPagePtrOutputWithContext(context.Background())
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantGuardianMfaPageOutput).ToTenantGuardianMfaPagePtrOutputWithContext(ctx)
}

// TenantGuardianMfaPagePtrInput is an input type that accepts TenantGuardianMfaPageArgs, TenantGuardianMfaPagePtr and TenantGuardianMfaPagePtrOutput values.
// You can construct a concrete instance of `TenantGuardianMfaPagePtrInput` via:
//
//	        TenantGuardianMfaPageArgs{...}
//
//	or:
//
//	        nil
type TenantGuardianMfaPagePtrInput interface {
	pulumi.Input

	ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput
	ToTenantGuardianMfaPagePtrOutputWithContext(context.Context) TenantGuardianMfaPagePtrOutput
}

type tenantGuardianMfaPagePtrType TenantGuardianMfaPageArgs

func TenantGuardianMfaPagePtr(v *TenantGuardianMfaPageArgs) TenantGuardianMfaPagePtrInput {
	return (*tenantGuardianMfaPagePtrType)(v)
}

func (*tenantGuardianMfaPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantGuardianMfaPage)(nil)).Elem()
}

func (i *tenantGuardianMfaPagePtrType) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return i.ToTenantGuardianMfaPagePtrOutputWithContext(context.Background())
}

func (i *tenantGuardianMfaPagePtrType) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantGuardianMfaPagePtrOutput)
}

type TenantGuardianMfaPageOutput struct{ *pulumi.OutputState }

func (TenantGuardianMfaPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantGuardianMfaPage)(nil)).Elem()
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPageOutput() TenantGuardianMfaPageOutput {
	return o
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPageOutputWithContext(ctx context.Context) TenantGuardianMfaPageOutput {
	return o
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return o.ToTenantGuardianMfaPagePtrOutputWithContext(context.Background())
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantGuardianMfaPage) *TenantGuardianMfaPage {
		return &v
	}).(TenantGuardianMfaPagePtrOutput)
}

// Indicates whether to use the custom Guardian page.
func (o TenantGuardianMfaPageOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TenantGuardianMfaPage) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// HTML format with supported Liquid syntax. Customized content of the Guardian page.
func (o TenantGuardianMfaPageOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v TenantGuardianMfaPage) string { return v.Html }).(pulumi.StringOutput)
}

type TenantGuardianMfaPagePtrOutput struct{ *pulumi.OutputState }

func (TenantGuardianMfaPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantGuardianMfaPage)(nil)).Elem()
}

func (o TenantGuardianMfaPagePtrOutput) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return o
}

func (o TenantGuardianMfaPagePtrOutput) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return o
}

func (o TenantGuardianMfaPagePtrOutput) Elem() TenantGuardianMfaPageOutput {
	return o.ApplyT(func(v *TenantGuardianMfaPage) TenantGuardianMfaPage {
		if v != nil {
			return *v
		}
		var ret TenantGuardianMfaPage
		return ret
	}).(TenantGuardianMfaPageOutput)
}

// Indicates whether to use the custom Guardian page.
func (o TenantGuardianMfaPagePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantGuardianMfaPage) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// HTML format with supported Liquid syntax. Customized content of the Guardian page.
func (o TenantGuardianMfaPagePtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantGuardianMfaPage) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

type TenantSessionCookie struct {
	// Behavior of tenant session cookie. Accepts either "persistent" or "non-persistent".
	Mode *string `pulumi:"mode"`
}

// TenantSessionCookieInput is an input type that accepts TenantSessionCookieArgs and TenantSessionCookieOutput values.
// You can construct a concrete instance of `TenantSessionCookieInput` via:
//
//	TenantSessionCookieArgs{...}
type TenantSessionCookieInput interface {
	pulumi.Input

	ToTenantSessionCookieOutput() TenantSessionCookieOutput
	ToTenantSessionCookieOutputWithContext(context.Context) TenantSessionCookieOutput
}

type TenantSessionCookieArgs struct {
	// Behavior of tenant session cookie. Accepts either "persistent" or "non-persistent".
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (TenantSessionCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantSessionCookie)(nil)).Elem()
}

func (i TenantSessionCookieArgs) ToTenantSessionCookieOutput() TenantSessionCookieOutput {
	return i.ToTenantSessionCookieOutputWithContext(context.Background())
}

func (i TenantSessionCookieArgs) ToTenantSessionCookieOutputWithContext(ctx context.Context) TenantSessionCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantSessionCookieOutput)
}

func (i TenantSessionCookieArgs) ToTenantSessionCookiePtrOutput() TenantSessionCookiePtrOutput {
	return i.ToTenantSessionCookiePtrOutputWithContext(context.Background())
}

func (i TenantSessionCookieArgs) ToTenantSessionCookiePtrOutputWithContext(ctx context.Context) TenantSessionCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantSessionCookieOutput).ToTenantSessionCookiePtrOutputWithContext(ctx)
}

// TenantSessionCookiePtrInput is an input type that accepts TenantSessionCookieArgs, TenantSessionCookiePtr and TenantSessionCookiePtrOutput values.
// You can construct a concrete instance of `TenantSessionCookiePtrInput` via:
//
//	        TenantSessionCookieArgs{...}
//
//	or:
//
//	        nil
type TenantSessionCookiePtrInput interface {
	pulumi.Input

	ToTenantSessionCookiePtrOutput() TenantSessionCookiePtrOutput
	ToTenantSessionCookiePtrOutputWithContext(context.Context) TenantSessionCookiePtrOutput
}

type tenantSessionCookiePtrType TenantSessionCookieArgs

func TenantSessionCookiePtr(v *TenantSessionCookieArgs) TenantSessionCookiePtrInput {
	return (*tenantSessionCookiePtrType)(v)
}

func (*tenantSessionCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantSessionCookie)(nil)).Elem()
}

func (i *tenantSessionCookiePtrType) ToTenantSessionCookiePtrOutput() TenantSessionCookiePtrOutput {
	return i.ToTenantSessionCookiePtrOutputWithContext(context.Background())
}

func (i *tenantSessionCookiePtrType) ToTenantSessionCookiePtrOutputWithContext(ctx context.Context) TenantSessionCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantSessionCookiePtrOutput)
}

type TenantSessionCookieOutput struct{ *pulumi.OutputState }

func (TenantSessionCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantSessionCookie)(nil)).Elem()
}

func (o TenantSessionCookieOutput) ToTenantSessionCookieOutput() TenantSessionCookieOutput {
	return o
}

func (o TenantSessionCookieOutput) ToTenantSessionCookieOutputWithContext(ctx context.Context) TenantSessionCookieOutput {
	return o
}

func (o TenantSessionCookieOutput) ToTenantSessionCookiePtrOutput() TenantSessionCookiePtrOutput {
	return o.ToTenantSessionCookiePtrOutputWithContext(context.Background())
}

func (o TenantSessionCookieOutput) ToTenantSessionCookiePtrOutputWithContext(ctx context.Context) TenantSessionCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantSessionCookie) *TenantSessionCookie {
		return &v
	}).(TenantSessionCookiePtrOutput)
}

// Behavior of tenant session cookie. Accepts either "persistent" or "non-persistent".
func (o TenantSessionCookieOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantSessionCookie) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type TenantSessionCookiePtrOutput struct{ *pulumi.OutputState }

func (TenantSessionCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantSessionCookie)(nil)).Elem()
}

func (o TenantSessionCookiePtrOutput) ToTenantSessionCookiePtrOutput() TenantSessionCookiePtrOutput {
	return o
}

func (o TenantSessionCookiePtrOutput) ToTenantSessionCookiePtrOutputWithContext(ctx context.Context) TenantSessionCookiePtrOutput {
	return o
}

func (o TenantSessionCookiePtrOutput) Elem() TenantSessionCookieOutput {
	return o.ApplyT(func(v *TenantSessionCookie) TenantSessionCookie {
		if v != nil {
			return *v
		}
		var ret TenantSessionCookie
		return ret
	}).(TenantSessionCookieOutput)
}

// Behavior of tenant session cookie. Accepts either "persistent" or "non-persistent".
func (o TenantSessionCookiePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantSessionCookie) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type TenantUniversalLogin struct {
	// Configuration settings for Universal Login colors.
	Colors *TenantUniversalLoginColors `pulumi:"colors"`
}

// TenantUniversalLoginInput is an input type that accepts TenantUniversalLoginArgs and TenantUniversalLoginOutput values.
// You can construct a concrete instance of `TenantUniversalLoginInput` via:
//
//	TenantUniversalLoginArgs{...}
type TenantUniversalLoginInput interface {
	pulumi.Input

	ToTenantUniversalLoginOutput() TenantUniversalLoginOutput
	ToTenantUniversalLoginOutputWithContext(context.Context) TenantUniversalLoginOutput
}

type TenantUniversalLoginArgs struct {
	// Configuration settings for Universal Login colors.
	Colors TenantUniversalLoginColorsPtrInput `pulumi:"colors"`
}

func (TenantUniversalLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLogin)(nil)).Elem()
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginOutput() TenantUniversalLoginOutput {
	return i.ToTenantUniversalLoginOutputWithContext(context.Background())
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginOutputWithContext(ctx context.Context) TenantUniversalLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginOutput)
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return i.ToTenantUniversalLoginPtrOutputWithContext(context.Background())
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginOutput).ToTenantUniversalLoginPtrOutputWithContext(ctx)
}

// TenantUniversalLoginPtrInput is an input type that accepts TenantUniversalLoginArgs, TenantUniversalLoginPtr and TenantUniversalLoginPtrOutput values.
// You can construct a concrete instance of `TenantUniversalLoginPtrInput` via:
//
//	        TenantUniversalLoginArgs{...}
//
//	or:
//
//	        nil
type TenantUniversalLoginPtrInput interface {
	pulumi.Input

	ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput
	ToTenantUniversalLoginPtrOutputWithContext(context.Context) TenantUniversalLoginPtrOutput
}

type tenantUniversalLoginPtrType TenantUniversalLoginArgs

func TenantUniversalLoginPtr(v *TenantUniversalLoginArgs) TenantUniversalLoginPtrInput {
	return (*tenantUniversalLoginPtrType)(v)
}

func (*tenantUniversalLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLogin)(nil)).Elem()
}

func (i *tenantUniversalLoginPtrType) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return i.ToTenantUniversalLoginPtrOutputWithContext(context.Background())
}

func (i *tenantUniversalLoginPtrType) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginPtrOutput)
}

type TenantUniversalLoginOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLogin)(nil)).Elem()
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginOutput() TenantUniversalLoginOutput {
	return o
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginOutputWithContext(ctx context.Context) TenantUniversalLoginOutput {
	return o
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return o.ToTenantUniversalLoginPtrOutputWithContext(context.Background())
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantUniversalLogin) *TenantUniversalLogin {
		return &v
	}).(TenantUniversalLoginPtrOutput)
}

// Configuration settings for Universal Login colors.
func (o TenantUniversalLoginOutput) Colors() TenantUniversalLoginColorsPtrOutput {
	return o.ApplyT(func(v TenantUniversalLogin) *TenantUniversalLoginColors { return v.Colors }).(TenantUniversalLoginColorsPtrOutput)
}

type TenantUniversalLoginPtrOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLogin)(nil)).Elem()
}

func (o TenantUniversalLoginPtrOutput) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return o
}

func (o TenantUniversalLoginPtrOutput) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return o
}

func (o TenantUniversalLoginPtrOutput) Elem() TenantUniversalLoginOutput {
	return o.ApplyT(func(v *TenantUniversalLogin) TenantUniversalLogin {
		if v != nil {
			return *v
		}
		var ret TenantUniversalLogin
		return ret
	}).(TenantUniversalLoginOutput)
}

// Configuration settings for Universal Login colors.
func (o TenantUniversalLoginPtrOutput) Colors() TenantUniversalLoginColorsPtrOutput {
	return o.ApplyT(func(v *TenantUniversalLogin) *TenantUniversalLoginColors {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TenantUniversalLoginColorsPtrOutput)
}

type TenantUniversalLoginColors struct {
	PageBackground *string `pulumi:"pageBackground"`
	Primary        *string `pulumi:"primary"`
}

// TenantUniversalLoginColorsInput is an input type that accepts TenantUniversalLoginColorsArgs and TenantUniversalLoginColorsOutput values.
// You can construct a concrete instance of `TenantUniversalLoginColorsInput` via:
//
//	TenantUniversalLoginColorsArgs{...}
type TenantUniversalLoginColorsInput interface {
	pulumi.Input

	ToTenantUniversalLoginColorsOutput() TenantUniversalLoginColorsOutput
	ToTenantUniversalLoginColorsOutputWithContext(context.Context) TenantUniversalLoginColorsOutput
}

type TenantUniversalLoginColorsArgs struct {
	PageBackground pulumi.StringPtrInput `pulumi:"pageBackground"`
	Primary        pulumi.StringPtrInput `pulumi:"primary"`
}

func (TenantUniversalLoginColorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLoginColors)(nil)).Elem()
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsOutput() TenantUniversalLoginColorsOutput {
	return i.ToTenantUniversalLoginColorsOutputWithContext(context.Background())
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsOutputWithContext(ctx context.Context) TenantUniversalLoginColorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginColorsOutput)
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return i.ToTenantUniversalLoginColorsPtrOutputWithContext(context.Background())
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginColorsOutput).ToTenantUniversalLoginColorsPtrOutputWithContext(ctx)
}

// TenantUniversalLoginColorsPtrInput is an input type that accepts TenantUniversalLoginColorsArgs, TenantUniversalLoginColorsPtr and TenantUniversalLoginColorsPtrOutput values.
// You can construct a concrete instance of `TenantUniversalLoginColorsPtrInput` via:
//
//	        TenantUniversalLoginColorsArgs{...}
//
//	or:
//
//	        nil
type TenantUniversalLoginColorsPtrInput interface {
	pulumi.Input

	ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput
	ToTenantUniversalLoginColorsPtrOutputWithContext(context.Context) TenantUniversalLoginColorsPtrOutput
}

type tenantUniversalLoginColorsPtrType TenantUniversalLoginColorsArgs

func TenantUniversalLoginColorsPtr(v *TenantUniversalLoginColorsArgs) TenantUniversalLoginColorsPtrInput {
	return (*tenantUniversalLoginColorsPtrType)(v)
}

func (*tenantUniversalLoginColorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLoginColors)(nil)).Elem()
}

func (i *tenantUniversalLoginColorsPtrType) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return i.ToTenantUniversalLoginColorsPtrOutputWithContext(context.Background())
}

func (i *tenantUniversalLoginColorsPtrType) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginColorsPtrOutput)
}

type TenantUniversalLoginColorsOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginColorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLoginColors)(nil)).Elem()
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsOutput() TenantUniversalLoginColorsOutput {
	return o
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsOutputWithContext(ctx context.Context) TenantUniversalLoginColorsOutput {
	return o
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return o.ToTenantUniversalLoginColorsPtrOutputWithContext(context.Background())
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantUniversalLoginColors) *TenantUniversalLoginColors {
		return &v
	}).(TenantUniversalLoginColorsPtrOutput)
}

func (o TenantUniversalLoginColorsOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantUniversalLoginColors) *string { return v.PageBackground }).(pulumi.StringPtrOutput)
}

func (o TenantUniversalLoginColorsOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantUniversalLoginColors) *string { return v.Primary }).(pulumi.StringPtrOutput)
}

type TenantUniversalLoginColorsPtrOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginColorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLoginColors)(nil)).Elem()
}

func (o TenantUniversalLoginColorsPtrOutput) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return o
}

func (o TenantUniversalLoginColorsPtrOutput) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return o
}

func (o TenantUniversalLoginColorsPtrOutput) Elem() TenantUniversalLoginColorsOutput {
	return o.ApplyT(func(v *TenantUniversalLoginColors) TenantUniversalLoginColors {
		if v != nil {
			return *v
		}
		var ret TenantUniversalLoginColors
		return ret
	}).(TenantUniversalLoginColorsOutput)
}

func (o TenantUniversalLoginColorsPtrOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantUniversalLoginColors) *string {
		if v == nil {
			return nil
		}
		return v.PageBackground
	}).(pulumi.StringPtrOutput)
}

func (o TenantUniversalLoginColorsPtrOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantUniversalLoginColors) *string {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.StringPtrOutput)
}

type TriggerBindingAction struct {
	// The name of an action.
	DisplayName string `pulumi:"displayName"`
	// Action ID.
	Id string `pulumi:"id"`
}

// TriggerBindingActionInput is an input type that accepts TriggerBindingActionArgs and TriggerBindingActionOutput values.
// You can construct a concrete instance of `TriggerBindingActionInput` via:
//
//	TriggerBindingActionArgs{...}
type TriggerBindingActionInput interface {
	pulumi.Input

	ToTriggerBindingActionOutput() TriggerBindingActionOutput
	ToTriggerBindingActionOutputWithContext(context.Context) TriggerBindingActionOutput
}

type TriggerBindingActionArgs struct {
	// The name of an action.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Action ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (TriggerBindingActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBindingAction)(nil)).Elem()
}

func (i TriggerBindingActionArgs) ToTriggerBindingActionOutput() TriggerBindingActionOutput {
	return i.ToTriggerBindingActionOutputWithContext(context.Background())
}

func (i TriggerBindingActionArgs) ToTriggerBindingActionOutputWithContext(ctx context.Context) TriggerBindingActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBindingActionOutput)
}

// TriggerBindingActionArrayInput is an input type that accepts TriggerBindingActionArray and TriggerBindingActionArrayOutput values.
// You can construct a concrete instance of `TriggerBindingActionArrayInput` via:
//
//	TriggerBindingActionArray{ TriggerBindingActionArgs{...} }
type TriggerBindingActionArrayInput interface {
	pulumi.Input

	ToTriggerBindingActionArrayOutput() TriggerBindingActionArrayOutput
	ToTriggerBindingActionArrayOutputWithContext(context.Context) TriggerBindingActionArrayOutput
}

type TriggerBindingActionArray []TriggerBindingActionInput

func (TriggerBindingActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBindingAction)(nil)).Elem()
}

func (i TriggerBindingActionArray) ToTriggerBindingActionArrayOutput() TriggerBindingActionArrayOutput {
	return i.ToTriggerBindingActionArrayOutputWithContext(context.Background())
}

func (i TriggerBindingActionArray) ToTriggerBindingActionArrayOutputWithContext(ctx context.Context) TriggerBindingActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerBindingActionArrayOutput)
}

type TriggerBindingActionOutput struct{ *pulumi.OutputState }

func (TriggerBindingActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerBindingAction)(nil)).Elem()
}

func (o TriggerBindingActionOutput) ToTriggerBindingActionOutput() TriggerBindingActionOutput {
	return o
}

func (o TriggerBindingActionOutput) ToTriggerBindingActionOutputWithContext(ctx context.Context) TriggerBindingActionOutput {
	return o
}

// The name of an action.
func (o TriggerBindingActionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBindingAction) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Action ID.
func (o TriggerBindingActionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerBindingAction) string { return v.Id }).(pulumi.StringOutput)
}

type TriggerBindingActionArrayOutput struct{ *pulumi.OutputState }

func (TriggerBindingActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerBindingAction)(nil)).Elem()
}

func (o TriggerBindingActionArrayOutput) ToTriggerBindingActionArrayOutput() TriggerBindingActionArrayOutput {
	return o
}

func (o TriggerBindingActionArrayOutput) ToTriggerBindingActionArrayOutputWithContext(ctx context.Context) TriggerBindingActionArrayOutput {
	return o
}

func (o TriggerBindingActionArrayOutput) Index(i pulumi.IntInput) TriggerBindingActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerBindingAction {
		return vs[0].([]TriggerBindingAction)[vs[1].(int)]
	}).(TriggerBindingActionOutput)
}

type GetClientAddon struct {
	Aws                  map[string]interface{} `pulumi:"aws"`
	AzureBlob            map[string]interface{} `pulumi:"azureBlob"`
	AzureSb              map[string]interface{} `pulumi:"azureSb"`
	Box                  map[string]interface{} `pulumi:"box"`
	Cloudbees            map[string]interface{} `pulumi:"cloudbees"`
	Concur               map[string]interface{} `pulumi:"concur"`
	Dropbox              map[string]interface{} `pulumi:"dropbox"`
	Echosign             map[string]interface{} `pulumi:"echosign"`
	Egnyte               map[string]interface{} `pulumi:"egnyte"`
	Firebase             map[string]interface{} `pulumi:"firebase"`
	Layer                map[string]interface{} `pulumi:"layer"`
	Mscrm                map[string]interface{} `pulumi:"mscrm"`
	Newrelic             map[string]interface{} `pulumi:"newrelic"`
	Office365            map[string]interface{} `pulumi:"office365"`
	Rms                  map[string]interface{} `pulumi:"rms"`
	Salesforce           map[string]interface{} `pulumi:"salesforce"`
	SalesforceApi        map[string]interface{} `pulumi:"salesforceApi"`
	SalesforceSandboxApi map[string]interface{} `pulumi:"salesforceSandboxApi"`
	Samlps               []GetClientAddonSamlp  `pulumi:"samlps"`
	SapApi               map[string]interface{} `pulumi:"sapApi"`
	Sentry               map[string]interface{} `pulumi:"sentry"`
	Sharepoint           map[string]interface{} `pulumi:"sharepoint"`
	Slack                map[string]interface{} `pulumi:"slack"`
	Springcm             map[string]interface{} `pulumi:"springcm"`
	Wams                 map[string]interface{} `pulumi:"wams"`
	Wsfed                map[string]interface{} `pulumi:"wsfed"`
	Zendesk              map[string]interface{} `pulumi:"zendesk"`
	Zoom                 map[string]interface{} `pulumi:"zoom"`
}

// GetClientAddonInput is an input type that accepts GetClientAddonArgs and GetClientAddonOutput values.
// You can construct a concrete instance of `GetClientAddonInput` via:
//
//	GetClientAddonArgs{...}
type GetClientAddonInput interface {
	pulumi.Input

	ToGetClientAddonOutput() GetClientAddonOutput
	ToGetClientAddonOutputWithContext(context.Context) GetClientAddonOutput
}

type GetClientAddonArgs struct {
	Aws                  pulumi.MapInput               `pulumi:"aws"`
	AzureBlob            pulumi.MapInput               `pulumi:"azureBlob"`
	AzureSb              pulumi.MapInput               `pulumi:"azureSb"`
	Box                  pulumi.MapInput               `pulumi:"box"`
	Cloudbees            pulumi.MapInput               `pulumi:"cloudbees"`
	Concur               pulumi.MapInput               `pulumi:"concur"`
	Dropbox              pulumi.MapInput               `pulumi:"dropbox"`
	Echosign             pulumi.MapInput               `pulumi:"echosign"`
	Egnyte               pulumi.MapInput               `pulumi:"egnyte"`
	Firebase             pulumi.MapInput               `pulumi:"firebase"`
	Layer                pulumi.MapInput               `pulumi:"layer"`
	Mscrm                pulumi.MapInput               `pulumi:"mscrm"`
	Newrelic             pulumi.MapInput               `pulumi:"newrelic"`
	Office365            pulumi.MapInput               `pulumi:"office365"`
	Rms                  pulumi.MapInput               `pulumi:"rms"`
	Salesforce           pulumi.MapInput               `pulumi:"salesforce"`
	SalesforceApi        pulumi.MapInput               `pulumi:"salesforceApi"`
	SalesforceSandboxApi pulumi.MapInput               `pulumi:"salesforceSandboxApi"`
	Samlps               GetClientAddonSamlpArrayInput `pulumi:"samlps"`
	SapApi               pulumi.MapInput               `pulumi:"sapApi"`
	Sentry               pulumi.MapInput               `pulumi:"sentry"`
	Sharepoint           pulumi.MapInput               `pulumi:"sharepoint"`
	Slack                pulumi.MapInput               `pulumi:"slack"`
	Springcm             pulumi.MapInput               `pulumi:"springcm"`
	Wams                 pulumi.MapInput               `pulumi:"wams"`
	Wsfed                pulumi.MapInput               `pulumi:"wsfed"`
	Zendesk              pulumi.MapInput               `pulumi:"zendesk"`
	Zoom                 pulumi.MapInput               `pulumi:"zoom"`
}

func (GetClientAddonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddon)(nil)).Elem()
}

func (i GetClientAddonArgs) ToGetClientAddonOutput() GetClientAddonOutput {
	return i.ToGetClientAddonOutputWithContext(context.Background())
}

func (i GetClientAddonArgs) ToGetClientAddonOutputWithContext(ctx context.Context) GetClientAddonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonOutput)
}

// GetClientAddonArrayInput is an input type that accepts GetClientAddonArray and GetClientAddonArrayOutput values.
// You can construct a concrete instance of `GetClientAddonArrayInput` via:
//
//	GetClientAddonArray{ GetClientAddonArgs{...} }
type GetClientAddonArrayInput interface {
	pulumi.Input

	ToGetClientAddonArrayOutput() GetClientAddonArrayOutput
	ToGetClientAddonArrayOutputWithContext(context.Context) GetClientAddonArrayOutput
}

type GetClientAddonArray []GetClientAddonInput

func (GetClientAddonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddon)(nil)).Elem()
}

func (i GetClientAddonArray) ToGetClientAddonArrayOutput() GetClientAddonArrayOutput {
	return i.ToGetClientAddonArrayOutputWithContext(context.Background())
}

func (i GetClientAddonArray) ToGetClientAddonArrayOutputWithContext(ctx context.Context) GetClientAddonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonArrayOutput)
}

type GetClientAddonOutput struct{ *pulumi.OutputState }

func (GetClientAddonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddon)(nil)).Elem()
}

func (o GetClientAddonOutput) ToGetClientAddonOutput() GetClientAddonOutput {
	return o
}

func (o GetClientAddonOutput) ToGetClientAddonOutputWithContext(ctx context.Context) GetClientAddonOutput {
	return o
}

func (o GetClientAddonOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Aws }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.AzureBlob }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.AzureSb }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Box }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Cloudbees }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Concur }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Dropbox }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Echosign }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Egnyte }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Firebase }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Layer }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Mscrm }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Newrelic }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Office365 }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Rms }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Salesforce }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.SalesforceApi }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.SalesforceSandboxApi }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Samlps() GetClientAddonSamlpArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSamlp { return v.Samlps }).(GetClientAddonSamlpArrayOutput)
}

func (o GetClientAddonOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.SapApi }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Sentry }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Sharepoint }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Slack }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Springcm }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Wams }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Wsfed }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Zendesk }).(pulumi.MapOutput)
}

func (o GetClientAddonOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddon) map[string]interface{} { return v.Zoom }).(pulumi.MapOutput)
}

type GetClientAddonArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddon)(nil)).Elem()
}

func (o GetClientAddonArrayOutput) ToGetClientAddonArrayOutput() GetClientAddonArrayOutput {
	return o
}

func (o GetClientAddonArrayOutput) ToGetClientAddonArrayOutputWithContext(ctx context.Context) GetClientAddonArrayOutput {
	return o
}

func (o GetClientAddonArrayOutput) Index(i pulumi.IntInput) GetClientAddonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddon {
		return vs[0].([]GetClientAddon)[vs[1].(int)]
	}).(GetClientAddonOutput)
}

type GetClientAddonSamlp struct {
	Audience                       string                 `pulumi:"audience"`
	AuthnContextClassRef           string                 `pulumi:"authnContextClassRef"`
	Binding                        string                 `pulumi:"binding"`
	CreateUpnClaim                 bool                   `pulumi:"createUpnClaim"`
	Destination                    string                 `pulumi:"destination"`
	DigestAlgorithm                string                 `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     bool                   `pulumi:"includeAttributeNameFormat"`
	Issuer                         string                 `pulumi:"issuer"`
	LifetimeInSeconds              int                    `pulumi:"lifetimeInSeconds"`
	Logout                         map[string]interface{} `pulumi:"logout"`
	MapIdentities                  bool                   `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           bool                   `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       map[string]interface{} `pulumi:"mappings"`
	NameIdentifierFormat           string                 `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           []string               `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping bool                   `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      string                 `pulumi:"recipient"`
	SignResponse                   bool                   `pulumi:"signResponse"`
	SignatureAlgorithm             string                 `pulumi:"signatureAlgorithm"`
	SigningCert                    string                 `pulumi:"signingCert"`
	TypedAttributes                bool                   `pulumi:"typedAttributes"`
}

// GetClientAddonSamlpInput is an input type that accepts GetClientAddonSamlpArgs and GetClientAddonSamlpOutput values.
// You can construct a concrete instance of `GetClientAddonSamlpInput` via:
//
//	GetClientAddonSamlpArgs{...}
type GetClientAddonSamlpInput interface {
	pulumi.Input

	ToGetClientAddonSamlpOutput() GetClientAddonSamlpOutput
	ToGetClientAddonSamlpOutputWithContext(context.Context) GetClientAddonSamlpOutput
}

type GetClientAddonSamlpArgs struct {
	Audience                       pulumi.StringInput      `pulumi:"audience"`
	AuthnContextClassRef           pulumi.StringInput      `pulumi:"authnContextClassRef"`
	Binding                        pulumi.StringInput      `pulumi:"binding"`
	CreateUpnClaim                 pulumi.BoolInput        `pulumi:"createUpnClaim"`
	Destination                    pulumi.StringInput      `pulumi:"destination"`
	DigestAlgorithm                pulumi.StringInput      `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     pulumi.BoolInput        `pulumi:"includeAttributeNameFormat"`
	Issuer                         pulumi.StringInput      `pulumi:"issuer"`
	LifetimeInSeconds              pulumi.IntInput         `pulumi:"lifetimeInSeconds"`
	Logout                         pulumi.MapInput         `pulumi:"logout"`
	MapIdentities                  pulumi.BoolInput        `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           pulumi.BoolInput        `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       pulumi.MapInput         `pulumi:"mappings"`
	NameIdentifierFormat           pulumi.StringInput      `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           pulumi.StringArrayInput `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping pulumi.BoolInput        `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      pulumi.StringInput      `pulumi:"recipient"`
	SignResponse                   pulumi.BoolInput        `pulumi:"signResponse"`
	SignatureAlgorithm             pulumi.StringInput      `pulumi:"signatureAlgorithm"`
	SigningCert                    pulumi.StringInput      `pulumi:"signingCert"`
	TypedAttributes                pulumi.BoolInput        `pulumi:"typedAttributes"`
}

func (GetClientAddonSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSamlp)(nil)).Elem()
}

func (i GetClientAddonSamlpArgs) ToGetClientAddonSamlpOutput() GetClientAddonSamlpOutput {
	return i.ToGetClientAddonSamlpOutputWithContext(context.Background())
}

func (i GetClientAddonSamlpArgs) ToGetClientAddonSamlpOutputWithContext(ctx context.Context) GetClientAddonSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSamlpOutput)
}

// GetClientAddonSamlpArrayInput is an input type that accepts GetClientAddonSamlpArray and GetClientAddonSamlpArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSamlpArrayInput` via:
//
//	GetClientAddonSamlpArray{ GetClientAddonSamlpArgs{...} }
type GetClientAddonSamlpArrayInput interface {
	pulumi.Input

	ToGetClientAddonSamlpArrayOutput() GetClientAddonSamlpArrayOutput
	ToGetClientAddonSamlpArrayOutputWithContext(context.Context) GetClientAddonSamlpArrayOutput
}

type GetClientAddonSamlpArray []GetClientAddonSamlpInput

func (GetClientAddonSamlpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSamlp)(nil)).Elem()
}

func (i GetClientAddonSamlpArray) ToGetClientAddonSamlpArrayOutput() GetClientAddonSamlpArrayOutput {
	return i.ToGetClientAddonSamlpArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSamlpArray) ToGetClientAddonSamlpArrayOutputWithContext(ctx context.Context) GetClientAddonSamlpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSamlpArrayOutput)
}

type GetClientAddonSamlpOutput struct{ *pulumi.OutputState }

func (GetClientAddonSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSamlp)(nil)).Elem()
}

func (o GetClientAddonSamlpOutput) ToGetClientAddonSamlpOutput() GetClientAddonSamlpOutput {
	return o
}

func (o GetClientAddonSamlpOutput) ToGetClientAddonSamlpOutputWithContext(ctx context.Context) GetClientAddonSamlpOutput {
	return o
}

func (o GetClientAddonSamlpOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Audience }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) AuthnContextClassRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.AuthnContextClassRef }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) Binding() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Binding }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) CreateUpnClaim() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.CreateUpnClaim }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) DigestAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.DigestAlgorithm }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Issuer }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetClientAddonSamlpOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) map[string]interface{} { return v.Logout }).(pulumi.MapOutput)
}

func (o GetClientAddonSamlpOutput) MapIdentities() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.MapIdentities }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

func (o GetClientAddonSamlpOutput) NameIdentifierFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.NameIdentifierFormat }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

func (o GetClientAddonSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Recipient() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Recipient }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) SignResponse() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.SignResponse }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) SigningCert() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.SigningCert }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) TypedAttributes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.TypedAttributes }).(pulumi.BoolOutput)
}

type GetClientAddonSamlpArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSamlpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSamlp)(nil)).Elem()
}

func (o GetClientAddonSamlpArrayOutput) ToGetClientAddonSamlpArrayOutput() GetClientAddonSamlpArrayOutput {
	return o
}

func (o GetClientAddonSamlpArrayOutput) ToGetClientAddonSamlpArrayOutputWithContext(ctx context.Context) GetClientAddonSamlpArrayOutput {
	return o
}

func (o GetClientAddonSamlpArrayOutput) Index(i pulumi.IntInput) GetClientAddonSamlpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSamlp {
		return vs[0].([]GetClientAddonSamlp)[vs[1].(int)]
	}).(GetClientAddonSamlpOutput)
}

type GetClientJwtConfiguration struct {
	Alg               string            `pulumi:"alg"`
	LifetimeInSeconds int               `pulumi:"lifetimeInSeconds"`
	Scopes            map[string]string `pulumi:"scopes"`
	SecretEncoded     bool              `pulumi:"secretEncoded"`
}

// GetClientJwtConfigurationInput is an input type that accepts GetClientJwtConfigurationArgs and GetClientJwtConfigurationOutput values.
// You can construct a concrete instance of `GetClientJwtConfigurationInput` via:
//
//	GetClientJwtConfigurationArgs{...}
type GetClientJwtConfigurationInput interface {
	pulumi.Input

	ToGetClientJwtConfigurationOutput() GetClientJwtConfigurationOutput
	ToGetClientJwtConfigurationOutputWithContext(context.Context) GetClientJwtConfigurationOutput
}

type GetClientJwtConfigurationArgs struct {
	Alg               pulumi.StringInput    `pulumi:"alg"`
	LifetimeInSeconds pulumi.IntInput       `pulumi:"lifetimeInSeconds"`
	Scopes            pulumi.StringMapInput `pulumi:"scopes"`
	SecretEncoded     pulumi.BoolInput      `pulumi:"secretEncoded"`
}

func (GetClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientJwtConfiguration)(nil)).Elem()
}

func (i GetClientJwtConfigurationArgs) ToGetClientJwtConfigurationOutput() GetClientJwtConfigurationOutput {
	return i.ToGetClientJwtConfigurationOutputWithContext(context.Background())
}

func (i GetClientJwtConfigurationArgs) ToGetClientJwtConfigurationOutputWithContext(ctx context.Context) GetClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientJwtConfigurationOutput)
}

// GetClientJwtConfigurationArrayInput is an input type that accepts GetClientJwtConfigurationArray and GetClientJwtConfigurationArrayOutput values.
// You can construct a concrete instance of `GetClientJwtConfigurationArrayInput` via:
//
//	GetClientJwtConfigurationArray{ GetClientJwtConfigurationArgs{...} }
type GetClientJwtConfigurationArrayInput interface {
	pulumi.Input

	ToGetClientJwtConfigurationArrayOutput() GetClientJwtConfigurationArrayOutput
	ToGetClientJwtConfigurationArrayOutputWithContext(context.Context) GetClientJwtConfigurationArrayOutput
}

type GetClientJwtConfigurationArray []GetClientJwtConfigurationInput

func (GetClientJwtConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientJwtConfiguration)(nil)).Elem()
}

func (i GetClientJwtConfigurationArray) ToGetClientJwtConfigurationArrayOutput() GetClientJwtConfigurationArrayOutput {
	return i.ToGetClientJwtConfigurationArrayOutputWithContext(context.Background())
}

func (i GetClientJwtConfigurationArray) ToGetClientJwtConfigurationArrayOutputWithContext(ctx context.Context) GetClientJwtConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientJwtConfigurationArrayOutput)
}

type GetClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (GetClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientJwtConfiguration)(nil)).Elem()
}

func (o GetClientJwtConfigurationOutput) ToGetClientJwtConfigurationOutput() GetClientJwtConfigurationOutput {
	return o
}

func (o GetClientJwtConfigurationOutput) ToGetClientJwtConfigurationOutputWithContext(ctx context.Context) GetClientJwtConfigurationOutput {
	return o
}

func (o GetClientJwtConfigurationOutput) Alg() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) string { return v.Alg }).(pulumi.StringOutput)
}

func (o GetClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

func (o GetClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) bool { return v.SecretEncoded }).(pulumi.BoolOutput)
}

type GetClientJwtConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetClientJwtConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientJwtConfiguration)(nil)).Elem()
}

func (o GetClientJwtConfigurationArrayOutput) ToGetClientJwtConfigurationArrayOutput() GetClientJwtConfigurationArrayOutput {
	return o
}

func (o GetClientJwtConfigurationArrayOutput) ToGetClientJwtConfigurationArrayOutputWithContext(ctx context.Context) GetClientJwtConfigurationArrayOutput {
	return o
}

func (o GetClientJwtConfigurationArrayOutput) Index(i pulumi.IntInput) GetClientJwtConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientJwtConfiguration {
		return vs[0].([]GetClientJwtConfiguration)[vs[1].(int)]
	}).(GetClientJwtConfigurationOutput)
}

type GetClientMobile struct {
	Androids []GetClientMobileAndroid `pulumi:"androids"`
	Ios      []GetClientMobileIo      `pulumi:"ios"`
}

// GetClientMobileInput is an input type that accepts GetClientMobileArgs and GetClientMobileOutput values.
// You can construct a concrete instance of `GetClientMobileInput` via:
//
//	GetClientMobileArgs{...}
type GetClientMobileInput interface {
	pulumi.Input

	ToGetClientMobileOutput() GetClientMobileOutput
	ToGetClientMobileOutputWithContext(context.Context) GetClientMobileOutput
}

type GetClientMobileArgs struct {
	Androids GetClientMobileAndroidArrayInput `pulumi:"androids"`
	Ios      GetClientMobileIoArrayInput      `pulumi:"ios"`
}

func (GetClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobile)(nil)).Elem()
}

func (i GetClientMobileArgs) ToGetClientMobileOutput() GetClientMobileOutput {
	return i.ToGetClientMobileOutputWithContext(context.Background())
}

func (i GetClientMobileArgs) ToGetClientMobileOutputWithContext(ctx context.Context) GetClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileOutput)
}

// GetClientMobileArrayInput is an input type that accepts GetClientMobileArray and GetClientMobileArrayOutput values.
// You can construct a concrete instance of `GetClientMobileArrayInput` via:
//
//	GetClientMobileArray{ GetClientMobileArgs{...} }
type GetClientMobileArrayInput interface {
	pulumi.Input

	ToGetClientMobileArrayOutput() GetClientMobileArrayOutput
	ToGetClientMobileArrayOutputWithContext(context.Context) GetClientMobileArrayOutput
}

type GetClientMobileArray []GetClientMobileInput

func (GetClientMobileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobile)(nil)).Elem()
}

func (i GetClientMobileArray) ToGetClientMobileArrayOutput() GetClientMobileArrayOutput {
	return i.ToGetClientMobileArrayOutputWithContext(context.Background())
}

func (i GetClientMobileArray) ToGetClientMobileArrayOutputWithContext(ctx context.Context) GetClientMobileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileArrayOutput)
}

type GetClientMobileOutput struct{ *pulumi.OutputState }

func (GetClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobile)(nil)).Elem()
}

func (o GetClientMobileOutput) ToGetClientMobileOutput() GetClientMobileOutput {
	return o
}

func (o GetClientMobileOutput) ToGetClientMobileOutputWithContext(ctx context.Context) GetClientMobileOutput {
	return o
}

func (o GetClientMobileOutput) Androids() GetClientMobileAndroidArrayOutput {
	return o.ApplyT(func(v GetClientMobile) []GetClientMobileAndroid { return v.Androids }).(GetClientMobileAndroidArrayOutput)
}

func (o GetClientMobileOutput) Ios() GetClientMobileIoArrayOutput {
	return o.ApplyT(func(v GetClientMobile) []GetClientMobileIo { return v.Ios }).(GetClientMobileIoArrayOutput)
}

type GetClientMobileArrayOutput struct{ *pulumi.OutputState }

func (GetClientMobileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobile)(nil)).Elem()
}

func (o GetClientMobileArrayOutput) ToGetClientMobileArrayOutput() GetClientMobileArrayOutput {
	return o
}

func (o GetClientMobileArrayOutput) ToGetClientMobileArrayOutputWithContext(ctx context.Context) GetClientMobileArrayOutput {
	return o
}

func (o GetClientMobileArrayOutput) Index(i pulumi.IntInput) GetClientMobileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientMobile {
		return vs[0].([]GetClientMobile)[vs[1].(int)]
	}).(GetClientMobileOutput)
}

type GetClientMobileAndroid struct {
	AppPackageName         string   `pulumi:"appPackageName"`
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// GetClientMobileAndroidInput is an input type that accepts GetClientMobileAndroidArgs and GetClientMobileAndroidOutput values.
// You can construct a concrete instance of `GetClientMobileAndroidInput` via:
//
//	GetClientMobileAndroidArgs{...}
type GetClientMobileAndroidInput interface {
	pulumi.Input

	ToGetClientMobileAndroidOutput() GetClientMobileAndroidOutput
	ToGetClientMobileAndroidOutputWithContext(context.Context) GetClientMobileAndroidOutput
}

type GetClientMobileAndroidArgs struct {
	AppPackageName         pulumi.StringInput      `pulumi:"appPackageName"`
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (GetClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileAndroid)(nil)).Elem()
}

func (i GetClientMobileAndroidArgs) ToGetClientMobileAndroidOutput() GetClientMobileAndroidOutput {
	return i.ToGetClientMobileAndroidOutputWithContext(context.Background())
}

func (i GetClientMobileAndroidArgs) ToGetClientMobileAndroidOutputWithContext(ctx context.Context) GetClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileAndroidOutput)
}

// GetClientMobileAndroidArrayInput is an input type that accepts GetClientMobileAndroidArray and GetClientMobileAndroidArrayOutput values.
// You can construct a concrete instance of `GetClientMobileAndroidArrayInput` via:
//
//	GetClientMobileAndroidArray{ GetClientMobileAndroidArgs{...} }
type GetClientMobileAndroidArrayInput interface {
	pulumi.Input

	ToGetClientMobileAndroidArrayOutput() GetClientMobileAndroidArrayOutput
	ToGetClientMobileAndroidArrayOutputWithContext(context.Context) GetClientMobileAndroidArrayOutput
}

type GetClientMobileAndroidArray []GetClientMobileAndroidInput

func (GetClientMobileAndroidArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileAndroid)(nil)).Elem()
}

func (i GetClientMobileAndroidArray) ToGetClientMobileAndroidArrayOutput() GetClientMobileAndroidArrayOutput {
	return i.ToGetClientMobileAndroidArrayOutputWithContext(context.Background())
}

func (i GetClientMobileAndroidArray) ToGetClientMobileAndroidArrayOutputWithContext(ctx context.Context) GetClientMobileAndroidArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileAndroidArrayOutput)
}

type GetClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (GetClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileAndroid)(nil)).Elem()
}

func (o GetClientMobileAndroidOutput) ToGetClientMobileAndroidOutput() GetClientMobileAndroidOutput {
	return o
}

func (o GetClientMobileAndroidOutput) ToGetClientMobileAndroidOutputWithContext(ctx context.Context) GetClientMobileAndroidOutput {
	return o
}

func (o GetClientMobileAndroidOutput) AppPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientMobileAndroid) string { return v.AppPackageName }).(pulumi.StringOutput)
}

func (o GetClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type GetClientMobileAndroidArrayOutput struct{ *pulumi.OutputState }

func (GetClientMobileAndroidArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileAndroid)(nil)).Elem()
}

func (o GetClientMobileAndroidArrayOutput) ToGetClientMobileAndroidArrayOutput() GetClientMobileAndroidArrayOutput {
	return o
}

func (o GetClientMobileAndroidArrayOutput) ToGetClientMobileAndroidArrayOutputWithContext(ctx context.Context) GetClientMobileAndroidArrayOutput {
	return o
}

func (o GetClientMobileAndroidArrayOutput) Index(i pulumi.IntInput) GetClientMobileAndroidOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientMobileAndroid {
		return vs[0].([]GetClientMobileAndroid)[vs[1].(int)]
	}).(GetClientMobileAndroidOutput)
}

type GetClientMobileIo struct {
	AppBundleIdentifier string `pulumi:"appBundleIdentifier"`
	TeamId              string `pulumi:"teamId"`
}

// GetClientMobileIoInput is an input type that accepts GetClientMobileIoArgs and GetClientMobileIoOutput values.
// You can construct a concrete instance of `GetClientMobileIoInput` via:
//
//	GetClientMobileIoArgs{...}
type GetClientMobileIoInput interface {
	pulumi.Input

	ToGetClientMobileIoOutput() GetClientMobileIoOutput
	ToGetClientMobileIoOutputWithContext(context.Context) GetClientMobileIoOutput
}

type GetClientMobileIoArgs struct {
	AppBundleIdentifier pulumi.StringInput `pulumi:"appBundleIdentifier"`
	TeamId              pulumi.StringInput `pulumi:"teamId"`
}

func (GetClientMobileIoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileIo)(nil)).Elem()
}

func (i GetClientMobileIoArgs) ToGetClientMobileIoOutput() GetClientMobileIoOutput {
	return i.ToGetClientMobileIoOutputWithContext(context.Background())
}

func (i GetClientMobileIoArgs) ToGetClientMobileIoOutputWithContext(ctx context.Context) GetClientMobileIoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileIoOutput)
}

// GetClientMobileIoArrayInput is an input type that accepts GetClientMobileIoArray and GetClientMobileIoArrayOutput values.
// You can construct a concrete instance of `GetClientMobileIoArrayInput` via:
//
//	GetClientMobileIoArray{ GetClientMobileIoArgs{...} }
type GetClientMobileIoArrayInput interface {
	pulumi.Input

	ToGetClientMobileIoArrayOutput() GetClientMobileIoArrayOutput
	ToGetClientMobileIoArrayOutputWithContext(context.Context) GetClientMobileIoArrayOutput
}

type GetClientMobileIoArray []GetClientMobileIoInput

func (GetClientMobileIoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileIo)(nil)).Elem()
}

func (i GetClientMobileIoArray) ToGetClientMobileIoArrayOutput() GetClientMobileIoArrayOutput {
	return i.ToGetClientMobileIoArrayOutputWithContext(context.Background())
}

func (i GetClientMobileIoArray) ToGetClientMobileIoArrayOutputWithContext(ctx context.Context) GetClientMobileIoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileIoArrayOutput)
}

type GetClientMobileIoOutput struct{ *pulumi.OutputState }

func (GetClientMobileIoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileIo)(nil)).Elem()
}

func (o GetClientMobileIoOutput) ToGetClientMobileIoOutput() GetClientMobileIoOutput {
	return o
}

func (o GetClientMobileIoOutput) ToGetClientMobileIoOutputWithContext(ctx context.Context) GetClientMobileIoOutput {
	return o
}

func (o GetClientMobileIoOutput) AppBundleIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientMobileIo) string { return v.AppBundleIdentifier }).(pulumi.StringOutput)
}

func (o GetClientMobileIoOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientMobileIo) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetClientMobileIoArrayOutput struct{ *pulumi.OutputState }

func (GetClientMobileIoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileIo)(nil)).Elem()
}

func (o GetClientMobileIoArrayOutput) ToGetClientMobileIoArrayOutput() GetClientMobileIoArrayOutput {
	return o
}

func (o GetClientMobileIoArrayOutput) ToGetClientMobileIoArrayOutputWithContext(ctx context.Context) GetClientMobileIoArrayOutput {
	return o
}

func (o GetClientMobileIoArrayOutput) Index(i pulumi.IntInput) GetClientMobileIoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientMobileIo {
		return vs[0].([]GetClientMobileIo)[vs[1].(int)]
	}).(GetClientMobileIoOutput)
}

type GetClientNativeSocialLogin struct {
	Apples    []GetClientNativeSocialLoginApple    `pulumi:"apples"`
	Facebooks []GetClientNativeSocialLoginFacebook `pulumi:"facebooks"`
}

// GetClientNativeSocialLoginInput is an input type that accepts GetClientNativeSocialLoginArgs and GetClientNativeSocialLoginOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginInput` via:
//
//	GetClientNativeSocialLoginArgs{...}
type GetClientNativeSocialLoginInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginOutput() GetClientNativeSocialLoginOutput
	ToGetClientNativeSocialLoginOutputWithContext(context.Context) GetClientNativeSocialLoginOutput
}

type GetClientNativeSocialLoginArgs struct {
	Apples    GetClientNativeSocialLoginAppleArrayInput    `pulumi:"apples"`
	Facebooks GetClientNativeSocialLoginFacebookArrayInput `pulumi:"facebooks"`
}

func (GetClientNativeSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLogin)(nil)).Elem()
}

func (i GetClientNativeSocialLoginArgs) ToGetClientNativeSocialLoginOutput() GetClientNativeSocialLoginOutput {
	return i.ToGetClientNativeSocialLoginOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginArgs) ToGetClientNativeSocialLoginOutputWithContext(ctx context.Context) GetClientNativeSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginOutput)
}

// GetClientNativeSocialLoginArrayInput is an input type that accepts GetClientNativeSocialLoginArray and GetClientNativeSocialLoginArrayOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginArrayInput` via:
//
//	GetClientNativeSocialLoginArray{ GetClientNativeSocialLoginArgs{...} }
type GetClientNativeSocialLoginArrayInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginArrayOutput() GetClientNativeSocialLoginArrayOutput
	ToGetClientNativeSocialLoginArrayOutputWithContext(context.Context) GetClientNativeSocialLoginArrayOutput
}

type GetClientNativeSocialLoginArray []GetClientNativeSocialLoginInput

func (GetClientNativeSocialLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLogin)(nil)).Elem()
}

func (i GetClientNativeSocialLoginArray) ToGetClientNativeSocialLoginArrayOutput() GetClientNativeSocialLoginArrayOutput {
	return i.ToGetClientNativeSocialLoginArrayOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginArray) ToGetClientNativeSocialLoginArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginArrayOutput)
}

type GetClientNativeSocialLoginOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLogin)(nil)).Elem()
}

func (o GetClientNativeSocialLoginOutput) ToGetClientNativeSocialLoginOutput() GetClientNativeSocialLoginOutput {
	return o
}

func (o GetClientNativeSocialLoginOutput) ToGetClientNativeSocialLoginOutputWithContext(ctx context.Context) GetClientNativeSocialLoginOutput {
	return o
}

func (o GetClientNativeSocialLoginOutput) Apples() GetClientNativeSocialLoginAppleArrayOutput {
	return o.ApplyT(func(v GetClientNativeSocialLogin) []GetClientNativeSocialLoginApple { return v.Apples }).(GetClientNativeSocialLoginAppleArrayOutput)
}

func (o GetClientNativeSocialLoginOutput) Facebooks() GetClientNativeSocialLoginFacebookArrayOutput {
	return o.ApplyT(func(v GetClientNativeSocialLogin) []GetClientNativeSocialLoginFacebook { return v.Facebooks }).(GetClientNativeSocialLoginFacebookArrayOutput)
}

type GetClientNativeSocialLoginArrayOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLogin)(nil)).Elem()
}

func (o GetClientNativeSocialLoginArrayOutput) ToGetClientNativeSocialLoginArrayOutput() GetClientNativeSocialLoginArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginArrayOutput) ToGetClientNativeSocialLoginArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginArrayOutput) Index(i pulumi.IntInput) GetClientNativeSocialLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientNativeSocialLogin {
		return vs[0].([]GetClientNativeSocialLogin)[vs[1].(int)]
	}).(GetClientNativeSocialLoginOutput)
}

type GetClientNativeSocialLoginApple struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClientNativeSocialLoginAppleInput is an input type that accepts GetClientNativeSocialLoginAppleArgs and GetClientNativeSocialLoginAppleOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginAppleInput` via:
//
//	GetClientNativeSocialLoginAppleArgs{...}
type GetClientNativeSocialLoginAppleInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginAppleOutput() GetClientNativeSocialLoginAppleOutput
	ToGetClientNativeSocialLoginAppleOutputWithContext(context.Context) GetClientNativeSocialLoginAppleOutput
}

type GetClientNativeSocialLoginAppleArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClientNativeSocialLoginAppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GetClientNativeSocialLoginAppleArgs) ToGetClientNativeSocialLoginAppleOutput() GetClientNativeSocialLoginAppleOutput {
	return i.ToGetClientNativeSocialLoginAppleOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginAppleArgs) ToGetClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginAppleOutput)
}

// GetClientNativeSocialLoginAppleArrayInput is an input type that accepts GetClientNativeSocialLoginAppleArray and GetClientNativeSocialLoginAppleArrayOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginAppleArrayInput` via:
//
//	GetClientNativeSocialLoginAppleArray{ GetClientNativeSocialLoginAppleArgs{...} }
type GetClientNativeSocialLoginAppleArrayInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginAppleArrayOutput() GetClientNativeSocialLoginAppleArrayOutput
	ToGetClientNativeSocialLoginAppleArrayOutputWithContext(context.Context) GetClientNativeSocialLoginAppleArrayOutput
}

type GetClientNativeSocialLoginAppleArray []GetClientNativeSocialLoginAppleInput

func (GetClientNativeSocialLoginAppleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GetClientNativeSocialLoginAppleArray) ToGetClientNativeSocialLoginAppleArrayOutput() GetClientNativeSocialLoginAppleArrayOutput {
	return i.ToGetClientNativeSocialLoginAppleArrayOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginAppleArray) ToGetClientNativeSocialLoginAppleArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginAppleArrayOutput)
}

type GetClientNativeSocialLoginAppleOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginAppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GetClientNativeSocialLoginAppleOutput) ToGetClientNativeSocialLoginAppleOutput() GetClientNativeSocialLoginAppleOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleOutput) ToGetClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientNativeSocialLoginApple) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClientNativeSocialLoginAppleArrayOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginAppleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GetClientNativeSocialLoginAppleArrayOutput) ToGetClientNativeSocialLoginAppleArrayOutput() GetClientNativeSocialLoginAppleArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleArrayOutput) ToGetClientNativeSocialLoginAppleArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleArrayOutput) Index(i pulumi.IntInput) GetClientNativeSocialLoginAppleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientNativeSocialLoginApple {
		return vs[0].([]GetClientNativeSocialLoginApple)[vs[1].(int)]
	}).(GetClientNativeSocialLoginAppleOutput)
}

type GetClientNativeSocialLoginFacebook struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClientNativeSocialLoginFacebookInput is an input type that accepts GetClientNativeSocialLoginFacebookArgs and GetClientNativeSocialLoginFacebookOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginFacebookInput` via:
//
//	GetClientNativeSocialLoginFacebookArgs{...}
type GetClientNativeSocialLoginFacebookInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginFacebookOutput() GetClientNativeSocialLoginFacebookOutput
	ToGetClientNativeSocialLoginFacebookOutputWithContext(context.Context) GetClientNativeSocialLoginFacebookOutput
}

type GetClientNativeSocialLoginFacebookArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClientNativeSocialLoginFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GetClientNativeSocialLoginFacebookArgs) ToGetClientNativeSocialLoginFacebookOutput() GetClientNativeSocialLoginFacebookOutput {
	return i.ToGetClientNativeSocialLoginFacebookOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginFacebookArgs) ToGetClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginFacebookOutput)
}

// GetClientNativeSocialLoginFacebookArrayInput is an input type that accepts GetClientNativeSocialLoginFacebookArray and GetClientNativeSocialLoginFacebookArrayOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginFacebookArrayInput` via:
//
//	GetClientNativeSocialLoginFacebookArray{ GetClientNativeSocialLoginFacebookArgs{...} }
type GetClientNativeSocialLoginFacebookArrayInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginFacebookArrayOutput() GetClientNativeSocialLoginFacebookArrayOutput
	ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(context.Context) GetClientNativeSocialLoginFacebookArrayOutput
}

type GetClientNativeSocialLoginFacebookArray []GetClientNativeSocialLoginFacebookInput

func (GetClientNativeSocialLoginFacebookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GetClientNativeSocialLoginFacebookArray) ToGetClientNativeSocialLoginFacebookArrayOutput() GetClientNativeSocialLoginFacebookArrayOutput {
	return i.ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginFacebookArray) ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginFacebookArrayOutput)
}

type GetClientNativeSocialLoginFacebookOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GetClientNativeSocialLoginFacebookOutput) ToGetClientNativeSocialLoginFacebookOutput() GetClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookOutput) ToGetClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientNativeSocialLoginFacebook) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClientNativeSocialLoginFacebookArrayOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginFacebookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GetClientNativeSocialLoginFacebookArrayOutput) ToGetClientNativeSocialLoginFacebookArrayOutput() GetClientNativeSocialLoginFacebookArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookArrayOutput) ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookArrayOutput) Index(i pulumi.IntInput) GetClientNativeSocialLoginFacebookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientNativeSocialLoginFacebook {
		return vs[0].([]GetClientNativeSocialLoginFacebook)[vs[1].(int)]
	}).(GetClientNativeSocialLoginFacebookOutput)
}

type GetClientRefreshToken struct {
	ExpirationType            string `pulumi:"expirationType"`
	IdleTokenLifetime         int    `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime bool   `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     bool   `pulumi:"infiniteTokenLifetime"`
	Leeway                    int    `pulumi:"leeway"`
	RotationType              string `pulumi:"rotationType"`
	TokenLifetime             int    `pulumi:"tokenLifetime"`
}

// GetClientRefreshTokenInput is an input type that accepts GetClientRefreshTokenArgs and GetClientRefreshTokenOutput values.
// You can construct a concrete instance of `GetClientRefreshTokenInput` via:
//
//	GetClientRefreshTokenArgs{...}
type GetClientRefreshTokenInput interface {
	pulumi.Input

	ToGetClientRefreshTokenOutput() GetClientRefreshTokenOutput
	ToGetClientRefreshTokenOutputWithContext(context.Context) GetClientRefreshTokenOutput
}

type GetClientRefreshTokenArgs struct {
	ExpirationType            pulumi.StringInput `pulumi:"expirationType"`
	IdleTokenLifetime         pulumi.IntInput    `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime pulumi.BoolInput   `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     pulumi.BoolInput   `pulumi:"infiniteTokenLifetime"`
	Leeway                    pulumi.IntInput    `pulumi:"leeway"`
	RotationType              pulumi.StringInput `pulumi:"rotationType"`
	TokenLifetime             pulumi.IntInput    `pulumi:"tokenLifetime"`
}

func (GetClientRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientRefreshToken)(nil)).Elem()
}

func (i GetClientRefreshTokenArgs) ToGetClientRefreshTokenOutput() GetClientRefreshTokenOutput {
	return i.ToGetClientRefreshTokenOutputWithContext(context.Background())
}

func (i GetClientRefreshTokenArgs) ToGetClientRefreshTokenOutputWithContext(ctx context.Context) GetClientRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientRefreshTokenOutput)
}

// GetClientRefreshTokenArrayInput is an input type that accepts GetClientRefreshTokenArray and GetClientRefreshTokenArrayOutput values.
// You can construct a concrete instance of `GetClientRefreshTokenArrayInput` via:
//
//	GetClientRefreshTokenArray{ GetClientRefreshTokenArgs{...} }
type GetClientRefreshTokenArrayInput interface {
	pulumi.Input

	ToGetClientRefreshTokenArrayOutput() GetClientRefreshTokenArrayOutput
	ToGetClientRefreshTokenArrayOutputWithContext(context.Context) GetClientRefreshTokenArrayOutput
}

type GetClientRefreshTokenArray []GetClientRefreshTokenInput

func (GetClientRefreshTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientRefreshToken)(nil)).Elem()
}

func (i GetClientRefreshTokenArray) ToGetClientRefreshTokenArrayOutput() GetClientRefreshTokenArrayOutput {
	return i.ToGetClientRefreshTokenArrayOutputWithContext(context.Background())
}

func (i GetClientRefreshTokenArray) ToGetClientRefreshTokenArrayOutputWithContext(ctx context.Context) GetClientRefreshTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientRefreshTokenArrayOutput)
}

type GetClientRefreshTokenOutput struct{ *pulumi.OutputState }

func (GetClientRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientRefreshToken)(nil)).Elem()
}

func (o GetClientRefreshTokenOutput) ToGetClientRefreshTokenOutput() GetClientRefreshTokenOutput {
	return o
}

func (o GetClientRefreshTokenOutput) ToGetClientRefreshTokenOutputWithContext(ctx context.Context) GetClientRefreshTokenOutput {
	return o
}

func (o GetClientRefreshTokenOutput) ExpirationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientRefreshToken) string { return v.ExpirationType }).(pulumi.StringOutput)
}

func (o GetClientRefreshTokenOutput) IdleTokenLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientRefreshToken) int { return v.IdleTokenLifetime }).(pulumi.IntOutput)
}

func (o GetClientRefreshTokenOutput) InfiniteIdleTokenLifetime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientRefreshToken) bool { return v.InfiniteIdleTokenLifetime }).(pulumi.BoolOutput)
}

func (o GetClientRefreshTokenOutput) InfiniteTokenLifetime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientRefreshToken) bool { return v.InfiniteTokenLifetime }).(pulumi.BoolOutput)
}

func (o GetClientRefreshTokenOutput) Leeway() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientRefreshToken) int { return v.Leeway }).(pulumi.IntOutput)
}

func (o GetClientRefreshTokenOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientRefreshToken) string { return v.RotationType }).(pulumi.StringOutput)
}

func (o GetClientRefreshTokenOutput) TokenLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientRefreshToken) int { return v.TokenLifetime }).(pulumi.IntOutput)
}

type GetClientRefreshTokenArrayOutput struct{ *pulumi.OutputState }

func (GetClientRefreshTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientRefreshToken)(nil)).Elem()
}

func (o GetClientRefreshTokenArrayOutput) ToGetClientRefreshTokenArrayOutput() GetClientRefreshTokenArrayOutput {
	return o
}

func (o GetClientRefreshTokenArrayOutput) ToGetClientRefreshTokenArrayOutputWithContext(ctx context.Context) GetClientRefreshTokenArrayOutput {
	return o
}

func (o GetClientRefreshTokenArrayOutput) Index(i pulumi.IntInput) GetClientRefreshTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientRefreshToken {
		return vs[0].([]GetClientRefreshToken)[vs[1].(int)]
	}).(GetClientRefreshTokenOutput)
}

type GetGlobalClientAddon struct {
	Aws                  map[string]interface{}      `pulumi:"aws"`
	AzureBlob            map[string]interface{}      `pulumi:"azureBlob"`
	AzureSb              map[string]interface{}      `pulumi:"azureSb"`
	Box                  map[string]interface{}      `pulumi:"box"`
	Cloudbees            map[string]interface{}      `pulumi:"cloudbees"`
	Concur               map[string]interface{}      `pulumi:"concur"`
	Dropbox              map[string]interface{}      `pulumi:"dropbox"`
	Echosign             map[string]interface{}      `pulumi:"echosign"`
	Egnyte               map[string]interface{}      `pulumi:"egnyte"`
	Firebase             map[string]interface{}      `pulumi:"firebase"`
	Layer                map[string]interface{}      `pulumi:"layer"`
	Mscrm                map[string]interface{}      `pulumi:"mscrm"`
	Newrelic             map[string]interface{}      `pulumi:"newrelic"`
	Office365            map[string]interface{}      `pulumi:"office365"`
	Rms                  map[string]interface{}      `pulumi:"rms"`
	Salesforce           map[string]interface{}      `pulumi:"salesforce"`
	SalesforceApi        map[string]interface{}      `pulumi:"salesforceApi"`
	SalesforceSandboxApi map[string]interface{}      `pulumi:"salesforceSandboxApi"`
	Samlps               []GetGlobalClientAddonSamlp `pulumi:"samlps"`
	SapApi               map[string]interface{}      `pulumi:"sapApi"`
	Sentry               map[string]interface{}      `pulumi:"sentry"`
	Sharepoint           map[string]interface{}      `pulumi:"sharepoint"`
	Slack                map[string]interface{}      `pulumi:"slack"`
	Springcm             map[string]interface{}      `pulumi:"springcm"`
	Wams                 map[string]interface{}      `pulumi:"wams"`
	Wsfed                map[string]interface{}      `pulumi:"wsfed"`
	Zendesk              map[string]interface{}      `pulumi:"zendesk"`
	Zoom                 map[string]interface{}      `pulumi:"zoom"`
}

// GetGlobalClientAddonInput is an input type that accepts GetGlobalClientAddonArgs and GetGlobalClientAddonOutput values.
// You can construct a concrete instance of `GetGlobalClientAddonInput` via:
//
//	GetGlobalClientAddonArgs{...}
type GetGlobalClientAddonInput interface {
	pulumi.Input

	ToGetGlobalClientAddonOutput() GetGlobalClientAddonOutput
	ToGetGlobalClientAddonOutputWithContext(context.Context) GetGlobalClientAddonOutput
}

type GetGlobalClientAddonArgs struct {
	Aws                  pulumi.MapInput                     `pulumi:"aws"`
	AzureBlob            pulumi.MapInput                     `pulumi:"azureBlob"`
	AzureSb              pulumi.MapInput                     `pulumi:"azureSb"`
	Box                  pulumi.MapInput                     `pulumi:"box"`
	Cloudbees            pulumi.MapInput                     `pulumi:"cloudbees"`
	Concur               pulumi.MapInput                     `pulumi:"concur"`
	Dropbox              pulumi.MapInput                     `pulumi:"dropbox"`
	Echosign             pulumi.MapInput                     `pulumi:"echosign"`
	Egnyte               pulumi.MapInput                     `pulumi:"egnyte"`
	Firebase             pulumi.MapInput                     `pulumi:"firebase"`
	Layer                pulumi.MapInput                     `pulumi:"layer"`
	Mscrm                pulumi.MapInput                     `pulumi:"mscrm"`
	Newrelic             pulumi.MapInput                     `pulumi:"newrelic"`
	Office365            pulumi.MapInput                     `pulumi:"office365"`
	Rms                  pulumi.MapInput                     `pulumi:"rms"`
	Salesforce           pulumi.MapInput                     `pulumi:"salesforce"`
	SalesforceApi        pulumi.MapInput                     `pulumi:"salesforceApi"`
	SalesforceSandboxApi pulumi.MapInput                     `pulumi:"salesforceSandboxApi"`
	Samlps               GetGlobalClientAddonSamlpArrayInput `pulumi:"samlps"`
	SapApi               pulumi.MapInput                     `pulumi:"sapApi"`
	Sentry               pulumi.MapInput                     `pulumi:"sentry"`
	Sharepoint           pulumi.MapInput                     `pulumi:"sharepoint"`
	Slack                pulumi.MapInput                     `pulumi:"slack"`
	Springcm             pulumi.MapInput                     `pulumi:"springcm"`
	Wams                 pulumi.MapInput                     `pulumi:"wams"`
	Wsfed                pulumi.MapInput                     `pulumi:"wsfed"`
	Zendesk              pulumi.MapInput                     `pulumi:"zendesk"`
	Zoom                 pulumi.MapInput                     `pulumi:"zoom"`
}

func (GetGlobalClientAddonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientAddon)(nil)).Elem()
}

func (i GetGlobalClientAddonArgs) ToGetGlobalClientAddonOutput() GetGlobalClientAddonOutput {
	return i.ToGetGlobalClientAddonOutputWithContext(context.Background())
}

func (i GetGlobalClientAddonArgs) ToGetGlobalClientAddonOutputWithContext(ctx context.Context) GetGlobalClientAddonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientAddonOutput)
}

// GetGlobalClientAddonArrayInput is an input type that accepts GetGlobalClientAddonArray and GetGlobalClientAddonArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientAddonArrayInput` via:
//
//	GetGlobalClientAddonArray{ GetGlobalClientAddonArgs{...} }
type GetGlobalClientAddonArrayInput interface {
	pulumi.Input

	ToGetGlobalClientAddonArrayOutput() GetGlobalClientAddonArrayOutput
	ToGetGlobalClientAddonArrayOutputWithContext(context.Context) GetGlobalClientAddonArrayOutput
}

type GetGlobalClientAddonArray []GetGlobalClientAddonInput

func (GetGlobalClientAddonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientAddon)(nil)).Elem()
}

func (i GetGlobalClientAddonArray) ToGetGlobalClientAddonArrayOutput() GetGlobalClientAddonArrayOutput {
	return i.ToGetGlobalClientAddonArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientAddonArray) ToGetGlobalClientAddonArrayOutputWithContext(ctx context.Context) GetGlobalClientAddonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientAddonArrayOutput)
}

type GetGlobalClientAddonOutput struct{ *pulumi.OutputState }

func (GetGlobalClientAddonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientAddon)(nil)).Elem()
}

func (o GetGlobalClientAddonOutput) ToGetGlobalClientAddonOutput() GetGlobalClientAddonOutput {
	return o
}

func (o GetGlobalClientAddonOutput) ToGetGlobalClientAddonOutputWithContext(ctx context.Context) GetGlobalClientAddonOutput {
	return o
}

func (o GetGlobalClientAddonOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Aws }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.AzureBlob }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.AzureSb }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Box }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Cloudbees }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Concur }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Dropbox }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Echosign }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Egnyte }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Firebase }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Layer }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Mscrm }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Newrelic }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Office365 }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Rms }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Salesforce }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.SalesforceApi }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.SalesforceSandboxApi }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Samlps() GetGlobalClientAddonSamlpArrayOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) []GetGlobalClientAddonSamlp { return v.Samlps }).(GetGlobalClientAddonSamlpArrayOutput)
}

func (o GetGlobalClientAddonOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.SapApi }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Sentry }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Sharepoint }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Slack }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Springcm }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Wams }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Wsfed }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Zendesk }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddon) map[string]interface{} { return v.Zoom }).(pulumi.MapOutput)
}

type GetGlobalClientAddonArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientAddonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientAddon)(nil)).Elem()
}

func (o GetGlobalClientAddonArrayOutput) ToGetGlobalClientAddonArrayOutput() GetGlobalClientAddonArrayOutput {
	return o
}

func (o GetGlobalClientAddonArrayOutput) ToGetGlobalClientAddonArrayOutputWithContext(ctx context.Context) GetGlobalClientAddonArrayOutput {
	return o
}

func (o GetGlobalClientAddonArrayOutput) Index(i pulumi.IntInput) GetGlobalClientAddonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientAddon {
		return vs[0].([]GetGlobalClientAddon)[vs[1].(int)]
	}).(GetGlobalClientAddonOutput)
}

type GetGlobalClientAddonSamlp struct {
	Audience                       string                 `pulumi:"audience"`
	AuthnContextClassRef           string                 `pulumi:"authnContextClassRef"`
	Binding                        string                 `pulumi:"binding"`
	CreateUpnClaim                 bool                   `pulumi:"createUpnClaim"`
	Destination                    string                 `pulumi:"destination"`
	DigestAlgorithm                string                 `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     bool                   `pulumi:"includeAttributeNameFormat"`
	Issuer                         string                 `pulumi:"issuer"`
	LifetimeInSeconds              int                    `pulumi:"lifetimeInSeconds"`
	Logout                         map[string]interface{} `pulumi:"logout"`
	MapIdentities                  bool                   `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           bool                   `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       map[string]interface{} `pulumi:"mappings"`
	NameIdentifierFormat           string                 `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           []string               `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping bool                   `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      string                 `pulumi:"recipient"`
	SignResponse                   bool                   `pulumi:"signResponse"`
	SignatureAlgorithm             string                 `pulumi:"signatureAlgorithm"`
	SigningCert                    string                 `pulumi:"signingCert"`
	TypedAttributes                bool                   `pulumi:"typedAttributes"`
}

// GetGlobalClientAddonSamlpInput is an input type that accepts GetGlobalClientAddonSamlpArgs and GetGlobalClientAddonSamlpOutput values.
// You can construct a concrete instance of `GetGlobalClientAddonSamlpInput` via:
//
//	GetGlobalClientAddonSamlpArgs{...}
type GetGlobalClientAddonSamlpInput interface {
	pulumi.Input

	ToGetGlobalClientAddonSamlpOutput() GetGlobalClientAddonSamlpOutput
	ToGetGlobalClientAddonSamlpOutputWithContext(context.Context) GetGlobalClientAddonSamlpOutput
}

type GetGlobalClientAddonSamlpArgs struct {
	Audience                       pulumi.StringInput      `pulumi:"audience"`
	AuthnContextClassRef           pulumi.StringInput      `pulumi:"authnContextClassRef"`
	Binding                        pulumi.StringInput      `pulumi:"binding"`
	CreateUpnClaim                 pulumi.BoolInput        `pulumi:"createUpnClaim"`
	Destination                    pulumi.StringInput      `pulumi:"destination"`
	DigestAlgorithm                pulumi.StringInput      `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     pulumi.BoolInput        `pulumi:"includeAttributeNameFormat"`
	Issuer                         pulumi.StringInput      `pulumi:"issuer"`
	LifetimeInSeconds              pulumi.IntInput         `pulumi:"lifetimeInSeconds"`
	Logout                         pulumi.MapInput         `pulumi:"logout"`
	MapIdentities                  pulumi.BoolInput        `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           pulumi.BoolInput        `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       pulumi.MapInput         `pulumi:"mappings"`
	NameIdentifierFormat           pulumi.StringInput      `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           pulumi.StringArrayInput `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping pulumi.BoolInput        `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      pulumi.StringInput      `pulumi:"recipient"`
	SignResponse                   pulumi.BoolInput        `pulumi:"signResponse"`
	SignatureAlgorithm             pulumi.StringInput      `pulumi:"signatureAlgorithm"`
	SigningCert                    pulumi.StringInput      `pulumi:"signingCert"`
	TypedAttributes                pulumi.BoolInput        `pulumi:"typedAttributes"`
}

func (GetGlobalClientAddonSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientAddonSamlp)(nil)).Elem()
}

func (i GetGlobalClientAddonSamlpArgs) ToGetGlobalClientAddonSamlpOutput() GetGlobalClientAddonSamlpOutput {
	return i.ToGetGlobalClientAddonSamlpOutputWithContext(context.Background())
}

func (i GetGlobalClientAddonSamlpArgs) ToGetGlobalClientAddonSamlpOutputWithContext(ctx context.Context) GetGlobalClientAddonSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientAddonSamlpOutput)
}

// GetGlobalClientAddonSamlpArrayInput is an input type that accepts GetGlobalClientAddonSamlpArray and GetGlobalClientAddonSamlpArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientAddonSamlpArrayInput` via:
//
//	GetGlobalClientAddonSamlpArray{ GetGlobalClientAddonSamlpArgs{...} }
type GetGlobalClientAddonSamlpArrayInput interface {
	pulumi.Input

	ToGetGlobalClientAddonSamlpArrayOutput() GetGlobalClientAddonSamlpArrayOutput
	ToGetGlobalClientAddonSamlpArrayOutputWithContext(context.Context) GetGlobalClientAddonSamlpArrayOutput
}

type GetGlobalClientAddonSamlpArray []GetGlobalClientAddonSamlpInput

func (GetGlobalClientAddonSamlpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientAddonSamlp)(nil)).Elem()
}

func (i GetGlobalClientAddonSamlpArray) ToGetGlobalClientAddonSamlpArrayOutput() GetGlobalClientAddonSamlpArrayOutput {
	return i.ToGetGlobalClientAddonSamlpArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientAddonSamlpArray) ToGetGlobalClientAddonSamlpArrayOutputWithContext(ctx context.Context) GetGlobalClientAddonSamlpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientAddonSamlpArrayOutput)
}

type GetGlobalClientAddonSamlpOutput struct{ *pulumi.OutputState }

func (GetGlobalClientAddonSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientAddonSamlp)(nil)).Elem()
}

func (o GetGlobalClientAddonSamlpOutput) ToGetGlobalClientAddonSamlpOutput() GetGlobalClientAddonSamlpOutput {
	return o
}

func (o GetGlobalClientAddonSamlpOutput) ToGetGlobalClientAddonSamlpOutputWithContext(ctx context.Context) GetGlobalClientAddonSamlpOutput {
	return o
}

func (o GetGlobalClientAddonSamlpOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.Audience }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) AuthnContextClassRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.AuthnContextClassRef }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Binding() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.Binding }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) CreateUpnClaim() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.CreateUpnClaim }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) DigestAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.DigestAlgorithm }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.Issuer }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Logout() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) map[string]interface{} { return v.Logout }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonSamlpOutput) MapIdentities() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.MapIdentities }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

func (o GetGlobalClientAddonSamlpOutput) NameIdentifierFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.NameIdentifierFormat }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

func (o GetGlobalClientAddonSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) Recipient() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.Recipient }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) SignResponse() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.SignResponse }).(pulumi.BoolOutput)
}

func (o GetGlobalClientAddonSamlpOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) SigningCert() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) string { return v.SigningCert }).(pulumi.StringOutput)
}

func (o GetGlobalClientAddonSamlpOutput) TypedAttributes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientAddonSamlp) bool { return v.TypedAttributes }).(pulumi.BoolOutput)
}

type GetGlobalClientAddonSamlpArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientAddonSamlpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientAddonSamlp)(nil)).Elem()
}

func (o GetGlobalClientAddonSamlpArrayOutput) ToGetGlobalClientAddonSamlpArrayOutput() GetGlobalClientAddonSamlpArrayOutput {
	return o
}

func (o GetGlobalClientAddonSamlpArrayOutput) ToGetGlobalClientAddonSamlpArrayOutputWithContext(ctx context.Context) GetGlobalClientAddonSamlpArrayOutput {
	return o
}

func (o GetGlobalClientAddonSamlpArrayOutput) Index(i pulumi.IntInput) GetGlobalClientAddonSamlpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientAddonSamlp {
		return vs[0].([]GetGlobalClientAddonSamlp)[vs[1].(int)]
	}).(GetGlobalClientAddonSamlpOutput)
}

type GetGlobalClientJwtConfiguration struct {
	Alg               string            `pulumi:"alg"`
	LifetimeInSeconds int               `pulumi:"lifetimeInSeconds"`
	Scopes            map[string]string `pulumi:"scopes"`
	SecretEncoded     bool              `pulumi:"secretEncoded"`
}

// GetGlobalClientJwtConfigurationInput is an input type that accepts GetGlobalClientJwtConfigurationArgs and GetGlobalClientJwtConfigurationOutput values.
// You can construct a concrete instance of `GetGlobalClientJwtConfigurationInput` via:
//
//	GetGlobalClientJwtConfigurationArgs{...}
type GetGlobalClientJwtConfigurationInput interface {
	pulumi.Input

	ToGetGlobalClientJwtConfigurationOutput() GetGlobalClientJwtConfigurationOutput
	ToGetGlobalClientJwtConfigurationOutputWithContext(context.Context) GetGlobalClientJwtConfigurationOutput
}

type GetGlobalClientJwtConfigurationArgs struct {
	Alg               pulumi.StringInput    `pulumi:"alg"`
	LifetimeInSeconds pulumi.IntInput       `pulumi:"lifetimeInSeconds"`
	Scopes            pulumi.StringMapInput `pulumi:"scopes"`
	SecretEncoded     pulumi.BoolInput      `pulumi:"secretEncoded"`
}

func (GetGlobalClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientJwtConfiguration)(nil)).Elem()
}

func (i GetGlobalClientJwtConfigurationArgs) ToGetGlobalClientJwtConfigurationOutput() GetGlobalClientJwtConfigurationOutput {
	return i.ToGetGlobalClientJwtConfigurationOutputWithContext(context.Background())
}

func (i GetGlobalClientJwtConfigurationArgs) ToGetGlobalClientJwtConfigurationOutputWithContext(ctx context.Context) GetGlobalClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientJwtConfigurationOutput)
}

// GetGlobalClientJwtConfigurationArrayInput is an input type that accepts GetGlobalClientJwtConfigurationArray and GetGlobalClientJwtConfigurationArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientJwtConfigurationArrayInput` via:
//
//	GetGlobalClientJwtConfigurationArray{ GetGlobalClientJwtConfigurationArgs{...} }
type GetGlobalClientJwtConfigurationArrayInput interface {
	pulumi.Input

	ToGetGlobalClientJwtConfigurationArrayOutput() GetGlobalClientJwtConfigurationArrayOutput
	ToGetGlobalClientJwtConfigurationArrayOutputWithContext(context.Context) GetGlobalClientJwtConfigurationArrayOutput
}

type GetGlobalClientJwtConfigurationArray []GetGlobalClientJwtConfigurationInput

func (GetGlobalClientJwtConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientJwtConfiguration)(nil)).Elem()
}

func (i GetGlobalClientJwtConfigurationArray) ToGetGlobalClientJwtConfigurationArrayOutput() GetGlobalClientJwtConfigurationArrayOutput {
	return i.ToGetGlobalClientJwtConfigurationArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientJwtConfigurationArray) ToGetGlobalClientJwtConfigurationArrayOutputWithContext(ctx context.Context) GetGlobalClientJwtConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientJwtConfigurationArrayOutput)
}

type GetGlobalClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (GetGlobalClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientJwtConfiguration)(nil)).Elem()
}

func (o GetGlobalClientJwtConfigurationOutput) ToGetGlobalClientJwtConfigurationOutput() GetGlobalClientJwtConfigurationOutput {
	return o
}

func (o GetGlobalClientJwtConfigurationOutput) ToGetGlobalClientJwtConfigurationOutputWithContext(ctx context.Context) GetGlobalClientJwtConfigurationOutput {
	return o
}

func (o GetGlobalClientJwtConfigurationOutput) Alg() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientJwtConfiguration) string { return v.Alg }).(pulumi.StringOutput)
}

func (o GetGlobalClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalClientJwtConfiguration) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetGlobalClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGlobalClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

func (o GetGlobalClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientJwtConfiguration) bool { return v.SecretEncoded }).(pulumi.BoolOutput)
}

type GetGlobalClientJwtConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientJwtConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientJwtConfiguration)(nil)).Elem()
}

func (o GetGlobalClientJwtConfigurationArrayOutput) ToGetGlobalClientJwtConfigurationArrayOutput() GetGlobalClientJwtConfigurationArrayOutput {
	return o
}

func (o GetGlobalClientJwtConfigurationArrayOutput) ToGetGlobalClientJwtConfigurationArrayOutputWithContext(ctx context.Context) GetGlobalClientJwtConfigurationArrayOutput {
	return o
}

func (o GetGlobalClientJwtConfigurationArrayOutput) Index(i pulumi.IntInput) GetGlobalClientJwtConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientJwtConfiguration {
		return vs[0].([]GetGlobalClientJwtConfiguration)[vs[1].(int)]
	}).(GetGlobalClientJwtConfigurationOutput)
}

type GetGlobalClientMobile struct {
	Androids []GetGlobalClientMobileAndroid `pulumi:"androids"`
	Ios      []GetGlobalClientMobileIo      `pulumi:"ios"`
}

// GetGlobalClientMobileInput is an input type that accepts GetGlobalClientMobileArgs and GetGlobalClientMobileOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileInput` via:
//
//	GetGlobalClientMobileArgs{...}
type GetGlobalClientMobileInput interface {
	pulumi.Input

	ToGetGlobalClientMobileOutput() GetGlobalClientMobileOutput
	ToGetGlobalClientMobileOutputWithContext(context.Context) GetGlobalClientMobileOutput
}

type GetGlobalClientMobileArgs struct {
	Androids GetGlobalClientMobileAndroidArrayInput `pulumi:"androids"`
	Ios      GetGlobalClientMobileIoArrayInput      `pulumi:"ios"`
}

func (GetGlobalClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobile)(nil)).Elem()
}

func (i GetGlobalClientMobileArgs) ToGetGlobalClientMobileOutput() GetGlobalClientMobileOutput {
	return i.ToGetGlobalClientMobileOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileArgs) ToGetGlobalClientMobileOutputWithContext(ctx context.Context) GetGlobalClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileOutput)
}

// GetGlobalClientMobileArrayInput is an input type that accepts GetGlobalClientMobileArray and GetGlobalClientMobileArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileArrayInput` via:
//
//	GetGlobalClientMobileArray{ GetGlobalClientMobileArgs{...} }
type GetGlobalClientMobileArrayInput interface {
	pulumi.Input

	ToGetGlobalClientMobileArrayOutput() GetGlobalClientMobileArrayOutput
	ToGetGlobalClientMobileArrayOutputWithContext(context.Context) GetGlobalClientMobileArrayOutput
}

type GetGlobalClientMobileArray []GetGlobalClientMobileInput

func (GetGlobalClientMobileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobile)(nil)).Elem()
}

func (i GetGlobalClientMobileArray) ToGetGlobalClientMobileArrayOutput() GetGlobalClientMobileArrayOutput {
	return i.ToGetGlobalClientMobileArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileArray) ToGetGlobalClientMobileArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileArrayOutput)
}

type GetGlobalClientMobileOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobile)(nil)).Elem()
}

func (o GetGlobalClientMobileOutput) ToGetGlobalClientMobileOutput() GetGlobalClientMobileOutput {
	return o
}

func (o GetGlobalClientMobileOutput) ToGetGlobalClientMobileOutputWithContext(ctx context.Context) GetGlobalClientMobileOutput {
	return o
}

func (o GetGlobalClientMobileOutput) Androids() GetGlobalClientMobileAndroidArrayOutput {
	return o.ApplyT(func(v GetGlobalClientMobile) []GetGlobalClientMobileAndroid { return v.Androids }).(GetGlobalClientMobileAndroidArrayOutput)
}

func (o GetGlobalClientMobileOutput) Ios() GetGlobalClientMobileIoArrayOutput {
	return o.ApplyT(func(v GetGlobalClientMobile) []GetGlobalClientMobileIo { return v.Ios }).(GetGlobalClientMobileIoArrayOutput)
}

type GetGlobalClientMobileArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobile)(nil)).Elem()
}

func (o GetGlobalClientMobileArrayOutput) ToGetGlobalClientMobileArrayOutput() GetGlobalClientMobileArrayOutput {
	return o
}

func (o GetGlobalClientMobileArrayOutput) ToGetGlobalClientMobileArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileArrayOutput {
	return o
}

func (o GetGlobalClientMobileArrayOutput) Index(i pulumi.IntInput) GetGlobalClientMobileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientMobile {
		return vs[0].([]GetGlobalClientMobile)[vs[1].(int)]
	}).(GetGlobalClientMobileOutput)
}

type GetGlobalClientMobileAndroid struct {
	AppPackageName         string   `pulumi:"appPackageName"`
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// GetGlobalClientMobileAndroidInput is an input type that accepts GetGlobalClientMobileAndroidArgs and GetGlobalClientMobileAndroidOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileAndroidInput` via:
//
//	GetGlobalClientMobileAndroidArgs{...}
type GetGlobalClientMobileAndroidInput interface {
	pulumi.Input

	ToGetGlobalClientMobileAndroidOutput() GetGlobalClientMobileAndroidOutput
	ToGetGlobalClientMobileAndroidOutputWithContext(context.Context) GetGlobalClientMobileAndroidOutput
}

type GetGlobalClientMobileAndroidArgs struct {
	AppPackageName         pulumi.StringInput      `pulumi:"appPackageName"`
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (GetGlobalClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobileAndroid)(nil)).Elem()
}

func (i GetGlobalClientMobileAndroidArgs) ToGetGlobalClientMobileAndroidOutput() GetGlobalClientMobileAndroidOutput {
	return i.ToGetGlobalClientMobileAndroidOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileAndroidArgs) ToGetGlobalClientMobileAndroidOutputWithContext(ctx context.Context) GetGlobalClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileAndroidOutput)
}

// GetGlobalClientMobileAndroidArrayInput is an input type that accepts GetGlobalClientMobileAndroidArray and GetGlobalClientMobileAndroidArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileAndroidArrayInput` via:
//
//	GetGlobalClientMobileAndroidArray{ GetGlobalClientMobileAndroidArgs{...} }
type GetGlobalClientMobileAndroidArrayInput interface {
	pulumi.Input

	ToGetGlobalClientMobileAndroidArrayOutput() GetGlobalClientMobileAndroidArrayOutput
	ToGetGlobalClientMobileAndroidArrayOutputWithContext(context.Context) GetGlobalClientMobileAndroidArrayOutput
}

type GetGlobalClientMobileAndroidArray []GetGlobalClientMobileAndroidInput

func (GetGlobalClientMobileAndroidArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobileAndroid)(nil)).Elem()
}

func (i GetGlobalClientMobileAndroidArray) ToGetGlobalClientMobileAndroidArrayOutput() GetGlobalClientMobileAndroidArrayOutput {
	return i.ToGetGlobalClientMobileAndroidArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileAndroidArray) ToGetGlobalClientMobileAndroidArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileAndroidArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileAndroidArrayOutput)
}

type GetGlobalClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobileAndroid)(nil)).Elem()
}

func (o GetGlobalClientMobileAndroidOutput) ToGetGlobalClientMobileAndroidOutput() GetGlobalClientMobileAndroidOutput {
	return o
}

func (o GetGlobalClientMobileAndroidOutput) ToGetGlobalClientMobileAndroidOutputWithContext(ctx context.Context) GetGlobalClientMobileAndroidOutput {
	return o
}

func (o GetGlobalClientMobileAndroidOutput) AppPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientMobileAndroid) string { return v.AppPackageName }).(pulumi.StringOutput)
}

func (o GetGlobalClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type GetGlobalClientMobileAndroidArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileAndroidArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobileAndroid)(nil)).Elem()
}

func (o GetGlobalClientMobileAndroidArrayOutput) ToGetGlobalClientMobileAndroidArrayOutput() GetGlobalClientMobileAndroidArrayOutput {
	return o
}

func (o GetGlobalClientMobileAndroidArrayOutput) ToGetGlobalClientMobileAndroidArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileAndroidArrayOutput {
	return o
}

func (o GetGlobalClientMobileAndroidArrayOutput) Index(i pulumi.IntInput) GetGlobalClientMobileAndroidOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientMobileAndroid {
		return vs[0].([]GetGlobalClientMobileAndroid)[vs[1].(int)]
	}).(GetGlobalClientMobileAndroidOutput)
}

type GetGlobalClientMobileIo struct {
	AppBundleIdentifier string `pulumi:"appBundleIdentifier"`
	TeamId              string `pulumi:"teamId"`
}

// GetGlobalClientMobileIoInput is an input type that accepts GetGlobalClientMobileIoArgs and GetGlobalClientMobileIoOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileIoInput` via:
//
//	GetGlobalClientMobileIoArgs{...}
type GetGlobalClientMobileIoInput interface {
	pulumi.Input

	ToGetGlobalClientMobileIoOutput() GetGlobalClientMobileIoOutput
	ToGetGlobalClientMobileIoOutputWithContext(context.Context) GetGlobalClientMobileIoOutput
}

type GetGlobalClientMobileIoArgs struct {
	AppBundleIdentifier pulumi.StringInput `pulumi:"appBundleIdentifier"`
	TeamId              pulumi.StringInput `pulumi:"teamId"`
}

func (GetGlobalClientMobileIoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobileIo)(nil)).Elem()
}

func (i GetGlobalClientMobileIoArgs) ToGetGlobalClientMobileIoOutput() GetGlobalClientMobileIoOutput {
	return i.ToGetGlobalClientMobileIoOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileIoArgs) ToGetGlobalClientMobileIoOutputWithContext(ctx context.Context) GetGlobalClientMobileIoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileIoOutput)
}

// GetGlobalClientMobileIoArrayInput is an input type that accepts GetGlobalClientMobileIoArray and GetGlobalClientMobileIoArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientMobileIoArrayInput` via:
//
//	GetGlobalClientMobileIoArray{ GetGlobalClientMobileIoArgs{...} }
type GetGlobalClientMobileIoArrayInput interface {
	pulumi.Input

	ToGetGlobalClientMobileIoArrayOutput() GetGlobalClientMobileIoArrayOutput
	ToGetGlobalClientMobileIoArrayOutputWithContext(context.Context) GetGlobalClientMobileIoArrayOutput
}

type GetGlobalClientMobileIoArray []GetGlobalClientMobileIoInput

func (GetGlobalClientMobileIoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobileIo)(nil)).Elem()
}

func (i GetGlobalClientMobileIoArray) ToGetGlobalClientMobileIoArrayOutput() GetGlobalClientMobileIoArrayOutput {
	return i.ToGetGlobalClientMobileIoArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientMobileIoArray) ToGetGlobalClientMobileIoArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileIoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientMobileIoArrayOutput)
}

type GetGlobalClientMobileIoOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileIoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientMobileIo)(nil)).Elem()
}

func (o GetGlobalClientMobileIoOutput) ToGetGlobalClientMobileIoOutput() GetGlobalClientMobileIoOutput {
	return o
}

func (o GetGlobalClientMobileIoOutput) ToGetGlobalClientMobileIoOutputWithContext(ctx context.Context) GetGlobalClientMobileIoOutput {
	return o
}

func (o GetGlobalClientMobileIoOutput) AppBundleIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientMobileIo) string { return v.AppBundleIdentifier }).(pulumi.StringOutput)
}

func (o GetGlobalClientMobileIoOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientMobileIo) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetGlobalClientMobileIoArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientMobileIoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientMobileIo)(nil)).Elem()
}

func (o GetGlobalClientMobileIoArrayOutput) ToGetGlobalClientMobileIoArrayOutput() GetGlobalClientMobileIoArrayOutput {
	return o
}

func (o GetGlobalClientMobileIoArrayOutput) ToGetGlobalClientMobileIoArrayOutputWithContext(ctx context.Context) GetGlobalClientMobileIoArrayOutput {
	return o
}

func (o GetGlobalClientMobileIoArrayOutput) Index(i pulumi.IntInput) GetGlobalClientMobileIoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientMobileIo {
		return vs[0].([]GetGlobalClientMobileIo)[vs[1].(int)]
	}).(GetGlobalClientMobileIoOutput)
}

type GetGlobalClientNativeSocialLogin struct {
	Apples    []GetGlobalClientNativeSocialLoginApple    `pulumi:"apples"`
	Facebooks []GetGlobalClientNativeSocialLoginFacebook `pulumi:"facebooks"`
}

// GetGlobalClientNativeSocialLoginInput is an input type that accepts GetGlobalClientNativeSocialLoginArgs and GetGlobalClientNativeSocialLoginOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginInput` via:
//
//	GetGlobalClientNativeSocialLoginArgs{...}
type GetGlobalClientNativeSocialLoginInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginOutput() GetGlobalClientNativeSocialLoginOutput
	ToGetGlobalClientNativeSocialLoginOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginOutput
}

type GetGlobalClientNativeSocialLoginArgs struct {
	Apples    GetGlobalClientNativeSocialLoginAppleArrayInput    `pulumi:"apples"`
	Facebooks GetGlobalClientNativeSocialLoginFacebookArrayInput `pulumi:"facebooks"`
}

func (GetGlobalClientNativeSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLogin)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginArgs) ToGetGlobalClientNativeSocialLoginOutput() GetGlobalClientNativeSocialLoginOutput {
	return i.ToGetGlobalClientNativeSocialLoginOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginArgs) ToGetGlobalClientNativeSocialLoginOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginOutput)
}

// GetGlobalClientNativeSocialLoginArrayInput is an input type that accepts GetGlobalClientNativeSocialLoginArray and GetGlobalClientNativeSocialLoginArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginArrayInput` via:
//
//	GetGlobalClientNativeSocialLoginArray{ GetGlobalClientNativeSocialLoginArgs{...} }
type GetGlobalClientNativeSocialLoginArrayInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginArrayOutput() GetGlobalClientNativeSocialLoginArrayOutput
	ToGetGlobalClientNativeSocialLoginArrayOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginArrayOutput
}

type GetGlobalClientNativeSocialLoginArray []GetGlobalClientNativeSocialLoginInput

func (GetGlobalClientNativeSocialLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLogin)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginArray) ToGetGlobalClientNativeSocialLoginArrayOutput() GetGlobalClientNativeSocialLoginArrayOutput {
	return i.ToGetGlobalClientNativeSocialLoginArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginArray) ToGetGlobalClientNativeSocialLoginArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginArrayOutput)
}

type GetGlobalClientNativeSocialLoginOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLogin)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginOutput) ToGetGlobalClientNativeSocialLoginOutput() GetGlobalClientNativeSocialLoginOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginOutput) ToGetGlobalClientNativeSocialLoginOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginOutput) Apples() GetGlobalClientNativeSocialLoginAppleArrayOutput {
	return o.ApplyT(func(v GetGlobalClientNativeSocialLogin) []GetGlobalClientNativeSocialLoginApple { return v.Apples }).(GetGlobalClientNativeSocialLoginAppleArrayOutput)
}

func (o GetGlobalClientNativeSocialLoginOutput) Facebooks() GetGlobalClientNativeSocialLoginFacebookArrayOutput {
	return o.ApplyT(func(v GetGlobalClientNativeSocialLogin) []GetGlobalClientNativeSocialLoginFacebook {
		return v.Facebooks
	}).(GetGlobalClientNativeSocialLoginFacebookArrayOutput)
}

type GetGlobalClientNativeSocialLoginArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLogin)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginArrayOutput) ToGetGlobalClientNativeSocialLoginArrayOutput() GetGlobalClientNativeSocialLoginArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginArrayOutput) ToGetGlobalClientNativeSocialLoginArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginArrayOutput) Index(i pulumi.IntInput) GetGlobalClientNativeSocialLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientNativeSocialLogin {
		return vs[0].([]GetGlobalClientNativeSocialLogin)[vs[1].(int)]
	}).(GetGlobalClientNativeSocialLoginOutput)
}

type GetGlobalClientNativeSocialLoginApple struct {
	Enabled bool `pulumi:"enabled"`
}

// GetGlobalClientNativeSocialLoginAppleInput is an input type that accepts GetGlobalClientNativeSocialLoginAppleArgs and GetGlobalClientNativeSocialLoginAppleOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginAppleInput` via:
//
//	GetGlobalClientNativeSocialLoginAppleArgs{...}
type GetGlobalClientNativeSocialLoginAppleInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginAppleOutput() GetGlobalClientNativeSocialLoginAppleOutput
	ToGetGlobalClientNativeSocialLoginAppleOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginAppleOutput
}

type GetGlobalClientNativeSocialLoginAppleArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetGlobalClientNativeSocialLoginAppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginAppleArgs) ToGetGlobalClientNativeSocialLoginAppleOutput() GetGlobalClientNativeSocialLoginAppleOutput {
	return i.ToGetGlobalClientNativeSocialLoginAppleOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginAppleArgs) ToGetGlobalClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginAppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginAppleOutput)
}

// GetGlobalClientNativeSocialLoginAppleArrayInput is an input type that accepts GetGlobalClientNativeSocialLoginAppleArray and GetGlobalClientNativeSocialLoginAppleArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginAppleArrayInput` via:
//
//	GetGlobalClientNativeSocialLoginAppleArray{ GetGlobalClientNativeSocialLoginAppleArgs{...} }
type GetGlobalClientNativeSocialLoginAppleArrayInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginAppleArrayOutput() GetGlobalClientNativeSocialLoginAppleArrayOutput
	ToGetGlobalClientNativeSocialLoginAppleArrayOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginAppleArrayOutput
}

type GetGlobalClientNativeSocialLoginAppleArray []GetGlobalClientNativeSocialLoginAppleInput

func (GetGlobalClientNativeSocialLoginAppleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginAppleArray) ToGetGlobalClientNativeSocialLoginAppleArrayOutput() GetGlobalClientNativeSocialLoginAppleArrayOutput {
	return i.ToGetGlobalClientNativeSocialLoginAppleArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginAppleArray) ToGetGlobalClientNativeSocialLoginAppleArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginAppleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginAppleArrayOutput)
}

type GetGlobalClientNativeSocialLoginAppleOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginAppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginAppleOutput) ToGetGlobalClientNativeSocialLoginAppleOutput() GetGlobalClientNativeSocialLoginAppleOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginAppleOutput) ToGetGlobalClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginAppleOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginAppleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientNativeSocialLoginApple) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetGlobalClientNativeSocialLoginAppleArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginAppleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginAppleArrayOutput) ToGetGlobalClientNativeSocialLoginAppleArrayOutput() GetGlobalClientNativeSocialLoginAppleArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginAppleArrayOutput) ToGetGlobalClientNativeSocialLoginAppleArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginAppleArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginAppleArrayOutput) Index(i pulumi.IntInput) GetGlobalClientNativeSocialLoginAppleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientNativeSocialLoginApple {
		return vs[0].([]GetGlobalClientNativeSocialLoginApple)[vs[1].(int)]
	}).(GetGlobalClientNativeSocialLoginAppleOutput)
}

type GetGlobalClientNativeSocialLoginFacebook struct {
	Enabled bool `pulumi:"enabled"`
}

// GetGlobalClientNativeSocialLoginFacebookInput is an input type that accepts GetGlobalClientNativeSocialLoginFacebookArgs and GetGlobalClientNativeSocialLoginFacebookOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginFacebookInput` via:
//
//	GetGlobalClientNativeSocialLoginFacebookArgs{...}
type GetGlobalClientNativeSocialLoginFacebookInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginFacebookOutput() GetGlobalClientNativeSocialLoginFacebookOutput
	ToGetGlobalClientNativeSocialLoginFacebookOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginFacebookOutput
}

type GetGlobalClientNativeSocialLoginFacebookArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetGlobalClientNativeSocialLoginFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginFacebookArgs) ToGetGlobalClientNativeSocialLoginFacebookOutput() GetGlobalClientNativeSocialLoginFacebookOutput {
	return i.ToGetGlobalClientNativeSocialLoginFacebookOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginFacebookArgs) ToGetGlobalClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginFacebookOutput)
}

// GetGlobalClientNativeSocialLoginFacebookArrayInput is an input type that accepts GetGlobalClientNativeSocialLoginFacebookArray and GetGlobalClientNativeSocialLoginFacebookArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientNativeSocialLoginFacebookArrayInput` via:
//
//	GetGlobalClientNativeSocialLoginFacebookArray{ GetGlobalClientNativeSocialLoginFacebookArgs{...} }
type GetGlobalClientNativeSocialLoginFacebookArrayInput interface {
	pulumi.Input

	ToGetGlobalClientNativeSocialLoginFacebookArrayOutput() GetGlobalClientNativeSocialLoginFacebookArrayOutput
	ToGetGlobalClientNativeSocialLoginFacebookArrayOutputWithContext(context.Context) GetGlobalClientNativeSocialLoginFacebookArrayOutput
}

type GetGlobalClientNativeSocialLoginFacebookArray []GetGlobalClientNativeSocialLoginFacebookInput

func (GetGlobalClientNativeSocialLoginFacebookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GetGlobalClientNativeSocialLoginFacebookArray) ToGetGlobalClientNativeSocialLoginFacebookArrayOutput() GetGlobalClientNativeSocialLoginFacebookArrayOutput {
	return i.ToGetGlobalClientNativeSocialLoginFacebookArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientNativeSocialLoginFacebookArray) ToGetGlobalClientNativeSocialLoginFacebookArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginFacebookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientNativeSocialLoginFacebookArrayOutput)
}

type GetGlobalClientNativeSocialLoginFacebookOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginFacebookOutput) ToGetGlobalClientNativeSocialLoginFacebookOutput() GetGlobalClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginFacebookOutput) ToGetGlobalClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginFacebookOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientNativeSocialLoginFacebook) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetGlobalClientNativeSocialLoginFacebookArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientNativeSocialLoginFacebookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GetGlobalClientNativeSocialLoginFacebookArrayOutput) ToGetGlobalClientNativeSocialLoginFacebookArrayOutput() GetGlobalClientNativeSocialLoginFacebookArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginFacebookArrayOutput) ToGetGlobalClientNativeSocialLoginFacebookArrayOutputWithContext(ctx context.Context) GetGlobalClientNativeSocialLoginFacebookArrayOutput {
	return o
}

func (o GetGlobalClientNativeSocialLoginFacebookArrayOutput) Index(i pulumi.IntInput) GetGlobalClientNativeSocialLoginFacebookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientNativeSocialLoginFacebook {
		return vs[0].([]GetGlobalClientNativeSocialLoginFacebook)[vs[1].(int)]
	}).(GetGlobalClientNativeSocialLoginFacebookOutput)
}

type GetGlobalClientRefreshToken struct {
	ExpirationType            string `pulumi:"expirationType"`
	IdleTokenLifetime         int    `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime bool   `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     bool   `pulumi:"infiniteTokenLifetime"`
	Leeway                    int    `pulumi:"leeway"`
	RotationType              string `pulumi:"rotationType"`
	TokenLifetime             int    `pulumi:"tokenLifetime"`
}

// GetGlobalClientRefreshTokenInput is an input type that accepts GetGlobalClientRefreshTokenArgs and GetGlobalClientRefreshTokenOutput values.
// You can construct a concrete instance of `GetGlobalClientRefreshTokenInput` via:
//
//	GetGlobalClientRefreshTokenArgs{...}
type GetGlobalClientRefreshTokenInput interface {
	pulumi.Input

	ToGetGlobalClientRefreshTokenOutput() GetGlobalClientRefreshTokenOutput
	ToGetGlobalClientRefreshTokenOutputWithContext(context.Context) GetGlobalClientRefreshTokenOutput
}

type GetGlobalClientRefreshTokenArgs struct {
	ExpirationType            pulumi.StringInput `pulumi:"expirationType"`
	IdleTokenLifetime         pulumi.IntInput    `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime pulumi.BoolInput   `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     pulumi.BoolInput   `pulumi:"infiniteTokenLifetime"`
	Leeway                    pulumi.IntInput    `pulumi:"leeway"`
	RotationType              pulumi.StringInput `pulumi:"rotationType"`
	TokenLifetime             pulumi.IntInput    `pulumi:"tokenLifetime"`
}

func (GetGlobalClientRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientRefreshToken)(nil)).Elem()
}

func (i GetGlobalClientRefreshTokenArgs) ToGetGlobalClientRefreshTokenOutput() GetGlobalClientRefreshTokenOutput {
	return i.ToGetGlobalClientRefreshTokenOutputWithContext(context.Background())
}

func (i GetGlobalClientRefreshTokenArgs) ToGetGlobalClientRefreshTokenOutputWithContext(ctx context.Context) GetGlobalClientRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientRefreshTokenOutput)
}

// GetGlobalClientRefreshTokenArrayInput is an input type that accepts GetGlobalClientRefreshTokenArray and GetGlobalClientRefreshTokenArrayOutput values.
// You can construct a concrete instance of `GetGlobalClientRefreshTokenArrayInput` via:
//
//	GetGlobalClientRefreshTokenArray{ GetGlobalClientRefreshTokenArgs{...} }
type GetGlobalClientRefreshTokenArrayInput interface {
	pulumi.Input

	ToGetGlobalClientRefreshTokenArrayOutput() GetGlobalClientRefreshTokenArrayOutput
	ToGetGlobalClientRefreshTokenArrayOutputWithContext(context.Context) GetGlobalClientRefreshTokenArrayOutput
}

type GetGlobalClientRefreshTokenArray []GetGlobalClientRefreshTokenInput

func (GetGlobalClientRefreshTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientRefreshToken)(nil)).Elem()
}

func (i GetGlobalClientRefreshTokenArray) ToGetGlobalClientRefreshTokenArrayOutput() GetGlobalClientRefreshTokenArrayOutput {
	return i.ToGetGlobalClientRefreshTokenArrayOutputWithContext(context.Background())
}

func (i GetGlobalClientRefreshTokenArray) ToGetGlobalClientRefreshTokenArrayOutputWithContext(ctx context.Context) GetGlobalClientRefreshTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalClientRefreshTokenArrayOutput)
}

type GetGlobalClientRefreshTokenOutput struct{ *pulumi.OutputState }

func (GetGlobalClientRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalClientRefreshToken)(nil)).Elem()
}

func (o GetGlobalClientRefreshTokenOutput) ToGetGlobalClientRefreshTokenOutput() GetGlobalClientRefreshTokenOutput {
	return o
}

func (o GetGlobalClientRefreshTokenOutput) ToGetGlobalClientRefreshTokenOutputWithContext(ctx context.Context) GetGlobalClientRefreshTokenOutput {
	return o
}

func (o GetGlobalClientRefreshTokenOutput) ExpirationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) string { return v.ExpirationType }).(pulumi.StringOutput)
}

func (o GetGlobalClientRefreshTokenOutput) IdleTokenLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) int { return v.IdleTokenLifetime }).(pulumi.IntOutput)
}

func (o GetGlobalClientRefreshTokenOutput) InfiniteIdleTokenLifetime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) bool { return v.InfiniteIdleTokenLifetime }).(pulumi.BoolOutput)
}

func (o GetGlobalClientRefreshTokenOutput) InfiniteTokenLifetime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) bool { return v.InfiniteTokenLifetime }).(pulumi.BoolOutput)
}

func (o GetGlobalClientRefreshTokenOutput) Leeway() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) int { return v.Leeway }).(pulumi.IntOutput)
}

func (o GetGlobalClientRefreshTokenOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) string { return v.RotationType }).(pulumi.StringOutput)
}

func (o GetGlobalClientRefreshTokenOutput) TokenLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetGlobalClientRefreshToken) int { return v.TokenLifetime }).(pulumi.IntOutput)
}

type GetGlobalClientRefreshTokenArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalClientRefreshTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalClientRefreshToken)(nil)).Elem()
}

func (o GetGlobalClientRefreshTokenArrayOutput) ToGetGlobalClientRefreshTokenArrayOutput() GetGlobalClientRefreshTokenArrayOutput {
	return o
}

func (o GetGlobalClientRefreshTokenArrayOutput) ToGetGlobalClientRefreshTokenArrayOutputWithContext(ctx context.Context) GetGlobalClientRefreshTokenArrayOutput {
	return o
}

func (o GetGlobalClientRefreshTokenArrayOutput) Index(i pulumi.IntInput) GetGlobalClientRefreshTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalClientRefreshToken {
		return vs[0].([]GetGlobalClientRefreshToken)[vs[1].(int)]
	}).(GetGlobalClientRefreshTokenOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionDependencyInput)(nil)).Elem(), ActionDependencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionDependencyArrayInput)(nil)).Elem(), ActionDependencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSecretInput)(nil)).Elem(), ActionSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSecretArrayInput)(nil)).Elem(), ActionSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSupportedTriggersInput)(nil)).Elem(), ActionSupportedTriggersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSupportedTriggersPtrInput)(nil)).Elem(), ActionSupportedTriggersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionInput)(nil)).Elem(), AttackProtectionBreachedPasswordDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPtrInput)(nil)).Elem(), AttackProtectionBreachedPasswordDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPreUserRegistrationInput)(nil)).Elem(), AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput)(nil)).Elem(), AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBruteForceProtectionInput)(nil)).Elem(), AttackProtectionBruteForceProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBruteForceProtectionPtrInput)(nil)).Elem(), AttackProtectionBruteForceProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPtrInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLoginInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingColorsInput)(nil)).Elem(), BrandingColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingColorsPtrInput)(nil)).Elem(), BrandingColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingFontInput)(nil)).Elem(), BrandingFontArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingFontPtrInput)(nil)).Elem(), BrandingFontArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeBordersInput)(nil)).Elem(), BrandingThemeBordersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeBordersPtrInput)(nil)).Elem(), BrandingThemeBordersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeColorsInput)(nil)).Elem(), BrandingThemeColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeColorsPtrInput)(nil)).Elem(), BrandingThemeColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsInput)(nil)).Elem(), BrandingThemeFontsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsPtrInput)(nil)).Elem(), BrandingThemeFontsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsBodyTextInput)(nil)).Elem(), BrandingThemeFontsBodyTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsBodyTextPtrInput)(nil)).Elem(), BrandingThemeFontsBodyTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsButtonsTextInput)(nil)).Elem(), BrandingThemeFontsButtonsTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsButtonsTextPtrInput)(nil)).Elem(), BrandingThemeFontsButtonsTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsInputLabelsInput)(nil)).Elem(), BrandingThemeFontsInputLabelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsInputLabelsPtrInput)(nil)).Elem(), BrandingThemeFontsInputLabelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsLinksInput)(nil)).Elem(), BrandingThemeFontsLinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsLinksPtrInput)(nil)).Elem(), BrandingThemeFontsLinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsSubtitleInput)(nil)).Elem(), BrandingThemeFontsSubtitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsSubtitlePtrInput)(nil)).Elem(), BrandingThemeFontsSubtitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsTitleInput)(nil)).Elem(), BrandingThemeFontsTitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsTitlePtrInput)(nil)).Elem(), BrandingThemeFontsTitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemePageBackgroundInput)(nil)).Elem(), BrandingThemePageBackgroundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemePageBackgroundPtrInput)(nil)).Elem(), BrandingThemePageBackgroundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeWidgetInput)(nil)).Elem(), BrandingThemeWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeWidgetPtrInput)(nil)).Elem(), BrandingThemeWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingUniversalLoginInput)(nil)).Elem(), BrandingUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingUniversalLoginPtrInput)(nil)).Elem(), BrandingUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsInput)(nil)).Elem(), ClientAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsPtrInput)(nil)).Elem(), ClientAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSamlpInput)(nil)).Elem(), ClientAddonsSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSamlpPtrInput)(nil)).Elem(), ClientAddonsSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientJwtConfigurationInput)(nil)).Elem(), ClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientJwtConfigurationPtrInput)(nil)).Elem(), ClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileInput)(nil)).Elem(), ClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobilePtrInput)(nil)).Elem(), ClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileAndroidInput)(nil)).Elem(), ClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileAndroidPtrInput)(nil)).Elem(), ClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileIosInput)(nil)).Elem(), ClientMobileIosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileIosPtrInput)(nil)).Elem(), ClientMobileIosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginInput)(nil)).Elem(), ClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginPtrInput)(nil)).Elem(), ClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginAppleInput)(nil)).Elem(), ClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginApplePtrInput)(nil)).Elem(), ClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginFacebookInput)(nil)).Elem(), ClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginFacebookPtrInput)(nil)).Elem(), ClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientRefreshTokenInput)(nil)).Elem(), ClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientRefreshTokenPtrInput)(nil)).Elem(), ClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsInput)(nil)).Elem(), ConnectionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPtrInput)(nil)).Elem(), ConnectionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsGatewayAuthenticationInput)(nil)).Elem(), ConnectionOptionsGatewayAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsGatewayAuthenticationPtrInput)(nil)).Elem(), ConnectionOptionsGatewayAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsIdpInitiatedInput)(nil)).Elem(), ConnectionOptionsIdpInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsIdpInitiatedPtrInput)(nil)).Elem(), ConnectionOptionsIdpInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsMfaInput)(nil)).Elem(), ConnectionOptionsMfaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsMfaPtrInput)(nil)).Elem(), ConnectionOptionsMfaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptionsInput)(nil)).Elem(), ConnectionOptionsPasswordComplexityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptionsPtrInput)(nil)).Elem(), ConnectionOptionsPasswordComplexityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordDictionaryInput)(nil)).Elem(), ConnectionOptionsPasswordDictionaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordDictionaryPtrInput)(nil)).Elem(), ConnectionOptionsPasswordDictionaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordHistoryInput)(nil)).Elem(), ConnectionOptionsPasswordHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordHistoryArrayInput)(nil)).Elem(), ConnectionOptionsPasswordHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfoInput)(nil)).Elem(), ConnectionOptionsPasswordNoPersonalInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfoPtrInput)(nil)).Elem(), ConnectionOptionsPasswordNoPersonalInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsSigningKeyInput)(nil)).Elem(), ConnectionOptionsSigningKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsSigningKeyPtrInput)(nil)).Elem(), ConnectionOptionsSigningKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsTotpInput)(nil)).Elem(), ConnectionOptionsTotpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsTotpPtrInput)(nil)).Elem(), ConnectionOptionsTotpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationInput)(nil)).Elem(), ConnectionOptionsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationPtrInput)(nil)).Elem(), ConnectionOptionsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationUsernameInput)(nil)).Elem(), ConnectionOptionsValidationUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationUsernamePtrInput)(nil)).Elem(), ConnectionOptionsValidationUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainVerificationTypeInput)(nil)).Elem(), CustomDomainVerificationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainVerificationTypeArrayInput)(nil)).Elem(), CustomDomainVerificationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailCredentialsInput)(nil)).Elem(), EmailCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailCredentialsPtrInput)(nil)).Elem(), EmailCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSettingsInput)(nil)).Elem(), EmailSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSettingsPtrInput)(nil)).Elem(), EmailSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSettingsHeadersInput)(nil)).Elem(), EmailSettingsHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSettingsHeadersPtrInput)(nil)).Elem(), EmailSettingsHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSettingsMessageInput)(nil)).Elem(), EmailSettingsMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailSettingsMessagePtrInput)(nil)).Elem(), EmailSettingsMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientAddonsInput)(nil)).Elem(), GlobalClientAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientAddonsPtrInput)(nil)).Elem(), GlobalClientAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientAddonsSamlpInput)(nil)).Elem(), GlobalClientAddonsSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientAddonsSamlpPtrInput)(nil)).Elem(), GlobalClientAddonsSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientJwtConfigurationInput)(nil)).Elem(), GlobalClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientJwtConfigurationPtrInput)(nil)).Elem(), GlobalClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobileInput)(nil)).Elem(), GlobalClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobilePtrInput)(nil)).Elem(), GlobalClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobileAndroidInput)(nil)).Elem(), GlobalClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobileAndroidPtrInput)(nil)).Elem(), GlobalClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobileIosInput)(nil)).Elem(), GlobalClientMobileIosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientMobileIosPtrInput)(nil)).Elem(), GlobalClientMobileIosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginInput)(nil)).Elem(), GlobalClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginPtrInput)(nil)).Elem(), GlobalClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginAppleInput)(nil)).Elem(), GlobalClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginApplePtrInput)(nil)).Elem(), GlobalClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginFacebookInput)(nil)).Elem(), GlobalClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientNativeSocialLoginFacebookPtrInput)(nil)).Elem(), GlobalClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientRefreshTokenInput)(nil)).Elem(), GlobalClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClientRefreshTokenPtrInput)(nil)).Elem(), GlobalClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianDuoInput)(nil)).Elem(), GuardianDuoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianDuoPtrInput)(nil)).Elem(), GuardianDuoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhoneInput)(nil)).Elem(), GuardianPhoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhonePtrInput)(nil)).Elem(), GuardianPhoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhoneOptionsInput)(nil)).Elem(), GuardianPhoneOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhoneOptionsPtrInput)(nil)).Elem(), GuardianPhoneOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushInput)(nil)).Elem(), GuardianPushArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushPtrInput)(nil)).Elem(), GuardianPushArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushAmazonSnsInput)(nil)).Elem(), GuardianPushAmazonSnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushAmazonSnsPtrInput)(nil)).Elem(), GuardianPushAmazonSnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushCustomAppInput)(nil)).Elem(), GuardianPushCustomAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushCustomAppPtrInput)(nil)).Elem(), GuardianPushCustomAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianWebauthnPlatformInput)(nil)).Elem(), GuardianWebauthnPlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianWebauthnPlatformPtrInput)(nil)).Elem(), GuardianWebauthnPlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianWebauthnRoamingInput)(nil)).Elem(), GuardianWebauthnRoamingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianWebauthnRoamingPtrInput)(nil)).Elem(), GuardianWebauthnRoamingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogStreamSinkInput)(nil)).Elem(), LogStreamSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogStreamSinkPtrInput)(nil)).Elem(), LogStreamSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationBrandingInput)(nil)).Elem(), OrganizationBrandingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationBrandingPtrInput)(nil)).Elem(), OrganizationBrandingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceServerScopeInput)(nil)).Elem(), ResourceServerScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceServerScopeArrayInput)(nil)).Elem(), ResourceServerScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePermissionInput)(nil)).Elem(), RolePermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePermissionArrayInput)(nil)).Elem(), RolePermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantChangePasswordInput)(nil)).Elem(), TenantChangePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantChangePasswordPtrInput)(nil)).Elem(), TenantChangePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantErrorPageInput)(nil)).Elem(), TenantErrorPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantErrorPagePtrInput)(nil)).Elem(), TenantErrorPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantFlagsInput)(nil)).Elem(), TenantFlagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantFlagsPtrInput)(nil)).Elem(), TenantFlagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantGuardianMfaPageInput)(nil)).Elem(), TenantGuardianMfaPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantGuardianMfaPagePtrInput)(nil)).Elem(), TenantGuardianMfaPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantSessionCookieInput)(nil)).Elem(), TenantSessionCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantSessionCookiePtrInput)(nil)).Elem(), TenantSessionCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantUniversalLoginInput)(nil)).Elem(), TenantUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantUniversalLoginPtrInput)(nil)).Elem(), TenantUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantUniversalLoginColorsInput)(nil)).Elem(), TenantUniversalLoginColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantUniversalLoginColorsPtrInput)(nil)).Elem(), TenantUniversalLoginColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBindingActionInput)(nil)).Elem(), TriggerBindingActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerBindingActionArrayInput)(nil)).Elem(), TriggerBindingActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonInput)(nil)).Elem(), GetClientAddonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonArrayInput)(nil)).Elem(), GetClientAddonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSamlpInput)(nil)).Elem(), GetClientAddonSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSamlpArrayInput)(nil)).Elem(), GetClientAddonSamlpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientJwtConfigurationInput)(nil)).Elem(), GetClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientJwtConfigurationArrayInput)(nil)).Elem(), GetClientJwtConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileInput)(nil)).Elem(), GetClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileArrayInput)(nil)).Elem(), GetClientMobileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileAndroidInput)(nil)).Elem(), GetClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileAndroidArrayInput)(nil)).Elem(), GetClientMobileAndroidArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileIoInput)(nil)).Elem(), GetClientMobileIoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileIoArrayInput)(nil)).Elem(), GetClientMobileIoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginInput)(nil)).Elem(), GetClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginArrayInput)(nil)).Elem(), GetClientNativeSocialLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginAppleInput)(nil)).Elem(), GetClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginAppleArrayInput)(nil)).Elem(), GetClientNativeSocialLoginAppleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginFacebookInput)(nil)).Elem(), GetClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginFacebookArrayInput)(nil)).Elem(), GetClientNativeSocialLoginFacebookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientRefreshTokenInput)(nil)).Elem(), GetClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientRefreshTokenArrayInput)(nil)).Elem(), GetClientRefreshTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientAddonInput)(nil)).Elem(), GetGlobalClientAddonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientAddonArrayInput)(nil)).Elem(), GetGlobalClientAddonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientAddonSamlpInput)(nil)).Elem(), GetGlobalClientAddonSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientAddonSamlpArrayInput)(nil)).Elem(), GetGlobalClientAddonSamlpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientJwtConfigurationInput)(nil)).Elem(), GetGlobalClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientJwtConfigurationArrayInput)(nil)).Elem(), GetGlobalClientJwtConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileInput)(nil)).Elem(), GetGlobalClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileArrayInput)(nil)).Elem(), GetGlobalClientMobileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileAndroidInput)(nil)).Elem(), GetGlobalClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileAndroidArrayInput)(nil)).Elem(), GetGlobalClientMobileAndroidArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileIoInput)(nil)).Elem(), GetGlobalClientMobileIoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientMobileIoArrayInput)(nil)).Elem(), GetGlobalClientMobileIoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginArrayInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginAppleInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginAppleArrayInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginAppleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginFacebookInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientNativeSocialLoginFacebookArrayInput)(nil)).Elem(), GetGlobalClientNativeSocialLoginFacebookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientRefreshTokenInput)(nil)).Elem(), GetGlobalClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalClientRefreshTokenArrayInput)(nil)).Elem(), GetGlobalClientRefreshTokenArray{})
	pulumi.RegisterOutputType(ActionDependencyOutput{})
	pulumi.RegisterOutputType(ActionDependencyArrayOutput{})
	pulumi.RegisterOutputType(ActionSecretOutput{})
	pulumi.RegisterOutputType(ActionSecretArrayOutput{})
	pulumi.RegisterOutputType(ActionSupportedTriggersOutput{})
	pulumi.RegisterOutputType(ActionSupportedTriggersPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionBreachedPasswordDetectionOutput{})
	pulumi.RegisterOutputType(AttackProtectionBreachedPasswordDetectionPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput{})
	pulumi.RegisterOutputType(AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionBruteForceProtectionOutput{})
	pulumi.RegisterOutputType(AttackProtectionBruteForceProtectionPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreLoginOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput{})
	pulumi.RegisterOutputType(BrandingColorsOutput{})
	pulumi.RegisterOutputType(BrandingColorsPtrOutput{})
	pulumi.RegisterOutputType(BrandingFontOutput{})
	pulumi.RegisterOutputType(BrandingFontPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeBordersOutput{})
	pulumi.RegisterOutputType(BrandingThemeBordersPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeColorsOutput{})
	pulumi.RegisterOutputType(BrandingThemeColorsPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsBodyTextOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsBodyTextPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsButtonsTextOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsButtonsTextPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsInputLabelsOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsInputLabelsPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsLinksOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsLinksPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsSubtitleOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsSubtitlePtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsTitleOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsTitlePtrOutput{})
	pulumi.RegisterOutputType(BrandingThemePageBackgroundOutput{})
	pulumi.RegisterOutputType(BrandingThemePageBackgroundPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeWidgetOutput{})
	pulumi.RegisterOutputType(BrandingThemeWidgetPtrOutput{})
	pulumi.RegisterOutputType(BrandingUniversalLoginOutput{})
	pulumi.RegisterOutputType(BrandingUniversalLoginPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsOutput{})
	pulumi.RegisterOutputType(ClientAddonsPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpPtrOutput{})
	pulumi.RegisterOutputType(ClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(ClientJwtConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClientMobileOutput{})
	pulumi.RegisterOutputType(ClientMobilePtrOutput{})
	pulumi.RegisterOutputType(ClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(ClientMobileAndroidPtrOutput{})
	pulumi.RegisterOutputType(ClientMobileIosOutput{})
	pulumi.RegisterOutputType(ClientMobileIosPtrOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginPtrOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginAppleOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginApplePtrOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginFacebookOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginFacebookPtrOutput{})
	pulumi.RegisterOutputType(ClientRefreshTokenOutput{})
	pulumi.RegisterOutputType(ClientRefreshTokenPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsGatewayAuthenticationOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsGatewayAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsIdpInitiatedOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsIdpInitiatedPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsMfaOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsMfaPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordComplexityOptionsOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordComplexityOptionsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordDictionaryOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordDictionaryPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordHistoryOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordHistoryArrayOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordNoPersonalInfoOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordNoPersonalInfoPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsSigningKeyOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsSigningKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsTotpOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsTotpPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationUsernameOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationUsernamePtrOutput{})
	pulumi.RegisterOutputType(CustomDomainVerificationTypeOutput{})
	pulumi.RegisterOutputType(CustomDomainVerificationTypeArrayOutput{})
	pulumi.RegisterOutputType(EmailCredentialsOutput{})
	pulumi.RegisterOutputType(EmailCredentialsPtrOutput{})
	pulumi.RegisterOutputType(EmailSettingsOutput{})
	pulumi.RegisterOutputType(EmailSettingsPtrOutput{})
	pulumi.RegisterOutputType(EmailSettingsHeadersOutput{})
	pulumi.RegisterOutputType(EmailSettingsHeadersPtrOutput{})
	pulumi.RegisterOutputType(EmailSettingsMessageOutput{})
	pulumi.RegisterOutputType(EmailSettingsMessagePtrOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsSamlpOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsSamlpPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(GlobalClientJwtConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileOutput{})
	pulumi.RegisterOutputType(GlobalClientMobilePtrOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileAndroidPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileIosOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileIosPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginAppleOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginApplePtrOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginFacebookOutput{})
	pulumi.RegisterOutputType(GlobalClientNativeSocialLoginFacebookPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientRefreshTokenOutput{})
	pulumi.RegisterOutputType(GlobalClientRefreshTokenPtrOutput{})
	pulumi.RegisterOutputType(GuardianDuoOutput{})
	pulumi.RegisterOutputType(GuardianDuoPtrOutput{})
	pulumi.RegisterOutputType(GuardianPhoneOutput{})
	pulumi.RegisterOutputType(GuardianPhonePtrOutput{})
	pulumi.RegisterOutputType(GuardianPhoneOptionsOutput{})
	pulumi.RegisterOutputType(GuardianPhoneOptionsPtrOutput{})
	pulumi.RegisterOutputType(GuardianPushOutput{})
	pulumi.RegisterOutputType(GuardianPushPtrOutput{})
	pulumi.RegisterOutputType(GuardianPushAmazonSnsOutput{})
	pulumi.RegisterOutputType(GuardianPushAmazonSnsPtrOutput{})
	pulumi.RegisterOutputType(GuardianPushCustomAppOutput{})
	pulumi.RegisterOutputType(GuardianPushCustomAppPtrOutput{})
	pulumi.RegisterOutputType(GuardianWebauthnPlatformOutput{})
	pulumi.RegisterOutputType(GuardianWebauthnPlatformPtrOutput{})
	pulumi.RegisterOutputType(GuardianWebauthnRoamingOutput{})
	pulumi.RegisterOutputType(GuardianWebauthnRoamingPtrOutput{})
	pulumi.RegisterOutputType(LogStreamSinkOutput{})
	pulumi.RegisterOutputType(LogStreamSinkPtrOutput{})
	pulumi.RegisterOutputType(OrganizationBrandingOutput{})
	pulumi.RegisterOutputType(OrganizationBrandingPtrOutput{})
	pulumi.RegisterOutputType(ResourceServerScopeOutput{})
	pulumi.RegisterOutputType(ResourceServerScopeArrayOutput{})
	pulumi.RegisterOutputType(RolePermissionOutput{})
	pulumi.RegisterOutputType(RolePermissionArrayOutput{})
	pulumi.RegisterOutputType(TenantChangePasswordOutput{})
	pulumi.RegisterOutputType(TenantChangePasswordPtrOutput{})
	pulumi.RegisterOutputType(TenantErrorPageOutput{})
	pulumi.RegisterOutputType(TenantErrorPagePtrOutput{})
	pulumi.RegisterOutputType(TenantFlagsOutput{})
	pulumi.RegisterOutputType(TenantFlagsPtrOutput{})
	pulumi.RegisterOutputType(TenantGuardianMfaPageOutput{})
	pulumi.RegisterOutputType(TenantGuardianMfaPagePtrOutput{})
	pulumi.RegisterOutputType(TenantSessionCookieOutput{})
	pulumi.RegisterOutputType(TenantSessionCookiePtrOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginPtrOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginColorsOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginColorsPtrOutput{})
	pulumi.RegisterOutputType(TriggerBindingActionOutput{})
	pulumi.RegisterOutputType(TriggerBindingActionArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonOutput{})
	pulumi.RegisterOutputType(GetClientAddonArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSamlpOutput{})
	pulumi.RegisterOutputType(GetClientAddonSamlpArrayOutput{})
	pulumi.RegisterOutputType(GetClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(GetClientJwtConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetClientMobileOutput{})
	pulumi.RegisterOutputType(GetClientMobileArrayOutput{})
	pulumi.RegisterOutputType(GetClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(GetClientMobileAndroidArrayOutput{})
	pulumi.RegisterOutputType(GetClientMobileIoOutput{})
	pulumi.RegisterOutputType(GetClientMobileIoArrayOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginArrayOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginAppleOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginAppleArrayOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginFacebookOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginFacebookArrayOutput{})
	pulumi.RegisterOutputType(GetClientRefreshTokenOutput{})
	pulumi.RegisterOutputType(GetClientRefreshTokenArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientAddonOutput{})
	pulumi.RegisterOutputType(GetGlobalClientAddonArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientAddonSamlpOutput{})
	pulumi.RegisterOutputType(GetGlobalClientAddonSamlpArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(GetGlobalClientJwtConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileAndroidArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileIoOutput{})
	pulumi.RegisterOutputType(GetGlobalClientMobileIoArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginAppleOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginAppleArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginFacebookOutput{})
	pulumi.RegisterOutputType(GetGlobalClientNativeSocialLoginFacebookArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalClientRefreshTokenOutput{})
	pulumi.RegisterOutputType(GetGlobalClientRefreshTokenArrayOutput{})
}
