// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ClientAddons struct {
	// String
	Aws map[string]interface{} `pulumi:"aws"`
	// String
	AzureBlob map[string]interface{} `pulumi:"azureBlob"`
	// String
	AzureSb map[string]interface{} `pulumi:"azureSb"`
	// String
	Box map[string]interface{} `pulumi:"box"`
	// String
	Cloudbees map[string]interface{} `pulumi:"cloudbees"`
	// String
	Concur map[string]interface{} `pulumi:"concur"`
	// String
	Dropbox map[string]interface{} `pulumi:"dropbox"`
	// String
	Echosign map[string]interface{} `pulumi:"echosign"`
	// String
	Egnyte map[string]interface{} `pulumi:"egnyte"`
	// String
	Firebase map[string]interface{} `pulumi:"firebase"`
	// String
	Layer map[string]interface{} `pulumi:"layer"`
	// String
	Mscrm map[string]interface{} `pulumi:"mscrm"`
	// String
	Newrelic map[string]interface{} `pulumi:"newrelic"`
	// String
	Office365 map[string]interface{} `pulumi:"office365"`
	// String
	Rms map[string]interface{} `pulumi:"rms"`
	// String
	Salesforce map[string]interface{} `pulumi:"salesforce"`
	// String
	SalesforceApi map[string]interface{} `pulumi:"salesforceApi"`
	// String
	SalesforceSandboxApi map[string]interface{} `pulumi:"salesforceSandboxApi"`
	// List(Resource). Configuration settings for a SAML add-on. For details, see SAML.
	Samlp *ClientAddonsSamlp `pulumi:"samlp"`
	// String
	SapApi map[string]interface{} `pulumi:"sapApi"`
	// String
	Sentry map[string]interface{} `pulumi:"sentry"`
	// String
	Sharepoint map[string]interface{} `pulumi:"sharepoint"`
	// String
	Slack map[string]interface{} `pulumi:"slack"`
	// String
	Springcm map[string]interface{} `pulumi:"springcm"`
	// String
	Wams map[string]interface{} `pulumi:"wams"`
	// String
	Wsfed map[string]interface{} `pulumi:"wsfed"`
	// String
	Zendesk map[string]interface{} `pulumi:"zendesk"`
	// String
	Zoom map[string]interface{} `pulumi:"zoom"`
}

// ClientAddonsInput is an input type that accepts ClientAddonsArgs and ClientAddonsOutput values.
// You can construct a concrete instance of `ClientAddonsInput` via:
//
//          ClientAddonsArgs{...}
type ClientAddonsInput interface {
	pulumi.Input

	ToClientAddonsOutput() ClientAddonsOutput
	ToClientAddonsOutputWithContext(context.Context) ClientAddonsOutput
}

type ClientAddonsArgs struct {
	// String
	Aws pulumi.MapInput `pulumi:"aws"`
	// String
	AzureBlob pulumi.MapInput `pulumi:"azureBlob"`
	// String
	AzureSb pulumi.MapInput `pulumi:"azureSb"`
	// String
	Box pulumi.MapInput `pulumi:"box"`
	// String
	Cloudbees pulumi.MapInput `pulumi:"cloudbees"`
	// String
	Concur pulumi.MapInput `pulumi:"concur"`
	// String
	Dropbox pulumi.MapInput `pulumi:"dropbox"`
	// String
	Echosign pulumi.MapInput `pulumi:"echosign"`
	// String
	Egnyte pulumi.MapInput `pulumi:"egnyte"`
	// String
	Firebase pulumi.MapInput `pulumi:"firebase"`
	// String
	Layer pulumi.MapInput `pulumi:"layer"`
	// String
	Mscrm pulumi.MapInput `pulumi:"mscrm"`
	// String
	Newrelic pulumi.MapInput `pulumi:"newrelic"`
	// String
	Office365 pulumi.MapInput `pulumi:"office365"`
	// String
	Rms pulumi.MapInput `pulumi:"rms"`
	// String
	Salesforce pulumi.MapInput `pulumi:"salesforce"`
	// String
	SalesforceApi pulumi.MapInput `pulumi:"salesforceApi"`
	// String
	SalesforceSandboxApi pulumi.MapInput `pulumi:"salesforceSandboxApi"`
	// List(Resource). Configuration settings for a SAML add-on. For details, see SAML.
	Samlp ClientAddonsSamlpPtrInput `pulumi:"samlp"`
	// String
	SapApi pulumi.MapInput `pulumi:"sapApi"`
	// String
	Sentry pulumi.MapInput `pulumi:"sentry"`
	// String
	Sharepoint pulumi.MapInput `pulumi:"sharepoint"`
	// String
	Slack pulumi.MapInput `pulumi:"slack"`
	// String
	Springcm pulumi.MapInput `pulumi:"springcm"`
	// String
	Wams pulumi.MapInput `pulumi:"wams"`
	// String
	Wsfed pulumi.MapInput `pulumi:"wsfed"`
	// String
	Zendesk pulumi.MapInput `pulumi:"zendesk"`
	// String
	Zoom pulumi.MapInput `pulumi:"zoom"`
}

func (ClientAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddons)(nil)).Elem()
}

func (i ClientAddonsArgs) ToClientAddonsOutput() ClientAddonsOutput {
	return i.ToClientAddonsOutputWithContext(context.Background())
}

func (i ClientAddonsArgs) ToClientAddonsOutputWithContext(ctx context.Context) ClientAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOutput)
}

func (i ClientAddonsArgs) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return i.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (i ClientAddonsArgs) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOutput).ToClientAddonsPtrOutputWithContext(ctx)
}

// ClientAddonsPtrInput is an input type that accepts ClientAddonsArgs, ClientAddonsPtr and ClientAddonsPtrOutput values.
// You can construct a concrete instance of `ClientAddonsPtrInput` via:
//
//          ClientAddonsArgs{...}
//
//  or:
//
//          nil
type ClientAddonsPtrInput interface {
	pulumi.Input

	ToClientAddonsPtrOutput() ClientAddonsPtrOutput
	ToClientAddonsPtrOutputWithContext(context.Context) ClientAddonsPtrOutput
}

type clientAddonsPtrType ClientAddonsArgs

func ClientAddonsPtr(v *ClientAddonsArgs) ClientAddonsPtrInput {
	return (*clientAddonsPtrType)(v)
}

func (*clientAddonsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddons)(nil)).Elem()
}

func (i *clientAddonsPtrType) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return i.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (i *clientAddonsPtrType) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsPtrOutput)
}

type ClientAddonsOutput struct{ *pulumi.OutputState }

func (ClientAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddons)(nil)).Elem()
}

func (o ClientAddonsOutput) ToClientAddonsOutput() ClientAddonsOutput {
	return o
}

func (o ClientAddonsOutput) ToClientAddonsOutputWithContext(ctx context.Context) ClientAddonsOutput {
	return o
}

func (o ClientAddonsOutput) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return o.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (o ClientAddonsOutput) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddons {
		return &v
	}).(ClientAddonsPtrOutput)
}

// String
func (o ClientAddonsOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Aws }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.AzureBlob }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.AzureSb }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Box }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Cloudbees }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Concur }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Dropbox }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Echosign }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Egnyte }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Firebase }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Layer }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Mscrm }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Newrelic }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Office365 }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Rms }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Salesforce }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.SalesforceApi }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.SalesforceSandboxApi }).(pulumi.MapOutput)
}

// List(Resource). Configuration settings for a SAML add-on. For details, see SAML.
func (o ClientAddonsOutput) Samlp() ClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSamlp { return v.Samlp }).(ClientAddonsSamlpPtrOutput)
}

// String
func (o ClientAddonsOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.SapApi }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Sentry }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Sharepoint }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Slack }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Springcm }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Wams }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Wsfed }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Zendesk }).(pulumi.MapOutput)
}

// String
func (o ClientAddonsOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddons) map[string]interface{} { return v.Zoom }).(pulumi.MapOutput)
}

type ClientAddonsPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddons)(nil)).Elem()
}

func (o ClientAddonsPtrOutput) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return o
}

func (o ClientAddonsPtrOutput) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return o
}

func (o ClientAddonsPtrOutput) Elem() ClientAddonsOutput {
	return o.ApplyT(func(v *ClientAddons) ClientAddons { return *v }).(ClientAddonsOutput)
}

// String
func (o ClientAddonsPtrOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureBlob
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureSb
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Box
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cloudbees
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Concur
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Dropbox
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Echosign
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Egnyte
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Firebase
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Layer
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mscrm
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Newrelic
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Office365
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Rms
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceApi
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceSandboxApi
	}).(pulumi.MapOutput)
}

// List(Resource). Configuration settings for a SAML add-on. For details, see SAML.
func (o ClientAddonsPtrOutput) Samlp() ClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSamlp {
		if v == nil {
			return nil
		}
		return v.Samlp
	}).(ClientAddonsSamlpPtrOutput)
}

// String
func (o ClientAddonsPtrOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SapApi
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sentry
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sharepoint
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Springcm
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wams
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wsfed
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(pulumi.MapOutput)
}

// String
func (o ClientAddonsPtrOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zoom
	}).(pulumi.MapOutput)
}

type ClientAddonsSamlp struct {
	// String. Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.
	Audience *string `pulumi:"audience"`
	// String. Class reference of the authentication context.
	AuthnContextClassRef *string `pulumi:"authnContextClassRef"`
	// String. Protocol binding used for SAML logout responses.
	Binding *string `pulumi:"binding"`
	// Boolean, (Default=true) Indicates whether or not a UPN claim should be created.
	CreateUpnClaim *bool `pulumi:"createUpnClaim"`
	// String. Destination of the SAML Response. If not specified, it will be AssertionConsumerUrlof SAMLRequest or Callback URL if there was no SAMLRequest.
	Destination *string `pulumi:"destination"`
	// String, (Default=`sha1`). Algorithm used to calculate the digest of the SAML Assertion or response. Options include `defaultsha1` and `sha256`.
	DigestAlgorithm *string `pulumi:"digestAlgorithm"`
	// Boolean,(Default=true). Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion.
	IncludeAttributeNameFormat *bool `pulumi:"includeAttributeNameFormat"`
	// Integer, (Default=3600). Number of seconds during which the token is valid.
	LifetimeInSeconds *int `pulumi:"lifetimeInSeconds"`
	// Map(Resource). Configuration settings for logout. For details, see Logout.
	Logout *ClientAddonsSamlpLogout `pulumi:"logout"`
	// Boolean, (Default=true). Indicates whether or not to add additional identity information in the token, such as the provider used and the access_token, if available.
	MapIdentities *bool `pulumi:"mapIdentities"`
	// Boolean, (Default=false). Indicates whether or not to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion.
	MapUnknownClaimsAsIs *bool `pulumi:"mapUnknownClaimsAsIs"`
	// Map(String). Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).
	Mappings map[string]interface{} `pulumi:"mappings"`
	// String, (Default=`urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`). Format of the name identifier.
	NameIdentifierFormat *string `pulumi:"nameIdentifierFormat"`
	// List(String). Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.
	NameIdentifierProbes []string `pulumi:"nameIdentifierProbes"`
	// Boolean, (Default=true). Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion.
	PassthroughClaimsWithNoMapping *bool `pulumi:"passthroughClaimsWithNoMapping"`
	// String. Recipient of the SAML Assertion (SubjectConfirmationData). Default is AssertionConsumerUrl on SAMLRequest or Callback URL if no SAMLRequest was sent.
	Recipient *string `pulumi:"recipient"`
	// Boolean. Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.
	SignResponse *bool `pulumi:"signResponse"`
	// String, (Default=`rsa-sha1`). Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// Boolean, (Default=true). Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`.
	TypedAttributes *bool `pulumi:"typedAttributes"`
}

// ClientAddonsSamlpInput is an input type that accepts ClientAddonsSamlpArgs and ClientAddonsSamlpOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpInput` via:
//
//          ClientAddonsSamlpArgs{...}
type ClientAddonsSamlpInput interface {
	pulumi.Input

	ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput
	ToClientAddonsSamlpOutputWithContext(context.Context) ClientAddonsSamlpOutput
}

type ClientAddonsSamlpArgs struct {
	// String. Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// String. Class reference of the authentication context.
	AuthnContextClassRef pulumi.StringPtrInput `pulumi:"authnContextClassRef"`
	// String. Protocol binding used for SAML logout responses.
	Binding pulumi.StringPtrInput `pulumi:"binding"`
	// Boolean, (Default=true) Indicates whether or not a UPN claim should be created.
	CreateUpnClaim pulumi.BoolPtrInput `pulumi:"createUpnClaim"`
	// String. Destination of the SAML Response. If not specified, it will be AssertionConsumerUrlof SAMLRequest or Callback URL if there was no SAMLRequest.
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	// String, (Default=`sha1`). Algorithm used to calculate the digest of the SAML Assertion or response. Options include `defaultsha1` and `sha256`.
	DigestAlgorithm pulumi.StringPtrInput `pulumi:"digestAlgorithm"`
	// Boolean,(Default=true). Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion.
	IncludeAttributeNameFormat pulumi.BoolPtrInput `pulumi:"includeAttributeNameFormat"`
	// Integer, (Default=3600). Number of seconds during which the token is valid.
	LifetimeInSeconds pulumi.IntPtrInput `pulumi:"lifetimeInSeconds"`
	// Map(Resource). Configuration settings for logout. For details, see Logout.
	Logout ClientAddonsSamlpLogoutPtrInput `pulumi:"logout"`
	// Boolean, (Default=true). Indicates whether or not to add additional identity information in the token, such as the provider used and the access_token, if available.
	MapIdentities pulumi.BoolPtrInput `pulumi:"mapIdentities"`
	// Boolean, (Default=false). Indicates whether or not to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion.
	MapUnknownClaimsAsIs pulumi.BoolPtrInput `pulumi:"mapUnknownClaimsAsIs"`
	// Map(String). Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).
	Mappings pulumi.MapInput `pulumi:"mappings"`
	// String, (Default=`urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`). Format of the name identifier.
	NameIdentifierFormat pulumi.StringPtrInput `pulumi:"nameIdentifierFormat"`
	// List(String). Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.
	NameIdentifierProbes pulumi.StringArrayInput `pulumi:"nameIdentifierProbes"`
	// Boolean, (Default=true). Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion.
	PassthroughClaimsWithNoMapping pulumi.BoolPtrInput `pulumi:"passthroughClaimsWithNoMapping"`
	// String. Recipient of the SAML Assertion (SubjectConfirmationData). Default is AssertionConsumerUrl on SAMLRequest or Callback URL if no SAMLRequest was sent.
	Recipient pulumi.StringPtrInput `pulumi:"recipient"`
	// Boolean. Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.
	SignResponse pulumi.BoolPtrInput `pulumi:"signResponse"`
	// String, (Default=`rsa-sha1`). Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`.
	SignatureAlgorithm pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
	// Boolean, (Default=true). Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`.
	TypedAttributes pulumi.BoolPtrInput `pulumi:"typedAttributes"`
}

func (ClientAddonsSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlp)(nil)).Elem()
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput {
	return i.ToClientAddonsSamlpOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpOutputWithContext(ctx context.Context) ClientAddonsSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpOutput)
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return i.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpOutput).ToClientAddonsSamlpPtrOutputWithContext(ctx)
}

// ClientAddonsSamlpPtrInput is an input type that accepts ClientAddonsSamlpArgs, ClientAddonsSamlpPtr and ClientAddonsSamlpPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpPtrInput` via:
//
//          ClientAddonsSamlpArgs{...}
//
//  or:
//
//          nil
type ClientAddonsSamlpPtrInput interface {
	pulumi.Input

	ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput
	ToClientAddonsSamlpPtrOutputWithContext(context.Context) ClientAddonsSamlpPtrOutput
}

type clientAddonsSamlpPtrType ClientAddonsSamlpArgs

func ClientAddonsSamlpPtr(v *ClientAddonsSamlpArgs) ClientAddonsSamlpPtrInput {
	return (*clientAddonsSamlpPtrType)(v)
}

func (*clientAddonsSamlpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlp)(nil)).Elem()
}

func (i *clientAddonsSamlpPtrType) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return i.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSamlpPtrType) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpPtrOutput)
}

type ClientAddonsSamlpOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlp)(nil)).Elem()
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput {
	return o
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpOutputWithContext(ctx context.Context) ClientAddonsSamlpOutput {
	return o
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return o.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *ClientAddonsSamlp {
		return &v
	}).(ClientAddonsSamlpPtrOutput)
}

// String. Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.
func (o ClientAddonsSamlpOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// String. Class reference of the authentication context.
func (o ClientAddonsSamlpOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.AuthnContextClassRef }).(pulumi.StringPtrOutput)
}

// String. Protocol binding used for SAML logout responses.
func (o ClientAddonsSamlpOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Binding }).(pulumi.StringPtrOutput)
}

// Boolean, (Default=true) Indicates whether or not a UPN claim should be created.
func (o ClientAddonsSamlpOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.CreateUpnClaim }).(pulumi.BoolPtrOutput)
}

// String. Destination of the SAML Response. If not specified, it will be AssertionConsumerUrlof SAMLRequest or Callback URL if there was no SAMLRequest.
func (o ClientAddonsSamlpOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// String, (Default=`sha1`). Algorithm used to calculate the digest of the SAML Assertion or response. Options include `defaultsha1` and `sha256`.
func (o ClientAddonsSamlpOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

// Boolean,(Default=true). Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion.
func (o ClientAddonsSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolPtrOutput)
}

// Integer, (Default=3600). Number of seconds during which the token is valid.
func (o ClientAddonsSamlpOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

// Map(Resource). Configuration settings for logout. For details, see Logout.
func (o ClientAddonsSamlpOutput) Logout() ClientAddonsSamlpLogoutPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *ClientAddonsSamlpLogout { return v.Logout }).(ClientAddonsSamlpLogoutPtrOutput)
}

// Boolean, (Default=true). Indicates whether or not to add additional identity information in the token, such as the provider used and the access_token, if available.
func (o ClientAddonsSamlpOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.MapIdentities }).(pulumi.BoolPtrOutput)
}

// Boolean, (Default=false). Indicates whether or not to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion.
func (o ClientAddonsSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolPtrOutput)
}

// Map(String). Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).
func (o ClientAddonsSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

// String, (Default=`urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`). Format of the name identifier.
func (o ClientAddonsSamlpOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.NameIdentifierFormat }).(pulumi.StringPtrOutput)
}

// List(String). Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.
func (o ClientAddonsSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

// Boolean, (Default=true). Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion.
func (o ClientAddonsSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolPtrOutput)
}

// String. Recipient of the SAML Assertion (SubjectConfirmationData). Default is AssertionConsumerUrl on SAMLRequest or Callback URL if no SAMLRequest was sent.
func (o ClientAddonsSamlpOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Recipient }).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.
func (o ClientAddonsSamlpOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.SignResponse }).(pulumi.BoolPtrOutput)
}

// String, (Default=`rsa-sha1`). Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`.
func (o ClientAddonsSamlpOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// Boolean, (Default=true). Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`.
func (o ClientAddonsSamlpOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.TypedAttributes }).(pulumi.BoolPtrOutput)
}

type ClientAddonsSamlpPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlp)(nil)).Elem()
}

func (o ClientAddonsSamlpPtrOutput) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return o
}

func (o ClientAddonsSamlpPtrOutput) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return o
}

func (o ClientAddonsSamlpPtrOutput) Elem() ClientAddonsSamlpOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) ClientAddonsSamlp { return *v }).(ClientAddonsSamlpOutput)
}

// String. Audience of the SAML Assertion. Default will be the Issuer on SAMLRequest.
func (o ClientAddonsSamlpPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// String. Class reference of the authentication context.
func (o ClientAddonsSamlpPtrOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.AuthnContextClassRef
	}).(pulumi.StringPtrOutput)
}

// String. Protocol binding used for SAML logout responses.
func (o ClientAddonsSamlpPtrOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Binding
	}).(pulumi.StringPtrOutput)
}

// Boolean, (Default=true) Indicates whether or not a UPN claim should be created.
func (o ClientAddonsSamlpPtrOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.CreateUpnClaim
	}).(pulumi.BoolPtrOutput)
}

// String. Destination of the SAML Response. If not specified, it will be AssertionConsumerUrlof SAMLRequest or Callback URL if there was no SAMLRequest.
func (o ClientAddonsSamlpPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

// String, (Default=`sha1`). Algorithm used to calculate the digest of the SAML Assertion or response. Options include `defaultsha1` and `sha256`.
func (o ClientAddonsSamlpPtrOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.DigestAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Boolean,(Default=true). Indicates whether or not we should infer the NameFormat based on the attribute name. If set to false, the attribute NameFormat is not set in the assertion.
func (o ClientAddonsSamlpPtrOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAttributeNameFormat
	}).(pulumi.BoolPtrOutput)
}

// Integer, (Default=3600). Number of seconds during which the token is valid.
func (o ClientAddonsSamlpPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// Map(Resource). Configuration settings for logout. For details, see Logout.
func (o ClientAddonsSamlpPtrOutput) Logout() ClientAddonsSamlpLogoutPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *ClientAddonsSamlpLogout {
		if v == nil {
			return nil
		}
		return v.Logout
	}).(ClientAddonsSamlpLogoutPtrOutput)
}

// Boolean, (Default=true). Indicates whether or not to add additional identity information in the token, such as the provider used and the access_token, if available.
func (o ClientAddonsSamlpPtrOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapIdentities
	}).(pulumi.BoolPtrOutput)
}

// Boolean, (Default=false). Indicates whether or not to add a prefix of `http://schema.auth0.com` to any claims that are not mapped to the common profile when passed through in the output assertion.
func (o ClientAddonsSamlpPtrOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapUnknownClaimsAsIs
	}).(pulumi.BoolPtrOutput)
}

// Map(String). Mappings between the Auth0 user profile property name (`name`) and the output attributes on the SAML attribute in the assertion (`value`).
func (o ClientAddonsSamlpPtrOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(pulumi.MapOutput)
}

// String, (Default=`urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified`). Format of the name identifier.
func (o ClientAddonsSamlpPtrOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierFormat
	}).(pulumi.StringPtrOutput)
}

// List(String). Attributes that can be used for Subject/NameID. Auth0 will try each of the attributes of this array in order and use the first value it finds.
func (o ClientAddonsSamlpPtrOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) []string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierProbes
	}).(pulumi.StringArrayOutput)
}

// Boolean, (Default=true). Indicates whether or not to passthrough claims that are not mapped to the common profile in the output assertion.
func (o ClientAddonsSamlpPtrOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.PassthroughClaimsWithNoMapping
	}).(pulumi.BoolPtrOutput)
}

// String. Recipient of the SAML Assertion (SubjectConfirmationData). Default is AssertionConsumerUrl on SAMLRequest or Callback URL if no SAMLRequest was sent.
func (o ClientAddonsSamlpPtrOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Recipient
	}).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not the SAML Response should be signed instead of the SAML Assertion.
func (o ClientAddonsSamlpPtrOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.SignResponse
	}).(pulumi.BoolPtrOutput)
}

// String, (Default=`rsa-sha1`). Algorithm used to sign the SAML Assertion or response. Options include `rsa-sha1` and `rsa-sha256`.
func (o ClientAddonsSamlpPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Boolean, (Default=true). Indicates whether or not we should infer the `xs:type` of the element. Types include `xs:string`, `xs:boolean`, `xs:double`, and `xs:anyType`. When set to false, all `xs:type` are `xs:anyType`.
func (o ClientAddonsSamlpPtrOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.TypedAttributes
	}).(pulumi.BoolPtrOutput)
}

type ClientAddonsSamlpLogout struct {
	// String. Service provider's Single Logout Service URL, to which Auth0 will send logout requests and responses.
	Callback *string `pulumi:"callback"`
	// Boolean. Indicates whether or not Auth0 should notify service providers of session termination.
	SloEnabled *bool `pulumi:"sloEnabled"`
}

// ClientAddonsSamlpLogoutInput is an input type that accepts ClientAddonsSamlpLogoutArgs and ClientAddonsSamlpLogoutOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpLogoutInput` via:
//
//          ClientAddonsSamlpLogoutArgs{...}
type ClientAddonsSamlpLogoutInput interface {
	pulumi.Input

	ToClientAddonsSamlpLogoutOutput() ClientAddonsSamlpLogoutOutput
	ToClientAddonsSamlpLogoutOutputWithContext(context.Context) ClientAddonsSamlpLogoutOutput
}

type ClientAddonsSamlpLogoutArgs struct {
	// String. Service provider's Single Logout Service URL, to which Auth0 will send logout requests and responses.
	Callback pulumi.StringPtrInput `pulumi:"callback"`
	// Boolean. Indicates whether or not Auth0 should notify service providers of session termination.
	SloEnabled pulumi.BoolPtrInput `pulumi:"sloEnabled"`
}

func (ClientAddonsSamlpLogoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlpLogout)(nil)).Elem()
}

func (i ClientAddonsSamlpLogoutArgs) ToClientAddonsSamlpLogoutOutput() ClientAddonsSamlpLogoutOutput {
	return i.ToClientAddonsSamlpLogoutOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpLogoutArgs) ToClientAddonsSamlpLogoutOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpLogoutOutput)
}

func (i ClientAddonsSamlpLogoutArgs) ToClientAddonsSamlpLogoutPtrOutput() ClientAddonsSamlpLogoutPtrOutput {
	return i.ToClientAddonsSamlpLogoutPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpLogoutArgs) ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpLogoutOutput).ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx)
}

// ClientAddonsSamlpLogoutPtrInput is an input type that accepts ClientAddonsSamlpLogoutArgs, ClientAddonsSamlpLogoutPtr and ClientAddonsSamlpLogoutPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpLogoutPtrInput` via:
//
//          ClientAddonsSamlpLogoutArgs{...}
//
//  or:
//
//          nil
type ClientAddonsSamlpLogoutPtrInput interface {
	pulumi.Input

	ToClientAddonsSamlpLogoutPtrOutput() ClientAddonsSamlpLogoutPtrOutput
	ToClientAddonsSamlpLogoutPtrOutputWithContext(context.Context) ClientAddonsSamlpLogoutPtrOutput
}

type clientAddonsSamlpLogoutPtrType ClientAddonsSamlpLogoutArgs

func ClientAddonsSamlpLogoutPtr(v *ClientAddonsSamlpLogoutArgs) ClientAddonsSamlpLogoutPtrInput {
	return (*clientAddonsSamlpLogoutPtrType)(v)
}

func (*clientAddonsSamlpLogoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlpLogout)(nil)).Elem()
}

func (i *clientAddonsSamlpLogoutPtrType) ToClientAddonsSamlpLogoutPtrOutput() ClientAddonsSamlpLogoutPtrOutput {
	return i.ToClientAddonsSamlpLogoutPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSamlpLogoutPtrType) ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpLogoutPtrOutput)
}

type ClientAddonsSamlpLogoutOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpLogoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlpLogout)(nil)).Elem()
}

func (o ClientAddonsSamlpLogoutOutput) ToClientAddonsSamlpLogoutOutput() ClientAddonsSamlpLogoutOutput {
	return o
}

func (o ClientAddonsSamlpLogoutOutput) ToClientAddonsSamlpLogoutOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutOutput {
	return o
}

func (o ClientAddonsSamlpLogoutOutput) ToClientAddonsSamlpLogoutPtrOutput() ClientAddonsSamlpLogoutPtrOutput {
	return o.ToClientAddonsSamlpLogoutPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSamlpLogoutOutput) ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlpLogout) *ClientAddonsSamlpLogout {
		return &v
	}).(ClientAddonsSamlpLogoutPtrOutput)
}

// String. Service provider's Single Logout Service URL, to which Auth0 will send logout requests and responses.
func (o ClientAddonsSamlpLogoutOutput) Callback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlpLogout) *string { return v.Callback }).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not Auth0 should notify service providers of session termination.
func (o ClientAddonsSamlpLogoutOutput) SloEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlpLogout) *bool { return v.SloEnabled }).(pulumi.BoolPtrOutput)
}

type ClientAddonsSamlpLogoutPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpLogoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlpLogout)(nil)).Elem()
}

func (o ClientAddonsSamlpLogoutPtrOutput) ToClientAddonsSamlpLogoutPtrOutput() ClientAddonsSamlpLogoutPtrOutput {
	return o
}

func (o ClientAddonsSamlpLogoutPtrOutput) ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutPtrOutput {
	return o
}

func (o ClientAddonsSamlpLogoutPtrOutput) Elem() ClientAddonsSamlpLogoutOutput {
	return o.ApplyT(func(v *ClientAddonsSamlpLogout) ClientAddonsSamlpLogout { return *v }).(ClientAddonsSamlpLogoutOutput)
}

// String. Service provider's Single Logout Service URL, to which Auth0 will send logout requests and responses.
func (o ClientAddonsSamlpLogoutPtrOutput) Callback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlpLogout) *string {
		if v == nil {
			return nil
		}
		return v.Callback
	}).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not Auth0 should notify service providers of session termination.
func (o ClientAddonsSamlpLogoutPtrOutput) SloEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlpLogout) *bool {
		if v == nil {
			return nil
		}
		return v.SloEnabled
	}).(pulumi.BoolPtrOutput)
}

type ClientJwtConfiguration struct {
	// String. Algorithm used to sign JWTs.
	Alg *string `pulumi:"alg"`
	// Integer. Number of seconds during which the JWT will be valid.
	LifetimeInSeconds *int `pulumi:"lifetimeInSeconds"`
	// Map(String). Permissions (scopes) included in JWTs.
	Scopes map[string]string `pulumi:"scopes"`
	// Boolean. Indicates whether or not the client secret is base64 encoded.
	SecretEncoded *bool `pulumi:"secretEncoded"`
}

// ClientJwtConfigurationInput is an input type that accepts ClientJwtConfigurationArgs and ClientJwtConfigurationOutput values.
// You can construct a concrete instance of `ClientJwtConfigurationInput` via:
//
//          ClientJwtConfigurationArgs{...}
type ClientJwtConfigurationInput interface {
	pulumi.Input

	ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput
	ToClientJwtConfigurationOutputWithContext(context.Context) ClientJwtConfigurationOutput
}

type ClientJwtConfigurationArgs struct {
	// String. Algorithm used to sign JWTs.
	Alg pulumi.StringPtrInput `pulumi:"alg"`
	// Integer. Number of seconds during which the JWT will be valid.
	LifetimeInSeconds pulumi.IntPtrInput `pulumi:"lifetimeInSeconds"`
	// Map(String). Permissions (scopes) included in JWTs.
	Scopes pulumi.StringMapInput `pulumi:"scopes"`
	// Boolean. Indicates whether or not the client secret is base64 encoded.
	SecretEncoded pulumi.BoolPtrInput `pulumi:"secretEncoded"`
}

func (ClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientJwtConfiguration)(nil)).Elem()
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput {
	return i.ToClientJwtConfigurationOutputWithContext(context.Background())
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationOutputWithContext(ctx context.Context) ClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationOutput)
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return i.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationOutput).ToClientJwtConfigurationPtrOutputWithContext(ctx)
}

// ClientJwtConfigurationPtrInput is an input type that accepts ClientJwtConfigurationArgs, ClientJwtConfigurationPtr and ClientJwtConfigurationPtrOutput values.
// You can construct a concrete instance of `ClientJwtConfigurationPtrInput` via:
//
//          ClientJwtConfigurationArgs{...}
//
//  or:
//
//          nil
type ClientJwtConfigurationPtrInput interface {
	pulumi.Input

	ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput
	ToClientJwtConfigurationPtrOutputWithContext(context.Context) ClientJwtConfigurationPtrOutput
}

type clientJwtConfigurationPtrType ClientJwtConfigurationArgs

func ClientJwtConfigurationPtr(v *ClientJwtConfigurationArgs) ClientJwtConfigurationPtrInput {
	return (*clientJwtConfigurationPtrType)(v)
}

func (*clientJwtConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientJwtConfiguration)(nil)).Elem()
}

func (i *clientJwtConfigurationPtrType) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return i.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i *clientJwtConfigurationPtrType) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationPtrOutput)
}

type ClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (ClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientJwtConfiguration)(nil)).Elem()
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput {
	return o
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationOutputWithContext(ctx context.Context) ClientJwtConfigurationOutput {
	return o
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return o.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *ClientJwtConfiguration {
		return &v
	}).(ClientJwtConfigurationPtrOutput)
}

// String. Algorithm used to sign JWTs.
func (o ClientJwtConfigurationOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *string { return v.Alg }).(pulumi.StringPtrOutput)
}

// Integer. Number of seconds during which the JWT will be valid.
func (o ClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

// Map(String). Permissions (scopes) included in JWTs.
func (o ClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

// Boolean. Indicates whether or not the client secret is base64 encoded.
func (o ClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *bool { return v.SecretEncoded }).(pulumi.BoolPtrOutput)
}

type ClientJwtConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClientJwtConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientJwtConfiguration)(nil)).Elem()
}

func (o ClientJwtConfigurationPtrOutput) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return o
}

func (o ClientJwtConfigurationPtrOutput) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return o
}

func (o ClientJwtConfigurationPtrOutput) Elem() ClientJwtConfigurationOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) ClientJwtConfiguration { return *v }).(ClientJwtConfigurationOutput)
}

// String. Algorithm used to sign JWTs.
func (o ClientJwtConfigurationPtrOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Alg
	}).(pulumi.StringPtrOutput)
}

// Integer. Number of seconds during which the JWT will be valid.
func (o ClientJwtConfigurationPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// Map(String). Permissions (scopes) included in JWTs.
func (o ClientJwtConfigurationPtrOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringMapOutput)
}

// Boolean. Indicates whether or not the client secret is base64 encoded.
func (o ClientJwtConfigurationPtrOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.SecretEncoded
	}).(pulumi.BoolPtrOutput)
}

type ClientMobile struct {
	// List(Resource). Configuration settings for Android native apps. For details, see Android.
	Android *ClientMobileAndroid `pulumi:"android"`
	// List(Resource). Configuration settings for i0S native apps. For details, see iOS.
	Ios *ClientMobileIos `pulumi:"ios"`
}

// ClientMobileInput is an input type that accepts ClientMobileArgs and ClientMobileOutput values.
// You can construct a concrete instance of `ClientMobileInput` via:
//
//          ClientMobileArgs{...}
type ClientMobileInput interface {
	pulumi.Input

	ToClientMobileOutput() ClientMobileOutput
	ToClientMobileOutputWithContext(context.Context) ClientMobileOutput
}

type ClientMobileArgs struct {
	// List(Resource). Configuration settings for Android native apps. For details, see Android.
	Android ClientMobileAndroidPtrInput `pulumi:"android"`
	// List(Resource). Configuration settings for i0S native apps. For details, see iOS.
	Ios ClientMobileIosPtrInput `pulumi:"ios"`
}

func (ClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobile)(nil)).Elem()
}

func (i ClientMobileArgs) ToClientMobileOutput() ClientMobileOutput {
	return i.ToClientMobileOutputWithContext(context.Background())
}

func (i ClientMobileArgs) ToClientMobileOutputWithContext(ctx context.Context) ClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileOutput)
}

func (i ClientMobileArgs) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return i.ToClientMobilePtrOutputWithContext(context.Background())
}

func (i ClientMobileArgs) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileOutput).ToClientMobilePtrOutputWithContext(ctx)
}

// ClientMobilePtrInput is an input type that accepts ClientMobileArgs, ClientMobilePtr and ClientMobilePtrOutput values.
// You can construct a concrete instance of `ClientMobilePtrInput` via:
//
//          ClientMobileArgs{...}
//
//  or:
//
//          nil
type ClientMobilePtrInput interface {
	pulumi.Input

	ToClientMobilePtrOutput() ClientMobilePtrOutput
	ToClientMobilePtrOutputWithContext(context.Context) ClientMobilePtrOutput
}

type clientMobilePtrType ClientMobileArgs

func ClientMobilePtr(v *ClientMobileArgs) ClientMobilePtrInput {
	return (*clientMobilePtrType)(v)
}

func (*clientMobilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobile)(nil)).Elem()
}

func (i *clientMobilePtrType) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return i.ToClientMobilePtrOutputWithContext(context.Background())
}

func (i *clientMobilePtrType) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobilePtrOutput)
}

type ClientMobileOutput struct{ *pulumi.OutputState }

func (ClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobile)(nil)).Elem()
}

func (o ClientMobileOutput) ToClientMobileOutput() ClientMobileOutput {
	return o
}

func (o ClientMobileOutput) ToClientMobileOutputWithContext(ctx context.Context) ClientMobileOutput {
	return o
}

func (o ClientMobileOutput) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return o.ToClientMobilePtrOutputWithContext(context.Background())
}

func (o ClientMobileOutput) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return o.ApplyT(func(v ClientMobile) *ClientMobile {
		return &v
	}).(ClientMobilePtrOutput)
}

// List(Resource). Configuration settings for Android native apps. For details, see Android.
func (o ClientMobileOutput) Android() ClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v ClientMobile) *ClientMobileAndroid { return v.Android }).(ClientMobileAndroidPtrOutput)
}

// List(Resource). Configuration settings for i0S native apps. For details, see iOS.
func (o ClientMobileOutput) Ios() ClientMobileIosPtrOutput {
	return o.ApplyT(func(v ClientMobile) *ClientMobileIos { return v.Ios }).(ClientMobileIosPtrOutput)
}

type ClientMobilePtrOutput struct{ *pulumi.OutputState }

func (ClientMobilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobile)(nil)).Elem()
}

func (o ClientMobilePtrOutput) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return o
}

func (o ClientMobilePtrOutput) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return o
}

func (o ClientMobilePtrOutput) Elem() ClientMobileOutput {
	return o.ApplyT(func(v *ClientMobile) ClientMobile { return *v }).(ClientMobileOutput)
}

// List(Resource). Configuration settings for Android native apps. For details, see Android.
func (o ClientMobilePtrOutput) Android() ClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v *ClientMobile) *ClientMobileAndroid {
		if v == nil {
			return nil
		}
		return v.Android
	}).(ClientMobileAndroidPtrOutput)
}

// List(Resource). Configuration settings for i0S native apps. For details, see iOS.
func (o ClientMobilePtrOutput) Ios() ClientMobileIosPtrOutput {
	return o.ApplyT(func(v *ClientMobile) *ClientMobileIos {
		if v == nil {
			return nil
		}
		return v.Ios
	}).(ClientMobileIosPtrOutput)
}

type ClientMobileAndroid struct {
	// String
	AppPackageName *string `pulumi:"appPackageName"`
	// List(String)
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// ClientMobileAndroidInput is an input type that accepts ClientMobileAndroidArgs and ClientMobileAndroidOutput values.
// You can construct a concrete instance of `ClientMobileAndroidInput` via:
//
//          ClientMobileAndroidArgs{...}
type ClientMobileAndroidInput interface {
	pulumi.Input

	ToClientMobileAndroidOutput() ClientMobileAndroidOutput
	ToClientMobileAndroidOutputWithContext(context.Context) ClientMobileAndroidOutput
}

type ClientMobileAndroidArgs struct {
	// String
	AppPackageName pulumi.StringPtrInput `pulumi:"appPackageName"`
	// List(String)
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (ClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileAndroid)(nil)).Elem()
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidOutput() ClientMobileAndroidOutput {
	return i.ToClientMobileAndroidOutputWithContext(context.Background())
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidOutputWithContext(ctx context.Context) ClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidOutput)
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return i.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidOutput).ToClientMobileAndroidPtrOutputWithContext(ctx)
}

// ClientMobileAndroidPtrInput is an input type that accepts ClientMobileAndroidArgs, ClientMobileAndroidPtr and ClientMobileAndroidPtrOutput values.
// You can construct a concrete instance of `ClientMobileAndroidPtrInput` via:
//
//          ClientMobileAndroidArgs{...}
//
//  or:
//
//          nil
type ClientMobileAndroidPtrInput interface {
	pulumi.Input

	ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput
	ToClientMobileAndroidPtrOutputWithContext(context.Context) ClientMobileAndroidPtrOutput
}

type clientMobileAndroidPtrType ClientMobileAndroidArgs

func ClientMobileAndroidPtr(v *ClientMobileAndroidArgs) ClientMobileAndroidPtrInput {
	return (*clientMobileAndroidPtrType)(v)
}

func (*clientMobileAndroidPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileAndroid)(nil)).Elem()
}

func (i *clientMobileAndroidPtrType) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return i.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i *clientMobileAndroidPtrType) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidPtrOutput)
}

type ClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (ClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileAndroid)(nil)).Elem()
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidOutput() ClientMobileAndroidOutput {
	return o
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidOutputWithContext(ctx context.Context) ClientMobileAndroidOutput {
	return o
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return o.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v ClientMobileAndroid) *ClientMobileAndroid {
		return &v
	}).(ClientMobileAndroidPtrOutput)
}

// String
func (o ClientMobileAndroidOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileAndroid) *string { return v.AppPackageName }).(pulumi.StringPtrOutput)
}

// List(String)
func (o ClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type ClientMobileAndroidPtrOutput struct{ *pulumi.OutputState }

func (ClientMobileAndroidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileAndroid)(nil)).Elem()
}

func (o ClientMobileAndroidPtrOutput) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return o
}

func (o ClientMobileAndroidPtrOutput) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return o
}

func (o ClientMobileAndroidPtrOutput) Elem() ClientMobileAndroidOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) ClientMobileAndroid { return *v }).(ClientMobileAndroidOutput)
}

// String
func (o ClientMobileAndroidPtrOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) *string {
		if v == nil {
			return nil
		}
		return v.AppPackageName
	}).(pulumi.StringPtrOutput)
}

// List(String)
func (o ClientMobileAndroidPtrOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) []string {
		if v == nil {
			return nil
		}
		return v.Sha256CertFingerprints
	}).(pulumi.StringArrayOutput)
}

type ClientMobileIos struct {
	// String
	AppBundleIdentifier *string `pulumi:"appBundleIdentifier"`
	// String
	TeamId *string `pulumi:"teamId"`
}

// ClientMobileIosInput is an input type that accepts ClientMobileIosArgs and ClientMobileIosOutput values.
// You can construct a concrete instance of `ClientMobileIosInput` via:
//
//          ClientMobileIosArgs{...}
type ClientMobileIosInput interface {
	pulumi.Input

	ToClientMobileIosOutput() ClientMobileIosOutput
	ToClientMobileIosOutputWithContext(context.Context) ClientMobileIosOutput
}

type ClientMobileIosArgs struct {
	// String
	AppBundleIdentifier pulumi.StringPtrInput `pulumi:"appBundleIdentifier"`
	// String
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
}

func (ClientMobileIosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileIos)(nil)).Elem()
}

func (i ClientMobileIosArgs) ToClientMobileIosOutput() ClientMobileIosOutput {
	return i.ToClientMobileIosOutputWithContext(context.Background())
}

func (i ClientMobileIosArgs) ToClientMobileIosOutputWithContext(ctx context.Context) ClientMobileIosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosOutput)
}

func (i ClientMobileIosArgs) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return i.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (i ClientMobileIosArgs) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosOutput).ToClientMobileIosPtrOutputWithContext(ctx)
}

// ClientMobileIosPtrInput is an input type that accepts ClientMobileIosArgs, ClientMobileIosPtr and ClientMobileIosPtrOutput values.
// You can construct a concrete instance of `ClientMobileIosPtrInput` via:
//
//          ClientMobileIosArgs{...}
//
//  or:
//
//          nil
type ClientMobileIosPtrInput interface {
	pulumi.Input

	ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput
	ToClientMobileIosPtrOutputWithContext(context.Context) ClientMobileIosPtrOutput
}

type clientMobileIosPtrType ClientMobileIosArgs

func ClientMobileIosPtr(v *ClientMobileIosArgs) ClientMobileIosPtrInput {
	return (*clientMobileIosPtrType)(v)
}

func (*clientMobileIosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileIos)(nil)).Elem()
}

func (i *clientMobileIosPtrType) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return i.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (i *clientMobileIosPtrType) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosPtrOutput)
}

type ClientMobileIosOutput struct{ *pulumi.OutputState }

func (ClientMobileIosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileIos)(nil)).Elem()
}

func (o ClientMobileIosOutput) ToClientMobileIosOutput() ClientMobileIosOutput {
	return o
}

func (o ClientMobileIosOutput) ToClientMobileIosOutputWithContext(ctx context.Context) ClientMobileIosOutput {
	return o
}

func (o ClientMobileIosOutput) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return o.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (o ClientMobileIosOutput) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return o.ApplyT(func(v ClientMobileIos) *ClientMobileIos {
		return &v
	}).(ClientMobileIosPtrOutput)
}

// String
func (o ClientMobileIosOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileIos) *string { return v.AppBundleIdentifier }).(pulumi.StringPtrOutput)
}

// String
func (o ClientMobileIosOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileIos) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

type ClientMobileIosPtrOutput struct{ *pulumi.OutputState }

func (ClientMobileIosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileIos)(nil)).Elem()
}

func (o ClientMobileIosPtrOutput) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return o
}

func (o ClientMobileIosPtrOutput) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return o
}

func (o ClientMobileIosPtrOutput) Elem() ClientMobileIosOutput {
	return o.ApplyT(func(v *ClientMobileIos) ClientMobileIos { return *v }).(ClientMobileIosOutput)
}

// String
func (o ClientMobileIosPtrOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.AppBundleIdentifier
	}).(pulumi.StringPtrOutput)
}

// String
func (o ClientMobileIosPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptions struct {
	// String. ADFS Metadata source.
	AdfsServer       *string  `pulumi:"adfsServer"`
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// Boolean.
	ApiEnableUsers *bool `pulumi:"apiEnableUsers"`
	// String. Azure AD domain name.
	//
	// Deprecated: use domain instead
	AppDomain *string `pulumi:"appDomain"`
	// String
	AppId *string `pulumi:"appId"`
	// String.
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// Boolean. Indicates whether or not to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
	BruteForceProtection *bool `pulumi:"bruteForceProtection"`
	// String. Client ID given by your OIDC provider.
	ClientId *string `pulumi:"clientId"`
	// String, Case-sensitive. Client secret given by your OIDC provider.
	ClientSecret *string `pulumi:"clientSecret"`
	// String.
	CommunityBaseUrl *string `pulumi:"communityBaseUrl"`
	// Map(String), Case-sensitive.
	Configuration map[string]string `pulumi:"configuration"`
	// Map(String).
	CustomScripts map[string]string `pulumi:"customScripts"`
	DisableCache  *bool             `pulumi:"disableCache"`
	// Boolean. Indicates whether or not to allow user sign-ups to your application.
	DisableSignup *bool `pulumi:"disableSignup"`
	// String. Usually an URL ending with `/.well-known/openid-configuration`
	DiscoveryUrl *string `pulumi:"discoveryUrl"`
	Domain       *string `pulumi:"domain"`
	// List(String). List of the domains that can be authenticated using the Identity Provider. Only needed for Identifier First authentication flows.
	DomainAliases []string `pulumi:"domainAliases"`
	// Boolean.
	EnabledDatabaseCustomization *bool `pulumi:"enabledDatabaseCustomization"`
	// String. SMS number for the sender. Used when SMS Source is From.
	From        *string `pulumi:"from"`
	IconUrl     *string `pulumi:"iconUrl"`
	IdentityApi *string `pulumi:"identityApi"`
	// Boolean. Indicates whether or not you have a legacy user store and want to gradually migrate those users to the Auth0 user store. [Learn more](https://auth0.com/docs/users/guides/configure-automatic-migration).
	ImportMode *bool    `pulumi:"importMode"`
	Ips        []string `pulumi:"ips"`
	// String. URL of the issuer.
	Issuer *string `pulumi:"issuer"`
	// String.
	JwksUri *string `pulumi:"jwksUri"`
	KeyId   *string `pulumi:"keyId"`
	// String. Maximum number of groups to retrieve.
	MaxGroupsToRetrieve *string `pulumi:"maxGroupsToRetrieve"`
	// String. SID for Copilot. Used when SMS Source is Copilot.
	MessagingServiceSid *string `pulumi:"messagingServiceSid"`
	// String.
	Name *string `pulumi:"name"`
	// List(Resource). Configuration settings for password complexity. For details, see Password Complexity Options.
	PasswordComplexityOptions *ConnectionOptionsPasswordComplexityOptions `pulumi:"passwordComplexityOptions"`
	// List(Resource). Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary. For details, see Password Dictionary.
	PasswordDictionary *ConnectionOptionsPasswordDictionary `pulumi:"passwordDictionary"`
	// List(Resource). Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords. For details, see Password History.
	PasswordHistories []ConnectionOptionsPasswordHistory `pulumi:"passwordHistories"`
	// List(Resource). Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's name, username, nickname, user_metadata.name, user_metadata.first, user_metadata.last, user's email, or first part of the user's email. For details, see Password No Personal Info.
	PasswordNoPersonalInfo *ConnectionOptionsPasswordNoPersonalInfo `pulumi:"passwordNoPersonalInfo"`
	// String. Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
	PasswordPolicy *string `pulumi:"passwordPolicy"`
	// Boolean. Indicates whether or not the user is required to provide a username in addition to an email address.
	RequiresUsername *bool `pulumi:"requiresUsername"`
	// List(String). Value must be a list of scopes. For example `["openid", "profile", "email"]`
	Scopes []string `pulumi:"scopes"`
	// Int. Version 1 is deprecated, use version 2.
	StrategyVersion *int    `pulumi:"strategyVersion"`
	Subject         *string `pulumi:"subject"`
	// String. Syntax of the SMS. Options include `markdown` and `liquid`.
	Syntax *string `pulumi:"syntax"`
	TeamId *string `pulumi:"teamId"`
	// String. Template for the SMS. You can use `@@password@@` as a placeholder for the password value.
	Template *string `pulumi:"template"`
	// String
	TenantDomain *string `pulumi:"tenantDomain"`
	// String.
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
	// Map(Resource). Configuration options for one-time passwords. For details, see TOTP.
	Totp *ConnectionOptionsTotp `pulumi:"totp"`
	// String. SID for your Twilio account.
	TwilioSid *string `pulumi:"twilioSid"`
	// String, Case-sensitive. AuthToken for your Twilio account.
	TwilioToken *string `pulumi:"twilioToken"`
	// String. Value must be `backChannel` or `frontChannel`
	Type        *string `pulumi:"type"`
	UseCertAuth *bool   `pulumi:"useCertAuth"`
	UseKerberos *bool   `pulumi:"useKerberos"`
	// Bool
	UseWsfed *bool `pulumi:"useWsfed"`
	// String.
	UserinfoEndpoint *string `pulumi:"userinfoEndpoint"`
	// String.
	Validation map[string]string `pulumi:"validation"`
	// Boolean. Indicates whether or not to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
	WaadCommonEndpoint *bool `pulumi:"waadCommonEndpoint"`
	// String
	WaadProtocol *string `pulumi:"waadProtocol"`
}

// ConnectionOptionsInput is an input type that accepts ConnectionOptionsArgs and ConnectionOptionsOutput values.
// You can construct a concrete instance of `ConnectionOptionsInput` via:
//
//          ConnectionOptionsArgs{...}
type ConnectionOptionsInput interface {
	pulumi.Input

	ToConnectionOptionsOutput() ConnectionOptionsOutput
	ToConnectionOptionsOutputWithContext(context.Context) ConnectionOptionsOutput
}

type ConnectionOptionsArgs struct {
	// String. ADFS Metadata source.
	AdfsServer       pulumi.StringPtrInput   `pulumi:"adfsServer"`
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
	// Boolean.
	ApiEnableUsers pulumi.BoolPtrInput `pulumi:"apiEnableUsers"`
	// String. Azure AD domain name.
	//
	// Deprecated: use domain instead
	AppDomain pulumi.StringPtrInput `pulumi:"appDomain"`
	// String
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// String.
	AuthorizationEndpoint pulumi.StringPtrInput `pulumi:"authorizationEndpoint"`
	// Boolean. Indicates whether or not to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
	BruteForceProtection pulumi.BoolPtrInput `pulumi:"bruteForceProtection"`
	// String. Client ID given by your OIDC provider.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// String, Case-sensitive. Client secret given by your OIDC provider.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// String.
	CommunityBaseUrl pulumi.StringPtrInput `pulumi:"communityBaseUrl"`
	// Map(String), Case-sensitive.
	Configuration pulumi.StringMapInput `pulumi:"configuration"`
	// Map(String).
	CustomScripts pulumi.StringMapInput `pulumi:"customScripts"`
	DisableCache  pulumi.BoolPtrInput   `pulumi:"disableCache"`
	// Boolean. Indicates whether or not to allow user sign-ups to your application.
	DisableSignup pulumi.BoolPtrInput `pulumi:"disableSignup"`
	// String. Usually an URL ending with `/.well-known/openid-configuration`
	DiscoveryUrl pulumi.StringPtrInput `pulumi:"discoveryUrl"`
	Domain       pulumi.StringPtrInput `pulumi:"domain"`
	// List(String). List of the domains that can be authenticated using the Identity Provider. Only needed for Identifier First authentication flows.
	DomainAliases pulumi.StringArrayInput `pulumi:"domainAliases"`
	// Boolean.
	EnabledDatabaseCustomization pulumi.BoolPtrInput `pulumi:"enabledDatabaseCustomization"`
	// String. SMS number for the sender. Used when SMS Source is From.
	From        pulumi.StringPtrInput `pulumi:"from"`
	IconUrl     pulumi.StringPtrInput `pulumi:"iconUrl"`
	IdentityApi pulumi.StringPtrInput `pulumi:"identityApi"`
	// Boolean. Indicates whether or not you have a legacy user store and want to gradually migrate those users to the Auth0 user store. [Learn more](https://auth0.com/docs/users/guides/configure-automatic-migration).
	ImportMode pulumi.BoolPtrInput     `pulumi:"importMode"`
	Ips        pulumi.StringArrayInput `pulumi:"ips"`
	// String. URL of the issuer.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// String.
	JwksUri pulumi.StringPtrInput `pulumi:"jwksUri"`
	KeyId   pulumi.StringPtrInput `pulumi:"keyId"`
	// String. Maximum number of groups to retrieve.
	MaxGroupsToRetrieve pulumi.StringPtrInput `pulumi:"maxGroupsToRetrieve"`
	// String. SID for Copilot. Used when SMS Source is Copilot.
	MessagingServiceSid pulumi.StringPtrInput `pulumi:"messagingServiceSid"`
	// String.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List(Resource). Configuration settings for password complexity. For details, see Password Complexity Options.
	PasswordComplexityOptions ConnectionOptionsPasswordComplexityOptionsPtrInput `pulumi:"passwordComplexityOptions"`
	// List(Resource). Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary. For details, see Password Dictionary.
	PasswordDictionary ConnectionOptionsPasswordDictionaryPtrInput `pulumi:"passwordDictionary"`
	// List(Resource). Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords. For details, see Password History.
	PasswordHistories ConnectionOptionsPasswordHistoryArrayInput `pulumi:"passwordHistories"`
	// List(Resource). Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's name, username, nickname, user_metadata.name, user_metadata.first, user_metadata.last, user's email, or first part of the user's email. For details, see Password No Personal Info.
	PasswordNoPersonalInfo ConnectionOptionsPasswordNoPersonalInfoPtrInput `pulumi:"passwordNoPersonalInfo"`
	// String. Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
	PasswordPolicy pulumi.StringPtrInput `pulumi:"passwordPolicy"`
	// Boolean. Indicates whether or not the user is required to provide a username in addition to an email address.
	RequiresUsername pulumi.BoolPtrInput `pulumi:"requiresUsername"`
	// List(String). Value must be a list of scopes. For example `["openid", "profile", "email"]`
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// Int. Version 1 is deprecated, use version 2.
	StrategyVersion pulumi.IntPtrInput    `pulumi:"strategyVersion"`
	Subject         pulumi.StringPtrInput `pulumi:"subject"`
	// String. Syntax of the SMS. Options include `markdown` and `liquid`.
	Syntax pulumi.StringPtrInput `pulumi:"syntax"`
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
	// String. Template for the SMS. You can use `@@password@@` as a placeholder for the password value.
	Template pulumi.StringPtrInput `pulumi:"template"`
	// String
	TenantDomain pulumi.StringPtrInput `pulumi:"tenantDomain"`
	// String.
	TokenEndpoint pulumi.StringPtrInput `pulumi:"tokenEndpoint"`
	// Map(Resource). Configuration options for one-time passwords. For details, see TOTP.
	Totp ConnectionOptionsTotpPtrInput `pulumi:"totp"`
	// String. SID for your Twilio account.
	TwilioSid pulumi.StringPtrInput `pulumi:"twilioSid"`
	// String, Case-sensitive. AuthToken for your Twilio account.
	TwilioToken pulumi.StringPtrInput `pulumi:"twilioToken"`
	// String. Value must be `backChannel` or `frontChannel`
	Type        pulumi.StringPtrInput `pulumi:"type"`
	UseCertAuth pulumi.BoolPtrInput   `pulumi:"useCertAuth"`
	UseKerberos pulumi.BoolPtrInput   `pulumi:"useKerberos"`
	// Bool
	UseWsfed pulumi.BoolPtrInput `pulumi:"useWsfed"`
	// String.
	UserinfoEndpoint pulumi.StringPtrInput `pulumi:"userinfoEndpoint"`
	// String.
	Validation pulumi.StringMapInput `pulumi:"validation"`
	// Boolean. Indicates whether or not to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
	WaadCommonEndpoint pulumi.BoolPtrInput `pulumi:"waadCommonEndpoint"`
	// String
	WaadProtocol pulumi.StringPtrInput `pulumi:"waadProtocol"`
}

func (ConnectionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptions)(nil)).Elem()
}

func (i ConnectionOptionsArgs) ToConnectionOptionsOutput() ConnectionOptionsOutput {
	return i.ToConnectionOptionsOutputWithContext(context.Background())
}

func (i ConnectionOptionsArgs) ToConnectionOptionsOutputWithContext(ctx context.Context) ConnectionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsOutput)
}

func (i ConnectionOptionsArgs) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return i.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsArgs) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsOutput).ToConnectionOptionsPtrOutputWithContext(ctx)
}

// ConnectionOptionsPtrInput is an input type that accepts ConnectionOptionsArgs, ConnectionOptionsPtr and ConnectionOptionsPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPtrInput` via:
//
//          ConnectionOptionsArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput
	ToConnectionOptionsPtrOutputWithContext(context.Context) ConnectionOptionsPtrOutput
}

type connectionOptionsPtrType ConnectionOptionsArgs

func ConnectionOptionsPtr(v *ConnectionOptionsArgs) ConnectionOptionsPtrInput {
	return (*connectionOptionsPtrType)(v)
}

func (*connectionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptions)(nil)).Elem()
}

func (i *connectionOptionsPtrType) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return i.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPtrType) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPtrOutput)
}

type ConnectionOptionsOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptions)(nil)).Elem()
}

func (o ConnectionOptionsOutput) ToConnectionOptionsOutput() ConnectionOptionsOutput {
	return o
}

func (o ConnectionOptionsOutput) ToConnectionOptionsOutputWithContext(ctx context.Context) ConnectionOptionsOutput {
	return o
}

func (o ConnectionOptionsOutput) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return o.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsOutput) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptions {
		return &v
	}).(ConnectionOptionsPtrOutput)
}

// String. ADFS Metadata source.
func (o ConnectionOptionsOutput) AdfsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AdfsServer }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

// Boolean.
func (o ConnectionOptionsOutput) ApiEnableUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ApiEnableUsers }).(pulumi.BoolPtrOutput)
}

// String. Azure AD domain name.
//
// Deprecated: use domain instead
func (o ConnectionOptionsOutput) AppDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AppDomain }).(pulumi.StringPtrOutput)
}

// String
func (o ConnectionOptionsOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
func (o ConnectionOptionsOutput) BruteForceProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.BruteForceProtection }).(pulumi.BoolPtrOutput)
}

// String. Client ID given by your OIDC provider.
func (o ConnectionOptionsOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. Client secret given by your OIDC provider.
func (o ConnectionOptionsOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsOutput) CommunityBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.CommunityBaseUrl }).(pulumi.StringPtrOutput)
}

// Map(String), Case-sensitive.
func (o ConnectionOptionsOutput) Configuration() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.Configuration }).(pulumi.StringMapOutput)
}

// Map(String).
func (o ConnectionOptionsOutput) CustomScripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.CustomScripts }).(pulumi.StringMapOutput)
}

func (o ConnectionOptionsOutput) DisableCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableCache }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not to allow user sign-ups to your application.
func (o ConnectionOptionsOutput) DisableSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableSignup }).(pulumi.BoolPtrOutput)
}

// String. Usually an URL ending with `/.well-known/openid-configuration`
func (o ConnectionOptionsOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.DiscoveryUrl }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// List(String). List of the domains that can be authenticated using the Identity Provider. Only needed for Identifier First authentication flows.
func (o ConnectionOptionsOutput) DomainAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.DomainAliases }).(pulumi.StringArrayOutput)
}

// Boolean.
func (o ConnectionOptionsOutput) EnabledDatabaseCustomization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.EnabledDatabaseCustomization }).(pulumi.BoolPtrOutput)
}

// String. SMS number for the sender. Used when SMS Source is From.
func (o ConnectionOptionsOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) IdentityApi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.IdentityApi }).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not you have a legacy user store and want to gradually migrate those users to the Auth0 user store. [Learn more](https://auth0.com/docs/users/guides/configure-automatic-migration).
func (o ConnectionOptionsOutput) ImportMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ImportMode }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// String. URL of the issuer.
func (o ConnectionOptionsOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.JwksUri }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

// String. Maximum number of groups to retrieve.
func (o ConnectionOptionsOutput) MaxGroupsToRetrieve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MaxGroupsToRetrieve }).(pulumi.StringPtrOutput)
}

// String. SID for Copilot. Used when SMS Source is Copilot.
func (o ConnectionOptionsOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MessagingServiceSid }).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List(Resource). Configuration settings for password complexity. For details, see Password Complexity Options.
func (o ConnectionOptionsOutput) PasswordComplexityOptions() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordComplexityOptions {
		return v.PasswordComplexityOptions
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

// List(Resource). Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary. For details, see Password Dictionary.
func (o ConnectionOptionsOutput) PasswordDictionary() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordDictionary { return v.PasswordDictionary }).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

// List(Resource). Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords. For details, see Password History.
func (o ConnectionOptionsOutput) PasswordHistories() ConnectionOptionsPasswordHistoryArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []ConnectionOptionsPasswordHistory { return v.PasswordHistories }).(ConnectionOptionsPasswordHistoryArrayOutput)
}

// List(Resource). Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's name, username, nickname, user_metadata.name, user_metadata.first, user_metadata.last, user's email, or first part of the user's email. For details, see Password No Personal Info.
func (o ConnectionOptionsOutput) PasswordNoPersonalInfo() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordNoPersonalInfo { return v.PasswordNoPersonalInfo }).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

// String. Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
func (o ConnectionOptionsOutput) PasswordPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.PasswordPolicy }).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not the user is required to provide a username in addition to an email address.
func (o ConnectionOptionsOutput) RequiresUsername() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.RequiresUsername }).(pulumi.BoolPtrOutput)
}

// List(String). Value must be a list of scopes. For example `["openid", "profile", "email"]`
func (o ConnectionOptionsOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Int. Version 1 is deprecated, use version 2.
func (o ConnectionOptionsOutput) StrategyVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *int { return v.StrategyVersion }).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// String. Syntax of the SMS. Options include `markdown` and `liquid`.
func (o ConnectionOptionsOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Syntax }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

// String. Template for the SMS. You can use `@@password@@` as a placeholder for the password value.
func (o ConnectionOptionsOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Template }).(pulumi.StringPtrOutput)
}

// String
func (o ConnectionOptionsOutput) TenantDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TenantDomain }).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TokenEndpoint }).(pulumi.StringPtrOutput)
}

// Map(Resource). Configuration options for one-time passwords. For details, see TOTP.
func (o ConnectionOptionsOutput) Totp() ConnectionOptionsTotpPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsTotp { return v.Totp }).(ConnectionOptionsTotpPtrOutput)
}

// String. SID for your Twilio account.
func (o ConnectionOptionsOutput) TwilioSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TwilioSid }).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. AuthToken for your Twilio account.
func (o ConnectionOptionsOutput) TwilioToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TwilioToken }).(pulumi.StringPtrOutput)
}

// String. Value must be `backChannel` or `frontChannel`
func (o ConnectionOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsOutput) UseCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseCertAuth }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsOutput) UseKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseKerberos }).(pulumi.BoolPtrOutput)
}

// Bool
func (o ConnectionOptionsOutput) UseWsfed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseWsfed }).(pulumi.BoolPtrOutput)
}

// String.
func (o ConnectionOptionsOutput) UserinfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.UserinfoEndpoint }).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsOutput) Validation() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.Validation }).(pulumi.StringMapOutput)
}

// Boolean. Indicates whether or not to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
func (o ConnectionOptionsOutput) WaadCommonEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.WaadCommonEndpoint }).(pulumi.BoolPtrOutput)
}

// String
func (o ConnectionOptionsOutput) WaadProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.WaadProtocol }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptions)(nil)).Elem()
}

func (o ConnectionOptionsPtrOutput) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPtrOutput) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPtrOutput) Elem() ConnectionOptionsOutput {
	return o.ApplyT(func(v *ConnectionOptions) ConnectionOptions { return *v }).(ConnectionOptionsOutput)
}

// String. ADFS Metadata source.
func (o ConnectionOptionsPtrOutput) AdfsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AdfsServer
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

// Boolean.
func (o ConnectionOptionsPtrOutput) ApiEnableUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ApiEnableUsers
	}).(pulumi.BoolPtrOutput)
}

// String. Azure AD domain name.
//
// Deprecated: use domain instead
func (o ConnectionOptionsPtrOutput) AppDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AppDomain
	}).(pulumi.StringPtrOutput)
}

// String
func (o ConnectionOptionsPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
func (o ConnectionOptionsPtrOutput) BruteForceProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.BruteForceProtection
	}).(pulumi.BoolPtrOutput)
}

// String. Client ID given by your OIDC provider.
func (o ConnectionOptionsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. Client secret given by your OIDC provider.
func (o ConnectionOptionsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsPtrOutput) CommunityBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.CommunityBaseUrl
	}).(pulumi.StringPtrOutput)
}

// Map(String), Case-sensitive.
func (o ConnectionOptionsPtrOutput) Configuration() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(pulumi.StringMapOutput)
}

// Map(String).
func (o ConnectionOptionsPtrOutput) CustomScripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomScripts
	}).(pulumi.StringMapOutput)
}

func (o ConnectionOptionsPtrOutput) DisableCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableCache
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not to allow user sign-ups to your application.
func (o ConnectionOptionsPtrOutput) DisableSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSignup
	}).(pulumi.BoolPtrOutput)
}

// String. Usually an URL ending with `/.well-known/openid-configuration`
func (o ConnectionOptionsPtrOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveryUrl
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// List(String). List of the domains that can be authenticated using the Identity Provider. Only needed for Identifier First authentication flows.
func (o ConnectionOptionsPtrOutput) DomainAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.DomainAliases
	}).(pulumi.StringArrayOutput)
}

// Boolean.
func (o ConnectionOptionsPtrOutput) EnabledDatabaseCustomization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnabledDatabaseCustomization
	}).(pulumi.BoolPtrOutput)
}

// String. SMS number for the sender. Used when SMS Source is From.
func (o ConnectionOptionsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.IconUrl
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) IdentityApi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.IdentityApi
	}).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not you have a legacy user store and want to gradually migrate those users to the Auth0 user store. [Learn more](https://auth0.com/docs/users/guides/configure-automatic-migration).
func (o ConnectionOptionsPtrOutput) ImportMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ImportMode
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// String. URL of the issuer.
func (o ConnectionOptionsPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsPtrOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.JwksUri
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeyId
	}).(pulumi.StringPtrOutput)
}

// String. Maximum number of groups to retrieve.
func (o ConnectionOptionsPtrOutput) MaxGroupsToRetrieve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MaxGroupsToRetrieve
	}).(pulumi.StringPtrOutput)
}

// String. SID for Copilot. Used when SMS Source is Copilot.
func (o ConnectionOptionsPtrOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MessagingServiceSid
	}).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// List(Resource). Configuration settings for password complexity. For details, see Password Complexity Options.
func (o ConnectionOptionsPtrOutput) PasswordComplexityOptions() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordComplexityOptions {
		if v == nil {
			return nil
		}
		return v.PasswordComplexityOptions
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

// List(Resource). Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary. For details, see Password Dictionary.
func (o ConnectionOptionsPtrOutput) PasswordDictionary() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordDictionary {
		if v == nil {
			return nil
		}
		return v.PasswordDictionary
	}).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

// List(Resource). Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords. For details, see Password History.
func (o ConnectionOptionsPtrOutput) PasswordHistories() ConnectionOptionsPasswordHistoryArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []ConnectionOptionsPasswordHistory {
		if v == nil {
			return nil
		}
		return v.PasswordHistories
	}).(ConnectionOptionsPasswordHistoryArrayOutput)
}

// List(Resource). Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's name, username, nickname, user_metadata.name, user_metadata.first, user_metadata.last, user's email, or first part of the user's email. For details, see Password No Personal Info.
func (o ConnectionOptionsPtrOutput) PasswordNoPersonalInfo() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordNoPersonalInfo {
		if v == nil {
			return nil
		}
		return v.PasswordNoPersonalInfo
	}).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

// String. Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
func (o ConnectionOptionsPtrOutput) PasswordPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.PasswordPolicy
	}).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not the user is required to provide a username in addition to an email address.
func (o ConnectionOptionsPtrOutput) RequiresUsername() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.RequiresUsername
	}).(pulumi.BoolPtrOutput)
}

// List(String). Value must be a list of scopes. For example `["openid", "profile", "email"]`
func (o ConnectionOptionsPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// Int. Version 1 is deprecated, use version 2.
func (o ConnectionOptionsPtrOutput) StrategyVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *int {
		if v == nil {
			return nil
		}
		return v.StrategyVersion
	}).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

// String. Syntax of the SMS. Options include `markdown` and `liquid`.
func (o ConnectionOptionsPtrOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Syntax
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

// String. Template for the SMS. You can use `@@password@@` as a placeholder for the password value.
func (o ConnectionOptionsPtrOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringPtrOutput)
}

// String
func (o ConnectionOptionsPtrOutput) TenantDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TenantDomain
	}).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsPtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// Map(Resource). Configuration options for one-time passwords. For details, see TOTP.
func (o ConnectionOptionsPtrOutput) Totp() ConnectionOptionsTotpPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsTotp {
		if v == nil {
			return nil
		}
		return v.Totp
	}).(ConnectionOptionsTotpPtrOutput)
}

// String. SID for your Twilio account.
func (o ConnectionOptionsPtrOutput) TwilioSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TwilioSid
	}).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. AuthToken for your Twilio account.
func (o ConnectionOptionsPtrOutput) TwilioToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TwilioToken
	}).(pulumi.StringPtrOutput)
}

// String. Value must be `backChannel` or `frontChannel`
func (o ConnectionOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsPtrOutput) UseCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseCertAuth
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsPtrOutput) UseKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseKerberos
	}).(pulumi.BoolPtrOutput)
}

// Bool
func (o ConnectionOptionsPtrOutput) UseWsfed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseWsfed
	}).(pulumi.BoolPtrOutput)
}

// String.
func (o ConnectionOptionsPtrOutput) UserinfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.UserinfoEndpoint
	}).(pulumi.StringPtrOutput)
}

// String.
func (o ConnectionOptionsPtrOutput) Validation() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(pulumi.StringMapOutput)
}

// Boolean. Indicates whether or not to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
func (o ConnectionOptionsPtrOutput) WaadCommonEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.WaadCommonEndpoint
	}).(pulumi.BoolPtrOutput)
}

// String
func (o ConnectionOptionsPtrOutput) WaadProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.WaadProtocol
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptions struct {
	// Integer. Minimum number of characters allowed in passwords.
	MinLength *int `pulumi:"minLength"`
}

// ConnectionOptionsPasswordComplexityOptionsInput is an input type that accepts ConnectionOptionsPasswordComplexityOptionsArgs and ConnectionOptionsPasswordComplexityOptionsOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordComplexityOptionsInput` via:
//
//          ConnectionOptionsPasswordComplexityOptionsArgs{...}
type ConnectionOptionsPasswordComplexityOptionsInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput
	ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(context.Context) ConnectionOptionsPasswordComplexityOptionsOutput
}

type ConnectionOptionsPasswordComplexityOptionsArgs struct {
	// Integer. Minimum number of characters allowed in passwords.
	MinLength pulumi.IntPtrInput `pulumi:"minLength"`
}

func (ConnectionOptionsPasswordComplexityOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsOutput)
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsOutput).ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordComplexityOptionsPtrInput is an input type that accepts ConnectionOptionsPasswordComplexityOptionsArgs, ConnectionOptionsPasswordComplexityOptionsPtr and ConnectionOptionsPasswordComplexityOptionsPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordComplexityOptionsPtrInput` via:
//
//          ConnectionOptionsPasswordComplexityOptionsArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsPasswordComplexityOptionsPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput
	ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput
}

type connectionOptionsPasswordComplexityOptionsPtrType ConnectionOptionsPasswordComplexityOptionsArgs

func ConnectionOptionsPasswordComplexityOptionsPtr(v *ConnectionOptionsPasswordComplexityOptionsArgs) ConnectionOptionsPasswordComplexityOptionsPtrInput {
	return (*connectionOptionsPasswordComplexityOptionsPtrType)(v)
}

func (*connectionOptionsPasswordComplexityOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (i *connectionOptionsPasswordComplexityOptionsPtrType) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordComplexityOptionsPtrType) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptionsOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordComplexityOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordComplexityOptions) *ConnectionOptionsPasswordComplexityOptions {
		return &v
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

// Integer. Minimum number of characters allowed in passwords.
func (o ConnectionOptionsPasswordComplexityOptionsOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordComplexityOptions) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptionsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordComplexityOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) Elem() ConnectionOptionsPasswordComplexityOptionsOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordComplexityOptions) ConnectionOptionsPasswordComplexityOptions {
		return *v
	}).(ConnectionOptionsPasswordComplexityOptionsOutput)
}

// Integer. Minimum number of characters allowed in passwords.
func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordComplexityOptions) *int {
		if v == nil {
			return nil
		}
		return v.MinLength
	}).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordDictionary struct {
	// Set(String), (Maximum=2000 characters). Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.
	Dictionaries []string `pulumi:"dictionaries"`
	// Boolean. Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
	Enable *bool `pulumi:"enable"`
}

// ConnectionOptionsPasswordDictionaryInput is an input type that accepts ConnectionOptionsPasswordDictionaryArgs and ConnectionOptionsPasswordDictionaryOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordDictionaryInput` via:
//
//          ConnectionOptionsPasswordDictionaryArgs{...}
type ConnectionOptionsPasswordDictionaryInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput
	ToConnectionOptionsPasswordDictionaryOutputWithContext(context.Context) ConnectionOptionsPasswordDictionaryOutput
}

type ConnectionOptionsPasswordDictionaryArgs struct {
	// Set(String), (Maximum=2000 characters). Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.
	Dictionaries pulumi.StringArrayInput `pulumi:"dictionaries"`
	// Boolean. Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (ConnectionOptionsPasswordDictionaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput {
	return i.ToConnectionOptionsPasswordDictionaryOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryOutput)
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return i.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryOutput).ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordDictionaryPtrInput is an input type that accepts ConnectionOptionsPasswordDictionaryArgs, ConnectionOptionsPasswordDictionaryPtr and ConnectionOptionsPasswordDictionaryPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordDictionaryPtrInput` via:
//
//          ConnectionOptionsPasswordDictionaryArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsPasswordDictionaryPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput
	ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Context) ConnectionOptionsPasswordDictionaryPtrOutput
}

type connectionOptionsPasswordDictionaryPtrType ConnectionOptionsPasswordDictionaryArgs

func ConnectionOptionsPasswordDictionaryPtr(v *ConnectionOptionsPasswordDictionaryArgs) ConnectionOptionsPasswordDictionaryPtrInput {
	return (*connectionOptionsPasswordDictionaryPtrType)(v)
}

func (*connectionOptionsPasswordDictionaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (i *connectionOptionsPasswordDictionaryPtrType) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return i.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordDictionaryPtrType) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

type ConnectionOptionsPasswordDictionaryOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordDictionaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordDictionary) *ConnectionOptionsPasswordDictionary {
		return &v
	}).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

// Set(String), (Maximum=2000 characters). Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.
func (o ConnectionOptionsPasswordDictionaryOutput) Dictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordDictionary) []string { return v.Dictionaries }).(pulumi.StringArrayOutput)
}

// Boolean. Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
func (o ConnectionOptionsPasswordDictionaryOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordDictionary) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordDictionaryPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordDictionaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) Elem() ConnectionOptionsPasswordDictionaryOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) ConnectionOptionsPasswordDictionary { return *v }).(ConnectionOptionsPasswordDictionaryOutput)
}

// Set(String), (Maximum=2000 characters). Customized contents of the password dictionary. By default, the password dictionary contains a list of the [10,000 most common passwords](https://github.com/danielmiessler/SecLists/blob/master/Passwords/Common-Credentials/10k-most-common.txt); your customized content is used in addition to the default password dictionary. Matching is not case-sensitive.
func (o ConnectionOptionsPasswordDictionaryPtrOutput) Dictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) []string {
		if v == nil {
			return nil
		}
		return v.Dictionaries
	}).(pulumi.StringArrayOutput)
}

// Boolean. Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
func (o ConnectionOptionsPasswordDictionaryPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordHistory struct {
	// Boolean. Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
	Enable *bool `pulumi:"enable"`
	// Integer, (Maximum=24). Indicates the number of passwords to keep in history.
	Size *int `pulumi:"size"`
}

// ConnectionOptionsPasswordHistoryInput is an input type that accepts ConnectionOptionsPasswordHistoryArgs and ConnectionOptionsPasswordHistoryOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordHistoryInput` via:
//
//          ConnectionOptionsPasswordHistoryArgs{...}
type ConnectionOptionsPasswordHistoryInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput
	ToConnectionOptionsPasswordHistoryOutputWithContext(context.Context) ConnectionOptionsPasswordHistoryOutput
}

type ConnectionOptionsPasswordHistoryArgs struct {
	// Boolean. Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	// Integer, (Maximum=24). Indicates the number of passwords to keep in history.
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (ConnectionOptionsPasswordHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (i ConnectionOptionsPasswordHistoryArgs) ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput {
	return i.ToConnectionOptionsPasswordHistoryOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordHistoryArgs) ToConnectionOptionsPasswordHistoryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordHistoryOutput)
}

// ConnectionOptionsPasswordHistoryArrayInput is an input type that accepts ConnectionOptionsPasswordHistoryArray and ConnectionOptionsPasswordHistoryArrayOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordHistoryArrayInput` via:
//
//          ConnectionOptionsPasswordHistoryArray{ ConnectionOptionsPasswordHistoryArgs{...} }
type ConnectionOptionsPasswordHistoryArrayInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput
	ToConnectionOptionsPasswordHistoryArrayOutputWithContext(context.Context) ConnectionOptionsPasswordHistoryArrayOutput
}

type ConnectionOptionsPasswordHistoryArray []ConnectionOptionsPasswordHistoryInput

func (ConnectionOptionsPasswordHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (i ConnectionOptionsPasswordHistoryArray) ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput {
	return i.ToConnectionOptionsPasswordHistoryArrayOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordHistoryArray) ToConnectionOptionsPasswordHistoryArrayOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordHistoryArrayOutput)
}

type ConnectionOptionsPasswordHistoryOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (o ConnectionOptionsPasswordHistoryOutput) ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryOutput) ToConnectionOptionsPasswordHistoryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryOutput {
	return o
}

// Boolean. Indicates whether password history is enabled for the connection. When enabled, any existing users in this connection will be unaffected; the system will maintain their password history going forward.
func (o ConnectionOptionsPasswordHistoryOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordHistory) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

// Integer, (Maximum=24). Indicates the number of passwords to keep in history.
func (o ConnectionOptionsPasswordHistoryOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordHistory) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordHistoryArrayOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) ToConnectionOptionsPasswordHistoryArrayOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryArrayOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) Index(i pulumi.IntInput) ConnectionOptionsPasswordHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionOptionsPasswordHistory {
		return vs[0].([]ConnectionOptionsPasswordHistory)[vs[1].(int)]
	}).(ConnectionOptionsPasswordHistoryOutput)
}

type ConnectionOptionsPasswordNoPersonalInfo struct {
	// Boolean. Indicates whether the password personal info check is enabled for this connection.
	Enable *bool `pulumi:"enable"`
}

// ConnectionOptionsPasswordNoPersonalInfoInput is an input type that accepts ConnectionOptionsPasswordNoPersonalInfoArgs and ConnectionOptionsPasswordNoPersonalInfoOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordNoPersonalInfoInput` via:
//
//          ConnectionOptionsPasswordNoPersonalInfoArgs{...}
type ConnectionOptionsPasswordNoPersonalInfoInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput
	ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput
}

type ConnectionOptionsPasswordNoPersonalInfoArgs struct {
	// Boolean. Indicates whether the password personal info check is enabled for this connection.
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (ConnectionOptionsPasswordNoPersonalInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoOutput)
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoOutput).ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordNoPersonalInfoPtrInput is an input type that accepts ConnectionOptionsPasswordNoPersonalInfoArgs, ConnectionOptionsPasswordNoPersonalInfoPtr and ConnectionOptionsPasswordNoPersonalInfoPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordNoPersonalInfoPtrInput` via:
//
//          ConnectionOptionsPasswordNoPersonalInfoArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsPasswordNoPersonalInfoPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput
	ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput
}

type connectionOptionsPasswordNoPersonalInfoPtrType ConnectionOptionsPasswordNoPersonalInfoArgs

func ConnectionOptionsPasswordNoPersonalInfoPtr(v *ConnectionOptionsPasswordNoPersonalInfoArgs) ConnectionOptionsPasswordNoPersonalInfoPtrInput {
	return (*connectionOptionsPasswordNoPersonalInfoPtrType)(v)
}

func (*connectionOptionsPasswordNoPersonalInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (i *connectionOptionsPasswordNoPersonalInfoPtrType) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordNoPersonalInfoPtrType) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

type ConnectionOptionsPasswordNoPersonalInfoOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordNoPersonalInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordNoPersonalInfo) *ConnectionOptionsPasswordNoPersonalInfo {
		return &v
	}).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

// Boolean. Indicates whether the password personal info check is enabled for this connection.
func (o ConnectionOptionsPasswordNoPersonalInfoOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordNoPersonalInfo) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordNoPersonalInfoPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) Elem() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordNoPersonalInfo) ConnectionOptionsPasswordNoPersonalInfo { return *v }).(ConnectionOptionsPasswordNoPersonalInfoOutput)
}

// Boolean. Indicates whether the password personal info check is enabled for this connection.
func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordNoPersonalInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsTotp struct {
	// Integer. Length of the one-time password.
	Length *int `pulumi:"length"`
	// Integer. Seconds between allowed generation of new passwords.
	TimeStep *int `pulumi:"timeStep"`
}

// ConnectionOptionsTotpInput is an input type that accepts ConnectionOptionsTotpArgs and ConnectionOptionsTotpOutput values.
// You can construct a concrete instance of `ConnectionOptionsTotpInput` via:
//
//          ConnectionOptionsTotpArgs{...}
type ConnectionOptionsTotpInput interface {
	pulumi.Input

	ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput
	ToConnectionOptionsTotpOutputWithContext(context.Context) ConnectionOptionsTotpOutput
}

type ConnectionOptionsTotpArgs struct {
	// Integer. Length of the one-time password.
	Length pulumi.IntPtrInput `pulumi:"length"`
	// Integer. Seconds between allowed generation of new passwords.
	TimeStep pulumi.IntPtrInput `pulumi:"timeStep"`
}

func (ConnectionOptionsTotpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsTotp)(nil)).Elem()
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput {
	return i.ToConnectionOptionsTotpOutputWithContext(context.Background())
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpOutputWithContext(ctx context.Context) ConnectionOptionsTotpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpOutput)
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return i.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpOutput).ToConnectionOptionsTotpPtrOutputWithContext(ctx)
}

// ConnectionOptionsTotpPtrInput is an input type that accepts ConnectionOptionsTotpArgs, ConnectionOptionsTotpPtr and ConnectionOptionsTotpPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsTotpPtrInput` via:
//
//          ConnectionOptionsTotpArgs{...}
//
//  or:
//
//          nil
type ConnectionOptionsTotpPtrInput interface {
	pulumi.Input

	ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput
	ToConnectionOptionsTotpPtrOutputWithContext(context.Context) ConnectionOptionsTotpPtrOutput
}

type connectionOptionsTotpPtrType ConnectionOptionsTotpArgs

func ConnectionOptionsTotpPtr(v *ConnectionOptionsTotpArgs) ConnectionOptionsTotpPtrInput {
	return (*connectionOptionsTotpPtrType)(v)
}

func (*connectionOptionsTotpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsTotp)(nil)).Elem()
}

func (i *connectionOptionsTotpPtrType) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return i.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsTotpPtrType) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpPtrOutput)
}

type ConnectionOptionsTotpOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsTotpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsTotp)(nil)).Elem()
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput {
	return o
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpOutputWithContext(ctx context.Context) ConnectionOptionsTotpOutput {
	return o
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return o.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsTotp) *ConnectionOptionsTotp {
		return &v
	}).(ConnectionOptionsTotpPtrOutput)
}

// Integer. Length of the one-time password.
func (o ConnectionOptionsTotpOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsTotp) *int { return v.Length }).(pulumi.IntPtrOutput)
}

// Integer. Seconds between allowed generation of new passwords.
func (o ConnectionOptionsTotpOutput) TimeStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsTotp) *int { return v.TimeStep }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsTotpPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsTotpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsTotp)(nil)).Elem()
}

func (o ConnectionOptionsTotpPtrOutput) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return o
}

func (o ConnectionOptionsTotpPtrOutput) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return o
}

func (o ConnectionOptionsTotpPtrOutput) Elem() ConnectionOptionsTotpOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) ConnectionOptionsTotp { return *v }).(ConnectionOptionsTotpOutput)
}

// Integer. Length of the one-time password.
func (o ConnectionOptionsTotpPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

// Integer. Seconds between allowed generation of new passwords.
func (o ConnectionOptionsTotpPtrOutput) TimeStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) *int {
		if v == nil {
			return nil
		}
		return v.TimeStep
	}).(pulumi.IntPtrOutput)
}

type CustomDomainVerification struct {
	// List(Map). Verification methods for the domain.
	Methods []interface{} `pulumi:"methods"`
}

// CustomDomainVerificationInput is an input type that accepts CustomDomainVerificationArgs and CustomDomainVerificationOutput values.
// You can construct a concrete instance of `CustomDomainVerificationInput` via:
//
//          CustomDomainVerificationArgs{...}
type CustomDomainVerificationInput interface {
	pulumi.Input

	ToCustomDomainVerificationOutput() CustomDomainVerificationOutput
	ToCustomDomainVerificationOutputWithContext(context.Context) CustomDomainVerificationOutput
}

type CustomDomainVerificationArgs struct {
	// List(Map). Verification methods for the domain.
	Methods pulumi.ArrayInput `pulumi:"methods"`
}

func (CustomDomainVerificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainVerification)(nil)).Elem()
}

func (i CustomDomainVerificationArgs) ToCustomDomainVerificationOutput() CustomDomainVerificationOutput {
	return i.ToCustomDomainVerificationOutputWithContext(context.Background())
}

func (i CustomDomainVerificationArgs) ToCustomDomainVerificationOutputWithContext(ctx context.Context) CustomDomainVerificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainVerificationOutput)
}

func (i CustomDomainVerificationArgs) ToCustomDomainVerificationPtrOutput() CustomDomainVerificationPtrOutput {
	return i.ToCustomDomainVerificationPtrOutputWithContext(context.Background())
}

func (i CustomDomainVerificationArgs) ToCustomDomainVerificationPtrOutputWithContext(ctx context.Context) CustomDomainVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainVerificationOutput).ToCustomDomainVerificationPtrOutputWithContext(ctx)
}

// CustomDomainVerificationPtrInput is an input type that accepts CustomDomainVerificationArgs, CustomDomainVerificationPtr and CustomDomainVerificationPtrOutput values.
// You can construct a concrete instance of `CustomDomainVerificationPtrInput` via:
//
//          CustomDomainVerificationArgs{...}
//
//  or:
//
//          nil
type CustomDomainVerificationPtrInput interface {
	pulumi.Input

	ToCustomDomainVerificationPtrOutput() CustomDomainVerificationPtrOutput
	ToCustomDomainVerificationPtrOutputWithContext(context.Context) CustomDomainVerificationPtrOutput
}

type customDomainVerificationPtrType CustomDomainVerificationArgs

func CustomDomainVerificationPtr(v *CustomDomainVerificationArgs) CustomDomainVerificationPtrInput {
	return (*customDomainVerificationPtrType)(v)
}

func (*customDomainVerificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainVerification)(nil)).Elem()
}

func (i *customDomainVerificationPtrType) ToCustomDomainVerificationPtrOutput() CustomDomainVerificationPtrOutput {
	return i.ToCustomDomainVerificationPtrOutputWithContext(context.Background())
}

func (i *customDomainVerificationPtrType) ToCustomDomainVerificationPtrOutputWithContext(ctx context.Context) CustomDomainVerificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainVerificationPtrOutput)
}

type CustomDomainVerificationOutput struct{ *pulumi.OutputState }

func (CustomDomainVerificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainVerification)(nil)).Elem()
}

func (o CustomDomainVerificationOutput) ToCustomDomainVerificationOutput() CustomDomainVerificationOutput {
	return o
}

func (o CustomDomainVerificationOutput) ToCustomDomainVerificationOutputWithContext(ctx context.Context) CustomDomainVerificationOutput {
	return o
}

func (o CustomDomainVerificationOutput) ToCustomDomainVerificationPtrOutput() CustomDomainVerificationPtrOutput {
	return o.ToCustomDomainVerificationPtrOutputWithContext(context.Background())
}

func (o CustomDomainVerificationOutput) ToCustomDomainVerificationPtrOutputWithContext(ctx context.Context) CustomDomainVerificationPtrOutput {
	return o.ApplyT(func(v CustomDomainVerification) *CustomDomainVerification {
		return &v
	}).(CustomDomainVerificationPtrOutput)
}

// List(Map). Verification methods for the domain.
func (o CustomDomainVerificationOutput) Methods() pulumi.ArrayOutput {
	return o.ApplyT(func(v CustomDomainVerification) []interface{} { return v.Methods }).(pulumi.ArrayOutput)
}

type CustomDomainVerificationPtrOutput struct{ *pulumi.OutputState }

func (CustomDomainVerificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainVerification)(nil)).Elem()
}

func (o CustomDomainVerificationPtrOutput) ToCustomDomainVerificationPtrOutput() CustomDomainVerificationPtrOutput {
	return o
}

func (o CustomDomainVerificationPtrOutput) ToCustomDomainVerificationPtrOutputWithContext(ctx context.Context) CustomDomainVerificationPtrOutput {
	return o
}

func (o CustomDomainVerificationPtrOutput) Elem() CustomDomainVerificationOutput {
	return o.ApplyT(func(v *CustomDomainVerification) CustomDomainVerification { return *v }).(CustomDomainVerificationOutput)
}

// List(Map). Verification methods for the domain.
func (o CustomDomainVerificationPtrOutput) Methods() pulumi.ArrayOutput {
	return o.ApplyT(func(v *CustomDomainVerification) []interface{} {
		if v == nil {
			return nil
		}
		return v.Methods
	}).(pulumi.ArrayOutput)
}

type EmailCredentials struct {
	// String, Case-sensitive. AWS Access Key ID. Used only for AWS.
	AccessKeyId *string `pulumi:"accessKeyId"`
	// String, Case-sensitive. API Key for your email service. Will always be encrypted in our database.
	ApiKey *string `pulumi:"apiKey"`
	// String. API User for your email service.
	ApiUser *string `pulumi:"apiUser"`
	Domain  *string `pulumi:"domain"`
	// String. Default region. Used only for AWS, Mailgun, and SparkPost.
	Region *string `pulumi:"region"`
	// String, Case-sensitive. AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	SecretAccessKey *string `pulumi:"secretAccessKey"`
	// String. Hostname or IP address of your SMTP server. Used only for SMTP.
	SmtpHost *string `pulumi:"smtpHost"`
	// String, Case-sensitive. SMTP password. Used only for SMTP.
	SmtpPass *string `pulumi:"smtpPass"`
	// Integer. Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	SmtpPort *int `pulumi:"smtpPort"`
	// String. SMTP username. Used only for SMTP.
	SmtpUser *string `pulumi:"smtpUser"`
}

// EmailCredentialsInput is an input type that accepts EmailCredentialsArgs and EmailCredentialsOutput values.
// You can construct a concrete instance of `EmailCredentialsInput` via:
//
//          EmailCredentialsArgs{...}
type EmailCredentialsInput interface {
	pulumi.Input

	ToEmailCredentialsOutput() EmailCredentialsOutput
	ToEmailCredentialsOutputWithContext(context.Context) EmailCredentialsOutput
}

type EmailCredentialsArgs struct {
	// String, Case-sensitive. AWS Access Key ID. Used only for AWS.
	AccessKeyId pulumi.StringPtrInput `pulumi:"accessKeyId"`
	// String, Case-sensitive. API Key for your email service. Will always be encrypted in our database.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// String. API User for your email service.
	ApiUser pulumi.StringPtrInput `pulumi:"apiUser"`
	Domain  pulumi.StringPtrInput `pulumi:"domain"`
	// String. Default region. Used only for AWS, Mailgun, and SparkPost.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// String, Case-sensitive. AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
	// String. Hostname or IP address of your SMTP server. Used only for SMTP.
	SmtpHost pulumi.StringPtrInput `pulumi:"smtpHost"`
	// String, Case-sensitive. SMTP password. Used only for SMTP.
	SmtpPass pulumi.StringPtrInput `pulumi:"smtpPass"`
	// Integer. Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	SmtpPort pulumi.IntPtrInput `pulumi:"smtpPort"`
	// String. SMTP username. Used only for SMTP.
	SmtpUser pulumi.StringPtrInput `pulumi:"smtpUser"`
}

func (EmailCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailCredentials)(nil)).Elem()
}

func (i EmailCredentialsArgs) ToEmailCredentialsOutput() EmailCredentialsOutput {
	return i.ToEmailCredentialsOutputWithContext(context.Background())
}

func (i EmailCredentialsArgs) ToEmailCredentialsOutputWithContext(ctx context.Context) EmailCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailCredentialsOutput)
}

func (i EmailCredentialsArgs) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return i.ToEmailCredentialsPtrOutputWithContext(context.Background())
}

func (i EmailCredentialsArgs) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailCredentialsOutput).ToEmailCredentialsPtrOutputWithContext(ctx)
}

// EmailCredentialsPtrInput is an input type that accepts EmailCredentialsArgs, EmailCredentialsPtr and EmailCredentialsPtrOutput values.
// You can construct a concrete instance of `EmailCredentialsPtrInput` via:
//
//          EmailCredentialsArgs{...}
//
//  or:
//
//          nil
type EmailCredentialsPtrInput interface {
	pulumi.Input

	ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput
	ToEmailCredentialsPtrOutputWithContext(context.Context) EmailCredentialsPtrOutput
}

type emailCredentialsPtrType EmailCredentialsArgs

func EmailCredentialsPtr(v *EmailCredentialsArgs) EmailCredentialsPtrInput {
	return (*emailCredentialsPtrType)(v)
}

func (*emailCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailCredentials)(nil)).Elem()
}

func (i *emailCredentialsPtrType) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return i.ToEmailCredentialsPtrOutputWithContext(context.Background())
}

func (i *emailCredentialsPtrType) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailCredentialsPtrOutput)
}

type EmailCredentialsOutput struct{ *pulumi.OutputState }

func (EmailCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailCredentials)(nil)).Elem()
}

func (o EmailCredentialsOutput) ToEmailCredentialsOutput() EmailCredentialsOutput {
	return o
}

func (o EmailCredentialsOutput) ToEmailCredentialsOutputWithContext(ctx context.Context) EmailCredentialsOutput {
	return o
}

func (o EmailCredentialsOutput) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return o.ToEmailCredentialsPtrOutputWithContext(context.Background())
}

func (o EmailCredentialsOutput) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *EmailCredentials {
		return &v
	}).(EmailCredentialsPtrOutput)
}

// String, Case-sensitive. AWS Access Key ID. Used only for AWS.
func (o EmailCredentialsOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. API Key for your email service. Will always be encrypted in our database.
func (o EmailCredentialsOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// String. API User for your email service.
func (o EmailCredentialsOutput) ApiUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.ApiUser }).(pulumi.StringPtrOutput)
}

func (o EmailCredentialsOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// String. Default region. Used only for AWS, Mailgun, and SparkPost.
func (o EmailCredentialsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
func (o EmailCredentialsOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

// String. Hostname or IP address of your SMTP server. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SmtpHost }).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. SMTP password. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SmtpPass }).(pulumi.StringPtrOutput)
}

// Integer. Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *int { return v.SmtpPort }).(pulumi.IntPtrOutput)
}

// String. SMTP username. Used only for SMTP.
func (o EmailCredentialsOutput) SmtpUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailCredentials) *string { return v.SmtpUser }).(pulumi.StringPtrOutput)
}

type EmailCredentialsPtrOutput struct{ *pulumi.OutputState }

func (EmailCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailCredentials)(nil)).Elem()
}

func (o EmailCredentialsPtrOutput) ToEmailCredentialsPtrOutput() EmailCredentialsPtrOutput {
	return o
}

func (o EmailCredentialsPtrOutput) ToEmailCredentialsPtrOutputWithContext(ctx context.Context) EmailCredentialsPtrOutput {
	return o
}

func (o EmailCredentialsPtrOutput) Elem() EmailCredentialsOutput {
	return o.ApplyT(func(v *EmailCredentials) EmailCredentials { return *v }).(EmailCredentialsOutput)
}

// String, Case-sensitive. AWS Access Key ID. Used only for AWS.
func (o EmailCredentialsPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. API Key for your email service. Will always be encrypted in our database.
func (o EmailCredentialsPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// String. API User for your email service.
func (o EmailCredentialsPtrOutput) ApiUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ApiUser
	}).(pulumi.StringPtrOutput)
}

func (o EmailCredentialsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// String. Default region. Used only for AWS, Mailgun, and SparkPost.
func (o EmailCredentialsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
func (o EmailCredentialsPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// String. Hostname or IP address of your SMTP server. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpHost
	}).(pulumi.StringPtrOutput)
}

// String, Case-sensitive. SMTP password. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpPass
	}).(pulumi.StringPtrOutput)
}

// Integer. Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *int {
		if v == nil {
			return nil
		}
		return v.SmtpPort
	}).(pulumi.IntPtrOutput)
}

// String. SMTP username. Used only for SMTP.
func (o EmailCredentialsPtrOutput) SmtpUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpUser
	}).(pulumi.StringPtrOutput)
}

type GlobalClientAddons struct {
	Aws                  map[string]interface{}   `pulumi:"aws"`
	AzureBlob            map[string]interface{}   `pulumi:"azureBlob"`
	AzureSb              map[string]interface{}   `pulumi:"azureSb"`
	Box                  map[string]interface{}   `pulumi:"box"`
	Cloudbees            map[string]interface{}   `pulumi:"cloudbees"`
	Concur               map[string]interface{}   `pulumi:"concur"`
	Dropbox              map[string]interface{}   `pulumi:"dropbox"`
	Echosign             map[string]interface{}   `pulumi:"echosign"`
	Egnyte               map[string]interface{}   `pulumi:"egnyte"`
	Firebase             map[string]interface{}   `pulumi:"firebase"`
	Layer                map[string]interface{}   `pulumi:"layer"`
	Mscrm                map[string]interface{}   `pulumi:"mscrm"`
	Newrelic             map[string]interface{}   `pulumi:"newrelic"`
	Office365            map[string]interface{}   `pulumi:"office365"`
	Rms                  map[string]interface{}   `pulumi:"rms"`
	Salesforce           map[string]interface{}   `pulumi:"salesforce"`
	SalesforceApi        map[string]interface{}   `pulumi:"salesforceApi"`
	SalesforceSandboxApi map[string]interface{}   `pulumi:"salesforceSandboxApi"`
	Samlp                *GlobalClientAddonsSamlp `pulumi:"samlp"`
	SapApi               map[string]interface{}   `pulumi:"sapApi"`
	Sentry               map[string]interface{}   `pulumi:"sentry"`
	Sharepoint           map[string]interface{}   `pulumi:"sharepoint"`
	Slack                map[string]interface{}   `pulumi:"slack"`
	Springcm             map[string]interface{}   `pulumi:"springcm"`
	Wams                 map[string]interface{}   `pulumi:"wams"`
	Wsfed                map[string]interface{}   `pulumi:"wsfed"`
	Zendesk              map[string]interface{}   `pulumi:"zendesk"`
	Zoom                 map[string]interface{}   `pulumi:"zoom"`
}

// GlobalClientAddonsInput is an input type that accepts GlobalClientAddonsArgs and GlobalClientAddonsOutput values.
// You can construct a concrete instance of `GlobalClientAddonsInput` via:
//
//          GlobalClientAddonsArgs{...}
type GlobalClientAddonsInput interface {
	pulumi.Input

	ToGlobalClientAddonsOutput() GlobalClientAddonsOutput
	ToGlobalClientAddonsOutputWithContext(context.Context) GlobalClientAddonsOutput
}

type GlobalClientAddonsArgs struct {
	Aws                  pulumi.MapInput                 `pulumi:"aws"`
	AzureBlob            pulumi.MapInput                 `pulumi:"azureBlob"`
	AzureSb              pulumi.MapInput                 `pulumi:"azureSb"`
	Box                  pulumi.MapInput                 `pulumi:"box"`
	Cloudbees            pulumi.MapInput                 `pulumi:"cloudbees"`
	Concur               pulumi.MapInput                 `pulumi:"concur"`
	Dropbox              pulumi.MapInput                 `pulumi:"dropbox"`
	Echosign             pulumi.MapInput                 `pulumi:"echosign"`
	Egnyte               pulumi.MapInput                 `pulumi:"egnyte"`
	Firebase             pulumi.MapInput                 `pulumi:"firebase"`
	Layer                pulumi.MapInput                 `pulumi:"layer"`
	Mscrm                pulumi.MapInput                 `pulumi:"mscrm"`
	Newrelic             pulumi.MapInput                 `pulumi:"newrelic"`
	Office365            pulumi.MapInput                 `pulumi:"office365"`
	Rms                  pulumi.MapInput                 `pulumi:"rms"`
	Salesforce           pulumi.MapInput                 `pulumi:"salesforce"`
	SalesforceApi        pulumi.MapInput                 `pulumi:"salesforceApi"`
	SalesforceSandboxApi pulumi.MapInput                 `pulumi:"salesforceSandboxApi"`
	Samlp                GlobalClientAddonsSamlpPtrInput `pulumi:"samlp"`
	SapApi               pulumi.MapInput                 `pulumi:"sapApi"`
	Sentry               pulumi.MapInput                 `pulumi:"sentry"`
	Sharepoint           pulumi.MapInput                 `pulumi:"sharepoint"`
	Slack                pulumi.MapInput                 `pulumi:"slack"`
	Springcm             pulumi.MapInput                 `pulumi:"springcm"`
	Wams                 pulumi.MapInput                 `pulumi:"wams"`
	Wsfed                pulumi.MapInput                 `pulumi:"wsfed"`
	Zendesk              pulumi.MapInput                 `pulumi:"zendesk"`
	Zoom                 pulumi.MapInput                 `pulumi:"zoom"`
}

func (GlobalClientAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddons)(nil)).Elem()
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsOutput() GlobalClientAddonsOutput {
	return i.ToGlobalClientAddonsOutputWithContext(context.Background())
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsOutputWithContext(ctx context.Context) GlobalClientAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsOutput)
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return i.ToGlobalClientAddonsPtrOutputWithContext(context.Background())
}

func (i GlobalClientAddonsArgs) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsOutput).ToGlobalClientAddonsPtrOutputWithContext(ctx)
}

// GlobalClientAddonsPtrInput is an input type that accepts GlobalClientAddonsArgs, GlobalClientAddonsPtr and GlobalClientAddonsPtrOutput values.
// You can construct a concrete instance of `GlobalClientAddonsPtrInput` via:
//
//          GlobalClientAddonsArgs{...}
//
//  or:
//
//          nil
type GlobalClientAddonsPtrInput interface {
	pulumi.Input

	ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput
	ToGlobalClientAddonsPtrOutputWithContext(context.Context) GlobalClientAddonsPtrOutput
}

type globalClientAddonsPtrType GlobalClientAddonsArgs

func GlobalClientAddonsPtr(v *GlobalClientAddonsArgs) GlobalClientAddonsPtrInput {
	return (*globalClientAddonsPtrType)(v)
}

func (*globalClientAddonsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddons)(nil)).Elem()
}

func (i *globalClientAddonsPtrType) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return i.ToGlobalClientAddonsPtrOutputWithContext(context.Background())
}

func (i *globalClientAddonsPtrType) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsPtrOutput)
}

type GlobalClientAddonsOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddons)(nil)).Elem()
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsOutput() GlobalClientAddonsOutput {
	return o
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsOutputWithContext(ctx context.Context) GlobalClientAddonsOutput {
	return o
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return o.ToGlobalClientAddonsPtrOutputWithContext(context.Background())
}

func (o GlobalClientAddonsOutput) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return o.ApplyT(func(v GlobalClientAddons) *GlobalClientAddons {
		return &v
	}).(GlobalClientAddonsPtrOutput)
}
func (o GlobalClientAddonsOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Aws }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.AzureBlob }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.AzureSb }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Box }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Cloudbees }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Concur }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Dropbox }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Echosign }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Egnyte }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Firebase }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Layer }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Mscrm }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Newrelic }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Office365 }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Rms }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Salesforce }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.SalesforceApi }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.SalesforceSandboxApi }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Samlp() GlobalClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v GlobalClientAddons) *GlobalClientAddonsSamlp { return v.Samlp }).(GlobalClientAddonsSamlpPtrOutput)
}

func (o GlobalClientAddonsOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.SapApi }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Sentry }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Sharepoint }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Slack }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Springcm }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Wams }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Wsfed }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Zendesk }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddons) map[string]interface{} { return v.Zoom }).(pulumi.MapOutput)
}

type GlobalClientAddonsPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddons)(nil)).Elem()
}

func (o GlobalClientAddonsPtrOutput) ToGlobalClientAddonsPtrOutput() GlobalClientAddonsPtrOutput {
	return o
}

func (o GlobalClientAddonsPtrOutput) ToGlobalClientAddonsPtrOutputWithContext(ctx context.Context) GlobalClientAddonsPtrOutput {
	return o
}

func (o GlobalClientAddonsPtrOutput) Elem() GlobalClientAddonsOutput {
	return o.ApplyT(func(v *GlobalClientAddons) GlobalClientAddons { return *v }).(GlobalClientAddonsOutput)
}

func (o GlobalClientAddonsPtrOutput) Aws() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) AzureBlob() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureBlob
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) AzureSb() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.AzureSb
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Box() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Box
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Cloudbees() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Cloudbees
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Concur() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Concur
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Dropbox() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Dropbox
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Echosign() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Echosign
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Egnyte() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Egnyte
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Firebase() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Firebase
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Layer() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Layer
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Mscrm() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mscrm
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Newrelic() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Newrelic
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Office365() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Office365
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Rms() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Rms
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Salesforce() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) SalesforceApi() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceApi
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) SalesforceSandboxApi() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SalesforceSandboxApi
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Samlp() GlobalClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddons) *GlobalClientAddonsSamlp {
		if v == nil {
			return nil
		}
		return v.Samlp
	}).(GlobalClientAddonsSamlpPtrOutput)
}

func (o GlobalClientAddonsPtrOutput) SapApi() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.SapApi
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Sentry() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sentry
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Sharepoint() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Sharepoint
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Slack() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Springcm() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Springcm
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Wams() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wams
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Wsfed() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Wsfed
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Zendesk() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsPtrOutput) Zoom() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddons) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Zoom
	}).(pulumi.MapOutput)
}

type GlobalClientAddonsSamlp struct {
	Audience                       *string                        `pulumi:"audience"`
	AuthnContextClassRef           *string                        `pulumi:"authnContextClassRef"`
	Binding                        *string                        `pulumi:"binding"`
	CreateUpnClaim                 *bool                          `pulumi:"createUpnClaim"`
	Destination                    *string                        `pulumi:"destination"`
	DigestAlgorithm                *string                        `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     *bool                          `pulumi:"includeAttributeNameFormat"`
	LifetimeInSeconds              *int                           `pulumi:"lifetimeInSeconds"`
	Logout                         *GlobalClientAddonsSamlpLogout `pulumi:"logout"`
	MapIdentities                  *bool                          `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           *bool                          `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       map[string]interface{}         `pulumi:"mappings"`
	NameIdentifierFormat           *string                        `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           []string                       `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping *bool                          `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      *string                        `pulumi:"recipient"`
	SignResponse                   *bool                          `pulumi:"signResponse"`
	SignatureAlgorithm             *string                        `pulumi:"signatureAlgorithm"`
	TypedAttributes                *bool                          `pulumi:"typedAttributes"`
}

// GlobalClientAddonsSamlpInput is an input type that accepts GlobalClientAddonsSamlpArgs and GlobalClientAddonsSamlpOutput values.
// You can construct a concrete instance of `GlobalClientAddonsSamlpInput` via:
//
//          GlobalClientAddonsSamlpArgs{...}
type GlobalClientAddonsSamlpInput interface {
	pulumi.Input

	ToGlobalClientAddonsSamlpOutput() GlobalClientAddonsSamlpOutput
	ToGlobalClientAddonsSamlpOutputWithContext(context.Context) GlobalClientAddonsSamlpOutput
}

type GlobalClientAddonsSamlpArgs struct {
	Audience                       pulumi.StringPtrInput                 `pulumi:"audience"`
	AuthnContextClassRef           pulumi.StringPtrInput                 `pulumi:"authnContextClassRef"`
	Binding                        pulumi.StringPtrInput                 `pulumi:"binding"`
	CreateUpnClaim                 pulumi.BoolPtrInput                   `pulumi:"createUpnClaim"`
	Destination                    pulumi.StringPtrInput                 `pulumi:"destination"`
	DigestAlgorithm                pulumi.StringPtrInput                 `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     pulumi.BoolPtrInput                   `pulumi:"includeAttributeNameFormat"`
	LifetimeInSeconds              pulumi.IntPtrInput                    `pulumi:"lifetimeInSeconds"`
	Logout                         GlobalClientAddonsSamlpLogoutPtrInput `pulumi:"logout"`
	MapIdentities                  pulumi.BoolPtrInput                   `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           pulumi.BoolPtrInput                   `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       pulumi.MapInput                       `pulumi:"mappings"`
	NameIdentifierFormat           pulumi.StringPtrInput                 `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           pulumi.StringArrayInput               `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping pulumi.BoolPtrInput                   `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      pulumi.StringPtrInput                 `pulumi:"recipient"`
	SignResponse                   pulumi.BoolPtrInput                   `pulumi:"signResponse"`
	SignatureAlgorithm             pulumi.StringPtrInput                 `pulumi:"signatureAlgorithm"`
	TypedAttributes                pulumi.BoolPtrInput                   `pulumi:"typedAttributes"`
}

func (GlobalClientAddonsSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddonsSamlp)(nil)).Elem()
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpOutput() GlobalClientAddonsSamlpOutput {
	return i.ToGlobalClientAddonsSamlpOutputWithContext(context.Background())
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpOutput)
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return i.ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i GlobalClientAddonsSamlpArgs) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpOutput).ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx)
}

// GlobalClientAddonsSamlpPtrInput is an input type that accepts GlobalClientAddonsSamlpArgs, GlobalClientAddonsSamlpPtr and GlobalClientAddonsSamlpPtrOutput values.
// You can construct a concrete instance of `GlobalClientAddonsSamlpPtrInput` via:
//
//          GlobalClientAddonsSamlpArgs{...}
//
//  or:
//
//          nil
type GlobalClientAddonsSamlpPtrInput interface {
	pulumi.Input

	ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput
	ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Context) GlobalClientAddonsSamlpPtrOutput
}

type globalClientAddonsSamlpPtrType GlobalClientAddonsSamlpArgs

func GlobalClientAddonsSamlpPtr(v *GlobalClientAddonsSamlpArgs) GlobalClientAddonsSamlpPtrInput {
	return (*globalClientAddonsSamlpPtrType)(v)
}

func (*globalClientAddonsSamlpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddonsSamlp)(nil)).Elem()
}

func (i *globalClientAddonsSamlpPtrType) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return i.ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i *globalClientAddonsSamlpPtrType) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpPtrOutput)
}

type GlobalClientAddonsSamlpOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddonsSamlp)(nil)).Elem()
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpOutput() GlobalClientAddonsSamlpOutput {
	return o
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpOutput {
	return o
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return o.ToGlobalClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (o GlobalClientAddonsSamlpOutput) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *GlobalClientAddonsSamlp {
		return &v
	}).(GlobalClientAddonsSamlpPtrOutput)
}
func (o GlobalClientAddonsSamlpOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.AuthnContextClassRef }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Binding }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.CreateUpnClaim }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Logout() GlobalClientAddonsSamlpLogoutPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *GlobalClientAddonsSamlpLogout { return v.Logout }).(GlobalClientAddonsSamlpLogoutPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.MapIdentities }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

func (o GlobalClientAddonsSamlpOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.NameIdentifierFormat }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

func (o GlobalClientAddonsSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.Recipient }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.SignResponse }).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlp) *bool { return v.TypedAttributes }).(pulumi.BoolPtrOutput)
}

type GlobalClientAddonsSamlpPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsSamlpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddonsSamlp)(nil)).Elem()
}

func (o GlobalClientAddonsSamlpPtrOutput) ToGlobalClientAddonsSamlpPtrOutput() GlobalClientAddonsSamlpPtrOutput {
	return o
}

func (o GlobalClientAddonsSamlpPtrOutput) ToGlobalClientAddonsSamlpPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpPtrOutput {
	return o
}

func (o GlobalClientAddonsSamlpPtrOutput) Elem() GlobalClientAddonsSamlpOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) GlobalClientAddonsSamlp { return *v }).(GlobalClientAddonsSamlpOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.AuthnContextClassRef
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Binding
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.CreateUpnClaim
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.DigestAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAttributeNameFormat
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Logout() GlobalClientAddonsSamlpLogoutPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *GlobalClientAddonsSamlpLogout {
		if v == nil {
			return nil
		}
		return v.Logout
	}).(GlobalClientAddonsSamlpLogoutPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapIdentities
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapUnknownClaimsAsIs
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(pulumi.MapOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierFormat
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) []string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierProbes
	}).(pulumi.StringArrayOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.PassthroughClaimsWithNoMapping
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Recipient
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.SignResponse
	}).(pulumi.BoolPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpPtrOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.TypedAttributes
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientAddonsSamlpLogout struct {
	Callback   *string `pulumi:"callback"`
	SloEnabled *bool   `pulumi:"sloEnabled"`
}

// GlobalClientAddonsSamlpLogoutInput is an input type that accepts GlobalClientAddonsSamlpLogoutArgs and GlobalClientAddonsSamlpLogoutOutput values.
// You can construct a concrete instance of `GlobalClientAddonsSamlpLogoutInput` via:
//
//          GlobalClientAddonsSamlpLogoutArgs{...}
type GlobalClientAddonsSamlpLogoutInput interface {
	pulumi.Input

	ToGlobalClientAddonsSamlpLogoutOutput() GlobalClientAddonsSamlpLogoutOutput
	ToGlobalClientAddonsSamlpLogoutOutputWithContext(context.Context) GlobalClientAddonsSamlpLogoutOutput
}

type GlobalClientAddonsSamlpLogoutArgs struct {
	Callback   pulumi.StringPtrInput `pulumi:"callback"`
	SloEnabled pulumi.BoolPtrInput   `pulumi:"sloEnabled"`
}

func (GlobalClientAddonsSamlpLogoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddonsSamlpLogout)(nil)).Elem()
}

func (i GlobalClientAddonsSamlpLogoutArgs) ToGlobalClientAddonsSamlpLogoutOutput() GlobalClientAddonsSamlpLogoutOutput {
	return i.ToGlobalClientAddonsSamlpLogoutOutputWithContext(context.Background())
}

func (i GlobalClientAddonsSamlpLogoutArgs) ToGlobalClientAddonsSamlpLogoutOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpLogoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpLogoutOutput)
}

func (i GlobalClientAddonsSamlpLogoutArgs) ToGlobalClientAddonsSamlpLogoutPtrOutput() GlobalClientAddonsSamlpLogoutPtrOutput {
	return i.ToGlobalClientAddonsSamlpLogoutPtrOutputWithContext(context.Background())
}

func (i GlobalClientAddonsSamlpLogoutArgs) ToGlobalClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpLogoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpLogoutOutput).ToGlobalClientAddonsSamlpLogoutPtrOutputWithContext(ctx)
}

// GlobalClientAddonsSamlpLogoutPtrInput is an input type that accepts GlobalClientAddonsSamlpLogoutArgs, GlobalClientAddonsSamlpLogoutPtr and GlobalClientAddonsSamlpLogoutPtrOutput values.
// You can construct a concrete instance of `GlobalClientAddonsSamlpLogoutPtrInput` via:
//
//          GlobalClientAddonsSamlpLogoutArgs{...}
//
//  or:
//
//          nil
type GlobalClientAddonsSamlpLogoutPtrInput interface {
	pulumi.Input

	ToGlobalClientAddonsSamlpLogoutPtrOutput() GlobalClientAddonsSamlpLogoutPtrOutput
	ToGlobalClientAddonsSamlpLogoutPtrOutputWithContext(context.Context) GlobalClientAddonsSamlpLogoutPtrOutput
}

type globalClientAddonsSamlpLogoutPtrType GlobalClientAddonsSamlpLogoutArgs

func GlobalClientAddonsSamlpLogoutPtr(v *GlobalClientAddonsSamlpLogoutArgs) GlobalClientAddonsSamlpLogoutPtrInput {
	return (*globalClientAddonsSamlpLogoutPtrType)(v)
}

func (*globalClientAddonsSamlpLogoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddonsSamlpLogout)(nil)).Elem()
}

func (i *globalClientAddonsSamlpLogoutPtrType) ToGlobalClientAddonsSamlpLogoutPtrOutput() GlobalClientAddonsSamlpLogoutPtrOutput {
	return i.ToGlobalClientAddonsSamlpLogoutPtrOutputWithContext(context.Background())
}

func (i *globalClientAddonsSamlpLogoutPtrType) ToGlobalClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpLogoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientAddonsSamlpLogoutPtrOutput)
}

type GlobalClientAddonsSamlpLogoutOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsSamlpLogoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientAddonsSamlpLogout)(nil)).Elem()
}

func (o GlobalClientAddonsSamlpLogoutOutput) ToGlobalClientAddonsSamlpLogoutOutput() GlobalClientAddonsSamlpLogoutOutput {
	return o
}

func (o GlobalClientAddonsSamlpLogoutOutput) ToGlobalClientAddonsSamlpLogoutOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpLogoutOutput {
	return o
}

func (o GlobalClientAddonsSamlpLogoutOutput) ToGlobalClientAddonsSamlpLogoutPtrOutput() GlobalClientAddonsSamlpLogoutPtrOutput {
	return o.ToGlobalClientAddonsSamlpLogoutPtrOutputWithContext(context.Background())
}

func (o GlobalClientAddonsSamlpLogoutOutput) ToGlobalClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpLogoutPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlpLogout) *GlobalClientAddonsSamlpLogout {
		return &v
	}).(GlobalClientAddonsSamlpLogoutPtrOutput)
}
func (o GlobalClientAddonsSamlpLogoutOutput) Callback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlpLogout) *string { return v.Callback }).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpLogoutOutput) SloEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientAddonsSamlpLogout) *bool { return v.SloEnabled }).(pulumi.BoolPtrOutput)
}

type GlobalClientAddonsSamlpLogoutPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientAddonsSamlpLogoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientAddonsSamlpLogout)(nil)).Elem()
}

func (o GlobalClientAddonsSamlpLogoutPtrOutput) ToGlobalClientAddonsSamlpLogoutPtrOutput() GlobalClientAddonsSamlpLogoutPtrOutput {
	return o
}

func (o GlobalClientAddonsSamlpLogoutPtrOutput) ToGlobalClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) GlobalClientAddonsSamlpLogoutPtrOutput {
	return o
}

func (o GlobalClientAddonsSamlpLogoutPtrOutput) Elem() GlobalClientAddonsSamlpLogoutOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlpLogout) GlobalClientAddonsSamlpLogout { return *v }).(GlobalClientAddonsSamlpLogoutOutput)
}

func (o GlobalClientAddonsSamlpLogoutPtrOutput) Callback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlpLogout) *string {
		if v == nil {
			return nil
		}
		return v.Callback
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientAddonsSamlpLogoutPtrOutput) SloEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientAddonsSamlpLogout) *bool {
		if v == nil {
			return nil
		}
		return v.SloEnabled
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientJwtConfiguration struct {
	Alg               *string           `pulumi:"alg"`
	LifetimeInSeconds *int              `pulumi:"lifetimeInSeconds"`
	Scopes            map[string]string `pulumi:"scopes"`
	SecretEncoded     *bool             `pulumi:"secretEncoded"`
}

// GlobalClientJwtConfigurationInput is an input type that accepts GlobalClientJwtConfigurationArgs and GlobalClientJwtConfigurationOutput values.
// You can construct a concrete instance of `GlobalClientJwtConfigurationInput` via:
//
//          GlobalClientJwtConfigurationArgs{...}
type GlobalClientJwtConfigurationInput interface {
	pulumi.Input

	ToGlobalClientJwtConfigurationOutput() GlobalClientJwtConfigurationOutput
	ToGlobalClientJwtConfigurationOutputWithContext(context.Context) GlobalClientJwtConfigurationOutput
}

type GlobalClientJwtConfigurationArgs struct {
	Alg               pulumi.StringPtrInput `pulumi:"alg"`
	LifetimeInSeconds pulumi.IntPtrInput    `pulumi:"lifetimeInSeconds"`
	Scopes            pulumi.StringMapInput `pulumi:"scopes"`
	SecretEncoded     pulumi.BoolPtrInput   `pulumi:"secretEncoded"`
}

func (GlobalClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientJwtConfiguration)(nil)).Elem()
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationOutput() GlobalClientJwtConfigurationOutput {
	return i.ToGlobalClientJwtConfigurationOutputWithContext(context.Background())
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientJwtConfigurationOutput)
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return i.ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i GlobalClientJwtConfigurationArgs) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientJwtConfigurationOutput).ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx)
}

// GlobalClientJwtConfigurationPtrInput is an input type that accepts GlobalClientJwtConfigurationArgs, GlobalClientJwtConfigurationPtr and GlobalClientJwtConfigurationPtrOutput values.
// You can construct a concrete instance of `GlobalClientJwtConfigurationPtrInput` via:
//
//          GlobalClientJwtConfigurationArgs{...}
//
//  or:
//
//          nil
type GlobalClientJwtConfigurationPtrInput interface {
	pulumi.Input

	ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput
	ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Context) GlobalClientJwtConfigurationPtrOutput
}

type globalClientJwtConfigurationPtrType GlobalClientJwtConfigurationArgs

func GlobalClientJwtConfigurationPtr(v *GlobalClientJwtConfigurationArgs) GlobalClientJwtConfigurationPtrInput {
	return (*globalClientJwtConfigurationPtrType)(v)
}

func (*globalClientJwtConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientJwtConfiguration)(nil)).Elem()
}

func (i *globalClientJwtConfigurationPtrType) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return i.ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i *globalClientJwtConfigurationPtrType) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientJwtConfigurationPtrOutput)
}

type GlobalClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (GlobalClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientJwtConfiguration)(nil)).Elem()
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationOutput() GlobalClientJwtConfigurationOutput {
	return o
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationOutput {
	return o
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return o.ToGlobalClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (o GlobalClientJwtConfigurationOutput) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) *GlobalClientJwtConfiguration {
		return &v
	}).(GlobalClientJwtConfigurationPtrOutput)
}
func (o GlobalClientJwtConfigurationOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) *string { return v.Alg }).(pulumi.StringPtrOutput)
}

func (o GlobalClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

func (o GlobalClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

func (o GlobalClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClientJwtConfiguration) *bool { return v.SecretEncoded }).(pulumi.BoolPtrOutput)
}

type GlobalClientJwtConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientJwtConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientJwtConfiguration)(nil)).Elem()
}

func (o GlobalClientJwtConfigurationPtrOutput) ToGlobalClientJwtConfigurationPtrOutput() GlobalClientJwtConfigurationPtrOutput {
	return o
}

func (o GlobalClientJwtConfigurationPtrOutput) ToGlobalClientJwtConfigurationPtrOutputWithContext(ctx context.Context) GlobalClientJwtConfigurationPtrOutput {
	return o
}

func (o GlobalClientJwtConfigurationPtrOutput) Elem() GlobalClientJwtConfigurationOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) GlobalClientJwtConfiguration { return *v }).(GlobalClientJwtConfigurationOutput)
}

func (o GlobalClientJwtConfigurationPtrOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Alg
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientJwtConfigurationPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o GlobalClientJwtConfigurationPtrOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringMapOutput)
}

func (o GlobalClientJwtConfigurationPtrOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GlobalClientJwtConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.SecretEncoded
	}).(pulumi.BoolPtrOutput)
}

type GlobalClientMobile struct {
	Android *GlobalClientMobileAndroid `pulumi:"android"`
	Ios     *GlobalClientMobileIos     `pulumi:"ios"`
}

// GlobalClientMobileInput is an input type that accepts GlobalClientMobileArgs and GlobalClientMobileOutput values.
// You can construct a concrete instance of `GlobalClientMobileInput` via:
//
//          GlobalClientMobileArgs{...}
type GlobalClientMobileInput interface {
	pulumi.Input

	ToGlobalClientMobileOutput() GlobalClientMobileOutput
	ToGlobalClientMobileOutputWithContext(context.Context) GlobalClientMobileOutput
}

type GlobalClientMobileArgs struct {
	Android GlobalClientMobileAndroidPtrInput `pulumi:"android"`
	Ios     GlobalClientMobileIosPtrInput     `pulumi:"ios"`
}

func (GlobalClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobile)(nil)).Elem()
}

func (i GlobalClientMobileArgs) ToGlobalClientMobileOutput() GlobalClientMobileOutput {
	return i.ToGlobalClientMobileOutputWithContext(context.Background())
}

func (i GlobalClientMobileArgs) ToGlobalClientMobileOutputWithContext(ctx context.Context) GlobalClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileOutput)
}

func (i GlobalClientMobileArgs) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return i.ToGlobalClientMobilePtrOutputWithContext(context.Background())
}

func (i GlobalClientMobileArgs) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileOutput).ToGlobalClientMobilePtrOutputWithContext(ctx)
}

// GlobalClientMobilePtrInput is an input type that accepts GlobalClientMobileArgs, GlobalClientMobilePtr and GlobalClientMobilePtrOutput values.
// You can construct a concrete instance of `GlobalClientMobilePtrInput` via:
//
//          GlobalClientMobileArgs{...}
//
//  or:
//
//          nil
type GlobalClientMobilePtrInput interface {
	pulumi.Input

	ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput
	ToGlobalClientMobilePtrOutputWithContext(context.Context) GlobalClientMobilePtrOutput
}

type globalClientMobilePtrType GlobalClientMobileArgs

func GlobalClientMobilePtr(v *GlobalClientMobileArgs) GlobalClientMobilePtrInput {
	return (*globalClientMobilePtrType)(v)
}

func (*globalClientMobilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobile)(nil)).Elem()
}

func (i *globalClientMobilePtrType) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return i.ToGlobalClientMobilePtrOutputWithContext(context.Background())
}

func (i *globalClientMobilePtrType) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobilePtrOutput)
}

type GlobalClientMobileOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobile)(nil)).Elem()
}

func (o GlobalClientMobileOutput) ToGlobalClientMobileOutput() GlobalClientMobileOutput {
	return o
}

func (o GlobalClientMobileOutput) ToGlobalClientMobileOutputWithContext(ctx context.Context) GlobalClientMobileOutput {
	return o
}

func (o GlobalClientMobileOutput) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return o.ToGlobalClientMobilePtrOutputWithContext(context.Background())
}

func (o GlobalClientMobileOutput) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return o.ApplyT(func(v GlobalClientMobile) *GlobalClientMobile {
		return &v
	}).(GlobalClientMobilePtrOutput)
}
func (o GlobalClientMobileOutput) Android() GlobalClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v GlobalClientMobile) *GlobalClientMobileAndroid { return v.Android }).(GlobalClientMobileAndroidPtrOutput)
}

func (o GlobalClientMobileOutput) Ios() GlobalClientMobileIosPtrOutput {
	return o.ApplyT(func(v GlobalClientMobile) *GlobalClientMobileIos { return v.Ios }).(GlobalClientMobileIosPtrOutput)
}

type GlobalClientMobilePtrOutput struct{ *pulumi.OutputState }

func (GlobalClientMobilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobile)(nil)).Elem()
}

func (o GlobalClientMobilePtrOutput) ToGlobalClientMobilePtrOutput() GlobalClientMobilePtrOutput {
	return o
}

func (o GlobalClientMobilePtrOutput) ToGlobalClientMobilePtrOutputWithContext(ctx context.Context) GlobalClientMobilePtrOutput {
	return o
}

func (o GlobalClientMobilePtrOutput) Elem() GlobalClientMobileOutput {
	return o.ApplyT(func(v *GlobalClientMobile) GlobalClientMobile { return *v }).(GlobalClientMobileOutput)
}

func (o GlobalClientMobilePtrOutput) Android() GlobalClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobile) *GlobalClientMobileAndroid {
		if v == nil {
			return nil
		}
		return v.Android
	}).(GlobalClientMobileAndroidPtrOutput)
}

func (o GlobalClientMobilePtrOutput) Ios() GlobalClientMobileIosPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobile) *GlobalClientMobileIos {
		if v == nil {
			return nil
		}
		return v.Ios
	}).(GlobalClientMobileIosPtrOutput)
}

type GlobalClientMobileAndroid struct {
	AppPackageName         *string  `pulumi:"appPackageName"`
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// GlobalClientMobileAndroidInput is an input type that accepts GlobalClientMobileAndroidArgs and GlobalClientMobileAndroidOutput values.
// You can construct a concrete instance of `GlobalClientMobileAndroidInput` via:
//
//          GlobalClientMobileAndroidArgs{...}
type GlobalClientMobileAndroidInput interface {
	pulumi.Input

	ToGlobalClientMobileAndroidOutput() GlobalClientMobileAndroidOutput
	ToGlobalClientMobileAndroidOutputWithContext(context.Context) GlobalClientMobileAndroidOutput
}

type GlobalClientMobileAndroidArgs struct {
	AppPackageName         pulumi.StringPtrInput   `pulumi:"appPackageName"`
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (GlobalClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileAndroid)(nil)).Elem()
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidOutput() GlobalClientMobileAndroidOutput {
	return i.ToGlobalClientMobileAndroidOutputWithContext(context.Background())
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidOutputWithContext(ctx context.Context) GlobalClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileAndroidOutput)
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return i.ToGlobalClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i GlobalClientMobileAndroidArgs) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileAndroidOutput).ToGlobalClientMobileAndroidPtrOutputWithContext(ctx)
}

// GlobalClientMobileAndroidPtrInput is an input type that accepts GlobalClientMobileAndroidArgs, GlobalClientMobileAndroidPtr and GlobalClientMobileAndroidPtrOutput values.
// You can construct a concrete instance of `GlobalClientMobileAndroidPtrInput` via:
//
//          GlobalClientMobileAndroidArgs{...}
//
//  or:
//
//          nil
type GlobalClientMobileAndroidPtrInput interface {
	pulumi.Input

	ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput
	ToGlobalClientMobileAndroidPtrOutputWithContext(context.Context) GlobalClientMobileAndroidPtrOutput
}

type globalClientMobileAndroidPtrType GlobalClientMobileAndroidArgs

func GlobalClientMobileAndroidPtr(v *GlobalClientMobileAndroidArgs) GlobalClientMobileAndroidPtrInput {
	return (*globalClientMobileAndroidPtrType)(v)
}

func (*globalClientMobileAndroidPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileAndroid)(nil)).Elem()
}

func (i *globalClientMobileAndroidPtrType) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return i.ToGlobalClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i *globalClientMobileAndroidPtrType) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileAndroidPtrOutput)
}

type GlobalClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileAndroid)(nil)).Elem()
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidOutput() GlobalClientMobileAndroidOutput {
	return o
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidOutputWithContext(ctx context.Context) GlobalClientMobileAndroidOutput {
	return o
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return o.ToGlobalClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (o GlobalClientMobileAndroidOutput) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileAndroid) *GlobalClientMobileAndroid {
		return &v
	}).(GlobalClientMobileAndroidPtrOutput)
}
func (o GlobalClientMobileAndroidOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileAndroid) *string { return v.AppPackageName }).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GlobalClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type GlobalClientMobileAndroidPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileAndroidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileAndroid)(nil)).Elem()
}

func (o GlobalClientMobileAndroidPtrOutput) ToGlobalClientMobileAndroidPtrOutput() GlobalClientMobileAndroidPtrOutput {
	return o
}

func (o GlobalClientMobileAndroidPtrOutput) ToGlobalClientMobileAndroidPtrOutputWithContext(ctx context.Context) GlobalClientMobileAndroidPtrOutput {
	return o
}

func (o GlobalClientMobileAndroidPtrOutput) Elem() GlobalClientMobileAndroidOutput {
	return o.ApplyT(func(v *GlobalClientMobileAndroid) GlobalClientMobileAndroid { return *v }).(GlobalClientMobileAndroidOutput)
}

func (o GlobalClientMobileAndroidPtrOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobileAndroid) *string {
		if v == nil {
			return nil
		}
		return v.AppPackageName
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileAndroidPtrOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GlobalClientMobileAndroid) []string {
		if v == nil {
			return nil
		}
		return v.Sha256CertFingerprints
	}).(pulumi.StringArrayOutput)
}

type GlobalClientMobileIos struct {
	AppBundleIdentifier *string `pulumi:"appBundleIdentifier"`
	TeamId              *string `pulumi:"teamId"`
}

// GlobalClientMobileIosInput is an input type that accepts GlobalClientMobileIosArgs and GlobalClientMobileIosOutput values.
// You can construct a concrete instance of `GlobalClientMobileIosInput` via:
//
//          GlobalClientMobileIosArgs{...}
type GlobalClientMobileIosInput interface {
	pulumi.Input

	ToGlobalClientMobileIosOutput() GlobalClientMobileIosOutput
	ToGlobalClientMobileIosOutputWithContext(context.Context) GlobalClientMobileIosOutput
}

type GlobalClientMobileIosArgs struct {
	AppBundleIdentifier pulumi.StringPtrInput `pulumi:"appBundleIdentifier"`
	TeamId              pulumi.StringPtrInput `pulumi:"teamId"`
}

func (GlobalClientMobileIosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileIos)(nil)).Elem()
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosOutput() GlobalClientMobileIosOutput {
	return i.ToGlobalClientMobileIosOutputWithContext(context.Background())
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosOutputWithContext(ctx context.Context) GlobalClientMobileIosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileIosOutput)
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return i.ToGlobalClientMobileIosPtrOutputWithContext(context.Background())
}

func (i GlobalClientMobileIosArgs) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileIosOutput).ToGlobalClientMobileIosPtrOutputWithContext(ctx)
}

// GlobalClientMobileIosPtrInput is an input type that accepts GlobalClientMobileIosArgs, GlobalClientMobileIosPtr and GlobalClientMobileIosPtrOutput values.
// You can construct a concrete instance of `GlobalClientMobileIosPtrInput` via:
//
//          GlobalClientMobileIosArgs{...}
//
//  or:
//
//          nil
type GlobalClientMobileIosPtrInput interface {
	pulumi.Input

	ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput
	ToGlobalClientMobileIosPtrOutputWithContext(context.Context) GlobalClientMobileIosPtrOutput
}

type globalClientMobileIosPtrType GlobalClientMobileIosArgs

func GlobalClientMobileIosPtr(v *GlobalClientMobileIosArgs) GlobalClientMobileIosPtrInput {
	return (*globalClientMobileIosPtrType)(v)
}

func (*globalClientMobileIosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileIos)(nil)).Elem()
}

func (i *globalClientMobileIosPtrType) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return i.ToGlobalClientMobileIosPtrOutputWithContext(context.Background())
}

func (i *globalClientMobileIosPtrType) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClientMobileIosPtrOutput)
}

type GlobalClientMobileIosOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileIosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClientMobileIos)(nil)).Elem()
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosOutput() GlobalClientMobileIosOutput {
	return o
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosOutputWithContext(ctx context.Context) GlobalClientMobileIosOutput {
	return o
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return o.ToGlobalClientMobileIosPtrOutputWithContext(context.Background())
}

func (o GlobalClientMobileIosOutput) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileIos) *GlobalClientMobileIos {
		return &v
	}).(GlobalClientMobileIosPtrOutput)
}
func (o GlobalClientMobileIosOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileIos) *string { return v.AppBundleIdentifier }).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileIosOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClientMobileIos) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

type GlobalClientMobileIosPtrOutput struct{ *pulumi.OutputState }

func (GlobalClientMobileIosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalClientMobileIos)(nil)).Elem()
}

func (o GlobalClientMobileIosPtrOutput) ToGlobalClientMobileIosPtrOutput() GlobalClientMobileIosPtrOutput {
	return o
}

func (o GlobalClientMobileIosPtrOutput) ToGlobalClientMobileIosPtrOutputWithContext(ctx context.Context) GlobalClientMobileIosPtrOutput {
	return o
}

func (o GlobalClientMobileIosPtrOutput) Elem() GlobalClientMobileIosOutput {
	return o.ApplyT(func(v *GlobalClientMobileIos) GlobalClientMobileIos { return *v }).(GlobalClientMobileIosOutput)
}

func (o GlobalClientMobileIosPtrOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.AppBundleIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o GlobalClientMobileIosPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

type ResourceServerScope struct {
	// String. Description of the permission (scope).
	Description *string `pulumi:"description"`
	// String. Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.
	Value string `pulumi:"value"`
}

// ResourceServerScopeInput is an input type that accepts ResourceServerScopeArgs and ResourceServerScopeOutput values.
// You can construct a concrete instance of `ResourceServerScopeInput` via:
//
//          ResourceServerScopeArgs{...}
type ResourceServerScopeInput interface {
	pulumi.Input

	ToResourceServerScopeOutput() ResourceServerScopeOutput
	ToResourceServerScopeOutputWithContext(context.Context) ResourceServerScopeOutput
}

type ResourceServerScopeArgs struct {
	// String. Description of the permission (scope).
	Description pulumi.StringPtrInput `pulumi:"description"`
	// String. Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ResourceServerScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScope)(nil)).Elem()
}

func (i ResourceServerScopeArgs) ToResourceServerScopeOutput() ResourceServerScopeOutput {
	return i.ToResourceServerScopeOutputWithContext(context.Background())
}

func (i ResourceServerScopeArgs) ToResourceServerScopeOutputWithContext(ctx context.Context) ResourceServerScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopeOutput)
}

// ResourceServerScopeArrayInput is an input type that accepts ResourceServerScopeArray and ResourceServerScopeArrayOutput values.
// You can construct a concrete instance of `ResourceServerScopeArrayInput` via:
//
//          ResourceServerScopeArray{ ResourceServerScopeArgs{...} }
type ResourceServerScopeArrayInput interface {
	pulumi.Input

	ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput
	ToResourceServerScopeArrayOutputWithContext(context.Context) ResourceServerScopeArrayOutput
}

type ResourceServerScopeArray []ResourceServerScopeInput

func (ResourceServerScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScope)(nil)).Elem()
}

func (i ResourceServerScopeArray) ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput {
	return i.ToResourceServerScopeArrayOutputWithContext(context.Background())
}

func (i ResourceServerScopeArray) ToResourceServerScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopeArrayOutput)
}

type ResourceServerScopeOutput struct{ *pulumi.OutputState }

func (ResourceServerScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScope)(nil)).Elem()
}

func (o ResourceServerScopeOutput) ToResourceServerScopeOutput() ResourceServerScopeOutput {
	return o
}

func (o ResourceServerScopeOutput) ToResourceServerScopeOutputWithContext(ctx context.Context) ResourceServerScopeOutput {
	return o
}

// String. Description of the permission (scope).
func (o ResourceServerScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceServerScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// String. Name of the permission (scope). Examples include `read:appointments` or `delete:appointments`.
func (o ResourceServerScopeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceServerScope) string { return v.Value }).(pulumi.StringOutput)
}

type ResourceServerScopeArrayOutput struct{ *pulumi.OutputState }

func (ResourceServerScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScope)(nil)).Elem()
}

func (o ResourceServerScopeArrayOutput) ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput {
	return o
}

func (o ResourceServerScopeArrayOutput) ToResourceServerScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopeArrayOutput {
	return o
}

func (o ResourceServerScopeArrayOutput) Index(i pulumi.IntInput) ResourceServerScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceServerScope {
		return vs[0].([]ResourceServerScope)[vs[1].(int)]
	}).(ResourceServerScopeOutput)
}

type RolePermission struct {
	// String. Name of the permission (scope).
	Name string `pulumi:"name"`
	// String. Unique identifier for the resource server.
	ResourceServerIdentifier string `pulumi:"resourceServerIdentifier"`
}

// RolePermissionInput is an input type that accepts RolePermissionArgs and RolePermissionOutput values.
// You can construct a concrete instance of `RolePermissionInput` via:
//
//          RolePermissionArgs{...}
type RolePermissionInput interface {
	pulumi.Input

	ToRolePermissionOutput() RolePermissionOutput
	ToRolePermissionOutputWithContext(context.Context) RolePermissionOutput
}

type RolePermissionArgs struct {
	// String. Name of the permission (scope).
	Name pulumi.StringInput `pulumi:"name"`
	// String. Unique identifier for the resource server.
	ResourceServerIdentifier pulumi.StringInput `pulumi:"resourceServerIdentifier"`
}

func (RolePermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermission)(nil)).Elem()
}

func (i RolePermissionArgs) ToRolePermissionOutput() RolePermissionOutput {
	return i.ToRolePermissionOutputWithContext(context.Background())
}

func (i RolePermissionArgs) ToRolePermissionOutputWithContext(ctx context.Context) RolePermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionOutput)
}

// RolePermissionArrayInput is an input type that accepts RolePermissionArray and RolePermissionArrayOutput values.
// You can construct a concrete instance of `RolePermissionArrayInput` via:
//
//          RolePermissionArray{ RolePermissionArgs{...} }
type RolePermissionArrayInput interface {
	pulumi.Input

	ToRolePermissionArrayOutput() RolePermissionArrayOutput
	ToRolePermissionArrayOutputWithContext(context.Context) RolePermissionArrayOutput
}

type RolePermissionArray []RolePermissionInput

func (RolePermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermission)(nil)).Elem()
}

func (i RolePermissionArray) ToRolePermissionArrayOutput() RolePermissionArrayOutput {
	return i.ToRolePermissionArrayOutputWithContext(context.Background())
}

func (i RolePermissionArray) ToRolePermissionArrayOutputWithContext(ctx context.Context) RolePermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionArrayOutput)
}

type RolePermissionOutput struct{ *pulumi.OutputState }

func (RolePermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermission)(nil)).Elem()
}

func (o RolePermissionOutput) ToRolePermissionOutput() RolePermissionOutput {
	return o
}

func (o RolePermissionOutput) ToRolePermissionOutputWithContext(ctx context.Context) RolePermissionOutput {
	return o
}

// String. Name of the permission (scope).
func (o RolePermissionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RolePermission) string { return v.Name }).(pulumi.StringOutput)
}

// String. Unique identifier for the resource server.
func (o RolePermissionOutput) ResourceServerIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v RolePermission) string { return v.ResourceServerIdentifier }).(pulumi.StringOutput)
}

type RolePermissionArrayOutput struct{ *pulumi.OutputState }

func (RolePermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermission)(nil)).Elem()
}

func (o RolePermissionArrayOutput) ToRolePermissionArrayOutput() RolePermissionArrayOutput {
	return o
}

func (o RolePermissionArrayOutput) ToRolePermissionArrayOutputWithContext(ctx context.Context) RolePermissionArrayOutput {
	return o
}

func (o RolePermissionArrayOutput) Index(i pulumi.IntInput) RolePermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolePermission {
		return vs[0].([]RolePermission)[vs[1].(int)]
	}).(RolePermissionOutput)
}

type TenantChangePassword struct {
	// Boolean. Indicates whether or not to use the custom change password page.
	Enabled bool `pulumi:"enabled"`
	// String, HTML format with supported Liquid syntax. Customized content of the change password page.
	Html string `pulumi:"html"`
}

// TenantChangePasswordInput is an input type that accepts TenantChangePasswordArgs and TenantChangePasswordOutput values.
// You can construct a concrete instance of `TenantChangePasswordInput` via:
//
//          TenantChangePasswordArgs{...}
type TenantChangePasswordInput interface {
	pulumi.Input

	ToTenantChangePasswordOutput() TenantChangePasswordOutput
	ToTenantChangePasswordOutputWithContext(context.Context) TenantChangePasswordOutput
}

type TenantChangePasswordArgs struct {
	// Boolean. Indicates whether or not to use the custom change password page.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// String, HTML format with supported Liquid syntax. Customized content of the change password page.
	Html pulumi.StringInput `pulumi:"html"`
}

func (TenantChangePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantChangePassword)(nil)).Elem()
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordOutput() TenantChangePasswordOutput {
	return i.ToTenantChangePasswordOutputWithContext(context.Background())
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordOutputWithContext(ctx context.Context) TenantChangePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantChangePasswordOutput)
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return i.ToTenantChangePasswordPtrOutputWithContext(context.Background())
}

func (i TenantChangePasswordArgs) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantChangePasswordOutput).ToTenantChangePasswordPtrOutputWithContext(ctx)
}

// TenantChangePasswordPtrInput is an input type that accepts TenantChangePasswordArgs, TenantChangePasswordPtr and TenantChangePasswordPtrOutput values.
// You can construct a concrete instance of `TenantChangePasswordPtrInput` via:
//
//          TenantChangePasswordArgs{...}
//
//  or:
//
//          nil
type TenantChangePasswordPtrInput interface {
	pulumi.Input

	ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput
	ToTenantChangePasswordPtrOutputWithContext(context.Context) TenantChangePasswordPtrOutput
}

type tenantChangePasswordPtrType TenantChangePasswordArgs

func TenantChangePasswordPtr(v *TenantChangePasswordArgs) TenantChangePasswordPtrInput {
	return (*tenantChangePasswordPtrType)(v)
}

func (*tenantChangePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantChangePassword)(nil)).Elem()
}

func (i *tenantChangePasswordPtrType) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return i.ToTenantChangePasswordPtrOutputWithContext(context.Background())
}

func (i *tenantChangePasswordPtrType) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantChangePasswordPtrOutput)
}

type TenantChangePasswordOutput struct{ *pulumi.OutputState }

func (TenantChangePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantChangePassword)(nil)).Elem()
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordOutput() TenantChangePasswordOutput {
	return o
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordOutputWithContext(ctx context.Context) TenantChangePasswordOutput {
	return o
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return o.ToTenantChangePasswordPtrOutputWithContext(context.Background())
}

func (o TenantChangePasswordOutput) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return o.ApplyT(func(v TenantChangePassword) *TenantChangePassword {
		return &v
	}).(TenantChangePasswordPtrOutput)
}

// Boolean. Indicates whether or not to use the custom change password page.
func (o TenantChangePasswordOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TenantChangePassword) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the change password page.
func (o TenantChangePasswordOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v TenantChangePassword) string { return v.Html }).(pulumi.StringOutput)
}

type TenantChangePasswordPtrOutput struct{ *pulumi.OutputState }

func (TenantChangePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantChangePassword)(nil)).Elem()
}

func (o TenantChangePasswordPtrOutput) ToTenantChangePasswordPtrOutput() TenantChangePasswordPtrOutput {
	return o
}

func (o TenantChangePasswordPtrOutput) ToTenantChangePasswordPtrOutputWithContext(ctx context.Context) TenantChangePasswordPtrOutput {
	return o
}

func (o TenantChangePasswordPtrOutput) Elem() TenantChangePasswordOutput {
	return o.ApplyT(func(v *TenantChangePassword) TenantChangePassword { return *v }).(TenantChangePasswordOutput)
}

// Boolean. Indicates whether or not to use the custom change password page.
func (o TenantChangePasswordPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantChangePassword) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the change password page.
func (o TenantChangePasswordPtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantChangePassword) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

type TenantErrorPage struct {
	// String, HTML format with supported Liquid syntax. Customized content of the error page.
	Html string `pulumi:"html"`
	// Boolean. Indicates whether or not to show the link to logs as part of the default error page.
	ShowLogLink bool `pulumi:"showLogLink"`
	// String. URL to redirect to when an error occurs rather than showing the default error page.
	Url string `pulumi:"url"`
}

// TenantErrorPageInput is an input type that accepts TenantErrorPageArgs and TenantErrorPageOutput values.
// You can construct a concrete instance of `TenantErrorPageInput` via:
//
//          TenantErrorPageArgs{...}
type TenantErrorPageInput interface {
	pulumi.Input

	ToTenantErrorPageOutput() TenantErrorPageOutput
	ToTenantErrorPageOutputWithContext(context.Context) TenantErrorPageOutput
}

type TenantErrorPageArgs struct {
	// String, HTML format with supported Liquid syntax. Customized content of the error page.
	Html pulumi.StringInput `pulumi:"html"`
	// Boolean. Indicates whether or not to show the link to logs as part of the default error page.
	ShowLogLink pulumi.BoolInput `pulumi:"showLogLink"`
	// String. URL to redirect to when an error occurs rather than showing the default error page.
	Url pulumi.StringInput `pulumi:"url"`
}

func (TenantErrorPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantErrorPage)(nil)).Elem()
}

func (i TenantErrorPageArgs) ToTenantErrorPageOutput() TenantErrorPageOutput {
	return i.ToTenantErrorPageOutputWithContext(context.Background())
}

func (i TenantErrorPageArgs) ToTenantErrorPageOutputWithContext(ctx context.Context) TenantErrorPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantErrorPageOutput)
}

func (i TenantErrorPageArgs) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return i.ToTenantErrorPagePtrOutputWithContext(context.Background())
}

func (i TenantErrorPageArgs) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantErrorPageOutput).ToTenantErrorPagePtrOutputWithContext(ctx)
}

// TenantErrorPagePtrInput is an input type that accepts TenantErrorPageArgs, TenantErrorPagePtr and TenantErrorPagePtrOutput values.
// You can construct a concrete instance of `TenantErrorPagePtrInput` via:
//
//          TenantErrorPageArgs{...}
//
//  or:
//
//          nil
type TenantErrorPagePtrInput interface {
	pulumi.Input

	ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput
	ToTenantErrorPagePtrOutputWithContext(context.Context) TenantErrorPagePtrOutput
}

type tenantErrorPagePtrType TenantErrorPageArgs

func TenantErrorPagePtr(v *TenantErrorPageArgs) TenantErrorPagePtrInput {
	return (*tenantErrorPagePtrType)(v)
}

func (*tenantErrorPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantErrorPage)(nil)).Elem()
}

func (i *tenantErrorPagePtrType) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return i.ToTenantErrorPagePtrOutputWithContext(context.Background())
}

func (i *tenantErrorPagePtrType) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantErrorPagePtrOutput)
}

type TenantErrorPageOutput struct{ *pulumi.OutputState }

func (TenantErrorPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantErrorPage)(nil)).Elem()
}

func (o TenantErrorPageOutput) ToTenantErrorPageOutput() TenantErrorPageOutput {
	return o
}

func (o TenantErrorPageOutput) ToTenantErrorPageOutputWithContext(ctx context.Context) TenantErrorPageOutput {
	return o
}

func (o TenantErrorPageOutput) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return o.ToTenantErrorPagePtrOutputWithContext(context.Background())
}

func (o TenantErrorPageOutput) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return o.ApplyT(func(v TenantErrorPage) *TenantErrorPage {
		return &v
	}).(TenantErrorPagePtrOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the error page.
func (o TenantErrorPageOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v TenantErrorPage) string { return v.Html }).(pulumi.StringOutput)
}

// Boolean. Indicates whether or not to show the link to logs as part of the default error page.
func (o TenantErrorPageOutput) ShowLogLink() pulumi.BoolOutput {
	return o.ApplyT(func(v TenantErrorPage) bool { return v.ShowLogLink }).(pulumi.BoolOutput)
}

// String. URL to redirect to when an error occurs rather than showing the default error page.
func (o TenantErrorPageOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v TenantErrorPage) string { return v.Url }).(pulumi.StringOutput)
}

type TenantErrorPagePtrOutput struct{ *pulumi.OutputState }

func (TenantErrorPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantErrorPage)(nil)).Elem()
}

func (o TenantErrorPagePtrOutput) ToTenantErrorPagePtrOutput() TenantErrorPagePtrOutput {
	return o
}

func (o TenantErrorPagePtrOutput) ToTenantErrorPagePtrOutputWithContext(ctx context.Context) TenantErrorPagePtrOutput {
	return o
}

func (o TenantErrorPagePtrOutput) Elem() TenantErrorPageOutput {
	return o.ApplyT(func(v *TenantErrorPage) TenantErrorPage { return *v }).(TenantErrorPageOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the error page.
func (o TenantErrorPagePtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantErrorPage) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

// Boolean. Indicates whether or not to show the link to logs as part of the default error page.
func (o TenantErrorPagePtrOutput) ShowLogLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantErrorPage) *bool {
		if v == nil {
			return nil
		}
		return &v.ShowLogLink
	}).(pulumi.BoolPtrOutput)
}

// String. URL to redirect to when an error occurs rather than showing the default error page.
func (o TenantErrorPagePtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantErrorPage) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type TenantFlags struct {
	// Boolean. Indicates whether or not to use the older v1 change password flow. Not recommended except for backward compatibility.
	ChangePwdFlowV1 *bool `pulumi:"changePwdFlowV1"`
	// Boolean. Indicated whether or not classic Universal Login prompts include additional security headers to prevent clickjacking.
	DisableClickjackProtectionHeaders *bool `pulumi:"disableClickjackProtectionHeaders"`
	// Boolean. Indicates whether or not the APIs section is enabled for the tenant.
	EnableApisSection *bool `pulumi:"enableApisSection"`
	// Boolean. Indicates whether or not all current connections should be enabled when a new client is created.
	EnableClientConnections *bool `pulumi:"enableClientConnections"`
	// Boolean. Indicates whether or not the tenant allows custom domains in emails.
	EnableCustomDomainInEmails *bool `pulumi:"enableCustomDomainInEmails"`
	// Boolean. Indicates whether or not the tenant allows dynamic client registration.
	EnableDynamicClientRegistration *bool `pulumi:"enableDynamicClientRegistration"`
	// Boolean. Indicates whether or not to use the older v2 legacy logs search.
	EnableLegacyLogsSearchV2 *bool `pulumi:"enableLegacyLogsSearchV2"`
	// Boolean. Indicates whether or not advanced API Authorization scenarios are enabled.
	EnablePipeline2 *bool `pulumi:"enablePipeline2"`
	// Boolean. Indicates whether or not the public sign up process shows a userExists error if the user already exists.
	EnablePublicSignupUserExistsError *bool `pulumi:"enablePublicSignupUserExistsError"`
	// Boolean. Indicates whether or not the tenant uses universal login.
	UniversalLogin                 *bool `pulumi:"universalLogin"`
	UseScopeDescriptionsForConsent *bool `pulumi:"useScopeDescriptionsForConsent"`
}

// TenantFlagsInput is an input type that accepts TenantFlagsArgs and TenantFlagsOutput values.
// You can construct a concrete instance of `TenantFlagsInput` via:
//
//          TenantFlagsArgs{...}
type TenantFlagsInput interface {
	pulumi.Input

	ToTenantFlagsOutput() TenantFlagsOutput
	ToTenantFlagsOutputWithContext(context.Context) TenantFlagsOutput
}

type TenantFlagsArgs struct {
	// Boolean. Indicates whether or not to use the older v1 change password flow. Not recommended except for backward compatibility.
	ChangePwdFlowV1 pulumi.BoolPtrInput `pulumi:"changePwdFlowV1"`
	// Boolean. Indicated whether or not classic Universal Login prompts include additional security headers to prevent clickjacking.
	DisableClickjackProtectionHeaders pulumi.BoolPtrInput `pulumi:"disableClickjackProtectionHeaders"`
	// Boolean. Indicates whether or not the APIs section is enabled for the tenant.
	EnableApisSection pulumi.BoolPtrInput `pulumi:"enableApisSection"`
	// Boolean. Indicates whether or not all current connections should be enabled when a new client is created.
	EnableClientConnections pulumi.BoolPtrInput `pulumi:"enableClientConnections"`
	// Boolean. Indicates whether or not the tenant allows custom domains in emails.
	EnableCustomDomainInEmails pulumi.BoolPtrInput `pulumi:"enableCustomDomainInEmails"`
	// Boolean. Indicates whether or not the tenant allows dynamic client registration.
	EnableDynamicClientRegistration pulumi.BoolPtrInput `pulumi:"enableDynamicClientRegistration"`
	// Boolean. Indicates whether or not to use the older v2 legacy logs search.
	EnableLegacyLogsSearchV2 pulumi.BoolPtrInput `pulumi:"enableLegacyLogsSearchV2"`
	// Boolean. Indicates whether or not advanced API Authorization scenarios are enabled.
	EnablePipeline2 pulumi.BoolPtrInput `pulumi:"enablePipeline2"`
	// Boolean. Indicates whether or not the public sign up process shows a userExists error if the user already exists.
	EnablePublicSignupUserExistsError pulumi.BoolPtrInput `pulumi:"enablePublicSignupUserExistsError"`
	// Boolean. Indicates whether or not the tenant uses universal login.
	UniversalLogin                 pulumi.BoolPtrInput `pulumi:"universalLogin"`
	UseScopeDescriptionsForConsent pulumi.BoolPtrInput `pulumi:"useScopeDescriptionsForConsent"`
}

func (TenantFlagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantFlags)(nil)).Elem()
}

func (i TenantFlagsArgs) ToTenantFlagsOutput() TenantFlagsOutput {
	return i.ToTenantFlagsOutputWithContext(context.Background())
}

func (i TenantFlagsArgs) ToTenantFlagsOutputWithContext(ctx context.Context) TenantFlagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsOutput)
}

func (i TenantFlagsArgs) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return i.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (i TenantFlagsArgs) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsOutput).ToTenantFlagsPtrOutputWithContext(ctx)
}

// TenantFlagsPtrInput is an input type that accepts TenantFlagsArgs, TenantFlagsPtr and TenantFlagsPtrOutput values.
// You can construct a concrete instance of `TenantFlagsPtrInput` via:
//
//          TenantFlagsArgs{...}
//
//  or:
//
//          nil
type TenantFlagsPtrInput interface {
	pulumi.Input

	ToTenantFlagsPtrOutput() TenantFlagsPtrOutput
	ToTenantFlagsPtrOutputWithContext(context.Context) TenantFlagsPtrOutput
}

type tenantFlagsPtrType TenantFlagsArgs

func TenantFlagsPtr(v *TenantFlagsArgs) TenantFlagsPtrInput {
	return (*tenantFlagsPtrType)(v)
}

func (*tenantFlagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantFlags)(nil)).Elem()
}

func (i *tenantFlagsPtrType) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return i.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (i *tenantFlagsPtrType) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsPtrOutput)
}

type TenantFlagsOutput struct{ *pulumi.OutputState }

func (TenantFlagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantFlags)(nil)).Elem()
}

func (o TenantFlagsOutput) ToTenantFlagsOutput() TenantFlagsOutput {
	return o
}

func (o TenantFlagsOutput) ToTenantFlagsOutputWithContext(ctx context.Context) TenantFlagsOutput {
	return o
}

func (o TenantFlagsOutput) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return o.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (o TenantFlagsOutput) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return o.ApplyT(func(v TenantFlags) *TenantFlags {
		return &v
	}).(TenantFlagsPtrOutput)
}

// Boolean. Indicates whether or not to use the older v1 change password flow. Not recommended except for backward compatibility.
func (o TenantFlagsOutput) ChangePwdFlowV1() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.ChangePwdFlowV1 }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicated whether or not classic Universal Login prompts include additional security headers to prevent clickjacking.
func (o TenantFlagsOutput) DisableClickjackProtectionHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DisableClickjackProtectionHeaders }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not the APIs section is enabled for the tenant.
func (o TenantFlagsOutput) EnableApisSection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableApisSection }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not all current connections should be enabled when a new client is created.
func (o TenantFlagsOutput) EnableClientConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableClientConnections }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not the tenant allows custom domains in emails.
func (o TenantFlagsOutput) EnableCustomDomainInEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableCustomDomainInEmails }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not the tenant allows dynamic client registration.
func (o TenantFlagsOutput) EnableDynamicClientRegistration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableDynamicClientRegistration }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not to use the older v2 legacy logs search.
func (o TenantFlagsOutput) EnableLegacyLogsSearchV2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableLegacyLogsSearchV2 }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not advanced API Authorization scenarios are enabled.
func (o TenantFlagsOutput) EnablePipeline2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnablePipeline2 }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not the public sign up process shows a userExists error if the user already exists.
func (o TenantFlagsOutput) EnablePublicSignupUserExistsError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnablePublicSignupUserExistsError }).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not the tenant uses universal login.
func (o TenantFlagsOutput) UniversalLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.UniversalLogin }).(pulumi.BoolPtrOutput)
}

func (o TenantFlagsOutput) UseScopeDescriptionsForConsent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.UseScopeDescriptionsForConsent }).(pulumi.BoolPtrOutput)
}

type TenantFlagsPtrOutput struct{ *pulumi.OutputState }

func (TenantFlagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantFlags)(nil)).Elem()
}

func (o TenantFlagsPtrOutput) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return o
}

func (o TenantFlagsPtrOutput) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return o
}

func (o TenantFlagsPtrOutput) Elem() TenantFlagsOutput {
	return o.ApplyT(func(v *TenantFlags) TenantFlags { return *v }).(TenantFlagsOutput)
}

// Boolean. Indicates whether or not to use the older v1 change password flow. Not recommended except for backward compatibility.
func (o TenantFlagsPtrOutput) ChangePwdFlowV1() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.ChangePwdFlowV1
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicated whether or not classic Universal Login prompts include additional security headers to prevent clickjacking.
func (o TenantFlagsPtrOutput) DisableClickjackProtectionHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DisableClickjackProtectionHeaders
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not the APIs section is enabled for the tenant.
func (o TenantFlagsPtrOutput) EnableApisSection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableApisSection
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not all current connections should be enabled when a new client is created.
func (o TenantFlagsPtrOutput) EnableClientConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableClientConnections
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not the tenant allows custom domains in emails.
func (o TenantFlagsPtrOutput) EnableCustomDomainInEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCustomDomainInEmails
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not the tenant allows dynamic client registration.
func (o TenantFlagsPtrOutput) EnableDynamicClientRegistration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDynamicClientRegistration
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not to use the older v2 legacy logs search.
func (o TenantFlagsPtrOutput) EnableLegacyLogsSearchV2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableLegacyLogsSearchV2
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not advanced API Authorization scenarios are enabled.
func (o TenantFlagsPtrOutput) EnablePipeline2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePipeline2
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not the public sign up process shows a userExists error if the user already exists.
func (o TenantFlagsPtrOutput) EnablePublicSignupUserExistsError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePublicSignupUserExistsError
	}).(pulumi.BoolPtrOutput)
}

// Boolean. Indicates whether or not the tenant uses universal login.
func (o TenantFlagsPtrOutput) UniversalLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.UniversalLogin
	}).(pulumi.BoolPtrOutput)
}

func (o TenantFlagsPtrOutput) UseScopeDescriptionsForConsent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.UseScopeDescriptionsForConsent
	}).(pulumi.BoolPtrOutput)
}

type TenantGuardianMfaPage struct {
	// Boolean. Indicates whether or not to use the custom Guardian page.
	Enabled bool `pulumi:"enabled"`
	// String, HTML format with supported Liquid syntax. Customized content of the Guardian page.
	Html string `pulumi:"html"`
}

// TenantGuardianMfaPageInput is an input type that accepts TenantGuardianMfaPageArgs and TenantGuardianMfaPageOutput values.
// You can construct a concrete instance of `TenantGuardianMfaPageInput` via:
//
//          TenantGuardianMfaPageArgs{...}
type TenantGuardianMfaPageInput interface {
	pulumi.Input

	ToTenantGuardianMfaPageOutput() TenantGuardianMfaPageOutput
	ToTenantGuardianMfaPageOutputWithContext(context.Context) TenantGuardianMfaPageOutput
}

type TenantGuardianMfaPageArgs struct {
	// Boolean. Indicates whether or not to use the custom Guardian page.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// String, HTML format with supported Liquid syntax. Customized content of the Guardian page.
	Html pulumi.StringInput `pulumi:"html"`
}

func (TenantGuardianMfaPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantGuardianMfaPage)(nil)).Elem()
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPageOutput() TenantGuardianMfaPageOutput {
	return i.ToTenantGuardianMfaPageOutputWithContext(context.Background())
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPageOutputWithContext(ctx context.Context) TenantGuardianMfaPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantGuardianMfaPageOutput)
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return i.ToTenantGuardianMfaPagePtrOutputWithContext(context.Background())
}

func (i TenantGuardianMfaPageArgs) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantGuardianMfaPageOutput).ToTenantGuardianMfaPagePtrOutputWithContext(ctx)
}

// TenantGuardianMfaPagePtrInput is an input type that accepts TenantGuardianMfaPageArgs, TenantGuardianMfaPagePtr and TenantGuardianMfaPagePtrOutput values.
// You can construct a concrete instance of `TenantGuardianMfaPagePtrInput` via:
//
//          TenantGuardianMfaPageArgs{...}
//
//  or:
//
//          nil
type TenantGuardianMfaPagePtrInput interface {
	pulumi.Input

	ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput
	ToTenantGuardianMfaPagePtrOutputWithContext(context.Context) TenantGuardianMfaPagePtrOutput
}

type tenantGuardianMfaPagePtrType TenantGuardianMfaPageArgs

func TenantGuardianMfaPagePtr(v *TenantGuardianMfaPageArgs) TenantGuardianMfaPagePtrInput {
	return (*tenantGuardianMfaPagePtrType)(v)
}

func (*tenantGuardianMfaPagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantGuardianMfaPage)(nil)).Elem()
}

func (i *tenantGuardianMfaPagePtrType) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return i.ToTenantGuardianMfaPagePtrOutputWithContext(context.Background())
}

func (i *tenantGuardianMfaPagePtrType) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantGuardianMfaPagePtrOutput)
}

type TenantGuardianMfaPageOutput struct{ *pulumi.OutputState }

func (TenantGuardianMfaPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantGuardianMfaPage)(nil)).Elem()
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPageOutput() TenantGuardianMfaPageOutput {
	return o
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPageOutputWithContext(ctx context.Context) TenantGuardianMfaPageOutput {
	return o
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return o.ToTenantGuardianMfaPagePtrOutputWithContext(context.Background())
}

func (o TenantGuardianMfaPageOutput) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return o.ApplyT(func(v TenantGuardianMfaPage) *TenantGuardianMfaPage {
		return &v
	}).(TenantGuardianMfaPagePtrOutput)
}

// Boolean. Indicates whether or not to use the custom Guardian page.
func (o TenantGuardianMfaPageOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TenantGuardianMfaPage) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the Guardian page.
func (o TenantGuardianMfaPageOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v TenantGuardianMfaPage) string { return v.Html }).(pulumi.StringOutput)
}

type TenantGuardianMfaPagePtrOutput struct{ *pulumi.OutputState }

func (TenantGuardianMfaPagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantGuardianMfaPage)(nil)).Elem()
}

func (o TenantGuardianMfaPagePtrOutput) ToTenantGuardianMfaPagePtrOutput() TenantGuardianMfaPagePtrOutput {
	return o
}

func (o TenantGuardianMfaPagePtrOutput) ToTenantGuardianMfaPagePtrOutputWithContext(ctx context.Context) TenantGuardianMfaPagePtrOutput {
	return o
}

func (o TenantGuardianMfaPagePtrOutput) Elem() TenantGuardianMfaPageOutput {
	return o.ApplyT(func(v *TenantGuardianMfaPage) TenantGuardianMfaPage { return *v }).(TenantGuardianMfaPageOutput)
}

// Boolean. Indicates whether or not to use the custom Guardian page.
func (o TenantGuardianMfaPagePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantGuardianMfaPage) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// String, HTML format with supported Liquid syntax. Customized content of the Guardian page.
func (o TenantGuardianMfaPagePtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantGuardianMfaPage) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

type TenantUniversalLogin struct {
	// List(Resource). Configuration settings for Universal Login colors. See Universal Login - Colors.
	Colors *TenantUniversalLoginColors `pulumi:"colors"`
}

// TenantUniversalLoginInput is an input type that accepts TenantUniversalLoginArgs and TenantUniversalLoginOutput values.
// You can construct a concrete instance of `TenantUniversalLoginInput` via:
//
//          TenantUniversalLoginArgs{...}
type TenantUniversalLoginInput interface {
	pulumi.Input

	ToTenantUniversalLoginOutput() TenantUniversalLoginOutput
	ToTenantUniversalLoginOutputWithContext(context.Context) TenantUniversalLoginOutput
}

type TenantUniversalLoginArgs struct {
	// List(Resource). Configuration settings for Universal Login colors. See Universal Login - Colors.
	Colors TenantUniversalLoginColorsPtrInput `pulumi:"colors"`
}

func (TenantUniversalLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLogin)(nil)).Elem()
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginOutput() TenantUniversalLoginOutput {
	return i.ToTenantUniversalLoginOutputWithContext(context.Background())
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginOutputWithContext(ctx context.Context) TenantUniversalLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginOutput)
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return i.ToTenantUniversalLoginPtrOutputWithContext(context.Background())
}

func (i TenantUniversalLoginArgs) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginOutput).ToTenantUniversalLoginPtrOutputWithContext(ctx)
}

// TenantUniversalLoginPtrInput is an input type that accepts TenantUniversalLoginArgs, TenantUniversalLoginPtr and TenantUniversalLoginPtrOutput values.
// You can construct a concrete instance of `TenantUniversalLoginPtrInput` via:
//
//          TenantUniversalLoginArgs{...}
//
//  or:
//
//          nil
type TenantUniversalLoginPtrInput interface {
	pulumi.Input

	ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput
	ToTenantUniversalLoginPtrOutputWithContext(context.Context) TenantUniversalLoginPtrOutput
}

type tenantUniversalLoginPtrType TenantUniversalLoginArgs

func TenantUniversalLoginPtr(v *TenantUniversalLoginArgs) TenantUniversalLoginPtrInput {
	return (*tenantUniversalLoginPtrType)(v)
}

func (*tenantUniversalLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLogin)(nil)).Elem()
}

func (i *tenantUniversalLoginPtrType) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return i.ToTenantUniversalLoginPtrOutputWithContext(context.Background())
}

func (i *tenantUniversalLoginPtrType) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginPtrOutput)
}

type TenantUniversalLoginOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLogin)(nil)).Elem()
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginOutput() TenantUniversalLoginOutput {
	return o
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginOutputWithContext(ctx context.Context) TenantUniversalLoginOutput {
	return o
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return o.ToTenantUniversalLoginPtrOutputWithContext(context.Background())
}

func (o TenantUniversalLoginOutput) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return o.ApplyT(func(v TenantUniversalLogin) *TenantUniversalLogin {
		return &v
	}).(TenantUniversalLoginPtrOutput)
}

// List(Resource). Configuration settings for Universal Login colors. See Universal Login - Colors.
func (o TenantUniversalLoginOutput) Colors() TenantUniversalLoginColorsPtrOutput {
	return o.ApplyT(func(v TenantUniversalLogin) *TenantUniversalLoginColors { return v.Colors }).(TenantUniversalLoginColorsPtrOutput)
}

type TenantUniversalLoginPtrOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLogin)(nil)).Elem()
}

func (o TenantUniversalLoginPtrOutput) ToTenantUniversalLoginPtrOutput() TenantUniversalLoginPtrOutput {
	return o
}

func (o TenantUniversalLoginPtrOutput) ToTenantUniversalLoginPtrOutputWithContext(ctx context.Context) TenantUniversalLoginPtrOutput {
	return o
}

func (o TenantUniversalLoginPtrOutput) Elem() TenantUniversalLoginOutput {
	return o.ApplyT(func(v *TenantUniversalLogin) TenantUniversalLogin { return *v }).(TenantUniversalLoginOutput)
}

// List(Resource). Configuration settings for Universal Login colors. See Universal Login - Colors.
func (o TenantUniversalLoginPtrOutput) Colors() TenantUniversalLoginColorsPtrOutput {
	return o.ApplyT(func(v *TenantUniversalLogin) *TenantUniversalLoginColors {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(TenantUniversalLoginColorsPtrOutput)
}

type TenantUniversalLoginColors struct {
	// String, Hexadecimal. Background color of login pages.
	PageBackground *string `pulumi:"pageBackground"`
	// String, Hexadecimal. Primary button background color.
	Primary *string `pulumi:"primary"`
}

// TenantUniversalLoginColorsInput is an input type that accepts TenantUniversalLoginColorsArgs and TenantUniversalLoginColorsOutput values.
// You can construct a concrete instance of `TenantUniversalLoginColorsInput` via:
//
//          TenantUniversalLoginColorsArgs{...}
type TenantUniversalLoginColorsInput interface {
	pulumi.Input

	ToTenantUniversalLoginColorsOutput() TenantUniversalLoginColorsOutput
	ToTenantUniversalLoginColorsOutputWithContext(context.Context) TenantUniversalLoginColorsOutput
}

type TenantUniversalLoginColorsArgs struct {
	// String, Hexadecimal. Background color of login pages.
	PageBackground pulumi.StringPtrInput `pulumi:"pageBackground"`
	// String, Hexadecimal. Primary button background color.
	Primary pulumi.StringPtrInput `pulumi:"primary"`
}

func (TenantUniversalLoginColorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLoginColors)(nil)).Elem()
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsOutput() TenantUniversalLoginColorsOutput {
	return i.ToTenantUniversalLoginColorsOutputWithContext(context.Background())
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsOutputWithContext(ctx context.Context) TenantUniversalLoginColorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginColorsOutput)
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return i.ToTenantUniversalLoginColorsPtrOutputWithContext(context.Background())
}

func (i TenantUniversalLoginColorsArgs) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginColorsOutput).ToTenantUniversalLoginColorsPtrOutputWithContext(ctx)
}

// TenantUniversalLoginColorsPtrInput is an input type that accepts TenantUniversalLoginColorsArgs, TenantUniversalLoginColorsPtr and TenantUniversalLoginColorsPtrOutput values.
// You can construct a concrete instance of `TenantUniversalLoginColorsPtrInput` via:
//
//          TenantUniversalLoginColorsArgs{...}
//
//  or:
//
//          nil
type TenantUniversalLoginColorsPtrInput interface {
	pulumi.Input

	ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput
	ToTenantUniversalLoginColorsPtrOutputWithContext(context.Context) TenantUniversalLoginColorsPtrOutput
}

type tenantUniversalLoginColorsPtrType TenantUniversalLoginColorsArgs

func TenantUniversalLoginColorsPtr(v *TenantUniversalLoginColorsArgs) TenantUniversalLoginColorsPtrInput {
	return (*tenantUniversalLoginColorsPtrType)(v)
}

func (*tenantUniversalLoginColorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLoginColors)(nil)).Elem()
}

func (i *tenantUniversalLoginColorsPtrType) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return i.ToTenantUniversalLoginColorsPtrOutputWithContext(context.Background())
}

func (i *tenantUniversalLoginColorsPtrType) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantUniversalLoginColorsPtrOutput)
}

type TenantUniversalLoginColorsOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginColorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantUniversalLoginColors)(nil)).Elem()
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsOutput() TenantUniversalLoginColorsOutput {
	return o
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsOutputWithContext(ctx context.Context) TenantUniversalLoginColorsOutput {
	return o
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return o.ToTenantUniversalLoginColorsPtrOutputWithContext(context.Background())
}

func (o TenantUniversalLoginColorsOutput) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return o.ApplyT(func(v TenantUniversalLoginColors) *TenantUniversalLoginColors {
		return &v
	}).(TenantUniversalLoginColorsPtrOutput)
}

// String, Hexadecimal. Background color of login pages.
func (o TenantUniversalLoginColorsOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantUniversalLoginColors) *string { return v.PageBackground }).(pulumi.StringPtrOutput)
}

// String, Hexadecimal. Primary button background color.
func (o TenantUniversalLoginColorsOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantUniversalLoginColors) *string { return v.Primary }).(pulumi.StringPtrOutput)
}

type TenantUniversalLoginColorsPtrOutput struct{ *pulumi.OutputState }

func (TenantUniversalLoginColorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantUniversalLoginColors)(nil)).Elem()
}

func (o TenantUniversalLoginColorsPtrOutput) ToTenantUniversalLoginColorsPtrOutput() TenantUniversalLoginColorsPtrOutput {
	return o
}

func (o TenantUniversalLoginColorsPtrOutput) ToTenantUniversalLoginColorsPtrOutputWithContext(ctx context.Context) TenantUniversalLoginColorsPtrOutput {
	return o
}

func (o TenantUniversalLoginColorsPtrOutput) Elem() TenantUniversalLoginColorsOutput {
	return o.ApplyT(func(v *TenantUniversalLoginColors) TenantUniversalLoginColors { return *v }).(TenantUniversalLoginColorsOutput)
}

// String, Hexadecimal. Background color of login pages.
func (o TenantUniversalLoginColorsPtrOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantUniversalLoginColors) *string {
		if v == nil {
			return nil
		}
		return v.PageBackground
	}).(pulumi.StringPtrOutput)
}

// String, Hexadecimal. Primary button background color.
func (o TenantUniversalLoginColorsPtrOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantUniversalLoginColors) *string {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ClientAddonsOutput{})
	pulumi.RegisterOutputType(ClientAddonsPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpLogoutOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpLogoutPtrOutput{})
	pulumi.RegisterOutputType(ClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(ClientJwtConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClientMobileOutput{})
	pulumi.RegisterOutputType(ClientMobilePtrOutput{})
	pulumi.RegisterOutputType(ClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(ClientMobileAndroidPtrOutput{})
	pulumi.RegisterOutputType(ClientMobileIosOutput{})
	pulumi.RegisterOutputType(ClientMobileIosPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordComplexityOptionsOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordComplexityOptionsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordDictionaryOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordDictionaryPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordHistoryOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordHistoryArrayOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordNoPersonalInfoOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordNoPersonalInfoPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsTotpOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsTotpPtrOutput{})
	pulumi.RegisterOutputType(CustomDomainVerificationOutput{})
	pulumi.RegisterOutputType(CustomDomainVerificationPtrOutput{})
	pulumi.RegisterOutputType(EmailCredentialsOutput{})
	pulumi.RegisterOutputType(EmailCredentialsPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsSamlpOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsSamlpPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsSamlpLogoutOutput{})
	pulumi.RegisterOutputType(GlobalClientAddonsSamlpLogoutPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(GlobalClientJwtConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileOutput{})
	pulumi.RegisterOutputType(GlobalClientMobilePtrOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileAndroidPtrOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileIosOutput{})
	pulumi.RegisterOutputType(GlobalClientMobileIosPtrOutput{})
	pulumi.RegisterOutputType(ResourceServerScopeOutput{})
	pulumi.RegisterOutputType(ResourceServerScopeArrayOutput{})
	pulumi.RegisterOutputType(RolePermissionOutput{})
	pulumi.RegisterOutputType(RolePermissionArrayOutput{})
	pulumi.RegisterOutputType(TenantChangePasswordOutput{})
	pulumi.RegisterOutputType(TenantChangePasswordPtrOutput{})
	pulumi.RegisterOutputType(TenantErrorPageOutput{})
	pulumi.RegisterOutputType(TenantErrorPagePtrOutput{})
	pulumi.RegisterOutputType(TenantFlagsOutput{})
	pulumi.RegisterOutputType(TenantFlagsPtrOutput{})
	pulumi.RegisterOutputType(TenantGuardianMfaPageOutput{})
	pulumi.RegisterOutputType(TenantGuardianMfaPagePtrOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginPtrOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginColorsOutput{})
	pulumi.RegisterOutputType(TenantUniversalLoginColorsPtrOutput{})
}
