// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ActionDependency struct {
	// Dependency name, e.g. `lodash`.
	Name string `pulumi:"name"`
	// Dependency version, e.g. `latest` or `4.17.21`.
	Version string `pulumi:"version"`
}

// ActionDependencyInput is an input type that accepts ActionDependencyArgs and ActionDependencyOutput values.
// You can construct a concrete instance of `ActionDependencyInput` via:
//
//	ActionDependencyArgs{...}
type ActionDependencyInput interface {
	pulumi.Input

	ToActionDependencyOutput() ActionDependencyOutput
	ToActionDependencyOutputWithContext(context.Context) ActionDependencyOutput
}

type ActionDependencyArgs struct {
	// Dependency name, e.g. `lodash`.
	Name pulumi.StringInput `pulumi:"name"`
	// Dependency version, e.g. `latest` or `4.17.21`.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ActionDependencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionDependency)(nil)).Elem()
}

func (i ActionDependencyArgs) ToActionDependencyOutput() ActionDependencyOutput {
	return i.ToActionDependencyOutputWithContext(context.Background())
}

func (i ActionDependencyArgs) ToActionDependencyOutputWithContext(ctx context.Context) ActionDependencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionDependencyOutput)
}

func (i ActionDependencyArgs) ToOutput(ctx context.Context) pulumix.Output[ActionDependency] {
	return pulumix.Output[ActionDependency]{
		OutputState: i.ToActionDependencyOutputWithContext(ctx).OutputState,
	}
}

// ActionDependencyArrayInput is an input type that accepts ActionDependencyArray and ActionDependencyArrayOutput values.
// You can construct a concrete instance of `ActionDependencyArrayInput` via:
//
//	ActionDependencyArray{ ActionDependencyArgs{...} }
type ActionDependencyArrayInput interface {
	pulumi.Input

	ToActionDependencyArrayOutput() ActionDependencyArrayOutput
	ToActionDependencyArrayOutputWithContext(context.Context) ActionDependencyArrayOutput
}

type ActionDependencyArray []ActionDependencyInput

func (ActionDependencyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionDependency)(nil)).Elem()
}

func (i ActionDependencyArray) ToActionDependencyArrayOutput() ActionDependencyArrayOutput {
	return i.ToActionDependencyArrayOutputWithContext(context.Background())
}

func (i ActionDependencyArray) ToActionDependencyArrayOutputWithContext(ctx context.Context) ActionDependencyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionDependencyArrayOutput)
}

func (i ActionDependencyArray) ToOutput(ctx context.Context) pulumix.Output[[]ActionDependency] {
	return pulumix.Output[[]ActionDependency]{
		OutputState: i.ToActionDependencyArrayOutputWithContext(ctx).OutputState,
	}
}

type ActionDependencyOutput struct{ *pulumi.OutputState }

func (ActionDependencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionDependency)(nil)).Elem()
}

func (o ActionDependencyOutput) ToActionDependencyOutput() ActionDependencyOutput {
	return o
}

func (o ActionDependencyOutput) ToActionDependencyOutputWithContext(ctx context.Context) ActionDependencyOutput {
	return o
}

func (o ActionDependencyOutput) ToOutput(ctx context.Context) pulumix.Output[ActionDependency] {
	return pulumix.Output[ActionDependency]{
		OutputState: o.OutputState,
	}
}

// Dependency name, e.g. `lodash`.
func (o ActionDependencyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ActionDependency) string { return v.Name }).(pulumi.StringOutput)
}

// Dependency version, e.g. `latest` or `4.17.21`.
func (o ActionDependencyOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ActionDependency) string { return v.Version }).(pulumi.StringOutput)
}

type ActionDependencyArrayOutput struct{ *pulumi.OutputState }

func (ActionDependencyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionDependency)(nil)).Elem()
}

func (o ActionDependencyArrayOutput) ToActionDependencyArrayOutput() ActionDependencyArrayOutput {
	return o
}

func (o ActionDependencyArrayOutput) ToActionDependencyArrayOutputWithContext(ctx context.Context) ActionDependencyArrayOutput {
	return o
}

func (o ActionDependencyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ActionDependency] {
	return pulumix.Output[[]ActionDependency]{
		OutputState: o.OutputState,
	}
}

func (o ActionDependencyArrayOutput) Index(i pulumi.IntInput) ActionDependencyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionDependency {
		return vs[0].([]ActionDependency)[vs[1].(int)]
	}).(ActionDependencyOutput)
}

type ActionSecret struct {
	// Secret name.
	Name string `pulumi:"name"`
	// Secret value.
	Value string `pulumi:"value"`
}

// ActionSecretInput is an input type that accepts ActionSecretArgs and ActionSecretOutput values.
// You can construct a concrete instance of `ActionSecretInput` via:
//
//	ActionSecretArgs{...}
type ActionSecretInput interface {
	pulumi.Input

	ToActionSecretOutput() ActionSecretOutput
	ToActionSecretOutputWithContext(context.Context) ActionSecretOutput
}

type ActionSecretArgs struct {
	// Secret name.
	Name pulumi.StringInput `pulumi:"name"`
	// Secret value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ActionSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSecret)(nil)).Elem()
}

func (i ActionSecretArgs) ToActionSecretOutput() ActionSecretOutput {
	return i.ToActionSecretOutputWithContext(context.Background())
}

func (i ActionSecretArgs) ToActionSecretOutputWithContext(ctx context.Context) ActionSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSecretOutput)
}

func (i ActionSecretArgs) ToOutput(ctx context.Context) pulumix.Output[ActionSecret] {
	return pulumix.Output[ActionSecret]{
		OutputState: i.ToActionSecretOutputWithContext(ctx).OutputState,
	}
}

// ActionSecretArrayInput is an input type that accepts ActionSecretArray and ActionSecretArrayOutput values.
// You can construct a concrete instance of `ActionSecretArrayInput` via:
//
//	ActionSecretArray{ ActionSecretArgs{...} }
type ActionSecretArrayInput interface {
	pulumi.Input

	ToActionSecretArrayOutput() ActionSecretArrayOutput
	ToActionSecretArrayOutputWithContext(context.Context) ActionSecretArrayOutput
}

type ActionSecretArray []ActionSecretInput

func (ActionSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionSecret)(nil)).Elem()
}

func (i ActionSecretArray) ToActionSecretArrayOutput() ActionSecretArrayOutput {
	return i.ToActionSecretArrayOutputWithContext(context.Background())
}

func (i ActionSecretArray) ToActionSecretArrayOutputWithContext(ctx context.Context) ActionSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSecretArrayOutput)
}

func (i ActionSecretArray) ToOutput(ctx context.Context) pulumix.Output[[]ActionSecret] {
	return pulumix.Output[[]ActionSecret]{
		OutputState: i.ToActionSecretArrayOutputWithContext(ctx).OutputState,
	}
}

type ActionSecretOutput struct{ *pulumi.OutputState }

func (ActionSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSecret)(nil)).Elem()
}

func (o ActionSecretOutput) ToActionSecretOutput() ActionSecretOutput {
	return o
}

func (o ActionSecretOutput) ToActionSecretOutputWithContext(ctx context.Context) ActionSecretOutput {
	return o
}

func (o ActionSecretOutput) ToOutput(ctx context.Context) pulumix.Output[ActionSecret] {
	return pulumix.Output[ActionSecret]{
		OutputState: o.OutputState,
	}
}

// Secret name.
func (o ActionSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSecret) string { return v.Name }).(pulumi.StringOutput)
}

// Secret value.
func (o ActionSecretOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSecret) string { return v.Value }).(pulumi.StringOutput)
}

type ActionSecretArrayOutput struct{ *pulumi.OutputState }

func (ActionSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionSecret)(nil)).Elem()
}

func (o ActionSecretArrayOutput) ToActionSecretArrayOutput() ActionSecretArrayOutput {
	return o
}

func (o ActionSecretArrayOutput) ToActionSecretArrayOutputWithContext(ctx context.Context) ActionSecretArrayOutput {
	return o
}

func (o ActionSecretArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ActionSecret] {
	return pulumix.Output[[]ActionSecret]{
		OutputState: o.OutputState,
	}
}

func (o ActionSecretArrayOutput) Index(i pulumi.IntInput) ActionSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionSecret {
		return vs[0].([]ActionSecret)[vs[1].(int)]
	}).(ActionSecretOutput)
}

type ActionSupportedTriggers struct {
	// The trigger ID.
	Id string `pulumi:"id"`
	// The trigger version. This regulates which `runtime` versions are supported.
	Version string `pulumi:"version"`
}

// ActionSupportedTriggersInput is an input type that accepts ActionSupportedTriggersArgs and ActionSupportedTriggersOutput values.
// You can construct a concrete instance of `ActionSupportedTriggersInput` via:
//
//	ActionSupportedTriggersArgs{...}
type ActionSupportedTriggersInput interface {
	pulumi.Input

	ToActionSupportedTriggersOutput() ActionSupportedTriggersOutput
	ToActionSupportedTriggersOutputWithContext(context.Context) ActionSupportedTriggersOutput
}

type ActionSupportedTriggersArgs struct {
	// The trigger ID.
	Id pulumi.StringInput `pulumi:"id"`
	// The trigger version. This regulates which `runtime` versions are supported.
	Version pulumi.StringInput `pulumi:"version"`
}

func (ActionSupportedTriggersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSupportedTriggers)(nil)).Elem()
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersOutput() ActionSupportedTriggersOutput {
	return i.ToActionSupportedTriggersOutputWithContext(context.Background())
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersOutputWithContext(ctx context.Context) ActionSupportedTriggersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSupportedTriggersOutput)
}

func (i ActionSupportedTriggersArgs) ToOutput(ctx context.Context) pulumix.Output[ActionSupportedTriggers] {
	return pulumix.Output[ActionSupportedTriggers]{
		OutputState: i.ToActionSupportedTriggersOutputWithContext(ctx).OutputState,
	}
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return i.ToActionSupportedTriggersPtrOutputWithContext(context.Background())
}

func (i ActionSupportedTriggersArgs) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSupportedTriggersOutput).ToActionSupportedTriggersPtrOutputWithContext(ctx)
}

// ActionSupportedTriggersPtrInput is an input type that accepts ActionSupportedTriggersArgs, ActionSupportedTriggersPtr and ActionSupportedTriggersPtrOutput values.
// You can construct a concrete instance of `ActionSupportedTriggersPtrInput` via:
//
//	        ActionSupportedTriggersArgs{...}
//
//	or:
//
//	        nil
type ActionSupportedTriggersPtrInput interface {
	pulumi.Input

	ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput
	ToActionSupportedTriggersPtrOutputWithContext(context.Context) ActionSupportedTriggersPtrOutput
}

type actionSupportedTriggersPtrType ActionSupportedTriggersArgs

func ActionSupportedTriggersPtr(v *ActionSupportedTriggersArgs) ActionSupportedTriggersPtrInput {
	return (*actionSupportedTriggersPtrType)(v)
}

func (*actionSupportedTriggersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionSupportedTriggers)(nil)).Elem()
}

func (i *actionSupportedTriggersPtrType) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return i.ToActionSupportedTriggersPtrOutputWithContext(context.Background())
}

func (i *actionSupportedTriggersPtrType) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionSupportedTriggersPtrOutput)
}

func (i *actionSupportedTriggersPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionSupportedTriggers] {
	return pulumix.Output[*ActionSupportedTriggers]{
		OutputState: i.ToActionSupportedTriggersPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionSupportedTriggersOutput struct{ *pulumi.OutputState }

func (ActionSupportedTriggersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionSupportedTriggers)(nil)).Elem()
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersOutput() ActionSupportedTriggersOutput {
	return o
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersOutputWithContext(ctx context.Context) ActionSupportedTriggersOutput {
	return o
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return o.ToActionSupportedTriggersPtrOutputWithContext(context.Background())
}

func (o ActionSupportedTriggersOutput) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionSupportedTriggers) *ActionSupportedTriggers {
		return &v
	}).(ActionSupportedTriggersPtrOutput)
}

func (o ActionSupportedTriggersOutput) ToOutput(ctx context.Context) pulumix.Output[ActionSupportedTriggers] {
	return pulumix.Output[ActionSupportedTriggers]{
		OutputState: o.OutputState,
	}
}

// The trigger ID.
func (o ActionSupportedTriggersOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSupportedTriggers) string { return v.Id }).(pulumi.StringOutput)
}

// The trigger version. This regulates which `runtime` versions are supported.
func (o ActionSupportedTriggersOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v ActionSupportedTriggers) string { return v.Version }).(pulumi.StringOutput)
}

type ActionSupportedTriggersPtrOutput struct{ *pulumi.OutputState }

func (ActionSupportedTriggersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionSupportedTriggers)(nil)).Elem()
}

func (o ActionSupportedTriggersPtrOutput) ToActionSupportedTriggersPtrOutput() ActionSupportedTriggersPtrOutput {
	return o
}

func (o ActionSupportedTriggersPtrOutput) ToActionSupportedTriggersPtrOutputWithContext(ctx context.Context) ActionSupportedTriggersPtrOutput {
	return o
}

func (o ActionSupportedTriggersPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionSupportedTriggers] {
	return pulumix.Output[*ActionSupportedTriggers]{
		OutputState: o.OutputState,
	}
}

func (o ActionSupportedTriggersPtrOutput) Elem() ActionSupportedTriggersOutput {
	return o.ApplyT(func(v *ActionSupportedTriggers) ActionSupportedTriggers {
		if v != nil {
			return *v
		}
		var ret ActionSupportedTriggers
		return ret
	}).(ActionSupportedTriggersOutput)
}

// The trigger ID.
func (o ActionSupportedTriggersPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionSupportedTriggers) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

// The trigger version. This regulates which `runtime` versions are supported.
func (o ActionSupportedTriggersPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionSupportedTriggers) *string {
		if v == nil {
			return nil
		}
		return &v.Version
	}).(pulumi.StringPtrOutput)
}

type AttackProtectionBreachedPasswordDetection struct {
	// When `adminNotification` is enabled within the `shields` property, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
	AdminNotificationFrequencies []string `pulumi:"adminNotificationFrequencies"`
	// Whether breached password detection is active.
	Enabled bool `pulumi:"enabled"`
	// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
	Method *string `pulumi:"method"`
	// Configuration options that apply before every user registration attempt. Only available on public tenants.
	PreUserRegistration *AttackProtectionBreachedPasswordDetectionPreUserRegistration `pulumi:"preUserRegistration"`
	// Action to take when a breached password is detected. Options include: `block` (block compromised user accounts), `userNotification` (send an email to user when we detect that they are using compromised credentials) and `adminNotification` (send an email with a summary of the number of accounts logging in with compromised credentials).
	Shields []string `pulumi:"shields"`
}

// AttackProtectionBreachedPasswordDetectionInput is an input type that accepts AttackProtectionBreachedPasswordDetectionArgs and AttackProtectionBreachedPasswordDetectionOutput values.
// You can construct a concrete instance of `AttackProtectionBreachedPasswordDetectionInput` via:
//
//	AttackProtectionBreachedPasswordDetectionArgs{...}
type AttackProtectionBreachedPasswordDetectionInput interface {
	pulumi.Input

	ToAttackProtectionBreachedPasswordDetectionOutput() AttackProtectionBreachedPasswordDetectionOutput
	ToAttackProtectionBreachedPasswordDetectionOutputWithContext(context.Context) AttackProtectionBreachedPasswordDetectionOutput
}

type AttackProtectionBreachedPasswordDetectionArgs struct {
	// When `adminNotification` is enabled within the `shields` property, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
	AdminNotificationFrequencies pulumi.StringArrayInput `pulumi:"adminNotificationFrequencies"`
	// Whether breached password detection is active.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Configuration options that apply before every user registration attempt. Only available on public tenants.
	PreUserRegistration AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput `pulumi:"preUserRegistration"`
	// Action to take when a breached password is detected. Options include: `block` (block compromised user accounts), `userNotification` (send an email to user when we detect that they are using compromised credentials) and `adminNotification` (send an email with a summary of the number of accounts logging in with compromised credentials).
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionBreachedPasswordDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionOutput() AttackProtectionBreachedPasswordDetectionOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionOutputWithContext(context.Background())
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionOutput)
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionBreachedPasswordDetection] {
	return pulumix.Output[AttackProtectionBreachedPasswordDetection]{
		OutputState: i.ToAttackProtectionBreachedPasswordDetectionOutputWithContext(ctx).OutputState,
	}
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Background())
}

func (i AttackProtectionBreachedPasswordDetectionArgs) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionOutput).ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx)
}

// AttackProtectionBreachedPasswordDetectionPtrInput is an input type that accepts AttackProtectionBreachedPasswordDetectionArgs, AttackProtectionBreachedPasswordDetectionPtr and AttackProtectionBreachedPasswordDetectionPtrOutput values.
// You can construct a concrete instance of `AttackProtectionBreachedPasswordDetectionPtrInput` via:
//
//	        AttackProtectionBreachedPasswordDetectionArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionBreachedPasswordDetectionPtrInput interface {
	pulumi.Input

	ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput
	ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput
}

type attackProtectionBreachedPasswordDetectionPtrType AttackProtectionBreachedPasswordDetectionArgs

func AttackProtectionBreachedPasswordDetectionPtr(v *AttackProtectionBreachedPasswordDetectionArgs) AttackProtectionBreachedPasswordDetectionPtrInput {
	return (*attackProtectionBreachedPasswordDetectionPtrType)(v)
}

func (*attackProtectionBreachedPasswordDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (i *attackProtectionBreachedPasswordDetectionPtrType) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Background())
}

func (i *attackProtectionBreachedPasswordDetectionPtrType) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionPtrOutput)
}

func (i *attackProtectionBreachedPasswordDetectionPtrType) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionBreachedPasswordDetection] {
	return pulumix.Output[*AttackProtectionBreachedPasswordDetection]{
		OutputState: i.ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx).OutputState,
	}
}

type AttackProtectionBreachedPasswordDetectionOutput struct{ *pulumi.OutputState }

func (AttackProtectionBreachedPasswordDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionOutput() AttackProtectionBreachedPasswordDetectionOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o.ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(context.Background())
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionBreachedPasswordDetection) *AttackProtectionBreachedPasswordDetection {
		return &v
	}).(AttackProtectionBreachedPasswordDetectionPtrOutput)
}

func (o AttackProtectionBreachedPasswordDetectionOutput) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionBreachedPasswordDetection] {
	return pulumix.Output[AttackProtectionBreachedPasswordDetection]{
		OutputState: o.OutputState,
	}
}

// When `adminNotification` is enabled within the `shields` property, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
func (o AttackProtectionBreachedPasswordDetectionOutput) AdminNotificationFrequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) []string { return v.AdminNotificationFrequencies }).(pulumi.StringArrayOutput)
}

// Whether breached password detection is active.
func (o AttackProtectionBreachedPasswordDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
func (o AttackProtectionBreachedPasswordDetectionOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Configuration options that apply before every user registration attempt. Only available on public tenants.
func (o AttackProtectionBreachedPasswordDetectionOutput) PreUserRegistration() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) *AttackProtectionBreachedPasswordDetectionPreUserRegistration {
		return v.PreUserRegistration
	}).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput)
}

// Action to take when a breached password is detected. Options include: `block` (block compromised user accounts), `userNotification` (send an email to user when we detect that they are using compromised credentials) and `adminNotification` (send an email with a summary of the number of accounts logging in with compromised credentials).
func (o AttackProtectionBreachedPasswordDetectionOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetection) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionBreachedPasswordDetectionPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionBreachedPasswordDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (o AttackProtectionBreachedPasswordDetectionPtrOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutput() AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPtrOutput) ToAttackProtectionBreachedPasswordDetectionPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPtrOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionBreachedPasswordDetection] {
	return pulumix.Output[*AttackProtectionBreachedPasswordDetection]{
		OutputState: o.OutputState,
	}
}

func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Elem() AttackProtectionBreachedPasswordDetectionOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) AttackProtectionBreachedPasswordDetection {
		if v != nil {
			return *v
		}
		var ret AttackProtectionBreachedPasswordDetection
		return ret
	}).(AttackProtectionBreachedPasswordDetectionOutput)
}

// When `adminNotification` is enabled within the `shields` property, determines how often email notifications are sent. Possible values: `immediately`, `daily`, `weekly`, `monthly`.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) AdminNotificationFrequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) []string {
		if v == nil {
			return nil
		}
		return v.AdminNotificationFrequencies
	}).(pulumi.StringArrayOutput)
}

// Whether breached password detection is active.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The subscription level for breached password detection methods. Use "enhanced" to enable Credential Guard. Possible values: `standard`, `enhanced`.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Configuration options that apply before every user registration attempt. Only available on public tenants.
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) PreUserRegistration() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) *AttackProtectionBreachedPasswordDetectionPreUserRegistration {
		if v == nil {
			return nil
		}
		return v.PreUserRegistration
	}).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput)
}

// Action to take when a breached password is detected. Options include: `block` (block compromised user accounts), `userNotification` (send an email to user when we detect that they are using compromised credentials) and `adminNotification` (send an email with a summary of the number of accounts logging in with compromised credentials).
func (o AttackProtectionBreachedPasswordDetectionPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetection) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionBreachedPasswordDetectionPreUserRegistration struct {
	Shields []string `pulumi:"shields"`
}

// AttackProtectionBreachedPasswordDetectionPreUserRegistrationInput is an input type that accepts AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs and AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput values.
// You can construct a concrete instance of `AttackProtectionBreachedPasswordDetectionPreUserRegistrationInput` via:
//
//	AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{...}
type AttackProtectionBreachedPasswordDetectionPreUserRegistrationInput interface {
	pulumi.Input

	ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput
	ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput
}

type AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs struct {
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (i AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(context.Background())
}

func (i AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput)
}

func (i AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionBreachedPasswordDetectionPreUserRegistration] {
	return pulumix.Output[AttackProtectionBreachedPasswordDetectionPreUserRegistration]{
		OutputState: i.ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(ctx).OutputState,
	}
}

func (i AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (i AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput).ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx)
}

// AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput is an input type that accepts AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs, AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtr and AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput values.
// You can construct a concrete instance of `AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput` via:
//
//	        AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput interface {
	pulumi.Input

	ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput
	ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput
}

type attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs

func AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtr(v *AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput {
	return (*attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType)(v)
}

func (*attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (i *attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return i.ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (i *attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput)
}

func (i *attackProtectionBreachedPasswordDetectionPreUserRegistrationPtrType) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionBreachedPasswordDetectionPreUserRegistration] {
	return pulumix.Output[*AttackProtectionBreachedPasswordDetectionPreUserRegistration]{
		OutputState: i.ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx).OutputState,
	}
}

type AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput struct{ *pulumi.OutputState }

func (AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o.ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionBreachedPasswordDetectionPreUserRegistration) *AttackProtectionBreachedPasswordDetectionPreUserRegistration {
		return &v
	}).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput)
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionBreachedPasswordDetectionPreUserRegistration] {
	return pulumix.Output[AttackProtectionBreachedPasswordDetectionPreUserRegistration]{
		OutputState: o.OutputState,
	}
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBreachedPasswordDetectionPreUserRegistration) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput() AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) ToAttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput {
	return o
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionBreachedPasswordDetectionPreUserRegistration] {
	return pulumix.Output[*AttackProtectionBreachedPasswordDetectionPreUserRegistration]{
		OutputState: o.OutputState,
	}
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) Elem() AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetectionPreUserRegistration) AttackProtectionBreachedPasswordDetectionPreUserRegistration {
		if v != nil {
			return *v
		}
		var ret AttackProtectionBreachedPasswordDetectionPreUserRegistration
		return ret
	}).(AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput)
}

func (o AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBreachedPasswordDetectionPreUserRegistration) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionBruteForceProtection struct {
	// List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.
	Allowlists []string `pulumi:"allowlists"`
	// Whether brute force attack protections are active.
	Enabled bool `pulumi:"enabled"`
	// Maximum number of consecutive failed login attempts from a single user before blocking is triggered. Only available on public tenants.
	MaxAttempts *int `pulumi:"maxAttempts"`
	// Determines whether the IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` (lockout an account from a given IP Address) or `countPerIdentifier` (lockout an account regardless of IP Address).
	Mode *string `pulumi:"mode"`
	// Action to take when a brute force protection threshold is violated. Possible values: `block` (block login attempts for a flagged user account), `userNotification` (send an email to user when their account has been blocked).
	Shields []string `pulumi:"shields"`
}

// AttackProtectionBruteForceProtectionInput is an input type that accepts AttackProtectionBruteForceProtectionArgs and AttackProtectionBruteForceProtectionOutput values.
// You can construct a concrete instance of `AttackProtectionBruteForceProtectionInput` via:
//
//	AttackProtectionBruteForceProtectionArgs{...}
type AttackProtectionBruteForceProtectionInput interface {
	pulumi.Input

	ToAttackProtectionBruteForceProtectionOutput() AttackProtectionBruteForceProtectionOutput
	ToAttackProtectionBruteForceProtectionOutputWithContext(context.Context) AttackProtectionBruteForceProtectionOutput
}

type AttackProtectionBruteForceProtectionArgs struct {
	// List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.
	Allowlists pulumi.StringArrayInput `pulumi:"allowlists"`
	// Whether brute force attack protections are active.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Maximum number of consecutive failed login attempts from a single user before blocking is triggered. Only available on public tenants.
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	// Determines whether the IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` (lockout an account from a given IP Address) or `countPerIdentifier` (lockout an account regardless of IP Address).
	Mode pulumi.StringPtrInput `pulumi:"mode"`
	// Action to take when a brute force protection threshold is violated. Possible values: `block` (block login attempts for a flagged user account), `userNotification` (send an email to user when their account has been blocked).
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionBruteForceProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionOutput() AttackProtectionBruteForceProtectionOutput {
	return i.ToAttackProtectionBruteForceProtectionOutputWithContext(context.Background())
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBruteForceProtectionOutput)
}

func (i AttackProtectionBruteForceProtectionArgs) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionBruteForceProtection] {
	return pulumix.Output[AttackProtectionBruteForceProtection]{
		OutputState: i.ToAttackProtectionBruteForceProtectionOutputWithContext(ctx).OutputState,
	}
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return i.ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Background())
}

func (i AttackProtectionBruteForceProtectionArgs) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBruteForceProtectionOutput).ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx)
}

// AttackProtectionBruteForceProtectionPtrInput is an input type that accepts AttackProtectionBruteForceProtectionArgs, AttackProtectionBruteForceProtectionPtr and AttackProtectionBruteForceProtectionPtrOutput values.
// You can construct a concrete instance of `AttackProtectionBruteForceProtectionPtrInput` via:
//
//	        AttackProtectionBruteForceProtectionArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionBruteForceProtectionPtrInput interface {
	pulumi.Input

	ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput
	ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Context) AttackProtectionBruteForceProtectionPtrOutput
}

type attackProtectionBruteForceProtectionPtrType AttackProtectionBruteForceProtectionArgs

func AttackProtectionBruteForceProtectionPtr(v *AttackProtectionBruteForceProtectionArgs) AttackProtectionBruteForceProtectionPtrInput {
	return (*attackProtectionBruteForceProtectionPtrType)(v)
}

func (*attackProtectionBruteForceProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (i *attackProtectionBruteForceProtectionPtrType) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return i.ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Background())
}

func (i *attackProtectionBruteForceProtectionPtrType) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionBruteForceProtectionPtrOutput)
}

func (i *attackProtectionBruteForceProtectionPtrType) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionBruteForceProtection] {
	return pulumix.Output[*AttackProtectionBruteForceProtection]{
		OutputState: i.ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx).OutputState,
	}
}

type AttackProtectionBruteForceProtectionOutput struct{ *pulumi.OutputState }

func (AttackProtectionBruteForceProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionOutput() AttackProtectionBruteForceProtectionOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return o.ToAttackProtectionBruteForceProtectionPtrOutputWithContext(context.Background())
}

func (o AttackProtectionBruteForceProtectionOutput) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionBruteForceProtection) *AttackProtectionBruteForceProtection {
		return &v
	}).(AttackProtectionBruteForceProtectionPtrOutput)
}

func (o AttackProtectionBruteForceProtectionOutput) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionBruteForceProtection] {
	return pulumix.Output[AttackProtectionBruteForceProtection]{
		OutputState: o.OutputState,
	}
}

// List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.
func (o AttackProtectionBruteForceProtectionOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) []string { return v.Allowlists }).(pulumi.StringArrayOutput)
}

// Whether brute force attack protections are active.
func (o AttackProtectionBruteForceProtectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Maximum number of consecutive failed login attempts from a single user before blocking is triggered. Only available on public tenants.
func (o AttackProtectionBruteForceProtectionOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

// Determines whether the IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` (lockout an account from a given IP Address) or `countPerIdentifier` (lockout an account regardless of IP Address).
func (o AttackProtectionBruteForceProtectionOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

// Action to take when a brute force protection threshold is violated. Possible values: `block` (block login attempts for a flagged user account), `userNotification` (send an email to user when their account has been blocked).
func (o AttackProtectionBruteForceProtectionOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionBruteForceProtection) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionBruteForceProtectionPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionBruteForceProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionBruteForceProtection)(nil)).Elem()
}

func (o AttackProtectionBruteForceProtectionPtrOutput) ToAttackProtectionBruteForceProtectionPtrOutput() AttackProtectionBruteForceProtectionPtrOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionPtrOutput) ToAttackProtectionBruteForceProtectionPtrOutputWithContext(ctx context.Context) AttackProtectionBruteForceProtectionPtrOutput {
	return o
}

func (o AttackProtectionBruteForceProtectionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionBruteForceProtection] {
	return pulumix.Output[*AttackProtectionBruteForceProtection]{
		OutputState: o.OutputState,
	}
}

func (o AttackProtectionBruteForceProtectionPtrOutput) Elem() AttackProtectionBruteForceProtectionOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) AttackProtectionBruteForceProtection {
		if v != nil {
			return *v
		}
		var ret AttackProtectionBruteForceProtection
		return ret
	}).(AttackProtectionBruteForceProtectionOutput)
}

// List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.
func (o AttackProtectionBruteForceProtectionPtrOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) []string {
		if v == nil {
			return nil
		}
		return v.Allowlists
	}).(pulumi.StringArrayOutput)
}

// Whether brute force attack protections are active.
func (o AttackProtectionBruteForceProtectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of consecutive failed login attempts from a single user before blocking is triggered. Only available on public tenants.
func (o AttackProtectionBruteForceProtectionPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) *int {
		if v == nil {
			return nil
		}
		return v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

// Determines whether the IP address is used when counting failed attempts. Possible values: `countPerIdentifierAndIp` (lockout an account from a given IP Address) or `countPerIdentifier` (lockout an account regardless of IP Address).
func (o AttackProtectionBruteForceProtectionPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

// Action to take when a brute force protection threshold is violated. Possible values: `block` (block login attempts for a flagged user account), `userNotification` (send an email to user when their account has been blocked).
func (o AttackProtectionBruteForceProtectionPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionBruteForceProtection) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionSuspiciousIpThrottling struct {
	// List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.
	Allowlists []string `pulumi:"allowlists"`
	// Whether suspicious IP throttling attack protections are active.
	Enabled bool `pulumi:"enabled"`
	// Configuration options that apply before every login attempt. Only available on public tenants.
	PreLogin *AttackProtectionSuspiciousIpThrottlingPreLogin `pulumi:"preLogin"`
	// Configuration options that apply before every user registration attempt. Only available on public tenants.
	PreUserRegistration *AttackProtectionSuspiciousIpThrottlingPreUserRegistration `pulumi:"preUserRegistration"`
	// Action to take when a suspicious IP throttling threshold is violated. Possible values: `block` (throttle traffic from an IP address when there is a high number of login attempts targeting too many different accounts), `adminNotification` (send an email notification when traffic is throttled on one or more IP addresses due to high-velocity traffic).
	Shields []string `pulumi:"shields"`
}

// AttackProtectionSuspiciousIpThrottlingInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingArgs and AttackProtectionSuspiciousIpThrottlingOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingInput` via:
//
//	AttackProtectionSuspiciousIpThrottlingArgs{...}
type AttackProtectionSuspiciousIpThrottlingInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingOutput() AttackProtectionSuspiciousIpThrottlingOutput
	ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingOutput
}

type AttackProtectionSuspiciousIpThrottlingArgs struct {
	// List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.
	Allowlists pulumi.StringArrayInput `pulumi:"allowlists"`
	// Whether suspicious IP throttling attack protections are active.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Configuration options that apply before every login attempt. Only available on public tenants.
	PreLogin AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput `pulumi:"preLogin"`
	// Configuration options that apply before every user registration attempt. Only available on public tenants.
	PreUserRegistration AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput `pulumi:"preUserRegistration"`
	// Action to take when a suspicious IP throttling threshold is violated. Possible values: `block` (throttle traffic from an IP address when there is a high number of login attempts targeting too many different accounts), `adminNotification` (send an email notification when traffic is throttled on one or more IP addresses due to high-velocity traffic).
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (AttackProtectionSuspiciousIpThrottlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingOutput() AttackProtectionSuspiciousIpThrottlingOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingOutput)
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionSuspiciousIpThrottling] {
	return pulumix.Output[AttackProtectionSuspiciousIpThrottling]{
		OutputState: i.ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(ctx).OutputState,
	}
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingArgs) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingOutput).ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx)
}

// AttackProtectionSuspiciousIpThrottlingPtrInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingArgs, AttackProtectionSuspiciousIpThrottlingPtr and AttackProtectionSuspiciousIpThrottlingPtrOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPtrInput` via:
//
//	        AttackProtectionSuspiciousIpThrottlingArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionSuspiciousIpThrottlingPtrInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput
	ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput
}

type attackProtectionSuspiciousIpThrottlingPtrType AttackProtectionSuspiciousIpThrottlingArgs

func AttackProtectionSuspiciousIpThrottlingPtr(v *AttackProtectionSuspiciousIpThrottlingArgs) AttackProtectionSuspiciousIpThrottlingPtrInput {
	return (*attackProtectionSuspiciousIpThrottlingPtrType)(v)
}

func (*attackProtectionSuspiciousIpThrottlingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (i *attackProtectionSuspiciousIpThrottlingPtrType) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Background())
}

func (i *attackProtectionSuspiciousIpThrottlingPtrType) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPtrOutput)
}

func (i *attackProtectionSuspiciousIpThrottlingPtrType) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionSuspiciousIpThrottling] {
	return pulumix.Output[*AttackProtectionSuspiciousIpThrottling]{
		OutputState: i.ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx).OutputState,
	}
}

type AttackProtectionSuspiciousIpThrottlingOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingOutput() AttackProtectionSuspiciousIpThrottlingOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o.ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(context.Background())
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottling {
		return &v
	}).(AttackProtectionSuspiciousIpThrottlingPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingOutput) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionSuspiciousIpThrottling] {
	return pulumix.Output[AttackProtectionSuspiciousIpThrottling]{
		OutputState: o.OutputState,
	}
}

// List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.
func (o AttackProtectionSuspiciousIpThrottlingOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) []string { return v.Allowlists }).(pulumi.StringArrayOutput)
}

// Whether suspicious IP throttling attack protections are active.
func (o AttackProtectionSuspiciousIpThrottlingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Configuration options that apply before every login attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingOutput) PreLogin() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreLogin {
		return v.PreLogin
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

// Configuration options that apply before every user registration attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingOutput) PreUserRegistration() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		return v.PreUserRegistration
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

// Action to take when a suspicious IP throttling threshold is violated. Possible values: `block` (throttle traffic from an IP address when there is a high number of login attempts targeting too many different accounts), `adminNotification` (send an email notification when traffic is throttled on one or more IP addresses due to high-velocity traffic).
func (o AttackProtectionSuspiciousIpThrottlingOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottling) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type AttackProtectionSuspiciousIpThrottlingPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutput() AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionSuspiciousIpThrottling] {
	return pulumix.Output[*AttackProtectionSuspiciousIpThrottling]{
		OutputState: o.OutputState,
	}
}

func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Elem() AttackProtectionSuspiciousIpThrottlingOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) AttackProtectionSuspiciousIpThrottling {
		if v != nil {
			return *v
		}
		var ret AttackProtectionSuspiciousIpThrottling
		return ret
	}).(AttackProtectionSuspiciousIpThrottlingOutput)
}

// List of trusted IP addresses that will not have attack protection enforced against them. This field allows you to specify multiple IP addresses, or ranges. You can use IPv4 or IPv6 addresses and CIDR notation.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) []string {
		if v == nil {
			return nil
		}
		return v.Allowlists
	}).(pulumi.StringArrayOutput)
}

// Whether suspicious IP throttling attack protections are active.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Configuration options that apply before every login attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) PreLogin() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreLogin {
		if v == nil {
			return nil
		}
		return v.PreLogin
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

// Configuration options that apply before every user registration attempt. Only available on public tenants.
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) PreUserRegistration() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) *AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		if v == nil {
			return nil
		}
		return v.PreUserRegistration
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

// Action to take when a suspicious IP throttling threshold is violated. Possible values: `block` (throttle traffic from an IP address when there is a high number of login attempts targeting too many different accounts), `adminNotification` (send an email notification when traffic is throttled on one or more IP addresses due to high-velocity traffic).
func (o AttackProtectionSuspiciousIpThrottlingPtrOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottling) []string {
		if v == nil {
			return nil
		}
		return v.Shields
	}).(pulumi.StringArrayOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreLogin struct {
	MaxAttempts *int `pulumi:"maxAttempts"`
	Rate        *int `pulumi:"rate"`
}

// AttackProtectionSuspiciousIpThrottlingPreLoginInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreLoginArgs and AttackProtectionSuspiciousIpThrottlingPreLoginOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreLoginInput` via:
//
//	AttackProtectionSuspiciousIpThrottlingPreLoginArgs{...}
type AttackProtectionSuspiciousIpThrottlingPreLoginInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreLoginOutput() AttackProtectionSuspiciousIpThrottlingPreLoginOutput
	ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginOutput
}

type AttackProtectionSuspiciousIpThrottlingPreLoginArgs struct {
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	Rate        pulumi.IntPtrInput `pulumi:"rate"`
}

func (AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutput() AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreLoginOutput)
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionSuspiciousIpThrottlingPreLogin] {
	return pulumix.Output[AttackProtectionSuspiciousIpThrottlingPreLogin]{
		OutputState: i.ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(ctx).OutputState,
	}
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreLoginOutput).ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx)
}

// AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreLoginArgs, AttackProtectionSuspiciousIpThrottlingPreLoginPtr and AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput` via:
//
//	        AttackProtectionSuspiciousIpThrottlingPreLoginArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput
	ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput
}

type attackProtectionSuspiciousIpThrottlingPreLoginPtrType AttackProtectionSuspiciousIpThrottlingPreLoginArgs

func AttackProtectionSuspiciousIpThrottlingPreLoginPtr(v *AttackProtectionSuspiciousIpThrottlingPreLoginArgs) AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput {
	return (*attackProtectionSuspiciousIpThrottlingPreLoginPtrType)(v)
}

func (*attackProtectionSuspiciousIpThrottlingPreLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (i *attackProtectionSuspiciousIpThrottlingPreLoginPtrType) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Background())
}

func (i *attackProtectionSuspiciousIpThrottlingPreLoginPtrType) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

func (i *attackProtectionSuspiciousIpThrottlingPreLoginPtrType) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionSuspiciousIpThrottlingPreLogin] {
	return pulumix.Output[*AttackProtectionSuspiciousIpThrottlingPreLogin]{
		OutputState: i.ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx).OutputState,
	}
}

type AttackProtectionSuspiciousIpThrottlingPreLoginOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutput() AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(context.Background())
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionSuspiciousIpThrottlingPreLogin) *AttackProtectionSuspiciousIpThrottlingPreLogin {
		return &v
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionSuspiciousIpThrottlingPreLogin] {
	return pulumix.Output[AttackProtectionSuspiciousIpThrottlingPreLogin]{
		OutputState: o.OutputState,
	}
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreLogin) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreLogin) *int { return v.Rate }).(pulumi.IntPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput() AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreLoginPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionSuspiciousIpThrottlingPreLogin] {
	return pulumix.Output[*AttackProtectionSuspiciousIpThrottlingPreLogin]{
		OutputState: o.OutputState,
	}
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) Elem() AttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreLogin) AttackProtectionSuspiciousIpThrottlingPreLogin {
		if v != nil {
			return *v
		}
		var ret AttackProtectionSuspiciousIpThrottlingPreLogin
		return ret
	}).(AttackProtectionSuspiciousIpThrottlingPreLoginOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreLogin) *int {
		if v == nil {
			return nil
		}
		return v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreLogin) *int {
		if v == nil {
			return nil
		}
		return v.Rate
	}).(pulumi.IntPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistration struct {
	MaxAttempts *int `pulumi:"maxAttempts"`
	Rate        *int `pulumi:"rate"`
}

// AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs and AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput` via:
//
//	AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{...}
type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput
	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs struct {
	MaxAttempts pulumi.IntPtrInput `pulumi:"maxAttempts"`
	Rate        pulumi.IntPtrInput `pulumi:"rate"`
}

func (AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput)
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionSuspiciousIpThrottlingPreUserRegistration] {
	return pulumix.Output[AttackProtectionSuspiciousIpThrottlingPreUserRegistration]{
		OutputState: i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(ctx).OutputState,
	}
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (i AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput).ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx)
}

// AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput is an input type that accepts AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs, AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtr and AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput values.
// You can construct a concrete instance of `AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput` via:
//
//	        AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{...}
//
//	or:
//
//	        nil
type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput interface {
	pulumi.Input

	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput
	ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput
}

type attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs

func AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtr(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput {
	return (*attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType)(v)
}

func (*attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (i *attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (i *attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

func (i *attackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrType) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionSuspiciousIpThrottlingPreUserRegistration] {
	return pulumix.Output[*AttackProtectionSuspiciousIpThrottlingPreUserRegistration]{
		OutputState: i.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx).OutputState,
	}
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(context.Background())
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		return &v
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToOutput(ctx context.Context) pulumix.Output[AttackProtectionSuspiciousIpThrottlingPreUserRegistration] {
	return pulumix.Output[AttackProtectionSuspiciousIpThrottlingPreUserRegistration]{
		OutputState: o.OutputState,
	}
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int { return v.MaxAttempts }).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int { return v.Rate }).(pulumi.IntPtrOutput)
}

type AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput struct{ *pulumi.OutputState }

func (AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) ToAttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutputWithContext(ctx context.Context) AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput {
	return o
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*AttackProtectionSuspiciousIpThrottlingPreUserRegistration] {
	return pulumix.Output[*AttackProtectionSuspiciousIpThrottlingPreUserRegistration]{
		OutputState: o.OutputState,
	}
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) Elem() AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistration) AttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		if v != nil {
			return *v
		}
		var ret AttackProtectionSuspiciousIpThrottlingPreUserRegistration
		return ret
	}).(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) MaxAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int {
		if v == nil {
			return nil
		}
		return v.MaxAttempts
	}).(pulumi.IntPtrOutput)
}

func (o AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput) Rate() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AttackProtectionSuspiciousIpThrottlingPreUserRegistration) *int {
		if v == nil {
			return nil
		}
		return v.Rate
	}).(pulumi.IntPtrOutput)
}

type BrandingColors struct {
	// Background color of login pages in hexadecimal.
	PageBackground *string `pulumi:"pageBackground"`
	// Primary button background color in hexadecimal.
	Primary *string `pulumi:"primary"`
}

// BrandingColorsInput is an input type that accepts BrandingColorsArgs and BrandingColorsOutput values.
// You can construct a concrete instance of `BrandingColorsInput` via:
//
//	BrandingColorsArgs{...}
type BrandingColorsInput interface {
	pulumi.Input

	ToBrandingColorsOutput() BrandingColorsOutput
	ToBrandingColorsOutputWithContext(context.Context) BrandingColorsOutput
}

type BrandingColorsArgs struct {
	// Background color of login pages in hexadecimal.
	PageBackground pulumi.StringPtrInput `pulumi:"pageBackground"`
	// Primary button background color in hexadecimal.
	Primary pulumi.StringPtrInput `pulumi:"primary"`
}

func (BrandingColorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingColors)(nil)).Elem()
}

func (i BrandingColorsArgs) ToBrandingColorsOutput() BrandingColorsOutput {
	return i.ToBrandingColorsOutputWithContext(context.Background())
}

func (i BrandingColorsArgs) ToBrandingColorsOutputWithContext(ctx context.Context) BrandingColorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingColorsOutput)
}

func (i BrandingColorsArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingColors] {
	return pulumix.Output[BrandingColors]{
		OutputState: i.ToBrandingColorsOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingColorsArgs) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return i.ToBrandingColorsPtrOutputWithContext(context.Background())
}

func (i BrandingColorsArgs) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingColorsOutput).ToBrandingColorsPtrOutputWithContext(ctx)
}

// BrandingColorsPtrInput is an input type that accepts BrandingColorsArgs, BrandingColorsPtr and BrandingColorsPtrOutput values.
// You can construct a concrete instance of `BrandingColorsPtrInput` via:
//
//	        BrandingColorsArgs{...}
//
//	or:
//
//	        nil
type BrandingColorsPtrInput interface {
	pulumi.Input

	ToBrandingColorsPtrOutput() BrandingColorsPtrOutput
	ToBrandingColorsPtrOutputWithContext(context.Context) BrandingColorsPtrOutput
}

type brandingColorsPtrType BrandingColorsArgs

func BrandingColorsPtr(v *BrandingColorsArgs) BrandingColorsPtrInput {
	return (*brandingColorsPtrType)(v)
}

func (*brandingColorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingColors)(nil)).Elem()
}

func (i *brandingColorsPtrType) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return i.ToBrandingColorsPtrOutputWithContext(context.Background())
}

func (i *brandingColorsPtrType) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingColorsPtrOutput)
}

func (i *brandingColorsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingColors] {
	return pulumix.Output[*BrandingColors]{
		OutputState: i.ToBrandingColorsPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingColorsOutput struct{ *pulumi.OutputState }

func (BrandingColorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingColors)(nil)).Elem()
}

func (o BrandingColorsOutput) ToBrandingColorsOutput() BrandingColorsOutput {
	return o
}

func (o BrandingColorsOutput) ToBrandingColorsOutputWithContext(ctx context.Context) BrandingColorsOutput {
	return o
}

func (o BrandingColorsOutput) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return o.ToBrandingColorsPtrOutputWithContext(context.Background())
}

func (o BrandingColorsOutput) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingColors) *BrandingColors {
		return &v
	}).(BrandingColorsPtrOutput)
}

func (o BrandingColorsOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingColors] {
	return pulumix.Output[BrandingColors]{
		OutputState: o.OutputState,
	}
}

// Background color of login pages in hexadecimal.
func (o BrandingColorsOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingColors) *string { return v.PageBackground }).(pulumi.StringPtrOutput)
}

// Primary button background color in hexadecimal.
func (o BrandingColorsOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingColors) *string { return v.Primary }).(pulumi.StringPtrOutput)
}

type BrandingColorsPtrOutput struct{ *pulumi.OutputState }

func (BrandingColorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingColors)(nil)).Elem()
}

func (o BrandingColorsPtrOutput) ToBrandingColorsPtrOutput() BrandingColorsPtrOutput {
	return o
}

func (o BrandingColorsPtrOutput) ToBrandingColorsPtrOutputWithContext(ctx context.Context) BrandingColorsPtrOutput {
	return o
}

func (o BrandingColorsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingColors] {
	return pulumix.Output[*BrandingColors]{
		OutputState: o.OutputState,
	}
}

func (o BrandingColorsPtrOutput) Elem() BrandingColorsOutput {
	return o.ApplyT(func(v *BrandingColors) BrandingColors {
		if v != nil {
			return *v
		}
		var ret BrandingColors
		return ret
	}).(BrandingColorsOutput)
}

// Background color of login pages in hexadecimal.
func (o BrandingColorsPtrOutput) PageBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingColors) *string {
		if v == nil {
			return nil
		}
		return v.PageBackground
	}).(pulumi.StringPtrOutput)
}

// Primary button background color in hexadecimal.
func (o BrandingColorsPtrOutput) Primary() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingColors) *string {
		if v == nil {
			return nil
		}
		return v.Primary
	}).(pulumi.StringPtrOutput)
}

type BrandingFont struct {
	// URL for the custom font.
	Url *string `pulumi:"url"`
}

// BrandingFontInput is an input type that accepts BrandingFontArgs and BrandingFontOutput values.
// You can construct a concrete instance of `BrandingFontInput` via:
//
//	BrandingFontArgs{...}
type BrandingFontInput interface {
	pulumi.Input

	ToBrandingFontOutput() BrandingFontOutput
	ToBrandingFontOutputWithContext(context.Context) BrandingFontOutput
}

type BrandingFontArgs struct {
	// URL for the custom font.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (BrandingFontArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingFont)(nil)).Elem()
}

func (i BrandingFontArgs) ToBrandingFontOutput() BrandingFontOutput {
	return i.ToBrandingFontOutputWithContext(context.Background())
}

func (i BrandingFontArgs) ToBrandingFontOutputWithContext(ctx context.Context) BrandingFontOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingFontOutput)
}

func (i BrandingFontArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingFont] {
	return pulumix.Output[BrandingFont]{
		OutputState: i.ToBrandingFontOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingFontArgs) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return i.ToBrandingFontPtrOutputWithContext(context.Background())
}

func (i BrandingFontArgs) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingFontOutput).ToBrandingFontPtrOutputWithContext(ctx)
}

// BrandingFontPtrInput is an input type that accepts BrandingFontArgs, BrandingFontPtr and BrandingFontPtrOutput values.
// You can construct a concrete instance of `BrandingFontPtrInput` via:
//
//	        BrandingFontArgs{...}
//
//	or:
//
//	        nil
type BrandingFontPtrInput interface {
	pulumi.Input

	ToBrandingFontPtrOutput() BrandingFontPtrOutput
	ToBrandingFontPtrOutputWithContext(context.Context) BrandingFontPtrOutput
}

type brandingFontPtrType BrandingFontArgs

func BrandingFontPtr(v *BrandingFontArgs) BrandingFontPtrInput {
	return (*brandingFontPtrType)(v)
}

func (*brandingFontPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingFont)(nil)).Elem()
}

func (i *brandingFontPtrType) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return i.ToBrandingFontPtrOutputWithContext(context.Background())
}

func (i *brandingFontPtrType) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingFontPtrOutput)
}

func (i *brandingFontPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingFont] {
	return pulumix.Output[*BrandingFont]{
		OutputState: i.ToBrandingFontPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingFontOutput struct{ *pulumi.OutputState }

func (BrandingFontOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingFont)(nil)).Elem()
}

func (o BrandingFontOutput) ToBrandingFontOutput() BrandingFontOutput {
	return o
}

func (o BrandingFontOutput) ToBrandingFontOutputWithContext(ctx context.Context) BrandingFontOutput {
	return o
}

func (o BrandingFontOutput) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return o.ToBrandingFontPtrOutputWithContext(context.Background())
}

func (o BrandingFontOutput) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingFont) *BrandingFont {
		return &v
	}).(BrandingFontPtrOutput)
}

func (o BrandingFontOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingFont] {
	return pulumix.Output[BrandingFont]{
		OutputState: o.OutputState,
	}
}

// URL for the custom font.
func (o BrandingFontOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingFont) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type BrandingFontPtrOutput struct{ *pulumi.OutputState }

func (BrandingFontPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingFont)(nil)).Elem()
}

func (o BrandingFontPtrOutput) ToBrandingFontPtrOutput() BrandingFontPtrOutput {
	return o
}

func (o BrandingFontPtrOutput) ToBrandingFontPtrOutputWithContext(ctx context.Context) BrandingFontPtrOutput {
	return o
}

func (o BrandingFontPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingFont] {
	return pulumix.Output[*BrandingFont]{
		OutputState: o.OutputState,
	}
}

func (o BrandingFontPtrOutput) Elem() BrandingFontOutput {
	return o.ApplyT(func(v *BrandingFont) BrandingFont {
		if v != nil {
			return *v
		}
		var ret BrandingFont
		return ret
	}).(BrandingFontOutput)
}

// URL for the custom font.
func (o BrandingFontPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingFont) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type BrandingThemeBorders struct {
	// Button border radius. Value needs to be between `1` and `10`. Defaults to `3.0`.
	ButtonBorderRadius *float64 `pulumi:"buttonBorderRadius"`
	// Button border weight. Value needs to be between `0` and `10`. Defaults to `1.0`.
	ButtonBorderWeight *float64 `pulumi:"buttonBorderWeight"`
	// Buttons style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
	ButtonsStyle *string `pulumi:"buttonsStyle"`
	// Input border radius. Value needs to be between `0` and `10`. Defaults to `3.0`.
	InputBorderRadius *float64 `pulumi:"inputBorderRadius"`
	// Input border weight. Value needs to be between `0` and `3`. Defaults to `1.0`.
	InputBorderWeight *float64 `pulumi:"inputBorderWeight"`
	// Inputs style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
	InputsStyle *string `pulumi:"inputsStyle"`
	// Show widget shadow. Defaults to `true`.
	ShowWidgetShadow *bool `pulumi:"showWidgetShadow"`
	// Widget border weight. Value needs to be between `0` and `10`. Defaults to `0.0`.
	WidgetBorderWeight *float64 `pulumi:"widgetBorderWeight"`
	// Widget corner radius. Value needs to be between `0` and `50`. Defaults to `5.0`.
	WidgetCornerRadius *float64 `pulumi:"widgetCornerRadius"`
}

// BrandingThemeBordersInput is an input type that accepts BrandingThemeBordersArgs and BrandingThemeBordersOutput values.
// You can construct a concrete instance of `BrandingThemeBordersInput` via:
//
//	BrandingThemeBordersArgs{...}
type BrandingThemeBordersInput interface {
	pulumi.Input

	ToBrandingThemeBordersOutput() BrandingThemeBordersOutput
	ToBrandingThemeBordersOutputWithContext(context.Context) BrandingThemeBordersOutput
}

type BrandingThemeBordersArgs struct {
	// Button border radius. Value needs to be between `1` and `10`. Defaults to `3.0`.
	ButtonBorderRadius pulumi.Float64PtrInput `pulumi:"buttonBorderRadius"`
	// Button border weight. Value needs to be between `0` and `10`. Defaults to `1.0`.
	ButtonBorderWeight pulumi.Float64PtrInput `pulumi:"buttonBorderWeight"`
	// Buttons style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
	ButtonsStyle pulumi.StringPtrInput `pulumi:"buttonsStyle"`
	// Input border radius. Value needs to be between `0` and `10`. Defaults to `3.0`.
	InputBorderRadius pulumi.Float64PtrInput `pulumi:"inputBorderRadius"`
	// Input border weight. Value needs to be between `0` and `3`. Defaults to `1.0`.
	InputBorderWeight pulumi.Float64PtrInput `pulumi:"inputBorderWeight"`
	// Inputs style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
	InputsStyle pulumi.StringPtrInput `pulumi:"inputsStyle"`
	// Show widget shadow. Defaults to `true`.
	ShowWidgetShadow pulumi.BoolPtrInput `pulumi:"showWidgetShadow"`
	// Widget border weight. Value needs to be between `0` and `10`. Defaults to `0.0`.
	WidgetBorderWeight pulumi.Float64PtrInput `pulumi:"widgetBorderWeight"`
	// Widget corner radius. Value needs to be between `0` and `50`. Defaults to `5.0`.
	WidgetCornerRadius pulumi.Float64PtrInput `pulumi:"widgetCornerRadius"`
}

func (BrandingThemeBordersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeBorders)(nil)).Elem()
}

func (i BrandingThemeBordersArgs) ToBrandingThemeBordersOutput() BrandingThemeBordersOutput {
	return i.ToBrandingThemeBordersOutputWithContext(context.Background())
}

func (i BrandingThemeBordersArgs) ToBrandingThemeBordersOutputWithContext(ctx context.Context) BrandingThemeBordersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeBordersOutput)
}

func (i BrandingThemeBordersArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeBorders] {
	return pulumix.Output[BrandingThemeBorders]{
		OutputState: i.ToBrandingThemeBordersOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemeBordersArgs) ToBrandingThemeBordersPtrOutput() BrandingThemeBordersPtrOutput {
	return i.ToBrandingThemeBordersPtrOutputWithContext(context.Background())
}

func (i BrandingThemeBordersArgs) ToBrandingThemeBordersPtrOutputWithContext(ctx context.Context) BrandingThemeBordersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeBordersOutput).ToBrandingThemeBordersPtrOutputWithContext(ctx)
}

// BrandingThemeBordersPtrInput is an input type that accepts BrandingThemeBordersArgs, BrandingThemeBordersPtr and BrandingThemeBordersPtrOutput values.
// You can construct a concrete instance of `BrandingThemeBordersPtrInput` via:
//
//	        BrandingThemeBordersArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeBordersPtrInput interface {
	pulumi.Input

	ToBrandingThemeBordersPtrOutput() BrandingThemeBordersPtrOutput
	ToBrandingThemeBordersPtrOutputWithContext(context.Context) BrandingThemeBordersPtrOutput
}

type brandingThemeBordersPtrType BrandingThemeBordersArgs

func BrandingThemeBordersPtr(v *BrandingThemeBordersArgs) BrandingThemeBordersPtrInput {
	return (*brandingThemeBordersPtrType)(v)
}

func (*brandingThemeBordersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeBorders)(nil)).Elem()
}

func (i *brandingThemeBordersPtrType) ToBrandingThemeBordersPtrOutput() BrandingThemeBordersPtrOutput {
	return i.ToBrandingThemeBordersPtrOutputWithContext(context.Background())
}

func (i *brandingThemeBordersPtrType) ToBrandingThemeBordersPtrOutputWithContext(ctx context.Context) BrandingThemeBordersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeBordersPtrOutput)
}

func (i *brandingThemeBordersPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeBorders] {
	return pulumix.Output[*BrandingThemeBorders]{
		OutputState: i.ToBrandingThemeBordersPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemeBordersOutput struct{ *pulumi.OutputState }

func (BrandingThemeBordersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeBorders)(nil)).Elem()
}

func (o BrandingThemeBordersOutput) ToBrandingThemeBordersOutput() BrandingThemeBordersOutput {
	return o
}

func (o BrandingThemeBordersOutput) ToBrandingThemeBordersOutputWithContext(ctx context.Context) BrandingThemeBordersOutput {
	return o
}

func (o BrandingThemeBordersOutput) ToBrandingThemeBordersPtrOutput() BrandingThemeBordersPtrOutput {
	return o.ToBrandingThemeBordersPtrOutputWithContext(context.Background())
}

func (o BrandingThemeBordersOutput) ToBrandingThemeBordersPtrOutputWithContext(ctx context.Context) BrandingThemeBordersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeBorders) *BrandingThemeBorders {
		return &v
	}).(BrandingThemeBordersPtrOutput)
}

func (o BrandingThemeBordersOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeBorders] {
	return pulumix.Output[BrandingThemeBorders]{
		OutputState: o.OutputState,
	}
}

// Button border radius. Value needs to be between `1` and `10`. Defaults to `3.0`.
func (o BrandingThemeBordersOutput) ButtonBorderRadius() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeBorders) *float64 { return v.ButtonBorderRadius }).(pulumi.Float64PtrOutput)
}

// Button border weight. Value needs to be between `0` and `10`. Defaults to `1.0`.
func (o BrandingThemeBordersOutput) ButtonBorderWeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeBorders) *float64 { return v.ButtonBorderWeight }).(pulumi.Float64PtrOutput)
}

// Buttons style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
func (o BrandingThemeBordersOutput) ButtonsStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeBorders) *string { return v.ButtonsStyle }).(pulumi.StringPtrOutput)
}

// Input border radius. Value needs to be between `0` and `10`. Defaults to `3.0`.
func (o BrandingThemeBordersOutput) InputBorderRadius() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeBorders) *float64 { return v.InputBorderRadius }).(pulumi.Float64PtrOutput)
}

// Input border weight. Value needs to be between `0` and `3`. Defaults to `1.0`.
func (o BrandingThemeBordersOutput) InputBorderWeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeBorders) *float64 { return v.InputBorderWeight }).(pulumi.Float64PtrOutput)
}

// Inputs style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
func (o BrandingThemeBordersOutput) InputsStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeBorders) *string { return v.InputsStyle }).(pulumi.StringPtrOutput)
}

// Show widget shadow. Defaults to `true`.
func (o BrandingThemeBordersOutput) ShowWidgetShadow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrandingThemeBorders) *bool { return v.ShowWidgetShadow }).(pulumi.BoolPtrOutput)
}

// Widget border weight. Value needs to be between `0` and `10`. Defaults to `0.0`.
func (o BrandingThemeBordersOutput) WidgetBorderWeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeBorders) *float64 { return v.WidgetBorderWeight }).(pulumi.Float64PtrOutput)
}

// Widget corner radius. Value needs to be between `0` and `50`. Defaults to `5.0`.
func (o BrandingThemeBordersOutput) WidgetCornerRadius() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeBorders) *float64 { return v.WidgetCornerRadius }).(pulumi.Float64PtrOutput)
}

type BrandingThemeBordersPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeBordersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeBorders)(nil)).Elem()
}

func (o BrandingThemeBordersPtrOutput) ToBrandingThemeBordersPtrOutput() BrandingThemeBordersPtrOutput {
	return o
}

func (o BrandingThemeBordersPtrOutput) ToBrandingThemeBordersPtrOutputWithContext(ctx context.Context) BrandingThemeBordersPtrOutput {
	return o
}

func (o BrandingThemeBordersPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeBorders] {
	return pulumix.Output[*BrandingThemeBorders]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeBordersPtrOutput) Elem() BrandingThemeBordersOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) BrandingThemeBorders {
		if v != nil {
			return *v
		}
		var ret BrandingThemeBorders
		return ret
	}).(BrandingThemeBordersOutput)
}

// Button border radius. Value needs to be between `1` and `10`. Defaults to `3.0`.
func (o BrandingThemeBordersPtrOutput) ButtonBorderRadius() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return v.ButtonBorderRadius
	}).(pulumi.Float64PtrOutput)
}

// Button border weight. Value needs to be between `0` and `10`. Defaults to `1.0`.
func (o BrandingThemeBordersPtrOutput) ButtonBorderWeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return v.ButtonBorderWeight
	}).(pulumi.Float64PtrOutput)
}

// Buttons style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
func (o BrandingThemeBordersPtrOutput) ButtonsStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *string {
		if v == nil {
			return nil
		}
		return v.ButtonsStyle
	}).(pulumi.StringPtrOutput)
}

// Input border radius. Value needs to be between `0` and `10`. Defaults to `3.0`.
func (o BrandingThemeBordersPtrOutput) InputBorderRadius() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return v.InputBorderRadius
	}).(pulumi.Float64PtrOutput)
}

// Input border weight. Value needs to be between `0` and `3`. Defaults to `1.0`.
func (o BrandingThemeBordersPtrOutput) InputBorderWeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return v.InputBorderWeight
	}).(pulumi.Float64PtrOutput)
}

// Inputs style. Available options: `pill`, `rounded`, `sharp`. Defaults to `rounded`.
func (o BrandingThemeBordersPtrOutput) InputsStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *string {
		if v == nil {
			return nil
		}
		return v.InputsStyle
	}).(pulumi.StringPtrOutput)
}

// Show widget shadow. Defaults to `true`.
func (o BrandingThemeBordersPtrOutput) ShowWidgetShadow() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *bool {
		if v == nil {
			return nil
		}
		return v.ShowWidgetShadow
	}).(pulumi.BoolPtrOutput)
}

// Widget border weight. Value needs to be between `0` and `10`. Defaults to `0.0`.
func (o BrandingThemeBordersPtrOutput) WidgetBorderWeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return v.WidgetBorderWeight
	}).(pulumi.Float64PtrOutput)
}

// Widget corner radius. Value needs to be between `0` and `50`. Defaults to `5.0`.
func (o BrandingThemeBordersPtrOutput) WidgetCornerRadius() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeBorders) *float64 {
		if v == nil {
			return nil
		}
		return v.WidgetCornerRadius
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeColors struct {
	// Base focus color. Defaults to `#635dff`.
	BaseFocusColor *string `pulumi:"baseFocusColor"`
	// Base hover color. Defaults to `#000000`.
	BaseHoverColor *string `pulumi:"baseHoverColor"`
	// Body text. Defaults to `#1e212a`.
	BodyText *string `pulumi:"bodyText"`
	// Error. Defaults to `#d03c38`.
	Error *string `pulumi:"error"`
	// Header. Defaults to `#1e212a`.
	Header *string `pulumi:"header"`
	// Icons. Defaults to `#65676e`.
	Icons *string `pulumi:"icons"`
	// Input background. Defaults to `#ffffff`.
	InputBackground *string `pulumi:"inputBackground"`
	// Input border. Defaults to `#c9cace`.
	InputBorder *string `pulumi:"inputBorder"`
	// Input filled text. Defaults to `#000000`.
	InputFilledText *string `pulumi:"inputFilledText"`
	// Input labels & placeholders. Defaults to `#65676e`.
	InputLabelsPlaceholders *string `pulumi:"inputLabelsPlaceholders"`
	// Links & focused components. Defaults to `#635dff`.
	LinksFocusedComponents *string `pulumi:"linksFocusedComponents"`
	// Primary button. Defaults to `#635dff`.
	PrimaryButton *string `pulumi:"primaryButton"`
	// Primary button label. Defaults to `#ffffff`.
	PrimaryButtonLabel *string `pulumi:"primaryButtonLabel"`
	// Secondary button border. Defaults to `#c9cace`.
	SecondaryButtonBorder *string `pulumi:"secondaryButtonBorder"`
	// Secondary button label. Defaults to `#1e212a`.
	SecondaryButtonLabel *string `pulumi:"secondaryButtonLabel"`
	// Success. Defaults to `#13a688`.
	Success *string `pulumi:"success"`
	// Widget background. Defaults to `#ffffff`.
	WidgetBackground *string `pulumi:"widgetBackground"`
	// Widget border. Defaults to `#c9cace`.
	WidgetBorder *string `pulumi:"widgetBorder"`
}

// BrandingThemeColorsInput is an input type that accepts BrandingThemeColorsArgs and BrandingThemeColorsOutput values.
// You can construct a concrete instance of `BrandingThemeColorsInput` via:
//
//	BrandingThemeColorsArgs{...}
type BrandingThemeColorsInput interface {
	pulumi.Input

	ToBrandingThemeColorsOutput() BrandingThemeColorsOutput
	ToBrandingThemeColorsOutputWithContext(context.Context) BrandingThemeColorsOutput
}

type BrandingThemeColorsArgs struct {
	// Base focus color. Defaults to `#635dff`.
	BaseFocusColor pulumi.StringPtrInput `pulumi:"baseFocusColor"`
	// Base hover color. Defaults to `#000000`.
	BaseHoverColor pulumi.StringPtrInput `pulumi:"baseHoverColor"`
	// Body text. Defaults to `#1e212a`.
	BodyText pulumi.StringPtrInput `pulumi:"bodyText"`
	// Error. Defaults to `#d03c38`.
	Error pulumi.StringPtrInput `pulumi:"error"`
	// Header. Defaults to `#1e212a`.
	Header pulumi.StringPtrInput `pulumi:"header"`
	// Icons. Defaults to `#65676e`.
	Icons pulumi.StringPtrInput `pulumi:"icons"`
	// Input background. Defaults to `#ffffff`.
	InputBackground pulumi.StringPtrInput `pulumi:"inputBackground"`
	// Input border. Defaults to `#c9cace`.
	InputBorder pulumi.StringPtrInput `pulumi:"inputBorder"`
	// Input filled text. Defaults to `#000000`.
	InputFilledText pulumi.StringPtrInput `pulumi:"inputFilledText"`
	// Input labels & placeholders. Defaults to `#65676e`.
	InputLabelsPlaceholders pulumi.StringPtrInput `pulumi:"inputLabelsPlaceholders"`
	// Links & focused components. Defaults to `#635dff`.
	LinksFocusedComponents pulumi.StringPtrInput `pulumi:"linksFocusedComponents"`
	// Primary button. Defaults to `#635dff`.
	PrimaryButton pulumi.StringPtrInput `pulumi:"primaryButton"`
	// Primary button label. Defaults to `#ffffff`.
	PrimaryButtonLabel pulumi.StringPtrInput `pulumi:"primaryButtonLabel"`
	// Secondary button border. Defaults to `#c9cace`.
	SecondaryButtonBorder pulumi.StringPtrInput `pulumi:"secondaryButtonBorder"`
	// Secondary button label. Defaults to `#1e212a`.
	SecondaryButtonLabel pulumi.StringPtrInput `pulumi:"secondaryButtonLabel"`
	// Success. Defaults to `#13a688`.
	Success pulumi.StringPtrInput `pulumi:"success"`
	// Widget background. Defaults to `#ffffff`.
	WidgetBackground pulumi.StringPtrInput `pulumi:"widgetBackground"`
	// Widget border. Defaults to `#c9cace`.
	WidgetBorder pulumi.StringPtrInput `pulumi:"widgetBorder"`
}

func (BrandingThemeColorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeColors)(nil)).Elem()
}

func (i BrandingThemeColorsArgs) ToBrandingThemeColorsOutput() BrandingThemeColorsOutput {
	return i.ToBrandingThemeColorsOutputWithContext(context.Background())
}

func (i BrandingThemeColorsArgs) ToBrandingThemeColorsOutputWithContext(ctx context.Context) BrandingThemeColorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeColorsOutput)
}

func (i BrandingThemeColorsArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeColors] {
	return pulumix.Output[BrandingThemeColors]{
		OutputState: i.ToBrandingThemeColorsOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemeColorsArgs) ToBrandingThemeColorsPtrOutput() BrandingThemeColorsPtrOutput {
	return i.ToBrandingThemeColorsPtrOutputWithContext(context.Background())
}

func (i BrandingThemeColorsArgs) ToBrandingThemeColorsPtrOutputWithContext(ctx context.Context) BrandingThemeColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeColorsOutput).ToBrandingThemeColorsPtrOutputWithContext(ctx)
}

// BrandingThemeColorsPtrInput is an input type that accepts BrandingThemeColorsArgs, BrandingThemeColorsPtr and BrandingThemeColorsPtrOutput values.
// You can construct a concrete instance of `BrandingThemeColorsPtrInput` via:
//
//	        BrandingThemeColorsArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeColorsPtrInput interface {
	pulumi.Input

	ToBrandingThemeColorsPtrOutput() BrandingThemeColorsPtrOutput
	ToBrandingThemeColorsPtrOutputWithContext(context.Context) BrandingThemeColorsPtrOutput
}

type brandingThemeColorsPtrType BrandingThemeColorsArgs

func BrandingThemeColorsPtr(v *BrandingThemeColorsArgs) BrandingThemeColorsPtrInput {
	return (*brandingThemeColorsPtrType)(v)
}

func (*brandingThemeColorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeColors)(nil)).Elem()
}

func (i *brandingThemeColorsPtrType) ToBrandingThemeColorsPtrOutput() BrandingThemeColorsPtrOutput {
	return i.ToBrandingThemeColorsPtrOutputWithContext(context.Background())
}

func (i *brandingThemeColorsPtrType) ToBrandingThemeColorsPtrOutputWithContext(ctx context.Context) BrandingThemeColorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeColorsPtrOutput)
}

func (i *brandingThemeColorsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeColors] {
	return pulumix.Output[*BrandingThemeColors]{
		OutputState: i.ToBrandingThemeColorsPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemeColorsOutput struct{ *pulumi.OutputState }

func (BrandingThemeColorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeColors)(nil)).Elem()
}

func (o BrandingThemeColorsOutput) ToBrandingThemeColorsOutput() BrandingThemeColorsOutput {
	return o
}

func (o BrandingThemeColorsOutput) ToBrandingThemeColorsOutputWithContext(ctx context.Context) BrandingThemeColorsOutput {
	return o
}

func (o BrandingThemeColorsOutput) ToBrandingThemeColorsPtrOutput() BrandingThemeColorsPtrOutput {
	return o.ToBrandingThemeColorsPtrOutputWithContext(context.Background())
}

func (o BrandingThemeColorsOutput) ToBrandingThemeColorsPtrOutputWithContext(ctx context.Context) BrandingThemeColorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeColors) *BrandingThemeColors {
		return &v
	}).(BrandingThemeColorsPtrOutput)
}

func (o BrandingThemeColorsOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeColors] {
	return pulumix.Output[BrandingThemeColors]{
		OutputState: o.OutputState,
	}
}

// Base focus color. Defaults to `#635dff`.
func (o BrandingThemeColorsOutput) BaseFocusColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.BaseFocusColor }).(pulumi.StringPtrOutput)
}

// Base hover color. Defaults to `#000000`.
func (o BrandingThemeColorsOutput) BaseHoverColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.BaseHoverColor }).(pulumi.StringPtrOutput)
}

// Body text. Defaults to `#1e212a`.
func (o BrandingThemeColorsOutput) BodyText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.BodyText }).(pulumi.StringPtrOutput)
}

// Error. Defaults to `#d03c38`.
func (o BrandingThemeColorsOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.Error }).(pulumi.StringPtrOutput)
}

// Header. Defaults to `#1e212a`.
func (o BrandingThemeColorsOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.Header }).(pulumi.StringPtrOutput)
}

// Icons. Defaults to `#65676e`.
func (o BrandingThemeColorsOutput) Icons() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.Icons }).(pulumi.StringPtrOutput)
}

// Input background. Defaults to `#ffffff`.
func (o BrandingThemeColorsOutput) InputBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.InputBackground }).(pulumi.StringPtrOutput)
}

// Input border. Defaults to `#c9cace`.
func (o BrandingThemeColorsOutput) InputBorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.InputBorder }).(pulumi.StringPtrOutput)
}

// Input filled text. Defaults to `#000000`.
func (o BrandingThemeColorsOutput) InputFilledText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.InputFilledText }).(pulumi.StringPtrOutput)
}

// Input labels & placeholders. Defaults to `#65676e`.
func (o BrandingThemeColorsOutput) InputLabelsPlaceholders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.InputLabelsPlaceholders }).(pulumi.StringPtrOutput)
}

// Links & focused components. Defaults to `#635dff`.
func (o BrandingThemeColorsOutput) LinksFocusedComponents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.LinksFocusedComponents }).(pulumi.StringPtrOutput)
}

// Primary button. Defaults to `#635dff`.
func (o BrandingThemeColorsOutput) PrimaryButton() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.PrimaryButton }).(pulumi.StringPtrOutput)
}

// Primary button label. Defaults to `#ffffff`.
func (o BrandingThemeColorsOutput) PrimaryButtonLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.PrimaryButtonLabel }).(pulumi.StringPtrOutput)
}

// Secondary button border. Defaults to `#c9cace`.
func (o BrandingThemeColorsOutput) SecondaryButtonBorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.SecondaryButtonBorder }).(pulumi.StringPtrOutput)
}

// Secondary button label. Defaults to `#1e212a`.
func (o BrandingThemeColorsOutput) SecondaryButtonLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.SecondaryButtonLabel }).(pulumi.StringPtrOutput)
}

// Success. Defaults to `#13a688`.
func (o BrandingThemeColorsOutput) Success() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.Success }).(pulumi.StringPtrOutput)
}

// Widget background. Defaults to `#ffffff`.
func (o BrandingThemeColorsOutput) WidgetBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.WidgetBackground }).(pulumi.StringPtrOutput)
}

// Widget border. Defaults to `#c9cace`.
func (o BrandingThemeColorsOutput) WidgetBorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeColors) *string { return v.WidgetBorder }).(pulumi.StringPtrOutput)
}

type BrandingThemeColorsPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeColorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeColors)(nil)).Elem()
}

func (o BrandingThemeColorsPtrOutput) ToBrandingThemeColorsPtrOutput() BrandingThemeColorsPtrOutput {
	return o
}

func (o BrandingThemeColorsPtrOutput) ToBrandingThemeColorsPtrOutputWithContext(ctx context.Context) BrandingThemeColorsPtrOutput {
	return o
}

func (o BrandingThemeColorsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeColors] {
	return pulumix.Output[*BrandingThemeColors]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeColorsPtrOutput) Elem() BrandingThemeColorsOutput {
	return o.ApplyT(func(v *BrandingThemeColors) BrandingThemeColors {
		if v != nil {
			return *v
		}
		var ret BrandingThemeColors
		return ret
	}).(BrandingThemeColorsOutput)
}

// Base focus color. Defaults to `#635dff`.
func (o BrandingThemeColorsPtrOutput) BaseFocusColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.BaseFocusColor
	}).(pulumi.StringPtrOutput)
}

// Base hover color. Defaults to `#000000`.
func (o BrandingThemeColorsPtrOutput) BaseHoverColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.BaseHoverColor
	}).(pulumi.StringPtrOutput)
}

// Body text. Defaults to `#1e212a`.
func (o BrandingThemeColorsPtrOutput) BodyText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.BodyText
	}).(pulumi.StringPtrOutput)
}

// Error. Defaults to `#d03c38`.
func (o BrandingThemeColorsPtrOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.Error
	}).(pulumi.StringPtrOutput)
}

// Header. Defaults to `#1e212a`.
func (o BrandingThemeColorsPtrOutput) Header() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.Header
	}).(pulumi.StringPtrOutput)
}

// Icons. Defaults to `#65676e`.
func (o BrandingThemeColorsPtrOutput) Icons() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.Icons
	}).(pulumi.StringPtrOutput)
}

// Input background. Defaults to `#ffffff`.
func (o BrandingThemeColorsPtrOutput) InputBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.InputBackground
	}).(pulumi.StringPtrOutput)
}

// Input border. Defaults to `#c9cace`.
func (o BrandingThemeColorsPtrOutput) InputBorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.InputBorder
	}).(pulumi.StringPtrOutput)
}

// Input filled text. Defaults to `#000000`.
func (o BrandingThemeColorsPtrOutput) InputFilledText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.InputFilledText
	}).(pulumi.StringPtrOutput)
}

// Input labels & placeholders. Defaults to `#65676e`.
func (o BrandingThemeColorsPtrOutput) InputLabelsPlaceholders() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.InputLabelsPlaceholders
	}).(pulumi.StringPtrOutput)
}

// Links & focused components. Defaults to `#635dff`.
func (o BrandingThemeColorsPtrOutput) LinksFocusedComponents() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.LinksFocusedComponents
	}).(pulumi.StringPtrOutput)
}

// Primary button. Defaults to `#635dff`.
func (o BrandingThemeColorsPtrOutput) PrimaryButton() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryButton
	}).(pulumi.StringPtrOutput)
}

// Primary button label. Defaults to `#ffffff`.
func (o BrandingThemeColorsPtrOutput) PrimaryButtonLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.PrimaryButtonLabel
	}).(pulumi.StringPtrOutput)
}

// Secondary button border. Defaults to `#c9cace`.
func (o BrandingThemeColorsPtrOutput) SecondaryButtonBorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryButtonBorder
	}).(pulumi.StringPtrOutput)
}

// Secondary button label. Defaults to `#1e212a`.
func (o BrandingThemeColorsPtrOutput) SecondaryButtonLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.SecondaryButtonLabel
	}).(pulumi.StringPtrOutput)
}

// Success. Defaults to `#13a688`.
func (o BrandingThemeColorsPtrOutput) Success() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.Success
	}).(pulumi.StringPtrOutput)
}

// Widget background. Defaults to `#ffffff`.
func (o BrandingThemeColorsPtrOutput) WidgetBackground() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.WidgetBackground
	}).(pulumi.StringPtrOutput)
}

// Widget border. Defaults to `#c9cace`.
func (o BrandingThemeColorsPtrOutput) WidgetBorder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeColors) *string {
		if v == nil {
			return nil
		}
		return v.WidgetBorder
	}).(pulumi.StringPtrOutput)
}

type BrandingThemeFonts struct {
	// Body text.
	BodyText BrandingThemeFontsBodyText `pulumi:"bodyText"`
	// Buttons text.
	ButtonsText BrandingThemeFontsButtonsText `pulumi:"buttonsText"`
	// Font URL. Defaults to an empty string.
	FontUrl *string `pulumi:"fontUrl"`
	// Input labels.
	InputLabels BrandingThemeFontsInputLabels `pulumi:"inputLabels"`
	// Links.
	Links BrandingThemeFontsLinks `pulumi:"links"`
	// Links style. Defaults to `normal`.
	LinksStyle *string `pulumi:"linksStyle"`
	// Reference text size. Value needs to be between `12` and `24`. Defaults to `16.0`.
	ReferenceTextSize *float64 `pulumi:"referenceTextSize"`
	// Subtitle.
	Subtitle BrandingThemeFontsSubtitle `pulumi:"subtitle"`
	// Title.
	Title BrandingThemeFontsTitle `pulumi:"title"`
}

// BrandingThemeFontsInput is an input type that accepts BrandingThemeFontsArgs and BrandingThemeFontsOutput values.
// You can construct a concrete instance of `BrandingThemeFontsInput` via:
//
//	BrandingThemeFontsArgs{...}
type BrandingThemeFontsInput interface {
	pulumi.Input

	ToBrandingThemeFontsOutput() BrandingThemeFontsOutput
	ToBrandingThemeFontsOutputWithContext(context.Context) BrandingThemeFontsOutput
}

type BrandingThemeFontsArgs struct {
	// Body text.
	BodyText BrandingThemeFontsBodyTextInput `pulumi:"bodyText"`
	// Buttons text.
	ButtonsText BrandingThemeFontsButtonsTextInput `pulumi:"buttonsText"`
	// Font URL. Defaults to an empty string.
	FontUrl pulumi.StringPtrInput `pulumi:"fontUrl"`
	// Input labels.
	InputLabels BrandingThemeFontsInputLabelsInput `pulumi:"inputLabels"`
	// Links.
	Links BrandingThemeFontsLinksInput `pulumi:"links"`
	// Links style. Defaults to `normal`.
	LinksStyle pulumi.StringPtrInput `pulumi:"linksStyle"`
	// Reference text size. Value needs to be between `12` and `24`. Defaults to `16.0`.
	ReferenceTextSize pulumi.Float64PtrInput `pulumi:"referenceTextSize"`
	// Subtitle.
	Subtitle BrandingThemeFontsSubtitleInput `pulumi:"subtitle"`
	// Title.
	Title BrandingThemeFontsTitleInput `pulumi:"title"`
}

func (BrandingThemeFontsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFonts)(nil)).Elem()
}

func (i BrandingThemeFontsArgs) ToBrandingThemeFontsOutput() BrandingThemeFontsOutput {
	return i.ToBrandingThemeFontsOutputWithContext(context.Background())
}

func (i BrandingThemeFontsArgs) ToBrandingThemeFontsOutputWithContext(ctx context.Context) BrandingThemeFontsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsOutput)
}

func (i BrandingThemeFontsArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFonts] {
	return pulumix.Output[BrandingThemeFonts]{
		OutputState: i.ToBrandingThemeFontsOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemeFontsArgs) ToBrandingThemeFontsPtrOutput() BrandingThemeFontsPtrOutput {
	return i.ToBrandingThemeFontsPtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsArgs) ToBrandingThemeFontsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsOutput).ToBrandingThemeFontsPtrOutputWithContext(ctx)
}

// BrandingThemeFontsPtrInput is an input type that accepts BrandingThemeFontsArgs, BrandingThemeFontsPtr and BrandingThemeFontsPtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsPtrInput` via:
//
//	        BrandingThemeFontsArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsPtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsPtrOutput() BrandingThemeFontsPtrOutput
	ToBrandingThemeFontsPtrOutputWithContext(context.Context) BrandingThemeFontsPtrOutput
}

type brandingThemeFontsPtrType BrandingThemeFontsArgs

func BrandingThemeFontsPtr(v *BrandingThemeFontsArgs) BrandingThemeFontsPtrInput {
	return (*brandingThemeFontsPtrType)(v)
}

func (*brandingThemeFontsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFonts)(nil)).Elem()
}

func (i *brandingThemeFontsPtrType) ToBrandingThemeFontsPtrOutput() BrandingThemeFontsPtrOutput {
	return i.ToBrandingThemeFontsPtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsPtrType) ToBrandingThemeFontsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsPtrOutput)
}

func (i *brandingThemeFontsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFonts] {
	return pulumix.Output[*BrandingThemeFonts]{
		OutputState: i.ToBrandingThemeFontsPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemeFontsOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFonts)(nil)).Elem()
}

func (o BrandingThemeFontsOutput) ToBrandingThemeFontsOutput() BrandingThemeFontsOutput {
	return o
}

func (o BrandingThemeFontsOutput) ToBrandingThemeFontsOutputWithContext(ctx context.Context) BrandingThemeFontsOutput {
	return o
}

func (o BrandingThemeFontsOutput) ToBrandingThemeFontsPtrOutput() BrandingThemeFontsPtrOutput {
	return o.ToBrandingThemeFontsPtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsOutput) ToBrandingThemeFontsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFonts) *BrandingThemeFonts {
		return &v
	}).(BrandingThemeFontsPtrOutput)
}

func (o BrandingThemeFontsOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFonts] {
	return pulumix.Output[BrandingThemeFonts]{
		OutputState: o.OutputState,
	}
}

// Body text.
func (o BrandingThemeFontsOutput) BodyText() BrandingThemeFontsBodyTextOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsBodyText { return v.BodyText }).(BrandingThemeFontsBodyTextOutput)
}

// Buttons text.
func (o BrandingThemeFontsOutput) ButtonsText() BrandingThemeFontsButtonsTextOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsButtonsText { return v.ButtonsText }).(BrandingThemeFontsButtonsTextOutput)
}

// Font URL. Defaults to an empty string.
func (o BrandingThemeFontsOutput) FontUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeFonts) *string { return v.FontUrl }).(pulumi.StringPtrOutput)
}

// Input labels.
func (o BrandingThemeFontsOutput) InputLabels() BrandingThemeFontsInputLabelsOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsInputLabels { return v.InputLabels }).(BrandingThemeFontsInputLabelsOutput)
}

// Links.
func (o BrandingThemeFontsOutput) Links() BrandingThemeFontsLinksOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsLinks { return v.Links }).(BrandingThemeFontsLinksOutput)
}

// Links style. Defaults to `normal`.
func (o BrandingThemeFontsOutput) LinksStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeFonts) *string { return v.LinksStyle }).(pulumi.StringPtrOutput)
}

// Reference text size. Value needs to be between `12` and `24`. Defaults to `16.0`.
func (o BrandingThemeFontsOutput) ReferenceTextSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeFonts) *float64 { return v.ReferenceTextSize }).(pulumi.Float64PtrOutput)
}

// Subtitle.
func (o BrandingThemeFontsOutput) Subtitle() BrandingThemeFontsSubtitleOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsSubtitle { return v.Subtitle }).(BrandingThemeFontsSubtitleOutput)
}

// Title.
func (o BrandingThemeFontsOutput) Title() BrandingThemeFontsTitleOutput {
	return o.ApplyT(func(v BrandingThemeFonts) BrandingThemeFontsTitle { return v.Title }).(BrandingThemeFontsTitleOutput)
}

type BrandingThemeFontsPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFonts)(nil)).Elem()
}

func (o BrandingThemeFontsPtrOutput) ToBrandingThemeFontsPtrOutput() BrandingThemeFontsPtrOutput {
	return o
}

func (o BrandingThemeFontsPtrOutput) ToBrandingThemeFontsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsPtrOutput {
	return o
}

func (o BrandingThemeFontsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFonts] {
	return pulumix.Output[*BrandingThemeFonts]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsPtrOutput) Elem() BrandingThemeFontsOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) BrandingThemeFonts {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFonts
		return ret
	}).(BrandingThemeFontsOutput)
}

// Body text.
func (o BrandingThemeFontsPtrOutput) BodyText() BrandingThemeFontsBodyTextPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsBodyText {
		if v == nil {
			return nil
		}
		return &v.BodyText
	}).(BrandingThemeFontsBodyTextPtrOutput)
}

// Buttons text.
func (o BrandingThemeFontsPtrOutput) ButtonsText() BrandingThemeFontsButtonsTextPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsButtonsText {
		if v == nil {
			return nil
		}
		return &v.ButtonsText
	}).(BrandingThemeFontsButtonsTextPtrOutput)
}

// Font URL. Defaults to an empty string.
func (o BrandingThemeFontsPtrOutput) FontUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *string {
		if v == nil {
			return nil
		}
		return v.FontUrl
	}).(pulumi.StringPtrOutput)
}

// Input labels.
func (o BrandingThemeFontsPtrOutput) InputLabels() BrandingThemeFontsInputLabelsPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsInputLabels {
		if v == nil {
			return nil
		}
		return &v.InputLabels
	}).(BrandingThemeFontsInputLabelsPtrOutput)
}

// Links.
func (o BrandingThemeFontsPtrOutput) Links() BrandingThemeFontsLinksPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsLinks {
		if v == nil {
			return nil
		}
		return &v.Links
	}).(BrandingThemeFontsLinksPtrOutput)
}

// Links style. Defaults to `normal`.
func (o BrandingThemeFontsPtrOutput) LinksStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *string {
		if v == nil {
			return nil
		}
		return v.LinksStyle
	}).(pulumi.StringPtrOutput)
}

// Reference text size. Value needs to be between `12` and `24`. Defaults to `16.0`.
func (o BrandingThemeFontsPtrOutput) ReferenceTextSize() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *float64 {
		if v == nil {
			return nil
		}
		return v.ReferenceTextSize
	}).(pulumi.Float64PtrOutput)
}

// Subtitle.
func (o BrandingThemeFontsPtrOutput) Subtitle() BrandingThemeFontsSubtitlePtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsSubtitle {
		if v == nil {
			return nil
		}
		return &v.Subtitle
	}).(BrandingThemeFontsSubtitlePtrOutput)
}

// Title.
func (o BrandingThemeFontsPtrOutput) Title() BrandingThemeFontsTitlePtrOutput {
	return o.ApplyT(func(v *BrandingThemeFonts) *BrandingThemeFontsTitle {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(BrandingThemeFontsTitlePtrOutput)
}

type BrandingThemeFontsBodyText struct {
	Bold *bool    `pulumi:"bold"`
	Size *float64 `pulumi:"size"`
}

// BrandingThemeFontsBodyTextInput is an input type that accepts BrandingThemeFontsBodyTextArgs and BrandingThemeFontsBodyTextOutput values.
// You can construct a concrete instance of `BrandingThemeFontsBodyTextInput` via:
//
//	BrandingThemeFontsBodyTextArgs{...}
type BrandingThemeFontsBodyTextInput interface {
	pulumi.Input

	ToBrandingThemeFontsBodyTextOutput() BrandingThemeFontsBodyTextOutput
	ToBrandingThemeFontsBodyTextOutputWithContext(context.Context) BrandingThemeFontsBodyTextOutput
}

type BrandingThemeFontsBodyTextArgs struct {
	Bold pulumi.BoolPtrInput    `pulumi:"bold"`
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (BrandingThemeFontsBodyTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsBodyText)(nil)).Elem()
}

func (i BrandingThemeFontsBodyTextArgs) ToBrandingThemeFontsBodyTextOutput() BrandingThemeFontsBodyTextOutput {
	return i.ToBrandingThemeFontsBodyTextOutputWithContext(context.Background())
}

func (i BrandingThemeFontsBodyTextArgs) ToBrandingThemeFontsBodyTextOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsBodyTextOutput)
}

func (i BrandingThemeFontsBodyTextArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsBodyText] {
	return pulumix.Output[BrandingThemeFontsBodyText]{
		OutputState: i.ToBrandingThemeFontsBodyTextOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemeFontsBodyTextArgs) ToBrandingThemeFontsBodyTextPtrOutput() BrandingThemeFontsBodyTextPtrOutput {
	return i.ToBrandingThemeFontsBodyTextPtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsBodyTextArgs) ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsBodyTextOutput).ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx)
}

// BrandingThemeFontsBodyTextPtrInput is an input type that accepts BrandingThemeFontsBodyTextArgs, BrandingThemeFontsBodyTextPtr and BrandingThemeFontsBodyTextPtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsBodyTextPtrInput` via:
//
//	        BrandingThemeFontsBodyTextArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsBodyTextPtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsBodyTextPtrOutput() BrandingThemeFontsBodyTextPtrOutput
	ToBrandingThemeFontsBodyTextPtrOutputWithContext(context.Context) BrandingThemeFontsBodyTextPtrOutput
}

type brandingThemeFontsBodyTextPtrType BrandingThemeFontsBodyTextArgs

func BrandingThemeFontsBodyTextPtr(v *BrandingThemeFontsBodyTextArgs) BrandingThemeFontsBodyTextPtrInput {
	return (*brandingThemeFontsBodyTextPtrType)(v)
}

func (*brandingThemeFontsBodyTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsBodyText)(nil)).Elem()
}

func (i *brandingThemeFontsBodyTextPtrType) ToBrandingThemeFontsBodyTextPtrOutput() BrandingThemeFontsBodyTextPtrOutput {
	return i.ToBrandingThemeFontsBodyTextPtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsBodyTextPtrType) ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsBodyTextPtrOutput)
}

func (i *brandingThemeFontsBodyTextPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsBodyText] {
	return pulumix.Output[*BrandingThemeFontsBodyText]{
		OutputState: i.ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemeFontsBodyTextOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsBodyTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsBodyText)(nil)).Elem()
}

func (o BrandingThemeFontsBodyTextOutput) ToBrandingThemeFontsBodyTextOutput() BrandingThemeFontsBodyTextOutput {
	return o
}

func (o BrandingThemeFontsBodyTextOutput) ToBrandingThemeFontsBodyTextOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextOutput {
	return o
}

func (o BrandingThemeFontsBodyTextOutput) ToBrandingThemeFontsBodyTextPtrOutput() BrandingThemeFontsBodyTextPtrOutput {
	return o.ToBrandingThemeFontsBodyTextPtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsBodyTextOutput) ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsBodyText) *BrandingThemeFontsBodyText {
		return &v
	}).(BrandingThemeFontsBodyTextPtrOutput)
}

func (o BrandingThemeFontsBodyTextOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsBodyText] {
	return pulumix.Output[BrandingThemeFontsBodyText]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsBodyTextOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsBodyText) *bool { return v.Bold }).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsBodyTextOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsBodyText) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsBodyTextPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsBodyTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsBodyText)(nil)).Elem()
}

func (o BrandingThemeFontsBodyTextPtrOutput) ToBrandingThemeFontsBodyTextPtrOutput() BrandingThemeFontsBodyTextPtrOutput {
	return o
}

func (o BrandingThemeFontsBodyTextPtrOutput) ToBrandingThemeFontsBodyTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsBodyTextPtrOutput {
	return o
}

func (o BrandingThemeFontsBodyTextPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsBodyText] {
	return pulumix.Output[*BrandingThemeFontsBodyText]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsBodyTextPtrOutput) Elem() BrandingThemeFontsBodyTextOutput {
	return o.ApplyT(func(v *BrandingThemeFontsBodyText) BrandingThemeFontsBodyText {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsBodyText
		return ret
	}).(BrandingThemeFontsBodyTextOutput)
}

func (o BrandingThemeFontsBodyTextPtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsBodyText) *bool {
		if v == nil {
			return nil
		}
		return v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsBodyTextPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsBodyText) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsButtonsText struct {
	Bold *bool    `pulumi:"bold"`
	Size *float64 `pulumi:"size"`
}

// BrandingThemeFontsButtonsTextInput is an input type that accepts BrandingThemeFontsButtonsTextArgs and BrandingThemeFontsButtonsTextOutput values.
// You can construct a concrete instance of `BrandingThemeFontsButtonsTextInput` via:
//
//	BrandingThemeFontsButtonsTextArgs{...}
type BrandingThemeFontsButtonsTextInput interface {
	pulumi.Input

	ToBrandingThemeFontsButtonsTextOutput() BrandingThemeFontsButtonsTextOutput
	ToBrandingThemeFontsButtonsTextOutputWithContext(context.Context) BrandingThemeFontsButtonsTextOutput
}

type BrandingThemeFontsButtonsTextArgs struct {
	Bold pulumi.BoolPtrInput    `pulumi:"bold"`
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (BrandingThemeFontsButtonsTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsButtonsText)(nil)).Elem()
}

func (i BrandingThemeFontsButtonsTextArgs) ToBrandingThemeFontsButtonsTextOutput() BrandingThemeFontsButtonsTextOutput {
	return i.ToBrandingThemeFontsButtonsTextOutputWithContext(context.Background())
}

func (i BrandingThemeFontsButtonsTextArgs) ToBrandingThemeFontsButtonsTextOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsButtonsTextOutput)
}

func (i BrandingThemeFontsButtonsTextArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsButtonsText] {
	return pulumix.Output[BrandingThemeFontsButtonsText]{
		OutputState: i.ToBrandingThemeFontsButtonsTextOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemeFontsButtonsTextArgs) ToBrandingThemeFontsButtonsTextPtrOutput() BrandingThemeFontsButtonsTextPtrOutput {
	return i.ToBrandingThemeFontsButtonsTextPtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsButtonsTextArgs) ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsButtonsTextOutput).ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx)
}

// BrandingThemeFontsButtonsTextPtrInput is an input type that accepts BrandingThemeFontsButtonsTextArgs, BrandingThemeFontsButtonsTextPtr and BrandingThemeFontsButtonsTextPtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsButtonsTextPtrInput` via:
//
//	        BrandingThemeFontsButtonsTextArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsButtonsTextPtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsButtonsTextPtrOutput() BrandingThemeFontsButtonsTextPtrOutput
	ToBrandingThemeFontsButtonsTextPtrOutputWithContext(context.Context) BrandingThemeFontsButtonsTextPtrOutput
}

type brandingThemeFontsButtonsTextPtrType BrandingThemeFontsButtonsTextArgs

func BrandingThemeFontsButtonsTextPtr(v *BrandingThemeFontsButtonsTextArgs) BrandingThemeFontsButtonsTextPtrInput {
	return (*brandingThemeFontsButtonsTextPtrType)(v)
}

func (*brandingThemeFontsButtonsTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsButtonsText)(nil)).Elem()
}

func (i *brandingThemeFontsButtonsTextPtrType) ToBrandingThemeFontsButtonsTextPtrOutput() BrandingThemeFontsButtonsTextPtrOutput {
	return i.ToBrandingThemeFontsButtonsTextPtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsButtonsTextPtrType) ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsButtonsTextPtrOutput)
}

func (i *brandingThemeFontsButtonsTextPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsButtonsText] {
	return pulumix.Output[*BrandingThemeFontsButtonsText]{
		OutputState: i.ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemeFontsButtonsTextOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsButtonsTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsButtonsText)(nil)).Elem()
}

func (o BrandingThemeFontsButtonsTextOutput) ToBrandingThemeFontsButtonsTextOutput() BrandingThemeFontsButtonsTextOutput {
	return o
}

func (o BrandingThemeFontsButtonsTextOutput) ToBrandingThemeFontsButtonsTextOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextOutput {
	return o
}

func (o BrandingThemeFontsButtonsTextOutput) ToBrandingThemeFontsButtonsTextPtrOutput() BrandingThemeFontsButtonsTextPtrOutput {
	return o.ToBrandingThemeFontsButtonsTextPtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsButtonsTextOutput) ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsButtonsText) *BrandingThemeFontsButtonsText {
		return &v
	}).(BrandingThemeFontsButtonsTextPtrOutput)
}

func (o BrandingThemeFontsButtonsTextOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsButtonsText] {
	return pulumix.Output[BrandingThemeFontsButtonsText]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsButtonsTextOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsButtonsText) *bool { return v.Bold }).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsButtonsTextOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsButtonsText) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsButtonsTextPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsButtonsTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsButtonsText)(nil)).Elem()
}

func (o BrandingThemeFontsButtonsTextPtrOutput) ToBrandingThemeFontsButtonsTextPtrOutput() BrandingThemeFontsButtonsTextPtrOutput {
	return o
}

func (o BrandingThemeFontsButtonsTextPtrOutput) ToBrandingThemeFontsButtonsTextPtrOutputWithContext(ctx context.Context) BrandingThemeFontsButtonsTextPtrOutput {
	return o
}

func (o BrandingThemeFontsButtonsTextPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsButtonsText] {
	return pulumix.Output[*BrandingThemeFontsButtonsText]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsButtonsTextPtrOutput) Elem() BrandingThemeFontsButtonsTextOutput {
	return o.ApplyT(func(v *BrandingThemeFontsButtonsText) BrandingThemeFontsButtonsText {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsButtonsText
		return ret
	}).(BrandingThemeFontsButtonsTextOutput)
}

func (o BrandingThemeFontsButtonsTextPtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsButtonsText) *bool {
		if v == nil {
			return nil
		}
		return v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsButtonsTextPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsButtonsText) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsInputLabels struct {
	Bold *bool    `pulumi:"bold"`
	Size *float64 `pulumi:"size"`
}

// BrandingThemeFontsInputLabelsInput is an input type that accepts BrandingThemeFontsInputLabelsArgs and BrandingThemeFontsInputLabelsOutput values.
// You can construct a concrete instance of `BrandingThemeFontsInputLabelsInput` via:
//
//	BrandingThemeFontsInputLabelsArgs{...}
type BrandingThemeFontsInputLabelsInput interface {
	pulumi.Input

	ToBrandingThemeFontsInputLabelsOutput() BrandingThemeFontsInputLabelsOutput
	ToBrandingThemeFontsInputLabelsOutputWithContext(context.Context) BrandingThemeFontsInputLabelsOutput
}

type BrandingThemeFontsInputLabelsArgs struct {
	Bold pulumi.BoolPtrInput    `pulumi:"bold"`
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (BrandingThemeFontsInputLabelsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsInputLabels)(nil)).Elem()
}

func (i BrandingThemeFontsInputLabelsArgs) ToBrandingThemeFontsInputLabelsOutput() BrandingThemeFontsInputLabelsOutput {
	return i.ToBrandingThemeFontsInputLabelsOutputWithContext(context.Background())
}

func (i BrandingThemeFontsInputLabelsArgs) ToBrandingThemeFontsInputLabelsOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsInputLabelsOutput)
}

func (i BrandingThemeFontsInputLabelsArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsInputLabels] {
	return pulumix.Output[BrandingThemeFontsInputLabels]{
		OutputState: i.ToBrandingThemeFontsInputLabelsOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemeFontsInputLabelsArgs) ToBrandingThemeFontsInputLabelsPtrOutput() BrandingThemeFontsInputLabelsPtrOutput {
	return i.ToBrandingThemeFontsInputLabelsPtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsInputLabelsArgs) ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsInputLabelsOutput).ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx)
}

// BrandingThemeFontsInputLabelsPtrInput is an input type that accepts BrandingThemeFontsInputLabelsArgs, BrandingThemeFontsInputLabelsPtr and BrandingThemeFontsInputLabelsPtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsInputLabelsPtrInput` via:
//
//	        BrandingThemeFontsInputLabelsArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsInputLabelsPtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsInputLabelsPtrOutput() BrandingThemeFontsInputLabelsPtrOutput
	ToBrandingThemeFontsInputLabelsPtrOutputWithContext(context.Context) BrandingThemeFontsInputLabelsPtrOutput
}

type brandingThemeFontsInputLabelsPtrType BrandingThemeFontsInputLabelsArgs

func BrandingThemeFontsInputLabelsPtr(v *BrandingThemeFontsInputLabelsArgs) BrandingThemeFontsInputLabelsPtrInput {
	return (*brandingThemeFontsInputLabelsPtrType)(v)
}

func (*brandingThemeFontsInputLabelsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsInputLabels)(nil)).Elem()
}

func (i *brandingThemeFontsInputLabelsPtrType) ToBrandingThemeFontsInputLabelsPtrOutput() BrandingThemeFontsInputLabelsPtrOutput {
	return i.ToBrandingThemeFontsInputLabelsPtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsInputLabelsPtrType) ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsInputLabelsPtrOutput)
}

func (i *brandingThemeFontsInputLabelsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsInputLabels] {
	return pulumix.Output[*BrandingThemeFontsInputLabels]{
		OutputState: i.ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemeFontsInputLabelsOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsInputLabelsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsInputLabels)(nil)).Elem()
}

func (o BrandingThemeFontsInputLabelsOutput) ToBrandingThemeFontsInputLabelsOutput() BrandingThemeFontsInputLabelsOutput {
	return o
}

func (o BrandingThemeFontsInputLabelsOutput) ToBrandingThemeFontsInputLabelsOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsOutput {
	return o
}

func (o BrandingThemeFontsInputLabelsOutput) ToBrandingThemeFontsInputLabelsPtrOutput() BrandingThemeFontsInputLabelsPtrOutput {
	return o.ToBrandingThemeFontsInputLabelsPtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsInputLabelsOutput) ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsInputLabels) *BrandingThemeFontsInputLabels {
		return &v
	}).(BrandingThemeFontsInputLabelsPtrOutput)
}

func (o BrandingThemeFontsInputLabelsOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsInputLabels] {
	return pulumix.Output[BrandingThemeFontsInputLabels]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsInputLabelsOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsInputLabels) *bool { return v.Bold }).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsInputLabelsOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsInputLabels) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsInputLabelsPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsInputLabelsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsInputLabels)(nil)).Elem()
}

func (o BrandingThemeFontsInputLabelsPtrOutput) ToBrandingThemeFontsInputLabelsPtrOutput() BrandingThemeFontsInputLabelsPtrOutput {
	return o
}

func (o BrandingThemeFontsInputLabelsPtrOutput) ToBrandingThemeFontsInputLabelsPtrOutputWithContext(ctx context.Context) BrandingThemeFontsInputLabelsPtrOutput {
	return o
}

func (o BrandingThemeFontsInputLabelsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsInputLabels] {
	return pulumix.Output[*BrandingThemeFontsInputLabels]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsInputLabelsPtrOutput) Elem() BrandingThemeFontsInputLabelsOutput {
	return o.ApplyT(func(v *BrandingThemeFontsInputLabels) BrandingThemeFontsInputLabels {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsInputLabels
		return ret
	}).(BrandingThemeFontsInputLabelsOutput)
}

func (o BrandingThemeFontsInputLabelsPtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsInputLabels) *bool {
		if v == nil {
			return nil
		}
		return v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsInputLabelsPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsInputLabels) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsLinks struct {
	Bold *bool    `pulumi:"bold"`
	Size *float64 `pulumi:"size"`
}

// BrandingThemeFontsLinksInput is an input type that accepts BrandingThemeFontsLinksArgs and BrandingThemeFontsLinksOutput values.
// You can construct a concrete instance of `BrandingThemeFontsLinksInput` via:
//
//	BrandingThemeFontsLinksArgs{...}
type BrandingThemeFontsLinksInput interface {
	pulumi.Input

	ToBrandingThemeFontsLinksOutput() BrandingThemeFontsLinksOutput
	ToBrandingThemeFontsLinksOutputWithContext(context.Context) BrandingThemeFontsLinksOutput
}

type BrandingThemeFontsLinksArgs struct {
	Bold pulumi.BoolPtrInput    `pulumi:"bold"`
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (BrandingThemeFontsLinksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsLinks)(nil)).Elem()
}

func (i BrandingThemeFontsLinksArgs) ToBrandingThemeFontsLinksOutput() BrandingThemeFontsLinksOutput {
	return i.ToBrandingThemeFontsLinksOutputWithContext(context.Background())
}

func (i BrandingThemeFontsLinksArgs) ToBrandingThemeFontsLinksOutputWithContext(ctx context.Context) BrandingThemeFontsLinksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsLinksOutput)
}

func (i BrandingThemeFontsLinksArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsLinks] {
	return pulumix.Output[BrandingThemeFontsLinks]{
		OutputState: i.ToBrandingThemeFontsLinksOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemeFontsLinksArgs) ToBrandingThemeFontsLinksPtrOutput() BrandingThemeFontsLinksPtrOutput {
	return i.ToBrandingThemeFontsLinksPtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsLinksArgs) ToBrandingThemeFontsLinksPtrOutputWithContext(ctx context.Context) BrandingThemeFontsLinksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsLinksOutput).ToBrandingThemeFontsLinksPtrOutputWithContext(ctx)
}

// BrandingThemeFontsLinksPtrInput is an input type that accepts BrandingThemeFontsLinksArgs, BrandingThemeFontsLinksPtr and BrandingThemeFontsLinksPtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsLinksPtrInput` via:
//
//	        BrandingThemeFontsLinksArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsLinksPtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsLinksPtrOutput() BrandingThemeFontsLinksPtrOutput
	ToBrandingThemeFontsLinksPtrOutputWithContext(context.Context) BrandingThemeFontsLinksPtrOutput
}

type brandingThemeFontsLinksPtrType BrandingThemeFontsLinksArgs

func BrandingThemeFontsLinksPtr(v *BrandingThemeFontsLinksArgs) BrandingThemeFontsLinksPtrInput {
	return (*brandingThemeFontsLinksPtrType)(v)
}

func (*brandingThemeFontsLinksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsLinks)(nil)).Elem()
}

func (i *brandingThemeFontsLinksPtrType) ToBrandingThemeFontsLinksPtrOutput() BrandingThemeFontsLinksPtrOutput {
	return i.ToBrandingThemeFontsLinksPtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsLinksPtrType) ToBrandingThemeFontsLinksPtrOutputWithContext(ctx context.Context) BrandingThemeFontsLinksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsLinksPtrOutput)
}

func (i *brandingThemeFontsLinksPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsLinks] {
	return pulumix.Output[*BrandingThemeFontsLinks]{
		OutputState: i.ToBrandingThemeFontsLinksPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemeFontsLinksOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsLinks)(nil)).Elem()
}

func (o BrandingThemeFontsLinksOutput) ToBrandingThemeFontsLinksOutput() BrandingThemeFontsLinksOutput {
	return o
}

func (o BrandingThemeFontsLinksOutput) ToBrandingThemeFontsLinksOutputWithContext(ctx context.Context) BrandingThemeFontsLinksOutput {
	return o
}

func (o BrandingThemeFontsLinksOutput) ToBrandingThemeFontsLinksPtrOutput() BrandingThemeFontsLinksPtrOutput {
	return o.ToBrandingThemeFontsLinksPtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsLinksOutput) ToBrandingThemeFontsLinksPtrOutputWithContext(ctx context.Context) BrandingThemeFontsLinksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsLinks) *BrandingThemeFontsLinks {
		return &v
	}).(BrandingThemeFontsLinksPtrOutput)
}

func (o BrandingThemeFontsLinksOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsLinks] {
	return pulumix.Output[BrandingThemeFontsLinks]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsLinksOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsLinks) *bool { return v.Bold }).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsLinksOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsLinks) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsLinksPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsLinksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsLinks)(nil)).Elem()
}

func (o BrandingThemeFontsLinksPtrOutput) ToBrandingThemeFontsLinksPtrOutput() BrandingThemeFontsLinksPtrOutput {
	return o
}

func (o BrandingThemeFontsLinksPtrOutput) ToBrandingThemeFontsLinksPtrOutputWithContext(ctx context.Context) BrandingThemeFontsLinksPtrOutput {
	return o
}

func (o BrandingThemeFontsLinksPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsLinks] {
	return pulumix.Output[*BrandingThemeFontsLinks]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsLinksPtrOutput) Elem() BrandingThemeFontsLinksOutput {
	return o.ApplyT(func(v *BrandingThemeFontsLinks) BrandingThemeFontsLinks {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsLinks
		return ret
	}).(BrandingThemeFontsLinksOutput)
}

func (o BrandingThemeFontsLinksPtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsLinks) *bool {
		if v == nil {
			return nil
		}
		return v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsLinksPtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsLinks) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsSubtitle struct {
	Bold *bool    `pulumi:"bold"`
	Size *float64 `pulumi:"size"`
}

// BrandingThemeFontsSubtitleInput is an input type that accepts BrandingThemeFontsSubtitleArgs and BrandingThemeFontsSubtitleOutput values.
// You can construct a concrete instance of `BrandingThemeFontsSubtitleInput` via:
//
//	BrandingThemeFontsSubtitleArgs{...}
type BrandingThemeFontsSubtitleInput interface {
	pulumi.Input

	ToBrandingThemeFontsSubtitleOutput() BrandingThemeFontsSubtitleOutput
	ToBrandingThemeFontsSubtitleOutputWithContext(context.Context) BrandingThemeFontsSubtitleOutput
}

type BrandingThemeFontsSubtitleArgs struct {
	Bold pulumi.BoolPtrInput    `pulumi:"bold"`
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (BrandingThemeFontsSubtitleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsSubtitle)(nil)).Elem()
}

func (i BrandingThemeFontsSubtitleArgs) ToBrandingThemeFontsSubtitleOutput() BrandingThemeFontsSubtitleOutput {
	return i.ToBrandingThemeFontsSubtitleOutputWithContext(context.Background())
}

func (i BrandingThemeFontsSubtitleArgs) ToBrandingThemeFontsSubtitleOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsSubtitleOutput)
}

func (i BrandingThemeFontsSubtitleArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsSubtitle] {
	return pulumix.Output[BrandingThemeFontsSubtitle]{
		OutputState: i.ToBrandingThemeFontsSubtitleOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemeFontsSubtitleArgs) ToBrandingThemeFontsSubtitlePtrOutput() BrandingThemeFontsSubtitlePtrOutput {
	return i.ToBrandingThemeFontsSubtitlePtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsSubtitleArgs) ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsSubtitleOutput).ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx)
}

// BrandingThemeFontsSubtitlePtrInput is an input type that accepts BrandingThemeFontsSubtitleArgs, BrandingThemeFontsSubtitlePtr and BrandingThemeFontsSubtitlePtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsSubtitlePtrInput` via:
//
//	        BrandingThemeFontsSubtitleArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsSubtitlePtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsSubtitlePtrOutput() BrandingThemeFontsSubtitlePtrOutput
	ToBrandingThemeFontsSubtitlePtrOutputWithContext(context.Context) BrandingThemeFontsSubtitlePtrOutput
}

type brandingThemeFontsSubtitlePtrType BrandingThemeFontsSubtitleArgs

func BrandingThemeFontsSubtitlePtr(v *BrandingThemeFontsSubtitleArgs) BrandingThemeFontsSubtitlePtrInput {
	return (*brandingThemeFontsSubtitlePtrType)(v)
}

func (*brandingThemeFontsSubtitlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsSubtitle)(nil)).Elem()
}

func (i *brandingThemeFontsSubtitlePtrType) ToBrandingThemeFontsSubtitlePtrOutput() BrandingThemeFontsSubtitlePtrOutput {
	return i.ToBrandingThemeFontsSubtitlePtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsSubtitlePtrType) ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsSubtitlePtrOutput)
}

func (i *brandingThemeFontsSubtitlePtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsSubtitle] {
	return pulumix.Output[*BrandingThemeFontsSubtitle]{
		OutputState: i.ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemeFontsSubtitleOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsSubtitleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsSubtitle)(nil)).Elem()
}

func (o BrandingThemeFontsSubtitleOutput) ToBrandingThemeFontsSubtitleOutput() BrandingThemeFontsSubtitleOutput {
	return o
}

func (o BrandingThemeFontsSubtitleOutput) ToBrandingThemeFontsSubtitleOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitleOutput {
	return o
}

func (o BrandingThemeFontsSubtitleOutput) ToBrandingThemeFontsSubtitlePtrOutput() BrandingThemeFontsSubtitlePtrOutput {
	return o.ToBrandingThemeFontsSubtitlePtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsSubtitleOutput) ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsSubtitle) *BrandingThemeFontsSubtitle {
		return &v
	}).(BrandingThemeFontsSubtitlePtrOutput)
}

func (o BrandingThemeFontsSubtitleOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsSubtitle] {
	return pulumix.Output[BrandingThemeFontsSubtitle]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsSubtitleOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsSubtitle) *bool { return v.Bold }).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsSubtitleOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsSubtitle) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsSubtitlePtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsSubtitlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsSubtitle)(nil)).Elem()
}

func (o BrandingThemeFontsSubtitlePtrOutput) ToBrandingThemeFontsSubtitlePtrOutput() BrandingThemeFontsSubtitlePtrOutput {
	return o
}

func (o BrandingThemeFontsSubtitlePtrOutput) ToBrandingThemeFontsSubtitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsSubtitlePtrOutput {
	return o
}

func (o BrandingThemeFontsSubtitlePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsSubtitle] {
	return pulumix.Output[*BrandingThemeFontsSubtitle]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsSubtitlePtrOutput) Elem() BrandingThemeFontsSubtitleOutput {
	return o.ApplyT(func(v *BrandingThemeFontsSubtitle) BrandingThemeFontsSubtitle {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsSubtitle
		return ret
	}).(BrandingThemeFontsSubtitleOutput)
}

func (o BrandingThemeFontsSubtitlePtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsSubtitle) *bool {
		if v == nil {
			return nil
		}
		return v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsSubtitlePtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsSubtitle) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsTitle struct {
	Bold *bool    `pulumi:"bold"`
	Size *float64 `pulumi:"size"`
}

// BrandingThemeFontsTitleInput is an input type that accepts BrandingThemeFontsTitleArgs and BrandingThemeFontsTitleOutput values.
// You can construct a concrete instance of `BrandingThemeFontsTitleInput` via:
//
//	BrandingThemeFontsTitleArgs{...}
type BrandingThemeFontsTitleInput interface {
	pulumi.Input

	ToBrandingThemeFontsTitleOutput() BrandingThemeFontsTitleOutput
	ToBrandingThemeFontsTitleOutputWithContext(context.Context) BrandingThemeFontsTitleOutput
}

type BrandingThemeFontsTitleArgs struct {
	Bold pulumi.BoolPtrInput    `pulumi:"bold"`
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (BrandingThemeFontsTitleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsTitle)(nil)).Elem()
}

func (i BrandingThemeFontsTitleArgs) ToBrandingThemeFontsTitleOutput() BrandingThemeFontsTitleOutput {
	return i.ToBrandingThemeFontsTitleOutputWithContext(context.Background())
}

func (i BrandingThemeFontsTitleArgs) ToBrandingThemeFontsTitleOutputWithContext(ctx context.Context) BrandingThemeFontsTitleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsTitleOutput)
}

func (i BrandingThemeFontsTitleArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsTitle] {
	return pulumix.Output[BrandingThemeFontsTitle]{
		OutputState: i.ToBrandingThemeFontsTitleOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemeFontsTitleArgs) ToBrandingThemeFontsTitlePtrOutput() BrandingThemeFontsTitlePtrOutput {
	return i.ToBrandingThemeFontsTitlePtrOutputWithContext(context.Background())
}

func (i BrandingThemeFontsTitleArgs) ToBrandingThemeFontsTitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsTitlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsTitleOutput).ToBrandingThemeFontsTitlePtrOutputWithContext(ctx)
}

// BrandingThemeFontsTitlePtrInput is an input type that accepts BrandingThemeFontsTitleArgs, BrandingThemeFontsTitlePtr and BrandingThemeFontsTitlePtrOutput values.
// You can construct a concrete instance of `BrandingThemeFontsTitlePtrInput` via:
//
//	        BrandingThemeFontsTitleArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeFontsTitlePtrInput interface {
	pulumi.Input

	ToBrandingThemeFontsTitlePtrOutput() BrandingThemeFontsTitlePtrOutput
	ToBrandingThemeFontsTitlePtrOutputWithContext(context.Context) BrandingThemeFontsTitlePtrOutput
}

type brandingThemeFontsTitlePtrType BrandingThemeFontsTitleArgs

func BrandingThemeFontsTitlePtr(v *BrandingThemeFontsTitleArgs) BrandingThemeFontsTitlePtrInput {
	return (*brandingThemeFontsTitlePtrType)(v)
}

func (*brandingThemeFontsTitlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsTitle)(nil)).Elem()
}

func (i *brandingThemeFontsTitlePtrType) ToBrandingThemeFontsTitlePtrOutput() BrandingThemeFontsTitlePtrOutput {
	return i.ToBrandingThemeFontsTitlePtrOutputWithContext(context.Background())
}

func (i *brandingThemeFontsTitlePtrType) ToBrandingThemeFontsTitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsTitlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeFontsTitlePtrOutput)
}

func (i *brandingThemeFontsTitlePtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsTitle] {
	return pulumix.Output[*BrandingThemeFontsTitle]{
		OutputState: i.ToBrandingThemeFontsTitlePtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemeFontsTitleOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsTitleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeFontsTitle)(nil)).Elem()
}

func (o BrandingThemeFontsTitleOutput) ToBrandingThemeFontsTitleOutput() BrandingThemeFontsTitleOutput {
	return o
}

func (o BrandingThemeFontsTitleOutput) ToBrandingThemeFontsTitleOutputWithContext(ctx context.Context) BrandingThemeFontsTitleOutput {
	return o
}

func (o BrandingThemeFontsTitleOutput) ToBrandingThemeFontsTitlePtrOutput() BrandingThemeFontsTitlePtrOutput {
	return o.ToBrandingThemeFontsTitlePtrOutputWithContext(context.Background())
}

func (o BrandingThemeFontsTitleOutput) ToBrandingThemeFontsTitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsTitlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeFontsTitle) *BrandingThemeFontsTitle {
		return &v
	}).(BrandingThemeFontsTitlePtrOutput)
}

func (o BrandingThemeFontsTitleOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeFontsTitle] {
	return pulumix.Output[BrandingThemeFontsTitle]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsTitleOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsTitle) *bool { return v.Bold }).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsTitleOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeFontsTitle) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type BrandingThemeFontsTitlePtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeFontsTitlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeFontsTitle)(nil)).Elem()
}

func (o BrandingThemeFontsTitlePtrOutput) ToBrandingThemeFontsTitlePtrOutput() BrandingThemeFontsTitlePtrOutput {
	return o
}

func (o BrandingThemeFontsTitlePtrOutput) ToBrandingThemeFontsTitlePtrOutputWithContext(ctx context.Context) BrandingThemeFontsTitlePtrOutput {
	return o
}

func (o BrandingThemeFontsTitlePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeFontsTitle] {
	return pulumix.Output[*BrandingThemeFontsTitle]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeFontsTitlePtrOutput) Elem() BrandingThemeFontsTitleOutput {
	return o.ApplyT(func(v *BrandingThemeFontsTitle) BrandingThemeFontsTitle {
		if v != nil {
			return *v
		}
		var ret BrandingThemeFontsTitle
		return ret
	}).(BrandingThemeFontsTitleOutput)
}

func (o BrandingThemeFontsTitlePtrOutput) Bold() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsTitle) *bool {
		if v == nil {
			return nil
		}
		return v.Bold
	}).(pulumi.BoolPtrOutput)
}

func (o BrandingThemeFontsTitlePtrOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeFontsTitle) *float64 {
		if v == nil {
			return nil
		}
		return v.Size
	}).(pulumi.Float64PtrOutput)
}

type BrandingThemePageBackground struct {
	// Background color. Defaults to `#000000`.
	BackgroundColor *string `pulumi:"backgroundColor"`
	// Background image url. Defaults to an empty string.
	BackgroundImageUrl *string `pulumi:"backgroundImageUrl"`
	// Page layout. Available options: `center`, `left`, `right`. Defaults to `center`.
	PageLayout *string `pulumi:"pageLayout"`
}

// BrandingThemePageBackgroundInput is an input type that accepts BrandingThemePageBackgroundArgs and BrandingThemePageBackgroundOutput values.
// You can construct a concrete instance of `BrandingThemePageBackgroundInput` via:
//
//	BrandingThemePageBackgroundArgs{...}
type BrandingThemePageBackgroundInput interface {
	pulumi.Input

	ToBrandingThemePageBackgroundOutput() BrandingThemePageBackgroundOutput
	ToBrandingThemePageBackgroundOutputWithContext(context.Context) BrandingThemePageBackgroundOutput
}

type BrandingThemePageBackgroundArgs struct {
	// Background color. Defaults to `#000000`.
	BackgroundColor pulumi.StringPtrInput `pulumi:"backgroundColor"`
	// Background image url. Defaults to an empty string.
	BackgroundImageUrl pulumi.StringPtrInput `pulumi:"backgroundImageUrl"`
	// Page layout. Available options: `center`, `left`, `right`. Defaults to `center`.
	PageLayout pulumi.StringPtrInput `pulumi:"pageLayout"`
}

func (BrandingThemePageBackgroundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemePageBackground)(nil)).Elem()
}

func (i BrandingThemePageBackgroundArgs) ToBrandingThemePageBackgroundOutput() BrandingThemePageBackgroundOutput {
	return i.ToBrandingThemePageBackgroundOutputWithContext(context.Background())
}

func (i BrandingThemePageBackgroundArgs) ToBrandingThemePageBackgroundOutputWithContext(ctx context.Context) BrandingThemePageBackgroundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemePageBackgroundOutput)
}

func (i BrandingThemePageBackgroundArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemePageBackground] {
	return pulumix.Output[BrandingThemePageBackground]{
		OutputState: i.ToBrandingThemePageBackgroundOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemePageBackgroundArgs) ToBrandingThemePageBackgroundPtrOutput() BrandingThemePageBackgroundPtrOutput {
	return i.ToBrandingThemePageBackgroundPtrOutputWithContext(context.Background())
}

func (i BrandingThemePageBackgroundArgs) ToBrandingThemePageBackgroundPtrOutputWithContext(ctx context.Context) BrandingThemePageBackgroundPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemePageBackgroundOutput).ToBrandingThemePageBackgroundPtrOutputWithContext(ctx)
}

// BrandingThemePageBackgroundPtrInput is an input type that accepts BrandingThemePageBackgroundArgs, BrandingThemePageBackgroundPtr and BrandingThemePageBackgroundPtrOutput values.
// You can construct a concrete instance of `BrandingThemePageBackgroundPtrInput` via:
//
//	        BrandingThemePageBackgroundArgs{...}
//
//	or:
//
//	        nil
type BrandingThemePageBackgroundPtrInput interface {
	pulumi.Input

	ToBrandingThemePageBackgroundPtrOutput() BrandingThemePageBackgroundPtrOutput
	ToBrandingThemePageBackgroundPtrOutputWithContext(context.Context) BrandingThemePageBackgroundPtrOutput
}

type brandingThemePageBackgroundPtrType BrandingThemePageBackgroundArgs

func BrandingThemePageBackgroundPtr(v *BrandingThemePageBackgroundArgs) BrandingThemePageBackgroundPtrInput {
	return (*brandingThemePageBackgroundPtrType)(v)
}

func (*brandingThemePageBackgroundPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemePageBackground)(nil)).Elem()
}

func (i *brandingThemePageBackgroundPtrType) ToBrandingThemePageBackgroundPtrOutput() BrandingThemePageBackgroundPtrOutput {
	return i.ToBrandingThemePageBackgroundPtrOutputWithContext(context.Background())
}

func (i *brandingThemePageBackgroundPtrType) ToBrandingThemePageBackgroundPtrOutputWithContext(ctx context.Context) BrandingThemePageBackgroundPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemePageBackgroundPtrOutput)
}

func (i *brandingThemePageBackgroundPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemePageBackground] {
	return pulumix.Output[*BrandingThemePageBackground]{
		OutputState: i.ToBrandingThemePageBackgroundPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemePageBackgroundOutput struct{ *pulumi.OutputState }

func (BrandingThemePageBackgroundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemePageBackground)(nil)).Elem()
}

func (o BrandingThemePageBackgroundOutput) ToBrandingThemePageBackgroundOutput() BrandingThemePageBackgroundOutput {
	return o
}

func (o BrandingThemePageBackgroundOutput) ToBrandingThemePageBackgroundOutputWithContext(ctx context.Context) BrandingThemePageBackgroundOutput {
	return o
}

func (o BrandingThemePageBackgroundOutput) ToBrandingThemePageBackgroundPtrOutput() BrandingThemePageBackgroundPtrOutput {
	return o.ToBrandingThemePageBackgroundPtrOutputWithContext(context.Background())
}

func (o BrandingThemePageBackgroundOutput) ToBrandingThemePageBackgroundPtrOutputWithContext(ctx context.Context) BrandingThemePageBackgroundPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemePageBackground) *BrandingThemePageBackground {
		return &v
	}).(BrandingThemePageBackgroundPtrOutput)
}

func (o BrandingThemePageBackgroundOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemePageBackground] {
	return pulumix.Output[BrandingThemePageBackground]{
		OutputState: o.OutputState,
	}
}

// Background color. Defaults to `#000000`.
func (o BrandingThemePageBackgroundOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemePageBackground) *string { return v.BackgroundColor }).(pulumi.StringPtrOutput)
}

// Background image url. Defaults to an empty string.
func (o BrandingThemePageBackgroundOutput) BackgroundImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemePageBackground) *string { return v.BackgroundImageUrl }).(pulumi.StringPtrOutput)
}

// Page layout. Available options: `center`, `left`, `right`. Defaults to `center`.
func (o BrandingThemePageBackgroundOutput) PageLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemePageBackground) *string { return v.PageLayout }).(pulumi.StringPtrOutput)
}

type BrandingThemePageBackgroundPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemePageBackgroundPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemePageBackground)(nil)).Elem()
}

func (o BrandingThemePageBackgroundPtrOutput) ToBrandingThemePageBackgroundPtrOutput() BrandingThemePageBackgroundPtrOutput {
	return o
}

func (o BrandingThemePageBackgroundPtrOutput) ToBrandingThemePageBackgroundPtrOutputWithContext(ctx context.Context) BrandingThemePageBackgroundPtrOutput {
	return o
}

func (o BrandingThemePageBackgroundPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemePageBackground] {
	return pulumix.Output[*BrandingThemePageBackground]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemePageBackgroundPtrOutput) Elem() BrandingThemePageBackgroundOutput {
	return o.ApplyT(func(v *BrandingThemePageBackground) BrandingThemePageBackground {
		if v != nil {
			return *v
		}
		var ret BrandingThemePageBackground
		return ret
	}).(BrandingThemePageBackgroundOutput)
}

// Background color. Defaults to `#000000`.
func (o BrandingThemePageBackgroundPtrOutput) BackgroundColor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemePageBackground) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundColor
	}).(pulumi.StringPtrOutput)
}

// Background image url. Defaults to an empty string.
func (o BrandingThemePageBackgroundPtrOutput) BackgroundImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemePageBackground) *string {
		if v == nil {
			return nil
		}
		return v.BackgroundImageUrl
	}).(pulumi.StringPtrOutput)
}

// Page layout. Available options: `center`, `left`, `right`. Defaults to `center`.
func (o BrandingThemePageBackgroundPtrOutput) PageLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemePageBackground) *string {
		if v == nil {
			return nil
		}
		return v.PageLayout
	}).(pulumi.StringPtrOutput)
}

type BrandingThemeWidget struct {
	// Header text alignment. Available options: `center`, `left`, `right`. Defaults to `center`.
	HeaderTextAlignment *string `pulumi:"headerTextAlignment"`
	// Logo height. Value needs to be between `1` and `100`. Defaults to `52.0`.
	LogoHeight *float64 `pulumi:"logoHeight"`
	// Logo position. Available options: `center`, `left`, `right`, `none`. Defaults to `center`.
	LogoPosition *string `pulumi:"logoPosition"`
	// Logo url. Defaults to an empty string.
	LogoUrl *string `pulumi:"logoUrl"`
	// Social buttons layout. Available options: `bottom`, `top`. Defaults to `bottom`.
	SocialButtonsLayout *string `pulumi:"socialButtonsLayout"`
}

// BrandingThemeWidgetInput is an input type that accepts BrandingThemeWidgetArgs and BrandingThemeWidgetOutput values.
// You can construct a concrete instance of `BrandingThemeWidgetInput` via:
//
//	BrandingThemeWidgetArgs{...}
type BrandingThemeWidgetInput interface {
	pulumi.Input

	ToBrandingThemeWidgetOutput() BrandingThemeWidgetOutput
	ToBrandingThemeWidgetOutputWithContext(context.Context) BrandingThemeWidgetOutput
}

type BrandingThemeWidgetArgs struct {
	// Header text alignment. Available options: `center`, `left`, `right`. Defaults to `center`.
	HeaderTextAlignment pulumi.StringPtrInput `pulumi:"headerTextAlignment"`
	// Logo height. Value needs to be between `1` and `100`. Defaults to `52.0`.
	LogoHeight pulumi.Float64PtrInput `pulumi:"logoHeight"`
	// Logo position. Available options: `center`, `left`, `right`, `none`. Defaults to `center`.
	LogoPosition pulumi.StringPtrInput `pulumi:"logoPosition"`
	// Logo url. Defaults to an empty string.
	LogoUrl pulumi.StringPtrInput `pulumi:"logoUrl"`
	// Social buttons layout. Available options: `bottom`, `top`. Defaults to `bottom`.
	SocialButtonsLayout pulumi.StringPtrInput `pulumi:"socialButtonsLayout"`
}

func (BrandingThemeWidgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeWidget)(nil)).Elem()
}

func (i BrandingThemeWidgetArgs) ToBrandingThemeWidgetOutput() BrandingThemeWidgetOutput {
	return i.ToBrandingThemeWidgetOutputWithContext(context.Background())
}

func (i BrandingThemeWidgetArgs) ToBrandingThemeWidgetOutputWithContext(ctx context.Context) BrandingThemeWidgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeWidgetOutput)
}

func (i BrandingThemeWidgetArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeWidget] {
	return pulumix.Output[BrandingThemeWidget]{
		OutputState: i.ToBrandingThemeWidgetOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingThemeWidgetArgs) ToBrandingThemeWidgetPtrOutput() BrandingThemeWidgetPtrOutput {
	return i.ToBrandingThemeWidgetPtrOutputWithContext(context.Background())
}

func (i BrandingThemeWidgetArgs) ToBrandingThemeWidgetPtrOutputWithContext(ctx context.Context) BrandingThemeWidgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeWidgetOutput).ToBrandingThemeWidgetPtrOutputWithContext(ctx)
}

// BrandingThemeWidgetPtrInput is an input type that accepts BrandingThemeWidgetArgs, BrandingThemeWidgetPtr and BrandingThemeWidgetPtrOutput values.
// You can construct a concrete instance of `BrandingThemeWidgetPtrInput` via:
//
//	        BrandingThemeWidgetArgs{...}
//
//	or:
//
//	        nil
type BrandingThemeWidgetPtrInput interface {
	pulumi.Input

	ToBrandingThemeWidgetPtrOutput() BrandingThemeWidgetPtrOutput
	ToBrandingThemeWidgetPtrOutputWithContext(context.Context) BrandingThemeWidgetPtrOutput
}

type brandingThemeWidgetPtrType BrandingThemeWidgetArgs

func BrandingThemeWidgetPtr(v *BrandingThemeWidgetArgs) BrandingThemeWidgetPtrInput {
	return (*brandingThemeWidgetPtrType)(v)
}

func (*brandingThemeWidgetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeWidget)(nil)).Elem()
}

func (i *brandingThemeWidgetPtrType) ToBrandingThemeWidgetPtrOutput() BrandingThemeWidgetPtrOutput {
	return i.ToBrandingThemeWidgetPtrOutputWithContext(context.Background())
}

func (i *brandingThemeWidgetPtrType) ToBrandingThemeWidgetPtrOutputWithContext(ctx context.Context) BrandingThemeWidgetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingThemeWidgetPtrOutput)
}

func (i *brandingThemeWidgetPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeWidget] {
	return pulumix.Output[*BrandingThemeWidget]{
		OutputState: i.ToBrandingThemeWidgetPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingThemeWidgetOutput struct{ *pulumi.OutputState }

func (BrandingThemeWidgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingThemeWidget)(nil)).Elem()
}

func (o BrandingThemeWidgetOutput) ToBrandingThemeWidgetOutput() BrandingThemeWidgetOutput {
	return o
}

func (o BrandingThemeWidgetOutput) ToBrandingThemeWidgetOutputWithContext(ctx context.Context) BrandingThemeWidgetOutput {
	return o
}

func (o BrandingThemeWidgetOutput) ToBrandingThemeWidgetPtrOutput() BrandingThemeWidgetPtrOutput {
	return o.ToBrandingThemeWidgetPtrOutputWithContext(context.Background())
}

func (o BrandingThemeWidgetOutput) ToBrandingThemeWidgetPtrOutputWithContext(ctx context.Context) BrandingThemeWidgetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingThemeWidget) *BrandingThemeWidget {
		return &v
	}).(BrandingThemeWidgetPtrOutput)
}

func (o BrandingThemeWidgetOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingThemeWidget] {
	return pulumix.Output[BrandingThemeWidget]{
		OutputState: o.OutputState,
	}
}

// Header text alignment. Available options: `center`, `left`, `right`. Defaults to `center`.
func (o BrandingThemeWidgetOutput) HeaderTextAlignment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeWidget) *string { return v.HeaderTextAlignment }).(pulumi.StringPtrOutput)
}

// Logo height. Value needs to be between `1` and `100`. Defaults to `52.0`.
func (o BrandingThemeWidgetOutput) LogoHeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BrandingThemeWidget) *float64 { return v.LogoHeight }).(pulumi.Float64PtrOutput)
}

// Logo position. Available options: `center`, `left`, `right`, `none`. Defaults to `center`.
func (o BrandingThemeWidgetOutput) LogoPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeWidget) *string { return v.LogoPosition }).(pulumi.StringPtrOutput)
}

// Logo url. Defaults to an empty string.
func (o BrandingThemeWidgetOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeWidget) *string { return v.LogoUrl }).(pulumi.StringPtrOutput)
}

// Social buttons layout. Available options: `bottom`, `top`. Defaults to `bottom`.
func (o BrandingThemeWidgetOutput) SocialButtonsLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BrandingThemeWidget) *string { return v.SocialButtonsLayout }).(pulumi.StringPtrOutput)
}

type BrandingThemeWidgetPtrOutput struct{ *pulumi.OutputState }

func (BrandingThemeWidgetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingThemeWidget)(nil)).Elem()
}

func (o BrandingThemeWidgetPtrOutput) ToBrandingThemeWidgetPtrOutput() BrandingThemeWidgetPtrOutput {
	return o
}

func (o BrandingThemeWidgetPtrOutput) ToBrandingThemeWidgetPtrOutputWithContext(ctx context.Context) BrandingThemeWidgetPtrOutput {
	return o
}

func (o BrandingThemeWidgetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingThemeWidget] {
	return pulumix.Output[*BrandingThemeWidget]{
		OutputState: o.OutputState,
	}
}

func (o BrandingThemeWidgetPtrOutput) Elem() BrandingThemeWidgetOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) BrandingThemeWidget {
		if v != nil {
			return *v
		}
		var ret BrandingThemeWidget
		return ret
	}).(BrandingThemeWidgetOutput)
}

// Header text alignment. Available options: `center`, `left`, `right`. Defaults to `center`.
func (o BrandingThemeWidgetPtrOutput) HeaderTextAlignment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) *string {
		if v == nil {
			return nil
		}
		return v.HeaderTextAlignment
	}).(pulumi.StringPtrOutput)
}

// Logo height. Value needs to be between `1` and `100`. Defaults to `52.0`.
func (o BrandingThemeWidgetPtrOutput) LogoHeight() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) *float64 {
		if v == nil {
			return nil
		}
		return v.LogoHeight
	}).(pulumi.Float64PtrOutput)
}

// Logo position. Available options: `center`, `left`, `right`, `none`. Defaults to `center`.
func (o BrandingThemeWidgetPtrOutput) LogoPosition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) *string {
		if v == nil {
			return nil
		}
		return v.LogoPosition
	}).(pulumi.StringPtrOutput)
}

// Logo url. Defaults to an empty string.
func (o BrandingThemeWidgetPtrOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) *string {
		if v == nil {
			return nil
		}
		return v.LogoUrl
	}).(pulumi.StringPtrOutput)
}

// Social buttons layout. Available options: `bottom`, `top`. Defaults to `bottom`.
func (o BrandingThemeWidgetPtrOutput) SocialButtonsLayout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingThemeWidget) *string {
		if v == nil {
			return nil
		}
		return v.SocialButtonsLayout
	}).(pulumi.StringPtrOutput)
}

type BrandingUniversalLogin struct {
	// The html template for the New Universal Login Experience.
	Body string `pulumi:"body"`
}

// BrandingUniversalLoginInput is an input type that accepts BrandingUniversalLoginArgs and BrandingUniversalLoginOutput values.
// You can construct a concrete instance of `BrandingUniversalLoginInput` via:
//
//	BrandingUniversalLoginArgs{...}
type BrandingUniversalLoginInput interface {
	pulumi.Input

	ToBrandingUniversalLoginOutput() BrandingUniversalLoginOutput
	ToBrandingUniversalLoginOutputWithContext(context.Context) BrandingUniversalLoginOutput
}

type BrandingUniversalLoginArgs struct {
	// The html template for the New Universal Login Experience.
	Body pulumi.StringInput `pulumi:"body"`
}

func (BrandingUniversalLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingUniversalLogin)(nil)).Elem()
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginOutput() BrandingUniversalLoginOutput {
	return i.ToBrandingUniversalLoginOutputWithContext(context.Background())
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginOutputWithContext(ctx context.Context) BrandingUniversalLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingUniversalLoginOutput)
}

func (i BrandingUniversalLoginArgs) ToOutput(ctx context.Context) pulumix.Output[BrandingUniversalLogin] {
	return pulumix.Output[BrandingUniversalLogin]{
		OutputState: i.ToBrandingUniversalLoginOutputWithContext(ctx).OutputState,
	}
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return i.ToBrandingUniversalLoginPtrOutputWithContext(context.Background())
}

func (i BrandingUniversalLoginArgs) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingUniversalLoginOutput).ToBrandingUniversalLoginPtrOutputWithContext(ctx)
}

// BrandingUniversalLoginPtrInput is an input type that accepts BrandingUniversalLoginArgs, BrandingUniversalLoginPtr and BrandingUniversalLoginPtrOutput values.
// You can construct a concrete instance of `BrandingUniversalLoginPtrInput` via:
//
//	        BrandingUniversalLoginArgs{...}
//
//	or:
//
//	        nil
type BrandingUniversalLoginPtrInput interface {
	pulumi.Input

	ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput
	ToBrandingUniversalLoginPtrOutputWithContext(context.Context) BrandingUniversalLoginPtrOutput
}

type brandingUniversalLoginPtrType BrandingUniversalLoginArgs

func BrandingUniversalLoginPtr(v *BrandingUniversalLoginArgs) BrandingUniversalLoginPtrInput {
	return (*brandingUniversalLoginPtrType)(v)
}

func (*brandingUniversalLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingUniversalLogin)(nil)).Elem()
}

func (i *brandingUniversalLoginPtrType) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return i.ToBrandingUniversalLoginPtrOutputWithContext(context.Background())
}

func (i *brandingUniversalLoginPtrType) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BrandingUniversalLoginPtrOutput)
}

func (i *brandingUniversalLoginPtrType) ToOutput(ctx context.Context) pulumix.Output[*BrandingUniversalLogin] {
	return pulumix.Output[*BrandingUniversalLogin]{
		OutputState: i.ToBrandingUniversalLoginPtrOutputWithContext(ctx).OutputState,
	}
}

type BrandingUniversalLoginOutput struct{ *pulumi.OutputState }

func (BrandingUniversalLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BrandingUniversalLogin)(nil)).Elem()
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginOutput() BrandingUniversalLoginOutput {
	return o
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginOutputWithContext(ctx context.Context) BrandingUniversalLoginOutput {
	return o
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return o.ToBrandingUniversalLoginPtrOutputWithContext(context.Background())
}

func (o BrandingUniversalLoginOutput) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BrandingUniversalLogin) *BrandingUniversalLogin {
		return &v
	}).(BrandingUniversalLoginPtrOutput)
}

func (o BrandingUniversalLoginOutput) ToOutput(ctx context.Context) pulumix.Output[BrandingUniversalLogin] {
	return pulumix.Output[BrandingUniversalLogin]{
		OutputState: o.OutputState,
	}
}

// The html template for the New Universal Login Experience.
func (o BrandingUniversalLoginOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v BrandingUniversalLogin) string { return v.Body }).(pulumi.StringOutput)
}

type BrandingUniversalLoginPtrOutput struct{ *pulumi.OutputState }

func (BrandingUniversalLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BrandingUniversalLogin)(nil)).Elem()
}

func (o BrandingUniversalLoginPtrOutput) ToBrandingUniversalLoginPtrOutput() BrandingUniversalLoginPtrOutput {
	return o
}

func (o BrandingUniversalLoginPtrOutput) ToBrandingUniversalLoginPtrOutputWithContext(ctx context.Context) BrandingUniversalLoginPtrOutput {
	return o
}

func (o BrandingUniversalLoginPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BrandingUniversalLogin] {
	return pulumix.Output[*BrandingUniversalLogin]{
		OutputState: o.OutputState,
	}
}

func (o BrandingUniversalLoginPtrOutput) Elem() BrandingUniversalLoginOutput {
	return o.ApplyT(func(v *BrandingUniversalLogin) BrandingUniversalLogin {
		if v != nil {
			return *v
		}
		var ret BrandingUniversalLogin
		return ret
	}).(BrandingUniversalLoginOutput)
}

// The html template for the New Universal Login Experience.
func (o BrandingUniversalLoginPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BrandingUniversalLogin) *string {
		if v == nil {
			return nil
		}
		return &v.Body
	}).(pulumi.StringPtrOutput)
}

type ClientAddons struct {
	// AWS Addon configuration.
	Aws *ClientAddonsAws `pulumi:"aws"`
	// Azure Blob Storage Addon configuration.
	AzureBlob *ClientAddonsAzureBlob `pulumi:"azureBlob"`
	// Azure Storage Bus Addon configuration.
	AzureSb *ClientAddonsAzureSb `pulumi:"azureSb"`
	// Box SSO indicator (no configuration settings needed for Box SSO).
	Box *ClientAddonsBox `pulumi:"box"`
	// CloudBees SSO indicator (no configuration settings needed for CloudBees SSO).
	Cloudbees *ClientAddonsCloudbees `pulumi:"cloudbees"`
	// Concur SSO indicator (no configuration settings needed for Concur SSO).
	Concur *ClientAddonsConcur `pulumi:"concur"`
	// Dropbox SSO indicator (no configuration settings needed for Dropbox SSO).
	Dropbox *ClientAddonsDropbox `pulumi:"dropbox"`
	// Adobe EchoSign SSO configuration.
	Echosign *ClientAddonsEchosign `pulumi:"echosign"`
	// Egnyte SSO configuration.
	Egnyte *ClientAddonsEgnyte `pulumi:"egnyte"`
	// Google Firebase addon configuration.
	Firebase *ClientAddonsFirebase `pulumi:"firebase"`
	// Layer addon configuration.
	Layer *ClientAddonsLayer `pulumi:"layer"`
	// Microsoft Dynamics CRM SSO configuration.
	Mscrm *ClientAddonsMscrm `pulumi:"mscrm"`
	// New Relic SSO configuration.
	Newrelic *ClientAddonsNewrelic `pulumi:"newrelic"`
	// Microsoft Office 365 SSO configuration.
	Office365 *ClientAddonsOffice365 `pulumi:"office365"`
	// Active Directory Rights Management Service SSO configuration.
	Rms *ClientAddonsRms `pulumi:"rms"`
	// Salesforce SSO configuration.
	Salesforce *ClientAddonsSalesforce `pulumi:"salesforce"`
	// Salesforce API addon configuration.
	SalesforceApi *ClientAddonsSalesforceApi `pulumi:"salesforceApi"`
	// Salesforce Sandbox addon configuration.
	SalesforceSandboxApi *ClientAddonsSalesforceSandboxApi `pulumi:"salesforceSandboxApi"`
	// Configuration settings for a SAML add-on.
	Samlp *ClientAddonsSamlp `pulumi:"samlp"`
	// SAP API addon configuration.
	SapApi *ClientAddonsSapApi `pulumi:"sapApi"`
	// Sentry SSO configuration.
	Sentry *ClientAddonsSentry `pulumi:"sentry"`
	// SharePoint SSO configuration.
	Sharepoint *ClientAddonsSharepoint `pulumi:"sharepoint"`
	// Slack team or workspace name usually first segment in your Slack URL, for example `https://acme-org.slack.com` would be `acme-org`.
	Slack *ClientAddonsSlack `pulumi:"slack"`
	// SpringCM SSO configuration.
	Springcm *ClientAddonsSpringcm `pulumi:"springcm"`
	// Generic SSO configuration.
	SsoIntegration *ClientAddonsSsoIntegration `pulumi:"ssoIntegration"`
	// Windows Azure Mobile Services addon configuration.
	Wams *ClientAddonsWams `pulumi:"wams"`
	// WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `clientAliases` properties on the client.
	Wsfed *ClientAddonsWsfed `pulumi:"wsfed"`
	// Zendesk SSO configuration.
	Zendesk *ClientAddonsZendesk `pulumi:"zendesk"`
	// Zoom SSO configuration.
	Zoom *ClientAddonsZoom `pulumi:"zoom"`
}

// ClientAddonsInput is an input type that accepts ClientAddonsArgs and ClientAddonsOutput values.
// You can construct a concrete instance of `ClientAddonsInput` via:
//
//	ClientAddonsArgs{...}
type ClientAddonsInput interface {
	pulumi.Input

	ToClientAddonsOutput() ClientAddonsOutput
	ToClientAddonsOutputWithContext(context.Context) ClientAddonsOutput
}

type ClientAddonsArgs struct {
	// AWS Addon configuration.
	Aws ClientAddonsAwsPtrInput `pulumi:"aws"`
	// Azure Blob Storage Addon configuration.
	AzureBlob ClientAddonsAzureBlobPtrInput `pulumi:"azureBlob"`
	// Azure Storage Bus Addon configuration.
	AzureSb ClientAddonsAzureSbPtrInput `pulumi:"azureSb"`
	// Box SSO indicator (no configuration settings needed for Box SSO).
	Box ClientAddonsBoxPtrInput `pulumi:"box"`
	// CloudBees SSO indicator (no configuration settings needed for CloudBees SSO).
	Cloudbees ClientAddonsCloudbeesPtrInput `pulumi:"cloudbees"`
	// Concur SSO indicator (no configuration settings needed for Concur SSO).
	Concur ClientAddonsConcurPtrInput `pulumi:"concur"`
	// Dropbox SSO indicator (no configuration settings needed for Dropbox SSO).
	Dropbox ClientAddonsDropboxPtrInput `pulumi:"dropbox"`
	// Adobe EchoSign SSO configuration.
	Echosign ClientAddonsEchosignPtrInput `pulumi:"echosign"`
	// Egnyte SSO configuration.
	Egnyte ClientAddonsEgnytePtrInput `pulumi:"egnyte"`
	// Google Firebase addon configuration.
	Firebase ClientAddonsFirebasePtrInput `pulumi:"firebase"`
	// Layer addon configuration.
	Layer ClientAddonsLayerPtrInput `pulumi:"layer"`
	// Microsoft Dynamics CRM SSO configuration.
	Mscrm ClientAddonsMscrmPtrInput `pulumi:"mscrm"`
	// New Relic SSO configuration.
	Newrelic ClientAddonsNewrelicPtrInput `pulumi:"newrelic"`
	// Microsoft Office 365 SSO configuration.
	Office365 ClientAddonsOffice365PtrInput `pulumi:"office365"`
	// Active Directory Rights Management Service SSO configuration.
	Rms ClientAddonsRmsPtrInput `pulumi:"rms"`
	// Salesforce SSO configuration.
	Salesforce ClientAddonsSalesforcePtrInput `pulumi:"salesforce"`
	// Salesforce API addon configuration.
	SalesforceApi ClientAddonsSalesforceApiPtrInput `pulumi:"salesforceApi"`
	// Salesforce Sandbox addon configuration.
	SalesforceSandboxApi ClientAddonsSalesforceSandboxApiPtrInput `pulumi:"salesforceSandboxApi"`
	// Configuration settings for a SAML add-on.
	Samlp ClientAddonsSamlpPtrInput `pulumi:"samlp"`
	// SAP API addon configuration.
	SapApi ClientAddonsSapApiPtrInput `pulumi:"sapApi"`
	// Sentry SSO configuration.
	Sentry ClientAddonsSentryPtrInput `pulumi:"sentry"`
	// SharePoint SSO configuration.
	Sharepoint ClientAddonsSharepointPtrInput `pulumi:"sharepoint"`
	// Slack team or workspace name usually first segment in your Slack URL, for example `https://acme-org.slack.com` would be `acme-org`.
	Slack ClientAddonsSlackPtrInput `pulumi:"slack"`
	// SpringCM SSO configuration.
	Springcm ClientAddonsSpringcmPtrInput `pulumi:"springcm"`
	// Generic SSO configuration.
	SsoIntegration ClientAddonsSsoIntegrationPtrInput `pulumi:"ssoIntegration"`
	// Windows Azure Mobile Services addon configuration.
	Wams ClientAddonsWamsPtrInput `pulumi:"wams"`
	// WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `clientAliases` properties on the client.
	Wsfed ClientAddonsWsfedPtrInput `pulumi:"wsfed"`
	// Zendesk SSO configuration.
	Zendesk ClientAddonsZendeskPtrInput `pulumi:"zendesk"`
	// Zoom SSO configuration.
	Zoom ClientAddonsZoomPtrInput `pulumi:"zoom"`
}

func (ClientAddonsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddons)(nil)).Elem()
}

func (i ClientAddonsArgs) ToClientAddonsOutput() ClientAddonsOutput {
	return i.ToClientAddonsOutputWithContext(context.Background())
}

func (i ClientAddonsArgs) ToClientAddonsOutputWithContext(ctx context.Context) ClientAddonsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOutput)
}

func (i ClientAddonsArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddons] {
	return pulumix.Output[ClientAddons]{
		OutputState: i.ToClientAddonsOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsArgs) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return i.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (i ClientAddonsArgs) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOutput).ToClientAddonsPtrOutputWithContext(ctx)
}

// ClientAddonsPtrInput is an input type that accepts ClientAddonsArgs, ClientAddonsPtr and ClientAddonsPtrOutput values.
// You can construct a concrete instance of `ClientAddonsPtrInput` via:
//
//	        ClientAddonsArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsPtrInput interface {
	pulumi.Input

	ToClientAddonsPtrOutput() ClientAddonsPtrOutput
	ToClientAddonsPtrOutputWithContext(context.Context) ClientAddonsPtrOutput
}

type clientAddonsPtrType ClientAddonsArgs

func ClientAddonsPtr(v *ClientAddonsArgs) ClientAddonsPtrInput {
	return (*clientAddonsPtrType)(v)
}

func (*clientAddonsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddons)(nil)).Elem()
}

func (i *clientAddonsPtrType) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return i.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (i *clientAddonsPtrType) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsPtrOutput)
}

func (i *clientAddonsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddons] {
	return pulumix.Output[*ClientAddons]{
		OutputState: i.ToClientAddonsPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsOutput struct{ *pulumi.OutputState }

func (ClientAddonsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddons)(nil)).Elem()
}

func (o ClientAddonsOutput) ToClientAddonsOutput() ClientAddonsOutput {
	return o
}

func (o ClientAddonsOutput) ToClientAddonsOutputWithContext(ctx context.Context) ClientAddonsOutput {
	return o
}

func (o ClientAddonsOutput) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return o.ToClientAddonsPtrOutputWithContext(context.Background())
}

func (o ClientAddonsOutput) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddons) *ClientAddons {
		return &v
	}).(ClientAddonsPtrOutput)
}

func (o ClientAddonsOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddons] {
	return pulumix.Output[ClientAddons]{
		OutputState: o.OutputState,
	}
}

// AWS Addon configuration.
func (o ClientAddonsOutput) Aws() ClientAddonsAwsPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsAws { return v.Aws }).(ClientAddonsAwsPtrOutput)
}

// Azure Blob Storage Addon configuration.
func (o ClientAddonsOutput) AzureBlob() ClientAddonsAzureBlobPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsAzureBlob { return v.AzureBlob }).(ClientAddonsAzureBlobPtrOutput)
}

// Azure Storage Bus Addon configuration.
func (o ClientAddonsOutput) AzureSb() ClientAddonsAzureSbPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsAzureSb { return v.AzureSb }).(ClientAddonsAzureSbPtrOutput)
}

// Box SSO indicator (no configuration settings needed for Box SSO).
func (o ClientAddonsOutput) Box() ClientAddonsBoxPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsBox { return v.Box }).(ClientAddonsBoxPtrOutput)
}

// CloudBees SSO indicator (no configuration settings needed for CloudBees SSO).
func (o ClientAddonsOutput) Cloudbees() ClientAddonsCloudbeesPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsCloudbees { return v.Cloudbees }).(ClientAddonsCloudbeesPtrOutput)
}

// Concur SSO indicator (no configuration settings needed for Concur SSO).
func (o ClientAddonsOutput) Concur() ClientAddonsConcurPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsConcur { return v.Concur }).(ClientAddonsConcurPtrOutput)
}

// Dropbox SSO indicator (no configuration settings needed for Dropbox SSO).
func (o ClientAddonsOutput) Dropbox() ClientAddonsDropboxPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsDropbox { return v.Dropbox }).(ClientAddonsDropboxPtrOutput)
}

// Adobe EchoSign SSO configuration.
func (o ClientAddonsOutput) Echosign() ClientAddonsEchosignPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsEchosign { return v.Echosign }).(ClientAddonsEchosignPtrOutput)
}

// Egnyte SSO configuration.
func (o ClientAddonsOutput) Egnyte() ClientAddonsEgnytePtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsEgnyte { return v.Egnyte }).(ClientAddonsEgnytePtrOutput)
}

// Google Firebase addon configuration.
func (o ClientAddonsOutput) Firebase() ClientAddonsFirebasePtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsFirebase { return v.Firebase }).(ClientAddonsFirebasePtrOutput)
}

// Layer addon configuration.
func (o ClientAddonsOutput) Layer() ClientAddonsLayerPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsLayer { return v.Layer }).(ClientAddonsLayerPtrOutput)
}

// Microsoft Dynamics CRM SSO configuration.
func (o ClientAddonsOutput) Mscrm() ClientAddonsMscrmPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsMscrm { return v.Mscrm }).(ClientAddonsMscrmPtrOutput)
}

// New Relic SSO configuration.
func (o ClientAddonsOutput) Newrelic() ClientAddonsNewrelicPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsNewrelic { return v.Newrelic }).(ClientAddonsNewrelicPtrOutput)
}

// Microsoft Office 365 SSO configuration.
func (o ClientAddonsOutput) Office365() ClientAddonsOffice365PtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsOffice365 { return v.Office365 }).(ClientAddonsOffice365PtrOutput)
}

// Active Directory Rights Management Service SSO configuration.
func (o ClientAddonsOutput) Rms() ClientAddonsRmsPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsRms { return v.Rms }).(ClientAddonsRmsPtrOutput)
}

// Salesforce SSO configuration.
func (o ClientAddonsOutput) Salesforce() ClientAddonsSalesforcePtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSalesforce { return v.Salesforce }).(ClientAddonsSalesforcePtrOutput)
}

// Salesforce API addon configuration.
func (o ClientAddonsOutput) SalesforceApi() ClientAddonsSalesforceApiPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSalesforceApi { return v.SalesforceApi }).(ClientAddonsSalesforceApiPtrOutput)
}

// Salesforce Sandbox addon configuration.
func (o ClientAddonsOutput) SalesforceSandboxApi() ClientAddonsSalesforceSandboxApiPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSalesforceSandboxApi { return v.SalesforceSandboxApi }).(ClientAddonsSalesforceSandboxApiPtrOutput)
}

// Configuration settings for a SAML add-on.
func (o ClientAddonsOutput) Samlp() ClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSamlp { return v.Samlp }).(ClientAddonsSamlpPtrOutput)
}

// SAP API addon configuration.
func (o ClientAddonsOutput) SapApi() ClientAddonsSapApiPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSapApi { return v.SapApi }).(ClientAddonsSapApiPtrOutput)
}

// Sentry SSO configuration.
func (o ClientAddonsOutput) Sentry() ClientAddonsSentryPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSentry { return v.Sentry }).(ClientAddonsSentryPtrOutput)
}

// SharePoint SSO configuration.
func (o ClientAddonsOutput) Sharepoint() ClientAddonsSharepointPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSharepoint { return v.Sharepoint }).(ClientAddonsSharepointPtrOutput)
}

// Slack team or workspace name usually first segment in your Slack URL, for example `https://acme-org.slack.com` would be `acme-org`.
func (o ClientAddonsOutput) Slack() ClientAddonsSlackPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSlack { return v.Slack }).(ClientAddonsSlackPtrOutput)
}

// SpringCM SSO configuration.
func (o ClientAddonsOutput) Springcm() ClientAddonsSpringcmPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSpringcm { return v.Springcm }).(ClientAddonsSpringcmPtrOutput)
}

// Generic SSO configuration.
func (o ClientAddonsOutput) SsoIntegration() ClientAddonsSsoIntegrationPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsSsoIntegration { return v.SsoIntegration }).(ClientAddonsSsoIntegrationPtrOutput)
}

// Windows Azure Mobile Services addon configuration.
func (o ClientAddonsOutput) Wams() ClientAddonsWamsPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsWams { return v.Wams }).(ClientAddonsWamsPtrOutput)
}

// WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `clientAliases` properties on the client.
func (o ClientAddonsOutput) Wsfed() ClientAddonsWsfedPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsWsfed { return v.Wsfed }).(ClientAddonsWsfedPtrOutput)
}

// Zendesk SSO configuration.
func (o ClientAddonsOutput) Zendesk() ClientAddonsZendeskPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsZendesk { return v.Zendesk }).(ClientAddonsZendeskPtrOutput)
}

// Zoom SSO configuration.
func (o ClientAddonsOutput) Zoom() ClientAddonsZoomPtrOutput {
	return o.ApplyT(func(v ClientAddons) *ClientAddonsZoom { return v.Zoom }).(ClientAddonsZoomPtrOutput)
}

type ClientAddonsPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddons)(nil)).Elem()
}

func (o ClientAddonsPtrOutput) ToClientAddonsPtrOutput() ClientAddonsPtrOutput {
	return o
}

func (o ClientAddonsPtrOutput) ToClientAddonsPtrOutputWithContext(ctx context.Context) ClientAddonsPtrOutput {
	return o
}

func (o ClientAddonsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddons] {
	return pulumix.Output[*ClientAddons]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsPtrOutput) Elem() ClientAddonsOutput {
	return o.ApplyT(func(v *ClientAddons) ClientAddons {
		if v != nil {
			return *v
		}
		var ret ClientAddons
		return ret
	}).(ClientAddonsOutput)
}

// AWS Addon configuration.
func (o ClientAddonsPtrOutput) Aws() ClientAddonsAwsPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsAws {
		if v == nil {
			return nil
		}
		return v.Aws
	}).(ClientAddonsAwsPtrOutput)
}

// Azure Blob Storage Addon configuration.
func (o ClientAddonsPtrOutput) AzureBlob() ClientAddonsAzureBlobPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsAzureBlob {
		if v == nil {
			return nil
		}
		return v.AzureBlob
	}).(ClientAddonsAzureBlobPtrOutput)
}

// Azure Storage Bus Addon configuration.
func (o ClientAddonsPtrOutput) AzureSb() ClientAddonsAzureSbPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsAzureSb {
		if v == nil {
			return nil
		}
		return v.AzureSb
	}).(ClientAddonsAzureSbPtrOutput)
}

// Box SSO indicator (no configuration settings needed for Box SSO).
func (o ClientAddonsPtrOutput) Box() ClientAddonsBoxPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsBox {
		if v == nil {
			return nil
		}
		return v.Box
	}).(ClientAddonsBoxPtrOutput)
}

// CloudBees SSO indicator (no configuration settings needed for CloudBees SSO).
func (o ClientAddonsPtrOutput) Cloudbees() ClientAddonsCloudbeesPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsCloudbees {
		if v == nil {
			return nil
		}
		return v.Cloudbees
	}).(ClientAddonsCloudbeesPtrOutput)
}

// Concur SSO indicator (no configuration settings needed for Concur SSO).
func (o ClientAddonsPtrOutput) Concur() ClientAddonsConcurPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsConcur {
		if v == nil {
			return nil
		}
		return v.Concur
	}).(ClientAddonsConcurPtrOutput)
}

// Dropbox SSO indicator (no configuration settings needed for Dropbox SSO).
func (o ClientAddonsPtrOutput) Dropbox() ClientAddonsDropboxPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsDropbox {
		if v == nil {
			return nil
		}
		return v.Dropbox
	}).(ClientAddonsDropboxPtrOutput)
}

// Adobe EchoSign SSO configuration.
func (o ClientAddonsPtrOutput) Echosign() ClientAddonsEchosignPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsEchosign {
		if v == nil {
			return nil
		}
		return v.Echosign
	}).(ClientAddonsEchosignPtrOutput)
}

// Egnyte SSO configuration.
func (o ClientAddonsPtrOutput) Egnyte() ClientAddonsEgnytePtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsEgnyte {
		if v == nil {
			return nil
		}
		return v.Egnyte
	}).(ClientAddonsEgnytePtrOutput)
}

// Google Firebase addon configuration.
func (o ClientAddonsPtrOutput) Firebase() ClientAddonsFirebasePtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsFirebase {
		if v == nil {
			return nil
		}
		return v.Firebase
	}).(ClientAddonsFirebasePtrOutput)
}

// Layer addon configuration.
func (o ClientAddonsPtrOutput) Layer() ClientAddonsLayerPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsLayer {
		if v == nil {
			return nil
		}
		return v.Layer
	}).(ClientAddonsLayerPtrOutput)
}

// Microsoft Dynamics CRM SSO configuration.
func (o ClientAddonsPtrOutput) Mscrm() ClientAddonsMscrmPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsMscrm {
		if v == nil {
			return nil
		}
		return v.Mscrm
	}).(ClientAddonsMscrmPtrOutput)
}

// New Relic SSO configuration.
func (o ClientAddonsPtrOutput) Newrelic() ClientAddonsNewrelicPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsNewrelic {
		if v == nil {
			return nil
		}
		return v.Newrelic
	}).(ClientAddonsNewrelicPtrOutput)
}

// Microsoft Office 365 SSO configuration.
func (o ClientAddonsPtrOutput) Office365() ClientAddonsOffice365PtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsOffice365 {
		if v == nil {
			return nil
		}
		return v.Office365
	}).(ClientAddonsOffice365PtrOutput)
}

// Active Directory Rights Management Service SSO configuration.
func (o ClientAddonsPtrOutput) Rms() ClientAddonsRmsPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsRms {
		if v == nil {
			return nil
		}
		return v.Rms
	}).(ClientAddonsRmsPtrOutput)
}

// Salesforce SSO configuration.
func (o ClientAddonsPtrOutput) Salesforce() ClientAddonsSalesforcePtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSalesforce {
		if v == nil {
			return nil
		}
		return v.Salesforce
	}).(ClientAddonsSalesforcePtrOutput)
}

// Salesforce API addon configuration.
func (o ClientAddonsPtrOutput) SalesforceApi() ClientAddonsSalesforceApiPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSalesforceApi {
		if v == nil {
			return nil
		}
		return v.SalesforceApi
	}).(ClientAddonsSalesforceApiPtrOutput)
}

// Salesforce Sandbox addon configuration.
func (o ClientAddonsPtrOutput) SalesforceSandboxApi() ClientAddonsSalesforceSandboxApiPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSalesforceSandboxApi {
		if v == nil {
			return nil
		}
		return v.SalesforceSandboxApi
	}).(ClientAddonsSalesforceSandboxApiPtrOutput)
}

// Configuration settings for a SAML add-on.
func (o ClientAddonsPtrOutput) Samlp() ClientAddonsSamlpPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSamlp {
		if v == nil {
			return nil
		}
		return v.Samlp
	}).(ClientAddonsSamlpPtrOutput)
}

// SAP API addon configuration.
func (o ClientAddonsPtrOutput) SapApi() ClientAddonsSapApiPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSapApi {
		if v == nil {
			return nil
		}
		return v.SapApi
	}).(ClientAddonsSapApiPtrOutput)
}

// Sentry SSO configuration.
func (o ClientAddonsPtrOutput) Sentry() ClientAddonsSentryPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSentry {
		if v == nil {
			return nil
		}
		return v.Sentry
	}).(ClientAddonsSentryPtrOutput)
}

// SharePoint SSO configuration.
func (o ClientAddonsPtrOutput) Sharepoint() ClientAddonsSharepointPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSharepoint {
		if v == nil {
			return nil
		}
		return v.Sharepoint
	}).(ClientAddonsSharepointPtrOutput)
}

// Slack team or workspace name usually first segment in your Slack URL, for example `https://acme-org.slack.com` would be `acme-org`.
func (o ClientAddonsPtrOutput) Slack() ClientAddonsSlackPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSlack {
		if v == nil {
			return nil
		}
		return v.Slack
	}).(ClientAddonsSlackPtrOutput)
}

// SpringCM SSO configuration.
func (o ClientAddonsPtrOutput) Springcm() ClientAddonsSpringcmPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSpringcm {
		if v == nil {
			return nil
		}
		return v.Springcm
	}).(ClientAddonsSpringcmPtrOutput)
}

// Generic SSO configuration.
func (o ClientAddonsPtrOutput) SsoIntegration() ClientAddonsSsoIntegrationPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsSsoIntegration {
		if v == nil {
			return nil
		}
		return v.SsoIntegration
	}).(ClientAddonsSsoIntegrationPtrOutput)
}

// Windows Azure Mobile Services addon configuration.
func (o ClientAddonsPtrOutput) Wams() ClientAddonsWamsPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsWams {
		if v == nil {
			return nil
		}
		return v.Wams
	}).(ClientAddonsWamsPtrOutput)
}

// WS-Fed (WIF) addon indicator. Actual configuration is stored in `callback` and `clientAliases` properties on the client.
func (o ClientAddonsPtrOutput) Wsfed() ClientAddonsWsfedPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsWsfed {
		if v == nil {
			return nil
		}
		return v.Wsfed
	}).(ClientAddonsWsfedPtrOutput)
}

// Zendesk SSO configuration.
func (o ClientAddonsPtrOutput) Zendesk() ClientAddonsZendeskPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsZendesk {
		if v == nil {
			return nil
		}
		return v.Zendesk
	}).(ClientAddonsZendeskPtrOutput)
}

// Zoom SSO configuration.
func (o ClientAddonsPtrOutput) Zoom() ClientAddonsZoomPtrOutput {
	return o.ApplyT(func(v *ClientAddons) *ClientAddonsZoom {
		if v == nil {
			return nil
		}
		return v.Zoom
	}).(ClientAddonsZoomPtrOutput)
}

type ClientAddonsAws struct {
	LifetimeInSeconds *int    `pulumi:"lifetimeInSeconds"`
	Principal         *string `pulumi:"principal"`
	Role              *string `pulumi:"role"`
}

// ClientAddonsAwsInput is an input type that accepts ClientAddonsAwsArgs and ClientAddonsAwsOutput values.
// You can construct a concrete instance of `ClientAddonsAwsInput` via:
//
//	ClientAddonsAwsArgs{...}
type ClientAddonsAwsInput interface {
	pulumi.Input

	ToClientAddonsAwsOutput() ClientAddonsAwsOutput
	ToClientAddonsAwsOutputWithContext(context.Context) ClientAddonsAwsOutput
}

type ClientAddonsAwsArgs struct {
	LifetimeInSeconds pulumi.IntPtrInput    `pulumi:"lifetimeInSeconds"`
	Principal         pulumi.StringPtrInput `pulumi:"principal"`
	Role              pulumi.StringPtrInput `pulumi:"role"`
}

func (ClientAddonsAwsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsAws)(nil)).Elem()
}

func (i ClientAddonsAwsArgs) ToClientAddonsAwsOutput() ClientAddonsAwsOutput {
	return i.ToClientAddonsAwsOutputWithContext(context.Background())
}

func (i ClientAddonsAwsArgs) ToClientAddonsAwsOutputWithContext(ctx context.Context) ClientAddonsAwsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsAwsOutput)
}

func (i ClientAddonsAwsArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsAws] {
	return pulumix.Output[ClientAddonsAws]{
		OutputState: i.ToClientAddonsAwsOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsAwsArgs) ToClientAddonsAwsPtrOutput() ClientAddonsAwsPtrOutput {
	return i.ToClientAddonsAwsPtrOutputWithContext(context.Background())
}

func (i ClientAddonsAwsArgs) ToClientAddonsAwsPtrOutputWithContext(ctx context.Context) ClientAddonsAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsAwsOutput).ToClientAddonsAwsPtrOutputWithContext(ctx)
}

// ClientAddonsAwsPtrInput is an input type that accepts ClientAddonsAwsArgs, ClientAddonsAwsPtr and ClientAddonsAwsPtrOutput values.
// You can construct a concrete instance of `ClientAddonsAwsPtrInput` via:
//
//	        ClientAddonsAwsArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsAwsPtrInput interface {
	pulumi.Input

	ToClientAddonsAwsPtrOutput() ClientAddonsAwsPtrOutput
	ToClientAddonsAwsPtrOutputWithContext(context.Context) ClientAddonsAwsPtrOutput
}

type clientAddonsAwsPtrType ClientAddonsAwsArgs

func ClientAddonsAwsPtr(v *ClientAddonsAwsArgs) ClientAddonsAwsPtrInput {
	return (*clientAddonsAwsPtrType)(v)
}

func (*clientAddonsAwsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsAws)(nil)).Elem()
}

func (i *clientAddonsAwsPtrType) ToClientAddonsAwsPtrOutput() ClientAddonsAwsPtrOutput {
	return i.ToClientAddonsAwsPtrOutputWithContext(context.Background())
}

func (i *clientAddonsAwsPtrType) ToClientAddonsAwsPtrOutputWithContext(ctx context.Context) ClientAddonsAwsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsAwsPtrOutput)
}

func (i *clientAddonsAwsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsAws] {
	return pulumix.Output[*ClientAddonsAws]{
		OutputState: i.ToClientAddonsAwsPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsAwsOutput struct{ *pulumi.OutputState }

func (ClientAddonsAwsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsAws)(nil)).Elem()
}

func (o ClientAddonsAwsOutput) ToClientAddonsAwsOutput() ClientAddonsAwsOutput {
	return o
}

func (o ClientAddonsAwsOutput) ToClientAddonsAwsOutputWithContext(ctx context.Context) ClientAddonsAwsOutput {
	return o
}

func (o ClientAddonsAwsOutput) ToClientAddonsAwsPtrOutput() ClientAddonsAwsPtrOutput {
	return o.ToClientAddonsAwsPtrOutputWithContext(context.Background())
}

func (o ClientAddonsAwsOutput) ToClientAddonsAwsPtrOutputWithContext(ctx context.Context) ClientAddonsAwsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsAws) *ClientAddonsAws {
		return &v
	}).(ClientAddonsAwsPtrOutput)
}

func (o ClientAddonsAwsOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsAws] {
	return pulumix.Output[ClientAddonsAws]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsAwsOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientAddonsAws) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

func (o ClientAddonsAwsOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAws) *string { return v.Principal }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAwsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAws) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type ClientAddonsAwsPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsAwsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsAws)(nil)).Elem()
}

func (o ClientAddonsAwsPtrOutput) ToClientAddonsAwsPtrOutput() ClientAddonsAwsPtrOutput {
	return o
}

func (o ClientAddonsAwsPtrOutput) ToClientAddonsAwsPtrOutputWithContext(ctx context.Context) ClientAddonsAwsPtrOutput {
	return o
}

func (o ClientAddonsAwsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsAws] {
	return pulumix.Output[*ClientAddonsAws]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsAwsPtrOutput) Elem() ClientAddonsAwsOutput {
	return o.ApplyT(func(v *ClientAddonsAws) ClientAddonsAws {
		if v != nil {
			return *v
		}
		var ret ClientAddonsAws
		return ret
	}).(ClientAddonsAwsOutput)
}

func (o ClientAddonsAwsPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAws) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ClientAddonsAwsPtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAws) *string {
		if v == nil {
			return nil
		}
		return v.Principal
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAwsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAws) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsAzureBlob struct {
	AccountName      *string `pulumi:"accountName"`
	BlobDelete       *bool   `pulumi:"blobDelete"`
	BlobName         *string `pulumi:"blobName"`
	BlobRead         *bool   `pulumi:"blobRead"`
	BlobWrite        *bool   `pulumi:"blobWrite"`
	ContainerDelete  *bool   `pulumi:"containerDelete"`
	ContainerList    *bool   `pulumi:"containerList"`
	ContainerName    *string `pulumi:"containerName"`
	ContainerRead    *bool   `pulumi:"containerRead"`
	ContainerWrite   *bool   `pulumi:"containerWrite"`
	Expiration       *int    `pulumi:"expiration"`
	SignedIdentifier *string `pulumi:"signedIdentifier"`
	StorageAccessKey *string `pulumi:"storageAccessKey"`
}

// ClientAddonsAzureBlobInput is an input type that accepts ClientAddonsAzureBlobArgs and ClientAddonsAzureBlobOutput values.
// You can construct a concrete instance of `ClientAddonsAzureBlobInput` via:
//
//	ClientAddonsAzureBlobArgs{...}
type ClientAddonsAzureBlobInput interface {
	pulumi.Input

	ToClientAddonsAzureBlobOutput() ClientAddonsAzureBlobOutput
	ToClientAddonsAzureBlobOutputWithContext(context.Context) ClientAddonsAzureBlobOutput
}

type ClientAddonsAzureBlobArgs struct {
	AccountName      pulumi.StringPtrInput `pulumi:"accountName"`
	BlobDelete       pulumi.BoolPtrInput   `pulumi:"blobDelete"`
	BlobName         pulumi.StringPtrInput `pulumi:"blobName"`
	BlobRead         pulumi.BoolPtrInput   `pulumi:"blobRead"`
	BlobWrite        pulumi.BoolPtrInput   `pulumi:"blobWrite"`
	ContainerDelete  pulumi.BoolPtrInput   `pulumi:"containerDelete"`
	ContainerList    pulumi.BoolPtrInput   `pulumi:"containerList"`
	ContainerName    pulumi.StringPtrInput `pulumi:"containerName"`
	ContainerRead    pulumi.BoolPtrInput   `pulumi:"containerRead"`
	ContainerWrite   pulumi.BoolPtrInput   `pulumi:"containerWrite"`
	Expiration       pulumi.IntPtrInput    `pulumi:"expiration"`
	SignedIdentifier pulumi.StringPtrInput `pulumi:"signedIdentifier"`
	StorageAccessKey pulumi.StringPtrInput `pulumi:"storageAccessKey"`
}

func (ClientAddonsAzureBlobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsAzureBlob)(nil)).Elem()
}

func (i ClientAddonsAzureBlobArgs) ToClientAddonsAzureBlobOutput() ClientAddonsAzureBlobOutput {
	return i.ToClientAddonsAzureBlobOutputWithContext(context.Background())
}

func (i ClientAddonsAzureBlobArgs) ToClientAddonsAzureBlobOutputWithContext(ctx context.Context) ClientAddonsAzureBlobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsAzureBlobOutput)
}

func (i ClientAddonsAzureBlobArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsAzureBlob] {
	return pulumix.Output[ClientAddonsAzureBlob]{
		OutputState: i.ToClientAddonsAzureBlobOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsAzureBlobArgs) ToClientAddonsAzureBlobPtrOutput() ClientAddonsAzureBlobPtrOutput {
	return i.ToClientAddonsAzureBlobPtrOutputWithContext(context.Background())
}

func (i ClientAddonsAzureBlobArgs) ToClientAddonsAzureBlobPtrOutputWithContext(ctx context.Context) ClientAddonsAzureBlobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsAzureBlobOutput).ToClientAddonsAzureBlobPtrOutputWithContext(ctx)
}

// ClientAddonsAzureBlobPtrInput is an input type that accepts ClientAddonsAzureBlobArgs, ClientAddonsAzureBlobPtr and ClientAddonsAzureBlobPtrOutput values.
// You can construct a concrete instance of `ClientAddonsAzureBlobPtrInput` via:
//
//	        ClientAddonsAzureBlobArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsAzureBlobPtrInput interface {
	pulumi.Input

	ToClientAddonsAzureBlobPtrOutput() ClientAddonsAzureBlobPtrOutput
	ToClientAddonsAzureBlobPtrOutputWithContext(context.Context) ClientAddonsAzureBlobPtrOutput
}

type clientAddonsAzureBlobPtrType ClientAddonsAzureBlobArgs

func ClientAddonsAzureBlobPtr(v *ClientAddonsAzureBlobArgs) ClientAddonsAzureBlobPtrInput {
	return (*clientAddonsAzureBlobPtrType)(v)
}

func (*clientAddonsAzureBlobPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsAzureBlob)(nil)).Elem()
}

func (i *clientAddonsAzureBlobPtrType) ToClientAddonsAzureBlobPtrOutput() ClientAddonsAzureBlobPtrOutput {
	return i.ToClientAddonsAzureBlobPtrOutputWithContext(context.Background())
}

func (i *clientAddonsAzureBlobPtrType) ToClientAddonsAzureBlobPtrOutputWithContext(ctx context.Context) ClientAddonsAzureBlobPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsAzureBlobPtrOutput)
}

func (i *clientAddonsAzureBlobPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsAzureBlob] {
	return pulumix.Output[*ClientAddonsAzureBlob]{
		OutputState: i.ToClientAddonsAzureBlobPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsAzureBlobOutput struct{ *pulumi.OutputState }

func (ClientAddonsAzureBlobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsAzureBlob)(nil)).Elem()
}

func (o ClientAddonsAzureBlobOutput) ToClientAddonsAzureBlobOutput() ClientAddonsAzureBlobOutput {
	return o
}

func (o ClientAddonsAzureBlobOutput) ToClientAddonsAzureBlobOutputWithContext(ctx context.Context) ClientAddonsAzureBlobOutput {
	return o
}

func (o ClientAddonsAzureBlobOutput) ToClientAddonsAzureBlobPtrOutput() ClientAddonsAzureBlobPtrOutput {
	return o.ToClientAddonsAzureBlobPtrOutputWithContext(context.Background())
}

func (o ClientAddonsAzureBlobOutput) ToClientAddonsAzureBlobPtrOutputWithContext(ctx context.Context) ClientAddonsAzureBlobPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsAzureBlob) *ClientAddonsAzureBlob {
		return &v
	}).(ClientAddonsAzureBlobPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsAzureBlob] {
	return pulumix.Output[ClientAddonsAzureBlob]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsAzureBlobOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) BlobDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *bool { return v.BlobDelete }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) BlobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *string { return v.BlobName }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) BlobRead() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *bool { return v.BlobRead }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) BlobWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *bool { return v.BlobWrite }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) ContainerDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *bool { return v.ContainerDelete }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) ContainerList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *bool { return v.ContainerList }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) ContainerRead() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *bool { return v.ContainerRead }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) ContainerWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *bool { return v.ContainerWrite }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) Expiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *int { return v.Expiration }).(pulumi.IntPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) SignedIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *string { return v.SignedIdentifier }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureBlobOutput) StorageAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureBlob) *string { return v.StorageAccessKey }).(pulumi.StringPtrOutput)
}

type ClientAddonsAzureBlobPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsAzureBlobPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsAzureBlob)(nil)).Elem()
}

func (o ClientAddonsAzureBlobPtrOutput) ToClientAddonsAzureBlobPtrOutput() ClientAddonsAzureBlobPtrOutput {
	return o
}

func (o ClientAddonsAzureBlobPtrOutput) ToClientAddonsAzureBlobPtrOutputWithContext(ctx context.Context) ClientAddonsAzureBlobPtrOutput {
	return o
}

func (o ClientAddonsAzureBlobPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsAzureBlob] {
	return pulumix.Output[*ClientAddonsAzureBlob]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsAzureBlobPtrOutput) Elem() ClientAddonsAzureBlobOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) ClientAddonsAzureBlob {
		if v != nil {
			return *v
		}
		var ret ClientAddonsAzureBlob
		return ret
	}).(ClientAddonsAzureBlobOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) BlobDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *bool {
		if v == nil {
			return nil
		}
		return v.BlobDelete
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) BlobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *string {
		if v == nil {
			return nil
		}
		return v.BlobName
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) BlobRead() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *bool {
		if v == nil {
			return nil
		}
		return v.BlobRead
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) BlobWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *bool {
		if v == nil {
			return nil
		}
		return v.BlobWrite
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) ContainerDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *bool {
		if v == nil {
			return nil
		}
		return v.ContainerDelete
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) ContainerList() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *bool {
		if v == nil {
			return nil
		}
		return v.ContainerList
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) ContainerRead() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *bool {
		if v == nil {
			return nil
		}
		return v.ContainerRead
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) ContainerWrite() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *bool {
		if v == nil {
			return nil
		}
		return v.ContainerWrite
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) Expiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *int {
		if v == nil {
			return nil
		}
		return v.Expiration
	}).(pulumi.IntPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) SignedIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *string {
		if v == nil {
			return nil
		}
		return v.SignedIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureBlobPtrOutput) StorageAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureBlob) *string {
		if v == nil {
			return nil
		}
		return v.StorageAccessKey
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsAzureSb struct {
	EntityPath *string `pulumi:"entityPath"`
	Expiration *int    `pulumi:"expiration"`
	Namespace  *string `pulumi:"namespace"`
	SasKey     *string `pulumi:"sasKey"`
	SasKeyName *string `pulumi:"sasKeyName"`
}

// ClientAddonsAzureSbInput is an input type that accepts ClientAddonsAzureSbArgs and ClientAddonsAzureSbOutput values.
// You can construct a concrete instance of `ClientAddonsAzureSbInput` via:
//
//	ClientAddonsAzureSbArgs{...}
type ClientAddonsAzureSbInput interface {
	pulumi.Input

	ToClientAddonsAzureSbOutput() ClientAddonsAzureSbOutput
	ToClientAddonsAzureSbOutputWithContext(context.Context) ClientAddonsAzureSbOutput
}

type ClientAddonsAzureSbArgs struct {
	EntityPath pulumi.StringPtrInput `pulumi:"entityPath"`
	Expiration pulumi.IntPtrInput    `pulumi:"expiration"`
	Namespace  pulumi.StringPtrInput `pulumi:"namespace"`
	SasKey     pulumi.StringPtrInput `pulumi:"sasKey"`
	SasKeyName pulumi.StringPtrInput `pulumi:"sasKeyName"`
}

func (ClientAddonsAzureSbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsAzureSb)(nil)).Elem()
}

func (i ClientAddonsAzureSbArgs) ToClientAddonsAzureSbOutput() ClientAddonsAzureSbOutput {
	return i.ToClientAddonsAzureSbOutputWithContext(context.Background())
}

func (i ClientAddonsAzureSbArgs) ToClientAddonsAzureSbOutputWithContext(ctx context.Context) ClientAddonsAzureSbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsAzureSbOutput)
}

func (i ClientAddonsAzureSbArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsAzureSb] {
	return pulumix.Output[ClientAddonsAzureSb]{
		OutputState: i.ToClientAddonsAzureSbOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsAzureSbArgs) ToClientAddonsAzureSbPtrOutput() ClientAddonsAzureSbPtrOutput {
	return i.ToClientAddonsAzureSbPtrOutputWithContext(context.Background())
}

func (i ClientAddonsAzureSbArgs) ToClientAddonsAzureSbPtrOutputWithContext(ctx context.Context) ClientAddonsAzureSbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsAzureSbOutput).ToClientAddonsAzureSbPtrOutputWithContext(ctx)
}

// ClientAddonsAzureSbPtrInput is an input type that accepts ClientAddonsAzureSbArgs, ClientAddonsAzureSbPtr and ClientAddonsAzureSbPtrOutput values.
// You can construct a concrete instance of `ClientAddonsAzureSbPtrInput` via:
//
//	        ClientAddonsAzureSbArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsAzureSbPtrInput interface {
	pulumi.Input

	ToClientAddonsAzureSbPtrOutput() ClientAddonsAzureSbPtrOutput
	ToClientAddonsAzureSbPtrOutputWithContext(context.Context) ClientAddonsAzureSbPtrOutput
}

type clientAddonsAzureSbPtrType ClientAddonsAzureSbArgs

func ClientAddonsAzureSbPtr(v *ClientAddonsAzureSbArgs) ClientAddonsAzureSbPtrInput {
	return (*clientAddonsAzureSbPtrType)(v)
}

func (*clientAddonsAzureSbPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsAzureSb)(nil)).Elem()
}

func (i *clientAddonsAzureSbPtrType) ToClientAddonsAzureSbPtrOutput() ClientAddonsAzureSbPtrOutput {
	return i.ToClientAddonsAzureSbPtrOutputWithContext(context.Background())
}

func (i *clientAddonsAzureSbPtrType) ToClientAddonsAzureSbPtrOutputWithContext(ctx context.Context) ClientAddonsAzureSbPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsAzureSbPtrOutput)
}

func (i *clientAddonsAzureSbPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsAzureSb] {
	return pulumix.Output[*ClientAddonsAzureSb]{
		OutputState: i.ToClientAddonsAzureSbPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsAzureSbOutput struct{ *pulumi.OutputState }

func (ClientAddonsAzureSbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsAzureSb)(nil)).Elem()
}

func (o ClientAddonsAzureSbOutput) ToClientAddonsAzureSbOutput() ClientAddonsAzureSbOutput {
	return o
}

func (o ClientAddonsAzureSbOutput) ToClientAddonsAzureSbOutputWithContext(ctx context.Context) ClientAddonsAzureSbOutput {
	return o
}

func (o ClientAddonsAzureSbOutput) ToClientAddonsAzureSbPtrOutput() ClientAddonsAzureSbPtrOutput {
	return o.ToClientAddonsAzureSbPtrOutputWithContext(context.Background())
}

func (o ClientAddonsAzureSbOutput) ToClientAddonsAzureSbPtrOutputWithContext(ctx context.Context) ClientAddonsAzureSbPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsAzureSb) *ClientAddonsAzureSb {
		return &v
	}).(ClientAddonsAzureSbPtrOutput)
}

func (o ClientAddonsAzureSbOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsAzureSb] {
	return pulumix.Output[ClientAddonsAzureSb]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsAzureSbOutput) EntityPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureSb) *string { return v.EntityPath }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureSbOutput) Expiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureSb) *int { return v.Expiration }).(pulumi.IntPtrOutput)
}

func (o ClientAddonsAzureSbOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureSb) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureSbOutput) SasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureSb) *string { return v.SasKey }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureSbOutput) SasKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsAzureSb) *string { return v.SasKeyName }).(pulumi.StringPtrOutput)
}

type ClientAddonsAzureSbPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsAzureSbPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsAzureSb)(nil)).Elem()
}

func (o ClientAddonsAzureSbPtrOutput) ToClientAddonsAzureSbPtrOutput() ClientAddonsAzureSbPtrOutput {
	return o
}

func (o ClientAddonsAzureSbPtrOutput) ToClientAddonsAzureSbPtrOutputWithContext(ctx context.Context) ClientAddonsAzureSbPtrOutput {
	return o
}

func (o ClientAddonsAzureSbPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsAzureSb] {
	return pulumix.Output[*ClientAddonsAzureSb]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsAzureSbPtrOutput) Elem() ClientAddonsAzureSbOutput {
	return o.ApplyT(func(v *ClientAddonsAzureSb) ClientAddonsAzureSb {
		if v != nil {
			return *v
		}
		var ret ClientAddonsAzureSb
		return ret
	}).(ClientAddonsAzureSbOutput)
}

func (o ClientAddonsAzureSbPtrOutput) EntityPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureSb) *string {
		if v == nil {
			return nil
		}
		return v.EntityPath
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureSbPtrOutput) Expiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureSb) *int {
		if v == nil {
			return nil
		}
		return v.Expiration
	}).(pulumi.IntPtrOutput)
}

func (o ClientAddonsAzureSbPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureSb) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureSbPtrOutput) SasKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureSb) *string {
		if v == nil {
			return nil
		}
		return v.SasKey
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsAzureSbPtrOutput) SasKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsAzureSb) *string {
		if v == nil {
			return nil
		}
		return v.SasKeyName
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsBox struct {
}

// ClientAddonsBoxInput is an input type that accepts ClientAddonsBoxArgs and ClientAddonsBoxOutput values.
// You can construct a concrete instance of `ClientAddonsBoxInput` via:
//
//	ClientAddonsBoxArgs{...}
type ClientAddonsBoxInput interface {
	pulumi.Input

	ToClientAddonsBoxOutput() ClientAddonsBoxOutput
	ToClientAddonsBoxOutputWithContext(context.Context) ClientAddonsBoxOutput
}

type ClientAddonsBoxArgs struct {
}

func (ClientAddonsBoxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsBox)(nil)).Elem()
}

func (i ClientAddonsBoxArgs) ToClientAddonsBoxOutput() ClientAddonsBoxOutput {
	return i.ToClientAddonsBoxOutputWithContext(context.Background())
}

func (i ClientAddonsBoxArgs) ToClientAddonsBoxOutputWithContext(ctx context.Context) ClientAddonsBoxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsBoxOutput)
}

func (i ClientAddonsBoxArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsBox] {
	return pulumix.Output[ClientAddonsBox]{
		OutputState: i.ToClientAddonsBoxOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsBoxArgs) ToClientAddonsBoxPtrOutput() ClientAddonsBoxPtrOutput {
	return i.ToClientAddonsBoxPtrOutputWithContext(context.Background())
}

func (i ClientAddonsBoxArgs) ToClientAddonsBoxPtrOutputWithContext(ctx context.Context) ClientAddonsBoxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsBoxOutput).ToClientAddonsBoxPtrOutputWithContext(ctx)
}

// ClientAddonsBoxPtrInput is an input type that accepts ClientAddonsBoxArgs, ClientAddonsBoxPtr and ClientAddonsBoxPtrOutput values.
// You can construct a concrete instance of `ClientAddonsBoxPtrInput` via:
//
//	        ClientAddonsBoxArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsBoxPtrInput interface {
	pulumi.Input

	ToClientAddonsBoxPtrOutput() ClientAddonsBoxPtrOutput
	ToClientAddonsBoxPtrOutputWithContext(context.Context) ClientAddonsBoxPtrOutput
}

type clientAddonsBoxPtrType ClientAddonsBoxArgs

func ClientAddonsBoxPtr(v *ClientAddonsBoxArgs) ClientAddonsBoxPtrInput {
	return (*clientAddonsBoxPtrType)(v)
}

func (*clientAddonsBoxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsBox)(nil)).Elem()
}

func (i *clientAddonsBoxPtrType) ToClientAddonsBoxPtrOutput() ClientAddonsBoxPtrOutput {
	return i.ToClientAddonsBoxPtrOutputWithContext(context.Background())
}

func (i *clientAddonsBoxPtrType) ToClientAddonsBoxPtrOutputWithContext(ctx context.Context) ClientAddonsBoxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsBoxPtrOutput)
}

func (i *clientAddonsBoxPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsBox] {
	return pulumix.Output[*ClientAddonsBox]{
		OutputState: i.ToClientAddonsBoxPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsBoxOutput struct{ *pulumi.OutputState }

func (ClientAddonsBoxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsBox)(nil)).Elem()
}

func (o ClientAddonsBoxOutput) ToClientAddonsBoxOutput() ClientAddonsBoxOutput {
	return o
}

func (o ClientAddonsBoxOutput) ToClientAddonsBoxOutputWithContext(ctx context.Context) ClientAddonsBoxOutput {
	return o
}

func (o ClientAddonsBoxOutput) ToClientAddonsBoxPtrOutput() ClientAddonsBoxPtrOutput {
	return o.ToClientAddonsBoxPtrOutputWithContext(context.Background())
}

func (o ClientAddonsBoxOutput) ToClientAddonsBoxPtrOutputWithContext(ctx context.Context) ClientAddonsBoxPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsBox) *ClientAddonsBox {
		return &v
	}).(ClientAddonsBoxPtrOutput)
}

func (o ClientAddonsBoxOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsBox] {
	return pulumix.Output[ClientAddonsBox]{
		OutputState: o.OutputState,
	}
}

type ClientAddonsBoxPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsBoxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsBox)(nil)).Elem()
}

func (o ClientAddonsBoxPtrOutput) ToClientAddonsBoxPtrOutput() ClientAddonsBoxPtrOutput {
	return o
}

func (o ClientAddonsBoxPtrOutput) ToClientAddonsBoxPtrOutputWithContext(ctx context.Context) ClientAddonsBoxPtrOutput {
	return o
}

func (o ClientAddonsBoxPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsBox] {
	return pulumix.Output[*ClientAddonsBox]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsBoxPtrOutput) Elem() ClientAddonsBoxOutput {
	return o.ApplyT(func(v *ClientAddonsBox) ClientAddonsBox {
		if v != nil {
			return *v
		}
		var ret ClientAddonsBox
		return ret
	}).(ClientAddonsBoxOutput)
}

type ClientAddonsCloudbees struct {
}

// ClientAddonsCloudbeesInput is an input type that accepts ClientAddonsCloudbeesArgs and ClientAddonsCloudbeesOutput values.
// You can construct a concrete instance of `ClientAddonsCloudbeesInput` via:
//
//	ClientAddonsCloudbeesArgs{...}
type ClientAddonsCloudbeesInput interface {
	pulumi.Input

	ToClientAddonsCloudbeesOutput() ClientAddonsCloudbeesOutput
	ToClientAddonsCloudbeesOutputWithContext(context.Context) ClientAddonsCloudbeesOutput
}

type ClientAddonsCloudbeesArgs struct {
}

func (ClientAddonsCloudbeesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsCloudbees)(nil)).Elem()
}

func (i ClientAddonsCloudbeesArgs) ToClientAddonsCloudbeesOutput() ClientAddonsCloudbeesOutput {
	return i.ToClientAddonsCloudbeesOutputWithContext(context.Background())
}

func (i ClientAddonsCloudbeesArgs) ToClientAddonsCloudbeesOutputWithContext(ctx context.Context) ClientAddonsCloudbeesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsCloudbeesOutput)
}

func (i ClientAddonsCloudbeesArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsCloudbees] {
	return pulumix.Output[ClientAddonsCloudbees]{
		OutputState: i.ToClientAddonsCloudbeesOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsCloudbeesArgs) ToClientAddonsCloudbeesPtrOutput() ClientAddonsCloudbeesPtrOutput {
	return i.ToClientAddonsCloudbeesPtrOutputWithContext(context.Background())
}

func (i ClientAddonsCloudbeesArgs) ToClientAddonsCloudbeesPtrOutputWithContext(ctx context.Context) ClientAddonsCloudbeesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsCloudbeesOutput).ToClientAddonsCloudbeesPtrOutputWithContext(ctx)
}

// ClientAddonsCloudbeesPtrInput is an input type that accepts ClientAddonsCloudbeesArgs, ClientAddonsCloudbeesPtr and ClientAddonsCloudbeesPtrOutput values.
// You can construct a concrete instance of `ClientAddonsCloudbeesPtrInput` via:
//
//	        ClientAddonsCloudbeesArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsCloudbeesPtrInput interface {
	pulumi.Input

	ToClientAddonsCloudbeesPtrOutput() ClientAddonsCloudbeesPtrOutput
	ToClientAddonsCloudbeesPtrOutputWithContext(context.Context) ClientAddonsCloudbeesPtrOutput
}

type clientAddonsCloudbeesPtrType ClientAddonsCloudbeesArgs

func ClientAddonsCloudbeesPtr(v *ClientAddonsCloudbeesArgs) ClientAddonsCloudbeesPtrInput {
	return (*clientAddonsCloudbeesPtrType)(v)
}

func (*clientAddonsCloudbeesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsCloudbees)(nil)).Elem()
}

func (i *clientAddonsCloudbeesPtrType) ToClientAddonsCloudbeesPtrOutput() ClientAddonsCloudbeesPtrOutput {
	return i.ToClientAddonsCloudbeesPtrOutputWithContext(context.Background())
}

func (i *clientAddonsCloudbeesPtrType) ToClientAddonsCloudbeesPtrOutputWithContext(ctx context.Context) ClientAddonsCloudbeesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsCloudbeesPtrOutput)
}

func (i *clientAddonsCloudbeesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsCloudbees] {
	return pulumix.Output[*ClientAddonsCloudbees]{
		OutputState: i.ToClientAddonsCloudbeesPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsCloudbeesOutput struct{ *pulumi.OutputState }

func (ClientAddonsCloudbeesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsCloudbees)(nil)).Elem()
}

func (o ClientAddonsCloudbeesOutput) ToClientAddonsCloudbeesOutput() ClientAddonsCloudbeesOutput {
	return o
}

func (o ClientAddonsCloudbeesOutput) ToClientAddonsCloudbeesOutputWithContext(ctx context.Context) ClientAddonsCloudbeesOutput {
	return o
}

func (o ClientAddonsCloudbeesOutput) ToClientAddonsCloudbeesPtrOutput() ClientAddonsCloudbeesPtrOutput {
	return o.ToClientAddonsCloudbeesPtrOutputWithContext(context.Background())
}

func (o ClientAddonsCloudbeesOutput) ToClientAddonsCloudbeesPtrOutputWithContext(ctx context.Context) ClientAddonsCloudbeesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsCloudbees) *ClientAddonsCloudbees {
		return &v
	}).(ClientAddonsCloudbeesPtrOutput)
}

func (o ClientAddonsCloudbeesOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsCloudbees] {
	return pulumix.Output[ClientAddonsCloudbees]{
		OutputState: o.OutputState,
	}
}

type ClientAddonsCloudbeesPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsCloudbeesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsCloudbees)(nil)).Elem()
}

func (o ClientAddonsCloudbeesPtrOutput) ToClientAddonsCloudbeesPtrOutput() ClientAddonsCloudbeesPtrOutput {
	return o
}

func (o ClientAddonsCloudbeesPtrOutput) ToClientAddonsCloudbeesPtrOutputWithContext(ctx context.Context) ClientAddonsCloudbeesPtrOutput {
	return o
}

func (o ClientAddonsCloudbeesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsCloudbees] {
	return pulumix.Output[*ClientAddonsCloudbees]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsCloudbeesPtrOutput) Elem() ClientAddonsCloudbeesOutput {
	return o.ApplyT(func(v *ClientAddonsCloudbees) ClientAddonsCloudbees {
		if v != nil {
			return *v
		}
		var ret ClientAddonsCloudbees
		return ret
	}).(ClientAddonsCloudbeesOutput)
}

type ClientAddonsConcur struct {
}

// ClientAddonsConcurInput is an input type that accepts ClientAddonsConcurArgs and ClientAddonsConcurOutput values.
// You can construct a concrete instance of `ClientAddonsConcurInput` via:
//
//	ClientAddonsConcurArgs{...}
type ClientAddonsConcurInput interface {
	pulumi.Input

	ToClientAddonsConcurOutput() ClientAddonsConcurOutput
	ToClientAddonsConcurOutputWithContext(context.Context) ClientAddonsConcurOutput
}

type ClientAddonsConcurArgs struct {
}

func (ClientAddonsConcurArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsConcur)(nil)).Elem()
}

func (i ClientAddonsConcurArgs) ToClientAddonsConcurOutput() ClientAddonsConcurOutput {
	return i.ToClientAddonsConcurOutputWithContext(context.Background())
}

func (i ClientAddonsConcurArgs) ToClientAddonsConcurOutputWithContext(ctx context.Context) ClientAddonsConcurOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsConcurOutput)
}

func (i ClientAddonsConcurArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsConcur] {
	return pulumix.Output[ClientAddonsConcur]{
		OutputState: i.ToClientAddonsConcurOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsConcurArgs) ToClientAddonsConcurPtrOutput() ClientAddonsConcurPtrOutput {
	return i.ToClientAddonsConcurPtrOutputWithContext(context.Background())
}

func (i ClientAddonsConcurArgs) ToClientAddonsConcurPtrOutputWithContext(ctx context.Context) ClientAddonsConcurPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsConcurOutput).ToClientAddonsConcurPtrOutputWithContext(ctx)
}

// ClientAddonsConcurPtrInput is an input type that accepts ClientAddonsConcurArgs, ClientAddonsConcurPtr and ClientAddonsConcurPtrOutput values.
// You can construct a concrete instance of `ClientAddonsConcurPtrInput` via:
//
//	        ClientAddonsConcurArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsConcurPtrInput interface {
	pulumi.Input

	ToClientAddonsConcurPtrOutput() ClientAddonsConcurPtrOutput
	ToClientAddonsConcurPtrOutputWithContext(context.Context) ClientAddonsConcurPtrOutput
}

type clientAddonsConcurPtrType ClientAddonsConcurArgs

func ClientAddonsConcurPtr(v *ClientAddonsConcurArgs) ClientAddonsConcurPtrInput {
	return (*clientAddonsConcurPtrType)(v)
}

func (*clientAddonsConcurPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsConcur)(nil)).Elem()
}

func (i *clientAddonsConcurPtrType) ToClientAddonsConcurPtrOutput() ClientAddonsConcurPtrOutput {
	return i.ToClientAddonsConcurPtrOutputWithContext(context.Background())
}

func (i *clientAddonsConcurPtrType) ToClientAddonsConcurPtrOutputWithContext(ctx context.Context) ClientAddonsConcurPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsConcurPtrOutput)
}

func (i *clientAddonsConcurPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsConcur] {
	return pulumix.Output[*ClientAddonsConcur]{
		OutputState: i.ToClientAddonsConcurPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsConcurOutput struct{ *pulumi.OutputState }

func (ClientAddonsConcurOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsConcur)(nil)).Elem()
}

func (o ClientAddonsConcurOutput) ToClientAddonsConcurOutput() ClientAddonsConcurOutput {
	return o
}

func (o ClientAddonsConcurOutput) ToClientAddonsConcurOutputWithContext(ctx context.Context) ClientAddonsConcurOutput {
	return o
}

func (o ClientAddonsConcurOutput) ToClientAddonsConcurPtrOutput() ClientAddonsConcurPtrOutput {
	return o.ToClientAddonsConcurPtrOutputWithContext(context.Background())
}

func (o ClientAddonsConcurOutput) ToClientAddonsConcurPtrOutputWithContext(ctx context.Context) ClientAddonsConcurPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsConcur) *ClientAddonsConcur {
		return &v
	}).(ClientAddonsConcurPtrOutput)
}

func (o ClientAddonsConcurOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsConcur] {
	return pulumix.Output[ClientAddonsConcur]{
		OutputState: o.OutputState,
	}
}

type ClientAddonsConcurPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsConcurPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsConcur)(nil)).Elem()
}

func (o ClientAddonsConcurPtrOutput) ToClientAddonsConcurPtrOutput() ClientAddonsConcurPtrOutput {
	return o
}

func (o ClientAddonsConcurPtrOutput) ToClientAddonsConcurPtrOutputWithContext(ctx context.Context) ClientAddonsConcurPtrOutput {
	return o
}

func (o ClientAddonsConcurPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsConcur] {
	return pulumix.Output[*ClientAddonsConcur]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsConcurPtrOutput) Elem() ClientAddonsConcurOutput {
	return o.ApplyT(func(v *ClientAddonsConcur) ClientAddonsConcur {
		if v != nil {
			return *v
		}
		var ret ClientAddonsConcur
		return ret
	}).(ClientAddonsConcurOutput)
}

type ClientAddonsDropbox struct {
}

// ClientAddonsDropboxInput is an input type that accepts ClientAddonsDropboxArgs and ClientAddonsDropboxOutput values.
// You can construct a concrete instance of `ClientAddonsDropboxInput` via:
//
//	ClientAddonsDropboxArgs{...}
type ClientAddonsDropboxInput interface {
	pulumi.Input

	ToClientAddonsDropboxOutput() ClientAddonsDropboxOutput
	ToClientAddonsDropboxOutputWithContext(context.Context) ClientAddonsDropboxOutput
}

type ClientAddonsDropboxArgs struct {
}

func (ClientAddonsDropboxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsDropbox)(nil)).Elem()
}

func (i ClientAddonsDropboxArgs) ToClientAddonsDropboxOutput() ClientAddonsDropboxOutput {
	return i.ToClientAddonsDropboxOutputWithContext(context.Background())
}

func (i ClientAddonsDropboxArgs) ToClientAddonsDropboxOutputWithContext(ctx context.Context) ClientAddonsDropboxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsDropboxOutput)
}

func (i ClientAddonsDropboxArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsDropbox] {
	return pulumix.Output[ClientAddonsDropbox]{
		OutputState: i.ToClientAddonsDropboxOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsDropboxArgs) ToClientAddonsDropboxPtrOutput() ClientAddonsDropboxPtrOutput {
	return i.ToClientAddonsDropboxPtrOutputWithContext(context.Background())
}

func (i ClientAddonsDropboxArgs) ToClientAddonsDropboxPtrOutputWithContext(ctx context.Context) ClientAddonsDropboxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsDropboxOutput).ToClientAddonsDropboxPtrOutputWithContext(ctx)
}

// ClientAddonsDropboxPtrInput is an input type that accepts ClientAddonsDropboxArgs, ClientAddonsDropboxPtr and ClientAddonsDropboxPtrOutput values.
// You can construct a concrete instance of `ClientAddonsDropboxPtrInput` via:
//
//	        ClientAddonsDropboxArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsDropboxPtrInput interface {
	pulumi.Input

	ToClientAddonsDropboxPtrOutput() ClientAddonsDropboxPtrOutput
	ToClientAddonsDropboxPtrOutputWithContext(context.Context) ClientAddonsDropboxPtrOutput
}

type clientAddonsDropboxPtrType ClientAddonsDropboxArgs

func ClientAddonsDropboxPtr(v *ClientAddonsDropboxArgs) ClientAddonsDropboxPtrInput {
	return (*clientAddonsDropboxPtrType)(v)
}

func (*clientAddonsDropboxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsDropbox)(nil)).Elem()
}

func (i *clientAddonsDropboxPtrType) ToClientAddonsDropboxPtrOutput() ClientAddonsDropboxPtrOutput {
	return i.ToClientAddonsDropboxPtrOutputWithContext(context.Background())
}

func (i *clientAddonsDropboxPtrType) ToClientAddonsDropboxPtrOutputWithContext(ctx context.Context) ClientAddonsDropboxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsDropboxPtrOutput)
}

func (i *clientAddonsDropboxPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsDropbox] {
	return pulumix.Output[*ClientAddonsDropbox]{
		OutputState: i.ToClientAddonsDropboxPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsDropboxOutput struct{ *pulumi.OutputState }

func (ClientAddonsDropboxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsDropbox)(nil)).Elem()
}

func (o ClientAddonsDropboxOutput) ToClientAddonsDropboxOutput() ClientAddonsDropboxOutput {
	return o
}

func (o ClientAddonsDropboxOutput) ToClientAddonsDropboxOutputWithContext(ctx context.Context) ClientAddonsDropboxOutput {
	return o
}

func (o ClientAddonsDropboxOutput) ToClientAddonsDropboxPtrOutput() ClientAddonsDropboxPtrOutput {
	return o.ToClientAddonsDropboxPtrOutputWithContext(context.Background())
}

func (o ClientAddonsDropboxOutput) ToClientAddonsDropboxPtrOutputWithContext(ctx context.Context) ClientAddonsDropboxPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsDropbox) *ClientAddonsDropbox {
		return &v
	}).(ClientAddonsDropboxPtrOutput)
}

func (o ClientAddonsDropboxOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsDropbox] {
	return pulumix.Output[ClientAddonsDropbox]{
		OutputState: o.OutputState,
	}
}

type ClientAddonsDropboxPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsDropboxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsDropbox)(nil)).Elem()
}

func (o ClientAddonsDropboxPtrOutput) ToClientAddonsDropboxPtrOutput() ClientAddonsDropboxPtrOutput {
	return o
}

func (o ClientAddonsDropboxPtrOutput) ToClientAddonsDropboxPtrOutputWithContext(ctx context.Context) ClientAddonsDropboxPtrOutput {
	return o
}

func (o ClientAddonsDropboxPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsDropbox] {
	return pulumix.Output[*ClientAddonsDropbox]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsDropboxPtrOutput) Elem() ClientAddonsDropboxOutput {
	return o.ApplyT(func(v *ClientAddonsDropbox) ClientAddonsDropbox {
		if v != nil {
			return *v
		}
		var ret ClientAddonsDropbox
		return ret
	}).(ClientAddonsDropboxOutput)
}

type ClientAddonsEchosign struct {
	Domain *string `pulumi:"domain"`
}

// ClientAddonsEchosignInput is an input type that accepts ClientAddonsEchosignArgs and ClientAddonsEchosignOutput values.
// You can construct a concrete instance of `ClientAddonsEchosignInput` via:
//
//	ClientAddonsEchosignArgs{...}
type ClientAddonsEchosignInput interface {
	pulumi.Input

	ToClientAddonsEchosignOutput() ClientAddonsEchosignOutput
	ToClientAddonsEchosignOutputWithContext(context.Context) ClientAddonsEchosignOutput
}

type ClientAddonsEchosignArgs struct {
	Domain pulumi.StringPtrInput `pulumi:"domain"`
}

func (ClientAddonsEchosignArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsEchosign)(nil)).Elem()
}

func (i ClientAddonsEchosignArgs) ToClientAddonsEchosignOutput() ClientAddonsEchosignOutput {
	return i.ToClientAddonsEchosignOutputWithContext(context.Background())
}

func (i ClientAddonsEchosignArgs) ToClientAddonsEchosignOutputWithContext(ctx context.Context) ClientAddonsEchosignOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsEchosignOutput)
}

func (i ClientAddonsEchosignArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsEchosign] {
	return pulumix.Output[ClientAddonsEchosign]{
		OutputState: i.ToClientAddonsEchosignOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsEchosignArgs) ToClientAddonsEchosignPtrOutput() ClientAddonsEchosignPtrOutput {
	return i.ToClientAddonsEchosignPtrOutputWithContext(context.Background())
}

func (i ClientAddonsEchosignArgs) ToClientAddonsEchosignPtrOutputWithContext(ctx context.Context) ClientAddonsEchosignPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsEchosignOutput).ToClientAddonsEchosignPtrOutputWithContext(ctx)
}

// ClientAddonsEchosignPtrInput is an input type that accepts ClientAddonsEchosignArgs, ClientAddonsEchosignPtr and ClientAddonsEchosignPtrOutput values.
// You can construct a concrete instance of `ClientAddonsEchosignPtrInput` via:
//
//	        ClientAddonsEchosignArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsEchosignPtrInput interface {
	pulumi.Input

	ToClientAddonsEchosignPtrOutput() ClientAddonsEchosignPtrOutput
	ToClientAddonsEchosignPtrOutputWithContext(context.Context) ClientAddonsEchosignPtrOutput
}

type clientAddonsEchosignPtrType ClientAddonsEchosignArgs

func ClientAddonsEchosignPtr(v *ClientAddonsEchosignArgs) ClientAddonsEchosignPtrInput {
	return (*clientAddonsEchosignPtrType)(v)
}

func (*clientAddonsEchosignPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsEchosign)(nil)).Elem()
}

func (i *clientAddonsEchosignPtrType) ToClientAddonsEchosignPtrOutput() ClientAddonsEchosignPtrOutput {
	return i.ToClientAddonsEchosignPtrOutputWithContext(context.Background())
}

func (i *clientAddonsEchosignPtrType) ToClientAddonsEchosignPtrOutputWithContext(ctx context.Context) ClientAddonsEchosignPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsEchosignPtrOutput)
}

func (i *clientAddonsEchosignPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsEchosign] {
	return pulumix.Output[*ClientAddonsEchosign]{
		OutputState: i.ToClientAddonsEchosignPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsEchosignOutput struct{ *pulumi.OutputState }

func (ClientAddonsEchosignOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsEchosign)(nil)).Elem()
}

func (o ClientAddonsEchosignOutput) ToClientAddonsEchosignOutput() ClientAddonsEchosignOutput {
	return o
}

func (o ClientAddonsEchosignOutput) ToClientAddonsEchosignOutputWithContext(ctx context.Context) ClientAddonsEchosignOutput {
	return o
}

func (o ClientAddonsEchosignOutput) ToClientAddonsEchosignPtrOutput() ClientAddonsEchosignPtrOutput {
	return o.ToClientAddonsEchosignPtrOutputWithContext(context.Background())
}

func (o ClientAddonsEchosignOutput) ToClientAddonsEchosignPtrOutputWithContext(ctx context.Context) ClientAddonsEchosignPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsEchosign) *ClientAddonsEchosign {
		return &v
	}).(ClientAddonsEchosignPtrOutput)
}

func (o ClientAddonsEchosignOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsEchosign] {
	return pulumix.Output[ClientAddonsEchosign]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsEchosignOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsEchosign) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

type ClientAddonsEchosignPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsEchosignPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsEchosign)(nil)).Elem()
}

func (o ClientAddonsEchosignPtrOutput) ToClientAddonsEchosignPtrOutput() ClientAddonsEchosignPtrOutput {
	return o
}

func (o ClientAddonsEchosignPtrOutput) ToClientAddonsEchosignPtrOutputWithContext(ctx context.Context) ClientAddonsEchosignPtrOutput {
	return o
}

func (o ClientAddonsEchosignPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsEchosign] {
	return pulumix.Output[*ClientAddonsEchosign]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsEchosignPtrOutput) Elem() ClientAddonsEchosignOutput {
	return o.ApplyT(func(v *ClientAddonsEchosign) ClientAddonsEchosign {
		if v != nil {
			return *v
		}
		var ret ClientAddonsEchosign
		return ret
	}).(ClientAddonsEchosignOutput)
}

func (o ClientAddonsEchosignPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsEchosign) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsEgnyte struct {
	Domain *string `pulumi:"domain"`
}

// ClientAddonsEgnyteInput is an input type that accepts ClientAddonsEgnyteArgs and ClientAddonsEgnyteOutput values.
// You can construct a concrete instance of `ClientAddonsEgnyteInput` via:
//
//	ClientAddonsEgnyteArgs{...}
type ClientAddonsEgnyteInput interface {
	pulumi.Input

	ToClientAddonsEgnyteOutput() ClientAddonsEgnyteOutput
	ToClientAddonsEgnyteOutputWithContext(context.Context) ClientAddonsEgnyteOutput
}

type ClientAddonsEgnyteArgs struct {
	Domain pulumi.StringPtrInput `pulumi:"domain"`
}

func (ClientAddonsEgnyteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsEgnyte)(nil)).Elem()
}

func (i ClientAddonsEgnyteArgs) ToClientAddonsEgnyteOutput() ClientAddonsEgnyteOutput {
	return i.ToClientAddonsEgnyteOutputWithContext(context.Background())
}

func (i ClientAddonsEgnyteArgs) ToClientAddonsEgnyteOutputWithContext(ctx context.Context) ClientAddonsEgnyteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsEgnyteOutput)
}

func (i ClientAddonsEgnyteArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsEgnyte] {
	return pulumix.Output[ClientAddonsEgnyte]{
		OutputState: i.ToClientAddonsEgnyteOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsEgnyteArgs) ToClientAddonsEgnytePtrOutput() ClientAddonsEgnytePtrOutput {
	return i.ToClientAddonsEgnytePtrOutputWithContext(context.Background())
}

func (i ClientAddonsEgnyteArgs) ToClientAddonsEgnytePtrOutputWithContext(ctx context.Context) ClientAddonsEgnytePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsEgnyteOutput).ToClientAddonsEgnytePtrOutputWithContext(ctx)
}

// ClientAddonsEgnytePtrInput is an input type that accepts ClientAddonsEgnyteArgs, ClientAddonsEgnytePtr and ClientAddonsEgnytePtrOutput values.
// You can construct a concrete instance of `ClientAddonsEgnytePtrInput` via:
//
//	        ClientAddonsEgnyteArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsEgnytePtrInput interface {
	pulumi.Input

	ToClientAddonsEgnytePtrOutput() ClientAddonsEgnytePtrOutput
	ToClientAddonsEgnytePtrOutputWithContext(context.Context) ClientAddonsEgnytePtrOutput
}

type clientAddonsEgnytePtrType ClientAddonsEgnyteArgs

func ClientAddonsEgnytePtr(v *ClientAddonsEgnyteArgs) ClientAddonsEgnytePtrInput {
	return (*clientAddonsEgnytePtrType)(v)
}

func (*clientAddonsEgnytePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsEgnyte)(nil)).Elem()
}

func (i *clientAddonsEgnytePtrType) ToClientAddonsEgnytePtrOutput() ClientAddonsEgnytePtrOutput {
	return i.ToClientAddonsEgnytePtrOutputWithContext(context.Background())
}

func (i *clientAddonsEgnytePtrType) ToClientAddonsEgnytePtrOutputWithContext(ctx context.Context) ClientAddonsEgnytePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsEgnytePtrOutput)
}

func (i *clientAddonsEgnytePtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsEgnyte] {
	return pulumix.Output[*ClientAddonsEgnyte]{
		OutputState: i.ToClientAddonsEgnytePtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsEgnyteOutput struct{ *pulumi.OutputState }

func (ClientAddonsEgnyteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsEgnyte)(nil)).Elem()
}

func (o ClientAddonsEgnyteOutput) ToClientAddonsEgnyteOutput() ClientAddonsEgnyteOutput {
	return o
}

func (o ClientAddonsEgnyteOutput) ToClientAddonsEgnyteOutputWithContext(ctx context.Context) ClientAddonsEgnyteOutput {
	return o
}

func (o ClientAddonsEgnyteOutput) ToClientAddonsEgnytePtrOutput() ClientAddonsEgnytePtrOutput {
	return o.ToClientAddonsEgnytePtrOutputWithContext(context.Background())
}

func (o ClientAddonsEgnyteOutput) ToClientAddonsEgnytePtrOutputWithContext(ctx context.Context) ClientAddonsEgnytePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsEgnyte) *ClientAddonsEgnyte {
		return &v
	}).(ClientAddonsEgnytePtrOutput)
}

func (o ClientAddonsEgnyteOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsEgnyte] {
	return pulumix.Output[ClientAddonsEgnyte]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsEgnyteOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsEgnyte) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

type ClientAddonsEgnytePtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsEgnytePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsEgnyte)(nil)).Elem()
}

func (o ClientAddonsEgnytePtrOutput) ToClientAddonsEgnytePtrOutput() ClientAddonsEgnytePtrOutput {
	return o
}

func (o ClientAddonsEgnytePtrOutput) ToClientAddonsEgnytePtrOutputWithContext(ctx context.Context) ClientAddonsEgnytePtrOutput {
	return o
}

func (o ClientAddonsEgnytePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsEgnyte] {
	return pulumix.Output[*ClientAddonsEgnyte]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsEgnytePtrOutput) Elem() ClientAddonsEgnyteOutput {
	return o.ApplyT(func(v *ClientAddonsEgnyte) ClientAddonsEgnyte {
		if v != nil {
			return *v
		}
		var ret ClientAddonsEgnyte
		return ret
	}).(ClientAddonsEgnyteOutput)
}

func (o ClientAddonsEgnytePtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsEgnyte) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsFirebase struct {
	ClientEmail       *string `pulumi:"clientEmail"`
	LifetimeInSeconds *int    `pulumi:"lifetimeInSeconds"`
	PrivateKey        *string `pulumi:"privateKey"`
	PrivateKeyId      *string `pulumi:"privateKeyId"`
	Secret            *string `pulumi:"secret"`
}

// ClientAddonsFirebaseInput is an input type that accepts ClientAddonsFirebaseArgs and ClientAddonsFirebaseOutput values.
// You can construct a concrete instance of `ClientAddonsFirebaseInput` via:
//
//	ClientAddonsFirebaseArgs{...}
type ClientAddonsFirebaseInput interface {
	pulumi.Input

	ToClientAddonsFirebaseOutput() ClientAddonsFirebaseOutput
	ToClientAddonsFirebaseOutputWithContext(context.Context) ClientAddonsFirebaseOutput
}

type ClientAddonsFirebaseArgs struct {
	ClientEmail       pulumi.StringPtrInput `pulumi:"clientEmail"`
	LifetimeInSeconds pulumi.IntPtrInput    `pulumi:"lifetimeInSeconds"`
	PrivateKey        pulumi.StringPtrInput `pulumi:"privateKey"`
	PrivateKeyId      pulumi.StringPtrInput `pulumi:"privateKeyId"`
	Secret            pulumi.StringPtrInput `pulumi:"secret"`
}

func (ClientAddonsFirebaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsFirebase)(nil)).Elem()
}

func (i ClientAddonsFirebaseArgs) ToClientAddonsFirebaseOutput() ClientAddonsFirebaseOutput {
	return i.ToClientAddonsFirebaseOutputWithContext(context.Background())
}

func (i ClientAddonsFirebaseArgs) ToClientAddonsFirebaseOutputWithContext(ctx context.Context) ClientAddonsFirebaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsFirebaseOutput)
}

func (i ClientAddonsFirebaseArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsFirebase] {
	return pulumix.Output[ClientAddonsFirebase]{
		OutputState: i.ToClientAddonsFirebaseOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsFirebaseArgs) ToClientAddonsFirebasePtrOutput() ClientAddonsFirebasePtrOutput {
	return i.ToClientAddonsFirebasePtrOutputWithContext(context.Background())
}

func (i ClientAddonsFirebaseArgs) ToClientAddonsFirebasePtrOutputWithContext(ctx context.Context) ClientAddonsFirebasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsFirebaseOutput).ToClientAddonsFirebasePtrOutputWithContext(ctx)
}

// ClientAddonsFirebasePtrInput is an input type that accepts ClientAddonsFirebaseArgs, ClientAddonsFirebasePtr and ClientAddonsFirebasePtrOutput values.
// You can construct a concrete instance of `ClientAddonsFirebasePtrInput` via:
//
//	        ClientAddonsFirebaseArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsFirebasePtrInput interface {
	pulumi.Input

	ToClientAddonsFirebasePtrOutput() ClientAddonsFirebasePtrOutput
	ToClientAddonsFirebasePtrOutputWithContext(context.Context) ClientAddonsFirebasePtrOutput
}

type clientAddonsFirebasePtrType ClientAddonsFirebaseArgs

func ClientAddonsFirebasePtr(v *ClientAddonsFirebaseArgs) ClientAddonsFirebasePtrInput {
	return (*clientAddonsFirebasePtrType)(v)
}

func (*clientAddonsFirebasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsFirebase)(nil)).Elem()
}

func (i *clientAddonsFirebasePtrType) ToClientAddonsFirebasePtrOutput() ClientAddonsFirebasePtrOutput {
	return i.ToClientAddonsFirebasePtrOutputWithContext(context.Background())
}

func (i *clientAddonsFirebasePtrType) ToClientAddonsFirebasePtrOutputWithContext(ctx context.Context) ClientAddonsFirebasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsFirebasePtrOutput)
}

func (i *clientAddonsFirebasePtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsFirebase] {
	return pulumix.Output[*ClientAddonsFirebase]{
		OutputState: i.ToClientAddonsFirebasePtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsFirebaseOutput struct{ *pulumi.OutputState }

func (ClientAddonsFirebaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsFirebase)(nil)).Elem()
}

func (o ClientAddonsFirebaseOutput) ToClientAddonsFirebaseOutput() ClientAddonsFirebaseOutput {
	return o
}

func (o ClientAddonsFirebaseOutput) ToClientAddonsFirebaseOutputWithContext(ctx context.Context) ClientAddonsFirebaseOutput {
	return o
}

func (o ClientAddonsFirebaseOutput) ToClientAddonsFirebasePtrOutput() ClientAddonsFirebasePtrOutput {
	return o.ToClientAddonsFirebasePtrOutputWithContext(context.Background())
}

func (o ClientAddonsFirebaseOutput) ToClientAddonsFirebasePtrOutputWithContext(ctx context.Context) ClientAddonsFirebasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsFirebase) *ClientAddonsFirebase {
		return &v
	}).(ClientAddonsFirebasePtrOutput)
}

func (o ClientAddonsFirebaseOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsFirebase] {
	return pulumix.Output[ClientAddonsFirebase]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsFirebaseOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsFirebase) *string { return v.ClientEmail }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsFirebaseOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientAddonsFirebase) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

func (o ClientAddonsFirebaseOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsFirebase) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsFirebaseOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsFirebase) *string { return v.PrivateKeyId }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsFirebaseOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsFirebase) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

type ClientAddonsFirebasePtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsFirebasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsFirebase)(nil)).Elem()
}

func (o ClientAddonsFirebasePtrOutput) ToClientAddonsFirebasePtrOutput() ClientAddonsFirebasePtrOutput {
	return o
}

func (o ClientAddonsFirebasePtrOutput) ToClientAddonsFirebasePtrOutputWithContext(ctx context.Context) ClientAddonsFirebasePtrOutput {
	return o
}

func (o ClientAddonsFirebasePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsFirebase] {
	return pulumix.Output[*ClientAddonsFirebase]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsFirebasePtrOutput) Elem() ClientAddonsFirebaseOutput {
	return o.ApplyT(func(v *ClientAddonsFirebase) ClientAddonsFirebase {
		if v != nil {
			return *v
		}
		var ret ClientAddonsFirebase
		return ret
	}).(ClientAddonsFirebaseOutput)
}

func (o ClientAddonsFirebasePtrOutput) ClientEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsFirebase) *string {
		if v == nil {
			return nil
		}
		return v.ClientEmail
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsFirebasePtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientAddonsFirebase) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ClientAddonsFirebasePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsFirebase) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsFirebasePtrOutput) PrivateKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsFirebase) *string {
		if v == nil {
			return nil
		}
		return v.PrivateKeyId
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsFirebasePtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsFirebase) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsLayer struct {
	Expiration *int    `pulumi:"expiration"`
	KeyId      string  `pulumi:"keyId"`
	Principal  *string `pulumi:"principal"`
	PrivateKey string  `pulumi:"privateKey"`
	ProviderId string  `pulumi:"providerId"`
}

// ClientAddonsLayerInput is an input type that accepts ClientAddonsLayerArgs and ClientAddonsLayerOutput values.
// You can construct a concrete instance of `ClientAddonsLayerInput` via:
//
//	ClientAddonsLayerArgs{...}
type ClientAddonsLayerInput interface {
	pulumi.Input

	ToClientAddonsLayerOutput() ClientAddonsLayerOutput
	ToClientAddonsLayerOutputWithContext(context.Context) ClientAddonsLayerOutput
}

type ClientAddonsLayerArgs struct {
	Expiration pulumi.IntPtrInput    `pulumi:"expiration"`
	KeyId      pulumi.StringInput    `pulumi:"keyId"`
	Principal  pulumi.StringPtrInput `pulumi:"principal"`
	PrivateKey pulumi.StringInput    `pulumi:"privateKey"`
	ProviderId pulumi.StringInput    `pulumi:"providerId"`
}

func (ClientAddonsLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsLayer)(nil)).Elem()
}

func (i ClientAddonsLayerArgs) ToClientAddonsLayerOutput() ClientAddonsLayerOutput {
	return i.ToClientAddonsLayerOutputWithContext(context.Background())
}

func (i ClientAddonsLayerArgs) ToClientAddonsLayerOutputWithContext(ctx context.Context) ClientAddonsLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsLayerOutput)
}

func (i ClientAddonsLayerArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsLayer] {
	return pulumix.Output[ClientAddonsLayer]{
		OutputState: i.ToClientAddonsLayerOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsLayerArgs) ToClientAddonsLayerPtrOutput() ClientAddonsLayerPtrOutput {
	return i.ToClientAddonsLayerPtrOutputWithContext(context.Background())
}

func (i ClientAddonsLayerArgs) ToClientAddonsLayerPtrOutputWithContext(ctx context.Context) ClientAddonsLayerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsLayerOutput).ToClientAddonsLayerPtrOutputWithContext(ctx)
}

// ClientAddonsLayerPtrInput is an input type that accepts ClientAddonsLayerArgs, ClientAddonsLayerPtr and ClientAddonsLayerPtrOutput values.
// You can construct a concrete instance of `ClientAddonsLayerPtrInput` via:
//
//	        ClientAddonsLayerArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsLayerPtrInput interface {
	pulumi.Input

	ToClientAddonsLayerPtrOutput() ClientAddonsLayerPtrOutput
	ToClientAddonsLayerPtrOutputWithContext(context.Context) ClientAddonsLayerPtrOutput
}

type clientAddonsLayerPtrType ClientAddonsLayerArgs

func ClientAddonsLayerPtr(v *ClientAddonsLayerArgs) ClientAddonsLayerPtrInput {
	return (*clientAddonsLayerPtrType)(v)
}

func (*clientAddonsLayerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsLayer)(nil)).Elem()
}

func (i *clientAddonsLayerPtrType) ToClientAddonsLayerPtrOutput() ClientAddonsLayerPtrOutput {
	return i.ToClientAddonsLayerPtrOutputWithContext(context.Background())
}

func (i *clientAddonsLayerPtrType) ToClientAddonsLayerPtrOutputWithContext(ctx context.Context) ClientAddonsLayerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsLayerPtrOutput)
}

func (i *clientAddonsLayerPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsLayer] {
	return pulumix.Output[*ClientAddonsLayer]{
		OutputState: i.ToClientAddonsLayerPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsLayerOutput struct{ *pulumi.OutputState }

func (ClientAddonsLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsLayer)(nil)).Elem()
}

func (o ClientAddonsLayerOutput) ToClientAddonsLayerOutput() ClientAddonsLayerOutput {
	return o
}

func (o ClientAddonsLayerOutput) ToClientAddonsLayerOutputWithContext(ctx context.Context) ClientAddonsLayerOutput {
	return o
}

func (o ClientAddonsLayerOutput) ToClientAddonsLayerPtrOutput() ClientAddonsLayerPtrOutput {
	return o.ToClientAddonsLayerPtrOutputWithContext(context.Background())
}

func (o ClientAddonsLayerOutput) ToClientAddonsLayerPtrOutputWithContext(ctx context.Context) ClientAddonsLayerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsLayer) *ClientAddonsLayer {
		return &v
	}).(ClientAddonsLayerPtrOutput)
}

func (o ClientAddonsLayerOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsLayer] {
	return pulumix.Output[ClientAddonsLayer]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsLayerOutput) Expiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientAddonsLayer) *int { return v.Expiration }).(pulumi.IntPtrOutput)
}

func (o ClientAddonsLayerOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAddonsLayer) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o ClientAddonsLayerOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsLayer) *string { return v.Principal }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsLayerOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAddonsLayer) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o ClientAddonsLayerOutput) ProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v ClientAddonsLayer) string { return v.ProviderId }).(pulumi.StringOutput)
}

type ClientAddonsLayerPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsLayerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsLayer)(nil)).Elem()
}

func (o ClientAddonsLayerPtrOutput) ToClientAddonsLayerPtrOutput() ClientAddonsLayerPtrOutput {
	return o
}

func (o ClientAddonsLayerPtrOutput) ToClientAddonsLayerPtrOutputWithContext(ctx context.Context) ClientAddonsLayerPtrOutput {
	return o
}

func (o ClientAddonsLayerPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsLayer] {
	return pulumix.Output[*ClientAddonsLayer]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsLayerPtrOutput) Elem() ClientAddonsLayerOutput {
	return o.ApplyT(func(v *ClientAddonsLayer) ClientAddonsLayer {
		if v != nil {
			return *v
		}
		var ret ClientAddonsLayer
		return ret
	}).(ClientAddonsLayerOutput)
}

func (o ClientAddonsLayerPtrOutput) Expiration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientAddonsLayer) *int {
		if v == nil {
			return nil
		}
		return v.Expiration
	}).(pulumi.IntPtrOutput)
}

func (o ClientAddonsLayerPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsLayer) *string {
		if v == nil {
			return nil
		}
		return &v.KeyId
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsLayerPtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsLayer) *string {
		if v == nil {
			return nil
		}
		return v.Principal
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsLayerPtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsLayer) *string {
		if v == nil {
			return nil
		}
		return &v.PrivateKey
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsLayerPtrOutput) ProviderId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsLayer) *string {
		if v == nil {
			return nil
		}
		return &v.ProviderId
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsMscrm struct {
	Url *string `pulumi:"url"`
}

// ClientAddonsMscrmInput is an input type that accepts ClientAddonsMscrmArgs and ClientAddonsMscrmOutput values.
// You can construct a concrete instance of `ClientAddonsMscrmInput` via:
//
//	ClientAddonsMscrmArgs{...}
type ClientAddonsMscrmInput interface {
	pulumi.Input

	ToClientAddonsMscrmOutput() ClientAddonsMscrmOutput
	ToClientAddonsMscrmOutputWithContext(context.Context) ClientAddonsMscrmOutput
}

type ClientAddonsMscrmArgs struct {
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ClientAddonsMscrmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsMscrm)(nil)).Elem()
}

func (i ClientAddonsMscrmArgs) ToClientAddonsMscrmOutput() ClientAddonsMscrmOutput {
	return i.ToClientAddonsMscrmOutputWithContext(context.Background())
}

func (i ClientAddonsMscrmArgs) ToClientAddonsMscrmOutputWithContext(ctx context.Context) ClientAddonsMscrmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsMscrmOutput)
}

func (i ClientAddonsMscrmArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsMscrm] {
	return pulumix.Output[ClientAddonsMscrm]{
		OutputState: i.ToClientAddonsMscrmOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsMscrmArgs) ToClientAddonsMscrmPtrOutput() ClientAddonsMscrmPtrOutput {
	return i.ToClientAddonsMscrmPtrOutputWithContext(context.Background())
}

func (i ClientAddonsMscrmArgs) ToClientAddonsMscrmPtrOutputWithContext(ctx context.Context) ClientAddonsMscrmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsMscrmOutput).ToClientAddonsMscrmPtrOutputWithContext(ctx)
}

// ClientAddonsMscrmPtrInput is an input type that accepts ClientAddonsMscrmArgs, ClientAddonsMscrmPtr and ClientAddonsMscrmPtrOutput values.
// You can construct a concrete instance of `ClientAddonsMscrmPtrInput` via:
//
//	        ClientAddonsMscrmArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsMscrmPtrInput interface {
	pulumi.Input

	ToClientAddonsMscrmPtrOutput() ClientAddonsMscrmPtrOutput
	ToClientAddonsMscrmPtrOutputWithContext(context.Context) ClientAddonsMscrmPtrOutput
}

type clientAddonsMscrmPtrType ClientAddonsMscrmArgs

func ClientAddonsMscrmPtr(v *ClientAddonsMscrmArgs) ClientAddonsMscrmPtrInput {
	return (*clientAddonsMscrmPtrType)(v)
}

func (*clientAddonsMscrmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsMscrm)(nil)).Elem()
}

func (i *clientAddonsMscrmPtrType) ToClientAddonsMscrmPtrOutput() ClientAddonsMscrmPtrOutput {
	return i.ToClientAddonsMscrmPtrOutputWithContext(context.Background())
}

func (i *clientAddonsMscrmPtrType) ToClientAddonsMscrmPtrOutputWithContext(ctx context.Context) ClientAddonsMscrmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsMscrmPtrOutput)
}

func (i *clientAddonsMscrmPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsMscrm] {
	return pulumix.Output[*ClientAddonsMscrm]{
		OutputState: i.ToClientAddonsMscrmPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsMscrmOutput struct{ *pulumi.OutputState }

func (ClientAddonsMscrmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsMscrm)(nil)).Elem()
}

func (o ClientAddonsMscrmOutput) ToClientAddonsMscrmOutput() ClientAddonsMscrmOutput {
	return o
}

func (o ClientAddonsMscrmOutput) ToClientAddonsMscrmOutputWithContext(ctx context.Context) ClientAddonsMscrmOutput {
	return o
}

func (o ClientAddonsMscrmOutput) ToClientAddonsMscrmPtrOutput() ClientAddonsMscrmPtrOutput {
	return o.ToClientAddonsMscrmPtrOutputWithContext(context.Background())
}

func (o ClientAddonsMscrmOutput) ToClientAddonsMscrmPtrOutputWithContext(ctx context.Context) ClientAddonsMscrmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsMscrm) *ClientAddonsMscrm {
		return &v
	}).(ClientAddonsMscrmPtrOutput)
}

func (o ClientAddonsMscrmOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsMscrm] {
	return pulumix.Output[ClientAddonsMscrm]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsMscrmOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsMscrm) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ClientAddonsMscrmPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsMscrmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsMscrm)(nil)).Elem()
}

func (o ClientAddonsMscrmPtrOutput) ToClientAddonsMscrmPtrOutput() ClientAddonsMscrmPtrOutput {
	return o
}

func (o ClientAddonsMscrmPtrOutput) ToClientAddonsMscrmPtrOutputWithContext(ctx context.Context) ClientAddonsMscrmPtrOutput {
	return o
}

func (o ClientAddonsMscrmPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsMscrm] {
	return pulumix.Output[*ClientAddonsMscrm]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsMscrmPtrOutput) Elem() ClientAddonsMscrmOutput {
	return o.ApplyT(func(v *ClientAddonsMscrm) ClientAddonsMscrm {
		if v != nil {
			return *v
		}
		var ret ClientAddonsMscrm
		return ret
	}).(ClientAddonsMscrmOutput)
}

func (o ClientAddonsMscrmPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsMscrm) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsNewrelic struct {
	Account *string `pulumi:"account"`
}

// ClientAddonsNewrelicInput is an input type that accepts ClientAddonsNewrelicArgs and ClientAddonsNewrelicOutput values.
// You can construct a concrete instance of `ClientAddonsNewrelicInput` via:
//
//	ClientAddonsNewrelicArgs{...}
type ClientAddonsNewrelicInput interface {
	pulumi.Input

	ToClientAddonsNewrelicOutput() ClientAddonsNewrelicOutput
	ToClientAddonsNewrelicOutputWithContext(context.Context) ClientAddonsNewrelicOutput
}

type ClientAddonsNewrelicArgs struct {
	Account pulumi.StringPtrInput `pulumi:"account"`
}

func (ClientAddonsNewrelicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsNewrelic)(nil)).Elem()
}

func (i ClientAddonsNewrelicArgs) ToClientAddonsNewrelicOutput() ClientAddonsNewrelicOutput {
	return i.ToClientAddonsNewrelicOutputWithContext(context.Background())
}

func (i ClientAddonsNewrelicArgs) ToClientAddonsNewrelicOutputWithContext(ctx context.Context) ClientAddonsNewrelicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsNewrelicOutput)
}

func (i ClientAddonsNewrelicArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsNewrelic] {
	return pulumix.Output[ClientAddonsNewrelic]{
		OutputState: i.ToClientAddonsNewrelicOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsNewrelicArgs) ToClientAddonsNewrelicPtrOutput() ClientAddonsNewrelicPtrOutput {
	return i.ToClientAddonsNewrelicPtrOutputWithContext(context.Background())
}

func (i ClientAddonsNewrelicArgs) ToClientAddonsNewrelicPtrOutputWithContext(ctx context.Context) ClientAddonsNewrelicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsNewrelicOutput).ToClientAddonsNewrelicPtrOutputWithContext(ctx)
}

// ClientAddonsNewrelicPtrInput is an input type that accepts ClientAddonsNewrelicArgs, ClientAddonsNewrelicPtr and ClientAddonsNewrelicPtrOutput values.
// You can construct a concrete instance of `ClientAddonsNewrelicPtrInput` via:
//
//	        ClientAddonsNewrelicArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsNewrelicPtrInput interface {
	pulumi.Input

	ToClientAddonsNewrelicPtrOutput() ClientAddonsNewrelicPtrOutput
	ToClientAddonsNewrelicPtrOutputWithContext(context.Context) ClientAddonsNewrelicPtrOutput
}

type clientAddonsNewrelicPtrType ClientAddonsNewrelicArgs

func ClientAddonsNewrelicPtr(v *ClientAddonsNewrelicArgs) ClientAddonsNewrelicPtrInput {
	return (*clientAddonsNewrelicPtrType)(v)
}

func (*clientAddonsNewrelicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsNewrelic)(nil)).Elem()
}

func (i *clientAddonsNewrelicPtrType) ToClientAddonsNewrelicPtrOutput() ClientAddonsNewrelicPtrOutput {
	return i.ToClientAddonsNewrelicPtrOutputWithContext(context.Background())
}

func (i *clientAddonsNewrelicPtrType) ToClientAddonsNewrelicPtrOutputWithContext(ctx context.Context) ClientAddonsNewrelicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsNewrelicPtrOutput)
}

func (i *clientAddonsNewrelicPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsNewrelic] {
	return pulumix.Output[*ClientAddonsNewrelic]{
		OutputState: i.ToClientAddonsNewrelicPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsNewrelicOutput struct{ *pulumi.OutputState }

func (ClientAddonsNewrelicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsNewrelic)(nil)).Elem()
}

func (o ClientAddonsNewrelicOutput) ToClientAddonsNewrelicOutput() ClientAddonsNewrelicOutput {
	return o
}

func (o ClientAddonsNewrelicOutput) ToClientAddonsNewrelicOutputWithContext(ctx context.Context) ClientAddonsNewrelicOutput {
	return o
}

func (o ClientAddonsNewrelicOutput) ToClientAddonsNewrelicPtrOutput() ClientAddonsNewrelicPtrOutput {
	return o.ToClientAddonsNewrelicPtrOutputWithContext(context.Background())
}

func (o ClientAddonsNewrelicOutput) ToClientAddonsNewrelicPtrOutputWithContext(ctx context.Context) ClientAddonsNewrelicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsNewrelic) *ClientAddonsNewrelic {
		return &v
	}).(ClientAddonsNewrelicPtrOutput)
}

func (o ClientAddonsNewrelicOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsNewrelic] {
	return pulumix.Output[ClientAddonsNewrelic]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsNewrelicOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsNewrelic) *string { return v.Account }).(pulumi.StringPtrOutput)
}

type ClientAddonsNewrelicPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsNewrelicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsNewrelic)(nil)).Elem()
}

func (o ClientAddonsNewrelicPtrOutput) ToClientAddonsNewrelicPtrOutput() ClientAddonsNewrelicPtrOutput {
	return o
}

func (o ClientAddonsNewrelicPtrOutput) ToClientAddonsNewrelicPtrOutputWithContext(ctx context.Context) ClientAddonsNewrelicPtrOutput {
	return o
}

func (o ClientAddonsNewrelicPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsNewrelic] {
	return pulumix.Output[*ClientAddonsNewrelic]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsNewrelicPtrOutput) Elem() ClientAddonsNewrelicOutput {
	return o.ApplyT(func(v *ClientAddonsNewrelic) ClientAddonsNewrelic {
		if v != nil {
			return *v
		}
		var ret ClientAddonsNewrelic
		return ret
	}).(ClientAddonsNewrelicOutput)
}

func (o ClientAddonsNewrelicPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsNewrelic) *string {
		if v == nil {
			return nil
		}
		return v.Account
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsOffice365 struct {
	Connection *string `pulumi:"connection"`
	Domain     *string `pulumi:"domain"`
}

// ClientAddonsOffice365Input is an input type that accepts ClientAddonsOffice365Args and ClientAddonsOffice365Output values.
// You can construct a concrete instance of `ClientAddonsOffice365Input` via:
//
//	ClientAddonsOffice365Args{...}
type ClientAddonsOffice365Input interface {
	pulumi.Input

	ToClientAddonsOffice365Output() ClientAddonsOffice365Output
	ToClientAddonsOffice365OutputWithContext(context.Context) ClientAddonsOffice365Output
}

type ClientAddonsOffice365Args struct {
	Connection pulumi.StringPtrInput `pulumi:"connection"`
	Domain     pulumi.StringPtrInput `pulumi:"domain"`
}

func (ClientAddonsOffice365Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsOffice365)(nil)).Elem()
}

func (i ClientAddonsOffice365Args) ToClientAddonsOffice365Output() ClientAddonsOffice365Output {
	return i.ToClientAddonsOffice365OutputWithContext(context.Background())
}

func (i ClientAddonsOffice365Args) ToClientAddonsOffice365OutputWithContext(ctx context.Context) ClientAddonsOffice365Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOffice365Output)
}

func (i ClientAddonsOffice365Args) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsOffice365] {
	return pulumix.Output[ClientAddonsOffice365]{
		OutputState: i.ToClientAddonsOffice365OutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsOffice365Args) ToClientAddonsOffice365PtrOutput() ClientAddonsOffice365PtrOutput {
	return i.ToClientAddonsOffice365PtrOutputWithContext(context.Background())
}

func (i ClientAddonsOffice365Args) ToClientAddonsOffice365PtrOutputWithContext(ctx context.Context) ClientAddonsOffice365PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOffice365Output).ToClientAddonsOffice365PtrOutputWithContext(ctx)
}

// ClientAddonsOffice365PtrInput is an input type that accepts ClientAddonsOffice365Args, ClientAddonsOffice365Ptr and ClientAddonsOffice365PtrOutput values.
// You can construct a concrete instance of `ClientAddonsOffice365PtrInput` via:
//
//	        ClientAddonsOffice365Args{...}
//
//	or:
//
//	        nil
type ClientAddonsOffice365PtrInput interface {
	pulumi.Input

	ToClientAddonsOffice365PtrOutput() ClientAddonsOffice365PtrOutput
	ToClientAddonsOffice365PtrOutputWithContext(context.Context) ClientAddonsOffice365PtrOutput
}

type clientAddonsOffice365PtrType ClientAddonsOffice365Args

func ClientAddonsOffice365Ptr(v *ClientAddonsOffice365Args) ClientAddonsOffice365PtrInput {
	return (*clientAddonsOffice365PtrType)(v)
}

func (*clientAddonsOffice365PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsOffice365)(nil)).Elem()
}

func (i *clientAddonsOffice365PtrType) ToClientAddonsOffice365PtrOutput() ClientAddonsOffice365PtrOutput {
	return i.ToClientAddonsOffice365PtrOutputWithContext(context.Background())
}

func (i *clientAddonsOffice365PtrType) ToClientAddonsOffice365PtrOutputWithContext(ctx context.Context) ClientAddonsOffice365PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsOffice365PtrOutput)
}

func (i *clientAddonsOffice365PtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsOffice365] {
	return pulumix.Output[*ClientAddonsOffice365]{
		OutputState: i.ToClientAddonsOffice365PtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsOffice365Output struct{ *pulumi.OutputState }

func (ClientAddonsOffice365Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsOffice365)(nil)).Elem()
}

func (o ClientAddonsOffice365Output) ToClientAddonsOffice365Output() ClientAddonsOffice365Output {
	return o
}

func (o ClientAddonsOffice365Output) ToClientAddonsOffice365OutputWithContext(ctx context.Context) ClientAddonsOffice365Output {
	return o
}

func (o ClientAddonsOffice365Output) ToClientAddonsOffice365PtrOutput() ClientAddonsOffice365PtrOutput {
	return o.ToClientAddonsOffice365PtrOutputWithContext(context.Background())
}

func (o ClientAddonsOffice365Output) ToClientAddonsOffice365PtrOutputWithContext(ctx context.Context) ClientAddonsOffice365PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsOffice365) *ClientAddonsOffice365 {
		return &v
	}).(ClientAddonsOffice365PtrOutput)
}

func (o ClientAddonsOffice365Output) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsOffice365] {
	return pulumix.Output[ClientAddonsOffice365]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsOffice365Output) Connection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsOffice365) *string { return v.Connection }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsOffice365Output) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsOffice365) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

type ClientAddonsOffice365PtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsOffice365PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsOffice365)(nil)).Elem()
}

func (o ClientAddonsOffice365PtrOutput) ToClientAddonsOffice365PtrOutput() ClientAddonsOffice365PtrOutput {
	return o
}

func (o ClientAddonsOffice365PtrOutput) ToClientAddonsOffice365PtrOutputWithContext(ctx context.Context) ClientAddonsOffice365PtrOutput {
	return o
}

func (o ClientAddonsOffice365PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsOffice365] {
	return pulumix.Output[*ClientAddonsOffice365]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsOffice365PtrOutput) Elem() ClientAddonsOffice365Output {
	return o.ApplyT(func(v *ClientAddonsOffice365) ClientAddonsOffice365 {
		if v != nil {
			return *v
		}
		var ret ClientAddonsOffice365
		return ret
	}).(ClientAddonsOffice365Output)
}

func (o ClientAddonsOffice365PtrOutput) Connection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsOffice365) *string {
		if v == nil {
			return nil
		}
		return v.Connection
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsOffice365PtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsOffice365) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsRms struct {
	Url *string `pulumi:"url"`
}

// ClientAddonsRmsInput is an input type that accepts ClientAddonsRmsArgs and ClientAddonsRmsOutput values.
// You can construct a concrete instance of `ClientAddonsRmsInput` via:
//
//	ClientAddonsRmsArgs{...}
type ClientAddonsRmsInput interface {
	pulumi.Input

	ToClientAddonsRmsOutput() ClientAddonsRmsOutput
	ToClientAddonsRmsOutputWithContext(context.Context) ClientAddonsRmsOutput
}

type ClientAddonsRmsArgs struct {
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (ClientAddonsRmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsRms)(nil)).Elem()
}

func (i ClientAddonsRmsArgs) ToClientAddonsRmsOutput() ClientAddonsRmsOutput {
	return i.ToClientAddonsRmsOutputWithContext(context.Background())
}

func (i ClientAddonsRmsArgs) ToClientAddonsRmsOutputWithContext(ctx context.Context) ClientAddonsRmsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsRmsOutput)
}

func (i ClientAddonsRmsArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsRms] {
	return pulumix.Output[ClientAddonsRms]{
		OutputState: i.ToClientAddonsRmsOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsRmsArgs) ToClientAddonsRmsPtrOutput() ClientAddonsRmsPtrOutput {
	return i.ToClientAddonsRmsPtrOutputWithContext(context.Background())
}

func (i ClientAddonsRmsArgs) ToClientAddonsRmsPtrOutputWithContext(ctx context.Context) ClientAddonsRmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsRmsOutput).ToClientAddonsRmsPtrOutputWithContext(ctx)
}

// ClientAddonsRmsPtrInput is an input type that accepts ClientAddonsRmsArgs, ClientAddonsRmsPtr and ClientAddonsRmsPtrOutput values.
// You can construct a concrete instance of `ClientAddonsRmsPtrInput` via:
//
//	        ClientAddonsRmsArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsRmsPtrInput interface {
	pulumi.Input

	ToClientAddonsRmsPtrOutput() ClientAddonsRmsPtrOutput
	ToClientAddonsRmsPtrOutputWithContext(context.Context) ClientAddonsRmsPtrOutput
}

type clientAddonsRmsPtrType ClientAddonsRmsArgs

func ClientAddonsRmsPtr(v *ClientAddonsRmsArgs) ClientAddonsRmsPtrInput {
	return (*clientAddonsRmsPtrType)(v)
}

func (*clientAddonsRmsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsRms)(nil)).Elem()
}

func (i *clientAddonsRmsPtrType) ToClientAddonsRmsPtrOutput() ClientAddonsRmsPtrOutput {
	return i.ToClientAddonsRmsPtrOutputWithContext(context.Background())
}

func (i *clientAddonsRmsPtrType) ToClientAddonsRmsPtrOutputWithContext(ctx context.Context) ClientAddonsRmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsRmsPtrOutput)
}

func (i *clientAddonsRmsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsRms] {
	return pulumix.Output[*ClientAddonsRms]{
		OutputState: i.ToClientAddonsRmsPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsRmsOutput struct{ *pulumi.OutputState }

func (ClientAddonsRmsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsRms)(nil)).Elem()
}

func (o ClientAddonsRmsOutput) ToClientAddonsRmsOutput() ClientAddonsRmsOutput {
	return o
}

func (o ClientAddonsRmsOutput) ToClientAddonsRmsOutputWithContext(ctx context.Context) ClientAddonsRmsOutput {
	return o
}

func (o ClientAddonsRmsOutput) ToClientAddonsRmsPtrOutput() ClientAddonsRmsPtrOutput {
	return o.ToClientAddonsRmsPtrOutputWithContext(context.Background())
}

func (o ClientAddonsRmsOutput) ToClientAddonsRmsPtrOutputWithContext(ctx context.Context) ClientAddonsRmsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsRms) *ClientAddonsRms {
		return &v
	}).(ClientAddonsRmsPtrOutput)
}

func (o ClientAddonsRmsOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsRms] {
	return pulumix.Output[ClientAddonsRms]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsRmsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsRms) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ClientAddonsRmsPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsRmsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsRms)(nil)).Elem()
}

func (o ClientAddonsRmsPtrOutput) ToClientAddonsRmsPtrOutput() ClientAddonsRmsPtrOutput {
	return o
}

func (o ClientAddonsRmsPtrOutput) ToClientAddonsRmsPtrOutputWithContext(ctx context.Context) ClientAddonsRmsPtrOutput {
	return o
}

func (o ClientAddonsRmsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsRms] {
	return pulumix.Output[*ClientAddonsRms]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsRmsPtrOutput) Elem() ClientAddonsRmsOutput {
	return o.ApplyT(func(v *ClientAddonsRms) ClientAddonsRms {
		if v != nil {
			return *v
		}
		var ret ClientAddonsRms
		return ret
	}).(ClientAddonsRmsOutput)
}

func (o ClientAddonsRmsPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsRms) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsSalesforce struct {
	EntityId *string `pulumi:"entityId"`
}

// ClientAddonsSalesforceInput is an input type that accepts ClientAddonsSalesforceArgs and ClientAddonsSalesforceOutput values.
// You can construct a concrete instance of `ClientAddonsSalesforceInput` via:
//
//	ClientAddonsSalesforceArgs{...}
type ClientAddonsSalesforceInput interface {
	pulumi.Input

	ToClientAddonsSalesforceOutput() ClientAddonsSalesforceOutput
	ToClientAddonsSalesforceOutputWithContext(context.Context) ClientAddonsSalesforceOutput
}

type ClientAddonsSalesforceArgs struct {
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
}

func (ClientAddonsSalesforceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSalesforce)(nil)).Elem()
}

func (i ClientAddonsSalesforceArgs) ToClientAddonsSalesforceOutput() ClientAddonsSalesforceOutput {
	return i.ToClientAddonsSalesforceOutputWithContext(context.Background())
}

func (i ClientAddonsSalesforceArgs) ToClientAddonsSalesforceOutputWithContext(ctx context.Context) ClientAddonsSalesforceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSalesforceOutput)
}

func (i ClientAddonsSalesforceArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSalesforce] {
	return pulumix.Output[ClientAddonsSalesforce]{
		OutputState: i.ToClientAddonsSalesforceOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSalesforceArgs) ToClientAddonsSalesforcePtrOutput() ClientAddonsSalesforcePtrOutput {
	return i.ToClientAddonsSalesforcePtrOutputWithContext(context.Background())
}

func (i ClientAddonsSalesforceArgs) ToClientAddonsSalesforcePtrOutputWithContext(ctx context.Context) ClientAddonsSalesforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSalesforceOutput).ToClientAddonsSalesforcePtrOutputWithContext(ctx)
}

// ClientAddonsSalesforcePtrInput is an input type that accepts ClientAddonsSalesforceArgs, ClientAddonsSalesforcePtr and ClientAddonsSalesforcePtrOutput values.
// You can construct a concrete instance of `ClientAddonsSalesforcePtrInput` via:
//
//	        ClientAddonsSalesforceArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSalesforcePtrInput interface {
	pulumi.Input

	ToClientAddonsSalesforcePtrOutput() ClientAddonsSalesforcePtrOutput
	ToClientAddonsSalesforcePtrOutputWithContext(context.Context) ClientAddonsSalesforcePtrOutput
}

type clientAddonsSalesforcePtrType ClientAddonsSalesforceArgs

func ClientAddonsSalesforcePtr(v *ClientAddonsSalesforceArgs) ClientAddonsSalesforcePtrInput {
	return (*clientAddonsSalesforcePtrType)(v)
}

func (*clientAddonsSalesforcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSalesforce)(nil)).Elem()
}

func (i *clientAddonsSalesforcePtrType) ToClientAddonsSalesforcePtrOutput() ClientAddonsSalesforcePtrOutput {
	return i.ToClientAddonsSalesforcePtrOutputWithContext(context.Background())
}

func (i *clientAddonsSalesforcePtrType) ToClientAddonsSalesforcePtrOutputWithContext(ctx context.Context) ClientAddonsSalesforcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSalesforcePtrOutput)
}

func (i *clientAddonsSalesforcePtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSalesforce] {
	return pulumix.Output[*ClientAddonsSalesforce]{
		OutputState: i.ToClientAddonsSalesforcePtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSalesforceOutput struct{ *pulumi.OutputState }

func (ClientAddonsSalesforceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSalesforce)(nil)).Elem()
}

func (o ClientAddonsSalesforceOutput) ToClientAddonsSalesforceOutput() ClientAddonsSalesforceOutput {
	return o
}

func (o ClientAddonsSalesforceOutput) ToClientAddonsSalesforceOutputWithContext(ctx context.Context) ClientAddonsSalesforceOutput {
	return o
}

func (o ClientAddonsSalesforceOutput) ToClientAddonsSalesforcePtrOutput() ClientAddonsSalesforcePtrOutput {
	return o.ToClientAddonsSalesforcePtrOutputWithContext(context.Background())
}

func (o ClientAddonsSalesforceOutput) ToClientAddonsSalesforcePtrOutputWithContext(ctx context.Context) ClientAddonsSalesforcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSalesforce) *ClientAddonsSalesforce {
		return &v
	}).(ClientAddonsSalesforcePtrOutput)
}

func (o ClientAddonsSalesforceOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSalesforce] {
	return pulumix.Output[ClientAddonsSalesforce]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSalesforceOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSalesforce) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

type ClientAddonsSalesforcePtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSalesforcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSalesforce)(nil)).Elem()
}

func (o ClientAddonsSalesforcePtrOutput) ToClientAddonsSalesforcePtrOutput() ClientAddonsSalesforcePtrOutput {
	return o
}

func (o ClientAddonsSalesforcePtrOutput) ToClientAddonsSalesforcePtrOutputWithContext(ctx context.Context) ClientAddonsSalesforcePtrOutput {
	return o
}

func (o ClientAddonsSalesforcePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSalesforce] {
	return pulumix.Output[*ClientAddonsSalesforce]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSalesforcePtrOutput) Elem() ClientAddonsSalesforceOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforce) ClientAddonsSalesforce {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSalesforce
		return ret
	}).(ClientAddonsSalesforceOutput)
}

func (o ClientAddonsSalesforcePtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforce) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsSalesforceApi struct {
	// The ID of the client.
	ClientId            *string `pulumi:"clientId"`
	CommunityName       *string `pulumi:"communityName"`
	CommunityUrlSection *string `pulumi:"communityUrlSection"`
	Principal           *string `pulumi:"principal"`
}

// ClientAddonsSalesforceApiInput is an input type that accepts ClientAddonsSalesforceApiArgs and ClientAddonsSalesforceApiOutput values.
// You can construct a concrete instance of `ClientAddonsSalesforceApiInput` via:
//
//	ClientAddonsSalesforceApiArgs{...}
type ClientAddonsSalesforceApiInput interface {
	pulumi.Input

	ToClientAddonsSalesforceApiOutput() ClientAddonsSalesforceApiOutput
	ToClientAddonsSalesforceApiOutputWithContext(context.Context) ClientAddonsSalesforceApiOutput
}

type ClientAddonsSalesforceApiArgs struct {
	// The ID of the client.
	ClientId            pulumi.StringPtrInput `pulumi:"clientId"`
	CommunityName       pulumi.StringPtrInput `pulumi:"communityName"`
	CommunityUrlSection pulumi.StringPtrInput `pulumi:"communityUrlSection"`
	Principal           pulumi.StringPtrInput `pulumi:"principal"`
}

func (ClientAddonsSalesforceApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSalesforceApi)(nil)).Elem()
}

func (i ClientAddonsSalesforceApiArgs) ToClientAddonsSalesforceApiOutput() ClientAddonsSalesforceApiOutput {
	return i.ToClientAddonsSalesforceApiOutputWithContext(context.Background())
}

func (i ClientAddonsSalesforceApiArgs) ToClientAddonsSalesforceApiOutputWithContext(ctx context.Context) ClientAddonsSalesforceApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSalesforceApiOutput)
}

func (i ClientAddonsSalesforceApiArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSalesforceApi] {
	return pulumix.Output[ClientAddonsSalesforceApi]{
		OutputState: i.ToClientAddonsSalesforceApiOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSalesforceApiArgs) ToClientAddonsSalesforceApiPtrOutput() ClientAddonsSalesforceApiPtrOutput {
	return i.ToClientAddonsSalesforceApiPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSalesforceApiArgs) ToClientAddonsSalesforceApiPtrOutputWithContext(ctx context.Context) ClientAddonsSalesforceApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSalesforceApiOutput).ToClientAddonsSalesforceApiPtrOutputWithContext(ctx)
}

// ClientAddonsSalesforceApiPtrInput is an input type that accepts ClientAddonsSalesforceApiArgs, ClientAddonsSalesforceApiPtr and ClientAddonsSalesforceApiPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSalesforceApiPtrInput` via:
//
//	        ClientAddonsSalesforceApiArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSalesforceApiPtrInput interface {
	pulumi.Input

	ToClientAddonsSalesforceApiPtrOutput() ClientAddonsSalesforceApiPtrOutput
	ToClientAddonsSalesforceApiPtrOutputWithContext(context.Context) ClientAddonsSalesforceApiPtrOutput
}

type clientAddonsSalesforceApiPtrType ClientAddonsSalesforceApiArgs

func ClientAddonsSalesforceApiPtr(v *ClientAddonsSalesforceApiArgs) ClientAddonsSalesforceApiPtrInput {
	return (*clientAddonsSalesforceApiPtrType)(v)
}

func (*clientAddonsSalesforceApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSalesforceApi)(nil)).Elem()
}

func (i *clientAddonsSalesforceApiPtrType) ToClientAddonsSalesforceApiPtrOutput() ClientAddonsSalesforceApiPtrOutput {
	return i.ToClientAddonsSalesforceApiPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSalesforceApiPtrType) ToClientAddonsSalesforceApiPtrOutputWithContext(ctx context.Context) ClientAddonsSalesforceApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSalesforceApiPtrOutput)
}

func (i *clientAddonsSalesforceApiPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSalesforceApi] {
	return pulumix.Output[*ClientAddonsSalesforceApi]{
		OutputState: i.ToClientAddonsSalesforceApiPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSalesforceApiOutput struct{ *pulumi.OutputState }

func (ClientAddonsSalesforceApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSalesforceApi)(nil)).Elem()
}

func (o ClientAddonsSalesforceApiOutput) ToClientAddonsSalesforceApiOutput() ClientAddonsSalesforceApiOutput {
	return o
}

func (o ClientAddonsSalesforceApiOutput) ToClientAddonsSalesforceApiOutputWithContext(ctx context.Context) ClientAddonsSalesforceApiOutput {
	return o
}

func (o ClientAddonsSalesforceApiOutput) ToClientAddonsSalesforceApiPtrOutput() ClientAddonsSalesforceApiPtrOutput {
	return o.ToClientAddonsSalesforceApiPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSalesforceApiOutput) ToClientAddonsSalesforceApiPtrOutputWithContext(ctx context.Context) ClientAddonsSalesforceApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSalesforceApi) *ClientAddonsSalesforceApi {
		return &v
	}).(ClientAddonsSalesforceApiPtrOutput)
}

func (o ClientAddonsSalesforceApiOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSalesforceApi] {
	return pulumix.Output[ClientAddonsSalesforceApi]{
		OutputState: o.OutputState,
	}
}

// The ID of the client.
func (o ClientAddonsSalesforceApiOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSalesforceApi) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceApiOutput) CommunityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSalesforceApi) *string { return v.CommunityName }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceApiOutput) CommunityUrlSection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSalesforceApi) *string { return v.CommunityUrlSection }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceApiOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSalesforceApi) *string { return v.Principal }).(pulumi.StringPtrOutput)
}

type ClientAddonsSalesforceApiPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSalesforceApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSalesforceApi)(nil)).Elem()
}

func (o ClientAddonsSalesforceApiPtrOutput) ToClientAddonsSalesforceApiPtrOutput() ClientAddonsSalesforceApiPtrOutput {
	return o
}

func (o ClientAddonsSalesforceApiPtrOutput) ToClientAddonsSalesforceApiPtrOutputWithContext(ctx context.Context) ClientAddonsSalesforceApiPtrOutput {
	return o
}

func (o ClientAddonsSalesforceApiPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSalesforceApi] {
	return pulumix.Output[*ClientAddonsSalesforceApi]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSalesforceApiPtrOutput) Elem() ClientAddonsSalesforceApiOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforceApi) ClientAddonsSalesforceApi {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSalesforceApi
		return ret
	}).(ClientAddonsSalesforceApiOutput)
}

// The ID of the client.
func (o ClientAddonsSalesforceApiPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforceApi) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceApiPtrOutput) CommunityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforceApi) *string {
		if v == nil {
			return nil
		}
		return v.CommunityName
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceApiPtrOutput) CommunityUrlSection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforceApi) *string {
		if v == nil {
			return nil
		}
		return v.CommunityUrlSection
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceApiPtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforceApi) *string {
		if v == nil {
			return nil
		}
		return v.Principal
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsSalesforceSandboxApi struct {
	// The ID of the client.
	ClientId            *string `pulumi:"clientId"`
	CommunityName       *string `pulumi:"communityName"`
	CommunityUrlSection *string `pulumi:"communityUrlSection"`
	Principal           *string `pulumi:"principal"`
}

// ClientAddonsSalesforceSandboxApiInput is an input type that accepts ClientAddonsSalesforceSandboxApiArgs and ClientAddonsSalesforceSandboxApiOutput values.
// You can construct a concrete instance of `ClientAddonsSalesforceSandboxApiInput` via:
//
//	ClientAddonsSalesforceSandboxApiArgs{...}
type ClientAddonsSalesforceSandboxApiInput interface {
	pulumi.Input

	ToClientAddonsSalesforceSandboxApiOutput() ClientAddonsSalesforceSandboxApiOutput
	ToClientAddonsSalesforceSandboxApiOutputWithContext(context.Context) ClientAddonsSalesforceSandboxApiOutput
}

type ClientAddonsSalesforceSandboxApiArgs struct {
	// The ID of the client.
	ClientId            pulumi.StringPtrInput `pulumi:"clientId"`
	CommunityName       pulumi.StringPtrInput `pulumi:"communityName"`
	CommunityUrlSection pulumi.StringPtrInput `pulumi:"communityUrlSection"`
	Principal           pulumi.StringPtrInput `pulumi:"principal"`
}

func (ClientAddonsSalesforceSandboxApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSalesforceSandboxApi)(nil)).Elem()
}

func (i ClientAddonsSalesforceSandboxApiArgs) ToClientAddonsSalesforceSandboxApiOutput() ClientAddonsSalesforceSandboxApiOutput {
	return i.ToClientAddonsSalesforceSandboxApiOutputWithContext(context.Background())
}

func (i ClientAddonsSalesforceSandboxApiArgs) ToClientAddonsSalesforceSandboxApiOutputWithContext(ctx context.Context) ClientAddonsSalesforceSandboxApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSalesforceSandboxApiOutput)
}

func (i ClientAddonsSalesforceSandboxApiArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSalesforceSandboxApi] {
	return pulumix.Output[ClientAddonsSalesforceSandboxApi]{
		OutputState: i.ToClientAddonsSalesforceSandboxApiOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSalesforceSandboxApiArgs) ToClientAddonsSalesforceSandboxApiPtrOutput() ClientAddonsSalesforceSandboxApiPtrOutput {
	return i.ToClientAddonsSalesforceSandboxApiPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSalesforceSandboxApiArgs) ToClientAddonsSalesforceSandboxApiPtrOutputWithContext(ctx context.Context) ClientAddonsSalesforceSandboxApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSalesforceSandboxApiOutput).ToClientAddonsSalesforceSandboxApiPtrOutputWithContext(ctx)
}

// ClientAddonsSalesforceSandboxApiPtrInput is an input type that accepts ClientAddonsSalesforceSandboxApiArgs, ClientAddonsSalesforceSandboxApiPtr and ClientAddonsSalesforceSandboxApiPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSalesforceSandboxApiPtrInput` via:
//
//	        ClientAddonsSalesforceSandboxApiArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSalesforceSandboxApiPtrInput interface {
	pulumi.Input

	ToClientAddonsSalesforceSandboxApiPtrOutput() ClientAddonsSalesforceSandboxApiPtrOutput
	ToClientAddonsSalesforceSandboxApiPtrOutputWithContext(context.Context) ClientAddonsSalesforceSandboxApiPtrOutput
}

type clientAddonsSalesforceSandboxApiPtrType ClientAddonsSalesforceSandboxApiArgs

func ClientAddonsSalesforceSandboxApiPtr(v *ClientAddonsSalesforceSandboxApiArgs) ClientAddonsSalesforceSandboxApiPtrInput {
	return (*clientAddonsSalesforceSandboxApiPtrType)(v)
}

func (*clientAddonsSalesforceSandboxApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSalesforceSandboxApi)(nil)).Elem()
}

func (i *clientAddonsSalesforceSandboxApiPtrType) ToClientAddonsSalesforceSandboxApiPtrOutput() ClientAddonsSalesforceSandboxApiPtrOutput {
	return i.ToClientAddonsSalesforceSandboxApiPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSalesforceSandboxApiPtrType) ToClientAddonsSalesforceSandboxApiPtrOutputWithContext(ctx context.Context) ClientAddonsSalesforceSandboxApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSalesforceSandboxApiPtrOutput)
}

func (i *clientAddonsSalesforceSandboxApiPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSalesforceSandboxApi] {
	return pulumix.Output[*ClientAddonsSalesforceSandboxApi]{
		OutputState: i.ToClientAddonsSalesforceSandboxApiPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSalesforceSandboxApiOutput struct{ *pulumi.OutputState }

func (ClientAddonsSalesforceSandboxApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSalesforceSandboxApi)(nil)).Elem()
}

func (o ClientAddonsSalesforceSandboxApiOutput) ToClientAddonsSalesforceSandboxApiOutput() ClientAddonsSalesforceSandboxApiOutput {
	return o
}

func (o ClientAddonsSalesforceSandboxApiOutput) ToClientAddonsSalesforceSandboxApiOutputWithContext(ctx context.Context) ClientAddonsSalesforceSandboxApiOutput {
	return o
}

func (o ClientAddonsSalesforceSandboxApiOutput) ToClientAddonsSalesforceSandboxApiPtrOutput() ClientAddonsSalesforceSandboxApiPtrOutput {
	return o.ToClientAddonsSalesforceSandboxApiPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSalesforceSandboxApiOutput) ToClientAddonsSalesforceSandboxApiPtrOutputWithContext(ctx context.Context) ClientAddonsSalesforceSandboxApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSalesforceSandboxApi) *ClientAddonsSalesforceSandboxApi {
		return &v
	}).(ClientAddonsSalesforceSandboxApiPtrOutput)
}

func (o ClientAddonsSalesforceSandboxApiOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSalesforceSandboxApi] {
	return pulumix.Output[ClientAddonsSalesforceSandboxApi]{
		OutputState: o.OutputState,
	}
}

// The ID of the client.
func (o ClientAddonsSalesforceSandboxApiOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSalesforceSandboxApi) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceSandboxApiOutput) CommunityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSalesforceSandboxApi) *string { return v.CommunityName }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceSandboxApiOutput) CommunityUrlSection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSalesforceSandboxApi) *string { return v.CommunityUrlSection }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceSandboxApiOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSalesforceSandboxApi) *string { return v.Principal }).(pulumi.StringPtrOutput)
}

type ClientAddonsSalesforceSandboxApiPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSalesforceSandboxApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSalesforceSandboxApi)(nil)).Elem()
}

func (o ClientAddonsSalesforceSandboxApiPtrOutput) ToClientAddonsSalesforceSandboxApiPtrOutput() ClientAddonsSalesforceSandboxApiPtrOutput {
	return o
}

func (o ClientAddonsSalesforceSandboxApiPtrOutput) ToClientAddonsSalesforceSandboxApiPtrOutputWithContext(ctx context.Context) ClientAddonsSalesforceSandboxApiPtrOutput {
	return o
}

func (o ClientAddonsSalesforceSandboxApiPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSalesforceSandboxApi] {
	return pulumix.Output[*ClientAddonsSalesforceSandboxApi]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSalesforceSandboxApiPtrOutput) Elem() ClientAddonsSalesforceSandboxApiOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforceSandboxApi) ClientAddonsSalesforceSandboxApi {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSalesforceSandboxApi
		return ret
	}).(ClientAddonsSalesforceSandboxApiOutput)
}

// The ID of the client.
func (o ClientAddonsSalesforceSandboxApiPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforceSandboxApi) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceSandboxApiPtrOutput) CommunityName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforceSandboxApi) *string {
		if v == nil {
			return nil
		}
		return v.CommunityName
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceSandboxApiPtrOutput) CommunityUrlSection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforceSandboxApi) *string {
		if v == nil {
			return nil
		}
		return v.CommunityUrlSection
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSalesforceSandboxApiPtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSalesforceSandboxApi) *string {
		if v == nil {
			return nil
		}
		return v.Principal
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsSamlp struct {
	Audience                       *string                  `pulumi:"audience"`
	AuthnContextClassRef           *string                  `pulumi:"authnContextClassRef"`
	Binding                        *string                  `pulumi:"binding"`
	CreateUpnClaim                 *bool                    `pulumi:"createUpnClaim"`
	Destination                    *string                  `pulumi:"destination"`
	DigestAlgorithm                *string                  `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     *bool                    `pulumi:"includeAttributeNameFormat"`
	Issuer                         *string                  `pulumi:"issuer"`
	LifetimeInSeconds              *int                     `pulumi:"lifetimeInSeconds"`
	Logout                         *ClientAddonsSamlpLogout `pulumi:"logout"`
	MapIdentities                  *bool                    `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           *bool                    `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       map[string]interface{}   `pulumi:"mappings"`
	NameIdentifierFormat           *string                  `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           []string                 `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping *bool                    `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      *string                  `pulumi:"recipient"`
	SignResponse                   *bool                    `pulumi:"signResponse"`
	SignatureAlgorithm             *string                  `pulumi:"signatureAlgorithm"`
	SigningCert                    *string                  `pulumi:"signingCert"`
	TypedAttributes                *bool                    `pulumi:"typedAttributes"`
}

// ClientAddonsSamlpInput is an input type that accepts ClientAddonsSamlpArgs and ClientAddonsSamlpOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpInput` via:
//
//	ClientAddonsSamlpArgs{...}
type ClientAddonsSamlpInput interface {
	pulumi.Input

	ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput
	ToClientAddonsSamlpOutputWithContext(context.Context) ClientAddonsSamlpOutput
}

type ClientAddonsSamlpArgs struct {
	Audience                       pulumi.StringPtrInput           `pulumi:"audience"`
	AuthnContextClassRef           pulumi.StringPtrInput           `pulumi:"authnContextClassRef"`
	Binding                        pulumi.StringPtrInput           `pulumi:"binding"`
	CreateUpnClaim                 pulumi.BoolPtrInput             `pulumi:"createUpnClaim"`
	Destination                    pulumi.StringPtrInput           `pulumi:"destination"`
	DigestAlgorithm                pulumi.StringPtrInput           `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     pulumi.BoolPtrInput             `pulumi:"includeAttributeNameFormat"`
	Issuer                         pulumi.StringPtrInput           `pulumi:"issuer"`
	LifetimeInSeconds              pulumi.IntPtrInput              `pulumi:"lifetimeInSeconds"`
	Logout                         ClientAddonsSamlpLogoutPtrInput `pulumi:"logout"`
	MapIdentities                  pulumi.BoolPtrInput             `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           pulumi.BoolPtrInput             `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       pulumi.MapInput                 `pulumi:"mappings"`
	NameIdentifierFormat           pulumi.StringPtrInput           `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           pulumi.StringArrayInput         `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping pulumi.BoolPtrInput             `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      pulumi.StringPtrInput           `pulumi:"recipient"`
	SignResponse                   pulumi.BoolPtrInput             `pulumi:"signResponse"`
	SignatureAlgorithm             pulumi.StringPtrInput           `pulumi:"signatureAlgorithm"`
	SigningCert                    pulumi.StringPtrInput           `pulumi:"signingCert"`
	TypedAttributes                pulumi.BoolPtrInput             `pulumi:"typedAttributes"`
}

func (ClientAddonsSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlp)(nil)).Elem()
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput {
	return i.ToClientAddonsSamlpOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpOutputWithContext(ctx context.Context) ClientAddonsSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpOutput)
}

func (i ClientAddonsSamlpArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSamlp] {
	return pulumix.Output[ClientAddonsSamlp]{
		OutputState: i.ToClientAddonsSamlpOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return i.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpArgs) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpOutput).ToClientAddonsSamlpPtrOutputWithContext(ctx)
}

// ClientAddonsSamlpPtrInput is an input type that accepts ClientAddonsSamlpArgs, ClientAddonsSamlpPtr and ClientAddonsSamlpPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpPtrInput` via:
//
//	        ClientAddonsSamlpArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSamlpPtrInput interface {
	pulumi.Input

	ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput
	ToClientAddonsSamlpPtrOutputWithContext(context.Context) ClientAddonsSamlpPtrOutput
}

type clientAddonsSamlpPtrType ClientAddonsSamlpArgs

func ClientAddonsSamlpPtr(v *ClientAddonsSamlpArgs) ClientAddonsSamlpPtrInput {
	return (*clientAddonsSamlpPtrType)(v)
}

func (*clientAddonsSamlpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlp)(nil)).Elem()
}

func (i *clientAddonsSamlpPtrType) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return i.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSamlpPtrType) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpPtrOutput)
}

func (i *clientAddonsSamlpPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSamlp] {
	return pulumix.Output[*ClientAddonsSamlp]{
		OutputState: i.ToClientAddonsSamlpPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSamlpOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlp)(nil)).Elem()
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpOutput() ClientAddonsSamlpOutput {
	return o
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpOutputWithContext(ctx context.Context) ClientAddonsSamlpOutput {
	return o
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return o.ToClientAddonsSamlpPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSamlpOutput) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSamlp) *ClientAddonsSamlp {
		return &v
	}).(ClientAddonsSamlpPtrOutput)
}

func (o ClientAddonsSamlpOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSamlp] {
	return pulumix.Output[ClientAddonsSamlp]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSamlpOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.AuthnContextClassRef }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Binding }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.CreateUpnClaim }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

func (o ClientAddonsSamlpOutput) Logout() ClientAddonsSamlpLogoutPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *ClientAddonsSamlpLogout { return v.Logout }).(ClientAddonsSamlpLogoutPtrOutput)
}

func (o ClientAddonsSamlpOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.MapIdentities }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

func (o ClientAddonsSamlpOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.NameIdentifierFormat }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

func (o ClientAddonsSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.Recipient }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.SignResponse }).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *string { return v.SigningCert }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlp) *bool { return v.TypedAttributes }).(pulumi.BoolPtrOutput)
}

type ClientAddonsSamlpPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlp)(nil)).Elem()
}

func (o ClientAddonsSamlpPtrOutput) ToClientAddonsSamlpPtrOutput() ClientAddonsSamlpPtrOutput {
	return o
}

func (o ClientAddonsSamlpPtrOutput) ToClientAddonsSamlpPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpPtrOutput {
	return o
}

func (o ClientAddonsSamlpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSamlp] {
	return pulumix.Output[*ClientAddonsSamlp]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSamlpPtrOutput) Elem() ClientAddonsSamlpOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) ClientAddonsSamlp {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSamlp
		return ret
	}).(ClientAddonsSamlpOutput)
}

func (o ClientAddonsSamlpPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) AuthnContextClassRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.AuthnContextClassRef
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Binding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Binding
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) CreateUpnClaim() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.CreateUpnClaim
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.DigestAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) IncludeAttributeNameFormat() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeAttributeNameFormat
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Logout() ClientAddonsSamlpLogoutPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *ClientAddonsSamlpLogout {
		if v == nil {
			return nil
		}
		return v.Logout
	}).(ClientAddonsSamlpLogoutPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) MapIdentities() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapIdentities
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) MapUnknownClaimsAsIs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.MapUnknownClaimsAsIs
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(pulumi.MapOutput)
}

func (o ClientAddonsSamlpPtrOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierFormat
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) []string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierProbes
	}).(pulumi.StringArrayOutput)
}

func (o ClientAddonsSamlpPtrOutput) PassthroughClaimsWithNoMapping() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.PassthroughClaimsWithNoMapping
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) Recipient() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.Recipient
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) SignResponse() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.SignResponse
	}).(pulumi.BoolPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *string {
		if v == nil {
			return nil
		}
		return v.SigningCert
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpPtrOutput) TypedAttributes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlp) *bool {
		if v == nil {
			return nil
		}
		return v.TypedAttributes
	}).(pulumi.BoolPtrOutput)
}

type ClientAddonsSamlpLogout struct {
	Callback   *string `pulumi:"callback"`
	SloEnabled *bool   `pulumi:"sloEnabled"`
}

// ClientAddonsSamlpLogoutInput is an input type that accepts ClientAddonsSamlpLogoutArgs and ClientAddonsSamlpLogoutOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpLogoutInput` via:
//
//	ClientAddonsSamlpLogoutArgs{...}
type ClientAddonsSamlpLogoutInput interface {
	pulumi.Input

	ToClientAddonsSamlpLogoutOutput() ClientAddonsSamlpLogoutOutput
	ToClientAddonsSamlpLogoutOutputWithContext(context.Context) ClientAddonsSamlpLogoutOutput
}

type ClientAddonsSamlpLogoutArgs struct {
	Callback   pulumi.StringPtrInput `pulumi:"callback"`
	SloEnabled pulumi.BoolPtrInput   `pulumi:"sloEnabled"`
}

func (ClientAddonsSamlpLogoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlpLogout)(nil)).Elem()
}

func (i ClientAddonsSamlpLogoutArgs) ToClientAddonsSamlpLogoutOutput() ClientAddonsSamlpLogoutOutput {
	return i.ToClientAddonsSamlpLogoutOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpLogoutArgs) ToClientAddonsSamlpLogoutOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpLogoutOutput)
}

func (i ClientAddonsSamlpLogoutArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSamlpLogout] {
	return pulumix.Output[ClientAddonsSamlpLogout]{
		OutputState: i.ToClientAddonsSamlpLogoutOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSamlpLogoutArgs) ToClientAddonsSamlpLogoutPtrOutput() ClientAddonsSamlpLogoutPtrOutput {
	return i.ToClientAddonsSamlpLogoutPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSamlpLogoutArgs) ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpLogoutOutput).ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx)
}

// ClientAddonsSamlpLogoutPtrInput is an input type that accepts ClientAddonsSamlpLogoutArgs, ClientAddonsSamlpLogoutPtr and ClientAddonsSamlpLogoutPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSamlpLogoutPtrInput` via:
//
//	        ClientAddonsSamlpLogoutArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSamlpLogoutPtrInput interface {
	pulumi.Input

	ToClientAddonsSamlpLogoutPtrOutput() ClientAddonsSamlpLogoutPtrOutput
	ToClientAddonsSamlpLogoutPtrOutputWithContext(context.Context) ClientAddonsSamlpLogoutPtrOutput
}

type clientAddonsSamlpLogoutPtrType ClientAddonsSamlpLogoutArgs

func ClientAddonsSamlpLogoutPtr(v *ClientAddonsSamlpLogoutArgs) ClientAddonsSamlpLogoutPtrInput {
	return (*clientAddonsSamlpLogoutPtrType)(v)
}

func (*clientAddonsSamlpLogoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlpLogout)(nil)).Elem()
}

func (i *clientAddonsSamlpLogoutPtrType) ToClientAddonsSamlpLogoutPtrOutput() ClientAddonsSamlpLogoutPtrOutput {
	return i.ToClientAddonsSamlpLogoutPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSamlpLogoutPtrType) ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSamlpLogoutPtrOutput)
}

func (i *clientAddonsSamlpLogoutPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSamlpLogout] {
	return pulumix.Output[*ClientAddonsSamlpLogout]{
		OutputState: i.ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSamlpLogoutOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpLogoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSamlpLogout)(nil)).Elem()
}

func (o ClientAddonsSamlpLogoutOutput) ToClientAddonsSamlpLogoutOutput() ClientAddonsSamlpLogoutOutput {
	return o
}

func (o ClientAddonsSamlpLogoutOutput) ToClientAddonsSamlpLogoutOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutOutput {
	return o
}

func (o ClientAddonsSamlpLogoutOutput) ToClientAddonsSamlpLogoutPtrOutput() ClientAddonsSamlpLogoutPtrOutput {
	return o.ToClientAddonsSamlpLogoutPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSamlpLogoutOutput) ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSamlpLogout) *ClientAddonsSamlpLogout {
		return &v
	}).(ClientAddonsSamlpLogoutPtrOutput)
}

func (o ClientAddonsSamlpLogoutOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSamlpLogout] {
	return pulumix.Output[ClientAddonsSamlpLogout]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSamlpLogoutOutput) Callback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlpLogout) *string { return v.Callback }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpLogoutOutput) SloEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientAddonsSamlpLogout) *bool { return v.SloEnabled }).(pulumi.BoolPtrOutput)
}

type ClientAddonsSamlpLogoutPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSamlpLogoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSamlpLogout)(nil)).Elem()
}

func (o ClientAddonsSamlpLogoutPtrOutput) ToClientAddonsSamlpLogoutPtrOutput() ClientAddonsSamlpLogoutPtrOutput {
	return o
}

func (o ClientAddonsSamlpLogoutPtrOutput) ToClientAddonsSamlpLogoutPtrOutputWithContext(ctx context.Context) ClientAddonsSamlpLogoutPtrOutput {
	return o
}

func (o ClientAddonsSamlpLogoutPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSamlpLogout] {
	return pulumix.Output[*ClientAddonsSamlpLogout]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSamlpLogoutPtrOutput) Elem() ClientAddonsSamlpLogoutOutput {
	return o.ApplyT(func(v *ClientAddonsSamlpLogout) ClientAddonsSamlpLogout {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSamlpLogout
		return ret
	}).(ClientAddonsSamlpLogoutOutput)
}

func (o ClientAddonsSamlpLogoutPtrOutput) Callback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlpLogout) *string {
		if v == nil {
			return nil
		}
		return v.Callback
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSamlpLogoutPtrOutput) SloEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSamlpLogout) *bool {
		if v == nil {
			return nil
		}
		return v.SloEnabled
	}).(pulumi.BoolPtrOutput)
}

type ClientAddonsSapApi struct {
	// The ID of the client.
	ClientId             *string `pulumi:"clientId"`
	NameIdentifierFormat *string `pulumi:"nameIdentifierFormat"`
	Scope                *string `pulumi:"scope"`
	ServicePassword      *string `pulumi:"servicePassword"`
	TokenEndpointUrl     *string `pulumi:"tokenEndpointUrl"`
	UsernameAttribute    *string `pulumi:"usernameAttribute"`
}

// ClientAddonsSapApiInput is an input type that accepts ClientAddonsSapApiArgs and ClientAddonsSapApiOutput values.
// You can construct a concrete instance of `ClientAddonsSapApiInput` via:
//
//	ClientAddonsSapApiArgs{...}
type ClientAddonsSapApiInput interface {
	pulumi.Input

	ToClientAddonsSapApiOutput() ClientAddonsSapApiOutput
	ToClientAddonsSapApiOutputWithContext(context.Context) ClientAddonsSapApiOutput
}

type ClientAddonsSapApiArgs struct {
	// The ID of the client.
	ClientId             pulumi.StringPtrInput `pulumi:"clientId"`
	NameIdentifierFormat pulumi.StringPtrInput `pulumi:"nameIdentifierFormat"`
	Scope                pulumi.StringPtrInput `pulumi:"scope"`
	ServicePassword      pulumi.StringPtrInput `pulumi:"servicePassword"`
	TokenEndpointUrl     pulumi.StringPtrInput `pulumi:"tokenEndpointUrl"`
	UsernameAttribute    pulumi.StringPtrInput `pulumi:"usernameAttribute"`
}

func (ClientAddonsSapApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSapApi)(nil)).Elem()
}

func (i ClientAddonsSapApiArgs) ToClientAddonsSapApiOutput() ClientAddonsSapApiOutput {
	return i.ToClientAddonsSapApiOutputWithContext(context.Background())
}

func (i ClientAddonsSapApiArgs) ToClientAddonsSapApiOutputWithContext(ctx context.Context) ClientAddonsSapApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSapApiOutput)
}

func (i ClientAddonsSapApiArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSapApi] {
	return pulumix.Output[ClientAddonsSapApi]{
		OutputState: i.ToClientAddonsSapApiOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSapApiArgs) ToClientAddonsSapApiPtrOutput() ClientAddonsSapApiPtrOutput {
	return i.ToClientAddonsSapApiPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSapApiArgs) ToClientAddonsSapApiPtrOutputWithContext(ctx context.Context) ClientAddonsSapApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSapApiOutput).ToClientAddonsSapApiPtrOutputWithContext(ctx)
}

// ClientAddonsSapApiPtrInput is an input type that accepts ClientAddonsSapApiArgs, ClientAddonsSapApiPtr and ClientAddonsSapApiPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSapApiPtrInput` via:
//
//	        ClientAddonsSapApiArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSapApiPtrInput interface {
	pulumi.Input

	ToClientAddonsSapApiPtrOutput() ClientAddonsSapApiPtrOutput
	ToClientAddonsSapApiPtrOutputWithContext(context.Context) ClientAddonsSapApiPtrOutput
}

type clientAddonsSapApiPtrType ClientAddonsSapApiArgs

func ClientAddonsSapApiPtr(v *ClientAddonsSapApiArgs) ClientAddonsSapApiPtrInput {
	return (*clientAddonsSapApiPtrType)(v)
}

func (*clientAddonsSapApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSapApi)(nil)).Elem()
}

func (i *clientAddonsSapApiPtrType) ToClientAddonsSapApiPtrOutput() ClientAddonsSapApiPtrOutput {
	return i.ToClientAddonsSapApiPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSapApiPtrType) ToClientAddonsSapApiPtrOutputWithContext(ctx context.Context) ClientAddonsSapApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSapApiPtrOutput)
}

func (i *clientAddonsSapApiPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSapApi] {
	return pulumix.Output[*ClientAddonsSapApi]{
		OutputState: i.ToClientAddonsSapApiPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSapApiOutput struct{ *pulumi.OutputState }

func (ClientAddonsSapApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSapApi)(nil)).Elem()
}

func (o ClientAddonsSapApiOutput) ToClientAddonsSapApiOutput() ClientAddonsSapApiOutput {
	return o
}

func (o ClientAddonsSapApiOutput) ToClientAddonsSapApiOutputWithContext(ctx context.Context) ClientAddonsSapApiOutput {
	return o
}

func (o ClientAddonsSapApiOutput) ToClientAddonsSapApiPtrOutput() ClientAddonsSapApiPtrOutput {
	return o.ToClientAddonsSapApiPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSapApiOutput) ToClientAddonsSapApiPtrOutputWithContext(ctx context.Context) ClientAddonsSapApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSapApi) *ClientAddonsSapApi {
		return &v
	}).(ClientAddonsSapApiPtrOutput)
}

func (o ClientAddonsSapApiOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSapApi] {
	return pulumix.Output[ClientAddonsSapApi]{
		OutputState: o.OutputState,
	}
}

// The ID of the client.
func (o ClientAddonsSapApiOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSapApi) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSapApiOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSapApi) *string { return v.NameIdentifierFormat }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSapApiOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSapApi) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSapApiOutput) ServicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSapApi) *string { return v.ServicePassword }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSapApiOutput) TokenEndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSapApi) *string { return v.TokenEndpointUrl }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSapApiOutput) UsernameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSapApi) *string { return v.UsernameAttribute }).(pulumi.StringPtrOutput)
}

type ClientAddonsSapApiPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSapApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSapApi)(nil)).Elem()
}

func (o ClientAddonsSapApiPtrOutput) ToClientAddonsSapApiPtrOutput() ClientAddonsSapApiPtrOutput {
	return o
}

func (o ClientAddonsSapApiPtrOutput) ToClientAddonsSapApiPtrOutputWithContext(ctx context.Context) ClientAddonsSapApiPtrOutput {
	return o
}

func (o ClientAddonsSapApiPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSapApi] {
	return pulumix.Output[*ClientAddonsSapApi]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSapApiPtrOutput) Elem() ClientAddonsSapApiOutput {
	return o.ApplyT(func(v *ClientAddonsSapApi) ClientAddonsSapApi {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSapApi
		return ret
	}).(ClientAddonsSapApiOutput)
}

// The ID of the client.
func (o ClientAddonsSapApiPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSapApi) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSapApiPtrOutput) NameIdentifierFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSapApi) *string {
		if v == nil {
			return nil
		}
		return v.NameIdentifierFormat
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSapApiPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSapApi) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSapApiPtrOutput) ServicePassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSapApi) *string {
		if v == nil {
			return nil
		}
		return v.ServicePassword
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSapApiPtrOutput) TokenEndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSapApi) *string {
		if v == nil {
			return nil
		}
		return v.TokenEndpointUrl
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSapApiPtrOutput) UsernameAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSapApi) *string {
		if v == nil {
			return nil
		}
		return v.UsernameAttribute
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsSentry struct {
	BaseUrl *string `pulumi:"baseUrl"`
	OrgSlug *string `pulumi:"orgSlug"`
}

// ClientAddonsSentryInput is an input type that accepts ClientAddonsSentryArgs and ClientAddonsSentryOutput values.
// You can construct a concrete instance of `ClientAddonsSentryInput` via:
//
//	ClientAddonsSentryArgs{...}
type ClientAddonsSentryInput interface {
	pulumi.Input

	ToClientAddonsSentryOutput() ClientAddonsSentryOutput
	ToClientAddonsSentryOutputWithContext(context.Context) ClientAddonsSentryOutput
}

type ClientAddonsSentryArgs struct {
	BaseUrl pulumi.StringPtrInput `pulumi:"baseUrl"`
	OrgSlug pulumi.StringPtrInput `pulumi:"orgSlug"`
}

func (ClientAddonsSentryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSentry)(nil)).Elem()
}

func (i ClientAddonsSentryArgs) ToClientAddonsSentryOutput() ClientAddonsSentryOutput {
	return i.ToClientAddonsSentryOutputWithContext(context.Background())
}

func (i ClientAddonsSentryArgs) ToClientAddonsSentryOutputWithContext(ctx context.Context) ClientAddonsSentryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSentryOutput)
}

func (i ClientAddonsSentryArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSentry] {
	return pulumix.Output[ClientAddonsSentry]{
		OutputState: i.ToClientAddonsSentryOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSentryArgs) ToClientAddonsSentryPtrOutput() ClientAddonsSentryPtrOutput {
	return i.ToClientAddonsSentryPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSentryArgs) ToClientAddonsSentryPtrOutputWithContext(ctx context.Context) ClientAddonsSentryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSentryOutput).ToClientAddonsSentryPtrOutputWithContext(ctx)
}

// ClientAddonsSentryPtrInput is an input type that accepts ClientAddonsSentryArgs, ClientAddonsSentryPtr and ClientAddonsSentryPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSentryPtrInput` via:
//
//	        ClientAddonsSentryArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSentryPtrInput interface {
	pulumi.Input

	ToClientAddonsSentryPtrOutput() ClientAddonsSentryPtrOutput
	ToClientAddonsSentryPtrOutputWithContext(context.Context) ClientAddonsSentryPtrOutput
}

type clientAddonsSentryPtrType ClientAddonsSentryArgs

func ClientAddonsSentryPtr(v *ClientAddonsSentryArgs) ClientAddonsSentryPtrInput {
	return (*clientAddonsSentryPtrType)(v)
}

func (*clientAddonsSentryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSentry)(nil)).Elem()
}

func (i *clientAddonsSentryPtrType) ToClientAddonsSentryPtrOutput() ClientAddonsSentryPtrOutput {
	return i.ToClientAddonsSentryPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSentryPtrType) ToClientAddonsSentryPtrOutputWithContext(ctx context.Context) ClientAddonsSentryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSentryPtrOutput)
}

func (i *clientAddonsSentryPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSentry] {
	return pulumix.Output[*ClientAddonsSentry]{
		OutputState: i.ToClientAddonsSentryPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSentryOutput struct{ *pulumi.OutputState }

func (ClientAddonsSentryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSentry)(nil)).Elem()
}

func (o ClientAddonsSentryOutput) ToClientAddonsSentryOutput() ClientAddonsSentryOutput {
	return o
}

func (o ClientAddonsSentryOutput) ToClientAddonsSentryOutputWithContext(ctx context.Context) ClientAddonsSentryOutput {
	return o
}

func (o ClientAddonsSentryOutput) ToClientAddonsSentryPtrOutput() ClientAddonsSentryPtrOutput {
	return o.ToClientAddonsSentryPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSentryOutput) ToClientAddonsSentryPtrOutputWithContext(ctx context.Context) ClientAddonsSentryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSentry) *ClientAddonsSentry {
		return &v
	}).(ClientAddonsSentryPtrOutput)
}

func (o ClientAddonsSentryOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSentry] {
	return pulumix.Output[ClientAddonsSentry]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSentryOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSentry) *string { return v.BaseUrl }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSentryOutput) OrgSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSentry) *string { return v.OrgSlug }).(pulumi.StringPtrOutput)
}

type ClientAddonsSentryPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSentryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSentry)(nil)).Elem()
}

func (o ClientAddonsSentryPtrOutput) ToClientAddonsSentryPtrOutput() ClientAddonsSentryPtrOutput {
	return o
}

func (o ClientAddonsSentryPtrOutput) ToClientAddonsSentryPtrOutputWithContext(ctx context.Context) ClientAddonsSentryPtrOutput {
	return o
}

func (o ClientAddonsSentryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSentry] {
	return pulumix.Output[*ClientAddonsSentry]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSentryPtrOutput) Elem() ClientAddonsSentryOutput {
	return o.ApplyT(func(v *ClientAddonsSentry) ClientAddonsSentry {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSentry
		return ret
	}).(ClientAddonsSentryOutput)
}

func (o ClientAddonsSentryPtrOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSentry) *string {
		if v == nil {
			return nil
		}
		return v.BaseUrl
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSentryPtrOutput) OrgSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSentry) *string {
		if v == nil {
			return nil
		}
		return v.OrgSlug
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsSharepoint struct {
	ExternalUrls []string `pulumi:"externalUrls"`
	Url          *string  `pulumi:"url"`
}

// ClientAddonsSharepointInput is an input type that accepts ClientAddonsSharepointArgs and ClientAddonsSharepointOutput values.
// You can construct a concrete instance of `ClientAddonsSharepointInput` via:
//
//	ClientAddonsSharepointArgs{...}
type ClientAddonsSharepointInput interface {
	pulumi.Input

	ToClientAddonsSharepointOutput() ClientAddonsSharepointOutput
	ToClientAddonsSharepointOutputWithContext(context.Context) ClientAddonsSharepointOutput
}

type ClientAddonsSharepointArgs struct {
	ExternalUrls pulumi.StringArrayInput `pulumi:"externalUrls"`
	Url          pulumi.StringPtrInput   `pulumi:"url"`
}

func (ClientAddonsSharepointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSharepoint)(nil)).Elem()
}

func (i ClientAddonsSharepointArgs) ToClientAddonsSharepointOutput() ClientAddonsSharepointOutput {
	return i.ToClientAddonsSharepointOutputWithContext(context.Background())
}

func (i ClientAddonsSharepointArgs) ToClientAddonsSharepointOutputWithContext(ctx context.Context) ClientAddonsSharepointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSharepointOutput)
}

func (i ClientAddonsSharepointArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSharepoint] {
	return pulumix.Output[ClientAddonsSharepoint]{
		OutputState: i.ToClientAddonsSharepointOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSharepointArgs) ToClientAddonsSharepointPtrOutput() ClientAddonsSharepointPtrOutput {
	return i.ToClientAddonsSharepointPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSharepointArgs) ToClientAddonsSharepointPtrOutputWithContext(ctx context.Context) ClientAddonsSharepointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSharepointOutput).ToClientAddonsSharepointPtrOutputWithContext(ctx)
}

// ClientAddonsSharepointPtrInput is an input type that accepts ClientAddonsSharepointArgs, ClientAddonsSharepointPtr and ClientAddonsSharepointPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSharepointPtrInput` via:
//
//	        ClientAddonsSharepointArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSharepointPtrInput interface {
	pulumi.Input

	ToClientAddonsSharepointPtrOutput() ClientAddonsSharepointPtrOutput
	ToClientAddonsSharepointPtrOutputWithContext(context.Context) ClientAddonsSharepointPtrOutput
}

type clientAddonsSharepointPtrType ClientAddonsSharepointArgs

func ClientAddonsSharepointPtr(v *ClientAddonsSharepointArgs) ClientAddonsSharepointPtrInput {
	return (*clientAddonsSharepointPtrType)(v)
}

func (*clientAddonsSharepointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSharepoint)(nil)).Elem()
}

func (i *clientAddonsSharepointPtrType) ToClientAddonsSharepointPtrOutput() ClientAddonsSharepointPtrOutput {
	return i.ToClientAddonsSharepointPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSharepointPtrType) ToClientAddonsSharepointPtrOutputWithContext(ctx context.Context) ClientAddonsSharepointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSharepointPtrOutput)
}

func (i *clientAddonsSharepointPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSharepoint] {
	return pulumix.Output[*ClientAddonsSharepoint]{
		OutputState: i.ToClientAddonsSharepointPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSharepointOutput struct{ *pulumi.OutputState }

func (ClientAddonsSharepointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSharepoint)(nil)).Elem()
}

func (o ClientAddonsSharepointOutput) ToClientAddonsSharepointOutput() ClientAddonsSharepointOutput {
	return o
}

func (o ClientAddonsSharepointOutput) ToClientAddonsSharepointOutputWithContext(ctx context.Context) ClientAddonsSharepointOutput {
	return o
}

func (o ClientAddonsSharepointOutput) ToClientAddonsSharepointPtrOutput() ClientAddonsSharepointPtrOutput {
	return o.ToClientAddonsSharepointPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSharepointOutput) ToClientAddonsSharepointPtrOutputWithContext(ctx context.Context) ClientAddonsSharepointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSharepoint) *ClientAddonsSharepoint {
		return &v
	}).(ClientAddonsSharepointPtrOutput)
}

func (o ClientAddonsSharepointOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSharepoint] {
	return pulumix.Output[ClientAddonsSharepoint]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSharepointOutput) ExternalUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientAddonsSharepoint) []string { return v.ExternalUrls }).(pulumi.StringArrayOutput)
}

func (o ClientAddonsSharepointOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSharepoint) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ClientAddonsSharepointPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSharepointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSharepoint)(nil)).Elem()
}

func (o ClientAddonsSharepointPtrOutput) ToClientAddonsSharepointPtrOutput() ClientAddonsSharepointPtrOutput {
	return o
}

func (o ClientAddonsSharepointPtrOutput) ToClientAddonsSharepointPtrOutputWithContext(ctx context.Context) ClientAddonsSharepointPtrOutput {
	return o
}

func (o ClientAddonsSharepointPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSharepoint] {
	return pulumix.Output[*ClientAddonsSharepoint]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSharepointPtrOutput) Elem() ClientAddonsSharepointOutput {
	return o.ApplyT(func(v *ClientAddonsSharepoint) ClientAddonsSharepoint {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSharepoint
		return ret
	}).(ClientAddonsSharepointOutput)
}

func (o ClientAddonsSharepointPtrOutput) ExternalUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientAddonsSharepoint) []string {
		if v == nil {
			return nil
		}
		return v.ExternalUrls
	}).(pulumi.StringArrayOutput)
}

func (o ClientAddonsSharepointPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSharepoint) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsSlack struct {
	Team *string `pulumi:"team"`
}

// ClientAddonsSlackInput is an input type that accepts ClientAddonsSlackArgs and ClientAddonsSlackOutput values.
// You can construct a concrete instance of `ClientAddonsSlackInput` via:
//
//	ClientAddonsSlackArgs{...}
type ClientAddonsSlackInput interface {
	pulumi.Input

	ToClientAddonsSlackOutput() ClientAddonsSlackOutput
	ToClientAddonsSlackOutputWithContext(context.Context) ClientAddonsSlackOutput
}

type ClientAddonsSlackArgs struct {
	Team pulumi.StringPtrInput `pulumi:"team"`
}

func (ClientAddonsSlackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSlack)(nil)).Elem()
}

func (i ClientAddonsSlackArgs) ToClientAddonsSlackOutput() ClientAddonsSlackOutput {
	return i.ToClientAddonsSlackOutputWithContext(context.Background())
}

func (i ClientAddonsSlackArgs) ToClientAddonsSlackOutputWithContext(ctx context.Context) ClientAddonsSlackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSlackOutput)
}

func (i ClientAddonsSlackArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSlack] {
	return pulumix.Output[ClientAddonsSlack]{
		OutputState: i.ToClientAddonsSlackOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSlackArgs) ToClientAddonsSlackPtrOutput() ClientAddonsSlackPtrOutput {
	return i.ToClientAddonsSlackPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSlackArgs) ToClientAddonsSlackPtrOutputWithContext(ctx context.Context) ClientAddonsSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSlackOutput).ToClientAddonsSlackPtrOutputWithContext(ctx)
}

// ClientAddonsSlackPtrInput is an input type that accepts ClientAddonsSlackArgs, ClientAddonsSlackPtr and ClientAddonsSlackPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSlackPtrInput` via:
//
//	        ClientAddonsSlackArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSlackPtrInput interface {
	pulumi.Input

	ToClientAddonsSlackPtrOutput() ClientAddonsSlackPtrOutput
	ToClientAddonsSlackPtrOutputWithContext(context.Context) ClientAddonsSlackPtrOutput
}

type clientAddonsSlackPtrType ClientAddonsSlackArgs

func ClientAddonsSlackPtr(v *ClientAddonsSlackArgs) ClientAddonsSlackPtrInput {
	return (*clientAddonsSlackPtrType)(v)
}

func (*clientAddonsSlackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSlack)(nil)).Elem()
}

func (i *clientAddonsSlackPtrType) ToClientAddonsSlackPtrOutput() ClientAddonsSlackPtrOutput {
	return i.ToClientAddonsSlackPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSlackPtrType) ToClientAddonsSlackPtrOutputWithContext(ctx context.Context) ClientAddonsSlackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSlackPtrOutput)
}

func (i *clientAddonsSlackPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSlack] {
	return pulumix.Output[*ClientAddonsSlack]{
		OutputState: i.ToClientAddonsSlackPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSlackOutput struct{ *pulumi.OutputState }

func (ClientAddonsSlackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSlack)(nil)).Elem()
}

func (o ClientAddonsSlackOutput) ToClientAddonsSlackOutput() ClientAddonsSlackOutput {
	return o
}

func (o ClientAddonsSlackOutput) ToClientAddonsSlackOutputWithContext(ctx context.Context) ClientAddonsSlackOutput {
	return o
}

func (o ClientAddonsSlackOutput) ToClientAddonsSlackPtrOutput() ClientAddonsSlackPtrOutput {
	return o.ToClientAddonsSlackPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSlackOutput) ToClientAddonsSlackPtrOutputWithContext(ctx context.Context) ClientAddonsSlackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSlack) *ClientAddonsSlack {
		return &v
	}).(ClientAddonsSlackPtrOutput)
}

func (o ClientAddonsSlackOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSlack] {
	return pulumix.Output[ClientAddonsSlack]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSlackOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSlack) *string { return v.Team }).(pulumi.StringPtrOutput)
}

type ClientAddonsSlackPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSlackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSlack)(nil)).Elem()
}

func (o ClientAddonsSlackPtrOutput) ToClientAddonsSlackPtrOutput() ClientAddonsSlackPtrOutput {
	return o
}

func (o ClientAddonsSlackPtrOutput) ToClientAddonsSlackPtrOutputWithContext(ctx context.Context) ClientAddonsSlackPtrOutput {
	return o
}

func (o ClientAddonsSlackPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSlack] {
	return pulumix.Output[*ClientAddonsSlack]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSlackPtrOutput) Elem() ClientAddonsSlackOutput {
	return o.ApplyT(func(v *ClientAddonsSlack) ClientAddonsSlack {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSlack
		return ret
	}).(ClientAddonsSlackOutput)
}

func (o ClientAddonsSlackPtrOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSlack) *string {
		if v == nil {
			return nil
		}
		return v.Team
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsSpringcm struct {
	AcsUrl *string `pulumi:"acsUrl"`
}

// ClientAddonsSpringcmInput is an input type that accepts ClientAddonsSpringcmArgs and ClientAddonsSpringcmOutput values.
// You can construct a concrete instance of `ClientAddonsSpringcmInput` via:
//
//	ClientAddonsSpringcmArgs{...}
type ClientAddonsSpringcmInput interface {
	pulumi.Input

	ToClientAddonsSpringcmOutput() ClientAddonsSpringcmOutput
	ToClientAddonsSpringcmOutputWithContext(context.Context) ClientAddonsSpringcmOutput
}

type ClientAddonsSpringcmArgs struct {
	AcsUrl pulumi.StringPtrInput `pulumi:"acsUrl"`
}

func (ClientAddonsSpringcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSpringcm)(nil)).Elem()
}

func (i ClientAddonsSpringcmArgs) ToClientAddonsSpringcmOutput() ClientAddonsSpringcmOutput {
	return i.ToClientAddonsSpringcmOutputWithContext(context.Background())
}

func (i ClientAddonsSpringcmArgs) ToClientAddonsSpringcmOutputWithContext(ctx context.Context) ClientAddonsSpringcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSpringcmOutput)
}

func (i ClientAddonsSpringcmArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSpringcm] {
	return pulumix.Output[ClientAddonsSpringcm]{
		OutputState: i.ToClientAddonsSpringcmOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSpringcmArgs) ToClientAddonsSpringcmPtrOutput() ClientAddonsSpringcmPtrOutput {
	return i.ToClientAddonsSpringcmPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSpringcmArgs) ToClientAddonsSpringcmPtrOutputWithContext(ctx context.Context) ClientAddonsSpringcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSpringcmOutput).ToClientAddonsSpringcmPtrOutputWithContext(ctx)
}

// ClientAddonsSpringcmPtrInput is an input type that accepts ClientAddonsSpringcmArgs, ClientAddonsSpringcmPtr and ClientAddonsSpringcmPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSpringcmPtrInput` via:
//
//	        ClientAddonsSpringcmArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSpringcmPtrInput interface {
	pulumi.Input

	ToClientAddonsSpringcmPtrOutput() ClientAddonsSpringcmPtrOutput
	ToClientAddonsSpringcmPtrOutputWithContext(context.Context) ClientAddonsSpringcmPtrOutput
}

type clientAddonsSpringcmPtrType ClientAddonsSpringcmArgs

func ClientAddonsSpringcmPtr(v *ClientAddonsSpringcmArgs) ClientAddonsSpringcmPtrInput {
	return (*clientAddonsSpringcmPtrType)(v)
}

func (*clientAddonsSpringcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSpringcm)(nil)).Elem()
}

func (i *clientAddonsSpringcmPtrType) ToClientAddonsSpringcmPtrOutput() ClientAddonsSpringcmPtrOutput {
	return i.ToClientAddonsSpringcmPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSpringcmPtrType) ToClientAddonsSpringcmPtrOutputWithContext(ctx context.Context) ClientAddonsSpringcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSpringcmPtrOutput)
}

func (i *clientAddonsSpringcmPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSpringcm] {
	return pulumix.Output[*ClientAddonsSpringcm]{
		OutputState: i.ToClientAddonsSpringcmPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSpringcmOutput struct{ *pulumi.OutputState }

func (ClientAddonsSpringcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSpringcm)(nil)).Elem()
}

func (o ClientAddonsSpringcmOutput) ToClientAddonsSpringcmOutput() ClientAddonsSpringcmOutput {
	return o
}

func (o ClientAddonsSpringcmOutput) ToClientAddonsSpringcmOutputWithContext(ctx context.Context) ClientAddonsSpringcmOutput {
	return o
}

func (o ClientAddonsSpringcmOutput) ToClientAddonsSpringcmPtrOutput() ClientAddonsSpringcmPtrOutput {
	return o.ToClientAddonsSpringcmPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSpringcmOutput) ToClientAddonsSpringcmPtrOutputWithContext(ctx context.Context) ClientAddonsSpringcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSpringcm) *ClientAddonsSpringcm {
		return &v
	}).(ClientAddonsSpringcmPtrOutput)
}

func (o ClientAddonsSpringcmOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSpringcm] {
	return pulumix.Output[ClientAddonsSpringcm]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSpringcmOutput) AcsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSpringcm) *string { return v.AcsUrl }).(pulumi.StringPtrOutput)
}

type ClientAddonsSpringcmPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSpringcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSpringcm)(nil)).Elem()
}

func (o ClientAddonsSpringcmPtrOutput) ToClientAddonsSpringcmPtrOutput() ClientAddonsSpringcmPtrOutput {
	return o
}

func (o ClientAddonsSpringcmPtrOutput) ToClientAddonsSpringcmPtrOutputWithContext(ctx context.Context) ClientAddonsSpringcmPtrOutput {
	return o
}

func (o ClientAddonsSpringcmPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSpringcm] {
	return pulumix.Output[*ClientAddonsSpringcm]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSpringcmPtrOutput) Elem() ClientAddonsSpringcmOutput {
	return o.ApplyT(func(v *ClientAddonsSpringcm) ClientAddonsSpringcm {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSpringcm
		return ret
	}).(ClientAddonsSpringcmOutput)
}

func (o ClientAddonsSpringcmPtrOutput) AcsUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSpringcm) *string {
		if v == nil {
			return nil
		}
		return v.AcsUrl
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsSsoIntegration struct {
	// Name of the client.
	Name    *string `pulumi:"name"`
	Version *string `pulumi:"version"`
}

// ClientAddonsSsoIntegrationInput is an input type that accepts ClientAddonsSsoIntegrationArgs and ClientAddonsSsoIntegrationOutput values.
// You can construct a concrete instance of `ClientAddonsSsoIntegrationInput` via:
//
//	ClientAddonsSsoIntegrationArgs{...}
type ClientAddonsSsoIntegrationInput interface {
	pulumi.Input

	ToClientAddonsSsoIntegrationOutput() ClientAddonsSsoIntegrationOutput
	ToClientAddonsSsoIntegrationOutputWithContext(context.Context) ClientAddonsSsoIntegrationOutput
}

type ClientAddonsSsoIntegrationArgs struct {
	// Name of the client.
	Name    pulumi.StringPtrInput `pulumi:"name"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (ClientAddonsSsoIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSsoIntegration)(nil)).Elem()
}

func (i ClientAddonsSsoIntegrationArgs) ToClientAddonsSsoIntegrationOutput() ClientAddonsSsoIntegrationOutput {
	return i.ToClientAddonsSsoIntegrationOutputWithContext(context.Background())
}

func (i ClientAddonsSsoIntegrationArgs) ToClientAddonsSsoIntegrationOutputWithContext(ctx context.Context) ClientAddonsSsoIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSsoIntegrationOutput)
}

func (i ClientAddonsSsoIntegrationArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSsoIntegration] {
	return pulumix.Output[ClientAddonsSsoIntegration]{
		OutputState: i.ToClientAddonsSsoIntegrationOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsSsoIntegrationArgs) ToClientAddonsSsoIntegrationPtrOutput() ClientAddonsSsoIntegrationPtrOutput {
	return i.ToClientAddonsSsoIntegrationPtrOutputWithContext(context.Background())
}

func (i ClientAddonsSsoIntegrationArgs) ToClientAddonsSsoIntegrationPtrOutputWithContext(ctx context.Context) ClientAddonsSsoIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSsoIntegrationOutput).ToClientAddonsSsoIntegrationPtrOutputWithContext(ctx)
}

// ClientAddonsSsoIntegrationPtrInput is an input type that accepts ClientAddonsSsoIntegrationArgs, ClientAddonsSsoIntegrationPtr and ClientAddonsSsoIntegrationPtrOutput values.
// You can construct a concrete instance of `ClientAddonsSsoIntegrationPtrInput` via:
//
//	        ClientAddonsSsoIntegrationArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsSsoIntegrationPtrInput interface {
	pulumi.Input

	ToClientAddonsSsoIntegrationPtrOutput() ClientAddonsSsoIntegrationPtrOutput
	ToClientAddonsSsoIntegrationPtrOutputWithContext(context.Context) ClientAddonsSsoIntegrationPtrOutput
}

type clientAddonsSsoIntegrationPtrType ClientAddonsSsoIntegrationArgs

func ClientAddonsSsoIntegrationPtr(v *ClientAddonsSsoIntegrationArgs) ClientAddonsSsoIntegrationPtrInput {
	return (*clientAddonsSsoIntegrationPtrType)(v)
}

func (*clientAddonsSsoIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSsoIntegration)(nil)).Elem()
}

func (i *clientAddonsSsoIntegrationPtrType) ToClientAddonsSsoIntegrationPtrOutput() ClientAddonsSsoIntegrationPtrOutput {
	return i.ToClientAddonsSsoIntegrationPtrOutputWithContext(context.Background())
}

func (i *clientAddonsSsoIntegrationPtrType) ToClientAddonsSsoIntegrationPtrOutputWithContext(ctx context.Context) ClientAddonsSsoIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsSsoIntegrationPtrOutput)
}

func (i *clientAddonsSsoIntegrationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSsoIntegration] {
	return pulumix.Output[*ClientAddonsSsoIntegration]{
		OutputState: i.ToClientAddonsSsoIntegrationPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsSsoIntegrationOutput struct{ *pulumi.OutputState }

func (ClientAddonsSsoIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsSsoIntegration)(nil)).Elem()
}

func (o ClientAddonsSsoIntegrationOutput) ToClientAddonsSsoIntegrationOutput() ClientAddonsSsoIntegrationOutput {
	return o
}

func (o ClientAddonsSsoIntegrationOutput) ToClientAddonsSsoIntegrationOutputWithContext(ctx context.Context) ClientAddonsSsoIntegrationOutput {
	return o
}

func (o ClientAddonsSsoIntegrationOutput) ToClientAddonsSsoIntegrationPtrOutput() ClientAddonsSsoIntegrationPtrOutput {
	return o.ToClientAddonsSsoIntegrationPtrOutputWithContext(context.Background())
}

func (o ClientAddonsSsoIntegrationOutput) ToClientAddonsSsoIntegrationPtrOutputWithContext(ctx context.Context) ClientAddonsSsoIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsSsoIntegration) *ClientAddonsSsoIntegration {
		return &v
	}).(ClientAddonsSsoIntegrationPtrOutput)
}

func (o ClientAddonsSsoIntegrationOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsSsoIntegration] {
	return pulumix.Output[ClientAddonsSsoIntegration]{
		OutputState: o.OutputState,
	}
}

// Name of the client.
func (o ClientAddonsSsoIntegrationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSsoIntegration) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSsoIntegrationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsSsoIntegration) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type ClientAddonsSsoIntegrationPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsSsoIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsSsoIntegration)(nil)).Elem()
}

func (o ClientAddonsSsoIntegrationPtrOutput) ToClientAddonsSsoIntegrationPtrOutput() ClientAddonsSsoIntegrationPtrOutput {
	return o
}

func (o ClientAddonsSsoIntegrationPtrOutput) ToClientAddonsSsoIntegrationPtrOutputWithContext(ctx context.Context) ClientAddonsSsoIntegrationPtrOutput {
	return o
}

func (o ClientAddonsSsoIntegrationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsSsoIntegration] {
	return pulumix.Output[*ClientAddonsSsoIntegration]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsSsoIntegrationPtrOutput) Elem() ClientAddonsSsoIntegrationOutput {
	return o.ApplyT(func(v *ClientAddonsSsoIntegration) ClientAddonsSsoIntegration {
		if v != nil {
			return *v
		}
		var ret ClientAddonsSsoIntegration
		return ret
	}).(ClientAddonsSsoIntegrationOutput)
}

// Name of the client.
func (o ClientAddonsSsoIntegrationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSsoIntegration) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ClientAddonsSsoIntegrationPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsSsoIntegration) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsWams struct {
	MasterKey *string `pulumi:"masterKey"`
}

// ClientAddonsWamsInput is an input type that accepts ClientAddonsWamsArgs and ClientAddonsWamsOutput values.
// You can construct a concrete instance of `ClientAddonsWamsInput` via:
//
//	ClientAddonsWamsArgs{...}
type ClientAddonsWamsInput interface {
	pulumi.Input

	ToClientAddonsWamsOutput() ClientAddonsWamsOutput
	ToClientAddonsWamsOutputWithContext(context.Context) ClientAddonsWamsOutput
}

type ClientAddonsWamsArgs struct {
	MasterKey pulumi.StringPtrInput `pulumi:"masterKey"`
}

func (ClientAddonsWamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsWams)(nil)).Elem()
}

func (i ClientAddonsWamsArgs) ToClientAddonsWamsOutput() ClientAddonsWamsOutput {
	return i.ToClientAddonsWamsOutputWithContext(context.Background())
}

func (i ClientAddonsWamsArgs) ToClientAddonsWamsOutputWithContext(ctx context.Context) ClientAddonsWamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsWamsOutput)
}

func (i ClientAddonsWamsArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsWams] {
	return pulumix.Output[ClientAddonsWams]{
		OutputState: i.ToClientAddonsWamsOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsWamsArgs) ToClientAddonsWamsPtrOutput() ClientAddonsWamsPtrOutput {
	return i.ToClientAddonsWamsPtrOutputWithContext(context.Background())
}

func (i ClientAddonsWamsArgs) ToClientAddonsWamsPtrOutputWithContext(ctx context.Context) ClientAddonsWamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsWamsOutput).ToClientAddonsWamsPtrOutputWithContext(ctx)
}

// ClientAddonsWamsPtrInput is an input type that accepts ClientAddonsWamsArgs, ClientAddonsWamsPtr and ClientAddonsWamsPtrOutput values.
// You can construct a concrete instance of `ClientAddonsWamsPtrInput` via:
//
//	        ClientAddonsWamsArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsWamsPtrInput interface {
	pulumi.Input

	ToClientAddonsWamsPtrOutput() ClientAddonsWamsPtrOutput
	ToClientAddonsWamsPtrOutputWithContext(context.Context) ClientAddonsWamsPtrOutput
}

type clientAddonsWamsPtrType ClientAddonsWamsArgs

func ClientAddonsWamsPtr(v *ClientAddonsWamsArgs) ClientAddonsWamsPtrInput {
	return (*clientAddonsWamsPtrType)(v)
}

func (*clientAddonsWamsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsWams)(nil)).Elem()
}

func (i *clientAddonsWamsPtrType) ToClientAddonsWamsPtrOutput() ClientAddonsWamsPtrOutput {
	return i.ToClientAddonsWamsPtrOutputWithContext(context.Background())
}

func (i *clientAddonsWamsPtrType) ToClientAddonsWamsPtrOutputWithContext(ctx context.Context) ClientAddonsWamsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsWamsPtrOutput)
}

func (i *clientAddonsWamsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsWams] {
	return pulumix.Output[*ClientAddonsWams]{
		OutputState: i.ToClientAddonsWamsPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsWamsOutput struct{ *pulumi.OutputState }

func (ClientAddonsWamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsWams)(nil)).Elem()
}

func (o ClientAddonsWamsOutput) ToClientAddonsWamsOutput() ClientAddonsWamsOutput {
	return o
}

func (o ClientAddonsWamsOutput) ToClientAddonsWamsOutputWithContext(ctx context.Context) ClientAddonsWamsOutput {
	return o
}

func (o ClientAddonsWamsOutput) ToClientAddonsWamsPtrOutput() ClientAddonsWamsPtrOutput {
	return o.ToClientAddonsWamsPtrOutputWithContext(context.Background())
}

func (o ClientAddonsWamsOutput) ToClientAddonsWamsPtrOutputWithContext(ctx context.Context) ClientAddonsWamsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsWams) *ClientAddonsWams {
		return &v
	}).(ClientAddonsWamsPtrOutput)
}

func (o ClientAddonsWamsOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsWams] {
	return pulumix.Output[ClientAddonsWams]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsWamsOutput) MasterKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsWams) *string { return v.MasterKey }).(pulumi.StringPtrOutput)
}

type ClientAddonsWamsPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsWamsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsWams)(nil)).Elem()
}

func (o ClientAddonsWamsPtrOutput) ToClientAddonsWamsPtrOutput() ClientAddonsWamsPtrOutput {
	return o
}

func (o ClientAddonsWamsPtrOutput) ToClientAddonsWamsPtrOutputWithContext(ctx context.Context) ClientAddonsWamsPtrOutput {
	return o
}

func (o ClientAddonsWamsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsWams] {
	return pulumix.Output[*ClientAddonsWams]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsWamsPtrOutput) Elem() ClientAddonsWamsOutput {
	return o.ApplyT(func(v *ClientAddonsWams) ClientAddonsWams {
		if v != nil {
			return *v
		}
		var ret ClientAddonsWams
		return ret
	}).(ClientAddonsWamsOutput)
}

func (o ClientAddonsWamsPtrOutput) MasterKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsWams) *string {
		if v == nil {
			return nil
		}
		return v.MasterKey
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsWsfed struct {
}

// ClientAddonsWsfedInput is an input type that accepts ClientAddonsWsfedArgs and ClientAddonsWsfedOutput values.
// You can construct a concrete instance of `ClientAddonsWsfedInput` via:
//
//	ClientAddonsWsfedArgs{...}
type ClientAddonsWsfedInput interface {
	pulumi.Input

	ToClientAddonsWsfedOutput() ClientAddonsWsfedOutput
	ToClientAddonsWsfedOutputWithContext(context.Context) ClientAddonsWsfedOutput
}

type ClientAddonsWsfedArgs struct {
}

func (ClientAddonsWsfedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsWsfed)(nil)).Elem()
}

func (i ClientAddonsWsfedArgs) ToClientAddonsWsfedOutput() ClientAddonsWsfedOutput {
	return i.ToClientAddonsWsfedOutputWithContext(context.Background())
}

func (i ClientAddonsWsfedArgs) ToClientAddonsWsfedOutputWithContext(ctx context.Context) ClientAddonsWsfedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsWsfedOutput)
}

func (i ClientAddonsWsfedArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsWsfed] {
	return pulumix.Output[ClientAddonsWsfed]{
		OutputState: i.ToClientAddonsWsfedOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsWsfedArgs) ToClientAddonsWsfedPtrOutput() ClientAddonsWsfedPtrOutput {
	return i.ToClientAddonsWsfedPtrOutputWithContext(context.Background())
}

func (i ClientAddonsWsfedArgs) ToClientAddonsWsfedPtrOutputWithContext(ctx context.Context) ClientAddonsWsfedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsWsfedOutput).ToClientAddonsWsfedPtrOutputWithContext(ctx)
}

// ClientAddonsWsfedPtrInput is an input type that accepts ClientAddonsWsfedArgs, ClientAddonsWsfedPtr and ClientAddonsWsfedPtrOutput values.
// You can construct a concrete instance of `ClientAddonsWsfedPtrInput` via:
//
//	        ClientAddonsWsfedArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsWsfedPtrInput interface {
	pulumi.Input

	ToClientAddonsWsfedPtrOutput() ClientAddonsWsfedPtrOutput
	ToClientAddonsWsfedPtrOutputWithContext(context.Context) ClientAddonsWsfedPtrOutput
}

type clientAddonsWsfedPtrType ClientAddonsWsfedArgs

func ClientAddonsWsfedPtr(v *ClientAddonsWsfedArgs) ClientAddonsWsfedPtrInput {
	return (*clientAddonsWsfedPtrType)(v)
}

func (*clientAddonsWsfedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsWsfed)(nil)).Elem()
}

func (i *clientAddonsWsfedPtrType) ToClientAddonsWsfedPtrOutput() ClientAddonsWsfedPtrOutput {
	return i.ToClientAddonsWsfedPtrOutputWithContext(context.Background())
}

func (i *clientAddonsWsfedPtrType) ToClientAddonsWsfedPtrOutputWithContext(ctx context.Context) ClientAddonsWsfedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsWsfedPtrOutput)
}

func (i *clientAddonsWsfedPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsWsfed] {
	return pulumix.Output[*ClientAddonsWsfed]{
		OutputState: i.ToClientAddonsWsfedPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsWsfedOutput struct{ *pulumi.OutputState }

func (ClientAddonsWsfedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsWsfed)(nil)).Elem()
}

func (o ClientAddonsWsfedOutput) ToClientAddonsWsfedOutput() ClientAddonsWsfedOutput {
	return o
}

func (o ClientAddonsWsfedOutput) ToClientAddonsWsfedOutputWithContext(ctx context.Context) ClientAddonsWsfedOutput {
	return o
}

func (o ClientAddonsWsfedOutput) ToClientAddonsWsfedPtrOutput() ClientAddonsWsfedPtrOutput {
	return o.ToClientAddonsWsfedPtrOutputWithContext(context.Background())
}

func (o ClientAddonsWsfedOutput) ToClientAddonsWsfedPtrOutputWithContext(ctx context.Context) ClientAddonsWsfedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsWsfed) *ClientAddonsWsfed {
		return &v
	}).(ClientAddonsWsfedPtrOutput)
}

func (o ClientAddonsWsfedOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsWsfed] {
	return pulumix.Output[ClientAddonsWsfed]{
		OutputState: o.OutputState,
	}
}

type ClientAddonsWsfedPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsWsfedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsWsfed)(nil)).Elem()
}

func (o ClientAddonsWsfedPtrOutput) ToClientAddonsWsfedPtrOutput() ClientAddonsWsfedPtrOutput {
	return o
}

func (o ClientAddonsWsfedPtrOutput) ToClientAddonsWsfedPtrOutputWithContext(ctx context.Context) ClientAddonsWsfedPtrOutput {
	return o
}

func (o ClientAddonsWsfedPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsWsfed] {
	return pulumix.Output[*ClientAddonsWsfed]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsWsfedPtrOutput) Elem() ClientAddonsWsfedOutput {
	return o.ApplyT(func(v *ClientAddonsWsfed) ClientAddonsWsfed {
		if v != nil {
			return *v
		}
		var ret ClientAddonsWsfed
		return ret
	}).(ClientAddonsWsfedOutput)
}

type ClientAddonsZendesk struct {
	AccountName *string `pulumi:"accountName"`
}

// ClientAddonsZendeskInput is an input type that accepts ClientAddonsZendeskArgs and ClientAddonsZendeskOutput values.
// You can construct a concrete instance of `ClientAddonsZendeskInput` via:
//
//	ClientAddonsZendeskArgs{...}
type ClientAddonsZendeskInput interface {
	pulumi.Input

	ToClientAddonsZendeskOutput() ClientAddonsZendeskOutput
	ToClientAddonsZendeskOutputWithContext(context.Context) ClientAddonsZendeskOutput
}

type ClientAddonsZendeskArgs struct {
	AccountName pulumi.StringPtrInput `pulumi:"accountName"`
}

func (ClientAddonsZendeskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsZendesk)(nil)).Elem()
}

func (i ClientAddonsZendeskArgs) ToClientAddonsZendeskOutput() ClientAddonsZendeskOutput {
	return i.ToClientAddonsZendeskOutputWithContext(context.Background())
}

func (i ClientAddonsZendeskArgs) ToClientAddonsZendeskOutputWithContext(ctx context.Context) ClientAddonsZendeskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsZendeskOutput)
}

func (i ClientAddonsZendeskArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsZendesk] {
	return pulumix.Output[ClientAddonsZendesk]{
		OutputState: i.ToClientAddonsZendeskOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsZendeskArgs) ToClientAddonsZendeskPtrOutput() ClientAddonsZendeskPtrOutput {
	return i.ToClientAddonsZendeskPtrOutputWithContext(context.Background())
}

func (i ClientAddonsZendeskArgs) ToClientAddonsZendeskPtrOutputWithContext(ctx context.Context) ClientAddonsZendeskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsZendeskOutput).ToClientAddonsZendeskPtrOutputWithContext(ctx)
}

// ClientAddonsZendeskPtrInput is an input type that accepts ClientAddonsZendeskArgs, ClientAddonsZendeskPtr and ClientAddonsZendeskPtrOutput values.
// You can construct a concrete instance of `ClientAddonsZendeskPtrInput` via:
//
//	        ClientAddonsZendeskArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsZendeskPtrInput interface {
	pulumi.Input

	ToClientAddonsZendeskPtrOutput() ClientAddonsZendeskPtrOutput
	ToClientAddonsZendeskPtrOutputWithContext(context.Context) ClientAddonsZendeskPtrOutput
}

type clientAddonsZendeskPtrType ClientAddonsZendeskArgs

func ClientAddonsZendeskPtr(v *ClientAddonsZendeskArgs) ClientAddonsZendeskPtrInput {
	return (*clientAddonsZendeskPtrType)(v)
}

func (*clientAddonsZendeskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsZendesk)(nil)).Elem()
}

func (i *clientAddonsZendeskPtrType) ToClientAddonsZendeskPtrOutput() ClientAddonsZendeskPtrOutput {
	return i.ToClientAddonsZendeskPtrOutputWithContext(context.Background())
}

func (i *clientAddonsZendeskPtrType) ToClientAddonsZendeskPtrOutputWithContext(ctx context.Context) ClientAddonsZendeskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsZendeskPtrOutput)
}

func (i *clientAddonsZendeskPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsZendesk] {
	return pulumix.Output[*ClientAddonsZendesk]{
		OutputState: i.ToClientAddonsZendeskPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsZendeskOutput struct{ *pulumi.OutputState }

func (ClientAddonsZendeskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsZendesk)(nil)).Elem()
}

func (o ClientAddonsZendeskOutput) ToClientAddonsZendeskOutput() ClientAddonsZendeskOutput {
	return o
}

func (o ClientAddonsZendeskOutput) ToClientAddonsZendeskOutputWithContext(ctx context.Context) ClientAddonsZendeskOutput {
	return o
}

func (o ClientAddonsZendeskOutput) ToClientAddonsZendeskPtrOutput() ClientAddonsZendeskPtrOutput {
	return o.ToClientAddonsZendeskPtrOutputWithContext(context.Background())
}

func (o ClientAddonsZendeskOutput) ToClientAddonsZendeskPtrOutputWithContext(ctx context.Context) ClientAddonsZendeskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsZendesk) *ClientAddonsZendesk {
		return &v
	}).(ClientAddonsZendeskPtrOutput)
}

func (o ClientAddonsZendeskOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsZendesk] {
	return pulumix.Output[ClientAddonsZendesk]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsZendeskOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsZendesk) *string { return v.AccountName }).(pulumi.StringPtrOutput)
}

type ClientAddonsZendeskPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsZendeskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsZendesk)(nil)).Elem()
}

func (o ClientAddonsZendeskPtrOutput) ToClientAddonsZendeskPtrOutput() ClientAddonsZendeskPtrOutput {
	return o
}

func (o ClientAddonsZendeskPtrOutput) ToClientAddonsZendeskPtrOutputWithContext(ctx context.Context) ClientAddonsZendeskPtrOutput {
	return o
}

func (o ClientAddonsZendeskPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsZendesk] {
	return pulumix.Output[*ClientAddonsZendesk]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsZendeskPtrOutput) Elem() ClientAddonsZendeskOutput {
	return o.ApplyT(func(v *ClientAddonsZendesk) ClientAddonsZendesk {
		if v != nil {
			return *v
		}
		var ret ClientAddonsZendesk
		return ret
	}).(ClientAddonsZendeskOutput)
}

func (o ClientAddonsZendeskPtrOutput) AccountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsZendesk) *string {
		if v == nil {
			return nil
		}
		return v.AccountName
	}).(pulumi.StringPtrOutput)
}

type ClientAddonsZoom struct {
	Account *string `pulumi:"account"`
}

// ClientAddonsZoomInput is an input type that accepts ClientAddonsZoomArgs and ClientAddonsZoomOutput values.
// You can construct a concrete instance of `ClientAddonsZoomInput` via:
//
//	ClientAddonsZoomArgs{...}
type ClientAddonsZoomInput interface {
	pulumi.Input

	ToClientAddonsZoomOutput() ClientAddonsZoomOutput
	ToClientAddonsZoomOutputWithContext(context.Context) ClientAddonsZoomOutput
}

type ClientAddonsZoomArgs struct {
	Account pulumi.StringPtrInput `pulumi:"account"`
}

func (ClientAddonsZoomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsZoom)(nil)).Elem()
}

func (i ClientAddonsZoomArgs) ToClientAddonsZoomOutput() ClientAddonsZoomOutput {
	return i.ToClientAddonsZoomOutputWithContext(context.Background())
}

func (i ClientAddonsZoomArgs) ToClientAddonsZoomOutputWithContext(ctx context.Context) ClientAddonsZoomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsZoomOutput)
}

func (i ClientAddonsZoomArgs) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsZoom] {
	return pulumix.Output[ClientAddonsZoom]{
		OutputState: i.ToClientAddonsZoomOutputWithContext(ctx).OutputState,
	}
}

func (i ClientAddonsZoomArgs) ToClientAddonsZoomPtrOutput() ClientAddonsZoomPtrOutput {
	return i.ToClientAddonsZoomPtrOutputWithContext(context.Background())
}

func (i ClientAddonsZoomArgs) ToClientAddonsZoomPtrOutputWithContext(ctx context.Context) ClientAddonsZoomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsZoomOutput).ToClientAddonsZoomPtrOutputWithContext(ctx)
}

// ClientAddonsZoomPtrInput is an input type that accepts ClientAddonsZoomArgs, ClientAddonsZoomPtr and ClientAddonsZoomPtrOutput values.
// You can construct a concrete instance of `ClientAddonsZoomPtrInput` via:
//
//	        ClientAddonsZoomArgs{...}
//
//	or:
//
//	        nil
type ClientAddonsZoomPtrInput interface {
	pulumi.Input

	ToClientAddonsZoomPtrOutput() ClientAddonsZoomPtrOutput
	ToClientAddonsZoomPtrOutputWithContext(context.Context) ClientAddonsZoomPtrOutput
}

type clientAddonsZoomPtrType ClientAddonsZoomArgs

func ClientAddonsZoomPtr(v *ClientAddonsZoomArgs) ClientAddonsZoomPtrInput {
	return (*clientAddonsZoomPtrType)(v)
}

func (*clientAddonsZoomPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsZoom)(nil)).Elem()
}

func (i *clientAddonsZoomPtrType) ToClientAddonsZoomPtrOutput() ClientAddonsZoomPtrOutput {
	return i.ToClientAddonsZoomPtrOutputWithContext(context.Background())
}

func (i *clientAddonsZoomPtrType) ToClientAddonsZoomPtrOutputWithContext(ctx context.Context) ClientAddonsZoomPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientAddonsZoomPtrOutput)
}

func (i *clientAddonsZoomPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsZoom] {
	return pulumix.Output[*ClientAddonsZoom]{
		OutputState: i.ToClientAddonsZoomPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientAddonsZoomOutput struct{ *pulumi.OutputState }

func (ClientAddonsZoomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientAddonsZoom)(nil)).Elem()
}

func (o ClientAddonsZoomOutput) ToClientAddonsZoomOutput() ClientAddonsZoomOutput {
	return o
}

func (o ClientAddonsZoomOutput) ToClientAddonsZoomOutputWithContext(ctx context.Context) ClientAddonsZoomOutput {
	return o
}

func (o ClientAddonsZoomOutput) ToClientAddonsZoomPtrOutput() ClientAddonsZoomPtrOutput {
	return o.ToClientAddonsZoomPtrOutputWithContext(context.Background())
}

func (o ClientAddonsZoomOutput) ToClientAddonsZoomPtrOutputWithContext(ctx context.Context) ClientAddonsZoomPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientAddonsZoom) *ClientAddonsZoom {
		return &v
	}).(ClientAddonsZoomPtrOutput)
}

func (o ClientAddonsZoomOutput) ToOutput(ctx context.Context) pulumix.Output[ClientAddonsZoom] {
	return pulumix.Output[ClientAddonsZoom]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsZoomOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientAddonsZoom) *string { return v.Account }).(pulumi.StringPtrOutput)
}

type ClientAddonsZoomPtrOutput struct{ *pulumi.OutputState }

func (ClientAddonsZoomPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientAddonsZoom)(nil)).Elem()
}

func (o ClientAddonsZoomPtrOutput) ToClientAddonsZoomPtrOutput() ClientAddonsZoomPtrOutput {
	return o
}

func (o ClientAddonsZoomPtrOutput) ToClientAddonsZoomPtrOutputWithContext(ctx context.Context) ClientAddonsZoomPtrOutput {
	return o
}

func (o ClientAddonsZoomPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientAddonsZoom] {
	return pulumix.Output[*ClientAddonsZoom]{
		OutputState: o.OutputState,
	}
}

func (o ClientAddonsZoomPtrOutput) Elem() ClientAddonsZoomOutput {
	return o.ApplyT(func(v *ClientAddonsZoom) ClientAddonsZoom {
		if v != nil {
			return *v
		}
		var ret ClientAddonsZoom
		return ret
	}).(ClientAddonsZoomOutput)
}

func (o ClientAddonsZoomPtrOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientAddonsZoom) *string {
		if v == nil {
			return nil
		}
		return v.Account
	}).(pulumi.StringPtrOutput)
}

type ClientCredentialsPrivateKeyJwt struct {
	// Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
	Credentials []ClientCredentialsPrivateKeyJwtCredential `pulumi:"credentials"`
}

// ClientCredentialsPrivateKeyJwtInput is an input type that accepts ClientCredentialsPrivateKeyJwtArgs and ClientCredentialsPrivateKeyJwtOutput values.
// You can construct a concrete instance of `ClientCredentialsPrivateKeyJwtInput` via:
//
//	ClientCredentialsPrivateKeyJwtArgs{...}
type ClientCredentialsPrivateKeyJwtInput interface {
	pulumi.Input

	ToClientCredentialsPrivateKeyJwtOutput() ClientCredentialsPrivateKeyJwtOutput
	ToClientCredentialsPrivateKeyJwtOutputWithContext(context.Context) ClientCredentialsPrivateKeyJwtOutput
}

type ClientCredentialsPrivateKeyJwtArgs struct {
	// Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
	Credentials ClientCredentialsPrivateKeyJwtCredentialArrayInput `pulumi:"credentials"`
}

func (ClientCredentialsPrivateKeyJwtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCredentialsPrivateKeyJwt)(nil)).Elem()
}

func (i ClientCredentialsPrivateKeyJwtArgs) ToClientCredentialsPrivateKeyJwtOutput() ClientCredentialsPrivateKeyJwtOutput {
	return i.ToClientCredentialsPrivateKeyJwtOutputWithContext(context.Background())
}

func (i ClientCredentialsPrivateKeyJwtArgs) ToClientCredentialsPrivateKeyJwtOutputWithContext(ctx context.Context) ClientCredentialsPrivateKeyJwtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientCredentialsPrivateKeyJwtOutput)
}

func (i ClientCredentialsPrivateKeyJwtArgs) ToOutput(ctx context.Context) pulumix.Output[ClientCredentialsPrivateKeyJwt] {
	return pulumix.Output[ClientCredentialsPrivateKeyJwt]{
		OutputState: i.ToClientCredentialsPrivateKeyJwtOutputWithContext(ctx).OutputState,
	}
}

func (i ClientCredentialsPrivateKeyJwtArgs) ToClientCredentialsPrivateKeyJwtPtrOutput() ClientCredentialsPrivateKeyJwtPtrOutput {
	return i.ToClientCredentialsPrivateKeyJwtPtrOutputWithContext(context.Background())
}

func (i ClientCredentialsPrivateKeyJwtArgs) ToClientCredentialsPrivateKeyJwtPtrOutputWithContext(ctx context.Context) ClientCredentialsPrivateKeyJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientCredentialsPrivateKeyJwtOutput).ToClientCredentialsPrivateKeyJwtPtrOutputWithContext(ctx)
}

// ClientCredentialsPrivateKeyJwtPtrInput is an input type that accepts ClientCredentialsPrivateKeyJwtArgs, ClientCredentialsPrivateKeyJwtPtr and ClientCredentialsPrivateKeyJwtPtrOutput values.
// You can construct a concrete instance of `ClientCredentialsPrivateKeyJwtPtrInput` via:
//
//	        ClientCredentialsPrivateKeyJwtArgs{...}
//
//	or:
//
//	        nil
type ClientCredentialsPrivateKeyJwtPtrInput interface {
	pulumi.Input

	ToClientCredentialsPrivateKeyJwtPtrOutput() ClientCredentialsPrivateKeyJwtPtrOutput
	ToClientCredentialsPrivateKeyJwtPtrOutputWithContext(context.Context) ClientCredentialsPrivateKeyJwtPtrOutput
}

type clientCredentialsPrivateKeyJwtPtrType ClientCredentialsPrivateKeyJwtArgs

func ClientCredentialsPrivateKeyJwtPtr(v *ClientCredentialsPrivateKeyJwtArgs) ClientCredentialsPrivateKeyJwtPtrInput {
	return (*clientCredentialsPrivateKeyJwtPtrType)(v)
}

func (*clientCredentialsPrivateKeyJwtPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientCredentialsPrivateKeyJwt)(nil)).Elem()
}

func (i *clientCredentialsPrivateKeyJwtPtrType) ToClientCredentialsPrivateKeyJwtPtrOutput() ClientCredentialsPrivateKeyJwtPtrOutput {
	return i.ToClientCredentialsPrivateKeyJwtPtrOutputWithContext(context.Background())
}

func (i *clientCredentialsPrivateKeyJwtPtrType) ToClientCredentialsPrivateKeyJwtPtrOutputWithContext(ctx context.Context) ClientCredentialsPrivateKeyJwtPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientCredentialsPrivateKeyJwtPtrOutput)
}

func (i *clientCredentialsPrivateKeyJwtPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientCredentialsPrivateKeyJwt] {
	return pulumix.Output[*ClientCredentialsPrivateKeyJwt]{
		OutputState: i.ToClientCredentialsPrivateKeyJwtPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientCredentialsPrivateKeyJwtOutput struct{ *pulumi.OutputState }

func (ClientCredentialsPrivateKeyJwtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCredentialsPrivateKeyJwt)(nil)).Elem()
}

func (o ClientCredentialsPrivateKeyJwtOutput) ToClientCredentialsPrivateKeyJwtOutput() ClientCredentialsPrivateKeyJwtOutput {
	return o
}

func (o ClientCredentialsPrivateKeyJwtOutput) ToClientCredentialsPrivateKeyJwtOutputWithContext(ctx context.Context) ClientCredentialsPrivateKeyJwtOutput {
	return o
}

func (o ClientCredentialsPrivateKeyJwtOutput) ToClientCredentialsPrivateKeyJwtPtrOutput() ClientCredentialsPrivateKeyJwtPtrOutput {
	return o.ToClientCredentialsPrivateKeyJwtPtrOutputWithContext(context.Background())
}

func (o ClientCredentialsPrivateKeyJwtOutput) ToClientCredentialsPrivateKeyJwtPtrOutputWithContext(ctx context.Context) ClientCredentialsPrivateKeyJwtPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientCredentialsPrivateKeyJwt) *ClientCredentialsPrivateKeyJwt {
		return &v
	}).(ClientCredentialsPrivateKeyJwtPtrOutput)
}

func (o ClientCredentialsPrivateKeyJwtOutput) ToOutput(ctx context.Context) pulumix.Output[ClientCredentialsPrivateKeyJwt] {
	return pulumix.Output[ClientCredentialsPrivateKeyJwt]{
		OutputState: o.OutputState,
	}
}

// Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
func (o ClientCredentialsPrivateKeyJwtOutput) Credentials() ClientCredentialsPrivateKeyJwtCredentialArrayOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwt) []ClientCredentialsPrivateKeyJwtCredential {
		return v.Credentials
	}).(ClientCredentialsPrivateKeyJwtCredentialArrayOutput)
}

type ClientCredentialsPrivateKeyJwtPtrOutput struct{ *pulumi.OutputState }

func (ClientCredentialsPrivateKeyJwtPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientCredentialsPrivateKeyJwt)(nil)).Elem()
}

func (o ClientCredentialsPrivateKeyJwtPtrOutput) ToClientCredentialsPrivateKeyJwtPtrOutput() ClientCredentialsPrivateKeyJwtPtrOutput {
	return o
}

func (o ClientCredentialsPrivateKeyJwtPtrOutput) ToClientCredentialsPrivateKeyJwtPtrOutputWithContext(ctx context.Context) ClientCredentialsPrivateKeyJwtPtrOutput {
	return o
}

func (o ClientCredentialsPrivateKeyJwtPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientCredentialsPrivateKeyJwt] {
	return pulumix.Output[*ClientCredentialsPrivateKeyJwt]{
		OutputState: o.OutputState,
	}
}

func (o ClientCredentialsPrivateKeyJwtPtrOutput) Elem() ClientCredentialsPrivateKeyJwtOutput {
	return o.ApplyT(func(v *ClientCredentialsPrivateKeyJwt) ClientCredentialsPrivateKeyJwt {
		if v != nil {
			return *v
		}
		var ret ClientCredentialsPrivateKeyJwt
		return ret
	}).(ClientCredentialsPrivateKeyJwtOutput)
}

// Client credentials available for use when Private Key JWT is in use as the client authentication method. A maximum of 2 client credentials can be set.
func (o ClientCredentialsPrivateKeyJwtPtrOutput) Credentials() ClientCredentialsPrivateKeyJwtCredentialArrayOutput {
	return o.ApplyT(func(v *ClientCredentialsPrivateKeyJwt) []ClientCredentialsPrivateKeyJwtCredential {
		if v == nil {
			return nil
		}
		return v.Credentials
	}).(ClientCredentialsPrivateKeyJwtCredentialArrayOutput)
}

type ClientCredentialsPrivateKeyJwtCredential struct {
	Algorithm      *string `pulumi:"algorithm"`
	CreatedAt      *string `pulumi:"createdAt"`
	CredentialType string  `pulumi:"credentialType"`
	ExpiresAt      *string `pulumi:"expiresAt"`
	// The ID of this resource.
	Id                  *string `pulumi:"id"`
	KeyId               *string `pulumi:"keyId"`
	Name                *string `pulumi:"name"`
	ParseExpiryFromCert *bool   `pulumi:"parseExpiryFromCert"`
	Pem                 string  `pulumi:"pem"`
	UpdatedAt           *string `pulumi:"updatedAt"`
}

// ClientCredentialsPrivateKeyJwtCredentialInput is an input type that accepts ClientCredentialsPrivateKeyJwtCredentialArgs and ClientCredentialsPrivateKeyJwtCredentialOutput values.
// You can construct a concrete instance of `ClientCredentialsPrivateKeyJwtCredentialInput` via:
//
//	ClientCredentialsPrivateKeyJwtCredentialArgs{...}
type ClientCredentialsPrivateKeyJwtCredentialInput interface {
	pulumi.Input

	ToClientCredentialsPrivateKeyJwtCredentialOutput() ClientCredentialsPrivateKeyJwtCredentialOutput
	ToClientCredentialsPrivateKeyJwtCredentialOutputWithContext(context.Context) ClientCredentialsPrivateKeyJwtCredentialOutput
}

type ClientCredentialsPrivateKeyJwtCredentialArgs struct {
	Algorithm      pulumi.StringPtrInput `pulumi:"algorithm"`
	CreatedAt      pulumi.StringPtrInput `pulumi:"createdAt"`
	CredentialType pulumi.StringInput    `pulumi:"credentialType"`
	ExpiresAt      pulumi.StringPtrInput `pulumi:"expiresAt"`
	// The ID of this resource.
	Id                  pulumi.StringPtrInput `pulumi:"id"`
	KeyId               pulumi.StringPtrInput `pulumi:"keyId"`
	Name                pulumi.StringPtrInput `pulumi:"name"`
	ParseExpiryFromCert pulumi.BoolPtrInput   `pulumi:"parseExpiryFromCert"`
	Pem                 pulumi.StringInput    `pulumi:"pem"`
	UpdatedAt           pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (ClientCredentialsPrivateKeyJwtCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCredentialsPrivateKeyJwtCredential)(nil)).Elem()
}

func (i ClientCredentialsPrivateKeyJwtCredentialArgs) ToClientCredentialsPrivateKeyJwtCredentialOutput() ClientCredentialsPrivateKeyJwtCredentialOutput {
	return i.ToClientCredentialsPrivateKeyJwtCredentialOutputWithContext(context.Background())
}

func (i ClientCredentialsPrivateKeyJwtCredentialArgs) ToClientCredentialsPrivateKeyJwtCredentialOutputWithContext(ctx context.Context) ClientCredentialsPrivateKeyJwtCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientCredentialsPrivateKeyJwtCredentialOutput)
}

func (i ClientCredentialsPrivateKeyJwtCredentialArgs) ToOutput(ctx context.Context) pulumix.Output[ClientCredentialsPrivateKeyJwtCredential] {
	return pulumix.Output[ClientCredentialsPrivateKeyJwtCredential]{
		OutputState: i.ToClientCredentialsPrivateKeyJwtCredentialOutputWithContext(ctx).OutputState,
	}
}

// ClientCredentialsPrivateKeyJwtCredentialArrayInput is an input type that accepts ClientCredentialsPrivateKeyJwtCredentialArray and ClientCredentialsPrivateKeyJwtCredentialArrayOutput values.
// You can construct a concrete instance of `ClientCredentialsPrivateKeyJwtCredentialArrayInput` via:
//
//	ClientCredentialsPrivateKeyJwtCredentialArray{ ClientCredentialsPrivateKeyJwtCredentialArgs{...} }
type ClientCredentialsPrivateKeyJwtCredentialArrayInput interface {
	pulumi.Input

	ToClientCredentialsPrivateKeyJwtCredentialArrayOutput() ClientCredentialsPrivateKeyJwtCredentialArrayOutput
	ToClientCredentialsPrivateKeyJwtCredentialArrayOutputWithContext(context.Context) ClientCredentialsPrivateKeyJwtCredentialArrayOutput
}

type ClientCredentialsPrivateKeyJwtCredentialArray []ClientCredentialsPrivateKeyJwtCredentialInput

func (ClientCredentialsPrivateKeyJwtCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientCredentialsPrivateKeyJwtCredential)(nil)).Elem()
}

func (i ClientCredentialsPrivateKeyJwtCredentialArray) ToClientCredentialsPrivateKeyJwtCredentialArrayOutput() ClientCredentialsPrivateKeyJwtCredentialArrayOutput {
	return i.ToClientCredentialsPrivateKeyJwtCredentialArrayOutputWithContext(context.Background())
}

func (i ClientCredentialsPrivateKeyJwtCredentialArray) ToClientCredentialsPrivateKeyJwtCredentialArrayOutputWithContext(ctx context.Context) ClientCredentialsPrivateKeyJwtCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientCredentialsPrivateKeyJwtCredentialArrayOutput)
}

func (i ClientCredentialsPrivateKeyJwtCredentialArray) ToOutput(ctx context.Context) pulumix.Output[[]ClientCredentialsPrivateKeyJwtCredential] {
	return pulumix.Output[[]ClientCredentialsPrivateKeyJwtCredential]{
		OutputState: i.ToClientCredentialsPrivateKeyJwtCredentialArrayOutputWithContext(ctx).OutputState,
	}
}

type ClientCredentialsPrivateKeyJwtCredentialOutput struct{ *pulumi.OutputState }

func (ClientCredentialsPrivateKeyJwtCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientCredentialsPrivateKeyJwtCredential)(nil)).Elem()
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) ToClientCredentialsPrivateKeyJwtCredentialOutput() ClientCredentialsPrivateKeyJwtCredentialOutput {
	return o
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) ToClientCredentialsPrivateKeyJwtCredentialOutputWithContext(ctx context.Context) ClientCredentialsPrivateKeyJwtCredentialOutput {
	return o
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) ToOutput(ctx context.Context) pulumix.Output[ClientCredentialsPrivateKeyJwtCredential] {
	return pulumix.Output[ClientCredentialsPrivateKeyJwtCredential]{
		OutputState: o.OutputState,
	}
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) Algorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwtCredential) *string { return v.Algorithm }).(pulumi.StringPtrOutput)
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwtCredential) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) CredentialType() pulumi.StringOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwtCredential) string { return v.CredentialType }).(pulumi.StringOutput)
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwtCredential) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

// The ID of this resource.
func (o ClientCredentialsPrivateKeyJwtCredentialOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwtCredential) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwtCredential) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwtCredential) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) ParseExpiryFromCert() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwtCredential) *bool { return v.ParseExpiryFromCert }).(pulumi.BoolPtrOutput)
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) Pem() pulumi.StringOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwtCredential) string { return v.Pem }).(pulumi.StringOutput)
}

func (o ClientCredentialsPrivateKeyJwtCredentialOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientCredentialsPrivateKeyJwtCredential) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type ClientCredentialsPrivateKeyJwtCredentialArrayOutput struct{ *pulumi.OutputState }

func (ClientCredentialsPrivateKeyJwtCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClientCredentialsPrivateKeyJwtCredential)(nil)).Elem()
}

func (o ClientCredentialsPrivateKeyJwtCredentialArrayOutput) ToClientCredentialsPrivateKeyJwtCredentialArrayOutput() ClientCredentialsPrivateKeyJwtCredentialArrayOutput {
	return o
}

func (o ClientCredentialsPrivateKeyJwtCredentialArrayOutput) ToClientCredentialsPrivateKeyJwtCredentialArrayOutputWithContext(ctx context.Context) ClientCredentialsPrivateKeyJwtCredentialArrayOutput {
	return o
}

func (o ClientCredentialsPrivateKeyJwtCredentialArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ClientCredentialsPrivateKeyJwtCredential] {
	return pulumix.Output[[]ClientCredentialsPrivateKeyJwtCredential]{
		OutputState: o.OutputState,
	}
}

func (o ClientCredentialsPrivateKeyJwtCredentialArrayOutput) Index(i pulumi.IntInput) ClientCredentialsPrivateKeyJwtCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClientCredentialsPrivateKeyJwtCredential {
		return vs[0].([]ClientCredentialsPrivateKeyJwtCredential)[vs[1].(int)]
	}).(ClientCredentialsPrivateKeyJwtCredentialOutput)
}

type ClientJwtConfiguration struct {
	// Algorithm used to sign JWTs.
	Alg *string `pulumi:"alg"`
	// Number of seconds during which the JWT will be valid.
	LifetimeInSeconds *int `pulumi:"lifetimeInSeconds"`
	// Permissions (scopes) included in JWTs.
	Scopes map[string]string `pulumi:"scopes"`
	// Indicates whether the client secret is Base64-encoded.
	SecretEncoded *bool `pulumi:"secretEncoded"`
}

// ClientJwtConfigurationInput is an input type that accepts ClientJwtConfigurationArgs and ClientJwtConfigurationOutput values.
// You can construct a concrete instance of `ClientJwtConfigurationInput` via:
//
//	ClientJwtConfigurationArgs{...}
type ClientJwtConfigurationInput interface {
	pulumi.Input

	ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput
	ToClientJwtConfigurationOutputWithContext(context.Context) ClientJwtConfigurationOutput
}

type ClientJwtConfigurationArgs struct {
	// Algorithm used to sign JWTs.
	Alg pulumi.StringPtrInput `pulumi:"alg"`
	// Number of seconds during which the JWT will be valid.
	LifetimeInSeconds pulumi.IntPtrInput `pulumi:"lifetimeInSeconds"`
	// Permissions (scopes) included in JWTs.
	Scopes pulumi.StringMapInput `pulumi:"scopes"`
	// Indicates whether the client secret is Base64-encoded.
	SecretEncoded pulumi.BoolPtrInput `pulumi:"secretEncoded"`
}

func (ClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientJwtConfiguration)(nil)).Elem()
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput {
	return i.ToClientJwtConfigurationOutputWithContext(context.Background())
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationOutputWithContext(ctx context.Context) ClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationOutput)
}

func (i ClientJwtConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[ClientJwtConfiguration] {
	return pulumix.Output[ClientJwtConfiguration]{
		OutputState: i.ToClientJwtConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return i.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i ClientJwtConfigurationArgs) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationOutput).ToClientJwtConfigurationPtrOutputWithContext(ctx)
}

// ClientJwtConfigurationPtrInput is an input type that accepts ClientJwtConfigurationArgs, ClientJwtConfigurationPtr and ClientJwtConfigurationPtrOutput values.
// You can construct a concrete instance of `ClientJwtConfigurationPtrInput` via:
//
//	        ClientJwtConfigurationArgs{...}
//
//	or:
//
//	        nil
type ClientJwtConfigurationPtrInput interface {
	pulumi.Input

	ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput
	ToClientJwtConfigurationPtrOutputWithContext(context.Context) ClientJwtConfigurationPtrOutput
}

type clientJwtConfigurationPtrType ClientJwtConfigurationArgs

func ClientJwtConfigurationPtr(v *ClientJwtConfigurationArgs) ClientJwtConfigurationPtrInput {
	return (*clientJwtConfigurationPtrType)(v)
}

func (*clientJwtConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientJwtConfiguration)(nil)).Elem()
}

func (i *clientJwtConfigurationPtrType) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return i.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i *clientJwtConfigurationPtrType) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientJwtConfigurationPtrOutput)
}

func (i *clientJwtConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientJwtConfiguration] {
	return pulumix.Output[*ClientJwtConfiguration]{
		OutputState: i.ToClientJwtConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (ClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientJwtConfiguration)(nil)).Elem()
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationOutput() ClientJwtConfigurationOutput {
	return o
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationOutputWithContext(ctx context.Context) ClientJwtConfigurationOutput {
	return o
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return o.ToClientJwtConfigurationPtrOutputWithContext(context.Background())
}

func (o ClientJwtConfigurationOutput) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientJwtConfiguration) *ClientJwtConfiguration {
		return &v
	}).(ClientJwtConfigurationPtrOutput)
}

func (o ClientJwtConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[ClientJwtConfiguration] {
	return pulumix.Output[ClientJwtConfiguration]{
		OutputState: o.OutputState,
	}
}

// Algorithm used to sign JWTs.
func (o ClientJwtConfigurationOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *string { return v.Alg }).(pulumi.StringPtrOutput)
}

// Number of seconds during which the JWT will be valid.
func (o ClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *int { return v.LifetimeInSeconds }).(pulumi.IntPtrOutput)
}

// Permissions (scopes) included in JWTs.
func (o ClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

// Indicates whether the client secret is Base64-encoded.
func (o ClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientJwtConfiguration) *bool { return v.SecretEncoded }).(pulumi.BoolPtrOutput)
}

type ClientJwtConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClientJwtConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientJwtConfiguration)(nil)).Elem()
}

func (o ClientJwtConfigurationPtrOutput) ToClientJwtConfigurationPtrOutput() ClientJwtConfigurationPtrOutput {
	return o
}

func (o ClientJwtConfigurationPtrOutput) ToClientJwtConfigurationPtrOutputWithContext(ctx context.Context) ClientJwtConfigurationPtrOutput {
	return o
}

func (o ClientJwtConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientJwtConfiguration] {
	return pulumix.Output[*ClientJwtConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o ClientJwtConfigurationPtrOutput) Elem() ClientJwtConfigurationOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) ClientJwtConfiguration {
		if v != nil {
			return *v
		}
		var ret ClientJwtConfiguration
		return ret
	}).(ClientJwtConfigurationOutput)
}

// Algorithm used to sign JWTs.
func (o ClientJwtConfigurationPtrOutput) Alg() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Alg
	}).(pulumi.StringPtrOutput)
}

// Number of seconds during which the JWT will be valid.
func (o ClientJwtConfigurationPtrOutput) LifetimeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.LifetimeInSeconds
	}).(pulumi.IntPtrOutput)
}

// Permissions (scopes) included in JWTs.
func (o ClientJwtConfigurationPtrOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringMapOutput)
}

// Indicates whether the client secret is Base64-encoded.
func (o ClientJwtConfigurationPtrOutput) SecretEncoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientJwtConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.SecretEncoded
	}).(pulumi.BoolPtrOutput)
}

type ClientMobile struct {
	// Configuration settings for Android native apps.
	Android *ClientMobileAndroid `pulumi:"android"`
	// Configuration settings for i0S native apps.
	Ios *ClientMobileIos `pulumi:"ios"`
}

// ClientMobileInput is an input type that accepts ClientMobileArgs and ClientMobileOutput values.
// You can construct a concrete instance of `ClientMobileInput` via:
//
//	ClientMobileArgs{...}
type ClientMobileInput interface {
	pulumi.Input

	ToClientMobileOutput() ClientMobileOutput
	ToClientMobileOutputWithContext(context.Context) ClientMobileOutput
}

type ClientMobileArgs struct {
	// Configuration settings for Android native apps.
	Android ClientMobileAndroidPtrInput `pulumi:"android"`
	// Configuration settings for i0S native apps.
	Ios ClientMobileIosPtrInput `pulumi:"ios"`
}

func (ClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobile)(nil)).Elem()
}

func (i ClientMobileArgs) ToClientMobileOutput() ClientMobileOutput {
	return i.ToClientMobileOutputWithContext(context.Background())
}

func (i ClientMobileArgs) ToClientMobileOutputWithContext(ctx context.Context) ClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileOutput)
}

func (i ClientMobileArgs) ToOutput(ctx context.Context) pulumix.Output[ClientMobile] {
	return pulumix.Output[ClientMobile]{
		OutputState: i.ToClientMobileOutputWithContext(ctx).OutputState,
	}
}

func (i ClientMobileArgs) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return i.ToClientMobilePtrOutputWithContext(context.Background())
}

func (i ClientMobileArgs) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileOutput).ToClientMobilePtrOutputWithContext(ctx)
}

// ClientMobilePtrInput is an input type that accepts ClientMobileArgs, ClientMobilePtr and ClientMobilePtrOutput values.
// You can construct a concrete instance of `ClientMobilePtrInput` via:
//
//	        ClientMobileArgs{...}
//
//	or:
//
//	        nil
type ClientMobilePtrInput interface {
	pulumi.Input

	ToClientMobilePtrOutput() ClientMobilePtrOutput
	ToClientMobilePtrOutputWithContext(context.Context) ClientMobilePtrOutput
}

type clientMobilePtrType ClientMobileArgs

func ClientMobilePtr(v *ClientMobileArgs) ClientMobilePtrInput {
	return (*clientMobilePtrType)(v)
}

func (*clientMobilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobile)(nil)).Elem()
}

func (i *clientMobilePtrType) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return i.ToClientMobilePtrOutputWithContext(context.Background())
}

func (i *clientMobilePtrType) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobilePtrOutput)
}

func (i *clientMobilePtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientMobile] {
	return pulumix.Output[*ClientMobile]{
		OutputState: i.ToClientMobilePtrOutputWithContext(ctx).OutputState,
	}
}

type ClientMobileOutput struct{ *pulumi.OutputState }

func (ClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobile)(nil)).Elem()
}

func (o ClientMobileOutput) ToClientMobileOutput() ClientMobileOutput {
	return o
}

func (o ClientMobileOutput) ToClientMobileOutputWithContext(ctx context.Context) ClientMobileOutput {
	return o
}

func (o ClientMobileOutput) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return o.ToClientMobilePtrOutputWithContext(context.Background())
}

func (o ClientMobileOutput) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientMobile) *ClientMobile {
		return &v
	}).(ClientMobilePtrOutput)
}

func (o ClientMobileOutput) ToOutput(ctx context.Context) pulumix.Output[ClientMobile] {
	return pulumix.Output[ClientMobile]{
		OutputState: o.OutputState,
	}
}

// Configuration settings for Android native apps.
func (o ClientMobileOutput) Android() ClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v ClientMobile) *ClientMobileAndroid { return v.Android }).(ClientMobileAndroidPtrOutput)
}

// Configuration settings for i0S native apps.
func (o ClientMobileOutput) Ios() ClientMobileIosPtrOutput {
	return o.ApplyT(func(v ClientMobile) *ClientMobileIos { return v.Ios }).(ClientMobileIosPtrOutput)
}

type ClientMobilePtrOutput struct{ *pulumi.OutputState }

func (ClientMobilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobile)(nil)).Elem()
}

func (o ClientMobilePtrOutput) ToClientMobilePtrOutput() ClientMobilePtrOutput {
	return o
}

func (o ClientMobilePtrOutput) ToClientMobilePtrOutputWithContext(ctx context.Context) ClientMobilePtrOutput {
	return o
}

func (o ClientMobilePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientMobile] {
	return pulumix.Output[*ClientMobile]{
		OutputState: o.OutputState,
	}
}

func (o ClientMobilePtrOutput) Elem() ClientMobileOutput {
	return o.ApplyT(func(v *ClientMobile) ClientMobile {
		if v != nil {
			return *v
		}
		var ret ClientMobile
		return ret
	}).(ClientMobileOutput)
}

// Configuration settings for Android native apps.
func (o ClientMobilePtrOutput) Android() ClientMobileAndroidPtrOutput {
	return o.ApplyT(func(v *ClientMobile) *ClientMobileAndroid {
		if v == nil {
			return nil
		}
		return v.Android
	}).(ClientMobileAndroidPtrOutput)
}

// Configuration settings for i0S native apps.
func (o ClientMobilePtrOutput) Ios() ClientMobileIosPtrOutput {
	return o.ApplyT(func(v *ClientMobile) *ClientMobileIos {
		if v == nil {
			return nil
		}
		return v.Ios
	}).(ClientMobileIosPtrOutput)
}

type ClientMobileAndroid struct {
	AppPackageName         *string  `pulumi:"appPackageName"`
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// ClientMobileAndroidInput is an input type that accepts ClientMobileAndroidArgs and ClientMobileAndroidOutput values.
// You can construct a concrete instance of `ClientMobileAndroidInput` via:
//
//	ClientMobileAndroidArgs{...}
type ClientMobileAndroidInput interface {
	pulumi.Input

	ToClientMobileAndroidOutput() ClientMobileAndroidOutput
	ToClientMobileAndroidOutputWithContext(context.Context) ClientMobileAndroidOutput
}

type ClientMobileAndroidArgs struct {
	AppPackageName         pulumi.StringPtrInput   `pulumi:"appPackageName"`
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (ClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileAndroid)(nil)).Elem()
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidOutput() ClientMobileAndroidOutput {
	return i.ToClientMobileAndroidOutputWithContext(context.Background())
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidOutputWithContext(ctx context.Context) ClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidOutput)
}

func (i ClientMobileAndroidArgs) ToOutput(ctx context.Context) pulumix.Output[ClientMobileAndroid] {
	return pulumix.Output[ClientMobileAndroid]{
		OutputState: i.ToClientMobileAndroidOutputWithContext(ctx).OutputState,
	}
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return i.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i ClientMobileAndroidArgs) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidOutput).ToClientMobileAndroidPtrOutputWithContext(ctx)
}

// ClientMobileAndroidPtrInput is an input type that accepts ClientMobileAndroidArgs, ClientMobileAndroidPtr and ClientMobileAndroidPtrOutput values.
// You can construct a concrete instance of `ClientMobileAndroidPtrInput` via:
//
//	        ClientMobileAndroidArgs{...}
//
//	or:
//
//	        nil
type ClientMobileAndroidPtrInput interface {
	pulumi.Input

	ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput
	ToClientMobileAndroidPtrOutputWithContext(context.Context) ClientMobileAndroidPtrOutput
}

type clientMobileAndroidPtrType ClientMobileAndroidArgs

func ClientMobileAndroidPtr(v *ClientMobileAndroidArgs) ClientMobileAndroidPtrInput {
	return (*clientMobileAndroidPtrType)(v)
}

func (*clientMobileAndroidPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileAndroid)(nil)).Elem()
}

func (i *clientMobileAndroidPtrType) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return i.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (i *clientMobileAndroidPtrType) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileAndroidPtrOutput)
}

func (i *clientMobileAndroidPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientMobileAndroid] {
	return pulumix.Output[*ClientMobileAndroid]{
		OutputState: i.ToClientMobileAndroidPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (ClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileAndroid)(nil)).Elem()
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidOutput() ClientMobileAndroidOutput {
	return o
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidOutputWithContext(ctx context.Context) ClientMobileAndroidOutput {
	return o
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return o.ToClientMobileAndroidPtrOutputWithContext(context.Background())
}

func (o ClientMobileAndroidOutput) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientMobileAndroid) *ClientMobileAndroid {
		return &v
	}).(ClientMobileAndroidPtrOutput)
}

func (o ClientMobileAndroidOutput) ToOutput(ctx context.Context) pulumix.Output[ClientMobileAndroid] {
	return pulumix.Output[ClientMobileAndroid]{
		OutputState: o.OutputState,
	}
}

func (o ClientMobileAndroidOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileAndroid) *string { return v.AppPackageName }).(pulumi.StringPtrOutput)
}

func (o ClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type ClientMobileAndroidPtrOutput struct{ *pulumi.OutputState }

func (ClientMobileAndroidPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileAndroid)(nil)).Elem()
}

func (o ClientMobileAndroidPtrOutput) ToClientMobileAndroidPtrOutput() ClientMobileAndroidPtrOutput {
	return o
}

func (o ClientMobileAndroidPtrOutput) ToClientMobileAndroidPtrOutputWithContext(ctx context.Context) ClientMobileAndroidPtrOutput {
	return o
}

func (o ClientMobileAndroidPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientMobileAndroid] {
	return pulumix.Output[*ClientMobileAndroid]{
		OutputState: o.OutputState,
	}
}

func (o ClientMobileAndroidPtrOutput) Elem() ClientMobileAndroidOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) ClientMobileAndroid {
		if v != nil {
			return *v
		}
		var ret ClientMobileAndroid
		return ret
	}).(ClientMobileAndroidOutput)
}

func (o ClientMobileAndroidPtrOutput) AppPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) *string {
		if v == nil {
			return nil
		}
		return v.AppPackageName
	}).(pulumi.StringPtrOutput)
}

func (o ClientMobileAndroidPtrOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientMobileAndroid) []string {
		if v == nil {
			return nil
		}
		return v.Sha256CertFingerprints
	}).(pulumi.StringArrayOutput)
}

type ClientMobileIos struct {
	AppBundleIdentifier *string `pulumi:"appBundleIdentifier"`
	TeamId              *string `pulumi:"teamId"`
}

// ClientMobileIosInput is an input type that accepts ClientMobileIosArgs and ClientMobileIosOutput values.
// You can construct a concrete instance of `ClientMobileIosInput` via:
//
//	ClientMobileIosArgs{...}
type ClientMobileIosInput interface {
	pulumi.Input

	ToClientMobileIosOutput() ClientMobileIosOutput
	ToClientMobileIosOutputWithContext(context.Context) ClientMobileIosOutput
}

type ClientMobileIosArgs struct {
	AppBundleIdentifier pulumi.StringPtrInput `pulumi:"appBundleIdentifier"`
	TeamId              pulumi.StringPtrInput `pulumi:"teamId"`
}

func (ClientMobileIosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileIos)(nil)).Elem()
}

func (i ClientMobileIosArgs) ToClientMobileIosOutput() ClientMobileIosOutput {
	return i.ToClientMobileIosOutputWithContext(context.Background())
}

func (i ClientMobileIosArgs) ToClientMobileIosOutputWithContext(ctx context.Context) ClientMobileIosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosOutput)
}

func (i ClientMobileIosArgs) ToOutput(ctx context.Context) pulumix.Output[ClientMobileIos] {
	return pulumix.Output[ClientMobileIos]{
		OutputState: i.ToClientMobileIosOutputWithContext(ctx).OutputState,
	}
}

func (i ClientMobileIosArgs) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return i.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (i ClientMobileIosArgs) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosOutput).ToClientMobileIosPtrOutputWithContext(ctx)
}

// ClientMobileIosPtrInput is an input type that accepts ClientMobileIosArgs, ClientMobileIosPtr and ClientMobileIosPtrOutput values.
// You can construct a concrete instance of `ClientMobileIosPtrInput` via:
//
//	        ClientMobileIosArgs{...}
//
//	or:
//
//	        nil
type ClientMobileIosPtrInput interface {
	pulumi.Input

	ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput
	ToClientMobileIosPtrOutputWithContext(context.Context) ClientMobileIosPtrOutput
}

type clientMobileIosPtrType ClientMobileIosArgs

func ClientMobileIosPtr(v *ClientMobileIosArgs) ClientMobileIosPtrInput {
	return (*clientMobileIosPtrType)(v)
}

func (*clientMobileIosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileIos)(nil)).Elem()
}

func (i *clientMobileIosPtrType) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return i.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (i *clientMobileIosPtrType) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientMobileIosPtrOutput)
}

func (i *clientMobileIosPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientMobileIos] {
	return pulumix.Output[*ClientMobileIos]{
		OutputState: i.ToClientMobileIosPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientMobileIosOutput struct{ *pulumi.OutputState }

func (ClientMobileIosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientMobileIos)(nil)).Elem()
}

func (o ClientMobileIosOutput) ToClientMobileIosOutput() ClientMobileIosOutput {
	return o
}

func (o ClientMobileIosOutput) ToClientMobileIosOutputWithContext(ctx context.Context) ClientMobileIosOutput {
	return o
}

func (o ClientMobileIosOutput) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return o.ToClientMobileIosPtrOutputWithContext(context.Background())
}

func (o ClientMobileIosOutput) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientMobileIos) *ClientMobileIos {
		return &v
	}).(ClientMobileIosPtrOutput)
}

func (o ClientMobileIosOutput) ToOutput(ctx context.Context) pulumix.Output[ClientMobileIos] {
	return pulumix.Output[ClientMobileIos]{
		OutputState: o.OutputState,
	}
}

func (o ClientMobileIosOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileIos) *string { return v.AppBundleIdentifier }).(pulumi.StringPtrOutput)
}

func (o ClientMobileIosOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClientMobileIos) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

type ClientMobileIosPtrOutput struct{ *pulumi.OutputState }

func (ClientMobileIosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientMobileIos)(nil)).Elem()
}

func (o ClientMobileIosPtrOutput) ToClientMobileIosPtrOutput() ClientMobileIosPtrOutput {
	return o
}

func (o ClientMobileIosPtrOutput) ToClientMobileIosPtrOutputWithContext(ctx context.Context) ClientMobileIosPtrOutput {
	return o
}

func (o ClientMobileIosPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientMobileIos] {
	return pulumix.Output[*ClientMobileIos]{
		OutputState: o.OutputState,
	}
}

func (o ClientMobileIosPtrOutput) Elem() ClientMobileIosOutput {
	return o.ApplyT(func(v *ClientMobileIos) ClientMobileIos {
		if v != nil {
			return *v
		}
		var ret ClientMobileIos
		return ret
	}).(ClientMobileIosOutput)
}

func (o ClientMobileIosPtrOutput) AppBundleIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.AppBundleIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o ClientMobileIosPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientMobileIos) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

type ClientNativeSocialLogin struct {
	Apple    *ClientNativeSocialLoginApple    `pulumi:"apple"`
	Facebook *ClientNativeSocialLoginFacebook `pulumi:"facebook"`
}

// ClientNativeSocialLoginInput is an input type that accepts ClientNativeSocialLoginArgs and ClientNativeSocialLoginOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginInput` via:
//
//	ClientNativeSocialLoginArgs{...}
type ClientNativeSocialLoginInput interface {
	pulumi.Input

	ToClientNativeSocialLoginOutput() ClientNativeSocialLoginOutput
	ToClientNativeSocialLoginOutputWithContext(context.Context) ClientNativeSocialLoginOutput
}

type ClientNativeSocialLoginArgs struct {
	Apple    ClientNativeSocialLoginApplePtrInput    `pulumi:"apple"`
	Facebook ClientNativeSocialLoginFacebookPtrInput `pulumi:"facebook"`
}

func (ClientNativeSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLogin)(nil)).Elem()
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginOutput() ClientNativeSocialLoginOutput {
	return i.ToClientNativeSocialLoginOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginOutputWithContext(ctx context.Context) ClientNativeSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginOutput)
}

func (i ClientNativeSocialLoginArgs) ToOutput(ctx context.Context) pulumix.Output[ClientNativeSocialLogin] {
	return pulumix.Output[ClientNativeSocialLogin]{
		OutputState: i.ToClientNativeSocialLoginOutputWithContext(ctx).OutputState,
	}
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return i.ToClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginArgs) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginOutput).ToClientNativeSocialLoginPtrOutputWithContext(ctx)
}

// ClientNativeSocialLoginPtrInput is an input type that accepts ClientNativeSocialLoginArgs, ClientNativeSocialLoginPtr and ClientNativeSocialLoginPtrOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginPtrInput` via:
//
//	        ClientNativeSocialLoginArgs{...}
//
//	or:
//
//	        nil
type ClientNativeSocialLoginPtrInput interface {
	pulumi.Input

	ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput
	ToClientNativeSocialLoginPtrOutputWithContext(context.Context) ClientNativeSocialLoginPtrOutput
}

type clientNativeSocialLoginPtrType ClientNativeSocialLoginArgs

func ClientNativeSocialLoginPtr(v *ClientNativeSocialLoginArgs) ClientNativeSocialLoginPtrInput {
	return (*clientNativeSocialLoginPtrType)(v)
}

func (*clientNativeSocialLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLogin)(nil)).Elem()
}

func (i *clientNativeSocialLoginPtrType) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return i.ToClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (i *clientNativeSocialLoginPtrType) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginPtrOutput)
}

func (i *clientNativeSocialLoginPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientNativeSocialLogin] {
	return pulumix.Output[*ClientNativeSocialLogin]{
		OutputState: i.ToClientNativeSocialLoginPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientNativeSocialLoginOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLogin)(nil)).Elem()
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginOutput() ClientNativeSocialLoginOutput {
	return o
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginOutputWithContext(ctx context.Context) ClientNativeSocialLoginOutput {
	return o
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return o.ToClientNativeSocialLoginPtrOutputWithContext(context.Background())
}

func (o ClientNativeSocialLoginOutput) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientNativeSocialLogin) *ClientNativeSocialLogin {
		return &v
	}).(ClientNativeSocialLoginPtrOutput)
}

func (o ClientNativeSocialLoginOutput) ToOutput(ctx context.Context) pulumix.Output[ClientNativeSocialLogin] {
	return pulumix.Output[ClientNativeSocialLogin]{
		OutputState: o.OutputState,
	}
}

func (o ClientNativeSocialLoginOutput) Apple() ClientNativeSocialLoginApplePtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLogin) *ClientNativeSocialLoginApple { return v.Apple }).(ClientNativeSocialLoginApplePtrOutput)
}

func (o ClientNativeSocialLoginOutput) Facebook() ClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLogin) *ClientNativeSocialLoginFacebook { return v.Facebook }).(ClientNativeSocialLoginFacebookPtrOutput)
}

type ClientNativeSocialLoginPtrOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLogin)(nil)).Elem()
}

func (o ClientNativeSocialLoginPtrOutput) ToClientNativeSocialLoginPtrOutput() ClientNativeSocialLoginPtrOutput {
	return o
}

func (o ClientNativeSocialLoginPtrOutput) ToClientNativeSocialLoginPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginPtrOutput {
	return o
}

func (o ClientNativeSocialLoginPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientNativeSocialLogin] {
	return pulumix.Output[*ClientNativeSocialLogin]{
		OutputState: o.OutputState,
	}
}

func (o ClientNativeSocialLoginPtrOutput) Elem() ClientNativeSocialLoginOutput {
	return o.ApplyT(func(v *ClientNativeSocialLogin) ClientNativeSocialLogin {
		if v != nil {
			return *v
		}
		var ret ClientNativeSocialLogin
		return ret
	}).(ClientNativeSocialLoginOutput)
}

func (o ClientNativeSocialLoginPtrOutput) Apple() ClientNativeSocialLoginApplePtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLogin) *ClientNativeSocialLoginApple {
		if v == nil {
			return nil
		}
		return v.Apple
	}).(ClientNativeSocialLoginApplePtrOutput)
}

func (o ClientNativeSocialLoginPtrOutput) Facebook() ClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLogin) *ClientNativeSocialLoginFacebook {
		if v == nil {
			return nil
		}
		return v.Facebook
	}).(ClientNativeSocialLoginFacebookPtrOutput)
}

type ClientNativeSocialLoginApple struct {
	Enabled *bool `pulumi:"enabled"`
}

// ClientNativeSocialLoginAppleInput is an input type that accepts ClientNativeSocialLoginAppleArgs and ClientNativeSocialLoginAppleOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginAppleInput` via:
//
//	ClientNativeSocialLoginAppleArgs{...}
type ClientNativeSocialLoginAppleInput interface {
	pulumi.Input

	ToClientNativeSocialLoginAppleOutput() ClientNativeSocialLoginAppleOutput
	ToClientNativeSocialLoginAppleOutputWithContext(context.Context) ClientNativeSocialLoginAppleOutput
}

type ClientNativeSocialLoginAppleArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClientNativeSocialLoginAppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginApple)(nil)).Elem()
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginAppleOutput() ClientNativeSocialLoginAppleOutput {
	return i.ToClientNativeSocialLoginAppleOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) ClientNativeSocialLoginAppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginAppleOutput)
}

func (i ClientNativeSocialLoginAppleArgs) ToOutput(ctx context.Context) pulumix.Output[ClientNativeSocialLoginApple] {
	return pulumix.Output[ClientNativeSocialLoginApple]{
		OutputState: i.ToClientNativeSocialLoginAppleOutputWithContext(ctx).OutputState,
	}
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return i.ToClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginAppleArgs) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginAppleOutput).ToClientNativeSocialLoginApplePtrOutputWithContext(ctx)
}

// ClientNativeSocialLoginApplePtrInput is an input type that accepts ClientNativeSocialLoginAppleArgs, ClientNativeSocialLoginApplePtr and ClientNativeSocialLoginApplePtrOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginApplePtrInput` via:
//
//	        ClientNativeSocialLoginAppleArgs{...}
//
//	or:
//
//	        nil
type ClientNativeSocialLoginApplePtrInput interface {
	pulumi.Input

	ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput
	ToClientNativeSocialLoginApplePtrOutputWithContext(context.Context) ClientNativeSocialLoginApplePtrOutput
}

type clientNativeSocialLoginApplePtrType ClientNativeSocialLoginAppleArgs

func ClientNativeSocialLoginApplePtr(v *ClientNativeSocialLoginAppleArgs) ClientNativeSocialLoginApplePtrInput {
	return (*clientNativeSocialLoginApplePtrType)(v)
}

func (*clientNativeSocialLoginApplePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginApple)(nil)).Elem()
}

func (i *clientNativeSocialLoginApplePtrType) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return i.ToClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (i *clientNativeSocialLoginApplePtrType) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginApplePtrOutput)
}

func (i *clientNativeSocialLoginApplePtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientNativeSocialLoginApple] {
	return pulumix.Output[*ClientNativeSocialLoginApple]{
		OutputState: i.ToClientNativeSocialLoginApplePtrOutputWithContext(ctx).OutputState,
	}
}

type ClientNativeSocialLoginAppleOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginAppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginApple)(nil)).Elem()
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginAppleOutput() ClientNativeSocialLoginAppleOutput {
	return o
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) ClientNativeSocialLoginAppleOutput {
	return o
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return o.ToClientNativeSocialLoginApplePtrOutputWithContext(context.Background())
}

func (o ClientNativeSocialLoginAppleOutput) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientNativeSocialLoginApple) *ClientNativeSocialLoginApple {
		return &v
	}).(ClientNativeSocialLoginApplePtrOutput)
}

func (o ClientNativeSocialLoginAppleOutput) ToOutput(ctx context.Context) pulumix.Output[ClientNativeSocialLoginApple] {
	return pulumix.Output[ClientNativeSocialLoginApple]{
		OutputState: o.OutputState,
	}
}

func (o ClientNativeSocialLoginAppleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLoginApple) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClientNativeSocialLoginApplePtrOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginApplePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginApple)(nil)).Elem()
}

func (o ClientNativeSocialLoginApplePtrOutput) ToClientNativeSocialLoginApplePtrOutput() ClientNativeSocialLoginApplePtrOutput {
	return o
}

func (o ClientNativeSocialLoginApplePtrOutput) ToClientNativeSocialLoginApplePtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginApplePtrOutput {
	return o
}

func (o ClientNativeSocialLoginApplePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientNativeSocialLoginApple] {
	return pulumix.Output[*ClientNativeSocialLoginApple]{
		OutputState: o.OutputState,
	}
}

func (o ClientNativeSocialLoginApplePtrOutput) Elem() ClientNativeSocialLoginAppleOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginApple) ClientNativeSocialLoginApple {
		if v != nil {
			return *v
		}
		var ret ClientNativeSocialLoginApple
		return ret
	}).(ClientNativeSocialLoginAppleOutput)
}

func (o ClientNativeSocialLoginApplePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginApple) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClientNativeSocialLoginFacebook struct {
	Enabled *bool `pulumi:"enabled"`
}

// ClientNativeSocialLoginFacebookInput is an input type that accepts ClientNativeSocialLoginFacebookArgs and ClientNativeSocialLoginFacebookOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginFacebookInput` via:
//
//	ClientNativeSocialLoginFacebookArgs{...}
type ClientNativeSocialLoginFacebookInput interface {
	pulumi.Input

	ToClientNativeSocialLoginFacebookOutput() ClientNativeSocialLoginFacebookOutput
	ToClientNativeSocialLoginFacebookOutputWithContext(context.Context) ClientNativeSocialLoginFacebookOutput
}

type ClientNativeSocialLoginFacebookArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ClientNativeSocialLoginFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookOutput() ClientNativeSocialLoginFacebookOutput {
	return i.ToClientNativeSocialLoginFacebookOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginFacebookOutput)
}

func (i ClientNativeSocialLoginFacebookArgs) ToOutput(ctx context.Context) pulumix.Output[ClientNativeSocialLoginFacebook] {
	return pulumix.Output[ClientNativeSocialLoginFacebook]{
		OutputState: i.ToClientNativeSocialLoginFacebookOutputWithContext(ctx).OutputState,
	}
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return i.ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (i ClientNativeSocialLoginFacebookArgs) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginFacebookOutput).ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx)
}

// ClientNativeSocialLoginFacebookPtrInput is an input type that accepts ClientNativeSocialLoginFacebookArgs, ClientNativeSocialLoginFacebookPtr and ClientNativeSocialLoginFacebookPtrOutput values.
// You can construct a concrete instance of `ClientNativeSocialLoginFacebookPtrInput` via:
//
//	        ClientNativeSocialLoginFacebookArgs{...}
//
//	or:
//
//	        nil
type ClientNativeSocialLoginFacebookPtrInput interface {
	pulumi.Input

	ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput
	ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Context) ClientNativeSocialLoginFacebookPtrOutput
}

type clientNativeSocialLoginFacebookPtrType ClientNativeSocialLoginFacebookArgs

func ClientNativeSocialLoginFacebookPtr(v *ClientNativeSocialLoginFacebookArgs) ClientNativeSocialLoginFacebookPtrInput {
	return (*clientNativeSocialLoginFacebookPtrType)(v)
}

func (*clientNativeSocialLoginFacebookPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i *clientNativeSocialLoginFacebookPtrType) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return i.ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (i *clientNativeSocialLoginFacebookPtrType) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientNativeSocialLoginFacebookPtrOutput)
}

func (i *clientNativeSocialLoginFacebookPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientNativeSocialLoginFacebook] {
	return pulumix.Output[*ClientNativeSocialLoginFacebook]{
		OutputState: i.ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientNativeSocialLoginFacebookOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookOutput() ClientNativeSocialLoginFacebookOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return o.ToClientNativeSocialLoginFacebookPtrOutputWithContext(context.Background())
}

func (o ClientNativeSocialLoginFacebookOutput) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientNativeSocialLoginFacebook) *ClientNativeSocialLoginFacebook {
		return &v
	}).(ClientNativeSocialLoginFacebookPtrOutput)
}

func (o ClientNativeSocialLoginFacebookOutput) ToOutput(ctx context.Context) pulumix.Output[ClientNativeSocialLoginFacebook] {
	return pulumix.Output[ClientNativeSocialLoginFacebook]{
		OutputState: o.OutputState,
	}
}

func (o ClientNativeSocialLoginFacebookOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientNativeSocialLoginFacebook) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ClientNativeSocialLoginFacebookPtrOutput struct{ *pulumi.OutputState }

func (ClientNativeSocialLoginFacebookPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o ClientNativeSocialLoginFacebookPtrOutput) ToClientNativeSocialLoginFacebookPtrOutput() ClientNativeSocialLoginFacebookPtrOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookPtrOutput) ToClientNativeSocialLoginFacebookPtrOutputWithContext(ctx context.Context) ClientNativeSocialLoginFacebookPtrOutput {
	return o
}

func (o ClientNativeSocialLoginFacebookPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientNativeSocialLoginFacebook] {
	return pulumix.Output[*ClientNativeSocialLoginFacebook]{
		OutputState: o.OutputState,
	}
}

func (o ClientNativeSocialLoginFacebookPtrOutput) Elem() ClientNativeSocialLoginFacebookOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginFacebook) ClientNativeSocialLoginFacebook {
		if v != nil {
			return *v
		}
		var ret ClientNativeSocialLoginFacebook
		return ret
	}).(ClientNativeSocialLoginFacebookOutput)
}

func (o ClientNativeSocialLoginFacebookPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientNativeSocialLoginFacebook) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClientRefreshToken struct {
	// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
	ExpirationType string `pulumi:"expirationType"`
	// The time in seconds after which inactive refresh tokens will expire.
	IdleTokenLifetime *int `pulumi:"idleTokenLifetime"`
	// Whether inactive refresh tokens should remain valid indefinitely.
	InfiniteIdleTokenLifetime *bool `pulumi:"infiniteIdleTokenLifetime"`
	// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
	InfiniteTokenLifetime *bool `pulumi:"infiniteTokenLifetime"`
	// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
	Leeway *int `pulumi:"leeway"`
	// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
	RotationType string `pulumi:"rotationType"`
	// The absolute lifetime of a refresh token in seconds.
	TokenLifetime *int `pulumi:"tokenLifetime"`
}

// ClientRefreshTokenInput is an input type that accepts ClientRefreshTokenArgs and ClientRefreshTokenOutput values.
// You can construct a concrete instance of `ClientRefreshTokenInput` via:
//
//	ClientRefreshTokenArgs{...}
type ClientRefreshTokenInput interface {
	pulumi.Input

	ToClientRefreshTokenOutput() ClientRefreshTokenOutput
	ToClientRefreshTokenOutputWithContext(context.Context) ClientRefreshTokenOutput
}

type ClientRefreshTokenArgs struct {
	// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
	ExpirationType pulumi.StringInput `pulumi:"expirationType"`
	// The time in seconds after which inactive refresh tokens will expire.
	IdleTokenLifetime pulumi.IntPtrInput `pulumi:"idleTokenLifetime"`
	// Whether inactive refresh tokens should remain valid indefinitely.
	InfiniteIdleTokenLifetime pulumi.BoolPtrInput `pulumi:"infiniteIdleTokenLifetime"`
	// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
	InfiniteTokenLifetime pulumi.BoolPtrInput `pulumi:"infiniteTokenLifetime"`
	// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
	Leeway pulumi.IntPtrInput `pulumi:"leeway"`
	// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
	RotationType pulumi.StringInput `pulumi:"rotationType"`
	// The absolute lifetime of a refresh token in seconds.
	TokenLifetime pulumi.IntPtrInput `pulumi:"tokenLifetime"`
}

func (ClientRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRefreshToken)(nil)).Elem()
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenOutput() ClientRefreshTokenOutput {
	return i.ToClientRefreshTokenOutputWithContext(context.Background())
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenOutputWithContext(ctx context.Context) ClientRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRefreshTokenOutput)
}

func (i ClientRefreshTokenArgs) ToOutput(ctx context.Context) pulumix.Output[ClientRefreshToken] {
	return pulumix.Output[ClientRefreshToken]{
		OutputState: i.ToClientRefreshTokenOutputWithContext(ctx).OutputState,
	}
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return i.ToClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (i ClientRefreshTokenArgs) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRefreshTokenOutput).ToClientRefreshTokenPtrOutputWithContext(ctx)
}

// ClientRefreshTokenPtrInput is an input type that accepts ClientRefreshTokenArgs, ClientRefreshTokenPtr and ClientRefreshTokenPtrOutput values.
// You can construct a concrete instance of `ClientRefreshTokenPtrInput` via:
//
//	        ClientRefreshTokenArgs{...}
//
//	or:
//
//	        nil
type ClientRefreshTokenPtrInput interface {
	pulumi.Input

	ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput
	ToClientRefreshTokenPtrOutputWithContext(context.Context) ClientRefreshTokenPtrOutput
}

type clientRefreshTokenPtrType ClientRefreshTokenArgs

func ClientRefreshTokenPtr(v *ClientRefreshTokenArgs) ClientRefreshTokenPtrInput {
	return (*clientRefreshTokenPtrType)(v)
}

func (*clientRefreshTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientRefreshToken)(nil)).Elem()
}

func (i *clientRefreshTokenPtrType) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return i.ToClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (i *clientRefreshTokenPtrType) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientRefreshTokenPtrOutput)
}

func (i *clientRefreshTokenPtrType) ToOutput(ctx context.Context) pulumix.Output[*ClientRefreshToken] {
	return pulumix.Output[*ClientRefreshToken]{
		OutputState: i.ToClientRefreshTokenPtrOutputWithContext(ctx).OutputState,
	}
}

type ClientRefreshTokenOutput struct{ *pulumi.OutputState }

func (ClientRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClientRefreshToken)(nil)).Elem()
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenOutput() ClientRefreshTokenOutput {
	return o
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenOutputWithContext(ctx context.Context) ClientRefreshTokenOutput {
	return o
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return o.ToClientRefreshTokenPtrOutputWithContext(context.Background())
}

func (o ClientRefreshTokenOutput) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClientRefreshToken) *ClientRefreshToken {
		return &v
	}).(ClientRefreshTokenPtrOutput)
}

func (o ClientRefreshTokenOutput) ToOutput(ctx context.Context) pulumix.Output[ClientRefreshToken] {
	return pulumix.Output[ClientRefreshToken]{
		OutputState: o.OutputState,
	}
}

// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
func (o ClientRefreshTokenOutput) ExpirationType() pulumi.StringOutput {
	return o.ApplyT(func(v ClientRefreshToken) string { return v.ExpirationType }).(pulumi.StringOutput)
}

// The time in seconds after which inactive refresh tokens will expire.
func (o ClientRefreshTokenOutput) IdleTokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *int { return v.IdleTokenLifetime }).(pulumi.IntPtrOutput)
}

// Whether inactive refresh tokens should remain valid indefinitely.
func (o ClientRefreshTokenOutput) InfiniteIdleTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *bool { return v.InfiniteIdleTokenLifetime }).(pulumi.BoolPtrOutput)
}

// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
func (o ClientRefreshTokenOutput) InfiniteTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *bool { return v.InfiniteTokenLifetime }).(pulumi.BoolPtrOutput)
}

// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
func (o ClientRefreshTokenOutput) Leeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *int { return v.Leeway }).(pulumi.IntPtrOutput)
}

// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
func (o ClientRefreshTokenOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v ClientRefreshToken) string { return v.RotationType }).(pulumi.StringOutput)
}

// The absolute lifetime of a refresh token in seconds.
func (o ClientRefreshTokenOutput) TokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClientRefreshToken) *int { return v.TokenLifetime }).(pulumi.IntPtrOutput)
}

type ClientRefreshTokenPtrOutput struct{ *pulumi.OutputState }

func (ClientRefreshTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientRefreshToken)(nil)).Elem()
}

func (o ClientRefreshTokenPtrOutput) ToClientRefreshTokenPtrOutput() ClientRefreshTokenPtrOutput {
	return o
}

func (o ClientRefreshTokenPtrOutput) ToClientRefreshTokenPtrOutputWithContext(ctx context.Context) ClientRefreshTokenPtrOutput {
	return o
}

func (o ClientRefreshTokenPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ClientRefreshToken] {
	return pulumix.Output[*ClientRefreshToken]{
		OutputState: o.OutputState,
	}
}

func (o ClientRefreshTokenPtrOutput) Elem() ClientRefreshTokenOutput {
	return o.ApplyT(func(v *ClientRefreshToken) ClientRefreshToken {
		if v != nil {
			return *v
		}
		var ret ClientRefreshToken
		return ret
	}).(ClientRefreshTokenOutput)
}

// Options include `expiring`, `non-expiring`. Whether a refresh token will expire based on an absolute lifetime, after which the token can no longer be used. If rotation is `rotating`, this must be set to `expiring`.
func (o ClientRefreshTokenPtrOutput) ExpirationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.ExpirationType
	}).(pulumi.StringPtrOutput)
}

// The time in seconds after which inactive refresh tokens will expire.
func (o ClientRefreshTokenPtrOutput) IdleTokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.IdleTokenLifetime
	}).(pulumi.IntPtrOutput)
}

// Whether inactive refresh tokens should remain valid indefinitely.
func (o ClientRefreshTokenPtrOutput) InfiniteIdleTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *bool {
		if v == nil {
			return nil
		}
		return v.InfiniteIdleTokenLifetime
	}).(pulumi.BoolPtrOutput)
}

// Whether refresh tokens should remain valid indefinitely. If false, `tokenLifetime` should also be set.
func (o ClientRefreshTokenPtrOutput) InfiniteTokenLifetime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *bool {
		if v == nil {
			return nil
		}
		return v.InfiniteTokenLifetime
	}).(pulumi.BoolPtrOutput)
}

// The amount of time in seconds in which a refresh token may be reused without triggering reuse detection.
func (o ClientRefreshTokenPtrOutput) Leeway() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.Leeway
	}).(pulumi.IntPtrOutput)
}

// Options include `rotating`, `non-rotating`. When `rotating`, exchanging a refresh token will cause a new refresh token to be issued and the existing token will be invalidated. This allows for automatic detection of token reuse if the token is leaked.
func (o ClientRefreshTokenPtrOutput) RotationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *string {
		if v == nil {
			return nil
		}
		return &v.RotationType
	}).(pulumi.StringPtrOutput)
}

// The absolute lifetime of a refresh token in seconds.
func (o ClientRefreshTokenPtrOutput) TokenLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClientRefreshToken) *int {
		if v == nil {
			return nil
		}
		return v.TokenLifetime
	}).(pulumi.IntPtrOutput)
}

type ConnectionOptions struct {
	// ADFS URL where to fetch the metadata source.
	AdfsServer *string `pulumi:"adfsServer"`
	// List of allowed audiences.
	AllowedAudiences []string `pulumi:"allowedAudiences"`
	// Enable API Access to users.
	ApiEnableUsers *bool `pulumi:"apiEnableUsers"`
	// App ID.
	AppId *string `pulumi:"appId"`
	// OpenID Connect and Okta Workforce connections can automatically map claims received from the identity provider (IdP). You can configure this mapping through a library template provided by Auth0 or by entering your own template directly. Click [here](https://auth0.com/docs/authenticate/identity-providers/enterprise-identity-providers/configure-pkce-claim-mapping-for-oidc#map-claims-for-oidc-connections) for more info.
	AttributeMap *ConnectionOptionsAttributeMap `pulumi:"attributeMap"`
	// Query string parameters to be included as part of the generated passwordless email link.
	AuthParams map[string]string `pulumi:"authParams"`
	// Authorization endpoint.
	AuthorizationEndpoint *string `pulumi:"authorizationEndpoint"`
	// Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
	BruteForceProtection *bool `pulumi:"bruteForceProtection"`
	// The strategy's client ID.
	ClientId *string `pulumi:"clientId"`
	// The strategy's client secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// Salesforce community base URL.
	CommunityBaseUrl *string `pulumi:"communityBaseUrl"`
	// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
	Configuration map[string]interface{} `pulumi:"configuration"`
	// Proof Key for Code Exchange (PKCE) configuration settings for an OIDC or Okta Workforce connection.
	ConnectionSettings *ConnectionOptionsConnectionSettings `pulumi:"connectionSettings"`
	// A map of scripts used to integrate with a custom database.
	CustomScripts map[string]string `pulumi:"customScripts"`
	// When enabled, additional debug information will be generated.
	Debug *bool `pulumi:"debug"`
	// The key used to decrypt encrypted responses from the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
	DecryptionKey *ConnectionOptionsDecryptionKey `pulumi:"decryptionKey"`
	// Sign Request Algorithm Digest.
	DigestAlgorithm *string `pulumi:"digestAlgorithm"`
	// Indicates whether to disable the cache or not.
	DisableCache *bool `pulumi:"disableCache"`
	// Indicates whether to remove the forgot password link within the New Universal Login.
	DisableSelfServiceChangePassword *bool `pulumi:"disableSelfServiceChangePassword"`
	// When enabled, will disable sign out.
	DisableSignOut *bool `pulumi:"disableSignOut"`
	// Indicates whether to allow user sign-ups to your application.
	DisableSignup *bool `pulumi:"disableSignup"`
	// OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.
	DiscoveryUrl *string `pulumi:"discoveryUrl"`
	// Domain name.
	Domain *string `pulumi:"domain"`
	// List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.
	DomainAliases []string `pulumi:"domainAliases"`
	// Set to `true` to inject context into custom DB scripts (warning: cannot be disabled once enabled).
	EnableScriptContext *bool `pulumi:"enableScriptContext"`
	// Set to `true` to use a legacy user store.
	EnabledDatabaseCustomization *bool `pulumi:"enabledDatabaseCustomization"`
	// Custom Entity ID for the connection.
	EntityId *string `pulumi:"entityId"`
	// Federation Metadata for the ADFS connection.
	FedMetadataXml *string `pulumi:"fedMetadataXml"`
	// If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
	FieldsMap *string `pulumi:"fieldsMap"`
	// Specifies whether or not request info should be forwarded to sms gateway.
	ForwardRequestInfo *bool `pulumi:"forwardRequestInfo"`
	// Address to use as the sender.
	From *string `pulumi:"from"`
	// Defines the parameters used to generate the auth token for the custom gateway.
	GatewayAuthentication *ConnectionOptionsGatewayAuthentication `pulumi:"gatewayAuthentication"`
	// Defines a custom sms gateway to use instead of Twilio.
	GatewayUrl *string `pulumi:"gatewayUrl"`
	// Icon URL.
	IconUrl *string `pulumi:"iconUrl"`
	// Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.
	IdentityApi *string `pulumi:"identityApi"`
	// Configuration options for IDP Initiated Authentication. This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`.
	IdpInitiated *ConnectionOptionsIdpInitiated `pulumi:"idpInitiated"`
	// Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.
	ImportMode *bool `pulumi:"importMode"`
	// A list of IPs.
	Ips []string `pulumi:"ips"`
	// Issuer URL, e.g. `https://auth.example.com`.
	Issuer *string `pulumi:"issuer"`
	// JWKS URI.
	JwksUri *string `pulumi:"jwksUri"`
	// Apple Key ID.
	KeyId *string `pulumi:"keyId"`
	// By default Auth0 maps `userId` to `email`. Enabling this setting changes the behavior to map `userId` to 'id' instead. This can only be defined on a new Google Workspace connection and can not be changed once set.
	MapUserIdToId *bool `pulumi:"mapUserIdToId"`
	// Maximum number of groups to retrieve.
	MaxGroupsToRetrieve *string `pulumi:"maxGroupsToRetrieve"`
	// SID for Copilot. Used when SMS Source is Copilot.
	MessagingServiceSid *string `pulumi:"messagingServiceSid"`
	// The URL of the SAML metadata document.
	MetadataUrl *string `pulumi:"metadataUrl"`
	// The XML content for the SAML metadata document. Values within the xml will take precedence over other attributes set on the options block.
	MetadataXml *string `pulumi:"metadataXml"`
	// Configuration options for multifactor authentication.
	Mfa *ConnectionOptionsMfa `pulumi:"mfa"`
	// The public name of the email or SMS Connection. In most cases this is the same name as the connection name.
	Name *string `pulumi:"name"`
	// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.
	NonPersistentAttrs []string `pulumi:"nonPersistentAttrs"`
	// Configuration settings for password complexity.
	PasswordComplexityOptions *ConnectionOptionsPasswordComplexityOptions `pulumi:"passwordComplexityOptions"`
	// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.
	PasswordDictionary *ConnectionOptionsPasswordDictionary `pulumi:"passwordDictionary"`
	// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.
	PasswordHistories []ConnectionOptionsPasswordHistory `pulumi:"passwordHistories"`
	// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's `name`, `username`, `nickname`, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's `email`, or first part of the user's `email`.
	PasswordNoPersonalInfo *ConnectionOptionsPasswordNoPersonalInfo `pulumi:"passwordNoPersonalInfo"`
	// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
	PasswordPolicy *string `pulumi:"passwordPolicy"`
	// Ping Federate Server URL.
	PingFederateBaseUrl *string `pulumi:"pingFederateBaseUrl"`
	// Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.
	PkceEnabled *bool `pulumi:"pkceEnabled"`
	// The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.
	ProtocolBinding *string `pulumi:"protocolBinding"`
	// Defines the custom `smsGateway` provider.
	Provider *string `pulumi:"provider"`
	// Template that formats the SAML request.
	RequestTemplate *string `pulumi:"requestTemplate"`
	// Indicates whether the user is required to provide a username in addition to an email address.
	RequiresUsername *bool `pulumi:"requiresUsername"`
	// Permissions to grant to the connection. Within the Auth0 dashboard these appear under the "Attributes" and "Extended Attributes" sections. Some examples: `basicProfile`, `extProfile`, `extNestedGroups`, etc.
	Scopes []string `pulumi:"scopes"`
	// A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.
	Scripts map[string]string `pulumi:"scripts"`
	// Determines whether to sync user profile attributes (`name`, `givenName`, `familyName`, `nickname`, `picture`) at each login or only on the first login. Options include: `onEachLogin`, `onFirstLogin`. Default value: `onEachLogin`.
	SetUserRootAttributes *string `pulumi:"setUserRootAttributes"`
	// Choose how Auth0 sets the emailVerified field in the user profile.
	ShouldTrustEmailVerifiedConnection *string `pulumi:"shouldTrustEmailVerifiedConnection"`
	// SAML single login URL for the connection.
	SignInEndpoint *string `pulumi:"signInEndpoint"`
	// SAML single logout URL for the connection.
	SignOutEndpoint *string `pulumi:"signOutEndpoint"`
	// When enabled, the SAML authentication request will be signed.
	SignSamlRequest *bool `pulumi:"signSamlRequest"`
	// Sign Request Algorithm.
	SignatureAlgorithm *string `pulumi:"signatureAlgorithm"`
	// X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.
	SigningCert *string `pulumi:"signingCert"`
	// The key used to sign requests in the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
	SigningKey *ConnectionOptionsSigningKey `pulumi:"signingKey"`
	// Version 1 is deprecated, use version 2.
	StrategyVersion *int `pulumi:"strategyVersion"`
	// Subject line of the email.
	Subject *string `pulumi:"subject"`
	// Syntax of the template body.
	Syntax *string `pulumi:"syntax"`
	// Apple Team ID.
	TeamId *string `pulumi:"teamId"`
	// Body of the template.
	Template *string `pulumi:"template"`
	// Tenant domain name.
	TenantDomain *string `pulumi:"tenantDomain"`
	// Token endpoint.
	TokenEndpoint *string `pulumi:"tokenEndpoint"`
	// Configuration options for one-time passwords.
	Totp *ConnectionOptionsTotp `pulumi:"totp"`
	// SID for your Twilio account.
	TwilioSid *string `pulumi:"twilioSid"`
	// AuthToken for your Twilio account.
	TwilioToken *string `pulumi:"twilioToken"`
	// Value can be `backChannel` or `frontChannel`. Front Channel will use OIDC protocol with `response_mode=form_post` and `response_type=id_token`. Back Channel will use `response_type=code`.
	Type *string `pulumi:"type"`
	// You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.
	UpstreamParams *string `pulumi:"upstreamParams"`
	// Indicates whether to use cert auth or not.
	UseCertAuth *bool `pulumi:"useCertAuth"`
	// Indicates whether to use Kerberos or not.
	UseKerberos *bool `pulumi:"useKerberos"`
	// Whether to use WS-Fed.
	UseWsfed *bool `pulumi:"useWsfed"`
	// Attribute in the SAML token that will be mapped to the userId property in Auth0.
	UserIdAttribute *string `pulumi:"userIdAttribute"`
	// User info endpoint.
	UserinfoEndpoint *string `pulumi:"userinfoEndpoint"`
	// Validation of the minimum and maximum values allowed for a user to have as username.
	Validation *ConnectionOptionsValidation `pulumi:"validation"`
	// Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
	WaadCommonEndpoint *bool `pulumi:"waadCommonEndpoint"`
	// Protocol to use.
	WaadProtocol *string `pulumi:"waadProtocol"`
}

// ConnectionOptionsInput is an input type that accepts ConnectionOptionsArgs and ConnectionOptionsOutput values.
// You can construct a concrete instance of `ConnectionOptionsInput` via:
//
//	ConnectionOptionsArgs{...}
type ConnectionOptionsInput interface {
	pulumi.Input

	ToConnectionOptionsOutput() ConnectionOptionsOutput
	ToConnectionOptionsOutputWithContext(context.Context) ConnectionOptionsOutput
}

type ConnectionOptionsArgs struct {
	// ADFS URL where to fetch the metadata source.
	AdfsServer pulumi.StringPtrInput `pulumi:"adfsServer"`
	// List of allowed audiences.
	AllowedAudiences pulumi.StringArrayInput `pulumi:"allowedAudiences"`
	// Enable API Access to users.
	ApiEnableUsers pulumi.BoolPtrInput `pulumi:"apiEnableUsers"`
	// App ID.
	AppId pulumi.StringPtrInput `pulumi:"appId"`
	// OpenID Connect and Okta Workforce connections can automatically map claims received from the identity provider (IdP). You can configure this mapping through a library template provided by Auth0 or by entering your own template directly. Click [here](https://auth0.com/docs/authenticate/identity-providers/enterprise-identity-providers/configure-pkce-claim-mapping-for-oidc#map-claims-for-oidc-connections) for more info.
	AttributeMap ConnectionOptionsAttributeMapPtrInput `pulumi:"attributeMap"`
	// Query string parameters to be included as part of the generated passwordless email link.
	AuthParams pulumi.StringMapInput `pulumi:"authParams"`
	// Authorization endpoint.
	AuthorizationEndpoint pulumi.StringPtrInput `pulumi:"authorizationEndpoint"`
	// Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
	BruteForceProtection pulumi.BoolPtrInput `pulumi:"bruteForceProtection"`
	// The strategy's client ID.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The strategy's client secret.
	ClientSecret pulumi.StringPtrInput `pulumi:"clientSecret"`
	// Salesforce community base URL.
	CommunityBaseUrl pulumi.StringPtrInput `pulumi:"communityBaseUrl"`
	// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
	Configuration pulumi.MapInput `pulumi:"configuration"`
	// Proof Key for Code Exchange (PKCE) configuration settings for an OIDC or Okta Workforce connection.
	ConnectionSettings ConnectionOptionsConnectionSettingsPtrInput `pulumi:"connectionSettings"`
	// A map of scripts used to integrate with a custom database.
	CustomScripts pulumi.StringMapInput `pulumi:"customScripts"`
	// When enabled, additional debug information will be generated.
	Debug pulumi.BoolPtrInput `pulumi:"debug"`
	// The key used to decrypt encrypted responses from the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
	DecryptionKey ConnectionOptionsDecryptionKeyPtrInput `pulumi:"decryptionKey"`
	// Sign Request Algorithm Digest.
	DigestAlgorithm pulumi.StringPtrInput `pulumi:"digestAlgorithm"`
	// Indicates whether to disable the cache or not.
	DisableCache pulumi.BoolPtrInput `pulumi:"disableCache"`
	// Indicates whether to remove the forgot password link within the New Universal Login.
	DisableSelfServiceChangePassword pulumi.BoolPtrInput `pulumi:"disableSelfServiceChangePassword"`
	// When enabled, will disable sign out.
	DisableSignOut pulumi.BoolPtrInput `pulumi:"disableSignOut"`
	// Indicates whether to allow user sign-ups to your application.
	DisableSignup pulumi.BoolPtrInput `pulumi:"disableSignup"`
	// OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.
	DiscoveryUrl pulumi.StringPtrInput `pulumi:"discoveryUrl"`
	// Domain name.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.
	DomainAliases pulumi.StringArrayInput `pulumi:"domainAliases"`
	// Set to `true` to inject context into custom DB scripts (warning: cannot be disabled once enabled).
	EnableScriptContext pulumi.BoolPtrInput `pulumi:"enableScriptContext"`
	// Set to `true` to use a legacy user store.
	EnabledDatabaseCustomization pulumi.BoolPtrInput `pulumi:"enabledDatabaseCustomization"`
	// Custom Entity ID for the connection.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// Federation Metadata for the ADFS connection.
	FedMetadataXml pulumi.StringPtrInput `pulumi:"fedMetadataXml"`
	// If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
	FieldsMap pulumi.StringPtrInput `pulumi:"fieldsMap"`
	// Specifies whether or not request info should be forwarded to sms gateway.
	ForwardRequestInfo pulumi.BoolPtrInput `pulumi:"forwardRequestInfo"`
	// Address to use as the sender.
	From pulumi.StringPtrInput `pulumi:"from"`
	// Defines the parameters used to generate the auth token for the custom gateway.
	GatewayAuthentication ConnectionOptionsGatewayAuthenticationPtrInput `pulumi:"gatewayAuthentication"`
	// Defines a custom sms gateway to use instead of Twilio.
	GatewayUrl pulumi.StringPtrInput `pulumi:"gatewayUrl"`
	// Icon URL.
	IconUrl pulumi.StringPtrInput `pulumi:"iconUrl"`
	// Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.
	IdentityApi pulumi.StringPtrInput `pulumi:"identityApi"`
	// Configuration options for IDP Initiated Authentication. This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`.
	IdpInitiated ConnectionOptionsIdpInitiatedPtrInput `pulumi:"idpInitiated"`
	// Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.
	ImportMode pulumi.BoolPtrInput `pulumi:"importMode"`
	// A list of IPs.
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// Issuer URL, e.g. `https://auth.example.com`.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
	// JWKS URI.
	JwksUri pulumi.StringPtrInput `pulumi:"jwksUri"`
	// Apple Key ID.
	KeyId pulumi.StringPtrInput `pulumi:"keyId"`
	// By default Auth0 maps `userId` to `email`. Enabling this setting changes the behavior to map `userId` to 'id' instead. This can only be defined on a new Google Workspace connection and can not be changed once set.
	MapUserIdToId pulumi.BoolPtrInput `pulumi:"mapUserIdToId"`
	// Maximum number of groups to retrieve.
	MaxGroupsToRetrieve pulumi.StringPtrInput `pulumi:"maxGroupsToRetrieve"`
	// SID for Copilot. Used when SMS Source is Copilot.
	MessagingServiceSid pulumi.StringPtrInput `pulumi:"messagingServiceSid"`
	// The URL of the SAML metadata document.
	MetadataUrl pulumi.StringPtrInput `pulumi:"metadataUrl"`
	// The XML content for the SAML metadata document. Values within the xml will take precedence over other attributes set on the options block.
	MetadataXml pulumi.StringPtrInput `pulumi:"metadataXml"`
	// Configuration options for multifactor authentication.
	Mfa ConnectionOptionsMfaPtrInput `pulumi:"mfa"`
	// The public name of the email or SMS Connection. In most cases this is the same name as the connection name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.
	NonPersistentAttrs pulumi.StringArrayInput `pulumi:"nonPersistentAttrs"`
	// Configuration settings for password complexity.
	PasswordComplexityOptions ConnectionOptionsPasswordComplexityOptionsPtrInput `pulumi:"passwordComplexityOptions"`
	// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.
	PasswordDictionary ConnectionOptionsPasswordDictionaryPtrInput `pulumi:"passwordDictionary"`
	// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.
	PasswordHistories ConnectionOptionsPasswordHistoryArrayInput `pulumi:"passwordHistories"`
	// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's `name`, `username`, `nickname`, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's `email`, or first part of the user's `email`.
	PasswordNoPersonalInfo ConnectionOptionsPasswordNoPersonalInfoPtrInput `pulumi:"passwordNoPersonalInfo"`
	// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
	PasswordPolicy pulumi.StringPtrInput `pulumi:"passwordPolicy"`
	// Ping Federate Server URL.
	PingFederateBaseUrl pulumi.StringPtrInput `pulumi:"pingFederateBaseUrl"`
	// Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.
	PkceEnabled pulumi.BoolPtrInput `pulumi:"pkceEnabled"`
	// The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.
	ProtocolBinding pulumi.StringPtrInput `pulumi:"protocolBinding"`
	// Defines the custom `smsGateway` provider.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
	// Template that formats the SAML request.
	RequestTemplate pulumi.StringPtrInput `pulumi:"requestTemplate"`
	// Indicates whether the user is required to provide a username in addition to an email address.
	RequiresUsername pulumi.BoolPtrInput `pulumi:"requiresUsername"`
	// Permissions to grant to the connection. Within the Auth0 dashboard these appear under the "Attributes" and "Extended Attributes" sections. Some examples: `basicProfile`, `extProfile`, `extNestedGroups`, etc.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.
	Scripts pulumi.StringMapInput `pulumi:"scripts"`
	// Determines whether to sync user profile attributes (`name`, `givenName`, `familyName`, `nickname`, `picture`) at each login or only on the first login. Options include: `onEachLogin`, `onFirstLogin`. Default value: `onEachLogin`.
	SetUserRootAttributes pulumi.StringPtrInput `pulumi:"setUserRootAttributes"`
	// Choose how Auth0 sets the emailVerified field in the user profile.
	ShouldTrustEmailVerifiedConnection pulumi.StringPtrInput `pulumi:"shouldTrustEmailVerifiedConnection"`
	// SAML single login URL for the connection.
	SignInEndpoint pulumi.StringPtrInput `pulumi:"signInEndpoint"`
	// SAML single logout URL for the connection.
	SignOutEndpoint pulumi.StringPtrInput `pulumi:"signOutEndpoint"`
	// When enabled, the SAML authentication request will be signed.
	SignSamlRequest pulumi.BoolPtrInput `pulumi:"signSamlRequest"`
	// Sign Request Algorithm.
	SignatureAlgorithm pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
	// X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.
	SigningCert pulumi.StringPtrInput `pulumi:"signingCert"`
	// The key used to sign requests in the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
	SigningKey ConnectionOptionsSigningKeyPtrInput `pulumi:"signingKey"`
	// Version 1 is deprecated, use version 2.
	StrategyVersion pulumi.IntPtrInput `pulumi:"strategyVersion"`
	// Subject line of the email.
	Subject pulumi.StringPtrInput `pulumi:"subject"`
	// Syntax of the template body.
	Syntax pulumi.StringPtrInput `pulumi:"syntax"`
	// Apple Team ID.
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
	// Body of the template.
	Template pulumi.StringPtrInput `pulumi:"template"`
	// Tenant domain name.
	TenantDomain pulumi.StringPtrInput `pulumi:"tenantDomain"`
	// Token endpoint.
	TokenEndpoint pulumi.StringPtrInput `pulumi:"tokenEndpoint"`
	// Configuration options for one-time passwords.
	Totp ConnectionOptionsTotpPtrInput `pulumi:"totp"`
	// SID for your Twilio account.
	TwilioSid pulumi.StringPtrInput `pulumi:"twilioSid"`
	// AuthToken for your Twilio account.
	TwilioToken pulumi.StringPtrInput `pulumi:"twilioToken"`
	// Value can be `backChannel` or `frontChannel`. Front Channel will use OIDC protocol with `response_mode=form_post` and `response_type=id_token`. Back Channel will use `response_type=code`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.
	UpstreamParams pulumi.StringPtrInput `pulumi:"upstreamParams"`
	// Indicates whether to use cert auth or not.
	UseCertAuth pulumi.BoolPtrInput `pulumi:"useCertAuth"`
	// Indicates whether to use Kerberos or not.
	UseKerberos pulumi.BoolPtrInput `pulumi:"useKerberos"`
	// Whether to use WS-Fed.
	UseWsfed pulumi.BoolPtrInput `pulumi:"useWsfed"`
	// Attribute in the SAML token that will be mapped to the userId property in Auth0.
	UserIdAttribute pulumi.StringPtrInput `pulumi:"userIdAttribute"`
	// User info endpoint.
	UserinfoEndpoint pulumi.StringPtrInput `pulumi:"userinfoEndpoint"`
	// Validation of the minimum and maximum values allowed for a user to have as username.
	Validation ConnectionOptionsValidationPtrInput `pulumi:"validation"`
	// Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
	WaadCommonEndpoint pulumi.BoolPtrInput `pulumi:"waadCommonEndpoint"`
	// Protocol to use.
	WaadProtocol pulumi.StringPtrInput `pulumi:"waadProtocol"`
}

func (ConnectionOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptions)(nil)).Elem()
}

func (i ConnectionOptionsArgs) ToConnectionOptionsOutput() ConnectionOptionsOutput {
	return i.ToConnectionOptionsOutputWithContext(context.Background())
}

func (i ConnectionOptionsArgs) ToConnectionOptionsOutputWithContext(ctx context.Context) ConnectionOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsOutput)
}

func (i ConnectionOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptions] {
	return pulumix.Output[ConnectionOptions]{
		OutputState: i.ToConnectionOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsArgs) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return i.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsArgs) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsOutput).ToConnectionOptionsPtrOutputWithContext(ctx)
}

// ConnectionOptionsPtrInput is an input type that accepts ConnectionOptionsArgs, ConnectionOptionsPtr and ConnectionOptionsPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPtrInput` via:
//
//	        ConnectionOptionsArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput
	ToConnectionOptionsPtrOutputWithContext(context.Context) ConnectionOptionsPtrOutput
}

type connectionOptionsPtrType ConnectionOptionsArgs

func ConnectionOptionsPtr(v *ConnectionOptionsArgs) ConnectionOptionsPtrInput {
	return (*connectionOptionsPtrType)(v)
}

func (*connectionOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptions)(nil)).Elem()
}

func (i *connectionOptionsPtrType) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return i.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPtrType) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPtrOutput)
}

func (i *connectionOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptions] {
	return pulumix.Output[*ConnectionOptions]{
		OutputState: i.ToConnectionOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptions)(nil)).Elem()
}

func (o ConnectionOptionsOutput) ToConnectionOptionsOutput() ConnectionOptionsOutput {
	return o
}

func (o ConnectionOptionsOutput) ToConnectionOptionsOutputWithContext(ctx context.Context) ConnectionOptionsOutput {
	return o
}

func (o ConnectionOptionsOutput) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return o.ToConnectionOptionsPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsOutput) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptions) *ConnectionOptions {
		return &v
	}).(ConnectionOptionsPtrOutput)
}

func (o ConnectionOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptions] {
	return pulumix.Output[ConnectionOptions]{
		OutputState: o.OutputState,
	}
}

// ADFS URL where to fetch the metadata source.
func (o ConnectionOptionsOutput) AdfsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AdfsServer }).(pulumi.StringPtrOutput)
}

// List of allowed audiences.
func (o ConnectionOptionsOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

// Enable API Access to users.
func (o ConnectionOptionsOutput) ApiEnableUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ApiEnableUsers }).(pulumi.BoolPtrOutput)
}

// App ID.
func (o ConnectionOptionsOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AppId }).(pulumi.StringPtrOutput)
}

// OpenID Connect and Okta Workforce connections can automatically map claims received from the identity provider (IdP). You can configure this mapping through a library template provided by Auth0 or by entering your own template directly. Click [here](https://auth0.com/docs/authenticate/identity-providers/enterprise-identity-providers/configure-pkce-claim-mapping-for-oidc#map-claims-for-oidc-connections) for more info.
func (o ConnectionOptionsOutput) AttributeMap() ConnectionOptionsAttributeMapPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsAttributeMap { return v.AttributeMap }).(ConnectionOptionsAttributeMapPtrOutput)
}

// Query string parameters to be included as part of the generated passwordless email link.
func (o ConnectionOptionsOutput) AuthParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.AuthParams }).(pulumi.StringMapOutput)
}

// Authorization endpoint.
func (o ConnectionOptionsOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.AuthorizationEndpoint }).(pulumi.StringPtrOutput)
}

// Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
func (o ConnectionOptionsOutput) BruteForceProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.BruteForceProtection }).(pulumi.BoolPtrOutput)
}

// The strategy's client ID.
func (o ConnectionOptionsOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The strategy's client secret.
func (o ConnectionOptionsOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// Salesforce community base URL.
func (o ConnectionOptionsOutput) CommunityBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.CommunityBaseUrl }).(pulumi.StringPtrOutput)
}

// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
func (o ConnectionOptionsOutput) Configuration() pulumi.MapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]interface{} { return v.Configuration }).(pulumi.MapOutput)
}

// Proof Key for Code Exchange (PKCE) configuration settings for an OIDC or Okta Workforce connection.
func (o ConnectionOptionsOutput) ConnectionSettings() ConnectionOptionsConnectionSettingsPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsConnectionSettings { return v.ConnectionSettings }).(ConnectionOptionsConnectionSettingsPtrOutput)
}

// A map of scripts used to integrate with a custom database.
func (o ConnectionOptionsOutput) CustomScripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.CustomScripts }).(pulumi.StringMapOutput)
}

// When enabled, additional debug information will be generated.
func (o ConnectionOptionsOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.Debug }).(pulumi.BoolPtrOutput)
}

// The key used to decrypt encrypted responses from the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
func (o ConnectionOptionsOutput) DecryptionKey() ConnectionOptionsDecryptionKeyPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsDecryptionKey { return v.DecryptionKey }).(ConnectionOptionsDecryptionKeyPtrOutput)
}

// Sign Request Algorithm Digest.
func (o ConnectionOptionsOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.DigestAlgorithm }).(pulumi.StringPtrOutput)
}

// Indicates whether to disable the cache or not.
func (o ConnectionOptionsOutput) DisableCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableCache }).(pulumi.BoolPtrOutput)
}

// Indicates whether to remove the forgot password link within the New Universal Login.
func (o ConnectionOptionsOutput) DisableSelfServiceChangePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableSelfServiceChangePassword }).(pulumi.BoolPtrOutput)
}

// When enabled, will disable sign out.
func (o ConnectionOptionsOutput) DisableSignOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableSignOut }).(pulumi.BoolPtrOutput)
}

// Indicates whether to allow user sign-ups to your application.
func (o ConnectionOptionsOutput) DisableSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.DisableSignup }).(pulumi.BoolPtrOutput)
}

// OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.
func (o ConnectionOptionsOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.DiscoveryUrl }).(pulumi.StringPtrOutput)
}

// Domain name.
func (o ConnectionOptionsOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.
func (o ConnectionOptionsOutput) DomainAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.DomainAliases }).(pulumi.StringArrayOutput)
}

// Set to `true` to inject context into custom DB scripts (warning: cannot be disabled once enabled).
func (o ConnectionOptionsOutput) EnableScriptContext() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.EnableScriptContext }).(pulumi.BoolPtrOutput)
}

// Set to `true` to use a legacy user store.
func (o ConnectionOptionsOutput) EnabledDatabaseCustomization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.EnabledDatabaseCustomization }).(pulumi.BoolPtrOutput)
}

// Custom Entity ID for the connection.
func (o ConnectionOptionsOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// Federation Metadata for the ADFS connection.
func (o ConnectionOptionsOutput) FedMetadataXml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.FedMetadataXml }).(pulumi.StringPtrOutput)
}

// If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
func (o ConnectionOptionsOutput) FieldsMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.FieldsMap }).(pulumi.StringPtrOutput)
}

// Specifies whether or not request info should be forwarded to sms gateway.
func (o ConnectionOptionsOutput) ForwardRequestInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ForwardRequestInfo }).(pulumi.BoolPtrOutput)
}

// Address to use as the sender.
func (o ConnectionOptionsOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.From }).(pulumi.StringPtrOutput)
}

// Defines the parameters used to generate the auth token for the custom gateway.
func (o ConnectionOptionsOutput) GatewayAuthentication() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsGatewayAuthentication { return v.GatewayAuthentication }).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

// Defines a custom sms gateway to use instead of Twilio.
func (o ConnectionOptionsOutput) GatewayUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.GatewayUrl }).(pulumi.StringPtrOutput)
}

// Icon URL.
func (o ConnectionOptionsOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.IconUrl }).(pulumi.StringPtrOutput)
}

// Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.
func (o ConnectionOptionsOutput) IdentityApi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.IdentityApi }).(pulumi.StringPtrOutput)
}

// Configuration options for IDP Initiated Authentication. This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`.
func (o ConnectionOptionsOutput) IdpInitiated() ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsIdpInitiated { return v.IdpInitiated }).(ConnectionOptionsIdpInitiatedPtrOutput)
}

// Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.
func (o ConnectionOptionsOutput) ImportMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.ImportMode }).(pulumi.BoolPtrOutput)
}

// A list of IPs.
func (o ConnectionOptionsOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// Issuer URL, e.g. `https://auth.example.com`.
func (o ConnectionOptionsOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

// JWKS URI.
func (o ConnectionOptionsOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.JwksUri }).(pulumi.StringPtrOutput)
}

// Apple Key ID.
func (o ConnectionOptionsOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.KeyId }).(pulumi.StringPtrOutput)
}

// By default Auth0 maps `userId` to `email`. Enabling this setting changes the behavior to map `userId` to 'id' instead. This can only be defined on a new Google Workspace connection and can not be changed once set.
func (o ConnectionOptionsOutput) MapUserIdToId() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.MapUserIdToId }).(pulumi.BoolPtrOutput)
}

// Maximum number of groups to retrieve.
func (o ConnectionOptionsOutput) MaxGroupsToRetrieve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MaxGroupsToRetrieve }).(pulumi.StringPtrOutput)
}

// SID for Copilot. Used when SMS Source is Copilot.
func (o ConnectionOptionsOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MessagingServiceSid }).(pulumi.StringPtrOutput)
}

// The URL of the SAML metadata document.
func (o ConnectionOptionsOutput) MetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MetadataUrl }).(pulumi.StringPtrOutput)
}

// The XML content for the SAML metadata document. Values within the xml will take precedence over other attributes set on the options block.
func (o ConnectionOptionsOutput) MetadataXml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.MetadataXml }).(pulumi.StringPtrOutput)
}

// Configuration options for multifactor authentication.
func (o ConnectionOptionsOutput) Mfa() ConnectionOptionsMfaPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsMfa { return v.Mfa }).(ConnectionOptionsMfaPtrOutput)
}

// The public name of the email or SMS Connection. In most cases this is the same name as the connection name.
func (o ConnectionOptionsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.
func (o ConnectionOptionsOutput) NonPersistentAttrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.NonPersistentAttrs }).(pulumi.StringArrayOutput)
}

// Configuration settings for password complexity.
func (o ConnectionOptionsOutput) PasswordComplexityOptions() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordComplexityOptions {
		return v.PasswordComplexityOptions
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.
func (o ConnectionOptionsOutput) PasswordDictionary() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordDictionary { return v.PasswordDictionary }).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.
func (o ConnectionOptionsOutput) PasswordHistories() ConnectionOptionsPasswordHistoryArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []ConnectionOptionsPasswordHistory { return v.PasswordHistories }).(ConnectionOptionsPasswordHistoryArrayOutput)
}

// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's `name`, `username`, `nickname`, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's `email`, or first part of the user's `email`.
func (o ConnectionOptionsOutput) PasswordNoPersonalInfo() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsPasswordNoPersonalInfo { return v.PasswordNoPersonalInfo }).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
func (o ConnectionOptionsOutput) PasswordPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.PasswordPolicy }).(pulumi.StringPtrOutput)
}

// Ping Federate Server URL.
func (o ConnectionOptionsOutput) PingFederateBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.PingFederateBaseUrl }).(pulumi.StringPtrOutput)
}

// Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.
func (o ConnectionOptionsOutput) PkceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.PkceEnabled }).(pulumi.BoolPtrOutput)
}

// The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.
func (o ConnectionOptionsOutput) ProtocolBinding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ProtocolBinding }).(pulumi.StringPtrOutput)
}

// Defines the custom `smsGateway` provider.
func (o ConnectionOptionsOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

// Template that formats the SAML request.
func (o ConnectionOptionsOutput) RequestTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.RequestTemplate }).(pulumi.StringPtrOutput)
}

// Indicates whether the user is required to provide a username in addition to an email address.
func (o ConnectionOptionsOutput) RequiresUsername() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.RequiresUsername }).(pulumi.BoolPtrOutput)
}

// Permissions to grant to the connection. Within the Auth0 dashboard these appear under the "Attributes" and "Extended Attributes" sections. Some examples: `basicProfile`, `extProfile`, `extNestedGroups`, etc.
func (o ConnectionOptionsOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptions) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.
func (o ConnectionOptionsOutput) Scripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v ConnectionOptions) map[string]string { return v.Scripts }).(pulumi.StringMapOutput)
}

// Determines whether to sync user profile attributes (`name`, `givenName`, `familyName`, `nickname`, `picture`) at each login or only on the first login. Options include: `onEachLogin`, `onFirstLogin`. Default value: `onEachLogin`.
func (o ConnectionOptionsOutput) SetUserRootAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SetUserRootAttributes }).(pulumi.StringPtrOutput)
}

// Choose how Auth0 sets the emailVerified field in the user profile.
func (o ConnectionOptionsOutput) ShouldTrustEmailVerifiedConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.ShouldTrustEmailVerifiedConnection }).(pulumi.StringPtrOutput)
}

// SAML single login URL for the connection.
func (o ConnectionOptionsOutput) SignInEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SignInEndpoint }).(pulumi.StringPtrOutput)
}

// SAML single logout URL for the connection.
func (o ConnectionOptionsOutput) SignOutEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SignOutEndpoint }).(pulumi.StringPtrOutput)
}

// When enabled, the SAML authentication request will be signed.
func (o ConnectionOptionsOutput) SignSamlRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.SignSamlRequest }).(pulumi.BoolPtrOutput)
}

// Sign Request Algorithm.
func (o ConnectionOptionsOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

// X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.
func (o ConnectionOptionsOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.SigningCert }).(pulumi.StringPtrOutput)
}

// The key used to sign requests in the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
func (o ConnectionOptionsOutput) SigningKey() ConnectionOptionsSigningKeyPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsSigningKey { return v.SigningKey }).(ConnectionOptionsSigningKeyPtrOutput)
}

// Version 1 is deprecated, use version 2.
func (o ConnectionOptionsOutput) StrategyVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *int { return v.StrategyVersion }).(pulumi.IntPtrOutput)
}

// Subject line of the email.
func (o ConnectionOptionsOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

// Syntax of the template body.
func (o ConnectionOptionsOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Syntax }).(pulumi.StringPtrOutput)
}

// Apple Team ID.
func (o ConnectionOptionsOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

// Body of the template.
func (o ConnectionOptionsOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Template }).(pulumi.StringPtrOutput)
}

// Tenant domain name.
func (o ConnectionOptionsOutput) TenantDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TenantDomain }).(pulumi.StringPtrOutput)
}

// Token endpoint.
func (o ConnectionOptionsOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TokenEndpoint }).(pulumi.StringPtrOutput)
}

// Configuration options for one-time passwords.
func (o ConnectionOptionsOutput) Totp() ConnectionOptionsTotpPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsTotp { return v.Totp }).(ConnectionOptionsTotpPtrOutput)
}

// SID for your Twilio account.
func (o ConnectionOptionsOutput) TwilioSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TwilioSid }).(pulumi.StringPtrOutput)
}

// AuthToken for your Twilio account.
func (o ConnectionOptionsOutput) TwilioToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.TwilioToken }).(pulumi.StringPtrOutput)
}

// Value can be `backChannel` or `frontChannel`. Front Channel will use OIDC protocol with `response_mode=form_post` and `response_type=id_token`. Back Channel will use `response_type=code`.
func (o ConnectionOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.
func (o ConnectionOptionsOutput) UpstreamParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.UpstreamParams }).(pulumi.StringPtrOutput)
}

// Indicates whether to use cert auth or not.
func (o ConnectionOptionsOutput) UseCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseCertAuth }).(pulumi.BoolPtrOutput)
}

// Indicates whether to use Kerberos or not.
func (o ConnectionOptionsOutput) UseKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseKerberos }).(pulumi.BoolPtrOutput)
}

// Whether to use WS-Fed.
func (o ConnectionOptionsOutput) UseWsfed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.UseWsfed }).(pulumi.BoolPtrOutput)
}

// Attribute in the SAML token that will be mapped to the userId property in Auth0.
func (o ConnectionOptionsOutput) UserIdAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.UserIdAttribute }).(pulumi.StringPtrOutput)
}

// User info endpoint.
func (o ConnectionOptionsOutput) UserinfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.UserinfoEndpoint }).(pulumi.StringPtrOutput)
}

// Validation of the minimum and maximum values allowed for a user to have as username.
func (o ConnectionOptionsOutput) Validation() ConnectionOptionsValidationPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *ConnectionOptionsValidation { return v.Validation }).(ConnectionOptionsValidationPtrOutput)
}

// Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
func (o ConnectionOptionsOutput) WaadCommonEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *bool { return v.WaadCommonEndpoint }).(pulumi.BoolPtrOutput)
}

// Protocol to use.
func (o ConnectionOptionsOutput) WaadProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptions) *string { return v.WaadProtocol }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptions)(nil)).Elem()
}

func (o ConnectionOptionsPtrOutput) ToConnectionOptionsPtrOutput() ConnectionOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPtrOutput) ToConnectionOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptions] {
	return pulumix.Output[*ConnectionOptions]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsPtrOutput) Elem() ConnectionOptionsOutput {
	return o.ApplyT(func(v *ConnectionOptions) ConnectionOptions {
		if v != nil {
			return *v
		}
		var ret ConnectionOptions
		return ret
	}).(ConnectionOptionsOutput)
}

// ADFS URL where to fetch the metadata source.
func (o ConnectionOptionsPtrOutput) AdfsServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AdfsServer
	}).(pulumi.StringPtrOutput)
}

// List of allowed audiences.
func (o ConnectionOptionsPtrOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.AllowedAudiences
	}).(pulumi.StringArrayOutput)
}

// Enable API Access to users.
func (o ConnectionOptionsPtrOutput) ApiEnableUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ApiEnableUsers
	}).(pulumi.BoolPtrOutput)
}

// App ID.
func (o ConnectionOptionsPtrOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AppId
	}).(pulumi.StringPtrOutput)
}

// OpenID Connect and Okta Workforce connections can automatically map claims received from the identity provider (IdP). You can configure this mapping through a library template provided by Auth0 or by entering your own template directly. Click [here](https://auth0.com/docs/authenticate/identity-providers/enterprise-identity-providers/configure-pkce-claim-mapping-for-oidc#map-claims-for-oidc-connections) for more info.
func (o ConnectionOptionsPtrOutput) AttributeMap() ConnectionOptionsAttributeMapPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsAttributeMap {
		if v == nil {
			return nil
		}
		return v.AttributeMap
	}).(ConnectionOptionsAttributeMapPtrOutput)
}

// Query string parameters to be included as part of the generated passwordless email link.
func (o ConnectionOptionsPtrOutput) AuthParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.AuthParams
	}).(pulumi.StringMapOutput)
}

// Authorization endpoint.
func (o ConnectionOptionsPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to enable brute force protection, which will limit the number of signups and failed logins from a suspicious IP address.
func (o ConnectionOptionsPtrOutput) BruteForceProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.BruteForceProtection
	}).(pulumi.BoolPtrOutput)
}

// The strategy's client ID.
func (o ConnectionOptionsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The strategy's client secret.
func (o ConnectionOptionsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Salesforce community base URL.
func (o ConnectionOptionsPtrOutput) CommunityBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.CommunityBaseUrl
	}).(pulumi.StringPtrOutput)
}

// A case-sensitive map of key value pairs used as configuration variables for the `customScript`.
func (o ConnectionOptionsPtrOutput) Configuration() pulumi.MapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Configuration
	}).(pulumi.MapOutput)
}

// Proof Key for Code Exchange (PKCE) configuration settings for an OIDC or Okta Workforce connection.
func (o ConnectionOptionsPtrOutput) ConnectionSettings() ConnectionOptionsConnectionSettingsPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsConnectionSettings {
		if v == nil {
			return nil
		}
		return v.ConnectionSettings
	}).(ConnectionOptionsConnectionSettingsPtrOutput)
}

// A map of scripts used to integrate with a custom database.
func (o ConnectionOptionsPtrOutput) CustomScripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.CustomScripts
	}).(pulumi.StringMapOutput)
}

// When enabled, additional debug information will be generated.
func (o ConnectionOptionsPtrOutput) Debug() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Debug
	}).(pulumi.BoolPtrOutput)
}

// The key used to decrypt encrypted responses from the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
func (o ConnectionOptionsPtrOutput) DecryptionKey() ConnectionOptionsDecryptionKeyPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsDecryptionKey {
		if v == nil {
			return nil
		}
		return v.DecryptionKey
	}).(ConnectionOptionsDecryptionKeyPtrOutput)
}

// Sign Request Algorithm Digest.
func (o ConnectionOptionsPtrOutput) DigestAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.DigestAlgorithm
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to disable the cache or not.
func (o ConnectionOptionsPtrOutput) DisableCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableCache
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to remove the forgot password link within the New Universal Login.
func (o ConnectionOptionsPtrOutput) DisableSelfServiceChangePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSelfServiceChangePassword
	}).(pulumi.BoolPtrOutput)
}

// When enabled, will disable sign out.
func (o ConnectionOptionsPtrOutput) DisableSignOut() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSignOut
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to allow user sign-ups to your application.
func (o ConnectionOptionsPtrOutput) DisableSignup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.DisableSignup
	}).(pulumi.BoolPtrOutput)
}

// OpenID discovery URL, e.g. `https://auth.example.com/.well-known/openid-configuration`.
func (o ConnectionOptionsPtrOutput) DiscoveryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.DiscoveryUrl
	}).(pulumi.StringPtrOutput)
}

// Domain name.
func (o ConnectionOptionsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// List of the domains that can be authenticated using the identity provider. Only needed for Identifier First authentication flows.
func (o ConnectionOptionsPtrOutput) DomainAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.DomainAliases
	}).(pulumi.StringArrayOutput)
}

// Set to `true` to inject context into custom DB scripts (warning: cannot be disabled once enabled).
func (o ConnectionOptionsPtrOutput) EnableScriptContext() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnableScriptContext
	}).(pulumi.BoolPtrOutput)
}

// Set to `true` to use a legacy user store.
func (o ConnectionOptionsPtrOutput) EnabledDatabaseCustomization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnabledDatabaseCustomization
	}).(pulumi.BoolPtrOutput)
}

// Custom Entity ID for the connection.
func (o ConnectionOptionsPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// Federation Metadata for the ADFS connection.
func (o ConnectionOptionsPtrOutput) FedMetadataXml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.FedMetadataXml
	}).(pulumi.StringPtrOutput)
}

// If you're configuring a SAML enterprise connection for a non-standard PingFederate Server, you must update the attribute mappings.
func (o ConnectionOptionsPtrOutput) FieldsMap() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.FieldsMap
	}).(pulumi.StringPtrOutput)
}

// Specifies whether or not request info should be forwarded to sms gateway.
func (o ConnectionOptionsPtrOutput) ForwardRequestInfo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ForwardRequestInfo
	}).(pulumi.BoolPtrOutput)
}

// Address to use as the sender.
func (o ConnectionOptionsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

// Defines the parameters used to generate the auth token for the custom gateway.
func (o ConnectionOptionsPtrOutput) GatewayAuthentication() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsGatewayAuthentication {
		if v == nil {
			return nil
		}
		return v.GatewayAuthentication
	}).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

// Defines a custom sms gateway to use instead of Twilio.
func (o ConnectionOptionsPtrOutput) GatewayUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.GatewayUrl
	}).(pulumi.StringPtrOutput)
}

// Icon URL.
func (o ConnectionOptionsPtrOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.IconUrl
	}).(pulumi.StringPtrOutput)
}

// Azure AD Identity API. Available options are: `microsoft-identity-platform-v2.0` or `azure-active-directory-v1.0`.
func (o ConnectionOptionsPtrOutput) IdentityApi() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.IdentityApi
	}).(pulumi.StringPtrOutput)
}

// Configuration options for IDP Initiated Authentication. This is an object with the properties: `clientId`, `clientProtocol`, and `clientAuthorizeQuery`.
func (o ConnectionOptionsPtrOutput) IdpInitiated() ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsIdpInitiated {
		if v == nil {
			return nil
		}
		return v.IdpInitiated
	}).(ConnectionOptionsIdpInitiatedPtrOutput)
}

// Indicates whether you have a legacy user store and want to gradually migrate those users to the Auth0 user store.
func (o ConnectionOptionsPtrOutput) ImportMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.ImportMode
	}).(pulumi.BoolPtrOutput)
}

// A list of IPs.
func (o ConnectionOptionsPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// Issuer URL, e.g. `https://auth.example.com`.
func (o ConnectionOptionsPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

// JWKS URI.
func (o ConnectionOptionsPtrOutput) JwksUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.JwksUri
	}).(pulumi.StringPtrOutput)
}

// Apple Key ID.
func (o ConnectionOptionsPtrOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.KeyId
	}).(pulumi.StringPtrOutput)
}

// By default Auth0 maps `userId` to `email`. Enabling this setting changes the behavior to map `userId` to 'id' instead. This can only be defined on a new Google Workspace connection and can not be changed once set.
func (o ConnectionOptionsPtrOutput) MapUserIdToId() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.MapUserIdToId
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of groups to retrieve.
func (o ConnectionOptionsPtrOutput) MaxGroupsToRetrieve() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MaxGroupsToRetrieve
	}).(pulumi.StringPtrOutput)
}

// SID for Copilot. Used when SMS Source is Copilot.
func (o ConnectionOptionsPtrOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MessagingServiceSid
	}).(pulumi.StringPtrOutput)
}

// The URL of the SAML metadata document.
func (o ConnectionOptionsPtrOutput) MetadataUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MetadataUrl
	}).(pulumi.StringPtrOutput)
}

// The XML content for the SAML metadata document. Values within the xml will take precedence over other attributes set on the options block.
func (o ConnectionOptionsPtrOutput) MetadataXml() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.MetadataXml
	}).(pulumi.StringPtrOutput)
}

// Configuration options for multifactor authentication.
func (o ConnectionOptionsPtrOutput) Mfa() ConnectionOptionsMfaPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsMfa {
		if v == nil {
			return nil
		}
		return v.Mfa
	}).(ConnectionOptionsMfaPtrOutput)
}

// The public name of the email or SMS Connection. In most cases this is the same name as the connection name.
func (o ConnectionOptionsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// If there are user fields that should not be stored in Auth0 databases due to privacy reasons, you can add them to the DenyList here.
func (o ConnectionOptionsPtrOutput) NonPersistentAttrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.NonPersistentAttrs
	}).(pulumi.StringArrayOutput)
}

// Configuration settings for password complexity.
func (o ConnectionOptionsPtrOutput) PasswordComplexityOptions() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordComplexityOptions {
		if v == nil {
			return nil
		}
		return v.PasswordComplexityOptions
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

// Configuration settings for the password dictionary check, which does not allow passwords that are part of the password dictionary.
func (o ConnectionOptionsPtrOutput) PasswordDictionary() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordDictionary {
		if v == nil {
			return nil
		}
		return v.PasswordDictionary
	}).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

// Configuration settings for the password history that is maintained for each user to prevent the reuse of passwords.
func (o ConnectionOptionsPtrOutput) PasswordHistories() ConnectionOptionsPasswordHistoryArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []ConnectionOptionsPasswordHistory {
		if v == nil {
			return nil
		}
		return v.PasswordHistories
	}).(ConnectionOptionsPasswordHistoryArrayOutput)
}

// Configuration settings for the password personal info check, which does not allow passwords that contain any part of the user's personal data, including user's `name`, `username`, `nickname`, `user_metadata.name`, `user_metadata.first`, `user_metadata.last`, user's `email`, or first part of the user's `email`.
func (o ConnectionOptionsPtrOutput) PasswordNoPersonalInfo() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsPasswordNoPersonalInfo {
		if v == nil {
			return nil
		}
		return v.PasswordNoPersonalInfo
	}).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

// Indicates level of password strength to enforce during authentication. A strong password policy will make it difficult, if not improbable, for someone to guess a password through either manual or automated means. Options include `none`, `low`, `fair`, `good`, `excellent`.
func (o ConnectionOptionsPtrOutput) PasswordPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.PasswordPolicy
	}).(pulumi.StringPtrOutput)
}

// Ping Federate Server URL.
func (o ConnectionOptionsPtrOutput) PingFederateBaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.PingFederateBaseUrl
	}).(pulumi.StringPtrOutput)
}

// Enables Proof Key for Code Exchange (PKCE) functionality for OAuth2 connections.
func (o ConnectionOptionsPtrOutput) PkceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.PkceEnabled
	}).(pulumi.BoolPtrOutput)
}

// The SAML Response Binding: how the SAML token is received by Auth0 from the IdP.
func (o ConnectionOptionsPtrOutput) ProtocolBinding() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ProtocolBinding
	}).(pulumi.StringPtrOutput)
}

// Defines the custom `smsGateway` provider.
func (o ConnectionOptionsPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

// Template that formats the SAML request.
func (o ConnectionOptionsPtrOutput) RequestTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.RequestTemplate
	}).(pulumi.StringPtrOutput)
}

// Indicates whether the user is required to provide a username in addition to an email address.
func (o ConnectionOptionsPtrOutput) RequiresUsername() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.RequiresUsername
	}).(pulumi.BoolPtrOutput)
}

// Permissions to grant to the connection. Within the Auth0 dashboard these appear under the "Attributes" and "Extended Attributes" sections. Some examples: `basicProfile`, `extProfile`, `extNestedGroups`, etc.
func (o ConnectionOptionsPtrOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptions) []string {
		if v == nil {
			return nil
		}
		return v.Scopes
	}).(pulumi.StringArrayOutput)
}

// A map of scripts used for an OAuth connection. Only accepts a `fetchUserProfile` script.
func (o ConnectionOptionsPtrOutput) Scripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConnectionOptions) map[string]string {
		if v == nil {
			return nil
		}
		return v.Scripts
	}).(pulumi.StringMapOutput)
}

// Determines whether to sync user profile attributes (`name`, `givenName`, `familyName`, `nickname`, `picture`) at each login or only on the first login. Options include: `onEachLogin`, `onFirstLogin`. Default value: `onEachLogin`.
func (o ConnectionOptionsPtrOutput) SetUserRootAttributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SetUserRootAttributes
	}).(pulumi.StringPtrOutput)
}

// Choose how Auth0 sets the emailVerified field in the user profile.
func (o ConnectionOptionsPtrOutput) ShouldTrustEmailVerifiedConnection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.ShouldTrustEmailVerifiedConnection
	}).(pulumi.StringPtrOutput)
}

// SAML single login URL for the connection.
func (o ConnectionOptionsPtrOutput) SignInEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignInEndpoint
	}).(pulumi.StringPtrOutput)
}

// SAML single logout URL for the connection.
func (o ConnectionOptionsPtrOutput) SignOutEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignOutEndpoint
	}).(pulumi.StringPtrOutput)
}

// When enabled, the SAML authentication request will be signed.
func (o ConnectionOptionsPtrOutput) SignSamlRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.SignSamlRequest
	}).(pulumi.BoolPtrOutput)
}

// Sign Request Algorithm.
func (o ConnectionOptionsPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

// X.509 signing certificate (encoded in PEM or CER) you retrieved from the IdP, Base64-encoded.
func (o ConnectionOptionsPtrOutput) SigningCert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.SigningCert
	}).(pulumi.StringPtrOutput)
}

// The key used to sign requests in the connection. Uses the `key` and `cert` properties to provide the private key and certificate respectively.
func (o ConnectionOptionsPtrOutput) SigningKey() ConnectionOptionsSigningKeyPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsSigningKey {
		if v == nil {
			return nil
		}
		return v.SigningKey
	}).(ConnectionOptionsSigningKeyPtrOutput)
}

// Version 1 is deprecated, use version 2.
func (o ConnectionOptionsPtrOutput) StrategyVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *int {
		if v == nil {
			return nil
		}
		return v.StrategyVersion
	}).(pulumi.IntPtrOutput)
}

// Subject line of the email.
func (o ConnectionOptionsPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

// Syntax of the template body.
func (o ConnectionOptionsPtrOutput) Syntax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Syntax
	}).(pulumi.StringPtrOutput)
}

// Apple Team ID.
func (o ConnectionOptionsPtrOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TeamId
	}).(pulumi.StringPtrOutput)
}

// Body of the template.
func (o ConnectionOptionsPtrOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Template
	}).(pulumi.StringPtrOutput)
}

// Tenant domain name.
func (o ConnectionOptionsPtrOutput) TenantDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TenantDomain
	}).(pulumi.StringPtrOutput)
}

// Token endpoint.
func (o ConnectionOptionsPtrOutput) TokenEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TokenEndpoint
	}).(pulumi.StringPtrOutput)
}

// Configuration options for one-time passwords.
func (o ConnectionOptionsPtrOutput) Totp() ConnectionOptionsTotpPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsTotp {
		if v == nil {
			return nil
		}
		return v.Totp
	}).(ConnectionOptionsTotpPtrOutput)
}

// SID for your Twilio account.
func (o ConnectionOptionsPtrOutput) TwilioSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TwilioSid
	}).(pulumi.StringPtrOutput)
}

// AuthToken for your Twilio account.
func (o ConnectionOptionsPtrOutput) TwilioToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.TwilioToken
	}).(pulumi.StringPtrOutput)
}

// Value can be `backChannel` or `frontChannel`. Front Channel will use OIDC protocol with `response_mode=form_post` and `response_type=id_token`. Back Channel will use `response_type=code`.
func (o ConnectionOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// You can pass provider-specific parameters to an identity provider during authentication. The values can either be static per connection or dynamic per user.
func (o ConnectionOptionsPtrOutput) UpstreamParams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.UpstreamParams
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to use cert auth or not.
func (o ConnectionOptionsPtrOutput) UseCertAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseCertAuth
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to use Kerberos or not.
func (o ConnectionOptionsPtrOutput) UseKerberos() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseKerberos
	}).(pulumi.BoolPtrOutput)
}

// Whether to use WS-Fed.
func (o ConnectionOptionsPtrOutput) UseWsfed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.UseWsfed
	}).(pulumi.BoolPtrOutput)
}

// Attribute in the SAML token that will be mapped to the userId property in Auth0.
func (o ConnectionOptionsPtrOutput) UserIdAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.UserIdAttribute
	}).(pulumi.StringPtrOutput)
}

// User info endpoint.
func (o ConnectionOptionsPtrOutput) UserinfoEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.UserinfoEndpoint
	}).(pulumi.StringPtrOutput)
}

// Validation of the minimum and maximum values allowed for a user to have as username.
func (o ConnectionOptionsPtrOutput) Validation() ConnectionOptionsValidationPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *ConnectionOptionsValidation {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(ConnectionOptionsValidationPtrOutput)
}

// Indicates whether to use the common endpoint rather than the default endpoint. Typically enabled if you're using this for a multi-tenant application in Azure AD.
func (o ConnectionOptionsPtrOutput) WaadCommonEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *bool {
		if v == nil {
			return nil
		}
		return v.WaadCommonEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Protocol to use.
func (o ConnectionOptionsPtrOutput) WaadProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptions) *string {
		if v == nil {
			return nil
		}
		return v.WaadProtocol
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsAttributeMap struct {
	Attributes    *string `pulumi:"attributes"`
	MappingMode   string  `pulumi:"mappingMode"`
	UserinfoScope *string `pulumi:"userinfoScope"`
}

// ConnectionOptionsAttributeMapInput is an input type that accepts ConnectionOptionsAttributeMap and ConnectionOptionsAttributeMapOutput values.
// You can construct a concrete instance of `ConnectionOptionsAttributeMapInput` via:
//
//	ConnectionOptionsAttributeMap{ "key": ConnectionOptionsAttributeArgs{...} }
type ConnectionOptionsAttributeMapInput interface {
	pulumi.Input

	ToConnectionOptionsAttributeMapOutput() ConnectionOptionsAttributeMapOutput
	ToConnectionOptionsAttributeMapOutputWithContext(context.Context) ConnectionOptionsAttributeMapOutput
}

type ConnectionOptionsAttributeMapArgs struct {
	Attributes    pulumi.StringPtrInput `pulumi:"attributes"`
	MappingMode   pulumi.StringInput    `pulumi:"mappingMode"`
	UserinfoScope pulumi.StringPtrInput `pulumi:"userinfoScope"`
}

func (ConnectionOptionsAttributeMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsAttributeMap)(nil)).Elem()
}

func (i ConnectionOptionsAttributeMapArgs) ToConnectionOptionsAttributeMapOutput() ConnectionOptionsAttributeMapOutput {
	return i.ToConnectionOptionsAttributeMapOutputWithContext(context.Background())
}

func (i ConnectionOptionsAttributeMapArgs) ToConnectionOptionsAttributeMapOutputWithContext(ctx context.Context) ConnectionOptionsAttributeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsAttributeMapOutput)
}

func (i ConnectionOptionsAttributeMapArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsAttributeMap] {
	return pulumix.Output[ConnectionOptionsAttributeMap]{
		OutputState: i.ToConnectionOptionsAttributeMapOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsAttributeMapArgs) ToConnectionOptionsAttributeMapPtrOutput() ConnectionOptionsAttributeMapPtrOutput {
	return i.ToConnectionOptionsAttributeMapPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsAttributeMapArgs) ToConnectionOptionsAttributeMapPtrOutputWithContext(ctx context.Context) ConnectionOptionsAttributeMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsAttributeMapOutput).ToConnectionOptionsAttributeMapPtrOutputWithContext(ctx)
}

// ConnectionOptionsAttributeMapPtrInput is an input type that accepts ConnectionOptionsAttributeMapArgs, ConnectionOptionsAttributeMapPtr and ConnectionOptionsAttributeMapPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsAttributeMapPtrInput` via:
//
//	        ConnectionOptionsAttributeMapArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsAttributeMapPtrInput interface {
	pulumi.Input

	ToConnectionOptionsAttributeMapPtrOutput() ConnectionOptionsAttributeMapPtrOutput
	ToConnectionOptionsAttributeMapPtrOutputWithContext(context.Context) ConnectionOptionsAttributeMapPtrOutput
}

type connectionOptionsAttributeMapPtrType ConnectionOptionsAttributeMapArgs

func ConnectionOptionsAttributeMapPtr(v *ConnectionOptionsAttributeMapArgs) ConnectionOptionsAttributeMapPtrInput {
	return (*connectionOptionsAttributeMapPtrType)(v)
}

func (*connectionOptionsAttributeMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsAttributeMap)(nil)).Elem()
}

func (i *connectionOptionsAttributeMapPtrType) ToConnectionOptionsAttributeMapPtrOutput() ConnectionOptionsAttributeMapPtrOutput {
	return i.ToConnectionOptionsAttributeMapPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsAttributeMapPtrType) ToConnectionOptionsAttributeMapPtrOutputWithContext(ctx context.Context) ConnectionOptionsAttributeMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsAttributeMapPtrOutput)
}

func (i *connectionOptionsAttributeMapPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsAttributeMap] {
	return pulumix.Output[*ConnectionOptionsAttributeMap]{
		OutputState: i.ToConnectionOptionsAttributeMapPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsAttributeMapOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsAttributeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsAttributeMap)(nil)).Elem()
}

func (o ConnectionOptionsAttributeMapOutput) ToConnectionOptionsAttributeMapOutput() ConnectionOptionsAttributeMapOutput {
	return o
}

func (o ConnectionOptionsAttributeMapOutput) ToConnectionOptionsAttributeMapOutputWithContext(ctx context.Context) ConnectionOptionsAttributeMapOutput {
	return o
}

func (o ConnectionOptionsAttributeMapOutput) ToConnectionOptionsAttributeMapPtrOutput() ConnectionOptionsAttributeMapPtrOutput {
	return o.ToConnectionOptionsAttributeMapPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsAttributeMapOutput) ToConnectionOptionsAttributeMapPtrOutputWithContext(ctx context.Context) ConnectionOptionsAttributeMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsAttributeMap) *ConnectionOptionsAttributeMap {
		return &v
	}).(ConnectionOptionsAttributeMapPtrOutput)
}

func (o ConnectionOptionsAttributeMapOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsAttributeMap] {
	return pulumix.Output[ConnectionOptionsAttributeMap]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsAttributeMapOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsAttributeMap) *string { return v.Attributes }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsAttributeMapOutput) MappingMode() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionOptionsAttributeMap) string { return v.MappingMode }).(pulumi.StringOutput)
}

func (o ConnectionOptionsAttributeMapOutput) UserinfoScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsAttributeMap) *string { return v.UserinfoScope }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsAttributeMapPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsAttributeMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsAttributeMap)(nil)).Elem()
}

func (o ConnectionOptionsAttributeMapPtrOutput) ToConnectionOptionsAttributeMapPtrOutput() ConnectionOptionsAttributeMapPtrOutput {
	return o
}

func (o ConnectionOptionsAttributeMapPtrOutput) ToConnectionOptionsAttributeMapPtrOutputWithContext(ctx context.Context) ConnectionOptionsAttributeMapPtrOutput {
	return o
}

func (o ConnectionOptionsAttributeMapPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsAttributeMap] {
	return pulumix.Output[*ConnectionOptionsAttributeMap]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsAttributeMapPtrOutput) Elem() ConnectionOptionsAttributeMapOutput {
	return o.ApplyT(func(v *ConnectionOptionsAttributeMap) ConnectionOptionsAttributeMap {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsAttributeMap
		return ret
	}).(ConnectionOptionsAttributeMapOutput)
}

func (o ConnectionOptionsAttributeMapPtrOutput) Attributes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsAttributeMap) *string {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsAttributeMapPtrOutput) MappingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsAttributeMap) *string {
		if v == nil {
			return nil
		}
		return &v.MappingMode
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsAttributeMapPtrOutput) UserinfoScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsAttributeMap) *string {
		if v == nil {
			return nil
		}
		return v.UserinfoScope
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsConnectionSettings struct {
	Pkce string `pulumi:"pkce"`
}

// ConnectionOptionsConnectionSettingsInput is an input type that accepts ConnectionOptionsConnectionSettingsArgs and ConnectionOptionsConnectionSettingsOutput values.
// You can construct a concrete instance of `ConnectionOptionsConnectionSettingsInput` via:
//
//	ConnectionOptionsConnectionSettingsArgs{...}
type ConnectionOptionsConnectionSettingsInput interface {
	pulumi.Input

	ToConnectionOptionsConnectionSettingsOutput() ConnectionOptionsConnectionSettingsOutput
	ToConnectionOptionsConnectionSettingsOutputWithContext(context.Context) ConnectionOptionsConnectionSettingsOutput
}

type ConnectionOptionsConnectionSettingsArgs struct {
	Pkce pulumi.StringInput `pulumi:"pkce"`
}

func (ConnectionOptionsConnectionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsConnectionSettings)(nil)).Elem()
}

func (i ConnectionOptionsConnectionSettingsArgs) ToConnectionOptionsConnectionSettingsOutput() ConnectionOptionsConnectionSettingsOutput {
	return i.ToConnectionOptionsConnectionSettingsOutputWithContext(context.Background())
}

func (i ConnectionOptionsConnectionSettingsArgs) ToConnectionOptionsConnectionSettingsOutputWithContext(ctx context.Context) ConnectionOptionsConnectionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsConnectionSettingsOutput)
}

func (i ConnectionOptionsConnectionSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsConnectionSettings] {
	return pulumix.Output[ConnectionOptionsConnectionSettings]{
		OutputState: i.ToConnectionOptionsConnectionSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsConnectionSettingsArgs) ToConnectionOptionsConnectionSettingsPtrOutput() ConnectionOptionsConnectionSettingsPtrOutput {
	return i.ToConnectionOptionsConnectionSettingsPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsConnectionSettingsArgs) ToConnectionOptionsConnectionSettingsPtrOutputWithContext(ctx context.Context) ConnectionOptionsConnectionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsConnectionSettingsOutput).ToConnectionOptionsConnectionSettingsPtrOutputWithContext(ctx)
}

// ConnectionOptionsConnectionSettingsPtrInput is an input type that accepts ConnectionOptionsConnectionSettingsArgs, ConnectionOptionsConnectionSettingsPtr and ConnectionOptionsConnectionSettingsPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsConnectionSettingsPtrInput` via:
//
//	        ConnectionOptionsConnectionSettingsArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsConnectionSettingsPtrInput interface {
	pulumi.Input

	ToConnectionOptionsConnectionSettingsPtrOutput() ConnectionOptionsConnectionSettingsPtrOutput
	ToConnectionOptionsConnectionSettingsPtrOutputWithContext(context.Context) ConnectionOptionsConnectionSettingsPtrOutput
}

type connectionOptionsConnectionSettingsPtrType ConnectionOptionsConnectionSettingsArgs

func ConnectionOptionsConnectionSettingsPtr(v *ConnectionOptionsConnectionSettingsArgs) ConnectionOptionsConnectionSettingsPtrInput {
	return (*connectionOptionsConnectionSettingsPtrType)(v)
}

func (*connectionOptionsConnectionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsConnectionSettings)(nil)).Elem()
}

func (i *connectionOptionsConnectionSettingsPtrType) ToConnectionOptionsConnectionSettingsPtrOutput() ConnectionOptionsConnectionSettingsPtrOutput {
	return i.ToConnectionOptionsConnectionSettingsPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsConnectionSettingsPtrType) ToConnectionOptionsConnectionSettingsPtrOutputWithContext(ctx context.Context) ConnectionOptionsConnectionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsConnectionSettingsPtrOutput)
}

func (i *connectionOptionsConnectionSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsConnectionSettings] {
	return pulumix.Output[*ConnectionOptionsConnectionSettings]{
		OutputState: i.ToConnectionOptionsConnectionSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsConnectionSettingsOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsConnectionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsConnectionSettings)(nil)).Elem()
}

func (o ConnectionOptionsConnectionSettingsOutput) ToConnectionOptionsConnectionSettingsOutput() ConnectionOptionsConnectionSettingsOutput {
	return o
}

func (o ConnectionOptionsConnectionSettingsOutput) ToConnectionOptionsConnectionSettingsOutputWithContext(ctx context.Context) ConnectionOptionsConnectionSettingsOutput {
	return o
}

func (o ConnectionOptionsConnectionSettingsOutput) ToConnectionOptionsConnectionSettingsPtrOutput() ConnectionOptionsConnectionSettingsPtrOutput {
	return o.ToConnectionOptionsConnectionSettingsPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsConnectionSettingsOutput) ToConnectionOptionsConnectionSettingsPtrOutputWithContext(ctx context.Context) ConnectionOptionsConnectionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsConnectionSettings) *ConnectionOptionsConnectionSettings {
		return &v
	}).(ConnectionOptionsConnectionSettingsPtrOutput)
}

func (o ConnectionOptionsConnectionSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsConnectionSettings] {
	return pulumix.Output[ConnectionOptionsConnectionSettings]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsConnectionSettingsOutput) Pkce() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionOptionsConnectionSettings) string { return v.Pkce }).(pulumi.StringOutput)
}

type ConnectionOptionsConnectionSettingsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsConnectionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsConnectionSettings)(nil)).Elem()
}

func (o ConnectionOptionsConnectionSettingsPtrOutput) ToConnectionOptionsConnectionSettingsPtrOutput() ConnectionOptionsConnectionSettingsPtrOutput {
	return o
}

func (o ConnectionOptionsConnectionSettingsPtrOutput) ToConnectionOptionsConnectionSettingsPtrOutputWithContext(ctx context.Context) ConnectionOptionsConnectionSettingsPtrOutput {
	return o
}

func (o ConnectionOptionsConnectionSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsConnectionSettings] {
	return pulumix.Output[*ConnectionOptionsConnectionSettings]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsConnectionSettingsPtrOutput) Elem() ConnectionOptionsConnectionSettingsOutput {
	return o.ApplyT(func(v *ConnectionOptionsConnectionSettings) ConnectionOptionsConnectionSettings {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsConnectionSettings
		return ret
	}).(ConnectionOptionsConnectionSettingsOutput)
}

func (o ConnectionOptionsConnectionSettingsPtrOutput) Pkce() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsConnectionSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Pkce
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsDecryptionKey struct {
	Cert string `pulumi:"cert"`
	Key  string `pulumi:"key"`
}

// ConnectionOptionsDecryptionKeyInput is an input type that accepts ConnectionOptionsDecryptionKeyArgs and ConnectionOptionsDecryptionKeyOutput values.
// You can construct a concrete instance of `ConnectionOptionsDecryptionKeyInput` via:
//
//	ConnectionOptionsDecryptionKeyArgs{...}
type ConnectionOptionsDecryptionKeyInput interface {
	pulumi.Input

	ToConnectionOptionsDecryptionKeyOutput() ConnectionOptionsDecryptionKeyOutput
	ToConnectionOptionsDecryptionKeyOutputWithContext(context.Context) ConnectionOptionsDecryptionKeyOutput
}

type ConnectionOptionsDecryptionKeyArgs struct {
	Cert pulumi.StringInput `pulumi:"cert"`
	Key  pulumi.StringInput `pulumi:"key"`
}

func (ConnectionOptionsDecryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsDecryptionKey)(nil)).Elem()
}

func (i ConnectionOptionsDecryptionKeyArgs) ToConnectionOptionsDecryptionKeyOutput() ConnectionOptionsDecryptionKeyOutput {
	return i.ToConnectionOptionsDecryptionKeyOutputWithContext(context.Background())
}

func (i ConnectionOptionsDecryptionKeyArgs) ToConnectionOptionsDecryptionKeyOutputWithContext(ctx context.Context) ConnectionOptionsDecryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsDecryptionKeyOutput)
}

func (i ConnectionOptionsDecryptionKeyArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsDecryptionKey] {
	return pulumix.Output[ConnectionOptionsDecryptionKey]{
		OutputState: i.ToConnectionOptionsDecryptionKeyOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsDecryptionKeyArgs) ToConnectionOptionsDecryptionKeyPtrOutput() ConnectionOptionsDecryptionKeyPtrOutput {
	return i.ToConnectionOptionsDecryptionKeyPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsDecryptionKeyArgs) ToConnectionOptionsDecryptionKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsDecryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsDecryptionKeyOutput).ToConnectionOptionsDecryptionKeyPtrOutputWithContext(ctx)
}

// ConnectionOptionsDecryptionKeyPtrInput is an input type that accepts ConnectionOptionsDecryptionKeyArgs, ConnectionOptionsDecryptionKeyPtr and ConnectionOptionsDecryptionKeyPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsDecryptionKeyPtrInput` via:
//
//	        ConnectionOptionsDecryptionKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsDecryptionKeyPtrInput interface {
	pulumi.Input

	ToConnectionOptionsDecryptionKeyPtrOutput() ConnectionOptionsDecryptionKeyPtrOutput
	ToConnectionOptionsDecryptionKeyPtrOutputWithContext(context.Context) ConnectionOptionsDecryptionKeyPtrOutput
}

type connectionOptionsDecryptionKeyPtrType ConnectionOptionsDecryptionKeyArgs

func ConnectionOptionsDecryptionKeyPtr(v *ConnectionOptionsDecryptionKeyArgs) ConnectionOptionsDecryptionKeyPtrInput {
	return (*connectionOptionsDecryptionKeyPtrType)(v)
}

func (*connectionOptionsDecryptionKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsDecryptionKey)(nil)).Elem()
}

func (i *connectionOptionsDecryptionKeyPtrType) ToConnectionOptionsDecryptionKeyPtrOutput() ConnectionOptionsDecryptionKeyPtrOutput {
	return i.ToConnectionOptionsDecryptionKeyPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsDecryptionKeyPtrType) ToConnectionOptionsDecryptionKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsDecryptionKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsDecryptionKeyPtrOutput)
}

func (i *connectionOptionsDecryptionKeyPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsDecryptionKey] {
	return pulumix.Output[*ConnectionOptionsDecryptionKey]{
		OutputState: i.ToConnectionOptionsDecryptionKeyPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsDecryptionKeyOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsDecryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsDecryptionKey)(nil)).Elem()
}

func (o ConnectionOptionsDecryptionKeyOutput) ToConnectionOptionsDecryptionKeyOutput() ConnectionOptionsDecryptionKeyOutput {
	return o
}

func (o ConnectionOptionsDecryptionKeyOutput) ToConnectionOptionsDecryptionKeyOutputWithContext(ctx context.Context) ConnectionOptionsDecryptionKeyOutput {
	return o
}

func (o ConnectionOptionsDecryptionKeyOutput) ToConnectionOptionsDecryptionKeyPtrOutput() ConnectionOptionsDecryptionKeyPtrOutput {
	return o.ToConnectionOptionsDecryptionKeyPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsDecryptionKeyOutput) ToConnectionOptionsDecryptionKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsDecryptionKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsDecryptionKey) *ConnectionOptionsDecryptionKey {
		return &v
	}).(ConnectionOptionsDecryptionKeyPtrOutput)
}

func (o ConnectionOptionsDecryptionKeyOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsDecryptionKey] {
	return pulumix.Output[ConnectionOptionsDecryptionKey]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsDecryptionKeyOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionOptionsDecryptionKey) string { return v.Cert }).(pulumi.StringOutput)
}

func (o ConnectionOptionsDecryptionKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionOptionsDecryptionKey) string { return v.Key }).(pulumi.StringOutput)
}

type ConnectionOptionsDecryptionKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsDecryptionKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsDecryptionKey)(nil)).Elem()
}

func (o ConnectionOptionsDecryptionKeyPtrOutput) ToConnectionOptionsDecryptionKeyPtrOutput() ConnectionOptionsDecryptionKeyPtrOutput {
	return o
}

func (o ConnectionOptionsDecryptionKeyPtrOutput) ToConnectionOptionsDecryptionKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsDecryptionKeyPtrOutput {
	return o
}

func (o ConnectionOptionsDecryptionKeyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsDecryptionKey] {
	return pulumix.Output[*ConnectionOptionsDecryptionKey]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsDecryptionKeyPtrOutput) Elem() ConnectionOptionsDecryptionKeyOutput {
	return o.ApplyT(func(v *ConnectionOptionsDecryptionKey) ConnectionOptionsDecryptionKey {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsDecryptionKey
		return ret
	}).(ConnectionOptionsDecryptionKeyOutput)
}

func (o ConnectionOptionsDecryptionKeyPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsDecryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsDecryptionKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsDecryptionKey) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsGatewayAuthentication struct {
	Audience            *string `pulumi:"audience"`
	Method              *string `pulumi:"method"`
	Secret              *string `pulumi:"secret"`
	SecretBase64Encoded *bool   `pulumi:"secretBase64Encoded"`
	Subject             *string `pulumi:"subject"`
}

// ConnectionOptionsGatewayAuthenticationInput is an input type that accepts ConnectionOptionsGatewayAuthenticationArgs and ConnectionOptionsGatewayAuthenticationOutput values.
// You can construct a concrete instance of `ConnectionOptionsGatewayAuthenticationInput` via:
//
//	ConnectionOptionsGatewayAuthenticationArgs{...}
type ConnectionOptionsGatewayAuthenticationInput interface {
	pulumi.Input

	ToConnectionOptionsGatewayAuthenticationOutput() ConnectionOptionsGatewayAuthenticationOutput
	ToConnectionOptionsGatewayAuthenticationOutputWithContext(context.Context) ConnectionOptionsGatewayAuthenticationOutput
}

type ConnectionOptionsGatewayAuthenticationArgs struct {
	Audience            pulumi.StringPtrInput `pulumi:"audience"`
	Method              pulumi.StringPtrInput `pulumi:"method"`
	Secret              pulumi.StringPtrInput `pulumi:"secret"`
	SecretBase64Encoded pulumi.BoolPtrInput   `pulumi:"secretBase64Encoded"`
	Subject             pulumi.StringPtrInput `pulumi:"subject"`
}

func (ConnectionOptionsGatewayAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationOutput() ConnectionOptionsGatewayAuthenticationOutput {
	return i.ToConnectionOptionsGatewayAuthenticationOutputWithContext(context.Background())
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsGatewayAuthenticationOutput)
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsGatewayAuthentication] {
	return pulumix.Output[ConnectionOptionsGatewayAuthentication]{
		OutputState: i.ToConnectionOptionsGatewayAuthenticationOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return i.ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsGatewayAuthenticationArgs) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsGatewayAuthenticationOutput).ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx)
}

// ConnectionOptionsGatewayAuthenticationPtrInput is an input type that accepts ConnectionOptionsGatewayAuthenticationArgs, ConnectionOptionsGatewayAuthenticationPtr and ConnectionOptionsGatewayAuthenticationPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsGatewayAuthenticationPtrInput` via:
//
//	        ConnectionOptionsGatewayAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsGatewayAuthenticationPtrInput interface {
	pulumi.Input

	ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput
	ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput
}

type connectionOptionsGatewayAuthenticationPtrType ConnectionOptionsGatewayAuthenticationArgs

func ConnectionOptionsGatewayAuthenticationPtr(v *ConnectionOptionsGatewayAuthenticationArgs) ConnectionOptionsGatewayAuthenticationPtrInput {
	return (*connectionOptionsGatewayAuthenticationPtrType)(v)
}

func (*connectionOptionsGatewayAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (i *connectionOptionsGatewayAuthenticationPtrType) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return i.ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsGatewayAuthenticationPtrType) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

func (i *connectionOptionsGatewayAuthenticationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsGatewayAuthentication] {
	return pulumix.Output[*ConnectionOptionsGatewayAuthentication]{
		OutputState: i.ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsGatewayAuthenticationOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsGatewayAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationOutput() ConnectionOptionsGatewayAuthenticationOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsGatewayAuthentication) *ConnectionOptionsGatewayAuthentication {
		return &v
	}).(ConnectionOptionsGatewayAuthenticationPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsGatewayAuthentication] {
	return pulumix.Output[ConnectionOptionsGatewayAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) SecretBase64Encoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *bool { return v.SecretBase64Encoded }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsGatewayAuthentication) *string { return v.Subject }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsGatewayAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsGatewayAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsGatewayAuthentication)(nil)).Elem()
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) ToConnectionOptionsGatewayAuthenticationPtrOutput() ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) ToConnectionOptionsGatewayAuthenticationPtrOutputWithContext(ctx context.Context) ConnectionOptionsGatewayAuthenticationPtrOutput {
	return o
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsGatewayAuthentication] {
	return pulumix.Output[*ConnectionOptionsGatewayAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Elem() ConnectionOptionsGatewayAuthenticationOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) ConnectionOptionsGatewayAuthentication {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsGatewayAuthentication
		return ret
	}).(ConnectionOptionsGatewayAuthenticationOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) SecretBase64Encoded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.SecretBase64Encoded
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsGatewayAuthenticationPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsGatewayAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.Subject
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsIdpInitiated struct {
	ClientAuthorizeQuery *string `pulumi:"clientAuthorizeQuery"`
	ClientId             *string `pulumi:"clientId"`
	ClientProtocol       *string `pulumi:"clientProtocol"`
}

// ConnectionOptionsIdpInitiatedInput is an input type that accepts ConnectionOptionsIdpInitiatedArgs and ConnectionOptionsIdpInitiatedOutput values.
// You can construct a concrete instance of `ConnectionOptionsIdpInitiatedInput` via:
//
//	ConnectionOptionsIdpInitiatedArgs{...}
type ConnectionOptionsIdpInitiatedInput interface {
	pulumi.Input

	ToConnectionOptionsIdpInitiatedOutput() ConnectionOptionsIdpInitiatedOutput
	ToConnectionOptionsIdpInitiatedOutputWithContext(context.Context) ConnectionOptionsIdpInitiatedOutput
}

type ConnectionOptionsIdpInitiatedArgs struct {
	ClientAuthorizeQuery pulumi.StringPtrInput `pulumi:"clientAuthorizeQuery"`
	ClientId             pulumi.StringPtrInput `pulumi:"clientId"`
	ClientProtocol       pulumi.StringPtrInput `pulumi:"clientProtocol"`
}

func (ConnectionOptionsIdpInitiatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedOutput() ConnectionOptionsIdpInitiatedOutput {
	return i.ToConnectionOptionsIdpInitiatedOutputWithContext(context.Background())
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsIdpInitiatedOutput)
}

func (i ConnectionOptionsIdpInitiatedArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsIdpInitiated] {
	return pulumix.Output[ConnectionOptionsIdpInitiated]{
		OutputState: i.ToConnectionOptionsIdpInitiatedOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return i.ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsIdpInitiatedArgs) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsIdpInitiatedOutput).ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx)
}

// ConnectionOptionsIdpInitiatedPtrInput is an input type that accepts ConnectionOptionsIdpInitiatedArgs, ConnectionOptionsIdpInitiatedPtr and ConnectionOptionsIdpInitiatedPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsIdpInitiatedPtrInput` via:
//
//	        ConnectionOptionsIdpInitiatedArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsIdpInitiatedPtrInput interface {
	pulumi.Input

	ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput
	ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Context) ConnectionOptionsIdpInitiatedPtrOutput
}

type connectionOptionsIdpInitiatedPtrType ConnectionOptionsIdpInitiatedArgs

func ConnectionOptionsIdpInitiatedPtr(v *ConnectionOptionsIdpInitiatedArgs) ConnectionOptionsIdpInitiatedPtrInput {
	return (*connectionOptionsIdpInitiatedPtrType)(v)
}

func (*connectionOptionsIdpInitiatedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (i *connectionOptionsIdpInitiatedPtrType) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return i.ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsIdpInitiatedPtrType) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsIdpInitiatedPtrOutput)
}

func (i *connectionOptionsIdpInitiatedPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsIdpInitiated] {
	return pulumix.Output[*ConnectionOptionsIdpInitiated]{
		OutputState: i.ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsIdpInitiatedOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsIdpInitiatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedOutput() ConnectionOptionsIdpInitiatedOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ToConnectionOptionsIdpInitiatedPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsIdpInitiatedOutput) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsIdpInitiated) *ConnectionOptionsIdpInitiated {
		return &v
	}).(ConnectionOptionsIdpInitiatedPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsIdpInitiated] {
	return pulumix.Output[ConnectionOptionsIdpInitiated]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsIdpInitiatedOutput) ClientAuthorizeQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsIdpInitiated) *string { return v.ClientAuthorizeQuery }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsIdpInitiated) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedOutput) ClientProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsIdpInitiated) *string { return v.ClientProtocol }).(pulumi.StringPtrOutput)
}

type ConnectionOptionsIdpInitiatedPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsIdpInitiatedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsIdpInitiated)(nil)).Elem()
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ToConnectionOptionsIdpInitiatedPtrOutput() ConnectionOptionsIdpInitiatedPtrOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ToConnectionOptionsIdpInitiatedPtrOutputWithContext(ctx context.Context) ConnectionOptionsIdpInitiatedPtrOutput {
	return o
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsIdpInitiated] {
	return pulumix.Output[*ConnectionOptionsIdpInitiated]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) Elem() ConnectionOptionsIdpInitiatedOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) ConnectionOptionsIdpInitiated {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsIdpInitiated
		return ret
	}).(ConnectionOptionsIdpInitiatedOutput)
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ClientAuthorizeQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) *string {
		if v == nil {
			return nil
		}
		return v.ClientAuthorizeQuery
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsIdpInitiatedPtrOutput) ClientProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsIdpInitiated) *string {
		if v == nil {
			return nil
		}
		return v.ClientProtocol
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsMfa struct {
	Active               *bool `pulumi:"active"`
	ReturnEnrollSettings *bool `pulumi:"returnEnrollSettings"`
}

// ConnectionOptionsMfaInput is an input type that accepts ConnectionOptionsMfaArgs and ConnectionOptionsMfaOutput values.
// You can construct a concrete instance of `ConnectionOptionsMfaInput` via:
//
//	ConnectionOptionsMfaArgs{...}
type ConnectionOptionsMfaInput interface {
	pulumi.Input

	ToConnectionOptionsMfaOutput() ConnectionOptionsMfaOutput
	ToConnectionOptionsMfaOutputWithContext(context.Context) ConnectionOptionsMfaOutput
}

type ConnectionOptionsMfaArgs struct {
	Active               pulumi.BoolPtrInput `pulumi:"active"`
	ReturnEnrollSettings pulumi.BoolPtrInput `pulumi:"returnEnrollSettings"`
}

func (ConnectionOptionsMfaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsMfa)(nil)).Elem()
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaOutput() ConnectionOptionsMfaOutput {
	return i.ToConnectionOptionsMfaOutputWithContext(context.Background())
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaOutputWithContext(ctx context.Context) ConnectionOptionsMfaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsMfaOutput)
}

func (i ConnectionOptionsMfaArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsMfa] {
	return pulumix.Output[ConnectionOptionsMfa]{
		OutputState: i.ToConnectionOptionsMfaOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return i.ToConnectionOptionsMfaPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsMfaArgs) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsMfaOutput).ToConnectionOptionsMfaPtrOutputWithContext(ctx)
}

// ConnectionOptionsMfaPtrInput is an input type that accepts ConnectionOptionsMfaArgs, ConnectionOptionsMfaPtr and ConnectionOptionsMfaPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsMfaPtrInput` via:
//
//	        ConnectionOptionsMfaArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsMfaPtrInput interface {
	pulumi.Input

	ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput
	ToConnectionOptionsMfaPtrOutputWithContext(context.Context) ConnectionOptionsMfaPtrOutput
}

type connectionOptionsMfaPtrType ConnectionOptionsMfaArgs

func ConnectionOptionsMfaPtr(v *ConnectionOptionsMfaArgs) ConnectionOptionsMfaPtrInput {
	return (*connectionOptionsMfaPtrType)(v)
}

func (*connectionOptionsMfaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsMfa)(nil)).Elem()
}

func (i *connectionOptionsMfaPtrType) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return i.ToConnectionOptionsMfaPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsMfaPtrType) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsMfaPtrOutput)
}

func (i *connectionOptionsMfaPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsMfa] {
	return pulumix.Output[*ConnectionOptionsMfa]{
		OutputState: i.ToConnectionOptionsMfaPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsMfaOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsMfaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsMfa)(nil)).Elem()
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaOutput() ConnectionOptionsMfaOutput {
	return o
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaOutputWithContext(ctx context.Context) ConnectionOptionsMfaOutput {
	return o
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return o.ToConnectionOptionsMfaPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsMfaOutput) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsMfa) *ConnectionOptionsMfa {
		return &v
	}).(ConnectionOptionsMfaPtrOutput)
}

func (o ConnectionOptionsMfaOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsMfa] {
	return pulumix.Output[ConnectionOptionsMfa]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsMfaOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsMfa) *bool { return v.Active }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsMfaOutput) ReturnEnrollSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsMfa) *bool { return v.ReturnEnrollSettings }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsMfaPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsMfaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsMfa)(nil)).Elem()
}

func (o ConnectionOptionsMfaPtrOutput) ToConnectionOptionsMfaPtrOutput() ConnectionOptionsMfaPtrOutput {
	return o
}

func (o ConnectionOptionsMfaPtrOutput) ToConnectionOptionsMfaPtrOutputWithContext(ctx context.Context) ConnectionOptionsMfaPtrOutput {
	return o
}

func (o ConnectionOptionsMfaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsMfa] {
	return pulumix.Output[*ConnectionOptionsMfa]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsMfaPtrOutput) Elem() ConnectionOptionsMfaOutput {
	return o.ApplyT(func(v *ConnectionOptionsMfa) ConnectionOptionsMfa {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsMfa
		return ret
	}).(ConnectionOptionsMfaOutput)
}

func (o ConnectionOptionsMfaPtrOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsMfa) *bool {
		if v == nil {
			return nil
		}
		return v.Active
	}).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsMfaPtrOutput) ReturnEnrollSettings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsMfa) *bool {
		if v == nil {
			return nil
		}
		return v.ReturnEnrollSettings
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptions struct {
	MinLength *int `pulumi:"minLength"`
}

// ConnectionOptionsPasswordComplexityOptionsInput is an input type that accepts ConnectionOptionsPasswordComplexityOptionsArgs and ConnectionOptionsPasswordComplexityOptionsOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordComplexityOptionsInput` via:
//
//	ConnectionOptionsPasswordComplexityOptionsArgs{...}
type ConnectionOptionsPasswordComplexityOptionsInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput
	ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(context.Context) ConnectionOptionsPasswordComplexityOptionsOutput
}

type ConnectionOptionsPasswordComplexityOptionsArgs struct {
	MinLength pulumi.IntPtrInput `pulumi:"minLength"`
}

func (ConnectionOptionsPasswordComplexityOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsOutput)
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsPasswordComplexityOptions] {
	return pulumix.Output[ConnectionOptionsPasswordComplexityOptions]{
		OutputState: i.ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordComplexityOptionsArgs) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsOutput).ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordComplexityOptionsPtrInput is an input type that accepts ConnectionOptionsPasswordComplexityOptionsArgs, ConnectionOptionsPasswordComplexityOptionsPtr and ConnectionOptionsPasswordComplexityOptionsPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordComplexityOptionsPtrInput` via:
//
//	        ConnectionOptionsPasswordComplexityOptionsArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsPasswordComplexityOptionsPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput
	ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput
}

type connectionOptionsPasswordComplexityOptionsPtrType ConnectionOptionsPasswordComplexityOptionsArgs

func ConnectionOptionsPasswordComplexityOptionsPtr(v *ConnectionOptionsPasswordComplexityOptionsArgs) ConnectionOptionsPasswordComplexityOptionsPtrInput {
	return (*connectionOptionsPasswordComplexityOptionsPtrType)(v)
}

func (*connectionOptionsPasswordComplexityOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (i *connectionOptionsPasswordComplexityOptionsPtrType) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return i.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordComplexityOptionsPtrType) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

func (i *connectionOptionsPasswordComplexityOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsPasswordComplexityOptions] {
	return pulumix.Output[*ConnectionOptionsPasswordComplexityOptions]{
		OutputState: i.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsPasswordComplexityOptionsOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordComplexityOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsOutput() ConnectionOptionsPasswordComplexityOptionsOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsPasswordComplexityOptions) *ConnectionOptionsPasswordComplexityOptions {
		return &v
	}).(ConnectionOptionsPasswordComplexityOptionsPtrOutput)
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsPasswordComplexityOptions] {
	return pulumix.Output[ConnectionOptionsPasswordComplexityOptions]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsPasswordComplexityOptionsOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordComplexityOptions) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordComplexityOptionsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordComplexityOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordComplexityOptions)(nil)).Elem()
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutput() ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) ToConnectionOptionsPasswordComplexityOptionsPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordComplexityOptionsPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsPasswordComplexityOptions] {
	return pulumix.Output[*ConnectionOptionsPasswordComplexityOptions]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) Elem() ConnectionOptionsPasswordComplexityOptionsOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordComplexityOptions) ConnectionOptionsPasswordComplexityOptions {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsPasswordComplexityOptions
		return ret
	}).(ConnectionOptionsPasswordComplexityOptionsOutput)
}

func (o ConnectionOptionsPasswordComplexityOptionsPtrOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordComplexityOptions) *int {
		if v == nil {
			return nil
		}
		return v.MinLength
	}).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordDictionary struct {
	Dictionaries []string `pulumi:"dictionaries"`
	Enable       *bool    `pulumi:"enable"`
}

// ConnectionOptionsPasswordDictionaryInput is an input type that accepts ConnectionOptionsPasswordDictionaryArgs and ConnectionOptionsPasswordDictionaryOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordDictionaryInput` via:
//
//	ConnectionOptionsPasswordDictionaryArgs{...}
type ConnectionOptionsPasswordDictionaryInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput
	ToConnectionOptionsPasswordDictionaryOutputWithContext(context.Context) ConnectionOptionsPasswordDictionaryOutput
}

type ConnectionOptionsPasswordDictionaryArgs struct {
	Dictionaries pulumi.StringArrayInput `pulumi:"dictionaries"`
	Enable       pulumi.BoolPtrInput     `pulumi:"enable"`
}

func (ConnectionOptionsPasswordDictionaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput {
	return i.ToConnectionOptionsPasswordDictionaryOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryOutput)
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsPasswordDictionary] {
	return pulumix.Output[ConnectionOptionsPasswordDictionary]{
		OutputState: i.ToConnectionOptionsPasswordDictionaryOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return i.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordDictionaryArgs) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryOutput).ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordDictionaryPtrInput is an input type that accepts ConnectionOptionsPasswordDictionaryArgs, ConnectionOptionsPasswordDictionaryPtr and ConnectionOptionsPasswordDictionaryPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordDictionaryPtrInput` via:
//
//	        ConnectionOptionsPasswordDictionaryArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsPasswordDictionaryPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput
	ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Context) ConnectionOptionsPasswordDictionaryPtrOutput
}

type connectionOptionsPasswordDictionaryPtrType ConnectionOptionsPasswordDictionaryArgs

func ConnectionOptionsPasswordDictionaryPtr(v *ConnectionOptionsPasswordDictionaryArgs) ConnectionOptionsPasswordDictionaryPtrInput {
	return (*connectionOptionsPasswordDictionaryPtrType)(v)
}

func (*connectionOptionsPasswordDictionaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (i *connectionOptionsPasswordDictionaryPtrType) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return i.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordDictionaryPtrType) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

func (i *connectionOptionsPasswordDictionaryPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsPasswordDictionary] {
	return pulumix.Output[*ConnectionOptionsPasswordDictionary]{
		OutputState: i.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsPasswordDictionaryOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordDictionaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryOutput() ConnectionOptionsPasswordDictionaryOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsPasswordDictionary) *ConnectionOptionsPasswordDictionary {
		return &v
	}).(ConnectionOptionsPasswordDictionaryPtrOutput)
}

func (o ConnectionOptionsPasswordDictionaryOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsPasswordDictionary] {
	return pulumix.Output[ConnectionOptionsPasswordDictionary]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsPasswordDictionaryOutput) Dictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordDictionary) []string { return v.Dictionaries }).(pulumi.StringArrayOutput)
}

func (o ConnectionOptionsPasswordDictionaryOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordDictionary) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordDictionaryPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordDictionaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordDictionary)(nil)).Elem()
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) ToConnectionOptionsPasswordDictionaryPtrOutput() ConnectionOptionsPasswordDictionaryPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) ToConnectionOptionsPasswordDictionaryPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordDictionaryPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsPasswordDictionary] {
	return pulumix.Output[*ConnectionOptionsPasswordDictionary]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) Elem() ConnectionOptionsPasswordDictionaryOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) ConnectionOptionsPasswordDictionary {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsPasswordDictionary
		return ret
	}).(ConnectionOptionsPasswordDictionaryOutput)
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) Dictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) []string {
		if v == nil {
			return nil
		}
		return v.Dictionaries
	}).(pulumi.StringArrayOutput)
}

func (o ConnectionOptionsPasswordDictionaryPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordDictionary) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordHistory struct {
	Enable *bool `pulumi:"enable"`
	Size   *int  `pulumi:"size"`
}

// ConnectionOptionsPasswordHistoryInput is an input type that accepts ConnectionOptionsPasswordHistoryArgs and ConnectionOptionsPasswordHistoryOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordHistoryInput` via:
//
//	ConnectionOptionsPasswordHistoryArgs{...}
type ConnectionOptionsPasswordHistoryInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput
	ToConnectionOptionsPasswordHistoryOutputWithContext(context.Context) ConnectionOptionsPasswordHistoryOutput
}

type ConnectionOptionsPasswordHistoryArgs struct {
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
	Size   pulumi.IntPtrInput  `pulumi:"size"`
}

func (ConnectionOptionsPasswordHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (i ConnectionOptionsPasswordHistoryArgs) ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput {
	return i.ToConnectionOptionsPasswordHistoryOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordHistoryArgs) ToConnectionOptionsPasswordHistoryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordHistoryOutput)
}

func (i ConnectionOptionsPasswordHistoryArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsPasswordHistory] {
	return pulumix.Output[ConnectionOptionsPasswordHistory]{
		OutputState: i.ToConnectionOptionsPasswordHistoryOutputWithContext(ctx).OutputState,
	}
}

// ConnectionOptionsPasswordHistoryArrayInput is an input type that accepts ConnectionOptionsPasswordHistoryArray and ConnectionOptionsPasswordHistoryArrayOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordHistoryArrayInput` via:
//
//	ConnectionOptionsPasswordHistoryArray{ ConnectionOptionsPasswordHistoryArgs{...} }
type ConnectionOptionsPasswordHistoryArrayInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput
	ToConnectionOptionsPasswordHistoryArrayOutputWithContext(context.Context) ConnectionOptionsPasswordHistoryArrayOutput
}

type ConnectionOptionsPasswordHistoryArray []ConnectionOptionsPasswordHistoryInput

func (ConnectionOptionsPasswordHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (i ConnectionOptionsPasswordHistoryArray) ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput {
	return i.ToConnectionOptionsPasswordHistoryArrayOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordHistoryArray) ToConnectionOptionsPasswordHistoryArrayOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordHistoryArrayOutput)
}

func (i ConnectionOptionsPasswordHistoryArray) ToOutput(ctx context.Context) pulumix.Output[[]ConnectionOptionsPasswordHistory] {
	return pulumix.Output[[]ConnectionOptionsPasswordHistory]{
		OutputState: i.ToConnectionOptionsPasswordHistoryArrayOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsPasswordHistoryOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (o ConnectionOptionsPasswordHistoryOutput) ToConnectionOptionsPasswordHistoryOutput() ConnectionOptionsPasswordHistoryOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryOutput) ToConnectionOptionsPasswordHistoryOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsPasswordHistory] {
	return pulumix.Output[ConnectionOptionsPasswordHistory]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsPasswordHistoryOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordHistory) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

func (o ConnectionOptionsPasswordHistoryOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordHistory) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsPasswordHistoryArrayOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionOptionsPasswordHistory)(nil)).Elem()
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) ToConnectionOptionsPasswordHistoryArrayOutput() ConnectionOptionsPasswordHistoryArrayOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) ToConnectionOptionsPasswordHistoryArrayOutputWithContext(ctx context.Context) ConnectionOptionsPasswordHistoryArrayOutput {
	return o
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ConnectionOptionsPasswordHistory] {
	return pulumix.Output[[]ConnectionOptionsPasswordHistory]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsPasswordHistoryArrayOutput) Index(i pulumi.IntInput) ConnectionOptionsPasswordHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionOptionsPasswordHistory {
		return vs[0].([]ConnectionOptionsPasswordHistory)[vs[1].(int)]
	}).(ConnectionOptionsPasswordHistoryOutput)
}

type ConnectionOptionsPasswordNoPersonalInfo struct {
	Enable *bool `pulumi:"enable"`
}

// ConnectionOptionsPasswordNoPersonalInfoInput is an input type that accepts ConnectionOptionsPasswordNoPersonalInfoArgs and ConnectionOptionsPasswordNoPersonalInfoOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordNoPersonalInfoInput` via:
//
//	ConnectionOptionsPasswordNoPersonalInfoArgs{...}
type ConnectionOptionsPasswordNoPersonalInfoInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput
	ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput
}

type ConnectionOptionsPasswordNoPersonalInfoArgs struct {
	Enable pulumi.BoolPtrInput `pulumi:"enable"`
}

func (ConnectionOptionsPasswordNoPersonalInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoOutput)
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsPasswordNoPersonalInfo] {
	return pulumix.Output[ConnectionOptionsPasswordNoPersonalInfo]{
		OutputState: i.ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsPasswordNoPersonalInfoArgs) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoOutput).ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx)
}

// ConnectionOptionsPasswordNoPersonalInfoPtrInput is an input type that accepts ConnectionOptionsPasswordNoPersonalInfoArgs, ConnectionOptionsPasswordNoPersonalInfoPtr and ConnectionOptionsPasswordNoPersonalInfoPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsPasswordNoPersonalInfoPtrInput` via:
//
//	        ConnectionOptionsPasswordNoPersonalInfoArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsPasswordNoPersonalInfoPtrInput interface {
	pulumi.Input

	ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput
	ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput
}

type connectionOptionsPasswordNoPersonalInfoPtrType ConnectionOptionsPasswordNoPersonalInfoArgs

func ConnectionOptionsPasswordNoPersonalInfoPtr(v *ConnectionOptionsPasswordNoPersonalInfoArgs) ConnectionOptionsPasswordNoPersonalInfoPtrInput {
	return (*connectionOptionsPasswordNoPersonalInfoPtrType)(v)
}

func (*connectionOptionsPasswordNoPersonalInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (i *connectionOptionsPasswordNoPersonalInfoPtrType) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return i.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsPasswordNoPersonalInfoPtrType) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

func (i *connectionOptionsPasswordNoPersonalInfoPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsPasswordNoPersonalInfo] {
	return pulumix.Output[*ConnectionOptionsPasswordNoPersonalInfo]{
		OutputState: i.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsPasswordNoPersonalInfoOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordNoPersonalInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoOutput() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsPasswordNoPersonalInfo) *ConnectionOptionsPasswordNoPersonalInfo {
		return &v
	}).(ConnectionOptionsPasswordNoPersonalInfoPtrOutput)
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsPasswordNoPersonalInfo] {
	return pulumix.Output[ConnectionOptionsPasswordNoPersonalInfo]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsPasswordNoPersonalInfoOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsPasswordNoPersonalInfo) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsPasswordNoPersonalInfoPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsPasswordNoPersonalInfo)(nil)).Elem()
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutput() ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ToConnectionOptionsPasswordNoPersonalInfoPtrOutputWithContext(ctx context.Context) ConnectionOptionsPasswordNoPersonalInfoPtrOutput {
	return o
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsPasswordNoPersonalInfo] {
	return pulumix.Output[*ConnectionOptionsPasswordNoPersonalInfo]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) Elem() ConnectionOptionsPasswordNoPersonalInfoOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordNoPersonalInfo) ConnectionOptionsPasswordNoPersonalInfo {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsPasswordNoPersonalInfo
		return ret
	}).(ConnectionOptionsPasswordNoPersonalInfoOutput)
}

func (o ConnectionOptionsPasswordNoPersonalInfoPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsPasswordNoPersonalInfo) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

type ConnectionOptionsSigningKey struct {
	Cert string `pulumi:"cert"`
	Key  string `pulumi:"key"`
}

// ConnectionOptionsSigningKeyInput is an input type that accepts ConnectionOptionsSigningKeyArgs and ConnectionOptionsSigningKeyOutput values.
// You can construct a concrete instance of `ConnectionOptionsSigningKeyInput` via:
//
//	ConnectionOptionsSigningKeyArgs{...}
type ConnectionOptionsSigningKeyInput interface {
	pulumi.Input

	ToConnectionOptionsSigningKeyOutput() ConnectionOptionsSigningKeyOutput
	ToConnectionOptionsSigningKeyOutputWithContext(context.Context) ConnectionOptionsSigningKeyOutput
}

type ConnectionOptionsSigningKeyArgs struct {
	Cert pulumi.StringInput `pulumi:"cert"`
	Key  pulumi.StringInput `pulumi:"key"`
}

func (ConnectionOptionsSigningKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsSigningKey)(nil)).Elem()
}

func (i ConnectionOptionsSigningKeyArgs) ToConnectionOptionsSigningKeyOutput() ConnectionOptionsSigningKeyOutput {
	return i.ToConnectionOptionsSigningKeyOutputWithContext(context.Background())
}

func (i ConnectionOptionsSigningKeyArgs) ToConnectionOptionsSigningKeyOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsSigningKeyOutput)
}

func (i ConnectionOptionsSigningKeyArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsSigningKey] {
	return pulumix.Output[ConnectionOptionsSigningKey]{
		OutputState: i.ToConnectionOptionsSigningKeyOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsSigningKeyArgs) ToConnectionOptionsSigningKeyPtrOutput() ConnectionOptionsSigningKeyPtrOutput {
	return i.ToConnectionOptionsSigningKeyPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsSigningKeyArgs) ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsSigningKeyOutput).ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx)
}

// ConnectionOptionsSigningKeyPtrInput is an input type that accepts ConnectionOptionsSigningKeyArgs, ConnectionOptionsSigningKeyPtr and ConnectionOptionsSigningKeyPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsSigningKeyPtrInput` via:
//
//	        ConnectionOptionsSigningKeyArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsSigningKeyPtrInput interface {
	pulumi.Input

	ToConnectionOptionsSigningKeyPtrOutput() ConnectionOptionsSigningKeyPtrOutput
	ToConnectionOptionsSigningKeyPtrOutputWithContext(context.Context) ConnectionOptionsSigningKeyPtrOutput
}

type connectionOptionsSigningKeyPtrType ConnectionOptionsSigningKeyArgs

func ConnectionOptionsSigningKeyPtr(v *ConnectionOptionsSigningKeyArgs) ConnectionOptionsSigningKeyPtrInput {
	return (*connectionOptionsSigningKeyPtrType)(v)
}

func (*connectionOptionsSigningKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsSigningKey)(nil)).Elem()
}

func (i *connectionOptionsSigningKeyPtrType) ToConnectionOptionsSigningKeyPtrOutput() ConnectionOptionsSigningKeyPtrOutput {
	return i.ToConnectionOptionsSigningKeyPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsSigningKeyPtrType) ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsSigningKeyPtrOutput)
}

func (i *connectionOptionsSigningKeyPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsSigningKey] {
	return pulumix.Output[*ConnectionOptionsSigningKey]{
		OutputState: i.ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsSigningKeyOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsSigningKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsSigningKey)(nil)).Elem()
}

func (o ConnectionOptionsSigningKeyOutput) ToConnectionOptionsSigningKeyOutput() ConnectionOptionsSigningKeyOutput {
	return o
}

func (o ConnectionOptionsSigningKeyOutput) ToConnectionOptionsSigningKeyOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyOutput {
	return o
}

func (o ConnectionOptionsSigningKeyOutput) ToConnectionOptionsSigningKeyPtrOutput() ConnectionOptionsSigningKeyPtrOutput {
	return o.ToConnectionOptionsSigningKeyPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsSigningKeyOutput) ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsSigningKey) *ConnectionOptionsSigningKey {
		return &v
	}).(ConnectionOptionsSigningKeyPtrOutput)
}

func (o ConnectionOptionsSigningKeyOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsSigningKey] {
	return pulumix.Output[ConnectionOptionsSigningKey]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsSigningKeyOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionOptionsSigningKey) string { return v.Cert }).(pulumi.StringOutput)
}

func (o ConnectionOptionsSigningKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionOptionsSigningKey) string { return v.Key }).(pulumi.StringOutput)
}

type ConnectionOptionsSigningKeyPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsSigningKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsSigningKey)(nil)).Elem()
}

func (o ConnectionOptionsSigningKeyPtrOutput) ToConnectionOptionsSigningKeyPtrOutput() ConnectionOptionsSigningKeyPtrOutput {
	return o
}

func (o ConnectionOptionsSigningKeyPtrOutput) ToConnectionOptionsSigningKeyPtrOutputWithContext(ctx context.Context) ConnectionOptionsSigningKeyPtrOutput {
	return o
}

func (o ConnectionOptionsSigningKeyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsSigningKey] {
	return pulumix.Output[*ConnectionOptionsSigningKey]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsSigningKeyPtrOutput) Elem() ConnectionOptionsSigningKeyOutput {
	return o.ApplyT(func(v *ConnectionOptionsSigningKey) ConnectionOptionsSigningKey {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsSigningKey
		return ret
	}).(ConnectionOptionsSigningKeyOutput)
}

func (o ConnectionOptionsSigningKeyPtrOutput) Cert() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsSigningKey) *string {
		if v == nil {
			return nil
		}
		return &v.Cert
	}).(pulumi.StringPtrOutput)
}

func (o ConnectionOptionsSigningKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsSigningKey) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

type ConnectionOptionsTotp struct {
	Length   *int `pulumi:"length"`
	TimeStep *int `pulumi:"timeStep"`
}

// ConnectionOptionsTotpInput is an input type that accepts ConnectionOptionsTotpArgs and ConnectionOptionsTotpOutput values.
// You can construct a concrete instance of `ConnectionOptionsTotpInput` via:
//
//	ConnectionOptionsTotpArgs{...}
type ConnectionOptionsTotpInput interface {
	pulumi.Input

	ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput
	ToConnectionOptionsTotpOutputWithContext(context.Context) ConnectionOptionsTotpOutput
}

type ConnectionOptionsTotpArgs struct {
	Length   pulumi.IntPtrInput `pulumi:"length"`
	TimeStep pulumi.IntPtrInput `pulumi:"timeStep"`
}

func (ConnectionOptionsTotpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsTotp)(nil)).Elem()
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput {
	return i.ToConnectionOptionsTotpOutputWithContext(context.Background())
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpOutputWithContext(ctx context.Context) ConnectionOptionsTotpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpOutput)
}

func (i ConnectionOptionsTotpArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsTotp] {
	return pulumix.Output[ConnectionOptionsTotp]{
		OutputState: i.ToConnectionOptionsTotpOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return i.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsTotpArgs) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpOutput).ToConnectionOptionsTotpPtrOutputWithContext(ctx)
}

// ConnectionOptionsTotpPtrInput is an input type that accepts ConnectionOptionsTotpArgs, ConnectionOptionsTotpPtr and ConnectionOptionsTotpPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsTotpPtrInput` via:
//
//	        ConnectionOptionsTotpArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsTotpPtrInput interface {
	pulumi.Input

	ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput
	ToConnectionOptionsTotpPtrOutputWithContext(context.Context) ConnectionOptionsTotpPtrOutput
}

type connectionOptionsTotpPtrType ConnectionOptionsTotpArgs

func ConnectionOptionsTotpPtr(v *ConnectionOptionsTotpArgs) ConnectionOptionsTotpPtrInput {
	return (*connectionOptionsTotpPtrType)(v)
}

func (*connectionOptionsTotpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsTotp)(nil)).Elem()
}

func (i *connectionOptionsTotpPtrType) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return i.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsTotpPtrType) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsTotpPtrOutput)
}

func (i *connectionOptionsTotpPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsTotp] {
	return pulumix.Output[*ConnectionOptionsTotp]{
		OutputState: i.ToConnectionOptionsTotpPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsTotpOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsTotpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsTotp)(nil)).Elem()
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpOutput() ConnectionOptionsTotpOutput {
	return o
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpOutputWithContext(ctx context.Context) ConnectionOptionsTotpOutput {
	return o
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return o.ToConnectionOptionsTotpPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsTotpOutput) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsTotp) *ConnectionOptionsTotp {
		return &v
	}).(ConnectionOptionsTotpPtrOutput)
}

func (o ConnectionOptionsTotpOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsTotp] {
	return pulumix.Output[ConnectionOptionsTotp]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsTotpOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsTotp) *int { return v.Length }).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsTotpOutput) TimeStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsTotp) *int { return v.TimeStep }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsTotpPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsTotpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsTotp)(nil)).Elem()
}

func (o ConnectionOptionsTotpPtrOutput) ToConnectionOptionsTotpPtrOutput() ConnectionOptionsTotpPtrOutput {
	return o
}

func (o ConnectionOptionsTotpPtrOutput) ToConnectionOptionsTotpPtrOutputWithContext(ctx context.Context) ConnectionOptionsTotpPtrOutput {
	return o
}

func (o ConnectionOptionsTotpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsTotp] {
	return pulumix.Output[*ConnectionOptionsTotp]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsTotpPtrOutput) Elem() ConnectionOptionsTotpOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) ConnectionOptionsTotp {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsTotp
		return ret
	}).(ConnectionOptionsTotpOutput)
}

func (o ConnectionOptionsTotpPtrOutput) Length() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) *int {
		if v == nil {
			return nil
		}
		return v.Length
	}).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsTotpPtrOutput) TimeStep() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsTotp) *int {
		if v == nil {
			return nil
		}
		return v.TimeStep
	}).(pulumi.IntPtrOutput)
}

type ConnectionOptionsValidation struct {
	Username *ConnectionOptionsValidationUsername `pulumi:"username"`
}

// ConnectionOptionsValidationInput is an input type that accepts ConnectionOptionsValidationArgs and ConnectionOptionsValidationOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationInput` via:
//
//	ConnectionOptionsValidationArgs{...}
type ConnectionOptionsValidationInput interface {
	pulumi.Input

	ToConnectionOptionsValidationOutput() ConnectionOptionsValidationOutput
	ToConnectionOptionsValidationOutputWithContext(context.Context) ConnectionOptionsValidationOutput
}

type ConnectionOptionsValidationArgs struct {
	Username ConnectionOptionsValidationUsernamePtrInput `pulumi:"username"`
}

func (ConnectionOptionsValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidation)(nil)).Elem()
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationOutput() ConnectionOptionsValidationOutput {
	return i.ToConnectionOptionsValidationOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationOutputWithContext(ctx context.Context) ConnectionOptionsValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationOutput)
}

func (i ConnectionOptionsValidationArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsValidation] {
	return pulumix.Output[ConnectionOptionsValidation]{
		OutputState: i.ToConnectionOptionsValidationOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return i.ToConnectionOptionsValidationPtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationArgs) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationOutput).ToConnectionOptionsValidationPtrOutputWithContext(ctx)
}

// ConnectionOptionsValidationPtrInput is an input type that accepts ConnectionOptionsValidationArgs, ConnectionOptionsValidationPtr and ConnectionOptionsValidationPtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationPtrInput` via:
//
//	        ConnectionOptionsValidationArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsValidationPtrInput interface {
	pulumi.Input

	ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput
	ToConnectionOptionsValidationPtrOutputWithContext(context.Context) ConnectionOptionsValidationPtrOutput
}

type connectionOptionsValidationPtrType ConnectionOptionsValidationArgs

func ConnectionOptionsValidationPtr(v *ConnectionOptionsValidationArgs) ConnectionOptionsValidationPtrInput {
	return (*connectionOptionsValidationPtrType)(v)
}

func (*connectionOptionsValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidation)(nil)).Elem()
}

func (i *connectionOptionsValidationPtrType) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return i.ToConnectionOptionsValidationPtrOutputWithContext(context.Background())
}

func (i *connectionOptionsValidationPtrType) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationPtrOutput)
}

func (i *connectionOptionsValidationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsValidation] {
	return pulumix.Output[*ConnectionOptionsValidation]{
		OutputState: i.ToConnectionOptionsValidationPtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsValidationOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidation)(nil)).Elem()
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationOutput() ConnectionOptionsValidationOutput {
	return o
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationOutputWithContext(ctx context.Context) ConnectionOptionsValidationOutput {
	return o
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return o.ToConnectionOptionsValidationPtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsValidationOutput) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsValidation) *ConnectionOptionsValidation {
		return &v
	}).(ConnectionOptionsValidationPtrOutput)
}

func (o ConnectionOptionsValidationOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsValidation] {
	return pulumix.Output[ConnectionOptionsValidation]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsValidationOutput) Username() ConnectionOptionsValidationUsernamePtrOutput {
	return o.ApplyT(func(v ConnectionOptionsValidation) *ConnectionOptionsValidationUsername { return v.Username }).(ConnectionOptionsValidationUsernamePtrOutput)
}

type ConnectionOptionsValidationPtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidation)(nil)).Elem()
}

func (o ConnectionOptionsValidationPtrOutput) ToConnectionOptionsValidationPtrOutput() ConnectionOptionsValidationPtrOutput {
	return o
}

func (o ConnectionOptionsValidationPtrOutput) ToConnectionOptionsValidationPtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationPtrOutput {
	return o
}

func (o ConnectionOptionsValidationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsValidation] {
	return pulumix.Output[*ConnectionOptionsValidation]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsValidationPtrOutput) Elem() ConnectionOptionsValidationOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidation) ConnectionOptionsValidation {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsValidation
		return ret
	}).(ConnectionOptionsValidationOutput)
}

func (o ConnectionOptionsValidationPtrOutput) Username() ConnectionOptionsValidationUsernamePtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidation) *ConnectionOptionsValidationUsername {
		if v == nil {
			return nil
		}
		return v.Username
	}).(ConnectionOptionsValidationUsernamePtrOutput)
}

type ConnectionOptionsValidationUsername struct {
	Max *int `pulumi:"max"`
	Min *int `pulumi:"min"`
}

// ConnectionOptionsValidationUsernameInput is an input type that accepts ConnectionOptionsValidationUsernameArgs and ConnectionOptionsValidationUsernameOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationUsernameInput` via:
//
//	ConnectionOptionsValidationUsernameArgs{...}
type ConnectionOptionsValidationUsernameInput interface {
	pulumi.Input

	ToConnectionOptionsValidationUsernameOutput() ConnectionOptionsValidationUsernameOutput
	ToConnectionOptionsValidationUsernameOutputWithContext(context.Context) ConnectionOptionsValidationUsernameOutput
}

type ConnectionOptionsValidationUsernameArgs struct {
	Max pulumi.IntPtrInput `pulumi:"max"`
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (ConnectionOptionsValidationUsernameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernameOutput() ConnectionOptionsValidationUsernameOutput {
	return i.ToConnectionOptionsValidationUsernameOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernameOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationUsernameOutput)
}

func (i ConnectionOptionsValidationUsernameArgs) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsValidationUsername] {
	return pulumix.Output[ConnectionOptionsValidationUsername]{
		OutputState: i.ToConnectionOptionsValidationUsernameOutputWithContext(ctx).OutputState,
	}
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return i.ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Background())
}

func (i ConnectionOptionsValidationUsernameArgs) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationUsernameOutput).ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx)
}

// ConnectionOptionsValidationUsernamePtrInput is an input type that accepts ConnectionOptionsValidationUsernameArgs, ConnectionOptionsValidationUsernamePtr and ConnectionOptionsValidationUsernamePtrOutput values.
// You can construct a concrete instance of `ConnectionOptionsValidationUsernamePtrInput` via:
//
//	        ConnectionOptionsValidationUsernameArgs{...}
//
//	or:
//
//	        nil
type ConnectionOptionsValidationUsernamePtrInput interface {
	pulumi.Input

	ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput
	ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Context) ConnectionOptionsValidationUsernamePtrOutput
}

type connectionOptionsValidationUsernamePtrType ConnectionOptionsValidationUsernameArgs

func ConnectionOptionsValidationUsernamePtr(v *ConnectionOptionsValidationUsernameArgs) ConnectionOptionsValidationUsernamePtrInput {
	return (*connectionOptionsValidationUsernamePtrType)(v)
}

func (*connectionOptionsValidationUsernamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (i *connectionOptionsValidationUsernamePtrType) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return i.ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Background())
}

func (i *connectionOptionsValidationUsernamePtrType) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionOptionsValidationUsernamePtrOutput)
}

func (i *connectionOptionsValidationUsernamePtrType) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsValidationUsername] {
	return pulumix.Output[*ConnectionOptionsValidationUsername]{
		OutputState: i.ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx).OutputState,
	}
}

type ConnectionOptionsValidationUsernameOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationUsernameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernameOutput() ConnectionOptionsValidationUsernameOutput {
	return o
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernameOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernameOutput {
	return o
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return o.ToConnectionOptionsValidationUsernamePtrOutputWithContext(context.Background())
}

func (o ConnectionOptionsValidationUsernameOutput) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionOptionsValidationUsername) *ConnectionOptionsValidationUsername {
		return &v
	}).(ConnectionOptionsValidationUsernamePtrOutput)
}

func (o ConnectionOptionsValidationUsernameOutput) ToOutput(ctx context.Context) pulumix.Output[ConnectionOptionsValidationUsername] {
	return pulumix.Output[ConnectionOptionsValidationUsername]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsValidationUsernameOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsValidationUsername) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsValidationUsernameOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionOptionsValidationUsername) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type ConnectionOptionsValidationUsernamePtrOutput struct{ *pulumi.OutputState }

func (ConnectionOptionsValidationUsernamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionOptionsValidationUsername)(nil)).Elem()
}

func (o ConnectionOptionsValidationUsernamePtrOutput) ToConnectionOptionsValidationUsernamePtrOutput() ConnectionOptionsValidationUsernamePtrOutput {
	return o
}

func (o ConnectionOptionsValidationUsernamePtrOutput) ToConnectionOptionsValidationUsernamePtrOutputWithContext(ctx context.Context) ConnectionOptionsValidationUsernamePtrOutput {
	return o
}

func (o ConnectionOptionsValidationUsernamePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ConnectionOptionsValidationUsername] {
	return pulumix.Output[*ConnectionOptionsValidationUsername]{
		OutputState: o.OutputState,
	}
}

func (o ConnectionOptionsValidationUsernamePtrOutput) Elem() ConnectionOptionsValidationUsernameOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidationUsername) ConnectionOptionsValidationUsername {
		if v != nil {
			return *v
		}
		var ret ConnectionOptionsValidationUsername
		return ret
	}).(ConnectionOptionsValidationUsernameOutput)
}

func (o ConnectionOptionsValidationUsernamePtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidationUsername) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o ConnectionOptionsValidationUsernamePtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConnectionOptionsValidationUsername) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

type CustomDomainVerificationType struct {
	Methods []interface{} `pulumi:"methods"`
}

// CustomDomainVerificationTypeInput is an input type that accepts CustomDomainVerificationTypeArgs and CustomDomainVerificationTypeOutput values.
// You can construct a concrete instance of `CustomDomainVerificationTypeInput` via:
//
//	CustomDomainVerificationTypeArgs{...}
type CustomDomainVerificationTypeInput interface {
	pulumi.Input

	ToCustomDomainVerificationTypeOutput() CustomDomainVerificationTypeOutput
	ToCustomDomainVerificationTypeOutputWithContext(context.Context) CustomDomainVerificationTypeOutput
}

type CustomDomainVerificationTypeArgs struct {
	Methods pulumi.ArrayInput `pulumi:"methods"`
}

func (CustomDomainVerificationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainVerificationType)(nil)).Elem()
}

func (i CustomDomainVerificationTypeArgs) ToCustomDomainVerificationTypeOutput() CustomDomainVerificationTypeOutput {
	return i.ToCustomDomainVerificationTypeOutputWithContext(context.Background())
}

func (i CustomDomainVerificationTypeArgs) ToCustomDomainVerificationTypeOutputWithContext(ctx context.Context) CustomDomainVerificationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainVerificationTypeOutput)
}

func (i CustomDomainVerificationTypeArgs) ToOutput(ctx context.Context) pulumix.Output[CustomDomainVerificationType] {
	return pulumix.Output[CustomDomainVerificationType]{
		OutputState: i.ToCustomDomainVerificationTypeOutputWithContext(ctx).OutputState,
	}
}

// CustomDomainVerificationTypeArrayInput is an input type that accepts CustomDomainVerificationTypeArray and CustomDomainVerificationTypeArrayOutput values.
// You can construct a concrete instance of `CustomDomainVerificationTypeArrayInput` via:
//
//	CustomDomainVerificationTypeArray{ CustomDomainVerificationTypeArgs{...} }
type CustomDomainVerificationTypeArrayInput interface {
	pulumi.Input

	ToCustomDomainVerificationTypeArrayOutput() CustomDomainVerificationTypeArrayOutput
	ToCustomDomainVerificationTypeArrayOutputWithContext(context.Context) CustomDomainVerificationTypeArrayOutput
}

type CustomDomainVerificationTypeArray []CustomDomainVerificationTypeInput

func (CustomDomainVerificationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainVerificationType)(nil)).Elem()
}

func (i CustomDomainVerificationTypeArray) ToCustomDomainVerificationTypeArrayOutput() CustomDomainVerificationTypeArrayOutput {
	return i.ToCustomDomainVerificationTypeArrayOutputWithContext(context.Background())
}

func (i CustomDomainVerificationTypeArray) ToCustomDomainVerificationTypeArrayOutputWithContext(ctx context.Context) CustomDomainVerificationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainVerificationTypeArrayOutput)
}

func (i CustomDomainVerificationTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]CustomDomainVerificationType] {
	return pulumix.Output[[]CustomDomainVerificationType]{
		OutputState: i.ToCustomDomainVerificationTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type CustomDomainVerificationTypeOutput struct{ *pulumi.OutputState }

func (CustomDomainVerificationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainVerificationType)(nil)).Elem()
}

func (o CustomDomainVerificationTypeOutput) ToCustomDomainVerificationTypeOutput() CustomDomainVerificationTypeOutput {
	return o
}

func (o CustomDomainVerificationTypeOutput) ToCustomDomainVerificationTypeOutputWithContext(ctx context.Context) CustomDomainVerificationTypeOutput {
	return o
}

func (o CustomDomainVerificationTypeOutput) ToOutput(ctx context.Context) pulumix.Output[CustomDomainVerificationType] {
	return pulumix.Output[CustomDomainVerificationType]{
		OutputState: o.OutputState,
	}
}

func (o CustomDomainVerificationTypeOutput) Methods() pulumi.ArrayOutput {
	return o.ApplyT(func(v CustomDomainVerificationType) []interface{} { return v.Methods }).(pulumi.ArrayOutput)
}

type CustomDomainVerificationTypeArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainVerificationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainVerificationType)(nil)).Elem()
}

func (o CustomDomainVerificationTypeArrayOutput) ToCustomDomainVerificationTypeArrayOutput() CustomDomainVerificationTypeArrayOutput {
	return o
}

func (o CustomDomainVerificationTypeArrayOutput) ToCustomDomainVerificationTypeArrayOutputWithContext(ctx context.Context) CustomDomainVerificationTypeArrayOutput {
	return o
}

func (o CustomDomainVerificationTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]CustomDomainVerificationType] {
	return pulumix.Output[[]CustomDomainVerificationType]{
		OutputState: o.OutputState,
	}
}

func (o CustomDomainVerificationTypeArrayOutput) Index(i pulumi.IntInput) CustomDomainVerificationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDomainVerificationType {
		return vs[0].([]CustomDomainVerificationType)[vs[1].(int)]
	}).(CustomDomainVerificationTypeOutput)
}

type EmailProviderCredentials struct {
	// AWS Access Key ID. Used only for AWS.
	AccessKeyId *string `pulumi:"accessKeyId"`
	// API Key for your email service. Will always be encrypted in our database.
	ApiKey *string `pulumi:"apiKey"`
	// Azure Communication Services Connection String.
	AzureCsConnectionString *string `pulumi:"azureCsConnectionString"`
	// Domain name.
	Domain *string `pulumi:"domain"`
	// Microsoft 365 Client ID.
	Ms365ClientId *string `pulumi:"ms365ClientId"`
	// Microsoft 365 Client Secret.
	Ms365ClientSecret *string `pulumi:"ms365ClientSecret"`
	// Microsoft 365 Tenant ID.
	Ms365TenantId *string `pulumi:"ms365TenantId"`
	// Default region. Used only for AWS, Mailgun, and SparkPost.
	Region *string `pulumi:"region"`
	// AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	SecretAccessKey *string `pulumi:"secretAccessKey"`
	// Hostname or IP address of your SMTP server. Used only for SMTP.
	SmtpHost *string `pulumi:"smtpHost"`
	// SMTP password. Used only for SMTP.
	SmtpPass *string `pulumi:"smtpPass"`
	// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	SmtpPort *int `pulumi:"smtpPort"`
	// SMTP username. Used only for SMTP.
	SmtpUser *string `pulumi:"smtpUser"`
}

// EmailProviderCredentialsInput is an input type that accepts EmailProviderCredentialsArgs and EmailProviderCredentialsOutput values.
// You can construct a concrete instance of `EmailProviderCredentialsInput` via:
//
//	EmailProviderCredentialsArgs{...}
type EmailProviderCredentialsInput interface {
	pulumi.Input

	ToEmailProviderCredentialsOutput() EmailProviderCredentialsOutput
	ToEmailProviderCredentialsOutputWithContext(context.Context) EmailProviderCredentialsOutput
}

type EmailProviderCredentialsArgs struct {
	// AWS Access Key ID. Used only for AWS.
	AccessKeyId pulumi.StringPtrInput `pulumi:"accessKeyId"`
	// API Key for your email service. Will always be encrypted in our database.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// Azure Communication Services Connection String.
	AzureCsConnectionString pulumi.StringPtrInput `pulumi:"azureCsConnectionString"`
	// Domain name.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// Microsoft 365 Client ID.
	Ms365ClientId pulumi.StringPtrInput `pulumi:"ms365ClientId"`
	// Microsoft 365 Client Secret.
	Ms365ClientSecret pulumi.StringPtrInput `pulumi:"ms365ClientSecret"`
	// Microsoft 365 Tenant ID.
	Ms365TenantId pulumi.StringPtrInput `pulumi:"ms365TenantId"`
	// Default region. Used only for AWS, Mailgun, and SparkPost.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
	SecretAccessKey pulumi.StringPtrInput `pulumi:"secretAccessKey"`
	// Hostname or IP address of your SMTP server. Used only for SMTP.
	SmtpHost pulumi.StringPtrInput `pulumi:"smtpHost"`
	// SMTP password. Used only for SMTP.
	SmtpPass pulumi.StringPtrInput `pulumi:"smtpPass"`
	// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
	SmtpPort pulumi.IntPtrInput `pulumi:"smtpPort"`
	// SMTP username. Used only for SMTP.
	SmtpUser pulumi.StringPtrInput `pulumi:"smtpUser"`
}

func (EmailProviderCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailProviderCredentials)(nil)).Elem()
}

func (i EmailProviderCredentialsArgs) ToEmailProviderCredentialsOutput() EmailProviderCredentialsOutput {
	return i.ToEmailProviderCredentialsOutputWithContext(context.Background())
}

func (i EmailProviderCredentialsArgs) ToEmailProviderCredentialsOutputWithContext(ctx context.Context) EmailProviderCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderCredentialsOutput)
}

func (i EmailProviderCredentialsArgs) ToOutput(ctx context.Context) pulumix.Output[EmailProviderCredentials] {
	return pulumix.Output[EmailProviderCredentials]{
		OutputState: i.ToEmailProviderCredentialsOutputWithContext(ctx).OutputState,
	}
}

func (i EmailProviderCredentialsArgs) ToEmailProviderCredentialsPtrOutput() EmailProviderCredentialsPtrOutput {
	return i.ToEmailProviderCredentialsPtrOutputWithContext(context.Background())
}

func (i EmailProviderCredentialsArgs) ToEmailProviderCredentialsPtrOutputWithContext(ctx context.Context) EmailProviderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderCredentialsOutput).ToEmailProviderCredentialsPtrOutputWithContext(ctx)
}

// EmailProviderCredentialsPtrInput is an input type that accepts EmailProviderCredentialsArgs, EmailProviderCredentialsPtr and EmailProviderCredentialsPtrOutput values.
// You can construct a concrete instance of `EmailProviderCredentialsPtrInput` via:
//
//	        EmailProviderCredentialsArgs{...}
//
//	or:
//
//	        nil
type EmailProviderCredentialsPtrInput interface {
	pulumi.Input

	ToEmailProviderCredentialsPtrOutput() EmailProviderCredentialsPtrOutput
	ToEmailProviderCredentialsPtrOutputWithContext(context.Context) EmailProviderCredentialsPtrOutput
}

type emailProviderCredentialsPtrType EmailProviderCredentialsArgs

func EmailProviderCredentialsPtr(v *EmailProviderCredentialsArgs) EmailProviderCredentialsPtrInput {
	return (*emailProviderCredentialsPtrType)(v)
}

func (*emailProviderCredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailProviderCredentials)(nil)).Elem()
}

func (i *emailProviderCredentialsPtrType) ToEmailProviderCredentialsPtrOutput() EmailProviderCredentialsPtrOutput {
	return i.ToEmailProviderCredentialsPtrOutputWithContext(context.Background())
}

func (i *emailProviderCredentialsPtrType) ToEmailProviderCredentialsPtrOutputWithContext(ctx context.Context) EmailProviderCredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderCredentialsPtrOutput)
}

func (i *emailProviderCredentialsPtrType) ToOutput(ctx context.Context) pulumix.Output[*EmailProviderCredentials] {
	return pulumix.Output[*EmailProviderCredentials]{
		OutputState: i.ToEmailProviderCredentialsPtrOutputWithContext(ctx).OutputState,
	}
}

type EmailProviderCredentialsOutput struct{ *pulumi.OutputState }

func (EmailProviderCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailProviderCredentials)(nil)).Elem()
}

func (o EmailProviderCredentialsOutput) ToEmailProviderCredentialsOutput() EmailProviderCredentialsOutput {
	return o
}

func (o EmailProviderCredentialsOutput) ToEmailProviderCredentialsOutputWithContext(ctx context.Context) EmailProviderCredentialsOutput {
	return o
}

func (o EmailProviderCredentialsOutput) ToEmailProviderCredentialsPtrOutput() EmailProviderCredentialsPtrOutput {
	return o.ToEmailProviderCredentialsPtrOutputWithContext(context.Background())
}

func (o EmailProviderCredentialsOutput) ToEmailProviderCredentialsPtrOutputWithContext(ctx context.Context) EmailProviderCredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailProviderCredentials) *EmailProviderCredentials {
		return &v
	}).(EmailProviderCredentialsPtrOutput)
}

func (o EmailProviderCredentialsOutput) ToOutput(ctx context.Context) pulumix.Output[EmailProviderCredentials] {
	return pulumix.Output[EmailProviderCredentials]{
		OutputState: o.OutputState,
	}
}

// AWS Access Key ID. Used only for AWS.
func (o EmailProviderCredentialsOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.AccessKeyId }).(pulumi.StringPtrOutput)
}

// API Key for your email service. Will always be encrypted in our database.
func (o EmailProviderCredentialsOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Azure Communication Services Connection String.
func (o EmailProviderCredentialsOutput) AzureCsConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.AzureCsConnectionString }).(pulumi.StringPtrOutput)
}

// Domain name.
func (o EmailProviderCredentialsOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// Microsoft 365 Client ID.
func (o EmailProviderCredentialsOutput) Ms365ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.Ms365ClientId }).(pulumi.StringPtrOutput)
}

// Microsoft 365 Client Secret.
func (o EmailProviderCredentialsOutput) Ms365ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.Ms365ClientSecret }).(pulumi.StringPtrOutput)
}

// Microsoft 365 Tenant ID.
func (o EmailProviderCredentialsOutput) Ms365TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.Ms365TenantId }).(pulumi.StringPtrOutput)
}

// Default region. Used only for AWS, Mailgun, and SparkPost.
func (o EmailProviderCredentialsOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
func (o EmailProviderCredentialsOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.SecretAccessKey }).(pulumi.StringPtrOutput)
}

// Hostname or IP address of your SMTP server. Used only for SMTP.
func (o EmailProviderCredentialsOutput) SmtpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.SmtpHost }).(pulumi.StringPtrOutput)
}

// SMTP password. Used only for SMTP.
func (o EmailProviderCredentialsOutput) SmtpPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.SmtpPass }).(pulumi.StringPtrOutput)
}

// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
func (o EmailProviderCredentialsOutput) SmtpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *int { return v.SmtpPort }).(pulumi.IntPtrOutput)
}

// SMTP username. Used only for SMTP.
func (o EmailProviderCredentialsOutput) SmtpUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderCredentials) *string { return v.SmtpUser }).(pulumi.StringPtrOutput)
}

type EmailProviderCredentialsPtrOutput struct{ *pulumi.OutputState }

func (EmailProviderCredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailProviderCredentials)(nil)).Elem()
}

func (o EmailProviderCredentialsPtrOutput) ToEmailProviderCredentialsPtrOutput() EmailProviderCredentialsPtrOutput {
	return o
}

func (o EmailProviderCredentialsPtrOutput) ToEmailProviderCredentialsPtrOutputWithContext(ctx context.Context) EmailProviderCredentialsPtrOutput {
	return o
}

func (o EmailProviderCredentialsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EmailProviderCredentials] {
	return pulumix.Output[*EmailProviderCredentials]{
		OutputState: o.OutputState,
	}
}

func (o EmailProviderCredentialsPtrOutput) Elem() EmailProviderCredentialsOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) EmailProviderCredentials {
		if v != nil {
			return *v
		}
		var ret EmailProviderCredentials
		return ret
	}).(EmailProviderCredentialsOutput)
}

// AWS Access Key ID. Used only for AWS.
func (o EmailProviderCredentialsPtrOutput) AccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AccessKeyId
	}).(pulumi.StringPtrOutput)
}

// API Key for your email service. Will always be encrypted in our database.
func (o EmailProviderCredentialsPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Azure Communication Services Connection String.
func (o EmailProviderCredentialsPtrOutput) AzureCsConnectionString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.AzureCsConnectionString
	}).(pulumi.StringPtrOutput)
}

// Domain name.
func (o EmailProviderCredentialsPtrOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Domain
	}).(pulumi.StringPtrOutput)
}

// Microsoft 365 Client ID.
func (o EmailProviderCredentialsPtrOutput) Ms365ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Ms365ClientId
	}).(pulumi.StringPtrOutput)
}

// Microsoft 365 Client Secret.
func (o EmailProviderCredentialsPtrOutput) Ms365ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Ms365ClientSecret
	}).(pulumi.StringPtrOutput)
}

// Microsoft 365 Tenant ID.
func (o EmailProviderCredentialsPtrOutput) Ms365TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Ms365TenantId
	}).(pulumi.StringPtrOutput)
}

// Default region. Used only for AWS, Mailgun, and SparkPost.
func (o EmailProviderCredentialsPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// AWS Secret Key. Will always be encrypted in our database. Used only for AWS.
func (o EmailProviderCredentialsPtrOutput) SecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SecretAccessKey
	}).(pulumi.StringPtrOutput)
}

// Hostname or IP address of your SMTP server. Used only for SMTP.
func (o EmailProviderCredentialsPtrOutput) SmtpHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpHost
	}).(pulumi.StringPtrOutput)
}

// SMTP password. Used only for SMTP.
func (o EmailProviderCredentialsPtrOutput) SmtpPass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpPass
	}).(pulumi.StringPtrOutput)
}

// Port used by your SMTP server. Please avoid using port 25 if possible because many providers have limitations on this port. Used only for SMTP.
func (o EmailProviderCredentialsPtrOutput) SmtpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *int {
		if v == nil {
			return nil
		}
		return v.SmtpPort
	}).(pulumi.IntPtrOutput)
}

// SMTP username. Used only for SMTP.
func (o EmailProviderCredentialsPtrOutput) SmtpUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderCredentials) *string {
		if v == nil {
			return nil
		}
		return v.SmtpUser
	}).(pulumi.StringPtrOutput)
}

type EmailProviderSettings struct {
	// Headers settings for the `smtp` email provider.
	Headers *EmailProviderSettingsHeaders `pulumi:"headers"`
	// Message settings for the `mandrill` or `ses` email provider.
	Message *EmailProviderSettingsMessage `pulumi:"message"`
}

// EmailProviderSettingsInput is an input type that accepts EmailProviderSettingsArgs and EmailProviderSettingsOutput values.
// You can construct a concrete instance of `EmailProviderSettingsInput` via:
//
//	EmailProviderSettingsArgs{...}
type EmailProviderSettingsInput interface {
	pulumi.Input

	ToEmailProviderSettingsOutput() EmailProviderSettingsOutput
	ToEmailProviderSettingsOutputWithContext(context.Context) EmailProviderSettingsOutput
}

type EmailProviderSettingsArgs struct {
	// Headers settings for the `smtp` email provider.
	Headers EmailProviderSettingsHeadersPtrInput `pulumi:"headers"`
	// Message settings for the `mandrill` or `ses` email provider.
	Message EmailProviderSettingsMessagePtrInput `pulumi:"message"`
}

func (EmailProviderSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailProviderSettings)(nil)).Elem()
}

func (i EmailProviderSettingsArgs) ToEmailProviderSettingsOutput() EmailProviderSettingsOutput {
	return i.ToEmailProviderSettingsOutputWithContext(context.Background())
}

func (i EmailProviderSettingsArgs) ToEmailProviderSettingsOutputWithContext(ctx context.Context) EmailProviderSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderSettingsOutput)
}

func (i EmailProviderSettingsArgs) ToOutput(ctx context.Context) pulumix.Output[EmailProviderSettings] {
	return pulumix.Output[EmailProviderSettings]{
		OutputState: i.ToEmailProviderSettingsOutputWithContext(ctx).OutputState,
	}
}

func (i EmailProviderSettingsArgs) ToEmailProviderSettingsPtrOutput() EmailProviderSettingsPtrOutput {
	return i.ToEmailProviderSettingsPtrOutputWithContext(context.Background())
}

func (i EmailProviderSettingsArgs) ToEmailProviderSettingsPtrOutputWithContext(ctx context.Context) EmailProviderSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderSettingsOutput).ToEmailProviderSettingsPtrOutputWithContext(ctx)
}

// EmailProviderSettingsPtrInput is an input type that accepts EmailProviderSettingsArgs, EmailProviderSettingsPtr and EmailProviderSettingsPtrOutput values.
// You can construct a concrete instance of `EmailProviderSettingsPtrInput` via:
//
//	        EmailProviderSettingsArgs{...}
//
//	or:
//
//	        nil
type EmailProviderSettingsPtrInput interface {
	pulumi.Input

	ToEmailProviderSettingsPtrOutput() EmailProviderSettingsPtrOutput
	ToEmailProviderSettingsPtrOutputWithContext(context.Context) EmailProviderSettingsPtrOutput
}

type emailProviderSettingsPtrType EmailProviderSettingsArgs

func EmailProviderSettingsPtr(v *EmailProviderSettingsArgs) EmailProviderSettingsPtrInput {
	return (*emailProviderSettingsPtrType)(v)
}

func (*emailProviderSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailProviderSettings)(nil)).Elem()
}

func (i *emailProviderSettingsPtrType) ToEmailProviderSettingsPtrOutput() EmailProviderSettingsPtrOutput {
	return i.ToEmailProviderSettingsPtrOutputWithContext(context.Background())
}

func (i *emailProviderSettingsPtrType) ToEmailProviderSettingsPtrOutputWithContext(ctx context.Context) EmailProviderSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderSettingsPtrOutput)
}

func (i *emailProviderSettingsPtrType) ToOutput(ctx context.Context) pulumix.Output[*EmailProviderSettings] {
	return pulumix.Output[*EmailProviderSettings]{
		OutputState: i.ToEmailProviderSettingsPtrOutputWithContext(ctx).OutputState,
	}
}

type EmailProviderSettingsOutput struct{ *pulumi.OutputState }

func (EmailProviderSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailProviderSettings)(nil)).Elem()
}

func (o EmailProviderSettingsOutput) ToEmailProviderSettingsOutput() EmailProviderSettingsOutput {
	return o
}

func (o EmailProviderSettingsOutput) ToEmailProviderSettingsOutputWithContext(ctx context.Context) EmailProviderSettingsOutput {
	return o
}

func (o EmailProviderSettingsOutput) ToEmailProviderSettingsPtrOutput() EmailProviderSettingsPtrOutput {
	return o.ToEmailProviderSettingsPtrOutputWithContext(context.Background())
}

func (o EmailProviderSettingsOutput) ToEmailProviderSettingsPtrOutputWithContext(ctx context.Context) EmailProviderSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailProviderSettings) *EmailProviderSettings {
		return &v
	}).(EmailProviderSettingsPtrOutput)
}

func (o EmailProviderSettingsOutput) ToOutput(ctx context.Context) pulumix.Output[EmailProviderSettings] {
	return pulumix.Output[EmailProviderSettings]{
		OutputState: o.OutputState,
	}
}

// Headers settings for the `smtp` email provider.
func (o EmailProviderSettingsOutput) Headers() EmailProviderSettingsHeadersPtrOutput {
	return o.ApplyT(func(v EmailProviderSettings) *EmailProviderSettingsHeaders { return v.Headers }).(EmailProviderSettingsHeadersPtrOutput)
}

// Message settings for the `mandrill` or `ses` email provider.
func (o EmailProviderSettingsOutput) Message() EmailProviderSettingsMessagePtrOutput {
	return o.ApplyT(func(v EmailProviderSettings) *EmailProviderSettingsMessage { return v.Message }).(EmailProviderSettingsMessagePtrOutput)
}

type EmailProviderSettingsPtrOutput struct{ *pulumi.OutputState }

func (EmailProviderSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailProviderSettings)(nil)).Elem()
}

func (o EmailProviderSettingsPtrOutput) ToEmailProviderSettingsPtrOutput() EmailProviderSettingsPtrOutput {
	return o
}

func (o EmailProviderSettingsPtrOutput) ToEmailProviderSettingsPtrOutputWithContext(ctx context.Context) EmailProviderSettingsPtrOutput {
	return o
}

func (o EmailProviderSettingsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EmailProviderSettings] {
	return pulumix.Output[*EmailProviderSettings]{
		OutputState: o.OutputState,
	}
}

func (o EmailProviderSettingsPtrOutput) Elem() EmailProviderSettingsOutput {
	return o.ApplyT(func(v *EmailProviderSettings) EmailProviderSettings {
		if v != nil {
			return *v
		}
		var ret EmailProviderSettings
		return ret
	}).(EmailProviderSettingsOutput)
}

// Headers settings for the `smtp` email provider.
func (o EmailProviderSettingsPtrOutput) Headers() EmailProviderSettingsHeadersPtrOutput {
	return o.ApplyT(func(v *EmailProviderSettings) *EmailProviderSettingsHeaders {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(EmailProviderSettingsHeadersPtrOutput)
}

// Message settings for the `mandrill` or `ses` email provider.
func (o EmailProviderSettingsPtrOutput) Message() EmailProviderSettingsMessagePtrOutput {
	return o.ApplyT(func(v *EmailProviderSettings) *EmailProviderSettingsMessage {
		if v == nil {
			return nil
		}
		return v.Message
	}).(EmailProviderSettingsMessagePtrOutput)
}

type EmailProviderSettingsHeaders struct {
	XMcViewContentLink   *string `pulumi:"xMcViewContentLink"`
	XSesConfigurationSet *string `pulumi:"xSesConfigurationSet"`
}

// EmailProviderSettingsHeadersInput is an input type that accepts EmailProviderSettingsHeadersArgs and EmailProviderSettingsHeadersOutput values.
// You can construct a concrete instance of `EmailProviderSettingsHeadersInput` via:
//
//	EmailProviderSettingsHeadersArgs{...}
type EmailProviderSettingsHeadersInput interface {
	pulumi.Input

	ToEmailProviderSettingsHeadersOutput() EmailProviderSettingsHeadersOutput
	ToEmailProviderSettingsHeadersOutputWithContext(context.Context) EmailProviderSettingsHeadersOutput
}

type EmailProviderSettingsHeadersArgs struct {
	XMcViewContentLink   pulumi.StringPtrInput `pulumi:"xMcViewContentLink"`
	XSesConfigurationSet pulumi.StringPtrInput `pulumi:"xSesConfigurationSet"`
}

func (EmailProviderSettingsHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailProviderSettingsHeaders)(nil)).Elem()
}

func (i EmailProviderSettingsHeadersArgs) ToEmailProviderSettingsHeadersOutput() EmailProviderSettingsHeadersOutput {
	return i.ToEmailProviderSettingsHeadersOutputWithContext(context.Background())
}

func (i EmailProviderSettingsHeadersArgs) ToEmailProviderSettingsHeadersOutputWithContext(ctx context.Context) EmailProviderSettingsHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderSettingsHeadersOutput)
}

func (i EmailProviderSettingsHeadersArgs) ToOutput(ctx context.Context) pulumix.Output[EmailProviderSettingsHeaders] {
	return pulumix.Output[EmailProviderSettingsHeaders]{
		OutputState: i.ToEmailProviderSettingsHeadersOutputWithContext(ctx).OutputState,
	}
}

func (i EmailProviderSettingsHeadersArgs) ToEmailProviderSettingsHeadersPtrOutput() EmailProviderSettingsHeadersPtrOutput {
	return i.ToEmailProviderSettingsHeadersPtrOutputWithContext(context.Background())
}

func (i EmailProviderSettingsHeadersArgs) ToEmailProviderSettingsHeadersPtrOutputWithContext(ctx context.Context) EmailProviderSettingsHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderSettingsHeadersOutput).ToEmailProviderSettingsHeadersPtrOutputWithContext(ctx)
}

// EmailProviderSettingsHeadersPtrInput is an input type that accepts EmailProviderSettingsHeadersArgs, EmailProviderSettingsHeadersPtr and EmailProviderSettingsHeadersPtrOutput values.
// You can construct a concrete instance of `EmailProviderSettingsHeadersPtrInput` via:
//
//	        EmailProviderSettingsHeadersArgs{...}
//
//	or:
//
//	        nil
type EmailProviderSettingsHeadersPtrInput interface {
	pulumi.Input

	ToEmailProviderSettingsHeadersPtrOutput() EmailProviderSettingsHeadersPtrOutput
	ToEmailProviderSettingsHeadersPtrOutputWithContext(context.Context) EmailProviderSettingsHeadersPtrOutput
}

type emailProviderSettingsHeadersPtrType EmailProviderSettingsHeadersArgs

func EmailProviderSettingsHeadersPtr(v *EmailProviderSettingsHeadersArgs) EmailProviderSettingsHeadersPtrInput {
	return (*emailProviderSettingsHeadersPtrType)(v)
}

func (*emailProviderSettingsHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailProviderSettingsHeaders)(nil)).Elem()
}

func (i *emailProviderSettingsHeadersPtrType) ToEmailProviderSettingsHeadersPtrOutput() EmailProviderSettingsHeadersPtrOutput {
	return i.ToEmailProviderSettingsHeadersPtrOutputWithContext(context.Background())
}

func (i *emailProviderSettingsHeadersPtrType) ToEmailProviderSettingsHeadersPtrOutputWithContext(ctx context.Context) EmailProviderSettingsHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderSettingsHeadersPtrOutput)
}

func (i *emailProviderSettingsHeadersPtrType) ToOutput(ctx context.Context) pulumix.Output[*EmailProviderSettingsHeaders] {
	return pulumix.Output[*EmailProviderSettingsHeaders]{
		OutputState: i.ToEmailProviderSettingsHeadersPtrOutputWithContext(ctx).OutputState,
	}
}

type EmailProviderSettingsHeadersOutput struct{ *pulumi.OutputState }

func (EmailProviderSettingsHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailProviderSettingsHeaders)(nil)).Elem()
}

func (o EmailProviderSettingsHeadersOutput) ToEmailProviderSettingsHeadersOutput() EmailProviderSettingsHeadersOutput {
	return o
}

func (o EmailProviderSettingsHeadersOutput) ToEmailProviderSettingsHeadersOutputWithContext(ctx context.Context) EmailProviderSettingsHeadersOutput {
	return o
}

func (o EmailProviderSettingsHeadersOutput) ToEmailProviderSettingsHeadersPtrOutput() EmailProviderSettingsHeadersPtrOutput {
	return o.ToEmailProviderSettingsHeadersPtrOutputWithContext(context.Background())
}

func (o EmailProviderSettingsHeadersOutput) ToEmailProviderSettingsHeadersPtrOutputWithContext(ctx context.Context) EmailProviderSettingsHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailProviderSettingsHeaders) *EmailProviderSettingsHeaders {
		return &v
	}).(EmailProviderSettingsHeadersPtrOutput)
}

func (o EmailProviderSettingsHeadersOutput) ToOutput(ctx context.Context) pulumix.Output[EmailProviderSettingsHeaders] {
	return pulumix.Output[EmailProviderSettingsHeaders]{
		OutputState: o.OutputState,
	}
}

func (o EmailProviderSettingsHeadersOutput) XMcViewContentLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderSettingsHeaders) *string { return v.XMcViewContentLink }).(pulumi.StringPtrOutput)
}

func (o EmailProviderSettingsHeadersOutput) XSesConfigurationSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderSettingsHeaders) *string { return v.XSesConfigurationSet }).(pulumi.StringPtrOutput)
}

type EmailProviderSettingsHeadersPtrOutput struct{ *pulumi.OutputState }

func (EmailProviderSettingsHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailProviderSettingsHeaders)(nil)).Elem()
}

func (o EmailProviderSettingsHeadersPtrOutput) ToEmailProviderSettingsHeadersPtrOutput() EmailProviderSettingsHeadersPtrOutput {
	return o
}

func (o EmailProviderSettingsHeadersPtrOutput) ToEmailProviderSettingsHeadersPtrOutputWithContext(ctx context.Context) EmailProviderSettingsHeadersPtrOutput {
	return o
}

func (o EmailProviderSettingsHeadersPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EmailProviderSettingsHeaders] {
	return pulumix.Output[*EmailProviderSettingsHeaders]{
		OutputState: o.OutputState,
	}
}

func (o EmailProviderSettingsHeadersPtrOutput) Elem() EmailProviderSettingsHeadersOutput {
	return o.ApplyT(func(v *EmailProviderSettingsHeaders) EmailProviderSettingsHeaders {
		if v != nil {
			return *v
		}
		var ret EmailProviderSettingsHeaders
		return ret
	}).(EmailProviderSettingsHeadersOutput)
}

func (o EmailProviderSettingsHeadersPtrOutput) XMcViewContentLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderSettingsHeaders) *string {
		if v == nil {
			return nil
		}
		return v.XMcViewContentLink
	}).(pulumi.StringPtrOutput)
}

func (o EmailProviderSettingsHeadersPtrOutput) XSesConfigurationSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderSettingsHeaders) *string {
		if v == nil {
			return nil
		}
		return v.XSesConfigurationSet
	}).(pulumi.StringPtrOutput)
}

type EmailProviderSettingsMessage struct {
	ConfigurationSetName *string `pulumi:"configurationSetName"`
	ViewContentLink      *bool   `pulumi:"viewContentLink"`
}

// EmailProviderSettingsMessageInput is an input type that accepts EmailProviderSettingsMessageArgs and EmailProviderSettingsMessageOutput values.
// You can construct a concrete instance of `EmailProviderSettingsMessageInput` via:
//
//	EmailProviderSettingsMessageArgs{...}
type EmailProviderSettingsMessageInput interface {
	pulumi.Input

	ToEmailProviderSettingsMessageOutput() EmailProviderSettingsMessageOutput
	ToEmailProviderSettingsMessageOutputWithContext(context.Context) EmailProviderSettingsMessageOutput
}

type EmailProviderSettingsMessageArgs struct {
	ConfigurationSetName pulumi.StringPtrInput `pulumi:"configurationSetName"`
	ViewContentLink      pulumi.BoolPtrInput   `pulumi:"viewContentLink"`
}

func (EmailProviderSettingsMessageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailProviderSettingsMessage)(nil)).Elem()
}

func (i EmailProviderSettingsMessageArgs) ToEmailProviderSettingsMessageOutput() EmailProviderSettingsMessageOutput {
	return i.ToEmailProviderSettingsMessageOutputWithContext(context.Background())
}

func (i EmailProviderSettingsMessageArgs) ToEmailProviderSettingsMessageOutputWithContext(ctx context.Context) EmailProviderSettingsMessageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderSettingsMessageOutput)
}

func (i EmailProviderSettingsMessageArgs) ToOutput(ctx context.Context) pulumix.Output[EmailProviderSettingsMessage] {
	return pulumix.Output[EmailProviderSettingsMessage]{
		OutputState: i.ToEmailProviderSettingsMessageOutputWithContext(ctx).OutputState,
	}
}

func (i EmailProviderSettingsMessageArgs) ToEmailProviderSettingsMessagePtrOutput() EmailProviderSettingsMessagePtrOutput {
	return i.ToEmailProviderSettingsMessagePtrOutputWithContext(context.Background())
}

func (i EmailProviderSettingsMessageArgs) ToEmailProviderSettingsMessagePtrOutputWithContext(ctx context.Context) EmailProviderSettingsMessagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderSettingsMessageOutput).ToEmailProviderSettingsMessagePtrOutputWithContext(ctx)
}

// EmailProviderSettingsMessagePtrInput is an input type that accepts EmailProviderSettingsMessageArgs, EmailProviderSettingsMessagePtr and EmailProviderSettingsMessagePtrOutput values.
// You can construct a concrete instance of `EmailProviderSettingsMessagePtrInput` via:
//
//	        EmailProviderSettingsMessageArgs{...}
//
//	or:
//
//	        nil
type EmailProviderSettingsMessagePtrInput interface {
	pulumi.Input

	ToEmailProviderSettingsMessagePtrOutput() EmailProviderSettingsMessagePtrOutput
	ToEmailProviderSettingsMessagePtrOutputWithContext(context.Context) EmailProviderSettingsMessagePtrOutput
}

type emailProviderSettingsMessagePtrType EmailProviderSettingsMessageArgs

func EmailProviderSettingsMessagePtr(v *EmailProviderSettingsMessageArgs) EmailProviderSettingsMessagePtrInput {
	return (*emailProviderSettingsMessagePtrType)(v)
}

func (*emailProviderSettingsMessagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailProviderSettingsMessage)(nil)).Elem()
}

func (i *emailProviderSettingsMessagePtrType) ToEmailProviderSettingsMessagePtrOutput() EmailProviderSettingsMessagePtrOutput {
	return i.ToEmailProviderSettingsMessagePtrOutputWithContext(context.Background())
}

func (i *emailProviderSettingsMessagePtrType) ToEmailProviderSettingsMessagePtrOutputWithContext(ctx context.Context) EmailProviderSettingsMessagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailProviderSettingsMessagePtrOutput)
}

func (i *emailProviderSettingsMessagePtrType) ToOutput(ctx context.Context) pulumix.Output[*EmailProviderSettingsMessage] {
	return pulumix.Output[*EmailProviderSettingsMessage]{
		OutputState: i.ToEmailProviderSettingsMessagePtrOutputWithContext(ctx).OutputState,
	}
}

type EmailProviderSettingsMessageOutput struct{ *pulumi.OutputState }

func (EmailProviderSettingsMessageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EmailProviderSettingsMessage)(nil)).Elem()
}

func (o EmailProviderSettingsMessageOutput) ToEmailProviderSettingsMessageOutput() EmailProviderSettingsMessageOutput {
	return o
}

func (o EmailProviderSettingsMessageOutput) ToEmailProviderSettingsMessageOutputWithContext(ctx context.Context) EmailProviderSettingsMessageOutput {
	return o
}

func (o EmailProviderSettingsMessageOutput) ToEmailProviderSettingsMessagePtrOutput() EmailProviderSettingsMessagePtrOutput {
	return o.ToEmailProviderSettingsMessagePtrOutputWithContext(context.Background())
}

func (o EmailProviderSettingsMessageOutput) ToEmailProviderSettingsMessagePtrOutputWithContext(ctx context.Context) EmailProviderSettingsMessagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EmailProviderSettingsMessage) *EmailProviderSettingsMessage {
		return &v
	}).(EmailProviderSettingsMessagePtrOutput)
}

func (o EmailProviderSettingsMessageOutput) ToOutput(ctx context.Context) pulumix.Output[EmailProviderSettingsMessage] {
	return pulumix.Output[EmailProviderSettingsMessage]{
		OutputState: o.OutputState,
	}
}

func (o EmailProviderSettingsMessageOutput) ConfigurationSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EmailProviderSettingsMessage) *string { return v.ConfigurationSetName }).(pulumi.StringPtrOutput)
}

func (o EmailProviderSettingsMessageOutput) ViewContentLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EmailProviderSettingsMessage) *bool { return v.ViewContentLink }).(pulumi.BoolPtrOutput)
}

type EmailProviderSettingsMessagePtrOutput struct{ *pulumi.OutputState }

func (EmailProviderSettingsMessagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailProviderSettingsMessage)(nil)).Elem()
}

func (o EmailProviderSettingsMessagePtrOutput) ToEmailProviderSettingsMessagePtrOutput() EmailProviderSettingsMessagePtrOutput {
	return o
}

func (o EmailProviderSettingsMessagePtrOutput) ToEmailProviderSettingsMessagePtrOutputWithContext(ctx context.Context) EmailProviderSettingsMessagePtrOutput {
	return o
}

func (o EmailProviderSettingsMessagePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EmailProviderSettingsMessage] {
	return pulumix.Output[*EmailProviderSettingsMessage]{
		OutputState: o.OutputState,
	}
}

func (o EmailProviderSettingsMessagePtrOutput) Elem() EmailProviderSettingsMessageOutput {
	return o.ApplyT(func(v *EmailProviderSettingsMessage) EmailProviderSettingsMessage {
		if v != nil {
			return *v
		}
		var ret EmailProviderSettingsMessage
		return ret
	}).(EmailProviderSettingsMessageOutput)
}

func (o EmailProviderSettingsMessagePtrOutput) ConfigurationSetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EmailProviderSettingsMessage) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationSetName
	}).(pulumi.StringPtrOutput)
}

func (o EmailProviderSettingsMessagePtrOutput) ViewContentLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EmailProviderSettingsMessage) *bool {
		if v == nil {
			return nil
		}
		return v.ViewContentLink
	}).(pulumi.BoolPtrOutput)
}

type GuardianDuo struct {
	// Indicates whether Duo MFA is enabled.
	Enabled bool `pulumi:"enabled"`
	// Duo API Hostname, see the Duo documentation for more details on Duo setup.
	Hostname *string `pulumi:"hostname"`
	// Duo client ID, see the Duo documentation for more details on Duo setup.
	IntegrationKey *string `pulumi:"integrationKey"`
	// Duo client secret, see the Duo documentation for more details on Duo setup.
	SecretKey *string `pulumi:"secretKey"`
}

// GuardianDuoInput is an input type that accepts GuardianDuoArgs and GuardianDuoOutput values.
// You can construct a concrete instance of `GuardianDuoInput` via:
//
//	GuardianDuoArgs{...}
type GuardianDuoInput interface {
	pulumi.Input

	ToGuardianDuoOutput() GuardianDuoOutput
	ToGuardianDuoOutputWithContext(context.Context) GuardianDuoOutput
}

type GuardianDuoArgs struct {
	// Indicates whether Duo MFA is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Duo API Hostname, see the Duo documentation for more details on Duo setup.
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// Duo client ID, see the Duo documentation for more details on Duo setup.
	IntegrationKey pulumi.StringPtrInput `pulumi:"integrationKey"`
	// Duo client secret, see the Duo documentation for more details on Duo setup.
	SecretKey pulumi.StringPtrInput `pulumi:"secretKey"`
}

func (GuardianDuoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianDuo)(nil)).Elem()
}

func (i GuardianDuoArgs) ToGuardianDuoOutput() GuardianDuoOutput {
	return i.ToGuardianDuoOutputWithContext(context.Background())
}

func (i GuardianDuoArgs) ToGuardianDuoOutputWithContext(ctx context.Context) GuardianDuoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianDuoOutput)
}

func (i GuardianDuoArgs) ToOutput(ctx context.Context) pulumix.Output[GuardianDuo] {
	return pulumix.Output[GuardianDuo]{
		OutputState: i.ToGuardianDuoOutputWithContext(ctx).OutputState,
	}
}

func (i GuardianDuoArgs) ToGuardianDuoPtrOutput() GuardianDuoPtrOutput {
	return i.ToGuardianDuoPtrOutputWithContext(context.Background())
}

func (i GuardianDuoArgs) ToGuardianDuoPtrOutputWithContext(ctx context.Context) GuardianDuoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianDuoOutput).ToGuardianDuoPtrOutputWithContext(ctx)
}

// GuardianDuoPtrInput is an input type that accepts GuardianDuoArgs, GuardianDuoPtr and GuardianDuoPtrOutput values.
// You can construct a concrete instance of `GuardianDuoPtrInput` via:
//
//	        GuardianDuoArgs{...}
//
//	or:
//
//	        nil
type GuardianDuoPtrInput interface {
	pulumi.Input

	ToGuardianDuoPtrOutput() GuardianDuoPtrOutput
	ToGuardianDuoPtrOutputWithContext(context.Context) GuardianDuoPtrOutput
}

type guardianDuoPtrType GuardianDuoArgs

func GuardianDuoPtr(v *GuardianDuoArgs) GuardianDuoPtrInput {
	return (*guardianDuoPtrType)(v)
}

func (*guardianDuoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianDuo)(nil)).Elem()
}

func (i *guardianDuoPtrType) ToGuardianDuoPtrOutput() GuardianDuoPtrOutput {
	return i.ToGuardianDuoPtrOutputWithContext(context.Background())
}

func (i *guardianDuoPtrType) ToGuardianDuoPtrOutputWithContext(ctx context.Context) GuardianDuoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianDuoPtrOutput)
}

func (i *guardianDuoPtrType) ToOutput(ctx context.Context) pulumix.Output[*GuardianDuo] {
	return pulumix.Output[*GuardianDuo]{
		OutputState: i.ToGuardianDuoPtrOutputWithContext(ctx).OutputState,
	}
}

type GuardianDuoOutput struct{ *pulumi.OutputState }

func (GuardianDuoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianDuo)(nil)).Elem()
}

func (o GuardianDuoOutput) ToGuardianDuoOutput() GuardianDuoOutput {
	return o
}

func (o GuardianDuoOutput) ToGuardianDuoOutputWithContext(ctx context.Context) GuardianDuoOutput {
	return o
}

func (o GuardianDuoOutput) ToGuardianDuoPtrOutput() GuardianDuoPtrOutput {
	return o.ToGuardianDuoPtrOutputWithContext(context.Background())
}

func (o GuardianDuoOutput) ToGuardianDuoPtrOutputWithContext(ctx context.Context) GuardianDuoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianDuo) *GuardianDuo {
		return &v
	}).(GuardianDuoPtrOutput)
}

func (o GuardianDuoOutput) ToOutput(ctx context.Context) pulumix.Output[GuardianDuo] {
	return pulumix.Output[GuardianDuo]{
		OutputState: o.OutputState,
	}
}

// Indicates whether Duo MFA is enabled.
func (o GuardianDuoOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianDuo) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Duo API Hostname, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianDuo) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// Duo client ID, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoOutput) IntegrationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianDuo) *string { return v.IntegrationKey }).(pulumi.StringPtrOutput)
}

// Duo client secret, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianDuo) *string { return v.SecretKey }).(pulumi.StringPtrOutput)
}

type GuardianDuoPtrOutput struct{ *pulumi.OutputState }

func (GuardianDuoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianDuo)(nil)).Elem()
}

func (o GuardianDuoPtrOutput) ToGuardianDuoPtrOutput() GuardianDuoPtrOutput {
	return o
}

func (o GuardianDuoPtrOutput) ToGuardianDuoPtrOutputWithContext(ctx context.Context) GuardianDuoPtrOutput {
	return o
}

func (o GuardianDuoPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GuardianDuo] {
	return pulumix.Output[*GuardianDuo]{
		OutputState: o.OutputState,
	}
}

func (o GuardianDuoPtrOutput) Elem() GuardianDuoOutput {
	return o.ApplyT(func(v *GuardianDuo) GuardianDuo {
		if v != nil {
			return *v
		}
		var ret GuardianDuo
		return ret
	}).(GuardianDuoOutput)
}

// Indicates whether Duo MFA is enabled.
func (o GuardianDuoPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianDuo) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Duo API Hostname, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianDuo) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// Duo client ID, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoPtrOutput) IntegrationKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianDuo) *string {
		if v == nil {
			return nil
		}
		return v.IntegrationKey
	}).(pulumi.StringPtrOutput)
}

// Duo client secret, see the Duo documentation for more details on Duo setup.
func (o GuardianDuoPtrOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianDuo) *string {
		if v == nil {
			return nil
		}
		return v.SecretKey
	}).(pulumi.StringPtrOutput)
}

type GuardianPhone struct {
	// Indicates whether Phone MFA is enabled.
	Enabled bool `pulumi:"enabled"`
	// Message types to use, array of `sms` and/or `voice`. Adding both to the array should enable the user to choose.
	MessageTypes []string `pulumi:"messageTypes"`
	// Options for the various providers.
	Options *GuardianPhoneOptions `pulumi:"options"`
	// Provider to use, one of `auth0`, `twilio` or `phone-message-hook`. Selecting `phone-message-hook` will require a Phone Message Action to be created before. [Learn how](https://auth0.com/docs/customize/actions/flows-and-triggers/send-phone-message-flow).
	Provider *string `pulumi:"provider"`
}

// GuardianPhoneInput is an input type that accepts GuardianPhoneArgs and GuardianPhoneOutput values.
// You can construct a concrete instance of `GuardianPhoneInput` via:
//
//	GuardianPhoneArgs{...}
type GuardianPhoneInput interface {
	pulumi.Input

	ToGuardianPhoneOutput() GuardianPhoneOutput
	ToGuardianPhoneOutputWithContext(context.Context) GuardianPhoneOutput
}

type GuardianPhoneArgs struct {
	// Indicates whether Phone MFA is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Message types to use, array of `sms` and/or `voice`. Adding both to the array should enable the user to choose.
	MessageTypes pulumi.StringArrayInput `pulumi:"messageTypes"`
	// Options for the various providers.
	Options GuardianPhoneOptionsPtrInput `pulumi:"options"`
	// Provider to use, one of `auth0`, `twilio` or `phone-message-hook`. Selecting `phone-message-hook` will require a Phone Message Action to be created before. [Learn how](https://auth0.com/docs/customize/actions/flows-and-triggers/send-phone-message-flow).
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (GuardianPhoneArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhone)(nil)).Elem()
}

func (i GuardianPhoneArgs) ToGuardianPhoneOutput() GuardianPhoneOutput {
	return i.ToGuardianPhoneOutputWithContext(context.Background())
}

func (i GuardianPhoneArgs) ToGuardianPhoneOutputWithContext(ctx context.Context) GuardianPhoneOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOutput)
}

func (i GuardianPhoneArgs) ToOutput(ctx context.Context) pulumix.Output[GuardianPhone] {
	return pulumix.Output[GuardianPhone]{
		OutputState: i.ToGuardianPhoneOutputWithContext(ctx).OutputState,
	}
}

func (i GuardianPhoneArgs) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return i.ToGuardianPhonePtrOutputWithContext(context.Background())
}

func (i GuardianPhoneArgs) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOutput).ToGuardianPhonePtrOutputWithContext(ctx)
}

// GuardianPhonePtrInput is an input type that accepts GuardianPhoneArgs, GuardianPhonePtr and GuardianPhonePtrOutput values.
// You can construct a concrete instance of `GuardianPhonePtrInput` via:
//
//	        GuardianPhoneArgs{...}
//
//	or:
//
//	        nil
type GuardianPhonePtrInput interface {
	pulumi.Input

	ToGuardianPhonePtrOutput() GuardianPhonePtrOutput
	ToGuardianPhonePtrOutputWithContext(context.Context) GuardianPhonePtrOutput
}

type guardianPhonePtrType GuardianPhoneArgs

func GuardianPhonePtr(v *GuardianPhoneArgs) GuardianPhonePtrInput {
	return (*guardianPhonePtrType)(v)
}

func (*guardianPhonePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhone)(nil)).Elem()
}

func (i *guardianPhonePtrType) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return i.ToGuardianPhonePtrOutputWithContext(context.Background())
}

func (i *guardianPhonePtrType) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhonePtrOutput)
}

func (i *guardianPhonePtrType) ToOutput(ctx context.Context) pulumix.Output[*GuardianPhone] {
	return pulumix.Output[*GuardianPhone]{
		OutputState: i.ToGuardianPhonePtrOutputWithContext(ctx).OutputState,
	}
}

type GuardianPhoneOutput struct{ *pulumi.OutputState }

func (GuardianPhoneOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhone)(nil)).Elem()
}

func (o GuardianPhoneOutput) ToGuardianPhoneOutput() GuardianPhoneOutput {
	return o
}

func (o GuardianPhoneOutput) ToGuardianPhoneOutputWithContext(ctx context.Context) GuardianPhoneOutput {
	return o
}

func (o GuardianPhoneOutput) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return o.ToGuardianPhonePtrOutputWithContext(context.Background())
}

func (o GuardianPhoneOutput) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPhone) *GuardianPhone {
		return &v
	}).(GuardianPhonePtrOutput)
}

func (o GuardianPhoneOutput) ToOutput(ctx context.Context) pulumix.Output[GuardianPhone] {
	return pulumix.Output[GuardianPhone]{
		OutputState: o.OutputState,
	}
}

// Indicates whether Phone MFA is enabled.
func (o GuardianPhoneOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianPhone) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Message types to use, array of `sms` and/or `voice`. Adding both to the array should enable the user to choose.
func (o GuardianPhoneOutput) MessageTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GuardianPhone) []string { return v.MessageTypes }).(pulumi.StringArrayOutput)
}

// Options for the various providers.
func (o GuardianPhoneOutput) Options() GuardianPhoneOptionsPtrOutput {
	return o.ApplyT(func(v GuardianPhone) *GuardianPhoneOptions { return v.Options }).(GuardianPhoneOptionsPtrOutput)
}

// Provider to use, one of `auth0`, `twilio` or `phone-message-hook`. Selecting `phone-message-hook` will require a Phone Message Action to be created before. [Learn how](https://auth0.com/docs/customize/actions/flows-and-triggers/send-phone-message-flow).
func (o GuardianPhoneOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhone) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type GuardianPhonePtrOutput struct{ *pulumi.OutputState }

func (GuardianPhonePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhone)(nil)).Elem()
}

func (o GuardianPhonePtrOutput) ToGuardianPhonePtrOutput() GuardianPhonePtrOutput {
	return o
}

func (o GuardianPhonePtrOutput) ToGuardianPhonePtrOutputWithContext(ctx context.Context) GuardianPhonePtrOutput {
	return o
}

func (o GuardianPhonePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GuardianPhone] {
	return pulumix.Output[*GuardianPhone]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPhonePtrOutput) Elem() GuardianPhoneOutput {
	return o.ApplyT(func(v *GuardianPhone) GuardianPhone {
		if v != nil {
			return *v
		}
		var ret GuardianPhone
		return ret
	}).(GuardianPhoneOutput)
}

// Indicates whether Phone MFA is enabled.
func (o GuardianPhonePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianPhone) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Message types to use, array of `sms` and/or `voice`. Adding both to the array should enable the user to choose.
func (o GuardianPhonePtrOutput) MessageTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GuardianPhone) []string {
		if v == nil {
			return nil
		}
		return v.MessageTypes
	}).(pulumi.StringArrayOutput)
}

// Options for the various providers.
func (o GuardianPhonePtrOutput) Options() GuardianPhoneOptionsPtrOutput {
	return o.ApplyT(func(v *GuardianPhone) *GuardianPhoneOptions {
		if v == nil {
			return nil
		}
		return v.Options
	}).(GuardianPhoneOptionsPtrOutput)
}

// Provider to use, one of `auth0`, `twilio` or `phone-message-hook`. Selecting `phone-message-hook` will require a Phone Message Action to be created before. [Learn how](https://auth0.com/docs/customize/actions/flows-and-triggers/send-phone-message-flow).
func (o GuardianPhonePtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhone) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

type GuardianPhoneOptions struct {
	AuthToken           *string `pulumi:"authToken"`
	EnrollmentMessage   *string `pulumi:"enrollmentMessage"`
	From                *string `pulumi:"from"`
	MessagingServiceSid *string `pulumi:"messagingServiceSid"`
	Sid                 *string `pulumi:"sid"`
	VerificationMessage *string `pulumi:"verificationMessage"`
}

// GuardianPhoneOptionsInput is an input type that accepts GuardianPhoneOptionsArgs and GuardianPhoneOptionsOutput values.
// You can construct a concrete instance of `GuardianPhoneOptionsInput` via:
//
//	GuardianPhoneOptionsArgs{...}
type GuardianPhoneOptionsInput interface {
	pulumi.Input

	ToGuardianPhoneOptionsOutput() GuardianPhoneOptionsOutput
	ToGuardianPhoneOptionsOutputWithContext(context.Context) GuardianPhoneOptionsOutput
}

type GuardianPhoneOptionsArgs struct {
	AuthToken           pulumi.StringPtrInput `pulumi:"authToken"`
	EnrollmentMessage   pulumi.StringPtrInput `pulumi:"enrollmentMessage"`
	From                pulumi.StringPtrInput `pulumi:"from"`
	MessagingServiceSid pulumi.StringPtrInput `pulumi:"messagingServiceSid"`
	Sid                 pulumi.StringPtrInput `pulumi:"sid"`
	VerificationMessage pulumi.StringPtrInput `pulumi:"verificationMessage"`
}

func (GuardianPhoneOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhoneOptions)(nil)).Elem()
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsOutput() GuardianPhoneOptionsOutput {
	return i.ToGuardianPhoneOptionsOutputWithContext(context.Background())
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsOutputWithContext(ctx context.Context) GuardianPhoneOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOptionsOutput)
}

func (i GuardianPhoneOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[GuardianPhoneOptions] {
	return pulumix.Output[GuardianPhoneOptions]{
		OutputState: i.ToGuardianPhoneOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return i.ToGuardianPhoneOptionsPtrOutputWithContext(context.Background())
}

func (i GuardianPhoneOptionsArgs) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOptionsOutput).ToGuardianPhoneOptionsPtrOutputWithContext(ctx)
}

// GuardianPhoneOptionsPtrInput is an input type that accepts GuardianPhoneOptionsArgs, GuardianPhoneOptionsPtr and GuardianPhoneOptionsPtrOutput values.
// You can construct a concrete instance of `GuardianPhoneOptionsPtrInput` via:
//
//	        GuardianPhoneOptionsArgs{...}
//
//	or:
//
//	        nil
type GuardianPhoneOptionsPtrInput interface {
	pulumi.Input

	ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput
	ToGuardianPhoneOptionsPtrOutputWithContext(context.Context) GuardianPhoneOptionsPtrOutput
}

type guardianPhoneOptionsPtrType GuardianPhoneOptionsArgs

func GuardianPhoneOptionsPtr(v *GuardianPhoneOptionsArgs) GuardianPhoneOptionsPtrInput {
	return (*guardianPhoneOptionsPtrType)(v)
}

func (*guardianPhoneOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhoneOptions)(nil)).Elem()
}

func (i *guardianPhoneOptionsPtrType) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return i.ToGuardianPhoneOptionsPtrOutputWithContext(context.Background())
}

func (i *guardianPhoneOptionsPtrType) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPhoneOptionsPtrOutput)
}

func (i *guardianPhoneOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GuardianPhoneOptions] {
	return pulumix.Output[*GuardianPhoneOptions]{
		OutputState: i.ToGuardianPhoneOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type GuardianPhoneOptionsOutput struct{ *pulumi.OutputState }

func (GuardianPhoneOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPhoneOptions)(nil)).Elem()
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsOutput() GuardianPhoneOptionsOutput {
	return o
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsOutputWithContext(ctx context.Context) GuardianPhoneOptionsOutput {
	return o
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return o.ToGuardianPhoneOptionsPtrOutputWithContext(context.Background())
}

func (o GuardianPhoneOptionsOutput) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPhoneOptions) *GuardianPhoneOptions {
		return &v
	}).(GuardianPhoneOptionsPtrOutput)
}

func (o GuardianPhoneOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[GuardianPhoneOptions] {
	return pulumix.Output[GuardianPhoneOptions]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPhoneOptionsOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.AuthToken }).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsOutput) EnrollmentMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.EnrollmentMessage }).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.From }).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.MessagingServiceSid }).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.Sid }).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsOutput) VerificationMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPhoneOptions) *string { return v.VerificationMessage }).(pulumi.StringPtrOutput)
}

type GuardianPhoneOptionsPtrOutput struct{ *pulumi.OutputState }

func (GuardianPhoneOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPhoneOptions)(nil)).Elem()
}

func (o GuardianPhoneOptionsPtrOutput) ToGuardianPhoneOptionsPtrOutput() GuardianPhoneOptionsPtrOutput {
	return o
}

func (o GuardianPhoneOptionsPtrOutput) ToGuardianPhoneOptionsPtrOutputWithContext(ctx context.Context) GuardianPhoneOptionsPtrOutput {
	return o
}

func (o GuardianPhoneOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GuardianPhoneOptions] {
	return pulumix.Output[*GuardianPhoneOptions]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPhoneOptionsPtrOutput) Elem() GuardianPhoneOptionsOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) GuardianPhoneOptions {
		if v != nil {
			return *v
		}
		var ret GuardianPhoneOptions
		return ret
	}).(GuardianPhoneOptionsOutput)
}

func (o GuardianPhoneOptionsPtrOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.AuthToken
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsPtrOutput) EnrollmentMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.EnrollmentMessage
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsPtrOutput) MessagingServiceSid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.MessagingServiceSid
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsPtrOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.Sid
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPhoneOptionsPtrOutput) VerificationMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPhoneOptions) *string {
		if v == nil {
			return nil
		}
		return v.VerificationMessage
	}).(pulumi.StringPtrOutput)
}

type GuardianPush struct {
	// Configuration for Amazon SNS.
	AmazonSns *GuardianPushAmazonSns `pulumi:"amazonSns"`
	// Configuration for the Guardian Custom App.
	CustomApp *GuardianPushCustomApp `pulumi:"customApp"`
	// Configuration for the Apple Push Notification service (APNs) settings.
	DirectApns *GuardianPushDirectApns `pulumi:"directApns"`
	// Configuration for Firebase Cloud Messaging (FCM) settings.
	DirectFcm *GuardianPushDirectFcm `pulumi:"directFcm"`
	// Indicates whether Push MFA is enabled.
	Enabled bool `pulumi:"enabled"`
	// Provider to use, one of `direct`, `guardian`, `sns`.
	Provider *string `pulumi:"provider"`
}

// GuardianPushInput is an input type that accepts GuardianPushArgs and GuardianPushOutput values.
// You can construct a concrete instance of `GuardianPushInput` via:
//
//	GuardianPushArgs{...}
type GuardianPushInput interface {
	pulumi.Input

	ToGuardianPushOutput() GuardianPushOutput
	ToGuardianPushOutputWithContext(context.Context) GuardianPushOutput
}

type GuardianPushArgs struct {
	// Configuration for Amazon SNS.
	AmazonSns GuardianPushAmazonSnsPtrInput `pulumi:"amazonSns"`
	// Configuration for the Guardian Custom App.
	CustomApp GuardianPushCustomAppPtrInput `pulumi:"customApp"`
	// Configuration for the Apple Push Notification service (APNs) settings.
	DirectApns GuardianPushDirectApnsPtrInput `pulumi:"directApns"`
	// Configuration for Firebase Cloud Messaging (FCM) settings.
	DirectFcm GuardianPushDirectFcmPtrInput `pulumi:"directFcm"`
	// Indicates whether Push MFA is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Provider to use, one of `direct`, `guardian`, `sns`.
	Provider pulumi.StringPtrInput `pulumi:"provider"`
}

func (GuardianPushArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPush)(nil)).Elem()
}

func (i GuardianPushArgs) ToGuardianPushOutput() GuardianPushOutput {
	return i.ToGuardianPushOutputWithContext(context.Background())
}

func (i GuardianPushArgs) ToGuardianPushOutputWithContext(ctx context.Context) GuardianPushOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushOutput)
}

func (i GuardianPushArgs) ToOutput(ctx context.Context) pulumix.Output[GuardianPush] {
	return pulumix.Output[GuardianPush]{
		OutputState: i.ToGuardianPushOutputWithContext(ctx).OutputState,
	}
}

func (i GuardianPushArgs) ToGuardianPushPtrOutput() GuardianPushPtrOutput {
	return i.ToGuardianPushPtrOutputWithContext(context.Background())
}

func (i GuardianPushArgs) ToGuardianPushPtrOutputWithContext(ctx context.Context) GuardianPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushOutput).ToGuardianPushPtrOutputWithContext(ctx)
}

// GuardianPushPtrInput is an input type that accepts GuardianPushArgs, GuardianPushPtr and GuardianPushPtrOutput values.
// You can construct a concrete instance of `GuardianPushPtrInput` via:
//
//	        GuardianPushArgs{...}
//
//	or:
//
//	        nil
type GuardianPushPtrInput interface {
	pulumi.Input

	ToGuardianPushPtrOutput() GuardianPushPtrOutput
	ToGuardianPushPtrOutputWithContext(context.Context) GuardianPushPtrOutput
}

type guardianPushPtrType GuardianPushArgs

func GuardianPushPtr(v *GuardianPushArgs) GuardianPushPtrInput {
	return (*guardianPushPtrType)(v)
}

func (*guardianPushPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPush)(nil)).Elem()
}

func (i *guardianPushPtrType) ToGuardianPushPtrOutput() GuardianPushPtrOutput {
	return i.ToGuardianPushPtrOutputWithContext(context.Background())
}

func (i *guardianPushPtrType) ToGuardianPushPtrOutputWithContext(ctx context.Context) GuardianPushPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushPtrOutput)
}

func (i *guardianPushPtrType) ToOutput(ctx context.Context) pulumix.Output[*GuardianPush] {
	return pulumix.Output[*GuardianPush]{
		OutputState: i.ToGuardianPushPtrOutputWithContext(ctx).OutputState,
	}
}

type GuardianPushOutput struct{ *pulumi.OutputState }

func (GuardianPushOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPush)(nil)).Elem()
}

func (o GuardianPushOutput) ToGuardianPushOutput() GuardianPushOutput {
	return o
}

func (o GuardianPushOutput) ToGuardianPushOutputWithContext(ctx context.Context) GuardianPushOutput {
	return o
}

func (o GuardianPushOutput) ToGuardianPushPtrOutput() GuardianPushPtrOutput {
	return o.ToGuardianPushPtrOutputWithContext(context.Background())
}

func (o GuardianPushOutput) ToGuardianPushPtrOutputWithContext(ctx context.Context) GuardianPushPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPush) *GuardianPush {
		return &v
	}).(GuardianPushPtrOutput)
}

func (o GuardianPushOutput) ToOutput(ctx context.Context) pulumix.Output[GuardianPush] {
	return pulumix.Output[GuardianPush]{
		OutputState: o.OutputState,
	}
}

// Configuration for Amazon SNS.
func (o GuardianPushOutput) AmazonSns() GuardianPushAmazonSnsPtrOutput {
	return o.ApplyT(func(v GuardianPush) *GuardianPushAmazonSns { return v.AmazonSns }).(GuardianPushAmazonSnsPtrOutput)
}

// Configuration for the Guardian Custom App.
func (o GuardianPushOutput) CustomApp() GuardianPushCustomAppPtrOutput {
	return o.ApplyT(func(v GuardianPush) *GuardianPushCustomApp { return v.CustomApp }).(GuardianPushCustomAppPtrOutput)
}

// Configuration for the Apple Push Notification service (APNs) settings.
func (o GuardianPushOutput) DirectApns() GuardianPushDirectApnsPtrOutput {
	return o.ApplyT(func(v GuardianPush) *GuardianPushDirectApns { return v.DirectApns }).(GuardianPushDirectApnsPtrOutput)
}

// Configuration for Firebase Cloud Messaging (FCM) settings.
func (o GuardianPushOutput) DirectFcm() GuardianPushDirectFcmPtrOutput {
	return o.ApplyT(func(v GuardianPush) *GuardianPushDirectFcm { return v.DirectFcm }).(GuardianPushDirectFcmPtrOutput)
}

// Indicates whether Push MFA is enabled.
func (o GuardianPushOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianPush) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Provider to use, one of `direct`, `guardian`, `sns`.
func (o GuardianPushOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPush) *string { return v.Provider }).(pulumi.StringPtrOutput)
}

type GuardianPushPtrOutput struct{ *pulumi.OutputState }

func (GuardianPushPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPush)(nil)).Elem()
}

func (o GuardianPushPtrOutput) ToGuardianPushPtrOutput() GuardianPushPtrOutput {
	return o
}

func (o GuardianPushPtrOutput) ToGuardianPushPtrOutputWithContext(ctx context.Context) GuardianPushPtrOutput {
	return o
}

func (o GuardianPushPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GuardianPush] {
	return pulumix.Output[*GuardianPush]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPushPtrOutput) Elem() GuardianPushOutput {
	return o.ApplyT(func(v *GuardianPush) GuardianPush {
		if v != nil {
			return *v
		}
		var ret GuardianPush
		return ret
	}).(GuardianPushOutput)
}

// Configuration for Amazon SNS.
func (o GuardianPushPtrOutput) AmazonSns() GuardianPushAmazonSnsPtrOutput {
	return o.ApplyT(func(v *GuardianPush) *GuardianPushAmazonSns {
		if v == nil {
			return nil
		}
		return v.AmazonSns
	}).(GuardianPushAmazonSnsPtrOutput)
}

// Configuration for the Guardian Custom App.
func (o GuardianPushPtrOutput) CustomApp() GuardianPushCustomAppPtrOutput {
	return o.ApplyT(func(v *GuardianPush) *GuardianPushCustomApp {
		if v == nil {
			return nil
		}
		return v.CustomApp
	}).(GuardianPushCustomAppPtrOutput)
}

// Configuration for the Apple Push Notification service (APNs) settings.
func (o GuardianPushPtrOutput) DirectApns() GuardianPushDirectApnsPtrOutput {
	return o.ApplyT(func(v *GuardianPush) *GuardianPushDirectApns {
		if v == nil {
			return nil
		}
		return v.DirectApns
	}).(GuardianPushDirectApnsPtrOutput)
}

// Configuration for Firebase Cloud Messaging (FCM) settings.
func (o GuardianPushPtrOutput) DirectFcm() GuardianPushDirectFcmPtrOutput {
	return o.ApplyT(func(v *GuardianPush) *GuardianPushDirectFcm {
		if v == nil {
			return nil
		}
		return v.DirectFcm
	}).(GuardianPushDirectFcmPtrOutput)
}

// Indicates whether Push MFA is enabled.
func (o GuardianPushPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianPush) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Provider to use, one of `direct`, `guardian`, `sns`.
func (o GuardianPushPtrOutput) Provider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPush) *string {
		if v == nil {
			return nil
		}
		return v.Provider
	}).(pulumi.StringPtrOutput)
}

type GuardianPushAmazonSns struct {
	AwsAccessKeyId                string `pulumi:"awsAccessKeyId"`
	AwsRegion                     string `pulumi:"awsRegion"`
	AwsSecretAccessKey            string `pulumi:"awsSecretAccessKey"`
	SnsApnsPlatformApplicationArn string `pulumi:"snsApnsPlatformApplicationArn"`
	SnsGcmPlatformApplicationArn  string `pulumi:"snsGcmPlatformApplicationArn"`
}

// GuardianPushAmazonSnsInput is an input type that accepts GuardianPushAmazonSnsArgs and GuardianPushAmazonSnsOutput values.
// You can construct a concrete instance of `GuardianPushAmazonSnsInput` via:
//
//	GuardianPushAmazonSnsArgs{...}
type GuardianPushAmazonSnsInput interface {
	pulumi.Input

	ToGuardianPushAmazonSnsOutput() GuardianPushAmazonSnsOutput
	ToGuardianPushAmazonSnsOutputWithContext(context.Context) GuardianPushAmazonSnsOutput
}

type GuardianPushAmazonSnsArgs struct {
	AwsAccessKeyId                pulumi.StringInput `pulumi:"awsAccessKeyId"`
	AwsRegion                     pulumi.StringInput `pulumi:"awsRegion"`
	AwsSecretAccessKey            pulumi.StringInput `pulumi:"awsSecretAccessKey"`
	SnsApnsPlatformApplicationArn pulumi.StringInput `pulumi:"snsApnsPlatformApplicationArn"`
	SnsGcmPlatformApplicationArn  pulumi.StringInput `pulumi:"snsGcmPlatformApplicationArn"`
}

func (GuardianPushAmazonSnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushAmazonSns)(nil)).Elem()
}

func (i GuardianPushAmazonSnsArgs) ToGuardianPushAmazonSnsOutput() GuardianPushAmazonSnsOutput {
	return i.ToGuardianPushAmazonSnsOutputWithContext(context.Background())
}

func (i GuardianPushAmazonSnsArgs) ToGuardianPushAmazonSnsOutputWithContext(ctx context.Context) GuardianPushAmazonSnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushAmazonSnsOutput)
}

func (i GuardianPushAmazonSnsArgs) ToOutput(ctx context.Context) pulumix.Output[GuardianPushAmazonSns] {
	return pulumix.Output[GuardianPushAmazonSns]{
		OutputState: i.ToGuardianPushAmazonSnsOutputWithContext(ctx).OutputState,
	}
}

func (i GuardianPushAmazonSnsArgs) ToGuardianPushAmazonSnsPtrOutput() GuardianPushAmazonSnsPtrOutput {
	return i.ToGuardianPushAmazonSnsPtrOutputWithContext(context.Background())
}

func (i GuardianPushAmazonSnsArgs) ToGuardianPushAmazonSnsPtrOutputWithContext(ctx context.Context) GuardianPushAmazonSnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushAmazonSnsOutput).ToGuardianPushAmazonSnsPtrOutputWithContext(ctx)
}

// GuardianPushAmazonSnsPtrInput is an input type that accepts GuardianPushAmazonSnsArgs, GuardianPushAmazonSnsPtr and GuardianPushAmazonSnsPtrOutput values.
// You can construct a concrete instance of `GuardianPushAmazonSnsPtrInput` via:
//
//	        GuardianPushAmazonSnsArgs{...}
//
//	or:
//
//	        nil
type GuardianPushAmazonSnsPtrInput interface {
	pulumi.Input

	ToGuardianPushAmazonSnsPtrOutput() GuardianPushAmazonSnsPtrOutput
	ToGuardianPushAmazonSnsPtrOutputWithContext(context.Context) GuardianPushAmazonSnsPtrOutput
}

type guardianPushAmazonSnsPtrType GuardianPushAmazonSnsArgs

func GuardianPushAmazonSnsPtr(v *GuardianPushAmazonSnsArgs) GuardianPushAmazonSnsPtrInput {
	return (*guardianPushAmazonSnsPtrType)(v)
}

func (*guardianPushAmazonSnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushAmazonSns)(nil)).Elem()
}

func (i *guardianPushAmazonSnsPtrType) ToGuardianPushAmazonSnsPtrOutput() GuardianPushAmazonSnsPtrOutput {
	return i.ToGuardianPushAmazonSnsPtrOutputWithContext(context.Background())
}

func (i *guardianPushAmazonSnsPtrType) ToGuardianPushAmazonSnsPtrOutputWithContext(ctx context.Context) GuardianPushAmazonSnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushAmazonSnsPtrOutput)
}

func (i *guardianPushAmazonSnsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GuardianPushAmazonSns] {
	return pulumix.Output[*GuardianPushAmazonSns]{
		OutputState: i.ToGuardianPushAmazonSnsPtrOutputWithContext(ctx).OutputState,
	}
}

type GuardianPushAmazonSnsOutput struct{ *pulumi.OutputState }

func (GuardianPushAmazonSnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushAmazonSns)(nil)).Elem()
}

func (o GuardianPushAmazonSnsOutput) ToGuardianPushAmazonSnsOutput() GuardianPushAmazonSnsOutput {
	return o
}

func (o GuardianPushAmazonSnsOutput) ToGuardianPushAmazonSnsOutputWithContext(ctx context.Context) GuardianPushAmazonSnsOutput {
	return o
}

func (o GuardianPushAmazonSnsOutput) ToGuardianPushAmazonSnsPtrOutput() GuardianPushAmazonSnsPtrOutput {
	return o.ToGuardianPushAmazonSnsPtrOutputWithContext(context.Background())
}

func (o GuardianPushAmazonSnsOutput) ToGuardianPushAmazonSnsPtrOutputWithContext(ctx context.Context) GuardianPushAmazonSnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPushAmazonSns) *GuardianPushAmazonSns {
		return &v
	}).(GuardianPushAmazonSnsPtrOutput)
}

func (o GuardianPushAmazonSnsOutput) ToOutput(ctx context.Context) pulumix.Output[GuardianPushAmazonSns] {
	return pulumix.Output[GuardianPushAmazonSns]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPushAmazonSnsOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushAmazonSns) string { return v.AwsAccessKeyId }).(pulumi.StringOutput)
}

func (o GuardianPushAmazonSnsOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushAmazonSns) string { return v.AwsRegion }).(pulumi.StringOutput)
}

func (o GuardianPushAmazonSnsOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushAmazonSns) string { return v.AwsSecretAccessKey }).(pulumi.StringOutput)
}

func (o GuardianPushAmazonSnsOutput) SnsApnsPlatformApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushAmazonSns) string { return v.SnsApnsPlatformApplicationArn }).(pulumi.StringOutput)
}

func (o GuardianPushAmazonSnsOutput) SnsGcmPlatformApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushAmazonSns) string { return v.SnsGcmPlatformApplicationArn }).(pulumi.StringOutput)
}

type GuardianPushAmazonSnsPtrOutput struct{ *pulumi.OutputState }

func (GuardianPushAmazonSnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushAmazonSns)(nil)).Elem()
}

func (o GuardianPushAmazonSnsPtrOutput) ToGuardianPushAmazonSnsPtrOutput() GuardianPushAmazonSnsPtrOutput {
	return o
}

func (o GuardianPushAmazonSnsPtrOutput) ToGuardianPushAmazonSnsPtrOutputWithContext(ctx context.Context) GuardianPushAmazonSnsPtrOutput {
	return o
}

func (o GuardianPushAmazonSnsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GuardianPushAmazonSns] {
	return pulumix.Output[*GuardianPushAmazonSns]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPushAmazonSnsPtrOutput) Elem() GuardianPushAmazonSnsOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) GuardianPushAmazonSns {
		if v != nil {
			return *v
		}
		var ret GuardianPushAmazonSns
		return ret
	}).(GuardianPushAmazonSnsOutput)
}

func (o GuardianPushAmazonSnsPtrOutput) AwsAccessKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) *string {
		if v == nil {
			return nil
		}
		return &v.AwsAccessKeyId
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushAmazonSnsPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) *string {
		if v == nil {
			return nil
		}
		return &v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushAmazonSnsPtrOutput) AwsSecretAccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) *string {
		if v == nil {
			return nil
		}
		return &v.AwsSecretAccessKey
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushAmazonSnsPtrOutput) SnsApnsPlatformApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) *string {
		if v == nil {
			return nil
		}
		return &v.SnsApnsPlatformApplicationArn
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushAmazonSnsPtrOutput) SnsGcmPlatformApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushAmazonSns) *string {
		if v == nil {
			return nil
		}
		return &v.SnsGcmPlatformApplicationArn
	}).(pulumi.StringPtrOutput)
}

type GuardianPushCustomApp struct {
	AppName       *string `pulumi:"appName"`
	AppleAppLink  *string `pulumi:"appleAppLink"`
	GoogleAppLink *string `pulumi:"googleAppLink"`
}

// GuardianPushCustomAppInput is an input type that accepts GuardianPushCustomAppArgs and GuardianPushCustomAppOutput values.
// You can construct a concrete instance of `GuardianPushCustomAppInput` via:
//
//	GuardianPushCustomAppArgs{...}
type GuardianPushCustomAppInput interface {
	pulumi.Input

	ToGuardianPushCustomAppOutput() GuardianPushCustomAppOutput
	ToGuardianPushCustomAppOutputWithContext(context.Context) GuardianPushCustomAppOutput
}

type GuardianPushCustomAppArgs struct {
	AppName       pulumi.StringPtrInput `pulumi:"appName"`
	AppleAppLink  pulumi.StringPtrInput `pulumi:"appleAppLink"`
	GoogleAppLink pulumi.StringPtrInput `pulumi:"googleAppLink"`
}

func (GuardianPushCustomAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushCustomApp)(nil)).Elem()
}

func (i GuardianPushCustomAppArgs) ToGuardianPushCustomAppOutput() GuardianPushCustomAppOutput {
	return i.ToGuardianPushCustomAppOutputWithContext(context.Background())
}

func (i GuardianPushCustomAppArgs) ToGuardianPushCustomAppOutputWithContext(ctx context.Context) GuardianPushCustomAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushCustomAppOutput)
}

func (i GuardianPushCustomAppArgs) ToOutput(ctx context.Context) pulumix.Output[GuardianPushCustomApp] {
	return pulumix.Output[GuardianPushCustomApp]{
		OutputState: i.ToGuardianPushCustomAppOutputWithContext(ctx).OutputState,
	}
}

func (i GuardianPushCustomAppArgs) ToGuardianPushCustomAppPtrOutput() GuardianPushCustomAppPtrOutput {
	return i.ToGuardianPushCustomAppPtrOutputWithContext(context.Background())
}

func (i GuardianPushCustomAppArgs) ToGuardianPushCustomAppPtrOutputWithContext(ctx context.Context) GuardianPushCustomAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushCustomAppOutput).ToGuardianPushCustomAppPtrOutputWithContext(ctx)
}

// GuardianPushCustomAppPtrInput is an input type that accepts GuardianPushCustomAppArgs, GuardianPushCustomAppPtr and GuardianPushCustomAppPtrOutput values.
// You can construct a concrete instance of `GuardianPushCustomAppPtrInput` via:
//
//	        GuardianPushCustomAppArgs{...}
//
//	or:
//
//	        nil
type GuardianPushCustomAppPtrInput interface {
	pulumi.Input

	ToGuardianPushCustomAppPtrOutput() GuardianPushCustomAppPtrOutput
	ToGuardianPushCustomAppPtrOutputWithContext(context.Context) GuardianPushCustomAppPtrOutput
}

type guardianPushCustomAppPtrType GuardianPushCustomAppArgs

func GuardianPushCustomAppPtr(v *GuardianPushCustomAppArgs) GuardianPushCustomAppPtrInput {
	return (*guardianPushCustomAppPtrType)(v)
}

func (*guardianPushCustomAppPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushCustomApp)(nil)).Elem()
}

func (i *guardianPushCustomAppPtrType) ToGuardianPushCustomAppPtrOutput() GuardianPushCustomAppPtrOutput {
	return i.ToGuardianPushCustomAppPtrOutputWithContext(context.Background())
}

func (i *guardianPushCustomAppPtrType) ToGuardianPushCustomAppPtrOutputWithContext(ctx context.Context) GuardianPushCustomAppPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushCustomAppPtrOutput)
}

func (i *guardianPushCustomAppPtrType) ToOutput(ctx context.Context) pulumix.Output[*GuardianPushCustomApp] {
	return pulumix.Output[*GuardianPushCustomApp]{
		OutputState: i.ToGuardianPushCustomAppPtrOutputWithContext(ctx).OutputState,
	}
}

type GuardianPushCustomAppOutput struct{ *pulumi.OutputState }

func (GuardianPushCustomAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushCustomApp)(nil)).Elem()
}

func (o GuardianPushCustomAppOutput) ToGuardianPushCustomAppOutput() GuardianPushCustomAppOutput {
	return o
}

func (o GuardianPushCustomAppOutput) ToGuardianPushCustomAppOutputWithContext(ctx context.Context) GuardianPushCustomAppOutput {
	return o
}

func (o GuardianPushCustomAppOutput) ToGuardianPushCustomAppPtrOutput() GuardianPushCustomAppPtrOutput {
	return o.ToGuardianPushCustomAppPtrOutputWithContext(context.Background())
}

func (o GuardianPushCustomAppOutput) ToGuardianPushCustomAppPtrOutputWithContext(ctx context.Context) GuardianPushCustomAppPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPushCustomApp) *GuardianPushCustomApp {
		return &v
	}).(GuardianPushCustomAppPtrOutput)
}

func (o GuardianPushCustomAppOutput) ToOutput(ctx context.Context) pulumix.Output[GuardianPushCustomApp] {
	return pulumix.Output[GuardianPushCustomApp]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPushCustomAppOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPushCustomApp) *string { return v.AppName }).(pulumi.StringPtrOutput)
}

func (o GuardianPushCustomAppOutput) AppleAppLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPushCustomApp) *string { return v.AppleAppLink }).(pulumi.StringPtrOutput)
}

func (o GuardianPushCustomAppOutput) GoogleAppLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianPushCustomApp) *string { return v.GoogleAppLink }).(pulumi.StringPtrOutput)
}

type GuardianPushCustomAppPtrOutput struct{ *pulumi.OutputState }

func (GuardianPushCustomAppPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushCustomApp)(nil)).Elem()
}

func (o GuardianPushCustomAppPtrOutput) ToGuardianPushCustomAppPtrOutput() GuardianPushCustomAppPtrOutput {
	return o
}

func (o GuardianPushCustomAppPtrOutput) ToGuardianPushCustomAppPtrOutputWithContext(ctx context.Context) GuardianPushCustomAppPtrOutput {
	return o
}

func (o GuardianPushCustomAppPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GuardianPushCustomApp] {
	return pulumix.Output[*GuardianPushCustomApp]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPushCustomAppPtrOutput) Elem() GuardianPushCustomAppOutput {
	return o.ApplyT(func(v *GuardianPushCustomApp) GuardianPushCustomApp {
		if v != nil {
			return *v
		}
		var ret GuardianPushCustomApp
		return ret
	}).(GuardianPushCustomAppOutput)
}

func (o GuardianPushCustomAppPtrOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushCustomApp) *string {
		if v == nil {
			return nil
		}
		return v.AppName
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushCustomAppPtrOutput) AppleAppLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushCustomApp) *string {
		if v == nil {
			return nil
		}
		return v.AppleAppLink
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushCustomAppPtrOutput) GoogleAppLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushCustomApp) *string {
		if v == nil {
			return nil
		}
		return v.GoogleAppLink
	}).(pulumi.StringPtrOutput)
}

type GuardianPushDirectApns struct {
	BundleId string `pulumi:"bundleId"`
	Enabled  *bool  `pulumi:"enabled"`
	P12      string `pulumi:"p12"`
	Sandbox  bool   `pulumi:"sandbox"`
}

// GuardianPushDirectApnsInput is an input type that accepts GuardianPushDirectApnsArgs and GuardianPushDirectApnsOutput values.
// You can construct a concrete instance of `GuardianPushDirectApnsInput` via:
//
//	GuardianPushDirectApnsArgs{...}
type GuardianPushDirectApnsInput interface {
	pulumi.Input

	ToGuardianPushDirectApnsOutput() GuardianPushDirectApnsOutput
	ToGuardianPushDirectApnsOutputWithContext(context.Context) GuardianPushDirectApnsOutput
}

type GuardianPushDirectApnsArgs struct {
	BundleId pulumi.StringInput  `pulumi:"bundleId"`
	Enabled  pulumi.BoolPtrInput `pulumi:"enabled"`
	P12      pulumi.StringInput  `pulumi:"p12"`
	Sandbox  pulumi.BoolInput    `pulumi:"sandbox"`
}

func (GuardianPushDirectApnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushDirectApns)(nil)).Elem()
}

func (i GuardianPushDirectApnsArgs) ToGuardianPushDirectApnsOutput() GuardianPushDirectApnsOutput {
	return i.ToGuardianPushDirectApnsOutputWithContext(context.Background())
}

func (i GuardianPushDirectApnsArgs) ToGuardianPushDirectApnsOutputWithContext(ctx context.Context) GuardianPushDirectApnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushDirectApnsOutput)
}

func (i GuardianPushDirectApnsArgs) ToOutput(ctx context.Context) pulumix.Output[GuardianPushDirectApns] {
	return pulumix.Output[GuardianPushDirectApns]{
		OutputState: i.ToGuardianPushDirectApnsOutputWithContext(ctx).OutputState,
	}
}

func (i GuardianPushDirectApnsArgs) ToGuardianPushDirectApnsPtrOutput() GuardianPushDirectApnsPtrOutput {
	return i.ToGuardianPushDirectApnsPtrOutputWithContext(context.Background())
}

func (i GuardianPushDirectApnsArgs) ToGuardianPushDirectApnsPtrOutputWithContext(ctx context.Context) GuardianPushDirectApnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushDirectApnsOutput).ToGuardianPushDirectApnsPtrOutputWithContext(ctx)
}

// GuardianPushDirectApnsPtrInput is an input type that accepts GuardianPushDirectApnsArgs, GuardianPushDirectApnsPtr and GuardianPushDirectApnsPtrOutput values.
// You can construct a concrete instance of `GuardianPushDirectApnsPtrInput` via:
//
//	        GuardianPushDirectApnsArgs{...}
//
//	or:
//
//	        nil
type GuardianPushDirectApnsPtrInput interface {
	pulumi.Input

	ToGuardianPushDirectApnsPtrOutput() GuardianPushDirectApnsPtrOutput
	ToGuardianPushDirectApnsPtrOutputWithContext(context.Context) GuardianPushDirectApnsPtrOutput
}

type guardianPushDirectApnsPtrType GuardianPushDirectApnsArgs

func GuardianPushDirectApnsPtr(v *GuardianPushDirectApnsArgs) GuardianPushDirectApnsPtrInput {
	return (*guardianPushDirectApnsPtrType)(v)
}

func (*guardianPushDirectApnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushDirectApns)(nil)).Elem()
}

func (i *guardianPushDirectApnsPtrType) ToGuardianPushDirectApnsPtrOutput() GuardianPushDirectApnsPtrOutput {
	return i.ToGuardianPushDirectApnsPtrOutputWithContext(context.Background())
}

func (i *guardianPushDirectApnsPtrType) ToGuardianPushDirectApnsPtrOutputWithContext(ctx context.Context) GuardianPushDirectApnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushDirectApnsPtrOutput)
}

func (i *guardianPushDirectApnsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GuardianPushDirectApns] {
	return pulumix.Output[*GuardianPushDirectApns]{
		OutputState: i.ToGuardianPushDirectApnsPtrOutputWithContext(ctx).OutputState,
	}
}

type GuardianPushDirectApnsOutput struct{ *pulumi.OutputState }

func (GuardianPushDirectApnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushDirectApns)(nil)).Elem()
}

func (o GuardianPushDirectApnsOutput) ToGuardianPushDirectApnsOutput() GuardianPushDirectApnsOutput {
	return o
}

func (o GuardianPushDirectApnsOutput) ToGuardianPushDirectApnsOutputWithContext(ctx context.Context) GuardianPushDirectApnsOutput {
	return o
}

func (o GuardianPushDirectApnsOutput) ToGuardianPushDirectApnsPtrOutput() GuardianPushDirectApnsPtrOutput {
	return o.ToGuardianPushDirectApnsPtrOutputWithContext(context.Background())
}

func (o GuardianPushDirectApnsOutput) ToGuardianPushDirectApnsPtrOutputWithContext(ctx context.Context) GuardianPushDirectApnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPushDirectApns) *GuardianPushDirectApns {
		return &v
	}).(GuardianPushDirectApnsPtrOutput)
}

func (o GuardianPushDirectApnsOutput) ToOutput(ctx context.Context) pulumix.Output[GuardianPushDirectApns] {
	return pulumix.Output[GuardianPushDirectApns]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPushDirectApnsOutput) BundleId() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushDirectApns) string { return v.BundleId }).(pulumi.StringOutput)
}

func (o GuardianPushDirectApnsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GuardianPushDirectApns) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o GuardianPushDirectApnsOutput) P12() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushDirectApns) string { return v.P12 }).(pulumi.StringOutput)
}

func (o GuardianPushDirectApnsOutput) Sandbox() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianPushDirectApns) bool { return v.Sandbox }).(pulumi.BoolOutput)
}

type GuardianPushDirectApnsPtrOutput struct{ *pulumi.OutputState }

func (GuardianPushDirectApnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushDirectApns)(nil)).Elem()
}

func (o GuardianPushDirectApnsPtrOutput) ToGuardianPushDirectApnsPtrOutput() GuardianPushDirectApnsPtrOutput {
	return o
}

func (o GuardianPushDirectApnsPtrOutput) ToGuardianPushDirectApnsPtrOutputWithContext(ctx context.Context) GuardianPushDirectApnsPtrOutput {
	return o
}

func (o GuardianPushDirectApnsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GuardianPushDirectApns] {
	return pulumix.Output[*GuardianPushDirectApns]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPushDirectApnsPtrOutput) Elem() GuardianPushDirectApnsOutput {
	return o.ApplyT(func(v *GuardianPushDirectApns) GuardianPushDirectApns {
		if v != nil {
			return *v
		}
		var ret GuardianPushDirectApns
		return ret
	}).(GuardianPushDirectApnsOutput)
}

func (o GuardianPushDirectApnsPtrOutput) BundleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushDirectApns) *string {
		if v == nil {
			return nil
		}
		return &v.BundleId
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushDirectApnsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianPushDirectApns) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o GuardianPushDirectApnsPtrOutput) P12() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushDirectApns) *string {
		if v == nil {
			return nil
		}
		return &v.P12
	}).(pulumi.StringPtrOutput)
}

func (o GuardianPushDirectApnsPtrOutput) Sandbox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianPushDirectApns) *bool {
		if v == nil {
			return nil
		}
		return &v.Sandbox
	}).(pulumi.BoolPtrOutput)
}

type GuardianPushDirectFcm struct {
	ServerKey string `pulumi:"serverKey"`
}

// GuardianPushDirectFcmInput is an input type that accepts GuardianPushDirectFcmArgs and GuardianPushDirectFcmOutput values.
// You can construct a concrete instance of `GuardianPushDirectFcmInput` via:
//
//	GuardianPushDirectFcmArgs{...}
type GuardianPushDirectFcmInput interface {
	pulumi.Input

	ToGuardianPushDirectFcmOutput() GuardianPushDirectFcmOutput
	ToGuardianPushDirectFcmOutputWithContext(context.Context) GuardianPushDirectFcmOutput
}

type GuardianPushDirectFcmArgs struct {
	ServerKey pulumi.StringInput `pulumi:"serverKey"`
}

func (GuardianPushDirectFcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushDirectFcm)(nil)).Elem()
}

func (i GuardianPushDirectFcmArgs) ToGuardianPushDirectFcmOutput() GuardianPushDirectFcmOutput {
	return i.ToGuardianPushDirectFcmOutputWithContext(context.Background())
}

func (i GuardianPushDirectFcmArgs) ToGuardianPushDirectFcmOutputWithContext(ctx context.Context) GuardianPushDirectFcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushDirectFcmOutput)
}

func (i GuardianPushDirectFcmArgs) ToOutput(ctx context.Context) pulumix.Output[GuardianPushDirectFcm] {
	return pulumix.Output[GuardianPushDirectFcm]{
		OutputState: i.ToGuardianPushDirectFcmOutputWithContext(ctx).OutputState,
	}
}

func (i GuardianPushDirectFcmArgs) ToGuardianPushDirectFcmPtrOutput() GuardianPushDirectFcmPtrOutput {
	return i.ToGuardianPushDirectFcmPtrOutputWithContext(context.Background())
}

func (i GuardianPushDirectFcmArgs) ToGuardianPushDirectFcmPtrOutputWithContext(ctx context.Context) GuardianPushDirectFcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushDirectFcmOutput).ToGuardianPushDirectFcmPtrOutputWithContext(ctx)
}

// GuardianPushDirectFcmPtrInput is an input type that accepts GuardianPushDirectFcmArgs, GuardianPushDirectFcmPtr and GuardianPushDirectFcmPtrOutput values.
// You can construct a concrete instance of `GuardianPushDirectFcmPtrInput` via:
//
//	        GuardianPushDirectFcmArgs{...}
//
//	or:
//
//	        nil
type GuardianPushDirectFcmPtrInput interface {
	pulumi.Input

	ToGuardianPushDirectFcmPtrOutput() GuardianPushDirectFcmPtrOutput
	ToGuardianPushDirectFcmPtrOutputWithContext(context.Context) GuardianPushDirectFcmPtrOutput
}

type guardianPushDirectFcmPtrType GuardianPushDirectFcmArgs

func GuardianPushDirectFcmPtr(v *GuardianPushDirectFcmArgs) GuardianPushDirectFcmPtrInput {
	return (*guardianPushDirectFcmPtrType)(v)
}

func (*guardianPushDirectFcmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushDirectFcm)(nil)).Elem()
}

func (i *guardianPushDirectFcmPtrType) ToGuardianPushDirectFcmPtrOutput() GuardianPushDirectFcmPtrOutput {
	return i.ToGuardianPushDirectFcmPtrOutputWithContext(context.Background())
}

func (i *guardianPushDirectFcmPtrType) ToGuardianPushDirectFcmPtrOutputWithContext(ctx context.Context) GuardianPushDirectFcmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianPushDirectFcmPtrOutput)
}

func (i *guardianPushDirectFcmPtrType) ToOutput(ctx context.Context) pulumix.Output[*GuardianPushDirectFcm] {
	return pulumix.Output[*GuardianPushDirectFcm]{
		OutputState: i.ToGuardianPushDirectFcmPtrOutputWithContext(ctx).OutputState,
	}
}

type GuardianPushDirectFcmOutput struct{ *pulumi.OutputState }

func (GuardianPushDirectFcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianPushDirectFcm)(nil)).Elem()
}

func (o GuardianPushDirectFcmOutput) ToGuardianPushDirectFcmOutput() GuardianPushDirectFcmOutput {
	return o
}

func (o GuardianPushDirectFcmOutput) ToGuardianPushDirectFcmOutputWithContext(ctx context.Context) GuardianPushDirectFcmOutput {
	return o
}

func (o GuardianPushDirectFcmOutput) ToGuardianPushDirectFcmPtrOutput() GuardianPushDirectFcmPtrOutput {
	return o.ToGuardianPushDirectFcmPtrOutputWithContext(context.Background())
}

func (o GuardianPushDirectFcmOutput) ToGuardianPushDirectFcmPtrOutputWithContext(ctx context.Context) GuardianPushDirectFcmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianPushDirectFcm) *GuardianPushDirectFcm {
		return &v
	}).(GuardianPushDirectFcmPtrOutput)
}

func (o GuardianPushDirectFcmOutput) ToOutput(ctx context.Context) pulumix.Output[GuardianPushDirectFcm] {
	return pulumix.Output[GuardianPushDirectFcm]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPushDirectFcmOutput) ServerKey() pulumi.StringOutput {
	return o.ApplyT(func(v GuardianPushDirectFcm) string { return v.ServerKey }).(pulumi.StringOutput)
}

type GuardianPushDirectFcmPtrOutput struct{ *pulumi.OutputState }

func (GuardianPushDirectFcmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianPushDirectFcm)(nil)).Elem()
}

func (o GuardianPushDirectFcmPtrOutput) ToGuardianPushDirectFcmPtrOutput() GuardianPushDirectFcmPtrOutput {
	return o
}

func (o GuardianPushDirectFcmPtrOutput) ToGuardianPushDirectFcmPtrOutputWithContext(ctx context.Context) GuardianPushDirectFcmPtrOutput {
	return o
}

func (o GuardianPushDirectFcmPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GuardianPushDirectFcm] {
	return pulumix.Output[*GuardianPushDirectFcm]{
		OutputState: o.OutputState,
	}
}

func (o GuardianPushDirectFcmPtrOutput) Elem() GuardianPushDirectFcmOutput {
	return o.ApplyT(func(v *GuardianPushDirectFcm) GuardianPushDirectFcm {
		if v != nil {
			return *v
		}
		var ret GuardianPushDirectFcm
		return ret
	}).(GuardianPushDirectFcmOutput)
}

func (o GuardianPushDirectFcmPtrOutput) ServerKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianPushDirectFcm) *string {
		if v == nil {
			return nil
		}
		return &v.ServerKey
	}).(pulumi.StringPtrOutput)
}

type GuardianWebauthnPlatform struct {
	// Indicates whether WebAuthn with FIDO Device Biometrics MFA is enabled.
	Enabled bool `pulumi:"enabled"`
	// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
	OverrideRelyingParty *bool `pulumi:"overrideRelyingParty"`
	// The Relying Party should be a suffix of the custom domain.
	RelyingPartyIdentifier *string `pulumi:"relyingPartyIdentifier"`
}

// GuardianWebauthnPlatformInput is an input type that accepts GuardianWebauthnPlatformArgs and GuardianWebauthnPlatformOutput values.
// You can construct a concrete instance of `GuardianWebauthnPlatformInput` via:
//
//	GuardianWebauthnPlatformArgs{...}
type GuardianWebauthnPlatformInput interface {
	pulumi.Input

	ToGuardianWebauthnPlatformOutput() GuardianWebauthnPlatformOutput
	ToGuardianWebauthnPlatformOutputWithContext(context.Context) GuardianWebauthnPlatformOutput
}

type GuardianWebauthnPlatformArgs struct {
	// Indicates whether WebAuthn with FIDO Device Biometrics MFA is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
	OverrideRelyingParty pulumi.BoolPtrInput `pulumi:"overrideRelyingParty"`
	// The Relying Party should be a suffix of the custom domain.
	RelyingPartyIdentifier pulumi.StringPtrInput `pulumi:"relyingPartyIdentifier"`
}

func (GuardianWebauthnPlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianWebauthnPlatform)(nil)).Elem()
}

func (i GuardianWebauthnPlatformArgs) ToGuardianWebauthnPlatformOutput() GuardianWebauthnPlatformOutput {
	return i.ToGuardianWebauthnPlatformOutputWithContext(context.Background())
}

func (i GuardianWebauthnPlatformArgs) ToGuardianWebauthnPlatformOutputWithContext(ctx context.Context) GuardianWebauthnPlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnPlatformOutput)
}

func (i GuardianWebauthnPlatformArgs) ToOutput(ctx context.Context) pulumix.Output[GuardianWebauthnPlatform] {
	return pulumix.Output[GuardianWebauthnPlatform]{
		OutputState: i.ToGuardianWebauthnPlatformOutputWithContext(ctx).OutputState,
	}
}

func (i GuardianWebauthnPlatformArgs) ToGuardianWebauthnPlatformPtrOutput() GuardianWebauthnPlatformPtrOutput {
	return i.ToGuardianWebauthnPlatformPtrOutputWithContext(context.Background())
}

func (i GuardianWebauthnPlatformArgs) ToGuardianWebauthnPlatformPtrOutputWithContext(ctx context.Context) GuardianWebauthnPlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnPlatformOutput).ToGuardianWebauthnPlatformPtrOutputWithContext(ctx)
}

// GuardianWebauthnPlatformPtrInput is an input type that accepts GuardianWebauthnPlatformArgs, GuardianWebauthnPlatformPtr and GuardianWebauthnPlatformPtrOutput values.
// You can construct a concrete instance of `GuardianWebauthnPlatformPtrInput` via:
//
//	        GuardianWebauthnPlatformArgs{...}
//
//	or:
//
//	        nil
type GuardianWebauthnPlatformPtrInput interface {
	pulumi.Input

	ToGuardianWebauthnPlatformPtrOutput() GuardianWebauthnPlatformPtrOutput
	ToGuardianWebauthnPlatformPtrOutputWithContext(context.Context) GuardianWebauthnPlatformPtrOutput
}

type guardianWebauthnPlatformPtrType GuardianWebauthnPlatformArgs

func GuardianWebauthnPlatformPtr(v *GuardianWebauthnPlatformArgs) GuardianWebauthnPlatformPtrInput {
	return (*guardianWebauthnPlatformPtrType)(v)
}

func (*guardianWebauthnPlatformPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianWebauthnPlatform)(nil)).Elem()
}

func (i *guardianWebauthnPlatformPtrType) ToGuardianWebauthnPlatformPtrOutput() GuardianWebauthnPlatformPtrOutput {
	return i.ToGuardianWebauthnPlatformPtrOutputWithContext(context.Background())
}

func (i *guardianWebauthnPlatformPtrType) ToGuardianWebauthnPlatformPtrOutputWithContext(ctx context.Context) GuardianWebauthnPlatformPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnPlatformPtrOutput)
}

func (i *guardianWebauthnPlatformPtrType) ToOutput(ctx context.Context) pulumix.Output[*GuardianWebauthnPlatform] {
	return pulumix.Output[*GuardianWebauthnPlatform]{
		OutputState: i.ToGuardianWebauthnPlatformPtrOutputWithContext(ctx).OutputState,
	}
}

type GuardianWebauthnPlatformOutput struct{ *pulumi.OutputState }

func (GuardianWebauthnPlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianWebauthnPlatform)(nil)).Elem()
}

func (o GuardianWebauthnPlatformOutput) ToGuardianWebauthnPlatformOutput() GuardianWebauthnPlatformOutput {
	return o
}

func (o GuardianWebauthnPlatformOutput) ToGuardianWebauthnPlatformOutputWithContext(ctx context.Context) GuardianWebauthnPlatformOutput {
	return o
}

func (o GuardianWebauthnPlatformOutput) ToGuardianWebauthnPlatformPtrOutput() GuardianWebauthnPlatformPtrOutput {
	return o.ToGuardianWebauthnPlatformPtrOutputWithContext(context.Background())
}

func (o GuardianWebauthnPlatformOutput) ToGuardianWebauthnPlatformPtrOutputWithContext(ctx context.Context) GuardianWebauthnPlatformPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianWebauthnPlatform) *GuardianWebauthnPlatform {
		return &v
	}).(GuardianWebauthnPlatformPtrOutput)
}

func (o GuardianWebauthnPlatformOutput) ToOutput(ctx context.Context) pulumix.Output[GuardianWebauthnPlatform] {
	return pulumix.Output[GuardianWebauthnPlatform]{
		OutputState: o.OutputState,
	}
}

// Indicates whether WebAuthn with FIDO Device Biometrics MFA is enabled.
func (o GuardianWebauthnPlatformOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianWebauthnPlatform) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
func (o GuardianWebauthnPlatformOutput) OverrideRelyingParty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GuardianWebauthnPlatform) *bool { return v.OverrideRelyingParty }).(pulumi.BoolPtrOutput)
}

// The Relying Party should be a suffix of the custom domain.
func (o GuardianWebauthnPlatformOutput) RelyingPartyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianWebauthnPlatform) *string { return v.RelyingPartyIdentifier }).(pulumi.StringPtrOutput)
}

type GuardianWebauthnPlatformPtrOutput struct{ *pulumi.OutputState }

func (GuardianWebauthnPlatformPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianWebauthnPlatform)(nil)).Elem()
}

func (o GuardianWebauthnPlatformPtrOutput) ToGuardianWebauthnPlatformPtrOutput() GuardianWebauthnPlatformPtrOutput {
	return o
}

func (o GuardianWebauthnPlatformPtrOutput) ToGuardianWebauthnPlatformPtrOutputWithContext(ctx context.Context) GuardianWebauthnPlatformPtrOutput {
	return o
}

func (o GuardianWebauthnPlatformPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GuardianWebauthnPlatform] {
	return pulumix.Output[*GuardianWebauthnPlatform]{
		OutputState: o.OutputState,
	}
}

func (o GuardianWebauthnPlatformPtrOutput) Elem() GuardianWebauthnPlatformOutput {
	return o.ApplyT(func(v *GuardianWebauthnPlatform) GuardianWebauthnPlatform {
		if v != nil {
			return *v
		}
		var ret GuardianWebauthnPlatform
		return ret
	}).(GuardianWebauthnPlatformOutput)
}

// Indicates whether WebAuthn with FIDO Device Biometrics MFA is enabled.
func (o GuardianWebauthnPlatformPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnPlatform) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
func (o GuardianWebauthnPlatformPtrOutput) OverrideRelyingParty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnPlatform) *bool {
		if v == nil {
			return nil
		}
		return v.OverrideRelyingParty
	}).(pulumi.BoolPtrOutput)
}

// The Relying Party should be a suffix of the custom domain.
func (o GuardianWebauthnPlatformPtrOutput) RelyingPartyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnPlatform) *string {
		if v == nil {
			return nil
		}
		return v.RelyingPartyIdentifier
	}).(pulumi.StringPtrOutput)
}

type GuardianWebauthnRoaming struct {
	// Indicates whether WebAuthn with FIDO Security Keys MFA is enabled.
	Enabled bool `pulumi:"enabled"`
	// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
	OverrideRelyingParty *bool `pulumi:"overrideRelyingParty"`
	// The Relying Party should be a suffix of the custom domain.
	RelyingPartyIdentifier *string `pulumi:"relyingPartyIdentifier"`
	// User verification, one of `discouraged`, `preferred` or `required`.
	UserVerification *string `pulumi:"userVerification"`
}

// GuardianWebauthnRoamingInput is an input type that accepts GuardianWebauthnRoamingArgs and GuardianWebauthnRoamingOutput values.
// You can construct a concrete instance of `GuardianWebauthnRoamingInput` via:
//
//	GuardianWebauthnRoamingArgs{...}
type GuardianWebauthnRoamingInput interface {
	pulumi.Input

	ToGuardianWebauthnRoamingOutput() GuardianWebauthnRoamingOutput
	ToGuardianWebauthnRoamingOutputWithContext(context.Context) GuardianWebauthnRoamingOutput
}

type GuardianWebauthnRoamingArgs struct {
	// Indicates whether WebAuthn with FIDO Security Keys MFA is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
	OverrideRelyingParty pulumi.BoolPtrInput `pulumi:"overrideRelyingParty"`
	// The Relying Party should be a suffix of the custom domain.
	RelyingPartyIdentifier pulumi.StringPtrInput `pulumi:"relyingPartyIdentifier"`
	// User verification, one of `discouraged`, `preferred` or `required`.
	UserVerification pulumi.StringPtrInput `pulumi:"userVerification"`
}

func (GuardianWebauthnRoamingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianWebauthnRoaming)(nil)).Elem()
}

func (i GuardianWebauthnRoamingArgs) ToGuardianWebauthnRoamingOutput() GuardianWebauthnRoamingOutput {
	return i.ToGuardianWebauthnRoamingOutputWithContext(context.Background())
}

func (i GuardianWebauthnRoamingArgs) ToGuardianWebauthnRoamingOutputWithContext(ctx context.Context) GuardianWebauthnRoamingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnRoamingOutput)
}

func (i GuardianWebauthnRoamingArgs) ToOutput(ctx context.Context) pulumix.Output[GuardianWebauthnRoaming] {
	return pulumix.Output[GuardianWebauthnRoaming]{
		OutputState: i.ToGuardianWebauthnRoamingOutputWithContext(ctx).OutputState,
	}
}

func (i GuardianWebauthnRoamingArgs) ToGuardianWebauthnRoamingPtrOutput() GuardianWebauthnRoamingPtrOutput {
	return i.ToGuardianWebauthnRoamingPtrOutputWithContext(context.Background())
}

func (i GuardianWebauthnRoamingArgs) ToGuardianWebauthnRoamingPtrOutputWithContext(ctx context.Context) GuardianWebauthnRoamingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnRoamingOutput).ToGuardianWebauthnRoamingPtrOutputWithContext(ctx)
}

// GuardianWebauthnRoamingPtrInput is an input type that accepts GuardianWebauthnRoamingArgs, GuardianWebauthnRoamingPtr and GuardianWebauthnRoamingPtrOutput values.
// You can construct a concrete instance of `GuardianWebauthnRoamingPtrInput` via:
//
//	        GuardianWebauthnRoamingArgs{...}
//
//	or:
//
//	        nil
type GuardianWebauthnRoamingPtrInput interface {
	pulumi.Input

	ToGuardianWebauthnRoamingPtrOutput() GuardianWebauthnRoamingPtrOutput
	ToGuardianWebauthnRoamingPtrOutputWithContext(context.Context) GuardianWebauthnRoamingPtrOutput
}

type guardianWebauthnRoamingPtrType GuardianWebauthnRoamingArgs

func GuardianWebauthnRoamingPtr(v *GuardianWebauthnRoamingArgs) GuardianWebauthnRoamingPtrInput {
	return (*guardianWebauthnRoamingPtrType)(v)
}

func (*guardianWebauthnRoamingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianWebauthnRoaming)(nil)).Elem()
}

func (i *guardianWebauthnRoamingPtrType) ToGuardianWebauthnRoamingPtrOutput() GuardianWebauthnRoamingPtrOutput {
	return i.ToGuardianWebauthnRoamingPtrOutputWithContext(context.Background())
}

func (i *guardianWebauthnRoamingPtrType) ToGuardianWebauthnRoamingPtrOutputWithContext(ctx context.Context) GuardianWebauthnRoamingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GuardianWebauthnRoamingPtrOutput)
}

func (i *guardianWebauthnRoamingPtrType) ToOutput(ctx context.Context) pulumix.Output[*GuardianWebauthnRoaming] {
	return pulumix.Output[*GuardianWebauthnRoaming]{
		OutputState: i.ToGuardianWebauthnRoamingPtrOutputWithContext(ctx).OutputState,
	}
}

type GuardianWebauthnRoamingOutput struct{ *pulumi.OutputState }

func (GuardianWebauthnRoamingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GuardianWebauthnRoaming)(nil)).Elem()
}

func (o GuardianWebauthnRoamingOutput) ToGuardianWebauthnRoamingOutput() GuardianWebauthnRoamingOutput {
	return o
}

func (o GuardianWebauthnRoamingOutput) ToGuardianWebauthnRoamingOutputWithContext(ctx context.Context) GuardianWebauthnRoamingOutput {
	return o
}

func (o GuardianWebauthnRoamingOutput) ToGuardianWebauthnRoamingPtrOutput() GuardianWebauthnRoamingPtrOutput {
	return o.ToGuardianWebauthnRoamingPtrOutputWithContext(context.Background())
}

func (o GuardianWebauthnRoamingOutput) ToGuardianWebauthnRoamingPtrOutputWithContext(ctx context.Context) GuardianWebauthnRoamingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GuardianWebauthnRoaming) *GuardianWebauthnRoaming {
		return &v
	}).(GuardianWebauthnRoamingPtrOutput)
}

func (o GuardianWebauthnRoamingOutput) ToOutput(ctx context.Context) pulumix.Output[GuardianWebauthnRoaming] {
	return pulumix.Output[GuardianWebauthnRoaming]{
		OutputState: o.OutputState,
	}
}

// Indicates whether WebAuthn with FIDO Security Keys MFA is enabled.
func (o GuardianWebauthnRoamingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GuardianWebauthnRoaming) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
func (o GuardianWebauthnRoamingOutput) OverrideRelyingParty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GuardianWebauthnRoaming) *bool { return v.OverrideRelyingParty }).(pulumi.BoolPtrOutput)
}

// The Relying Party should be a suffix of the custom domain.
func (o GuardianWebauthnRoamingOutput) RelyingPartyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianWebauthnRoaming) *string { return v.RelyingPartyIdentifier }).(pulumi.StringPtrOutput)
}

// User verification, one of `discouraged`, `preferred` or `required`.
func (o GuardianWebauthnRoamingOutput) UserVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GuardianWebauthnRoaming) *string { return v.UserVerification }).(pulumi.StringPtrOutput)
}

type GuardianWebauthnRoamingPtrOutput struct{ *pulumi.OutputState }

func (GuardianWebauthnRoamingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GuardianWebauthnRoaming)(nil)).Elem()
}

func (o GuardianWebauthnRoamingPtrOutput) ToGuardianWebauthnRoamingPtrOutput() GuardianWebauthnRoamingPtrOutput {
	return o
}

func (o GuardianWebauthnRoamingPtrOutput) ToGuardianWebauthnRoamingPtrOutputWithContext(ctx context.Context) GuardianWebauthnRoamingPtrOutput {
	return o
}

func (o GuardianWebauthnRoamingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GuardianWebauthnRoaming] {
	return pulumix.Output[*GuardianWebauthnRoaming]{
		OutputState: o.OutputState,
	}
}

func (o GuardianWebauthnRoamingPtrOutput) Elem() GuardianWebauthnRoamingOutput {
	return o.ApplyT(func(v *GuardianWebauthnRoaming) GuardianWebauthnRoaming {
		if v != nil {
			return *v
		}
		var ret GuardianWebauthnRoaming
		return ret
	}).(GuardianWebauthnRoamingOutput)
}

// Indicates whether WebAuthn with FIDO Security Keys MFA is enabled.
func (o GuardianWebauthnRoamingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnRoaming) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// The Relying Party is the domain for which the WebAuthn keys will be issued, set to `true` if you are customizing the identifier.
func (o GuardianWebauthnRoamingPtrOutput) OverrideRelyingParty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnRoaming) *bool {
		if v == nil {
			return nil
		}
		return v.OverrideRelyingParty
	}).(pulumi.BoolPtrOutput)
}

// The Relying Party should be a suffix of the custom domain.
func (o GuardianWebauthnRoamingPtrOutput) RelyingPartyIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnRoaming) *string {
		if v == nil {
			return nil
		}
		return v.RelyingPartyIdentifier
	}).(pulumi.StringPtrOutput)
}

// User verification, one of `discouraged`, `preferred` or `required`.
func (o GuardianWebauthnRoamingPtrOutput) UserVerification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GuardianWebauthnRoaming) *string {
		if v == nil {
			return nil
		}
		return v.UserVerification
	}).(pulumi.StringPtrOutput)
}

type LogStreamSink struct {
	// The AWS Account ID.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS, so this should be an output attribute.
	AwsPartnerEventSource *string `pulumi:"awsPartnerEventSource"`
	// The region in which the EventBridge event source will be created. Possible values: `ap-east-1`, `ap-northeast-1`, `ap-northeast-2`, `ap-northeast-3`, `ap-south-1`, `ap-southeast-1`, `ap-southeast-2`, `ca-central-1`, `cn-north-1`, `cn-northwest-1`, `eu-central-1`, `eu-north-1`, `eu-west-1`, `eu-west-2`, `eu-west-3`, `me-south-1`, `sa-east-1`, `us-gov-east-1`, `us-gov-west-1`, `us-east-1`, `us-east-2`, `us-west-1`, `us-west-2`.
	AwsRegion *string `pulumi:"awsRegion"`
	// Name of the Partner Topic to be used with Azure. Generally should not be specified.
	AzurePartnerTopic *string `pulumi:"azurePartnerTopic"`
	// The Azure region code. Possible values: `australiacentral`, `australiaeast`, `australiasoutheast`, `brazilsouth`, `canadacentral`, `canadaeast`, `centralindia`, `centralus`, `eastasia`, `eastus`, `eastus2`, `francecentral`, `germanywestcentral`, `japaneast`, `japanwest`, `koreacentral`, `koreasouth`, `northcentralus`, `northeurope`, `norwayeast`, `southafricanorth`, `southcentralus`, `southeastasia`, `southindia`, `switzerlandnorth`, `uaenorth`, `uksouth`, `ukwest`, `westcentralus`, `westeurope`, `westindia`, `westus`, `westus2`.
	AzureRegion *string `pulumi:"azureRegion"`
	// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription.
	AzureResourceGroup *string `pulumi:"azureResourceGroup"`
	// The unique alphanumeric string that identifies your Azure subscription.
	AzureSubscriptionId *string `pulumi:"azureSubscriptionId"`
	// The Datadog API key.
	DatadogApiKey *string `pulumi:"datadogApiKey"`
	// The Datadog region. Possible values: `us`, `eu`, `us3`, `us5`.
	DatadogRegion *string `pulumi:"datadogRegion"`
	// Sent in the HTTP "Authorization" header with each request.
	HttpAuthorization *string `pulumi:"httpAuthorization"`
	// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
	HttpContentFormat *string `pulumi:"httpContentFormat"`
	// The "Content-Type" header to send over HTTP. Common value is "application/json".
	HttpContentType *string `pulumi:"httpContentType"`
	// Additional HTTP headers to be included as part of the HTTP request.
	HttpCustomHeaders []map[string]string `pulumi:"httpCustomHeaders"`
	// The HTTP endpoint to send streaming logs.
	HttpEndpoint *string `pulumi:"httpEndpoint"`
	// The Mixpanel project ID, found on the Project Settings page.
	MixpanelProjectId *string `pulumi:"mixpanelProjectId"`
	// The Mixpanel region. Options are ["us", "eu"]. EU is required for customers with EU data residency requirements.
	MixpanelRegion *string `pulumi:"mixpanelRegion"`
	// The Mixpanel Service Account password.
	MixpanelServiceAccountPassword *string `pulumi:"mixpanelServiceAccountPassword"`
	// The Mixpanel Service Account username. Services Accounts can be created in the Project Settings page.
	MixpanelServiceAccountUsername *string `pulumi:"mixpanelServiceAccountUsername"`
	// The [Segment Write Key](https://segment.com/docs/connections/find-writekey/).
	SegmentWriteKey *string `pulumi:"segmentWriteKey"`
	// The Splunk domain name.
	SplunkDomain *string `pulumi:"splunkDomain"`
	// The Splunk port.
	SplunkPort *string `pulumi:"splunkPort"`
	// This toggle should be turned off when using self-signed certificates.
	SplunkSecure *bool `pulumi:"splunkSecure"`
	// The Splunk access token.
	SplunkToken *string `pulumi:"splunkToken"`
	// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0.
	SumoSourceAddress *string `pulumi:"sumoSourceAddress"`
}

// LogStreamSinkInput is an input type that accepts LogStreamSinkArgs and LogStreamSinkOutput values.
// You can construct a concrete instance of `LogStreamSinkInput` via:
//
//	LogStreamSinkArgs{...}
type LogStreamSinkInput interface {
	pulumi.Input

	ToLogStreamSinkOutput() LogStreamSinkOutput
	ToLogStreamSinkOutputWithContext(context.Context) LogStreamSinkOutput
}

type LogStreamSinkArgs struct {
	// The AWS Account ID.
	AwsAccountId pulumi.StringPtrInput `pulumi:"awsAccountId"`
	// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS, so this should be an output attribute.
	AwsPartnerEventSource pulumi.StringPtrInput `pulumi:"awsPartnerEventSource"`
	// The region in which the EventBridge event source will be created. Possible values: `ap-east-1`, `ap-northeast-1`, `ap-northeast-2`, `ap-northeast-3`, `ap-south-1`, `ap-southeast-1`, `ap-southeast-2`, `ca-central-1`, `cn-north-1`, `cn-northwest-1`, `eu-central-1`, `eu-north-1`, `eu-west-1`, `eu-west-2`, `eu-west-3`, `me-south-1`, `sa-east-1`, `us-gov-east-1`, `us-gov-west-1`, `us-east-1`, `us-east-2`, `us-west-1`, `us-west-2`.
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// Name of the Partner Topic to be used with Azure. Generally should not be specified.
	AzurePartnerTopic pulumi.StringPtrInput `pulumi:"azurePartnerTopic"`
	// The Azure region code. Possible values: `australiacentral`, `australiaeast`, `australiasoutheast`, `brazilsouth`, `canadacentral`, `canadaeast`, `centralindia`, `centralus`, `eastasia`, `eastus`, `eastus2`, `francecentral`, `germanywestcentral`, `japaneast`, `japanwest`, `koreacentral`, `koreasouth`, `northcentralus`, `northeurope`, `norwayeast`, `southafricanorth`, `southcentralus`, `southeastasia`, `southindia`, `switzerlandnorth`, `uaenorth`, `uksouth`, `ukwest`, `westcentralus`, `westeurope`, `westindia`, `westus`, `westus2`.
	AzureRegion pulumi.StringPtrInput `pulumi:"azureRegion"`
	// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription.
	AzureResourceGroup pulumi.StringPtrInput `pulumi:"azureResourceGroup"`
	// The unique alphanumeric string that identifies your Azure subscription.
	AzureSubscriptionId pulumi.StringPtrInput `pulumi:"azureSubscriptionId"`
	// The Datadog API key.
	DatadogApiKey pulumi.StringPtrInput `pulumi:"datadogApiKey"`
	// The Datadog region. Possible values: `us`, `eu`, `us3`, `us5`.
	DatadogRegion pulumi.StringPtrInput `pulumi:"datadogRegion"`
	// Sent in the HTTP "Authorization" header with each request.
	HttpAuthorization pulumi.StringPtrInput `pulumi:"httpAuthorization"`
	// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
	HttpContentFormat pulumi.StringPtrInput `pulumi:"httpContentFormat"`
	// The "Content-Type" header to send over HTTP. Common value is "application/json".
	HttpContentType pulumi.StringPtrInput `pulumi:"httpContentType"`
	// Additional HTTP headers to be included as part of the HTTP request.
	HttpCustomHeaders pulumi.StringMapArrayInput `pulumi:"httpCustomHeaders"`
	// The HTTP endpoint to send streaming logs.
	HttpEndpoint pulumi.StringPtrInput `pulumi:"httpEndpoint"`
	// The Mixpanel project ID, found on the Project Settings page.
	MixpanelProjectId pulumi.StringPtrInput `pulumi:"mixpanelProjectId"`
	// The Mixpanel region. Options are ["us", "eu"]. EU is required for customers with EU data residency requirements.
	MixpanelRegion pulumi.StringPtrInput `pulumi:"mixpanelRegion"`
	// The Mixpanel Service Account password.
	MixpanelServiceAccountPassword pulumi.StringPtrInput `pulumi:"mixpanelServiceAccountPassword"`
	// The Mixpanel Service Account username. Services Accounts can be created in the Project Settings page.
	MixpanelServiceAccountUsername pulumi.StringPtrInput `pulumi:"mixpanelServiceAccountUsername"`
	// The [Segment Write Key](https://segment.com/docs/connections/find-writekey/).
	SegmentWriteKey pulumi.StringPtrInput `pulumi:"segmentWriteKey"`
	// The Splunk domain name.
	SplunkDomain pulumi.StringPtrInput `pulumi:"splunkDomain"`
	// The Splunk port.
	SplunkPort pulumi.StringPtrInput `pulumi:"splunkPort"`
	// This toggle should be turned off when using self-signed certificates.
	SplunkSecure pulumi.BoolPtrInput `pulumi:"splunkSecure"`
	// The Splunk access token.
	SplunkToken pulumi.StringPtrInput `pulumi:"splunkToken"`
	// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0.
	SumoSourceAddress pulumi.StringPtrInput `pulumi:"sumoSourceAddress"`
}

func (LogStreamSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogStreamSink)(nil)).Elem()
}

func (i LogStreamSinkArgs) ToLogStreamSinkOutput() LogStreamSinkOutput {
	return i.ToLogStreamSinkOutputWithContext(context.Background())
}

func (i LogStreamSinkArgs) ToLogStreamSinkOutputWithContext(ctx context.Context) LogStreamSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogStreamSinkOutput)
}

func (i LogStreamSinkArgs) ToOutput(ctx context.Context) pulumix.Output[LogStreamSink] {
	return pulumix.Output[LogStreamSink]{
		OutputState: i.ToLogStreamSinkOutputWithContext(ctx).OutputState,
	}
}

func (i LogStreamSinkArgs) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return i.ToLogStreamSinkPtrOutputWithContext(context.Background())
}

func (i LogStreamSinkArgs) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogStreamSinkOutput).ToLogStreamSinkPtrOutputWithContext(ctx)
}

// LogStreamSinkPtrInput is an input type that accepts LogStreamSinkArgs, LogStreamSinkPtr and LogStreamSinkPtrOutput values.
// You can construct a concrete instance of `LogStreamSinkPtrInput` via:
//
//	        LogStreamSinkArgs{...}
//
//	or:
//
//	        nil
type LogStreamSinkPtrInput interface {
	pulumi.Input

	ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput
	ToLogStreamSinkPtrOutputWithContext(context.Context) LogStreamSinkPtrOutput
}

type logStreamSinkPtrType LogStreamSinkArgs

func LogStreamSinkPtr(v *LogStreamSinkArgs) LogStreamSinkPtrInput {
	return (*logStreamSinkPtrType)(v)
}

func (*logStreamSinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogStreamSink)(nil)).Elem()
}

func (i *logStreamSinkPtrType) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return i.ToLogStreamSinkPtrOutputWithContext(context.Background())
}

func (i *logStreamSinkPtrType) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogStreamSinkPtrOutput)
}

func (i *logStreamSinkPtrType) ToOutput(ctx context.Context) pulumix.Output[*LogStreamSink] {
	return pulumix.Output[*LogStreamSink]{
		OutputState: i.ToLogStreamSinkPtrOutputWithContext(ctx).OutputState,
	}
}

type LogStreamSinkOutput struct{ *pulumi.OutputState }

func (LogStreamSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogStreamSink)(nil)).Elem()
}

func (o LogStreamSinkOutput) ToLogStreamSinkOutput() LogStreamSinkOutput {
	return o
}

func (o LogStreamSinkOutput) ToLogStreamSinkOutputWithContext(ctx context.Context) LogStreamSinkOutput {
	return o
}

func (o LogStreamSinkOutput) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return o.ToLogStreamSinkPtrOutputWithContext(context.Background())
}

func (o LogStreamSinkOutput) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogStreamSink) *LogStreamSink {
		return &v
	}).(LogStreamSinkPtrOutput)
}

func (o LogStreamSinkOutput) ToOutput(ctx context.Context) pulumix.Output[LogStreamSink] {
	return pulumix.Output[LogStreamSink]{
		OutputState: o.OutputState,
	}
}

// The AWS Account ID.
func (o LogStreamSinkOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AwsAccountId }).(pulumi.StringPtrOutput)
}

// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS, so this should be an output attribute.
func (o LogStreamSinkOutput) AwsPartnerEventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AwsPartnerEventSource }).(pulumi.StringPtrOutput)
}

// The region in which the EventBridge event source will be created. Possible values: `ap-east-1`, `ap-northeast-1`, `ap-northeast-2`, `ap-northeast-3`, `ap-south-1`, `ap-southeast-1`, `ap-southeast-2`, `ca-central-1`, `cn-north-1`, `cn-northwest-1`, `eu-central-1`, `eu-north-1`, `eu-west-1`, `eu-west-2`, `eu-west-3`, `me-south-1`, `sa-east-1`, `us-gov-east-1`, `us-gov-west-1`, `us-east-1`, `us-east-2`, `us-west-1`, `us-west-2`.
func (o LogStreamSinkOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// Name of the Partner Topic to be used with Azure. Generally should not be specified.
func (o LogStreamSinkOutput) AzurePartnerTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzurePartnerTopic }).(pulumi.StringPtrOutput)
}

// The Azure region code. Possible values: `australiacentral`, `australiaeast`, `australiasoutheast`, `brazilsouth`, `canadacentral`, `canadaeast`, `centralindia`, `centralus`, `eastasia`, `eastus`, `eastus2`, `francecentral`, `germanywestcentral`, `japaneast`, `japanwest`, `koreacentral`, `koreasouth`, `northcentralus`, `northeurope`, `norwayeast`, `southafricanorth`, `southcentralus`, `southeastasia`, `southindia`, `switzerlandnorth`, `uaenorth`, `uksouth`, `ukwest`, `westcentralus`, `westeurope`, `westindia`, `westus`, `westus2`.
func (o LogStreamSinkOutput) AzureRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzureRegion }).(pulumi.StringPtrOutput)
}

// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription.
func (o LogStreamSinkOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzureResourceGroup }).(pulumi.StringPtrOutput)
}

// The unique alphanumeric string that identifies your Azure subscription.
func (o LogStreamSinkOutput) AzureSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.AzureSubscriptionId }).(pulumi.StringPtrOutput)
}

// The Datadog API key.
func (o LogStreamSinkOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.DatadogApiKey }).(pulumi.StringPtrOutput)
}

// The Datadog region. Possible values: `us`, `eu`, `us3`, `us5`.
func (o LogStreamSinkOutput) DatadogRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.DatadogRegion }).(pulumi.StringPtrOutput)
}

// Sent in the HTTP "Authorization" header with each request.
func (o LogStreamSinkOutput) HttpAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpAuthorization }).(pulumi.StringPtrOutput)
}

// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
func (o LogStreamSinkOutput) HttpContentFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpContentFormat }).(pulumi.StringPtrOutput)
}

// The "Content-Type" header to send over HTTP. Common value is "application/json".
func (o LogStreamSinkOutput) HttpContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpContentType }).(pulumi.StringPtrOutput)
}

// Additional HTTP headers to be included as part of the HTTP request.
func (o LogStreamSinkOutput) HttpCustomHeaders() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v LogStreamSink) []map[string]string { return v.HttpCustomHeaders }).(pulumi.StringMapArrayOutput)
}

// The HTTP endpoint to send streaming logs.
func (o LogStreamSinkOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.HttpEndpoint }).(pulumi.StringPtrOutput)
}

// The Mixpanel project ID, found on the Project Settings page.
func (o LogStreamSinkOutput) MixpanelProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.MixpanelProjectId }).(pulumi.StringPtrOutput)
}

// The Mixpanel region. Options are ["us", "eu"]. EU is required for customers with EU data residency requirements.
func (o LogStreamSinkOutput) MixpanelRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.MixpanelRegion }).(pulumi.StringPtrOutput)
}

// The Mixpanel Service Account password.
func (o LogStreamSinkOutput) MixpanelServiceAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.MixpanelServiceAccountPassword }).(pulumi.StringPtrOutput)
}

// The Mixpanel Service Account username. Services Accounts can be created in the Project Settings page.
func (o LogStreamSinkOutput) MixpanelServiceAccountUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.MixpanelServiceAccountUsername }).(pulumi.StringPtrOutput)
}

// The [Segment Write Key](https://segment.com/docs/connections/find-writekey/).
func (o LogStreamSinkOutput) SegmentWriteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SegmentWriteKey }).(pulumi.StringPtrOutput)
}

// The Splunk domain name.
func (o LogStreamSinkOutput) SplunkDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SplunkDomain }).(pulumi.StringPtrOutput)
}

// The Splunk port.
func (o LogStreamSinkOutput) SplunkPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SplunkPort }).(pulumi.StringPtrOutput)
}

// This toggle should be turned off when using self-signed certificates.
func (o LogStreamSinkOutput) SplunkSecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *bool { return v.SplunkSecure }).(pulumi.BoolPtrOutput)
}

// The Splunk access token.
func (o LogStreamSinkOutput) SplunkToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SplunkToken }).(pulumi.StringPtrOutput)
}

// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0.
func (o LogStreamSinkOutput) SumoSourceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogStreamSink) *string { return v.SumoSourceAddress }).(pulumi.StringPtrOutput)
}

type LogStreamSinkPtrOutput struct{ *pulumi.OutputState }

func (LogStreamSinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogStreamSink)(nil)).Elem()
}

func (o LogStreamSinkPtrOutput) ToLogStreamSinkPtrOutput() LogStreamSinkPtrOutput {
	return o
}

func (o LogStreamSinkPtrOutput) ToLogStreamSinkPtrOutputWithContext(ctx context.Context) LogStreamSinkPtrOutput {
	return o
}

func (o LogStreamSinkPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LogStreamSink] {
	return pulumix.Output[*LogStreamSink]{
		OutputState: o.OutputState,
	}
}

func (o LogStreamSinkPtrOutput) Elem() LogStreamSinkOutput {
	return o.ApplyT(func(v *LogStreamSink) LogStreamSink {
		if v != nil {
			return *v
		}
		var ret LogStreamSink
		return ret
	}).(LogStreamSinkOutput)
}

// The AWS Account ID.
func (o LogStreamSinkPtrOutput) AwsAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AwsAccountId
	}).(pulumi.StringPtrOutput)
}

// Name of the Partner Event Source to be used with AWS. Generally generated by Auth0 and passed to AWS, so this should be an output attribute.
func (o LogStreamSinkPtrOutput) AwsPartnerEventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AwsPartnerEventSource
	}).(pulumi.StringPtrOutput)
}

// The region in which the EventBridge event source will be created. Possible values: `ap-east-1`, `ap-northeast-1`, `ap-northeast-2`, `ap-northeast-3`, `ap-south-1`, `ap-southeast-1`, `ap-southeast-2`, `ca-central-1`, `cn-north-1`, `cn-northwest-1`, `eu-central-1`, `eu-north-1`, `eu-west-1`, `eu-west-2`, `eu-west-3`, `me-south-1`, `sa-east-1`, `us-gov-east-1`, `us-gov-west-1`, `us-east-1`, `us-east-2`, `us-west-1`, `us-west-2`.
func (o LogStreamSinkPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// Name of the Partner Topic to be used with Azure. Generally should not be specified.
func (o LogStreamSinkPtrOutput) AzurePartnerTopic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzurePartnerTopic
	}).(pulumi.StringPtrOutput)
}

// The Azure region code. Possible values: `australiacentral`, `australiaeast`, `australiasoutheast`, `brazilsouth`, `canadacentral`, `canadaeast`, `centralindia`, `centralus`, `eastasia`, `eastus`, `eastus2`, `francecentral`, `germanywestcentral`, `japaneast`, `japanwest`, `koreacentral`, `koreasouth`, `northcentralus`, `northeurope`, `norwayeast`, `southafricanorth`, `southcentralus`, `southeastasia`, `southindia`, `switzerlandnorth`, `uaenorth`, `uksouth`, `ukwest`, `westcentralus`, `westeurope`, `westindia`, `westus`, `westus2`.
func (o LogStreamSinkPtrOutput) AzureRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzureRegion
	}).(pulumi.StringPtrOutput)
}

// The Azure EventGrid resource group which allows you to manage all Azure assets within one subscription.
func (o LogStreamSinkPtrOutput) AzureResourceGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzureResourceGroup
	}).(pulumi.StringPtrOutput)
}

// The unique alphanumeric string that identifies your Azure subscription.
func (o LogStreamSinkPtrOutput) AzureSubscriptionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.AzureSubscriptionId
	}).(pulumi.StringPtrOutput)
}

// The Datadog API key.
func (o LogStreamSinkPtrOutput) DatadogApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.DatadogApiKey
	}).(pulumi.StringPtrOutput)
}

// The Datadog region. Possible values: `us`, `eu`, `us3`, `us5`.
func (o LogStreamSinkPtrOutput) DatadogRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.DatadogRegion
	}).(pulumi.StringPtrOutput)
}

// Sent in the HTTP "Authorization" header with each request.
func (o LogStreamSinkPtrOutput) HttpAuthorization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpAuthorization
	}).(pulumi.StringPtrOutput)
}

// The format of data sent over HTTP. Options are "JSONLINES", "JSONARRAY" or "JSONOBJECT"
func (o LogStreamSinkPtrOutput) HttpContentFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpContentFormat
	}).(pulumi.StringPtrOutput)
}

// The "Content-Type" header to send over HTTP. Common value is "application/json".
func (o LogStreamSinkPtrOutput) HttpContentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpContentType
	}).(pulumi.StringPtrOutput)
}

// Additional HTTP headers to be included as part of the HTTP request.
func (o LogStreamSinkPtrOutput) HttpCustomHeaders() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v *LogStreamSink) []map[string]string {
		if v == nil {
			return nil
		}
		return v.HttpCustomHeaders
	}).(pulumi.StringMapArrayOutput)
}

// The HTTP endpoint to send streaming logs.
func (o LogStreamSinkPtrOutput) HttpEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.HttpEndpoint
	}).(pulumi.StringPtrOutput)
}

// The Mixpanel project ID, found on the Project Settings page.
func (o LogStreamSinkPtrOutput) MixpanelProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.MixpanelProjectId
	}).(pulumi.StringPtrOutput)
}

// The Mixpanel region. Options are ["us", "eu"]. EU is required for customers with EU data residency requirements.
func (o LogStreamSinkPtrOutput) MixpanelRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.MixpanelRegion
	}).(pulumi.StringPtrOutput)
}

// The Mixpanel Service Account password.
func (o LogStreamSinkPtrOutput) MixpanelServiceAccountPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.MixpanelServiceAccountPassword
	}).(pulumi.StringPtrOutput)
}

// The Mixpanel Service Account username. Services Accounts can be created in the Project Settings page.
func (o LogStreamSinkPtrOutput) MixpanelServiceAccountUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.MixpanelServiceAccountUsername
	}).(pulumi.StringPtrOutput)
}

// The [Segment Write Key](https://segment.com/docs/connections/find-writekey/).
func (o LogStreamSinkPtrOutput) SegmentWriteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SegmentWriteKey
	}).(pulumi.StringPtrOutput)
}

// The Splunk domain name.
func (o LogStreamSinkPtrOutput) SplunkDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SplunkDomain
	}).(pulumi.StringPtrOutput)
}

// The Splunk port.
func (o LogStreamSinkPtrOutput) SplunkPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SplunkPort
	}).(pulumi.StringPtrOutput)
}

// This toggle should be turned off when using self-signed certificates.
func (o LogStreamSinkPtrOutput) SplunkSecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *bool {
		if v == nil {
			return nil
		}
		return v.SplunkSecure
	}).(pulumi.BoolPtrOutput)
}

// The Splunk access token.
func (o LogStreamSinkPtrOutput) SplunkToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SplunkToken
	}).(pulumi.StringPtrOutput)
}

// Generated URL for your defined HTTP source in Sumo Logic for collecting streaming data from Auth0.
func (o LogStreamSinkPtrOutput) SumoSourceAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogStreamSink) *string {
		if v == nil {
			return nil
		}
		return v.SumoSourceAddress
	}).(pulumi.StringPtrOutput)
}

type OrganizationBranding struct {
	// Color scheme used to customize the login pages.
	Colors map[string]string `pulumi:"colors"`
	// URL of logo to display on login page.
	LogoUrl *string `pulumi:"logoUrl"`
}

// OrganizationBrandingInput is an input type that accepts OrganizationBrandingArgs and OrganizationBrandingOutput values.
// You can construct a concrete instance of `OrganizationBrandingInput` via:
//
//	OrganizationBrandingArgs{...}
type OrganizationBrandingInput interface {
	pulumi.Input

	ToOrganizationBrandingOutput() OrganizationBrandingOutput
	ToOrganizationBrandingOutputWithContext(context.Context) OrganizationBrandingOutput
}

type OrganizationBrandingArgs struct {
	// Color scheme used to customize the login pages.
	Colors pulumi.StringMapInput `pulumi:"colors"`
	// URL of logo to display on login page.
	LogoUrl pulumi.StringPtrInput `pulumi:"logoUrl"`
}

func (OrganizationBrandingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationBranding)(nil)).Elem()
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingOutput() OrganizationBrandingOutput {
	return i.ToOrganizationBrandingOutputWithContext(context.Background())
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingOutputWithContext(ctx context.Context) OrganizationBrandingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBrandingOutput)
}

func (i OrganizationBrandingArgs) ToOutput(ctx context.Context) pulumix.Output[OrganizationBranding] {
	return pulumix.Output[OrganizationBranding]{
		OutputState: i.ToOrganizationBrandingOutputWithContext(ctx).OutputState,
	}
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return i.ToOrganizationBrandingPtrOutputWithContext(context.Background())
}

func (i OrganizationBrandingArgs) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBrandingOutput).ToOrganizationBrandingPtrOutputWithContext(ctx)
}

// OrganizationBrandingPtrInput is an input type that accepts OrganizationBrandingArgs, OrganizationBrandingPtr and OrganizationBrandingPtrOutput values.
// You can construct a concrete instance of `OrganizationBrandingPtrInput` via:
//
//	        OrganizationBrandingArgs{...}
//
//	or:
//
//	        nil
type OrganizationBrandingPtrInput interface {
	pulumi.Input

	ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput
	ToOrganizationBrandingPtrOutputWithContext(context.Context) OrganizationBrandingPtrOutput
}

type organizationBrandingPtrType OrganizationBrandingArgs

func OrganizationBrandingPtr(v *OrganizationBrandingArgs) OrganizationBrandingPtrInput {
	return (*organizationBrandingPtrType)(v)
}

func (*organizationBrandingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationBranding)(nil)).Elem()
}

func (i *organizationBrandingPtrType) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return i.ToOrganizationBrandingPtrOutputWithContext(context.Background())
}

func (i *organizationBrandingPtrType) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationBrandingPtrOutput)
}

func (i *organizationBrandingPtrType) ToOutput(ctx context.Context) pulumix.Output[*OrganizationBranding] {
	return pulumix.Output[*OrganizationBranding]{
		OutputState: i.ToOrganizationBrandingPtrOutputWithContext(ctx).OutputState,
	}
}

type OrganizationBrandingOutput struct{ *pulumi.OutputState }

func (OrganizationBrandingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationBranding)(nil)).Elem()
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingOutput() OrganizationBrandingOutput {
	return o
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingOutputWithContext(ctx context.Context) OrganizationBrandingOutput {
	return o
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return o.ToOrganizationBrandingPtrOutputWithContext(context.Background())
}

func (o OrganizationBrandingOutput) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationBranding) *OrganizationBranding {
		return &v
	}).(OrganizationBrandingPtrOutput)
}

func (o OrganizationBrandingOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationBranding] {
	return pulumix.Output[OrganizationBranding]{
		OutputState: o.OutputState,
	}
}

// Color scheme used to customize the login pages.
func (o OrganizationBrandingOutput) Colors() pulumi.StringMapOutput {
	return o.ApplyT(func(v OrganizationBranding) map[string]string { return v.Colors }).(pulumi.StringMapOutput)
}

// URL of logo to display on login page.
func (o OrganizationBrandingOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationBranding) *string { return v.LogoUrl }).(pulumi.StringPtrOutput)
}

type OrganizationBrandingPtrOutput struct{ *pulumi.OutputState }

func (OrganizationBrandingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationBranding)(nil)).Elem()
}

func (o OrganizationBrandingPtrOutput) ToOrganizationBrandingPtrOutput() OrganizationBrandingPtrOutput {
	return o
}

func (o OrganizationBrandingPtrOutput) ToOrganizationBrandingPtrOutputWithContext(ctx context.Context) OrganizationBrandingPtrOutput {
	return o
}

func (o OrganizationBrandingPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OrganizationBranding] {
	return pulumix.Output[*OrganizationBranding]{
		OutputState: o.OutputState,
	}
}

func (o OrganizationBrandingPtrOutput) Elem() OrganizationBrandingOutput {
	return o.ApplyT(func(v *OrganizationBranding) OrganizationBranding {
		if v != nil {
			return *v
		}
		var ret OrganizationBranding
		return ret
	}).(OrganizationBrandingOutput)
}

// Color scheme used to customize the login pages.
func (o OrganizationBrandingPtrOutput) Colors() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OrganizationBranding) map[string]string {
		if v == nil {
			return nil
		}
		return v.Colors
	}).(pulumi.StringMapOutput)
}

// URL of logo to display on login page.
func (o OrganizationBrandingPtrOutput) LogoUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationBranding) *string {
		if v == nil {
			return nil
		}
		return v.LogoUrl
	}).(pulumi.StringPtrOutput)
}

type OrganizationConnectionsEnabledConnection struct {
	// When true, all users that log in with this connection will be automatically granted membership in the organization. When false, users must be granted membership in the organization before logging in with this connection.
	AssignMembershipOnLogin *bool `pulumi:"assignMembershipOnLogin"`
	// The ID of the connection to enable for the organization.
	ConnectionId string `pulumi:"connectionId"`
}

// OrganizationConnectionsEnabledConnectionInput is an input type that accepts OrganizationConnectionsEnabledConnectionArgs and OrganizationConnectionsEnabledConnectionOutput values.
// You can construct a concrete instance of `OrganizationConnectionsEnabledConnectionInput` via:
//
//	OrganizationConnectionsEnabledConnectionArgs{...}
type OrganizationConnectionsEnabledConnectionInput interface {
	pulumi.Input

	ToOrganizationConnectionsEnabledConnectionOutput() OrganizationConnectionsEnabledConnectionOutput
	ToOrganizationConnectionsEnabledConnectionOutputWithContext(context.Context) OrganizationConnectionsEnabledConnectionOutput
}

type OrganizationConnectionsEnabledConnectionArgs struct {
	// When true, all users that log in with this connection will be automatically granted membership in the organization. When false, users must be granted membership in the organization before logging in with this connection.
	AssignMembershipOnLogin pulumi.BoolPtrInput `pulumi:"assignMembershipOnLogin"`
	// The ID of the connection to enable for the organization.
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
}

func (OrganizationConnectionsEnabledConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConnectionsEnabledConnection)(nil)).Elem()
}

func (i OrganizationConnectionsEnabledConnectionArgs) ToOrganizationConnectionsEnabledConnectionOutput() OrganizationConnectionsEnabledConnectionOutput {
	return i.ToOrganizationConnectionsEnabledConnectionOutputWithContext(context.Background())
}

func (i OrganizationConnectionsEnabledConnectionArgs) ToOrganizationConnectionsEnabledConnectionOutputWithContext(ctx context.Context) OrganizationConnectionsEnabledConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConnectionsEnabledConnectionOutput)
}

func (i OrganizationConnectionsEnabledConnectionArgs) ToOutput(ctx context.Context) pulumix.Output[OrganizationConnectionsEnabledConnection] {
	return pulumix.Output[OrganizationConnectionsEnabledConnection]{
		OutputState: i.ToOrganizationConnectionsEnabledConnectionOutputWithContext(ctx).OutputState,
	}
}

// OrganizationConnectionsEnabledConnectionArrayInput is an input type that accepts OrganizationConnectionsEnabledConnectionArray and OrganizationConnectionsEnabledConnectionArrayOutput values.
// You can construct a concrete instance of `OrganizationConnectionsEnabledConnectionArrayInput` via:
//
//	OrganizationConnectionsEnabledConnectionArray{ OrganizationConnectionsEnabledConnectionArgs{...} }
type OrganizationConnectionsEnabledConnectionArrayInput interface {
	pulumi.Input

	ToOrganizationConnectionsEnabledConnectionArrayOutput() OrganizationConnectionsEnabledConnectionArrayOutput
	ToOrganizationConnectionsEnabledConnectionArrayOutputWithContext(context.Context) OrganizationConnectionsEnabledConnectionArrayOutput
}

type OrganizationConnectionsEnabledConnectionArray []OrganizationConnectionsEnabledConnectionInput

func (OrganizationConnectionsEnabledConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationConnectionsEnabledConnection)(nil)).Elem()
}

func (i OrganizationConnectionsEnabledConnectionArray) ToOrganizationConnectionsEnabledConnectionArrayOutput() OrganizationConnectionsEnabledConnectionArrayOutput {
	return i.ToOrganizationConnectionsEnabledConnectionArrayOutputWithContext(context.Background())
}

func (i OrganizationConnectionsEnabledConnectionArray) ToOrganizationConnectionsEnabledConnectionArrayOutputWithContext(ctx context.Context) OrganizationConnectionsEnabledConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConnectionsEnabledConnectionArrayOutput)
}

func (i OrganizationConnectionsEnabledConnectionArray) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationConnectionsEnabledConnection] {
	return pulumix.Output[[]OrganizationConnectionsEnabledConnection]{
		OutputState: i.ToOrganizationConnectionsEnabledConnectionArrayOutputWithContext(ctx).OutputState,
	}
}

type OrganizationConnectionsEnabledConnectionOutput struct{ *pulumi.OutputState }

func (OrganizationConnectionsEnabledConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConnectionsEnabledConnection)(nil)).Elem()
}

func (o OrganizationConnectionsEnabledConnectionOutput) ToOrganizationConnectionsEnabledConnectionOutput() OrganizationConnectionsEnabledConnectionOutput {
	return o
}

func (o OrganizationConnectionsEnabledConnectionOutput) ToOrganizationConnectionsEnabledConnectionOutputWithContext(ctx context.Context) OrganizationConnectionsEnabledConnectionOutput {
	return o
}

func (o OrganizationConnectionsEnabledConnectionOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationConnectionsEnabledConnection] {
	return pulumix.Output[OrganizationConnectionsEnabledConnection]{
		OutputState: o.OutputState,
	}
}

// When true, all users that log in with this connection will be automatically granted membership in the organization. When false, users must be granted membership in the organization before logging in with this connection.
func (o OrganizationConnectionsEnabledConnectionOutput) AssignMembershipOnLogin() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationConnectionsEnabledConnection) *bool { return v.AssignMembershipOnLogin }).(pulumi.BoolPtrOutput)
}

// The ID of the connection to enable for the organization.
func (o OrganizationConnectionsEnabledConnectionOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationConnectionsEnabledConnection) string { return v.ConnectionId }).(pulumi.StringOutput)
}

type OrganizationConnectionsEnabledConnectionArrayOutput struct{ *pulumi.OutputState }

func (OrganizationConnectionsEnabledConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationConnectionsEnabledConnection)(nil)).Elem()
}

func (o OrganizationConnectionsEnabledConnectionArrayOutput) ToOrganizationConnectionsEnabledConnectionArrayOutput() OrganizationConnectionsEnabledConnectionArrayOutput {
	return o
}

func (o OrganizationConnectionsEnabledConnectionArrayOutput) ToOrganizationConnectionsEnabledConnectionArrayOutputWithContext(ctx context.Context) OrganizationConnectionsEnabledConnectionArrayOutput {
	return o
}

func (o OrganizationConnectionsEnabledConnectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationConnectionsEnabledConnection] {
	return pulumix.Output[[]OrganizationConnectionsEnabledConnection]{
		OutputState: o.OutputState,
	}
}

func (o OrganizationConnectionsEnabledConnectionArrayOutput) Index(i pulumi.IntInput) OrganizationConnectionsEnabledConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationConnectionsEnabledConnection {
		return vs[0].([]OrganizationConnectionsEnabledConnection)[vs[1].(int)]
	}).(OrganizationConnectionsEnabledConnectionOutput)
}

type PagesChangePassword struct {
	// Indicates whether to use the custom Reset Password HTML (`true`) or the default Auth0 page (`false`).
	Enabled bool `pulumi:"enabled"`
	// Customized content for the Reset Password page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
	Html string `pulumi:"html"`
}

// PagesChangePasswordInput is an input type that accepts PagesChangePasswordArgs and PagesChangePasswordOutput values.
// You can construct a concrete instance of `PagesChangePasswordInput` via:
//
//	PagesChangePasswordArgs{...}
type PagesChangePasswordInput interface {
	pulumi.Input

	ToPagesChangePasswordOutput() PagesChangePasswordOutput
	ToPagesChangePasswordOutputWithContext(context.Context) PagesChangePasswordOutput
}

type PagesChangePasswordArgs struct {
	// Indicates whether to use the custom Reset Password HTML (`true`) or the default Auth0 page (`false`).
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Customized content for the Reset Password page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
	Html pulumi.StringInput `pulumi:"html"`
}

func (PagesChangePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PagesChangePassword)(nil)).Elem()
}

func (i PagesChangePasswordArgs) ToPagesChangePasswordOutput() PagesChangePasswordOutput {
	return i.ToPagesChangePasswordOutputWithContext(context.Background())
}

func (i PagesChangePasswordArgs) ToPagesChangePasswordOutputWithContext(ctx context.Context) PagesChangePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesChangePasswordOutput)
}

func (i PagesChangePasswordArgs) ToOutput(ctx context.Context) pulumix.Output[PagesChangePassword] {
	return pulumix.Output[PagesChangePassword]{
		OutputState: i.ToPagesChangePasswordOutputWithContext(ctx).OutputState,
	}
}

func (i PagesChangePasswordArgs) ToPagesChangePasswordPtrOutput() PagesChangePasswordPtrOutput {
	return i.ToPagesChangePasswordPtrOutputWithContext(context.Background())
}

func (i PagesChangePasswordArgs) ToPagesChangePasswordPtrOutputWithContext(ctx context.Context) PagesChangePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesChangePasswordOutput).ToPagesChangePasswordPtrOutputWithContext(ctx)
}

// PagesChangePasswordPtrInput is an input type that accepts PagesChangePasswordArgs, PagesChangePasswordPtr and PagesChangePasswordPtrOutput values.
// You can construct a concrete instance of `PagesChangePasswordPtrInput` via:
//
//	        PagesChangePasswordArgs{...}
//
//	or:
//
//	        nil
type PagesChangePasswordPtrInput interface {
	pulumi.Input

	ToPagesChangePasswordPtrOutput() PagesChangePasswordPtrOutput
	ToPagesChangePasswordPtrOutputWithContext(context.Context) PagesChangePasswordPtrOutput
}

type pagesChangePasswordPtrType PagesChangePasswordArgs

func PagesChangePasswordPtr(v *PagesChangePasswordArgs) PagesChangePasswordPtrInput {
	return (*pagesChangePasswordPtrType)(v)
}

func (*pagesChangePasswordPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PagesChangePassword)(nil)).Elem()
}

func (i *pagesChangePasswordPtrType) ToPagesChangePasswordPtrOutput() PagesChangePasswordPtrOutput {
	return i.ToPagesChangePasswordPtrOutputWithContext(context.Background())
}

func (i *pagesChangePasswordPtrType) ToPagesChangePasswordPtrOutputWithContext(ctx context.Context) PagesChangePasswordPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesChangePasswordPtrOutput)
}

func (i *pagesChangePasswordPtrType) ToOutput(ctx context.Context) pulumix.Output[*PagesChangePassword] {
	return pulumix.Output[*PagesChangePassword]{
		OutputState: i.ToPagesChangePasswordPtrOutputWithContext(ctx).OutputState,
	}
}

type PagesChangePasswordOutput struct{ *pulumi.OutputState }

func (PagesChangePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PagesChangePassword)(nil)).Elem()
}

func (o PagesChangePasswordOutput) ToPagesChangePasswordOutput() PagesChangePasswordOutput {
	return o
}

func (o PagesChangePasswordOutput) ToPagesChangePasswordOutputWithContext(ctx context.Context) PagesChangePasswordOutput {
	return o
}

func (o PagesChangePasswordOutput) ToPagesChangePasswordPtrOutput() PagesChangePasswordPtrOutput {
	return o.ToPagesChangePasswordPtrOutputWithContext(context.Background())
}

func (o PagesChangePasswordOutput) ToPagesChangePasswordPtrOutputWithContext(ctx context.Context) PagesChangePasswordPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PagesChangePassword) *PagesChangePassword {
		return &v
	}).(PagesChangePasswordPtrOutput)
}

func (o PagesChangePasswordOutput) ToOutput(ctx context.Context) pulumix.Output[PagesChangePassword] {
	return pulumix.Output[PagesChangePassword]{
		OutputState: o.OutputState,
	}
}

// Indicates whether to use the custom Reset Password HTML (`true`) or the default Auth0 page (`false`).
func (o PagesChangePasswordOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PagesChangePassword) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Customized content for the Reset Password page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
func (o PagesChangePasswordOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v PagesChangePassword) string { return v.Html }).(pulumi.StringOutput)
}

type PagesChangePasswordPtrOutput struct{ *pulumi.OutputState }

func (PagesChangePasswordPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PagesChangePassword)(nil)).Elem()
}

func (o PagesChangePasswordPtrOutput) ToPagesChangePasswordPtrOutput() PagesChangePasswordPtrOutput {
	return o
}

func (o PagesChangePasswordPtrOutput) ToPagesChangePasswordPtrOutputWithContext(ctx context.Context) PagesChangePasswordPtrOutput {
	return o
}

func (o PagesChangePasswordPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*PagesChangePassword] {
	return pulumix.Output[*PagesChangePassword]{
		OutputState: o.OutputState,
	}
}

func (o PagesChangePasswordPtrOutput) Elem() PagesChangePasswordOutput {
	return o.ApplyT(func(v *PagesChangePassword) PagesChangePassword {
		if v != nil {
			return *v
		}
		var ret PagesChangePassword
		return ret
	}).(PagesChangePasswordOutput)
}

// Indicates whether to use the custom Reset Password HTML (`true`) or the default Auth0 page (`false`).
func (o PagesChangePasswordPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PagesChangePassword) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Customized content for the Reset Password page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
func (o PagesChangePasswordPtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PagesChangePassword) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

type PagesError struct {
	// Customized content for the Error page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
	Html *string `pulumi:"html"`
	// Indicates whether to show the link to logs as part of the default error page.
	ShowLogLink bool `pulumi:"showLogLink"`
	// URL to redirect to when an error occurs, instead of showing the default error page.
	Url *string `pulumi:"url"`
}

// PagesErrorInput is an input type that accepts PagesErrorArgs and PagesErrorOutput values.
// You can construct a concrete instance of `PagesErrorInput` via:
//
//	PagesErrorArgs{...}
type PagesErrorInput interface {
	pulumi.Input

	ToPagesErrorOutput() PagesErrorOutput
	ToPagesErrorOutputWithContext(context.Context) PagesErrorOutput
}

type PagesErrorArgs struct {
	// Customized content for the Error page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
	Html pulumi.StringPtrInput `pulumi:"html"`
	// Indicates whether to show the link to logs as part of the default error page.
	ShowLogLink pulumi.BoolInput `pulumi:"showLogLink"`
	// URL to redirect to when an error occurs, instead of showing the default error page.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (PagesErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PagesError)(nil)).Elem()
}

func (i PagesErrorArgs) ToPagesErrorOutput() PagesErrorOutput {
	return i.ToPagesErrorOutputWithContext(context.Background())
}

func (i PagesErrorArgs) ToPagesErrorOutputWithContext(ctx context.Context) PagesErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesErrorOutput)
}

func (i PagesErrorArgs) ToOutput(ctx context.Context) pulumix.Output[PagesError] {
	return pulumix.Output[PagesError]{
		OutputState: i.ToPagesErrorOutputWithContext(ctx).OutputState,
	}
}

func (i PagesErrorArgs) ToPagesErrorPtrOutput() PagesErrorPtrOutput {
	return i.ToPagesErrorPtrOutputWithContext(context.Background())
}

func (i PagesErrorArgs) ToPagesErrorPtrOutputWithContext(ctx context.Context) PagesErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesErrorOutput).ToPagesErrorPtrOutputWithContext(ctx)
}

// PagesErrorPtrInput is an input type that accepts PagesErrorArgs, PagesErrorPtr and PagesErrorPtrOutput values.
// You can construct a concrete instance of `PagesErrorPtrInput` via:
//
//	        PagesErrorArgs{...}
//
//	or:
//
//	        nil
type PagesErrorPtrInput interface {
	pulumi.Input

	ToPagesErrorPtrOutput() PagesErrorPtrOutput
	ToPagesErrorPtrOutputWithContext(context.Context) PagesErrorPtrOutput
}

type pagesErrorPtrType PagesErrorArgs

func PagesErrorPtr(v *PagesErrorArgs) PagesErrorPtrInput {
	return (*pagesErrorPtrType)(v)
}

func (*pagesErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PagesError)(nil)).Elem()
}

func (i *pagesErrorPtrType) ToPagesErrorPtrOutput() PagesErrorPtrOutput {
	return i.ToPagesErrorPtrOutputWithContext(context.Background())
}

func (i *pagesErrorPtrType) ToPagesErrorPtrOutputWithContext(ctx context.Context) PagesErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesErrorPtrOutput)
}

func (i *pagesErrorPtrType) ToOutput(ctx context.Context) pulumix.Output[*PagesError] {
	return pulumix.Output[*PagesError]{
		OutputState: i.ToPagesErrorPtrOutputWithContext(ctx).OutputState,
	}
}

type PagesErrorOutput struct{ *pulumi.OutputState }

func (PagesErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PagesError)(nil)).Elem()
}

func (o PagesErrorOutput) ToPagesErrorOutput() PagesErrorOutput {
	return o
}

func (o PagesErrorOutput) ToPagesErrorOutputWithContext(ctx context.Context) PagesErrorOutput {
	return o
}

func (o PagesErrorOutput) ToPagesErrorPtrOutput() PagesErrorPtrOutput {
	return o.ToPagesErrorPtrOutputWithContext(context.Background())
}

func (o PagesErrorOutput) ToPagesErrorPtrOutputWithContext(ctx context.Context) PagesErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PagesError) *PagesError {
		return &v
	}).(PagesErrorPtrOutput)
}

func (o PagesErrorOutput) ToOutput(ctx context.Context) pulumix.Output[PagesError] {
	return pulumix.Output[PagesError]{
		OutputState: o.OutputState,
	}
}

// Customized content for the Error page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
func (o PagesErrorOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PagesError) *string { return v.Html }).(pulumi.StringPtrOutput)
}

// Indicates whether to show the link to logs as part of the default error page.
func (o PagesErrorOutput) ShowLogLink() pulumi.BoolOutput {
	return o.ApplyT(func(v PagesError) bool { return v.ShowLogLink }).(pulumi.BoolOutput)
}

// URL to redirect to when an error occurs, instead of showing the default error page.
func (o PagesErrorOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PagesError) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type PagesErrorPtrOutput struct{ *pulumi.OutputState }

func (PagesErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PagesError)(nil)).Elem()
}

func (o PagesErrorPtrOutput) ToPagesErrorPtrOutput() PagesErrorPtrOutput {
	return o
}

func (o PagesErrorPtrOutput) ToPagesErrorPtrOutputWithContext(ctx context.Context) PagesErrorPtrOutput {
	return o
}

func (o PagesErrorPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*PagesError] {
	return pulumix.Output[*PagesError]{
		OutputState: o.OutputState,
	}
}

func (o PagesErrorPtrOutput) Elem() PagesErrorOutput {
	return o.ApplyT(func(v *PagesError) PagesError {
		if v != nil {
			return *v
		}
		var ret PagesError
		return ret
	}).(PagesErrorOutput)
}

// Customized content for the Error page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
func (o PagesErrorPtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PagesError) *string {
		if v == nil {
			return nil
		}
		return v.Html
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to show the link to logs as part of the default error page.
func (o PagesErrorPtrOutput) ShowLogLink() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PagesError) *bool {
		if v == nil {
			return nil
		}
		return &v.ShowLogLink
	}).(pulumi.BoolPtrOutput)
}

// URL to redirect to when an error occurs, instead of showing the default error page.
func (o PagesErrorPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PagesError) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type PagesGuardianMfa struct {
	// Indicates whether to use the custom Guardian MFA HTML (`true`) or the default Auth0 page (`false`).
	Enabled bool `pulumi:"enabled"`
	// Customized content for the Guardian MFA page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
	Html string `pulumi:"html"`
}

// PagesGuardianMfaInput is an input type that accepts PagesGuardianMfaArgs and PagesGuardianMfaOutput values.
// You can construct a concrete instance of `PagesGuardianMfaInput` via:
//
//	PagesGuardianMfaArgs{...}
type PagesGuardianMfaInput interface {
	pulumi.Input

	ToPagesGuardianMfaOutput() PagesGuardianMfaOutput
	ToPagesGuardianMfaOutputWithContext(context.Context) PagesGuardianMfaOutput
}

type PagesGuardianMfaArgs struct {
	// Indicates whether to use the custom Guardian MFA HTML (`true`) or the default Auth0 page (`false`).
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Customized content for the Guardian MFA page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
	Html pulumi.StringInput `pulumi:"html"`
}

func (PagesGuardianMfaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PagesGuardianMfa)(nil)).Elem()
}

func (i PagesGuardianMfaArgs) ToPagesGuardianMfaOutput() PagesGuardianMfaOutput {
	return i.ToPagesGuardianMfaOutputWithContext(context.Background())
}

func (i PagesGuardianMfaArgs) ToPagesGuardianMfaOutputWithContext(ctx context.Context) PagesGuardianMfaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesGuardianMfaOutput)
}

func (i PagesGuardianMfaArgs) ToOutput(ctx context.Context) pulumix.Output[PagesGuardianMfa] {
	return pulumix.Output[PagesGuardianMfa]{
		OutputState: i.ToPagesGuardianMfaOutputWithContext(ctx).OutputState,
	}
}

func (i PagesGuardianMfaArgs) ToPagesGuardianMfaPtrOutput() PagesGuardianMfaPtrOutput {
	return i.ToPagesGuardianMfaPtrOutputWithContext(context.Background())
}

func (i PagesGuardianMfaArgs) ToPagesGuardianMfaPtrOutputWithContext(ctx context.Context) PagesGuardianMfaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesGuardianMfaOutput).ToPagesGuardianMfaPtrOutputWithContext(ctx)
}

// PagesGuardianMfaPtrInput is an input type that accepts PagesGuardianMfaArgs, PagesGuardianMfaPtr and PagesGuardianMfaPtrOutput values.
// You can construct a concrete instance of `PagesGuardianMfaPtrInput` via:
//
//	        PagesGuardianMfaArgs{...}
//
//	or:
//
//	        nil
type PagesGuardianMfaPtrInput interface {
	pulumi.Input

	ToPagesGuardianMfaPtrOutput() PagesGuardianMfaPtrOutput
	ToPagesGuardianMfaPtrOutputWithContext(context.Context) PagesGuardianMfaPtrOutput
}

type pagesGuardianMfaPtrType PagesGuardianMfaArgs

func PagesGuardianMfaPtr(v *PagesGuardianMfaArgs) PagesGuardianMfaPtrInput {
	return (*pagesGuardianMfaPtrType)(v)
}

func (*pagesGuardianMfaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PagesGuardianMfa)(nil)).Elem()
}

func (i *pagesGuardianMfaPtrType) ToPagesGuardianMfaPtrOutput() PagesGuardianMfaPtrOutput {
	return i.ToPagesGuardianMfaPtrOutputWithContext(context.Background())
}

func (i *pagesGuardianMfaPtrType) ToPagesGuardianMfaPtrOutputWithContext(ctx context.Context) PagesGuardianMfaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesGuardianMfaPtrOutput)
}

func (i *pagesGuardianMfaPtrType) ToOutput(ctx context.Context) pulumix.Output[*PagesGuardianMfa] {
	return pulumix.Output[*PagesGuardianMfa]{
		OutputState: i.ToPagesGuardianMfaPtrOutputWithContext(ctx).OutputState,
	}
}

type PagesGuardianMfaOutput struct{ *pulumi.OutputState }

func (PagesGuardianMfaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PagesGuardianMfa)(nil)).Elem()
}

func (o PagesGuardianMfaOutput) ToPagesGuardianMfaOutput() PagesGuardianMfaOutput {
	return o
}

func (o PagesGuardianMfaOutput) ToPagesGuardianMfaOutputWithContext(ctx context.Context) PagesGuardianMfaOutput {
	return o
}

func (o PagesGuardianMfaOutput) ToPagesGuardianMfaPtrOutput() PagesGuardianMfaPtrOutput {
	return o.ToPagesGuardianMfaPtrOutputWithContext(context.Background())
}

func (o PagesGuardianMfaOutput) ToPagesGuardianMfaPtrOutputWithContext(ctx context.Context) PagesGuardianMfaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PagesGuardianMfa) *PagesGuardianMfa {
		return &v
	}).(PagesGuardianMfaPtrOutput)
}

func (o PagesGuardianMfaOutput) ToOutput(ctx context.Context) pulumix.Output[PagesGuardianMfa] {
	return pulumix.Output[PagesGuardianMfa]{
		OutputState: o.OutputState,
	}
}

// Indicates whether to use the custom Guardian MFA HTML (`true`) or the default Auth0 page (`false`).
func (o PagesGuardianMfaOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PagesGuardianMfa) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Customized content for the Guardian MFA page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
func (o PagesGuardianMfaOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v PagesGuardianMfa) string { return v.Html }).(pulumi.StringOutput)
}

type PagesGuardianMfaPtrOutput struct{ *pulumi.OutputState }

func (PagesGuardianMfaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PagesGuardianMfa)(nil)).Elem()
}

func (o PagesGuardianMfaPtrOutput) ToPagesGuardianMfaPtrOutput() PagesGuardianMfaPtrOutput {
	return o
}

func (o PagesGuardianMfaPtrOutput) ToPagesGuardianMfaPtrOutputWithContext(ctx context.Context) PagesGuardianMfaPtrOutput {
	return o
}

func (o PagesGuardianMfaPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*PagesGuardianMfa] {
	return pulumix.Output[*PagesGuardianMfa]{
		OutputState: o.OutputState,
	}
}

func (o PagesGuardianMfaPtrOutput) Elem() PagesGuardianMfaOutput {
	return o.ApplyT(func(v *PagesGuardianMfa) PagesGuardianMfa {
		if v != nil {
			return *v
		}
		var ret PagesGuardianMfa
		return ret
	}).(PagesGuardianMfaOutput)
}

// Indicates whether to use the custom Guardian MFA HTML (`true`) or the default Auth0 page (`false`).
func (o PagesGuardianMfaPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PagesGuardianMfa) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Customized content for the Guardian MFA page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
func (o PagesGuardianMfaPtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PagesGuardianMfa) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

type PagesLogin struct {
	// Indicates whether to use the custom Login page HTML (`true`) or the default Auth0 page (`false`).
	Enabled bool `pulumi:"enabled"`
	// Customized content for the Login page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
	Html string `pulumi:"html"`
}

// PagesLoginInput is an input type that accepts PagesLoginArgs and PagesLoginOutput values.
// You can construct a concrete instance of `PagesLoginInput` via:
//
//	PagesLoginArgs{...}
type PagesLoginInput interface {
	pulumi.Input

	ToPagesLoginOutput() PagesLoginOutput
	ToPagesLoginOutputWithContext(context.Context) PagesLoginOutput
}

type PagesLoginArgs struct {
	// Indicates whether to use the custom Login page HTML (`true`) or the default Auth0 page (`false`).
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Customized content for the Login page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
	Html pulumi.StringInput `pulumi:"html"`
}

func (PagesLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PagesLogin)(nil)).Elem()
}

func (i PagesLoginArgs) ToPagesLoginOutput() PagesLoginOutput {
	return i.ToPagesLoginOutputWithContext(context.Background())
}

func (i PagesLoginArgs) ToPagesLoginOutputWithContext(ctx context.Context) PagesLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesLoginOutput)
}

func (i PagesLoginArgs) ToOutput(ctx context.Context) pulumix.Output[PagesLogin] {
	return pulumix.Output[PagesLogin]{
		OutputState: i.ToPagesLoginOutputWithContext(ctx).OutputState,
	}
}

func (i PagesLoginArgs) ToPagesLoginPtrOutput() PagesLoginPtrOutput {
	return i.ToPagesLoginPtrOutputWithContext(context.Background())
}

func (i PagesLoginArgs) ToPagesLoginPtrOutputWithContext(ctx context.Context) PagesLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesLoginOutput).ToPagesLoginPtrOutputWithContext(ctx)
}

// PagesLoginPtrInput is an input type that accepts PagesLoginArgs, PagesLoginPtr and PagesLoginPtrOutput values.
// You can construct a concrete instance of `PagesLoginPtrInput` via:
//
//	        PagesLoginArgs{...}
//
//	or:
//
//	        nil
type PagesLoginPtrInput interface {
	pulumi.Input

	ToPagesLoginPtrOutput() PagesLoginPtrOutput
	ToPagesLoginPtrOutputWithContext(context.Context) PagesLoginPtrOutput
}

type pagesLoginPtrType PagesLoginArgs

func PagesLoginPtr(v *PagesLoginArgs) PagesLoginPtrInput {
	return (*pagesLoginPtrType)(v)
}

func (*pagesLoginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PagesLogin)(nil)).Elem()
}

func (i *pagesLoginPtrType) ToPagesLoginPtrOutput() PagesLoginPtrOutput {
	return i.ToPagesLoginPtrOutputWithContext(context.Background())
}

func (i *pagesLoginPtrType) ToPagesLoginPtrOutputWithContext(ctx context.Context) PagesLoginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagesLoginPtrOutput)
}

func (i *pagesLoginPtrType) ToOutput(ctx context.Context) pulumix.Output[*PagesLogin] {
	return pulumix.Output[*PagesLogin]{
		OutputState: i.ToPagesLoginPtrOutputWithContext(ctx).OutputState,
	}
}

type PagesLoginOutput struct{ *pulumi.OutputState }

func (PagesLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PagesLogin)(nil)).Elem()
}

func (o PagesLoginOutput) ToPagesLoginOutput() PagesLoginOutput {
	return o
}

func (o PagesLoginOutput) ToPagesLoginOutputWithContext(ctx context.Context) PagesLoginOutput {
	return o
}

func (o PagesLoginOutput) ToPagesLoginPtrOutput() PagesLoginPtrOutput {
	return o.ToPagesLoginPtrOutputWithContext(context.Background())
}

func (o PagesLoginOutput) ToPagesLoginPtrOutputWithContext(ctx context.Context) PagesLoginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PagesLogin) *PagesLogin {
		return &v
	}).(PagesLoginPtrOutput)
}

func (o PagesLoginOutput) ToOutput(ctx context.Context) pulumix.Output[PagesLogin] {
	return pulumix.Output[PagesLogin]{
		OutputState: o.OutputState,
	}
}

// Indicates whether to use the custom Login page HTML (`true`) or the default Auth0 page (`false`).
func (o PagesLoginOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v PagesLogin) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Customized content for the Login page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
func (o PagesLoginOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v PagesLogin) string { return v.Html }).(pulumi.StringOutput)
}

type PagesLoginPtrOutput struct{ *pulumi.OutputState }

func (PagesLoginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PagesLogin)(nil)).Elem()
}

func (o PagesLoginPtrOutput) ToPagesLoginPtrOutput() PagesLoginPtrOutput {
	return o
}

func (o PagesLoginPtrOutput) ToPagesLoginPtrOutputWithContext(ctx context.Context) PagesLoginPtrOutput {
	return o
}

func (o PagesLoginPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*PagesLogin] {
	return pulumix.Output[*PagesLogin]{
		OutputState: o.OutputState,
	}
}

func (o PagesLoginPtrOutput) Elem() PagesLoginOutput {
	return o.ApplyT(func(v *PagesLogin) PagesLogin {
		if v != nil {
			return *v
		}
		var ret PagesLogin
		return ret
	}).(PagesLoginOutput)
}

// Indicates whether to use the custom Login page HTML (`true`) or the default Auth0 page (`false`).
func (o PagesLoginPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PagesLogin) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Customized content for the Login page. HTML format with supported [Liquid syntax](https://github.com/Shopify/liquid/wiki/Liquid-for-Designers).
func (o PagesLoginPtrOutput) Html() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PagesLogin) *string {
		if v == nil {
			return nil
		}
		return &v.Html
	}).(pulumi.StringPtrOutput)
}

type ResourceServerScopesScope struct {
	// User-friendly description of the scope (permission).
	Description *string `pulumi:"description"`
	// Name of the scope (permission). Examples include `read:appointments` or `delete:appointments`.
	Name string `pulumi:"name"`
}

// ResourceServerScopesScopeInput is an input type that accepts ResourceServerScopesScopeArgs and ResourceServerScopesScopeOutput values.
// You can construct a concrete instance of `ResourceServerScopesScopeInput` via:
//
//	ResourceServerScopesScopeArgs{...}
type ResourceServerScopesScopeInput interface {
	pulumi.Input

	ToResourceServerScopesScopeOutput() ResourceServerScopesScopeOutput
	ToResourceServerScopesScopeOutputWithContext(context.Context) ResourceServerScopesScopeOutput
}

type ResourceServerScopesScopeArgs struct {
	// User-friendly description of the scope (permission).
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of the scope (permission). Examples include `read:appointments` or `delete:appointments`.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ResourceServerScopesScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScopesScope)(nil)).Elem()
}

func (i ResourceServerScopesScopeArgs) ToResourceServerScopesScopeOutput() ResourceServerScopesScopeOutput {
	return i.ToResourceServerScopesScopeOutputWithContext(context.Background())
}

func (i ResourceServerScopesScopeArgs) ToResourceServerScopesScopeOutputWithContext(ctx context.Context) ResourceServerScopesScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopesScopeOutput)
}

func (i ResourceServerScopesScopeArgs) ToOutput(ctx context.Context) pulumix.Output[ResourceServerScopesScope] {
	return pulumix.Output[ResourceServerScopesScope]{
		OutputState: i.ToResourceServerScopesScopeOutputWithContext(ctx).OutputState,
	}
}

// ResourceServerScopesScopeArrayInput is an input type that accepts ResourceServerScopesScopeArray and ResourceServerScopesScopeArrayOutput values.
// You can construct a concrete instance of `ResourceServerScopesScopeArrayInput` via:
//
//	ResourceServerScopesScopeArray{ ResourceServerScopesScopeArgs{...} }
type ResourceServerScopesScopeArrayInput interface {
	pulumi.Input

	ToResourceServerScopesScopeArrayOutput() ResourceServerScopesScopeArrayOutput
	ToResourceServerScopesScopeArrayOutputWithContext(context.Context) ResourceServerScopesScopeArrayOutput
}

type ResourceServerScopesScopeArray []ResourceServerScopesScopeInput

func (ResourceServerScopesScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScopesScope)(nil)).Elem()
}

func (i ResourceServerScopesScopeArray) ToResourceServerScopesScopeArrayOutput() ResourceServerScopesScopeArrayOutput {
	return i.ToResourceServerScopesScopeArrayOutputWithContext(context.Background())
}

func (i ResourceServerScopesScopeArray) ToResourceServerScopesScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopesScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopesScopeArrayOutput)
}

func (i ResourceServerScopesScopeArray) ToOutput(ctx context.Context) pulumix.Output[[]ResourceServerScopesScope] {
	return pulumix.Output[[]ResourceServerScopesScope]{
		OutputState: i.ToResourceServerScopesScopeArrayOutputWithContext(ctx).OutputState,
	}
}

type ResourceServerScopesScopeOutput struct{ *pulumi.OutputState }

func (ResourceServerScopesScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScopesScope)(nil)).Elem()
}

func (o ResourceServerScopesScopeOutput) ToResourceServerScopesScopeOutput() ResourceServerScopesScopeOutput {
	return o
}

func (o ResourceServerScopesScopeOutput) ToResourceServerScopesScopeOutputWithContext(ctx context.Context) ResourceServerScopesScopeOutput {
	return o
}

func (o ResourceServerScopesScopeOutput) ToOutput(ctx context.Context) pulumix.Output[ResourceServerScopesScope] {
	return pulumix.Output[ResourceServerScopesScope]{
		OutputState: o.OutputState,
	}
}

// User-friendly description of the scope (permission).
func (o ResourceServerScopesScopeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceServerScopesScope) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the scope (permission). Examples include `read:appointments` or `delete:appointments`.
func (o ResourceServerScopesScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceServerScopesScope) string { return v.Name }).(pulumi.StringOutput)
}

type ResourceServerScopesScopeArrayOutput struct{ *pulumi.OutputState }

func (ResourceServerScopesScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScopesScope)(nil)).Elem()
}

func (o ResourceServerScopesScopeArrayOutput) ToResourceServerScopesScopeArrayOutput() ResourceServerScopesScopeArrayOutput {
	return o
}

func (o ResourceServerScopesScopeArrayOutput) ToResourceServerScopesScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopesScopeArrayOutput {
	return o
}

func (o ResourceServerScopesScopeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ResourceServerScopesScope] {
	return pulumix.Output[[]ResourceServerScopesScope]{
		OutputState: o.OutputState,
	}
}

func (o ResourceServerScopesScopeArrayOutput) Index(i pulumi.IntInput) ResourceServerScopesScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceServerScopesScope {
		return vs[0].([]ResourceServerScopesScope)[vs[1].(int)]
	}).(ResourceServerScopesScopeOutput)
}

type RolePermissionsPermission struct {
	// Description of the permission.
	Description *string `pulumi:"description"`
	// Name of permission.
	Name string `pulumi:"name"`
	// Resource server identifier associated with the permission.
	ResourceServerIdentifier string `pulumi:"resourceServerIdentifier"`
	// Name of resource server that the permission is associated with.
	ResourceServerName *string `pulumi:"resourceServerName"`
}

// RolePermissionsPermissionInput is an input type that accepts RolePermissionsPermissionArgs and RolePermissionsPermissionOutput values.
// You can construct a concrete instance of `RolePermissionsPermissionInput` via:
//
//	RolePermissionsPermissionArgs{...}
type RolePermissionsPermissionInput interface {
	pulumi.Input

	ToRolePermissionsPermissionOutput() RolePermissionsPermissionOutput
	ToRolePermissionsPermissionOutputWithContext(context.Context) RolePermissionsPermissionOutput
}

type RolePermissionsPermissionArgs struct {
	// Description of the permission.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of permission.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource server identifier associated with the permission.
	ResourceServerIdentifier pulumi.StringInput `pulumi:"resourceServerIdentifier"`
	// Name of resource server that the permission is associated with.
	ResourceServerName pulumi.StringPtrInput `pulumi:"resourceServerName"`
}

func (RolePermissionsPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermissionsPermission)(nil)).Elem()
}

func (i RolePermissionsPermissionArgs) ToRolePermissionsPermissionOutput() RolePermissionsPermissionOutput {
	return i.ToRolePermissionsPermissionOutputWithContext(context.Background())
}

func (i RolePermissionsPermissionArgs) ToRolePermissionsPermissionOutputWithContext(ctx context.Context) RolePermissionsPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionsPermissionOutput)
}

func (i RolePermissionsPermissionArgs) ToOutput(ctx context.Context) pulumix.Output[RolePermissionsPermission] {
	return pulumix.Output[RolePermissionsPermission]{
		OutputState: i.ToRolePermissionsPermissionOutputWithContext(ctx).OutputState,
	}
}

// RolePermissionsPermissionArrayInput is an input type that accepts RolePermissionsPermissionArray and RolePermissionsPermissionArrayOutput values.
// You can construct a concrete instance of `RolePermissionsPermissionArrayInput` via:
//
//	RolePermissionsPermissionArray{ RolePermissionsPermissionArgs{...} }
type RolePermissionsPermissionArrayInput interface {
	pulumi.Input

	ToRolePermissionsPermissionArrayOutput() RolePermissionsPermissionArrayOutput
	ToRolePermissionsPermissionArrayOutputWithContext(context.Context) RolePermissionsPermissionArrayOutput
}

type RolePermissionsPermissionArray []RolePermissionsPermissionInput

func (RolePermissionsPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermissionsPermission)(nil)).Elem()
}

func (i RolePermissionsPermissionArray) ToRolePermissionsPermissionArrayOutput() RolePermissionsPermissionArrayOutput {
	return i.ToRolePermissionsPermissionArrayOutputWithContext(context.Background())
}

func (i RolePermissionsPermissionArray) ToRolePermissionsPermissionArrayOutputWithContext(ctx context.Context) RolePermissionsPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePermissionsPermissionArrayOutput)
}

func (i RolePermissionsPermissionArray) ToOutput(ctx context.Context) pulumix.Output[[]RolePermissionsPermission] {
	return pulumix.Output[[]RolePermissionsPermission]{
		OutputState: i.ToRolePermissionsPermissionArrayOutputWithContext(ctx).OutputState,
	}
}

type RolePermissionsPermissionOutput struct{ *pulumi.OutputState }

func (RolePermissionsPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePermissionsPermission)(nil)).Elem()
}

func (o RolePermissionsPermissionOutput) ToRolePermissionsPermissionOutput() RolePermissionsPermissionOutput {
	return o
}

func (o RolePermissionsPermissionOutput) ToRolePermissionsPermissionOutputWithContext(ctx context.Context) RolePermissionsPermissionOutput {
	return o
}

func (o RolePermissionsPermissionOutput) ToOutput(ctx context.Context) pulumix.Output[RolePermissionsPermission] {
	return pulumix.Output[RolePermissionsPermission]{
		OutputState: o.OutputState,
	}
}

// Description of the permission.
func (o RolePermissionsPermissionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolePermissionsPermission) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of permission.
func (o RolePermissionsPermissionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RolePermissionsPermission) string { return v.Name }).(pulumi.StringOutput)
}

// Resource server identifier associated with the permission.
func (o RolePermissionsPermissionOutput) ResourceServerIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v RolePermissionsPermission) string { return v.ResourceServerIdentifier }).(pulumi.StringOutput)
}

// Name of resource server that the permission is associated with.
func (o RolePermissionsPermissionOutput) ResourceServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RolePermissionsPermission) *string { return v.ResourceServerName }).(pulumi.StringPtrOutput)
}

type RolePermissionsPermissionArrayOutput struct{ *pulumi.OutputState }

func (RolePermissionsPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePermissionsPermission)(nil)).Elem()
}

func (o RolePermissionsPermissionArrayOutput) ToRolePermissionsPermissionArrayOutput() RolePermissionsPermissionArrayOutput {
	return o
}

func (o RolePermissionsPermissionArrayOutput) ToRolePermissionsPermissionArrayOutputWithContext(ctx context.Context) RolePermissionsPermissionArrayOutput {
	return o
}

func (o RolePermissionsPermissionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]RolePermissionsPermission] {
	return pulumix.Output[[]RolePermissionsPermission]{
		OutputState: o.OutputState,
	}
}

func (o RolePermissionsPermissionArrayOutput) Index(i pulumi.IntInput) RolePermissionsPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolePermissionsPermission {
		return vs[0].([]RolePermissionsPermission)[vs[1].(int)]
	}).(RolePermissionsPermissionOutput)
}

type TenantFlags struct {
	// Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).
	AllowLegacyDelegationGrantTypes *bool `pulumi:"allowLegacyDelegationGrantTypes"`
	// Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).
	AllowLegacyRoGrantTypes *bool `pulumi:"allowLegacyRoGrantTypes"`
	// If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.
	AllowLegacyTokeninfoEndpoint *bool `pulumi:"allowLegacyTokeninfoEndpoint"`
	// Enables new insights activity page view.
	DashboardInsightsView *bool `pulumi:"dashboardInsightsView"`
	// Enables beta access to log streaming changes.
	DashboardLogStreamsNext *bool `pulumi:"dashboardLogStreamsNext"`
	// Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.
	DisableClickjackProtectionHeaders *bool `pulumi:"disableClickjackProtectionHeaders"`
	// Disables SAML fields map fix for bad mappings with repeated attributes.
	DisableFieldsMapFix *bool `pulumi:"disableFieldsMapFix"`
	// If true, SMS phone numbers will not be obfuscated in Management API GET calls.
	DisableManagementApiSmsObfuscation *bool `pulumi:"disableManagementApiSmsObfuscation"`
	// If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.
	EnableAdfsWaadEmailVerification *bool `pulumi:"enableAdfsWaadEmailVerification"`
	// Indicates whether the APIs section is enabled for the tenant.
	EnableApisSection *bool `pulumi:"enableApisSection"`
	// Indicates whether all current connections should be enabled when a new client is created.
	EnableClientConnections *bool `pulumi:"enableClientConnections"`
	// Indicates whether the tenant allows custom domains in emails. Before enabling this flag, you must have a custom domain with status: `ready`.
	EnableCustomDomainInEmails *bool `pulumi:"enableCustomDomainInEmails"`
	// Indicates whether the tenant allows dynamic client registration.
	EnableDynamicClientRegistration *bool `pulumi:"enableDynamicClientRegistration"`
	// Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).
	EnableIdtokenApi2 *bool `pulumi:"enableIdtokenApi2"`
	// Indicates whether to use the older v2 legacy logs search.
	EnableLegacyLogsSearchV2 *bool `pulumi:"enableLegacyLogsSearchV2"`
	// Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).
	EnableLegacyProfile *bool `pulumi:"enableLegacyProfile"`
	// Indicates whether advanced API Authorization scenarios are enabled.
	EnablePipeline2 *bool `pulumi:"enablePipeline2"`
	// Indicates whether the public sign up process shows a `userExists` error if the user already exists.
	EnablePublicSignupUserExistsError *bool `pulumi:"enablePublicSignupUserExistsError"`
	// Used to allow users to pick which factor to enroll with from the list of available MFA factors.
	MfaShowFactorListOnEnrollment *bool `pulumi:"mfaShowFactorListOnEnrollment"`
	// Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.
	NoDiscloseEnterpriseConnections *bool `pulumi:"noDiscloseEnterpriseConnections"`
	// Makes the use of Pushed Authorization Requests mandatory for all clients across the tenant.
	RequirePushedAuthorizationRequests *bool `pulumi:"requirePushedAuthorizationRequests"`
	// Delete underlying grant when a refresh token is revoked via the Authentication API.
	RevokeRefreshTokenGrant *bool `pulumi:"revokeRefreshTokenGrant"`
	// Indicates whether to use scope descriptions for consent.
	UseScopeDescriptionsForConsent *bool `pulumi:"useScopeDescriptionsForConsent"`
}

// TenantFlagsInput is an input type that accepts TenantFlagsArgs and TenantFlagsOutput values.
// You can construct a concrete instance of `TenantFlagsInput` via:
//
//	TenantFlagsArgs{...}
type TenantFlagsInput interface {
	pulumi.Input

	ToTenantFlagsOutput() TenantFlagsOutput
	ToTenantFlagsOutputWithContext(context.Context) TenantFlagsOutput
}

type TenantFlagsArgs struct {
	// Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).
	AllowLegacyDelegationGrantTypes pulumi.BoolPtrInput `pulumi:"allowLegacyDelegationGrantTypes"`
	// Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).
	AllowLegacyRoGrantTypes pulumi.BoolPtrInput `pulumi:"allowLegacyRoGrantTypes"`
	// If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.
	AllowLegacyTokeninfoEndpoint pulumi.BoolPtrInput `pulumi:"allowLegacyTokeninfoEndpoint"`
	// Enables new insights activity page view.
	DashboardInsightsView pulumi.BoolPtrInput `pulumi:"dashboardInsightsView"`
	// Enables beta access to log streaming changes.
	DashboardLogStreamsNext pulumi.BoolPtrInput `pulumi:"dashboardLogStreamsNext"`
	// Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.
	DisableClickjackProtectionHeaders pulumi.BoolPtrInput `pulumi:"disableClickjackProtectionHeaders"`
	// Disables SAML fields map fix for bad mappings with repeated attributes.
	DisableFieldsMapFix pulumi.BoolPtrInput `pulumi:"disableFieldsMapFix"`
	// If true, SMS phone numbers will not be obfuscated in Management API GET calls.
	DisableManagementApiSmsObfuscation pulumi.BoolPtrInput `pulumi:"disableManagementApiSmsObfuscation"`
	// If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.
	EnableAdfsWaadEmailVerification pulumi.BoolPtrInput `pulumi:"enableAdfsWaadEmailVerification"`
	// Indicates whether the APIs section is enabled for the tenant.
	EnableApisSection pulumi.BoolPtrInput `pulumi:"enableApisSection"`
	// Indicates whether all current connections should be enabled when a new client is created.
	EnableClientConnections pulumi.BoolPtrInput `pulumi:"enableClientConnections"`
	// Indicates whether the tenant allows custom domains in emails. Before enabling this flag, you must have a custom domain with status: `ready`.
	EnableCustomDomainInEmails pulumi.BoolPtrInput `pulumi:"enableCustomDomainInEmails"`
	// Indicates whether the tenant allows dynamic client registration.
	EnableDynamicClientRegistration pulumi.BoolPtrInput `pulumi:"enableDynamicClientRegistration"`
	// Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).
	EnableIdtokenApi2 pulumi.BoolPtrInput `pulumi:"enableIdtokenApi2"`
	// Indicates whether to use the older v2 legacy logs search.
	EnableLegacyLogsSearchV2 pulumi.BoolPtrInput `pulumi:"enableLegacyLogsSearchV2"`
	// Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).
	EnableLegacyProfile pulumi.BoolPtrInput `pulumi:"enableLegacyProfile"`
	// Indicates whether advanced API Authorization scenarios are enabled.
	EnablePipeline2 pulumi.BoolPtrInput `pulumi:"enablePipeline2"`
	// Indicates whether the public sign up process shows a `userExists` error if the user already exists.
	EnablePublicSignupUserExistsError pulumi.BoolPtrInput `pulumi:"enablePublicSignupUserExistsError"`
	// Used to allow users to pick which factor to enroll with from the list of available MFA factors.
	MfaShowFactorListOnEnrollment pulumi.BoolPtrInput `pulumi:"mfaShowFactorListOnEnrollment"`
	// Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.
	NoDiscloseEnterpriseConnections pulumi.BoolPtrInput `pulumi:"noDiscloseEnterpriseConnections"`
	// Makes the use of Pushed Authorization Requests mandatory for all clients across the tenant.
	RequirePushedAuthorizationRequests pulumi.BoolPtrInput `pulumi:"requirePushedAuthorizationRequests"`
	// Delete underlying grant when a refresh token is revoked via the Authentication API.
	RevokeRefreshTokenGrant pulumi.BoolPtrInput `pulumi:"revokeRefreshTokenGrant"`
	// Indicates whether to use scope descriptions for consent.
	UseScopeDescriptionsForConsent pulumi.BoolPtrInput `pulumi:"useScopeDescriptionsForConsent"`
}

func (TenantFlagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantFlags)(nil)).Elem()
}

func (i TenantFlagsArgs) ToTenantFlagsOutput() TenantFlagsOutput {
	return i.ToTenantFlagsOutputWithContext(context.Background())
}

func (i TenantFlagsArgs) ToTenantFlagsOutputWithContext(ctx context.Context) TenantFlagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsOutput)
}

func (i TenantFlagsArgs) ToOutput(ctx context.Context) pulumix.Output[TenantFlags] {
	return pulumix.Output[TenantFlags]{
		OutputState: i.ToTenantFlagsOutputWithContext(ctx).OutputState,
	}
}

func (i TenantFlagsArgs) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return i.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (i TenantFlagsArgs) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsOutput).ToTenantFlagsPtrOutputWithContext(ctx)
}

// TenantFlagsPtrInput is an input type that accepts TenantFlagsArgs, TenantFlagsPtr and TenantFlagsPtrOutput values.
// You can construct a concrete instance of `TenantFlagsPtrInput` via:
//
//	        TenantFlagsArgs{...}
//
//	or:
//
//	        nil
type TenantFlagsPtrInput interface {
	pulumi.Input

	ToTenantFlagsPtrOutput() TenantFlagsPtrOutput
	ToTenantFlagsPtrOutputWithContext(context.Context) TenantFlagsPtrOutput
}

type tenantFlagsPtrType TenantFlagsArgs

func TenantFlagsPtr(v *TenantFlagsArgs) TenantFlagsPtrInput {
	return (*tenantFlagsPtrType)(v)
}

func (*tenantFlagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantFlags)(nil)).Elem()
}

func (i *tenantFlagsPtrType) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return i.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (i *tenantFlagsPtrType) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantFlagsPtrOutput)
}

func (i *tenantFlagsPtrType) ToOutput(ctx context.Context) pulumix.Output[*TenantFlags] {
	return pulumix.Output[*TenantFlags]{
		OutputState: i.ToTenantFlagsPtrOutputWithContext(ctx).OutputState,
	}
}

type TenantFlagsOutput struct{ *pulumi.OutputState }

func (TenantFlagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantFlags)(nil)).Elem()
}

func (o TenantFlagsOutput) ToTenantFlagsOutput() TenantFlagsOutput {
	return o
}

func (o TenantFlagsOutput) ToTenantFlagsOutputWithContext(ctx context.Context) TenantFlagsOutput {
	return o
}

func (o TenantFlagsOutput) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return o.ToTenantFlagsPtrOutputWithContext(context.Background())
}

func (o TenantFlagsOutput) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantFlags) *TenantFlags {
		return &v
	}).(TenantFlagsPtrOutput)
}

func (o TenantFlagsOutput) ToOutput(ctx context.Context) pulumix.Output[TenantFlags] {
	return pulumix.Output[TenantFlags]{
		OutputState: o.OutputState,
	}
}

// Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).
func (o TenantFlagsOutput) AllowLegacyDelegationGrantTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.AllowLegacyDelegationGrantTypes }).(pulumi.BoolPtrOutput)
}

// Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).
func (o TenantFlagsOutput) AllowLegacyRoGrantTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.AllowLegacyRoGrantTypes }).(pulumi.BoolPtrOutput)
}

// If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.
func (o TenantFlagsOutput) AllowLegacyTokeninfoEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.AllowLegacyTokeninfoEndpoint }).(pulumi.BoolPtrOutput)
}

// Enables new insights activity page view.
func (o TenantFlagsOutput) DashboardInsightsView() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DashboardInsightsView }).(pulumi.BoolPtrOutput)
}

// Enables beta access to log streaming changes.
func (o TenantFlagsOutput) DashboardLogStreamsNext() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DashboardLogStreamsNext }).(pulumi.BoolPtrOutput)
}

// Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.
func (o TenantFlagsOutput) DisableClickjackProtectionHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DisableClickjackProtectionHeaders }).(pulumi.BoolPtrOutput)
}

// Disables SAML fields map fix for bad mappings with repeated attributes.
func (o TenantFlagsOutput) DisableFieldsMapFix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DisableFieldsMapFix }).(pulumi.BoolPtrOutput)
}

// If true, SMS phone numbers will not be obfuscated in Management API GET calls.
func (o TenantFlagsOutput) DisableManagementApiSmsObfuscation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.DisableManagementApiSmsObfuscation }).(pulumi.BoolPtrOutput)
}

// If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.
func (o TenantFlagsOutput) EnableAdfsWaadEmailVerification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableAdfsWaadEmailVerification }).(pulumi.BoolPtrOutput)
}

// Indicates whether the APIs section is enabled for the tenant.
func (o TenantFlagsOutput) EnableApisSection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableApisSection }).(pulumi.BoolPtrOutput)
}

// Indicates whether all current connections should be enabled when a new client is created.
func (o TenantFlagsOutput) EnableClientConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableClientConnections }).(pulumi.BoolPtrOutput)
}

// Indicates whether the tenant allows custom domains in emails. Before enabling this flag, you must have a custom domain with status: `ready`.
func (o TenantFlagsOutput) EnableCustomDomainInEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableCustomDomainInEmails }).(pulumi.BoolPtrOutput)
}

// Indicates whether the tenant allows dynamic client registration.
func (o TenantFlagsOutput) EnableDynamicClientRegistration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableDynamicClientRegistration }).(pulumi.BoolPtrOutput)
}

// Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).
func (o TenantFlagsOutput) EnableIdtokenApi2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableIdtokenApi2 }).(pulumi.BoolPtrOutput)
}

// Indicates whether to use the older v2 legacy logs search.
func (o TenantFlagsOutput) EnableLegacyLogsSearchV2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableLegacyLogsSearchV2 }).(pulumi.BoolPtrOutput)
}

// Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).
func (o TenantFlagsOutput) EnableLegacyProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnableLegacyProfile }).(pulumi.BoolPtrOutput)
}

// Indicates whether advanced API Authorization scenarios are enabled.
func (o TenantFlagsOutput) EnablePipeline2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnablePipeline2 }).(pulumi.BoolPtrOutput)
}

// Indicates whether the public sign up process shows a `userExists` error if the user already exists.
func (o TenantFlagsOutput) EnablePublicSignupUserExistsError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.EnablePublicSignupUserExistsError }).(pulumi.BoolPtrOutput)
}

// Used to allow users to pick which factor to enroll with from the list of available MFA factors.
func (o TenantFlagsOutput) MfaShowFactorListOnEnrollment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.MfaShowFactorListOnEnrollment }).(pulumi.BoolPtrOutput)
}

// Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.
func (o TenantFlagsOutput) NoDiscloseEnterpriseConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.NoDiscloseEnterpriseConnections }).(pulumi.BoolPtrOutput)
}

// Makes the use of Pushed Authorization Requests mandatory for all clients across the tenant.
func (o TenantFlagsOutput) RequirePushedAuthorizationRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.RequirePushedAuthorizationRequests }).(pulumi.BoolPtrOutput)
}

// Delete underlying grant when a refresh token is revoked via the Authentication API.
func (o TenantFlagsOutput) RevokeRefreshTokenGrant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.RevokeRefreshTokenGrant }).(pulumi.BoolPtrOutput)
}

// Indicates whether to use scope descriptions for consent.
func (o TenantFlagsOutput) UseScopeDescriptionsForConsent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TenantFlags) *bool { return v.UseScopeDescriptionsForConsent }).(pulumi.BoolPtrOutput)
}

type TenantFlagsPtrOutput struct{ *pulumi.OutputState }

func (TenantFlagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantFlags)(nil)).Elem()
}

func (o TenantFlagsPtrOutput) ToTenantFlagsPtrOutput() TenantFlagsPtrOutput {
	return o
}

func (o TenantFlagsPtrOutput) ToTenantFlagsPtrOutputWithContext(ctx context.Context) TenantFlagsPtrOutput {
	return o
}

func (o TenantFlagsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TenantFlags] {
	return pulumix.Output[*TenantFlags]{
		OutputState: o.OutputState,
	}
}

func (o TenantFlagsPtrOutput) Elem() TenantFlagsOutput {
	return o.ApplyT(func(v *TenantFlags) TenantFlags {
		if v != nil {
			return *v
		}
		var ret TenantFlags
		return ret
	}).(TenantFlagsOutput)
}

// Whether the legacy delegation endpoint will be enabled for your account (true) or not available (false).
func (o TenantFlagsPtrOutput) AllowLegacyDelegationGrantTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.AllowLegacyDelegationGrantTypes
	}).(pulumi.BoolPtrOutput)
}

// Whether the legacy `auth/ro` endpoint (used with resource owner password and passwordless features) will be enabled for your account (true) or not available (false).
func (o TenantFlagsPtrOutput) AllowLegacyRoGrantTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.AllowLegacyRoGrantTypes
	}).(pulumi.BoolPtrOutput)
}

// If enabled, customers can use Tokeninfo Endpoint, otherwise they can not use it.
func (o TenantFlagsPtrOutput) AllowLegacyTokeninfoEndpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.AllowLegacyTokeninfoEndpoint
	}).(pulumi.BoolPtrOutput)
}

// Enables new insights activity page view.
func (o TenantFlagsPtrOutput) DashboardInsightsView() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DashboardInsightsView
	}).(pulumi.BoolPtrOutput)
}

// Enables beta access to log streaming changes.
func (o TenantFlagsPtrOutput) DashboardLogStreamsNext() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DashboardLogStreamsNext
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether classic Universal Login prompts include additional security headers to prevent clickjacking.
func (o TenantFlagsPtrOutput) DisableClickjackProtectionHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DisableClickjackProtectionHeaders
	}).(pulumi.BoolPtrOutput)
}

// Disables SAML fields map fix for bad mappings with repeated attributes.
func (o TenantFlagsPtrOutput) DisableFieldsMapFix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DisableFieldsMapFix
	}).(pulumi.BoolPtrOutput)
}

// If true, SMS phone numbers will not be obfuscated in Management API GET calls.
func (o TenantFlagsPtrOutput) DisableManagementApiSmsObfuscation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.DisableManagementApiSmsObfuscation
	}).(pulumi.BoolPtrOutput)
}

// If enabled, users will be presented with an email verification prompt during their first login when using Azure AD or ADFS connections.
func (o TenantFlagsPtrOutput) EnableAdfsWaadEmailVerification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableAdfsWaadEmailVerification
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the APIs section is enabled for the tenant.
func (o TenantFlagsPtrOutput) EnableApisSection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableApisSection
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether all current connections should be enabled when a new client is created.
func (o TenantFlagsPtrOutput) EnableClientConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableClientConnections
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the tenant allows custom domains in emails. Before enabling this flag, you must have a custom domain with status: `ready`.
func (o TenantFlagsPtrOutput) EnableCustomDomainInEmails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCustomDomainInEmails
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the tenant allows dynamic client registration.
func (o TenantFlagsPtrOutput) EnableDynamicClientRegistration() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDynamicClientRegistration
	}).(pulumi.BoolPtrOutput)
}

// Whether ID tokens can be used to authorize some types of requests to API v2 (true) or not (false).
func (o TenantFlagsPtrOutput) EnableIdtokenApi2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIdtokenApi2
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to use the older v2 legacy logs search.
func (o TenantFlagsPtrOutput) EnableLegacyLogsSearchV2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableLegacyLogsSearchV2
	}).(pulumi.BoolPtrOutput)
}

// Whether ID tokens and the userinfo endpoint includes a complete user profile (true) or only OpenID Connect claims (false).
func (o TenantFlagsPtrOutput) EnableLegacyProfile() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnableLegacyProfile
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether advanced API Authorization scenarios are enabled.
func (o TenantFlagsPtrOutput) EnablePipeline2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePipeline2
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether the public sign up process shows a `userExists` error if the user already exists.
func (o TenantFlagsPtrOutput) EnablePublicSignupUserExistsError() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.EnablePublicSignupUserExistsError
	}).(pulumi.BoolPtrOutput)
}

// Used to allow users to pick which factor to enroll with from the list of available MFA factors.
func (o TenantFlagsPtrOutput) MfaShowFactorListOnEnrollment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.MfaShowFactorListOnEnrollment
	}).(pulumi.BoolPtrOutput)
}

// Do not Publish Enterprise Connections Information with IdP domains on the lock configuration file.
func (o TenantFlagsPtrOutput) NoDiscloseEnterpriseConnections() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.NoDiscloseEnterpriseConnections
	}).(pulumi.BoolPtrOutput)
}

// Makes the use of Pushed Authorization Requests mandatory for all clients across the tenant.
func (o TenantFlagsPtrOutput) RequirePushedAuthorizationRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.RequirePushedAuthorizationRequests
	}).(pulumi.BoolPtrOutput)
}

// Delete underlying grant when a refresh token is revoked via the Authentication API.
func (o TenantFlagsPtrOutput) RevokeRefreshTokenGrant() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.RevokeRefreshTokenGrant
	}).(pulumi.BoolPtrOutput)
}

// Indicates whether to use scope descriptions for consent.
func (o TenantFlagsPtrOutput) UseScopeDescriptionsForConsent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantFlags) *bool {
		if v == nil {
			return nil
		}
		return v.UseScopeDescriptionsForConsent
	}).(pulumi.BoolPtrOutput)
}

type TenantSessionCookie struct {
	// Behavior of tenant session cookie. Accepts either "persistent" or "non-persistent".
	Mode *string `pulumi:"mode"`
}

// TenantSessionCookieInput is an input type that accepts TenantSessionCookieArgs and TenantSessionCookieOutput values.
// You can construct a concrete instance of `TenantSessionCookieInput` via:
//
//	TenantSessionCookieArgs{...}
type TenantSessionCookieInput interface {
	pulumi.Input

	ToTenantSessionCookieOutput() TenantSessionCookieOutput
	ToTenantSessionCookieOutputWithContext(context.Context) TenantSessionCookieOutput
}

type TenantSessionCookieArgs struct {
	// Behavior of tenant session cookie. Accepts either "persistent" or "non-persistent".
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (TenantSessionCookieArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantSessionCookie)(nil)).Elem()
}

func (i TenantSessionCookieArgs) ToTenantSessionCookieOutput() TenantSessionCookieOutput {
	return i.ToTenantSessionCookieOutputWithContext(context.Background())
}

func (i TenantSessionCookieArgs) ToTenantSessionCookieOutputWithContext(ctx context.Context) TenantSessionCookieOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantSessionCookieOutput)
}

func (i TenantSessionCookieArgs) ToOutput(ctx context.Context) pulumix.Output[TenantSessionCookie] {
	return pulumix.Output[TenantSessionCookie]{
		OutputState: i.ToTenantSessionCookieOutputWithContext(ctx).OutputState,
	}
}

func (i TenantSessionCookieArgs) ToTenantSessionCookiePtrOutput() TenantSessionCookiePtrOutput {
	return i.ToTenantSessionCookiePtrOutputWithContext(context.Background())
}

func (i TenantSessionCookieArgs) ToTenantSessionCookiePtrOutputWithContext(ctx context.Context) TenantSessionCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantSessionCookieOutput).ToTenantSessionCookiePtrOutputWithContext(ctx)
}

// TenantSessionCookiePtrInput is an input type that accepts TenantSessionCookieArgs, TenantSessionCookiePtr and TenantSessionCookiePtrOutput values.
// You can construct a concrete instance of `TenantSessionCookiePtrInput` via:
//
//	        TenantSessionCookieArgs{...}
//
//	or:
//
//	        nil
type TenantSessionCookiePtrInput interface {
	pulumi.Input

	ToTenantSessionCookiePtrOutput() TenantSessionCookiePtrOutput
	ToTenantSessionCookiePtrOutputWithContext(context.Context) TenantSessionCookiePtrOutput
}

type tenantSessionCookiePtrType TenantSessionCookieArgs

func TenantSessionCookiePtr(v *TenantSessionCookieArgs) TenantSessionCookiePtrInput {
	return (*tenantSessionCookiePtrType)(v)
}

func (*tenantSessionCookiePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantSessionCookie)(nil)).Elem()
}

func (i *tenantSessionCookiePtrType) ToTenantSessionCookiePtrOutput() TenantSessionCookiePtrOutput {
	return i.ToTenantSessionCookiePtrOutputWithContext(context.Background())
}

func (i *tenantSessionCookiePtrType) ToTenantSessionCookiePtrOutputWithContext(ctx context.Context) TenantSessionCookiePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantSessionCookiePtrOutput)
}

func (i *tenantSessionCookiePtrType) ToOutput(ctx context.Context) pulumix.Output[*TenantSessionCookie] {
	return pulumix.Output[*TenantSessionCookie]{
		OutputState: i.ToTenantSessionCookiePtrOutputWithContext(ctx).OutputState,
	}
}

type TenantSessionCookieOutput struct{ *pulumi.OutputState }

func (TenantSessionCookieOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantSessionCookie)(nil)).Elem()
}

func (o TenantSessionCookieOutput) ToTenantSessionCookieOutput() TenantSessionCookieOutput {
	return o
}

func (o TenantSessionCookieOutput) ToTenantSessionCookieOutputWithContext(ctx context.Context) TenantSessionCookieOutput {
	return o
}

func (o TenantSessionCookieOutput) ToTenantSessionCookiePtrOutput() TenantSessionCookiePtrOutput {
	return o.ToTenantSessionCookiePtrOutputWithContext(context.Background())
}

func (o TenantSessionCookieOutput) ToTenantSessionCookiePtrOutputWithContext(ctx context.Context) TenantSessionCookiePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantSessionCookie) *TenantSessionCookie {
		return &v
	}).(TenantSessionCookiePtrOutput)
}

func (o TenantSessionCookieOutput) ToOutput(ctx context.Context) pulumix.Output[TenantSessionCookie] {
	return pulumix.Output[TenantSessionCookie]{
		OutputState: o.OutputState,
	}
}

// Behavior of tenant session cookie. Accepts either "persistent" or "non-persistent".
func (o TenantSessionCookieOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TenantSessionCookie) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type TenantSessionCookiePtrOutput struct{ *pulumi.OutputState }

func (TenantSessionCookiePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantSessionCookie)(nil)).Elem()
}

func (o TenantSessionCookiePtrOutput) ToTenantSessionCookiePtrOutput() TenantSessionCookiePtrOutput {
	return o
}

func (o TenantSessionCookiePtrOutput) ToTenantSessionCookiePtrOutputWithContext(ctx context.Context) TenantSessionCookiePtrOutput {
	return o
}

func (o TenantSessionCookiePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TenantSessionCookie] {
	return pulumix.Output[*TenantSessionCookie]{
		OutputState: o.OutputState,
	}
}

func (o TenantSessionCookiePtrOutput) Elem() TenantSessionCookieOutput {
	return o.ApplyT(func(v *TenantSessionCookie) TenantSessionCookie {
		if v != nil {
			return *v
		}
		var ret TenantSessionCookie
		return ret
	}).(TenantSessionCookieOutput)
}

// Behavior of tenant session cookie. Accepts either "persistent" or "non-persistent".
func (o TenantSessionCookiePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TenantSessionCookie) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type TenantSessions struct {
	// When active, users will be presented with a consent prompt to confirm the logout request if the request is not trustworthy. Turn off the consent prompt to bypass user confirmation.
	OidcLogoutPromptEnabled bool `pulumi:"oidcLogoutPromptEnabled"`
}

// TenantSessionsInput is an input type that accepts TenantSessionsArgs and TenantSessionsOutput values.
// You can construct a concrete instance of `TenantSessionsInput` via:
//
//	TenantSessionsArgs{...}
type TenantSessionsInput interface {
	pulumi.Input

	ToTenantSessionsOutput() TenantSessionsOutput
	ToTenantSessionsOutputWithContext(context.Context) TenantSessionsOutput
}

type TenantSessionsArgs struct {
	// When active, users will be presented with a consent prompt to confirm the logout request if the request is not trustworthy. Turn off the consent prompt to bypass user confirmation.
	OidcLogoutPromptEnabled pulumi.BoolInput `pulumi:"oidcLogoutPromptEnabled"`
}

func (TenantSessionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantSessions)(nil)).Elem()
}

func (i TenantSessionsArgs) ToTenantSessionsOutput() TenantSessionsOutput {
	return i.ToTenantSessionsOutputWithContext(context.Background())
}

func (i TenantSessionsArgs) ToTenantSessionsOutputWithContext(ctx context.Context) TenantSessionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantSessionsOutput)
}

func (i TenantSessionsArgs) ToOutput(ctx context.Context) pulumix.Output[TenantSessions] {
	return pulumix.Output[TenantSessions]{
		OutputState: i.ToTenantSessionsOutputWithContext(ctx).OutputState,
	}
}

func (i TenantSessionsArgs) ToTenantSessionsPtrOutput() TenantSessionsPtrOutput {
	return i.ToTenantSessionsPtrOutputWithContext(context.Background())
}

func (i TenantSessionsArgs) ToTenantSessionsPtrOutputWithContext(ctx context.Context) TenantSessionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantSessionsOutput).ToTenantSessionsPtrOutputWithContext(ctx)
}

// TenantSessionsPtrInput is an input type that accepts TenantSessionsArgs, TenantSessionsPtr and TenantSessionsPtrOutput values.
// You can construct a concrete instance of `TenantSessionsPtrInput` via:
//
//	        TenantSessionsArgs{...}
//
//	or:
//
//	        nil
type TenantSessionsPtrInput interface {
	pulumi.Input

	ToTenantSessionsPtrOutput() TenantSessionsPtrOutput
	ToTenantSessionsPtrOutputWithContext(context.Context) TenantSessionsPtrOutput
}

type tenantSessionsPtrType TenantSessionsArgs

func TenantSessionsPtr(v *TenantSessionsArgs) TenantSessionsPtrInput {
	return (*tenantSessionsPtrType)(v)
}

func (*tenantSessionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantSessions)(nil)).Elem()
}

func (i *tenantSessionsPtrType) ToTenantSessionsPtrOutput() TenantSessionsPtrOutput {
	return i.ToTenantSessionsPtrOutputWithContext(context.Background())
}

func (i *tenantSessionsPtrType) ToTenantSessionsPtrOutputWithContext(ctx context.Context) TenantSessionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TenantSessionsPtrOutput)
}

func (i *tenantSessionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*TenantSessions] {
	return pulumix.Output[*TenantSessions]{
		OutputState: i.ToTenantSessionsPtrOutputWithContext(ctx).OutputState,
	}
}

type TenantSessionsOutput struct{ *pulumi.OutputState }

func (TenantSessionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TenantSessions)(nil)).Elem()
}

func (o TenantSessionsOutput) ToTenantSessionsOutput() TenantSessionsOutput {
	return o
}

func (o TenantSessionsOutput) ToTenantSessionsOutputWithContext(ctx context.Context) TenantSessionsOutput {
	return o
}

func (o TenantSessionsOutput) ToTenantSessionsPtrOutput() TenantSessionsPtrOutput {
	return o.ToTenantSessionsPtrOutputWithContext(context.Background())
}

func (o TenantSessionsOutput) ToTenantSessionsPtrOutputWithContext(ctx context.Context) TenantSessionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TenantSessions) *TenantSessions {
		return &v
	}).(TenantSessionsPtrOutput)
}

func (o TenantSessionsOutput) ToOutput(ctx context.Context) pulumix.Output[TenantSessions] {
	return pulumix.Output[TenantSessions]{
		OutputState: o.OutputState,
	}
}

// When active, users will be presented with a consent prompt to confirm the logout request if the request is not trustworthy. Turn off the consent prompt to bypass user confirmation.
func (o TenantSessionsOutput) OidcLogoutPromptEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v TenantSessions) bool { return v.OidcLogoutPromptEnabled }).(pulumi.BoolOutput)
}

type TenantSessionsPtrOutput struct{ *pulumi.OutputState }

func (TenantSessionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TenantSessions)(nil)).Elem()
}

func (o TenantSessionsPtrOutput) ToTenantSessionsPtrOutput() TenantSessionsPtrOutput {
	return o
}

func (o TenantSessionsPtrOutput) ToTenantSessionsPtrOutputWithContext(ctx context.Context) TenantSessionsPtrOutput {
	return o
}

func (o TenantSessionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TenantSessions] {
	return pulumix.Output[*TenantSessions]{
		OutputState: o.OutputState,
	}
}

func (o TenantSessionsPtrOutput) Elem() TenantSessionsOutput {
	return o.ApplyT(func(v *TenantSessions) TenantSessions {
		if v != nil {
			return *v
		}
		var ret TenantSessions
		return ret
	}).(TenantSessionsOutput)
}

// When active, users will be presented with a consent prompt to confirm the logout request if the request is not trustworthy. Turn off the consent prompt to bypass user confirmation.
func (o TenantSessionsPtrOutput) OidcLogoutPromptEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TenantSessions) *bool {
		if v == nil {
			return nil
		}
		return &v.OidcLogoutPromptEnabled
	}).(pulumi.BoolPtrOutput)
}

type TriggerActionsAction struct {
	// The display name of the action within the flow.
	DisplayName string `pulumi:"displayName"`
	// Action ID.
	Id string `pulumi:"id"`
}

// TriggerActionsActionInput is an input type that accepts TriggerActionsActionArgs and TriggerActionsActionOutput values.
// You can construct a concrete instance of `TriggerActionsActionInput` via:
//
//	TriggerActionsActionArgs{...}
type TriggerActionsActionInput interface {
	pulumi.Input

	ToTriggerActionsActionOutput() TriggerActionsActionOutput
	ToTriggerActionsActionOutputWithContext(context.Context) TriggerActionsActionOutput
}

type TriggerActionsActionArgs struct {
	// The display name of the action within the flow.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Action ID.
	Id pulumi.StringInput `pulumi:"id"`
}

func (TriggerActionsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerActionsAction)(nil)).Elem()
}

func (i TriggerActionsActionArgs) ToTriggerActionsActionOutput() TriggerActionsActionOutput {
	return i.ToTriggerActionsActionOutputWithContext(context.Background())
}

func (i TriggerActionsActionArgs) ToTriggerActionsActionOutputWithContext(ctx context.Context) TriggerActionsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerActionsActionOutput)
}

func (i TriggerActionsActionArgs) ToOutput(ctx context.Context) pulumix.Output[TriggerActionsAction] {
	return pulumix.Output[TriggerActionsAction]{
		OutputState: i.ToTriggerActionsActionOutputWithContext(ctx).OutputState,
	}
}

// TriggerActionsActionArrayInput is an input type that accepts TriggerActionsActionArray and TriggerActionsActionArrayOutput values.
// You can construct a concrete instance of `TriggerActionsActionArrayInput` via:
//
//	TriggerActionsActionArray{ TriggerActionsActionArgs{...} }
type TriggerActionsActionArrayInput interface {
	pulumi.Input

	ToTriggerActionsActionArrayOutput() TriggerActionsActionArrayOutput
	ToTriggerActionsActionArrayOutputWithContext(context.Context) TriggerActionsActionArrayOutput
}

type TriggerActionsActionArray []TriggerActionsActionInput

func (TriggerActionsActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerActionsAction)(nil)).Elem()
}

func (i TriggerActionsActionArray) ToTriggerActionsActionArrayOutput() TriggerActionsActionArrayOutput {
	return i.ToTriggerActionsActionArrayOutputWithContext(context.Background())
}

func (i TriggerActionsActionArray) ToTriggerActionsActionArrayOutputWithContext(ctx context.Context) TriggerActionsActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TriggerActionsActionArrayOutput)
}

func (i TriggerActionsActionArray) ToOutput(ctx context.Context) pulumix.Output[[]TriggerActionsAction] {
	return pulumix.Output[[]TriggerActionsAction]{
		OutputState: i.ToTriggerActionsActionArrayOutputWithContext(ctx).OutputState,
	}
}

type TriggerActionsActionOutput struct{ *pulumi.OutputState }

func (TriggerActionsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TriggerActionsAction)(nil)).Elem()
}

func (o TriggerActionsActionOutput) ToTriggerActionsActionOutput() TriggerActionsActionOutput {
	return o
}

func (o TriggerActionsActionOutput) ToTriggerActionsActionOutputWithContext(ctx context.Context) TriggerActionsActionOutput {
	return o
}

func (o TriggerActionsActionOutput) ToOutput(ctx context.Context) pulumix.Output[TriggerActionsAction] {
	return pulumix.Output[TriggerActionsAction]{
		OutputState: o.OutputState,
	}
}

// The display name of the action within the flow.
func (o TriggerActionsActionOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerActionsAction) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Action ID.
func (o TriggerActionsActionOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v TriggerActionsAction) string { return v.Id }).(pulumi.StringOutput)
}

type TriggerActionsActionArrayOutput struct{ *pulumi.OutputState }

func (TriggerActionsActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TriggerActionsAction)(nil)).Elem()
}

func (o TriggerActionsActionArrayOutput) ToTriggerActionsActionArrayOutput() TriggerActionsActionArrayOutput {
	return o
}

func (o TriggerActionsActionArrayOutput) ToTriggerActionsActionArrayOutputWithContext(ctx context.Context) TriggerActionsActionArrayOutput {
	return o
}

func (o TriggerActionsActionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]TriggerActionsAction] {
	return pulumix.Output[[]TriggerActionsAction]{
		OutputState: o.OutputState,
	}
}

func (o TriggerActionsActionArrayOutput) Index(i pulumi.IntInput) TriggerActionsActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TriggerActionsAction {
		return vs[0].([]TriggerActionsAction)[vs[1].(int)]
	}).(TriggerActionsActionOutput)
}

type UserPermissionsPermission struct {
	// Description of the permission.
	Description *string `pulumi:"description"`
	// Name of permission.
	Name string `pulumi:"name"`
	// Resource server identifier associated with the permission.
	ResourceServerIdentifier string `pulumi:"resourceServerIdentifier"`
	// Name of resource server that the permission is associated with.
	ResourceServerName *string `pulumi:"resourceServerName"`
}

// UserPermissionsPermissionInput is an input type that accepts UserPermissionsPermissionArgs and UserPermissionsPermissionOutput values.
// You can construct a concrete instance of `UserPermissionsPermissionInput` via:
//
//	UserPermissionsPermissionArgs{...}
type UserPermissionsPermissionInput interface {
	pulumi.Input

	ToUserPermissionsPermissionOutput() UserPermissionsPermissionOutput
	ToUserPermissionsPermissionOutputWithContext(context.Context) UserPermissionsPermissionOutput
}

type UserPermissionsPermissionArgs struct {
	// Description of the permission.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Name of permission.
	Name pulumi.StringInput `pulumi:"name"`
	// Resource server identifier associated with the permission.
	ResourceServerIdentifier pulumi.StringInput `pulumi:"resourceServerIdentifier"`
	// Name of resource server that the permission is associated with.
	ResourceServerName pulumi.StringPtrInput `pulumi:"resourceServerName"`
}

func (UserPermissionsPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPermissionsPermission)(nil)).Elem()
}

func (i UserPermissionsPermissionArgs) ToUserPermissionsPermissionOutput() UserPermissionsPermissionOutput {
	return i.ToUserPermissionsPermissionOutputWithContext(context.Background())
}

func (i UserPermissionsPermissionArgs) ToUserPermissionsPermissionOutputWithContext(ctx context.Context) UserPermissionsPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPermissionsPermissionOutput)
}

func (i UserPermissionsPermissionArgs) ToOutput(ctx context.Context) pulumix.Output[UserPermissionsPermission] {
	return pulumix.Output[UserPermissionsPermission]{
		OutputState: i.ToUserPermissionsPermissionOutputWithContext(ctx).OutputState,
	}
}

// UserPermissionsPermissionArrayInput is an input type that accepts UserPermissionsPermissionArray and UserPermissionsPermissionArrayOutput values.
// You can construct a concrete instance of `UserPermissionsPermissionArrayInput` via:
//
//	UserPermissionsPermissionArray{ UserPermissionsPermissionArgs{...} }
type UserPermissionsPermissionArrayInput interface {
	pulumi.Input

	ToUserPermissionsPermissionArrayOutput() UserPermissionsPermissionArrayOutput
	ToUserPermissionsPermissionArrayOutputWithContext(context.Context) UserPermissionsPermissionArrayOutput
}

type UserPermissionsPermissionArray []UserPermissionsPermissionInput

func (UserPermissionsPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPermissionsPermission)(nil)).Elem()
}

func (i UserPermissionsPermissionArray) ToUserPermissionsPermissionArrayOutput() UserPermissionsPermissionArrayOutput {
	return i.ToUserPermissionsPermissionArrayOutputWithContext(context.Background())
}

func (i UserPermissionsPermissionArray) ToUserPermissionsPermissionArrayOutputWithContext(ctx context.Context) UserPermissionsPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPermissionsPermissionArrayOutput)
}

func (i UserPermissionsPermissionArray) ToOutput(ctx context.Context) pulumix.Output[[]UserPermissionsPermission] {
	return pulumix.Output[[]UserPermissionsPermission]{
		OutputState: i.ToUserPermissionsPermissionArrayOutputWithContext(ctx).OutputState,
	}
}

type UserPermissionsPermissionOutput struct{ *pulumi.OutputState }

func (UserPermissionsPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPermissionsPermission)(nil)).Elem()
}

func (o UserPermissionsPermissionOutput) ToUserPermissionsPermissionOutput() UserPermissionsPermissionOutput {
	return o
}

func (o UserPermissionsPermissionOutput) ToUserPermissionsPermissionOutputWithContext(ctx context.Context) UserPermissionsPermissionOutput {
	return o
}

func (o UserPermissionsPermissionOutput) ToOutput(ctx context.Context) pulumix.Output[UserPermissionsPermission] {
	return pulumix.Output[UserPermissionsPermission]{
		OutputState: o.OutputState,
	}
}

// Description of the permission.
func (o UserPermissionsPermissionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPermissionsPermission) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of permission.
func (o UserPermissionsPermissionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserPermissionsPermission) string { return v.Name }).(pulumi.StringOutput)
}

// Resource server identifier associated with the permission.
func (o UserPermissionsPermissionOutput) ResourceServerIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v UserPermissionsPermission) string { return v.ResourceServerIdentifier }).(pulumi.StringOutput)
}

// Name of resource server that the permission is associated with.
func (o UserPermissionsPermissionOutput) ResourceServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPermissionsPermission) *string { return v.ResourceServerName }).(pulumi.StringPtrOutput)
}

type UserPermissionsPermissionArrayOutput struct{ *pulumi.OutputState }

func (UserPermissionsPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPermissionsPermission)(nil)).Elem()
}

func (o UserPermissionsPermissionArrayOutput) ToUserPermissionsPermissionArrayOutput() UserPermissionsPermissionArrayOutput {
	return o
}

func (o UserPermissionsPermissionArrayOutput) ToUserPermissionsPermissionArrayOutputWithContext(ctx context.Context) UserPermissionsPermissionArrayOutput {
	return o
}

func (o UserPermissionsPermissionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]UserPermissionsPermission] {
	return pulumix.Output[[]UserPermissionsPermission]{
		OutputState: o.OutputState,
	}
}

func (o UserPermissionsPermissionArrayOutput) Index(i pulumi.IntInput) UserPermissionsPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPermissionsPermission {
		return vs[0].([]UserPermissionsPermission)[vs[1].(int)]
	}).(UserPermissionsPermissionOutput)
}

type GetAttackProtectionBreachedPasswordDetection struct {
	AdminNotificationFrequencies []string                                                          `pulumi:"adminNotificationFrequencies"`
	Enabled                      bool                                                              `pulumi:"enabled"`
	Method                       string                                                            `pulumi:"method"`
	PreUserRegistrations         []GetAttackProtectionBreachedPasswordDetectionPreUserRegistration `pulumi:"preUserRegistrations"`
	Shields                      []string                                                          `pulumi:"shields"`
}

// GetAttackProtectionBreachedPasswordDetectionInput is an input type that accepts GetAttackProtectionBreachedPasswordDetectionArgs and GetAttackProtectionBreachedPasswordDetectionOutput values.
// You can construct a concrete instance of `GetAttackProtectionBreachedPasswordDetectionInput` via:
//
//	GetAttackProtectionBreachedPasswordDetectionArgs{...}
type GetAttackProtectionBreachedPasswordDetectionInput interface {
	pulumi.Input

	ToGetAttackProtectionBreachedPasswordDetectionOutput() GetAttackProtectionBreachedPasswordDetectionOutput
	ToGetAttackProtectionBreachedPasswordDetectionOutputWithContext(context.Context) GetAttackProtectionBreachedPasswordDetectionOutput
}

type GetAttackProtectionBreachedPasswordDetectionArgs struct {
	AdminNotificationFrequencies pulumi.StringArrayInput                                                   `pulumi:"adminNotificationFrequencies"`
	Enabled                      pulumi.BoolInput                                                          `pulumi:"enabled"`
	Method                       pulumi.StringInput                                                        `pulumi:"method"`
	PreUserRegistrations         GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayInput `pulumi:"preUserRegistrations"`
	Shields                      pulumi.StringArrayInput                                                   `pulumi:"shields"`
}

func (GetAttackProtectionBreachedPasswordDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (i GetAttackProtectionBreachedPasswordDetectionArgs) ToGetAttackProtectionBreachedPasswordDetectionOutput() GetAttackProtectionBreachedPasswordDetectionOutput {
	return i.ToGetAttackProtectionBreachedPasswordDetectionOutputWithContext(context.Background())
}

func (i GetAttackProtectionBreachedPasswordDetectionArgs) ToGetAttackProtectionBreachedPasswordDetectionOutputWithContext(ctx context.Context) GetAttackProtectionBreachedPasswordDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionBreachedPasswordDetectionOutput)
}

func (i GetAttackProtectionBreachedPasswordDetectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionBreachedPasswordDetection] {
	return pulumix.Output[GetAttackProtectionBreachedPasswordDetection]{
		OutputState: i.ToGetAttackProtectionBreachedPasswordDetectionOutputWithContext(ctx).OutputState,
	}
}

// GetAttackProtectionBreachedPasswordDetectionArrayInput is an input type that accepts GetAttackProtectionBreachedPasswordDetectionArray and GetAttackProtectionBreachedPasswordDetectionArrayOutput values.
// You can construct a concrete instance of `GetAttackProtectionBreachedPasswordDetectionArrayInput` via:
//
//	GetAttackProtectionBreachedPasswordDetectionArray{ GetAttackProtectionBreachedPasswordDetectionArgs{...} }
type GetAttackProtectionBreachedPasswordDetectionArrayInput interface {
	pulumi.Input

	ToGetAttackProtectionBreachedPasswordDetectionArrayOutput() GetAttackProtectionBreachedPasswordDetectionArrayOutput
	ToGetAttackProtectionBreachedPasswordDetectionArrayOutputWithContext(context.Context) GetAttackProtectionBreachedPasswordDetectionArrayOutput
}

type GetAttackProtectionBreachedPasswordDetectionArray []GetAttackProtectionBreachedPasswordDetectionInput

func (GetAttackProtectionBreachedPasswordDetectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (i GetAttackProtectionBreachedPasswordDetectionArray) ToGetAttackProtectionBreachedPasswordDetectionArrayOutput() GetAttackProtectionBreachedPasswordDetectionArrayOutput {
	return i.ToGetAttackProtectionBreachedPasswordDetectionArrayOutputWithContext(context.Background())
}

func (i GetAttackProtectionBreachedPasswordDetectionArray) ToGetAttackProtectionBreachedPasswordDetectionArrayOutputWithContext(ctx context.Context) GetAttackProtectionBreachedPasswordDetectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionBreachedPasswordDetectionArrayOutput)
}

func (i GetAttackProtectionBreachedPasswordDetectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionBreachedPasswordDetection] {
	return pulumix.Output[[]GetAttackProtectionBreachedPasswordDetection]{
		OutputState: i.ToGetAttackProtectionBreachedPasswordDetectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAttackProtectionBreachedPasswordDetectionOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionBreachedPasswordDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (o GetAttackProtectionBreachedPasswordDetectionOutput) ToGetAttackProtectionBreachedPasswordDetectionOutput() GetAttackProtectionBreachedPasswordDetectionOutput {
	return o
}

func (o GetAttackProtectionBreachedPasswordDetectionOutput) ToGetAttackProtectionBreachedPasswordDetectionOutputWithContext(ctx context.Context) GetAttackProtectionBreachedPasswordDetectionOutput {
	return o
}

func (o GetAttackProtectionBreachedPasswordDetectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionBreachedPasswordDetection] {
	return pulumix.Output[GetAttackProtectionBreachedPasswordDetection]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionBreachedPasswordDetectionOutput) AdminNotificationFrequencies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAttackProtectionBreachedPasswordDetection) []string { return v.AdminNotificationFrequencies }).(pulumi.StringArrayOutput)
}

func (o GetAttackProtectionBreachedPasswordDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAttackProtectionBreachedPasswordDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetAttackProtectionBreachedPasswordDetectionOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackProtectionBreachedPasswordDetection) string { return v.Method }).(pulumi.StringOutput)
}

func (o GetAttackProtectionBreachedPasswordDetectionOutput) PreUserRegistrations() GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput {
	return o.ApplyT(func(v GetAttackProtectionBreachedPasswordDetection) []GetAttackProtectionBreachedPasswordDetectionPreUserRegistration {
		return v.PreUserRegistrations
	}).(GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput)
}

func (o GetAttackProtectionBreachedPasswordDetectionOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAttackProtectionBreachedPasswordDetection) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type GetAttackProtectionBreachedPasswordDetectionArrayOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionBreachedPasswordDetectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionBreachedPasswordDetection)(nil)).Elem()
}

func (o GetAttackProtectionBreachedPasswordDetectionArrayOutput) ToGetAttackProtectionBreachedPasswordDetectionArrayOutput() GetAttackProtectionBreachedPasswordDetectionArrayOutput {
	return o
}

func (o GetAttackProtectionBreachedPasswordDetectionArrayOutput) ToGetAttackProtectionBreachedPasswordDetectionArrayOutputWithContext(ctx context.Context) GetAttackProtectionBreachedPasswordDetectionArrayOutput {
	return o
}

func (o GetAttackProtectionBreachedPasswordDetectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionBreachedPasswordDetection] {
	return pulumix.Output[[]GetAttackProtectionBreachedPasswordDetection]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionBreachedPasswordDetectionArrayOutput) Index(i pulumi.IntInput) GetAttackProtectionBreachedPasswordDetectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttackProtectionBreachedPasswordDetection {
		return vs[0].([]GetAttackProtectionBreachedPasswordDetection)[vs[1].(int)]
	}).(GetAttackProtectionBreachedPasswordDetectionOutput)
}

type GetAttackProtectionBreachedPasswordDetectionPreUserRegistration struct {
	Shields []string `pulumi:"shields"`
}

// GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationInput is an input type that accepts GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs and GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput values.
// You can construct a concrete instance of `GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationInput` via:
//
//	GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{...}
type GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationInput interface {
	pulumi.Input

	ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput() GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput
	ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(context.Context) GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput
}

type GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs struct {
	Shields pulumi.StringArrayInput `pulumi:"shields"`
}

func (GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (i GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput() GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return i.ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(context.Background())
}

func (i GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(ctx context.Context) GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput)
}

func (i GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionBreachedPasswordDetectionPreUserRegistration] {
	return pulumix.Output[GetAttackProtectionBreachedPasswordDetectionPreUserRegistration]{
		OutputState: i.ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(ctx).OutputState,
	}
}

// GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayInput is an input type that accepts GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArray and GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput values.
// You can construct a concrete instance of `GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayInput` via:
//
//	GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArray{ GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{...} }
type GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayInput interface {
	pulumi.Input

	ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput() GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput
	ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutputWithContext(context.Context) GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput
}

type GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArray []GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationInput

func (GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (i GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArray) ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput() GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput {
	return i.ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutputWithContext(context.Background())
}

func (i GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArray) ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutputWithContext(ctx context.Context) GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput)
}

func (i GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionBreachedPasswordDetectionPreUserRegistration] {
	return pulumix.Output[[]GetAttackProtectionBreachedPasswordDetectionPreUserRegistration]{
		OutputState: i.ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (o GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput() GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return o
}

func (o GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutputWithContext(ctx context.Context) GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return o
}

func (o GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionBreachedPasswordDetectionPreUserRegistration] {
	return pulumix.Output[GetAttackProtectionBreachedPasswordDetectionPreUserRegistration]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAttackProtectionBreachedPasswordDetectionPreUserRegistration) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionBreachedPasswordDetectionPreUserRegistration)(nil)).Elem()
}

func (o GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput) ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput() GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput {
	return o
}

func (o GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput) ToGetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutputWithContext(ctx context.Context) GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput {
	return o
}

func (o GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionBreachedPasswordDetectionPreUserRegistration] {
	return pulumix.Output[[]GetAttackProtectionBreachedPasswordDetectionPreUserRegistration]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput) Index(i pulumi.IntInput) GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttackProtectionBreachedPasswordDetectionPreUserRegistration {
		return vs[0].([]GetAttackProtectionBreachedPasswordDetectionPreUserRegistration)[vs[1].(int)]
	}).(GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput)
}

type GetAttackProtectionBruteForceProtection struct {
	Allowlists  []string `pulumi:"allowlists"`
	Enabled     bool     `pulumi:"enabled"`
	MaxAttempts int      `pulumi:"maxAttempts"`
	Mode        string   `pulumi:"mode"`
	Shields     []string `pulumi:"shields"`
}

// GetAttackProtectionBruteForceProtectionInput is an input type that accepts GetAttackProtectionBruteForceProtectionArgs and GetAttackProtectionBruteForceProtectionOutput values.
// You can construct a concrete instance of `GetAttackProtectionBruteForceProtectionInput` via:
//
//	GetAttackProtectionBruteForceProtectionArgs{...}
type GetAttackProtectionBruteForceProtectionInput interface {
	pulumi.Input

	ToGetAttackProtectionBruteForceProtectionOutput() GetAttackProtectionBruteForceProtectionOutput
	ToGetAttackProtectionBruteForceProtectionOutputWithContext(context.Context) GetAttackProtectionBruteForceProtectionOutput
}

type GetAttackProtectionBruteForceProtectionArgs struct {
	Allowlists  pulumi.StringArrayInput `pulumi:"allowlists"`
	Enabled     pulumi.BoolInput        `pulumi:"enabled"`
	MaxAttempts pulumi.IntInput         `pulumi:"maxAttempts"`
	Mode        pulumi.StringInput      `pulumi:"mode"`
	Shields     pulumi.StringArrayInput `pulumi:"shields"`
}

func (GetAttackProtectionBruteForceProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionBruteForceProtection)(nil)).Elem()
}

func (i GetAttackProtectionBruteForceProtectionArgs) ToGetAttackProtectionBruteForceProtectionOutput() GetAttackProtectionBruteForceProtectionOutput {
	return i.ToGetAttackProtectionBruteForceProtectionOutputWithContext(context.Background())
}

func (i GetAttackProtectionBruteForceProtectionArgs) ToGetAttackProtectionBruteForceProtectionOutputWithContext(ctx context.Context) GetAttackProtectionBruteForceProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionBruteForceProtectionOutput)
}

func (i GetAttackProtectionBruteForceProtectionArgs) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionBruteForceProtection] {
	return pulumix.Output[GetAttackProtectionBruteForceProtection]{
		OutputState: i.ToGetAttackProtectionBruteForceProtectionOutputWithContext(ctx).OutputState,
	}
}

// GetAttackProtectionBruteForceProtectionArrayInput is an input type that accepts GetAttackProtectionBruteForceProtectionArray and GetAttackProtectionBruteForceProtectionArrayOutput values.
// You can construct a concrete instance of `GetAttackProtectionBruteForceProtectionArrayInput` via:
//
//	GetAttackProtectionBruteForceProtectionArray{ GetAttackProtectionBruteForceProtectionArgs{...} }
type GetAttackProtectionBruteForceProtectionArrayInput interface {
	pulumi.Input

	ToGetAttackProtectionBruteForceProtectionArrayOutput() GetAttackProtectionBruteForceProtectionArrayOutput
	ToGetAttackProtectionBruteForceProtectionArrayOutputWithContext(context.Context) GetAttackProtectionBruteForceProtectionArrayOutput
}

type GetAttackProtectionBruteForceProtectionArray []GetAttackProtectionBruteForceProtectionInput

func (GetAttackProtectionBruteForceProtectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionBruteForceProtection)(nil)).Elem()
}

func (i GetAttackProtectionBruteForceProtectionArray) ToGetAttackProtectionBruteForceProtectionArrayOutput() GetAttackProtectionBruteForceProtectionArrayOutput {
	return i.ToGetAttackProtectionBruteForceProtectionArrayOutputWithContext(context.Background())
}

func (i GetAttackProtectionBruteForceProtectionArray) ToGetAttackProtectionBruteForceProtectionArrayOutputWithContext(ctx context.Context) GetAttackProtectionBruteForceProtectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionBruteForceProtectionArrayOutput)
}

func (i GetAttackProtectionBruteForceProtectionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionBruteForceProtection] {
	return pulumix.Output[[]GetAttackProtectionBruteForceProtection]{
		OutputState: i.ToGetAttackProtectionBruteForceProtectionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAttackProtectionBruteForceProtectionOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionBruteForceProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionBruteForceProtection)(nil)).Elem()
}

func (o GetAttackProtectionBruteForceProtectionOutput) ToGetAttackProtectionBruteForceProtectionOutput() GetAttackProtectionBruteForceProtectionOutput {
	return o
}

func (o GetAttackProtectionBruteForceProtectionOutput) ToGetAttackProtectionBruteForceProtectionOutputWithContext(ctx context.Context) GetAttackProtectionBruteForceProtectionOutput {
	return o
}

func (o GetAttackProtectionBruteForceProtectionOutput) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionBruteForceProtection] {
	return pulumix.Output[GetAttackProtectionBruteForceProtection]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionBruteForceProtectionOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAttackProtectionBruteForceProtection) []string { return v.Allowlists }).(pulumi.StringArrayOutput)
}

func (o GetAttackProtectionBruteForceProtectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAttackProtectionBruteForceProtection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetAttackProtectionBruteForceProtectionOutput) MaxAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackProtectionBruteForceProtection) int { return v.MaxAttempts }).(pulumi.IntOutput)
}

func (o GetAttackProtectionBruteForceProtectionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackProtectionBruteForceProtection) string { return v.Mode }).(pulumi.StringOutput)
}

func (o GetAttackProtectionBruteForceProtectionOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAttackProtectionBruteForceProtection) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type GetAttackProtectionBruteForceProtectionArrayOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionBruteForceProtectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionBruteForceProtection)(nil)).Elem()
}

func (o GetAttackProtectionBruteForceProtectionArrayOutput) ToGetAttackProtectionBruteForceProtectionArrayOutput() GetAttackProtectionBruteForceProtectionArrayOutput {
	return o
}

func (o GetAttackProtectionBruteForceProtectionArrayOutput) ToGetAttackProtectionBruteForceProtectionArrayOutputWithContext(ctx context.Context) GetAttackProtectionBruteForceProtectionArrayOutput {
	return o
}

func (o GetAttackProtectionBruteForceProtectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionBruteForceProtection] {
	return pulumix.Output[[]GetAttackProtectionBruteForceProtection]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionBruteForceProtectionArrayOutput) Index(i pulumi.IntInput) GetAttackProtectionBruteForceProtectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttackProtectionBruteForceProtection {
		return vs[0].([]GetAttackProtectionBruteForceProtection)[vs[1].(int)]
	}).(GetAttackProtectionBruteForceProtectionOutput)
}

type GetAttackProtectionSuspiciousIpThrottling struct {
	Allowlists           []string                                                       `pulumi:"allowlists"`
	Enabled              bool                                                           `pulumi:"enabled"`
	PreLogins            []GetAttackProtectionSuspiciousIpThrottlingPreLogin            `pulumi:"preLogins"`
	PreUserRegistrations []GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration `pulumi:"preUserRegistrations"`
	Shields              []string                                                       `pulumi:"shields"`
}

// GetAttackProtectionSuspiciousIpThrottlingInput is an input type that accepts GetAttackProtectionSuspiciousIpThrottlingArgs and GetAttackProtectionSuspiciousIpThrottlingOutput values.
// You can construct a concrete instance of `GetAttackProtectionSuspiciousIpThrottlingInput` via:
//
//	GetAttackProtectionSuspiciousIpThrottlingArgs{...}
type GetAttackProtectionSuspiciousIpThrottlingInput interface {
	pulumi.Input

	ToGetAttackProtectionSuspiciousIpThrottlingOutput() GetAttackProtectionSuspiciousIpThrottlingOutput
	ToGetAttackProtectionSuspiciousIpThrottlingOutputWithContext(context.Context) GetAttackProtectionSuspiciousIpThrottlingOutput
}

type GetAttackProtectionSuspiciousIpThrottlingArgs struct {
	Allowlists           pulumi.StringArrayInput                                                `pulumi:"allowlists"`
	Enabled              pulumi.BoolInput                                                       `pulumi:"enabled"`
	PreLogins            GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayInput            `pulumi:"preLogins"`
	PreUserRegistrations GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayInput `pulumi:"preUserRegistrations"`
	Shields              pulumi.StringArrayInput                                                `pulumi:"shields"`
}

func (GetAttackProtectionSuspiciousIpThrottlingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (i GetAttackProtectionSuspiciousIpThrottlingArgs) ToGetAttackProtectionSuspiciousIpThrottlingOutput() GetAttackProtectionSuspiciousIpThrottlingOutput {
	return i.ToGetAttackProtectionSuspiciousIpThrottlingOutputWithContext(context.Background())
}

func (i GetAttackProtectionSuspiciousIpThrottlingArgs) ToGetAttackProtectionSuspiciousIpThrottlingOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionSuspiciousIpThrottlingOutput)
}

func (i GetAttackProtectionSuspiciousIpThrottlingArgs) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionSuspiciousIpThrottling] {
	return pulumix.Output[GetAttackProtectionSuspiciousIpThrottling]{
		OutputState: i.ToGetAttackProtectionSuspiciousIpThrottlingOutputWithContext(ctx).OutputState,
	}
}

// GetAttackProtectionSuspiciousIpThrottlingArrayInput is an input type that accepts GetAttackProtectionSuspiciousIpThrottlingArray and GetAttackProtectionSuspiciousIpThrottlingArrayOutput values.
// You can construct a concrete instance of `GetAttackProtectionSuspiciousIpThrottlingArrayInput` via:
//
//	GetAttackProtectionSuspiciousIpThrottlingArray{ GetAttackProtectionSuspiciousIpThrottlingArgs{...} }
type GetAttackProtectionSuspiciousIpThrottlingArrayInput interface {
	pulumi.Input

	ToGetAttackProtectionSuspiciousIpThrottlingArrayOutput() GetAttackProtectionSuspiciousIpThrottlingArrayOutput
	ToGetAttackProtectionSuspiciousIpThrottlingArrayOutputWithContext(context.Context) GetAttackProtectionSuspiciousIpThrottlingArrayOutput
}

type GetAttackProtectionSuspiciousIpThrottlingArray []GetAttackProtectionSuspiciousIpThrottlingInput

func (GetAttackProtectionSuspiciousIpThrottlingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (i GetAttackProtectionSuspiciousIpThrottlingArray) ToGetAttackProtectionSuspiciousIpThrottlingArrayOutput() GetAttackProtectionSuspiciousIpThrottlingArrayOutput {
	return i.ToGetAttackProtectionSuspiciousIpThrottlingArrayOutputWithContext(context.Background())
}

func (i GetAttackProtectionSuspiciousIpThrottlingArray) ToGetAttackProtectionSuspiciousIpThrottlingArrayOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionSuspiciousIpThrottlingArrayOutput)
}

func (i GetAttackProtectionSuspiciousIpThrottlingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottling] {
	return pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottling]{
		OutputState: i.ToGetAttackProtectionSuspiciousIpThrottlingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAttackProtectionSuspiciousIpThrottlingOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionSuspiciousIpThrottlingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (o GetAttackProtectionSuspiciousIpThrottlingOutput) ToGetAttackProtectionSuspiciousIpThrottlingOutput() GetAttackProtectionSuspiciousIpThrottlingOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingOutput) ToGetAttackProtectionSuspiciousIpThrottlingOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingOutput) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionSuspiciousIpThrottling] {
	return pulumix.Output[GetAttackProtectionSuspiciousIpThrottling]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionSuspiciousIpThrottlingOutput) Allowlists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAttackProtectionSuspiciousIpThrottling) []string { return v.Allowlists }).(pulumi.StringArrayOutput)
}

func (o GetAttackProtectionSuspiciousIpThrottlingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAttackProtectionSuspiciousIpThrottling) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetAttackProtectionSuspiciousIpThrottlingOutput) PreLogins() GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput {
	return o.ApplyT(func(v GetAttackProtectionSuspiciousIpThrottling) []GetAttackProtectionSuspiciousIpThrottlingPreLogin {
		return v.PreLogins
	}).(GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput)
}

func (o GetAttackProtectionSuspiciousIpThrottlingOutput) PreUserRegistrations() GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput {
	return o.ApplyT(func(v GetAttackProtectionSuspiciousIpThrottling) []GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		return v.PreUserRegistrations
	}).(GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput)
}

func (o GetAttackProtectionSuspiciousIpThrottlingOutput) Shields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAttackProtectionSuspiciousIpThrottling) []string { return v.Shields }).(pulumi.StringArrayOutput)
}

type GetAttackProtectionSuspiciousIpThrottlingArrayOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionSuspiciousIpThrottlingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionSuspiciousIpThrottling)(nil)).Elem()
}

func (o GetAttackProtectionSuspiciousIpThrottlingArrayOutput) ToGetAttackProtectionSuspiciousIpThrottlingArrayOutput() GetAttackProtectionSuspiciousIpThrottlingArrayOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingArrayOutput) ToGetAttackProtectionSuspiciousIpThrottlingArrayOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingArrayOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottling] {
	return pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottling]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionSuspiciousIpThrottlingArrayOutput) Index(i pulumi.IntInput) GetAttackProtectionSuspiciousIpThrottlingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttackProtectionSuspiciousIpThrottling {
		return vs[0].([]GetAttackProtectionSuspiciousIpThrottling)[vs[1].(int)]
	}).(GetAttackProtectionSuspiciousIpThrottlingOutput)
}

type GetAttackProtectionSuspiciousIpThrottlingPreLogin struct {
	MaxAttempts int `pulumi:"maxAttempts"`
	Rate        int `pulumi:"rate"`
}

// GetAttackProtectionSuspiciousIpThrottlingPreLoginInput is an input type that accepts GetAttackProtectionSuspiciousIpThrottlingPreLoginArgs and GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput values.
// You can construct a concrete instance of `GetAttackProtectionSuspiciousIpThrottlingPreLoginInput` via:
//
//	GetAttackProtectionSuspiciousIpThrottlingPreLoginArgs{...}
type GetAttackProtectionSuspiciousIpThrottlingPreLoginInput interface {
	pulumi.Input

	ToGetAttackProtectionSuspiciousIpThrottlingPreLoginOutput() GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput
	ToGetAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(context.Context) GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput
}

type GetAttackProtectionSuspiciousIpThrottlingPreLoginArgs struct {
	MaxAttempts pulumi.IntInput `pulumi:"maxAttempts"`
	Rate        pulumi.IntInput `pulumi:"rate"`
}

func (GetAttackProtectionSuspiciousIpThrottlingPreLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToGetAttackProtectionSuspiciousIpThrottlingPreLoginOutput() GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return i.ToGetAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(context.Background())
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToGetAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput)
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreLoginArgs) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionSuspiciousIpThrottlingPreLogin] {
	return pulumix.Output[GetAttackProtectionSuspiciousIpThrottlingPreLogin]{
		OutputState: i.ToGetAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(ctx).OutputState,
	}
}

// GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayInput is an input type that accepts GetAttackProtectionSuspiciousIpThrottlingPreLoginArray and GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput values.
// You can construct a concrete instance of `GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayInput` via:
//
//	GetAttackProtectionSuspiciousIpThrottlingPreLoginArray{ GetAttackProtectionSuspiciousIpThrottlingPreLoginArgs{...} }
type GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayInput interface {
	pulumi.Input

	ToGetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput() GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput
	ToGetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutputWithContext(context.Context) GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput
}

type GetAttackProtectionSuspiciousIpThrottlingPreLoginArray []GetAttackProtectionSuspiciousIpThrottlingPreLoginInput

func (GetAttackProtectionSuspiciousIpThrottlingPreLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreLoginArray) ToGetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput() GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput {
	return i.ToGetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutputWithContext(context.Background())
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreLoginArray) ToGetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput)
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreLoginArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottlingPreLogin] {
	return pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottlingPreLogin]{
		OutputState: i.ToGetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToGetAttackProtectionSuspiciousIpThrottlingPreLoginOutput() GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToGetAttackProtectionSuspiciousIpThrottlingPreLoginOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionSuspiciousIpThrottlingPreLogin] {
	return pulumix.Output[GetAttackProtectionSuspiciousIpThrottlingPreLogin]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput) MaxAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackProtectionSuspiciousIpThrottlingPreLogin) int { return v.MaxAttempts }).(pulumi.IntOutput)
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput) Rate() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackProtectionSuspiciousIpThrottlingPreLogin) int { return v.Rate }).(pulumi.IntOutput)
}

type GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionSuspiciousIpThrottlingPreLogin)(nil)).Elem()
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput) ToGetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput() GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput) ToGetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottlingPreLogin] {
	return pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottlingPreLogin]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput) Index(i pulumi.IntInput) GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttackProtectionSuspiciousIpThrottlingPreLogin {
		return vs[0].([]GetAttackProtectionSuspiciousIpThrottlingPreLogin)[vs[1].(int)]
	}).(GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput)
}

type GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration struct {
	MaxAttempts int `pulumi:"maxAttempts"`
	Rate        int `pulumi:"rate"`
}

// GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput is an input type that accepts GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs and GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput values.
// You can construct a concrete instance of `GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput` via:
//
//	GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{...}
type GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput interface {
	pulumi.Input

	ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput
	ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(context.Context) GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput
}

type GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs struct {
	MaxAttempts pulumi.IntInput `pulumi:"maxAttempts"`
	Rate        pulumi.IntInput `pulumi:"rate"`
}

func (GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return i.ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(context.Background())
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput)
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration] {
	return pulumix.Output[GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration]{
		OutputState: i.ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(ctx).OutputState,
	}
}

// GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayInput is an input type that accepts GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArray and GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput values.
// You can construct a concrete instance of `GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayInput` via:
//
//	GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArray{ GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{...} }
type GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayInput interface {
	pulumi.Input

	ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput() GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput
	ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutputWithContext(context.Context) GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput
}

type GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArray []GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput

func (GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArray) ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput() GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput {
	return i.ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutputWithContext(context.Background())
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArray) ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput)
}

func (i GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration] {
	return pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration]{
		OutputState: i.ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput() GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) ToOutput(ctx context.Context) pulumix.Output[GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration] {
	return pulumix.Output[GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) MaxAttempts() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration) int { return v.MaxAttempts }).(pulumi.IntOutput)
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput) Rate() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration) int { return v.Rate }).(pulumi.IntOutput)
}

type GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput struct{ *pulumi.OutputState }

func (GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration)(nil)).Elem()
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput) ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput() GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput) ToGetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutputWithContext(ctx context.Context) GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput {
	return o
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration] {
	return pulumix.Output[[]GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration]{
		OutputState: o.OutputState,
	}
}

func (o GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput) Index(i pulumi.IntInput) GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration {
		return vs[0].([]GetAttackProtectionSuspiciousIpThrottlingPreUserRegistration)[vs[1].(int)]
	}).(GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput)
}

type GetBrandingColor struct {
	PageBackground string `pulumi:"pageBackground"`
	Primary        string `pulumi:"primary"`
}

// GetBrandingColorInput is an input type that accepts GetBrandingColorArgs and GetBrandingColorOutput values.
// You can construct a concrete instance of `GetBrandingColorInput` via:
//
//	GetBrandingColorArgs{...}
type GetBrandingColorInput interface {
	pulumi.Input

	ToGetBrandingColorOutput() GetBrandingColorOutput
	ToGetBrandingColorOutputWithContext(context.Context) GetBrandingColorOutput
}

type GetBrandingColorArgs struct {
	PageBackground pulumi.StringInput `pulumi:"pageBackground"`
	Primary        pulumi.StringInput `pulumi:"primary"`
}

func (GetBrandingColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingColor)(nil)).Elem()
}

func (i GetBrandingColorArgs) ToGetBrandingColorOutput() GetBrandingColorOutput {
	return i.ToGetBrandingColorOutputWithContext(context.Background())
}

func (i GetBrandingColorArgs) ToGetBrandingColorOutputWithContext(ctx context.Context) GetBrandingColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingColorOutput)
}

func (i GetBrandingColorArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingColor] {
	return pulumix.Output[GetBrandingColor]{
		OutputState: i.ToGetBrandingColorOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingColorArrayInput is an input type that accepts GetBrandingColorArray and GetBrandingColorArrayOutput values.
// You can construct a concrete instance of `GetBrandingColorArrayInput` via:
//
//	GetBrandingColorArray{ GetBrandingColorArgs{...} }
type GetBrandingColorArrayInput interface {
	pulumi.Input

	ToGetBrandingColorArrayOutput() GetBrandingColorArrayOutput
	ToGetBrandingColorArrayOutputWithContext(context.Context) GetBrandingColorArrayOutput
}

type GetBrandingColorArray []GetBrandingColorInput

func (GetBrandingColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingColor)(nil)).Elem()
}

func (i GetBrandingColorArray) ToGetBrandingColorArrayOutput() GetBrandingColorArrayOutput {
	return i.ToGetBrandingColorArrayOutputWithContext(context.Background())
}

func (i GetBrandingColorArray) ToGetBrandingColorArrayOutputWithContext(ctx context.Context) GetBrandingColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingColorArrayOutput)
}

func (i GetBrandingColorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingColor] {
	return pulumix.Output[[]GetBrandingColor]{
		OutputState: i.ToGetBrandingColorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingColorOutput struct{ *pulumi.OutputState }

func (GetBrandingColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingColor)(nil)).Elem()
}

func (o GetBrandingColorOutput) ToGetBrandingColorOutput() GetBrandingColorOutput {
	return o
}

func (o GetBrandingColorOutput) ToGetBrandingColorOutputWithContext(ctx context.Context) GetBrandingColorOutput {
	return o
}

func (o GetBrandingColorOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingColor] {
	return pulumix.Output[GetBrandingColor]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingColorOutput) PageBackground() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingColor) string { return v.PageBackground }).(pulumi.StringOutput)
}

func (o GetBrandingColorOutput) Primary() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingColor) string { return v.Primary }).(pulumi.StringOutput)
}

type GetBrandingColorArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingColor)(nil)).Elem()
}

func (o GetBrandingColorArrayOutput) ToGetBrandingColorArrayOutput() GetBrandingColorArrayOutput {
	return o
}

func (o GetBrandingColorArrayOutput) ToGetBrandingColorArrayOutputWithContext(ctx context.Context) GetBrandingColorArrayOutput {
	return o
}

func (o GetBrandingColorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingColor] {
	return pulumix.Output[[]GetBrandingColor]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingColorArrayOutput) Index(i pulumi.IntInput) GetBrandingColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingColor {
		return vs[0].([]GetBrandingColor)[vs[1].(int)]
	}).(GetBrandingColorOutput)
}

type GetBrandingFont struct {
	Url string `pulumi:"url"`
}

// GetBrandingFontInput is an input type that accepts GetBrandingFontArgs and GetBrandingFontOutput values.
// You can construct a concrete instance of `GetBrandingFontInput` via:
//
//	GetBrandingFontArgs{...}
type GetBrandingFontInput interface {
	pulumi.Input

	ToGetBrandingFontOutput() GetBrandingFontOutput
	ToGetBrandingFontOutputWithContext(context.Context) GetBrandingFontOutput
}

type GetBrandingFontArgs struct {
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetBrandingFontArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingFont)(nil)).Elem()
}

func (i GetBrandingFontArgs) ToGetBrandingFontOutput() GetBrandingFontOutput {
	return i.ToGetBrandingFontOutputWithContext(context.Background())
}

func (i GetBrandingFontArgs) ToGetBrandingFontOutputWithContext(ctx context.Context) GetBrandingFontOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingFontOutput)
}

func (i GetBrandingFontArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingFont] {
	return pulumix.Output[GetBrandingFont]{
		OutputState: i.ToGetBrandingFontOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingFontArrayInput is an input type that accepts GetBrandingFontArray and GetBrandingFontArrayOutput values.
// You can construct a concrete instance of `GetBrandingFontArrayInput` via:
//
//	GetBrandingFontArray{ GetBrandingFontArgs{...} }
type GetBrandingFontArrayInput interface {
	pulumi.Input

	ToGetBrandingFontArrayOutput() GetBrandingFontArrayOutput
	ToGetBrandingFontArrayOutputWithContext(context.Context) GetBrandingFontArrayOutput
}

type GetBrandingFontArray []GetBrandingFontInput

func (GetBrandingFontArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingFont)(nil)).Elem()
}

func (i GetBrandingFontArray) ToGetBrandingFontArrayOutput() GetBrandingFontArrayOutput {
	return i.ToGetBrandingFontArrayOutputWithContext(context.Background())
}

func (i GetBrandingFontArray) ToGetBrandingFontArrayOutputWithContext(ctx context.Context) GetBrandingFontArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingFontArrayOutput)
}

func (i GetBrandingFontArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingFont] {
	return pulumix.Output[[]GetBrandingFont]{
		OutputState: i.ToGetBrandingFontArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingFontOutput struct{ *pulumi.OutputState }

func (GetBrandingFontOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingFont)(nil)).Elem()
}

func (o GetBrandingFontOutput) ToGetBrandingFontOutput() GetBrandingFontOutput {
	return o
}

func (o GetBrandingFontOutput) ToGetBrandingFontOutputWithContext(ctx context.Context) GetBrandingFontOutput {
	return o
}

func (o GetBrandingFontOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingFont] {
	return pulumix.Output[GetBrandingFont]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingFontOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingFont) string { return v.Url }).(pulumi.StringOutput)
}

type GetBrandingFontArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingFontArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingFont)(nil)).Elem()
}

func (o GetBrandingFontArrayOutput) ToGetBrandingFontArrayOutput() GetBrandingFontArrayOutput {
	return o
}

func (o GetBrandingFontArrayOutput) ToGetBrandingFontArrayOutputWithContext(ctx context.Context) GetBrandingFontArrayOutput {
	return o
}

func (o GetBrandingFontArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingFont] {
	return pulumix.Output[[]GetBrandingFont]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingFontArrayOutput) Index(i pulumi.IntInput) GetBrandingFontOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingFont {
		return vs[0].([]GetBrandingFont)[vs[1].(int)]
	}).(GetBrandingFontOutput)
}

type GetBrandingThemeBorder struct {
	ButtonBorderRadius float64 `pulumi:"buttonBorderRadius"`
	ButtonBorderWeight float64 `pulumi:"buttonBorderWeight"`
	ButtonsStyle       string  `pulumi:"buttonsStyle"`
	InputBorderRadius  float64 `pulumi:"inputBorderRadius"`
	InputBorderWeight  float64 `pulumi:"inputBorderWeight"`
	InputsStyle        string  `pulumi:"inputsStyle"`
	ShowWidgetShadow   bool    `pulumi:"showWidgetShadow"`
	WidgetBorderWeight float64 `pulumi:"widgetBorderWeight"`
	WidgetCornerRadius float64 `pulumi:"widgetCornerRadius"`
}

// GetBrandingThemeBorderInput is an input type that accepts GetBrandingThemeBorderArgs and GetBrandingThemeBorderOutput values.
// You can construct a concrete instance of `GetBrandingThemeBorderInput` via:
//
//	GetBrandingThemeBorderArgs{...}
type GetBrandingThemeBorderInput interface {
	pulumi.Input

	ToGetBrandingThemeBorderOutput() GetBrandingThemeBorderOutput
	ToGetBrandingThemeBorderOutputWithContext(context.Context) GetBrandingThemeBorderOutput
}

type GetBrandingThemeBorderArgs struct {
	ButtonBorderRadius pulumi.Float64Input `pulumi:"buttonBorderRadius"`
	ButtonBorderWeight pulumi.Float64Input `pulumi:"buttonBorderWeight"`
	ButtonsStyle       pulumi.StringInput  `pulumi:"buttonsStyle"`
	InputBorderRadius  pulumi.Float64Input `pulumi:"inputBorderRadius"`
	InputBorderWeight  pulumi.Float64Input `pulumi:"inputBorderWeight"`
	InputsStyle        pulumi.StringInput  `pulumi:"inputsStyle"`
	ShowWidgetShadow   pulumi.BoolInput    `pulumi:"showWidgetShadow"`
	WidgetBorderWeight pulumi.Float64Input `pulumi:"widgetBorderWeight"`
	WidgetCornerRadius pulumi.Float64Input `pulumi:"widgetCornerRadius"`
}

func (GetBrandingThemeBorderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeBorder)(nil)).Elem()
}

func (i GetBrandingThemeBorderArgs) ToGetBrandingThemeBorderOutput() GetBrandingThemeBorderOutput {
	return i.ToGetBrandingThemeBorderOutputWithContext(context.Background())
}

func (i GetBrandingThemeBorderArgs) ToGetBrandingThemeBorderOutputWithContext(ctx context.Context) GetBrandingThemeBorderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeBorderOutput)
}

func (i GetBrandingThemeBorderArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeBorder] {
	return pulumix.Output[GetBrandingThemeBorder]{
		OutputState: i.ToGetBrandingThemeBorderOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemeBorderArrayInput is an input type that accepts GetBrandingThemeBorderArray and GetBrandingThemeBorderArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemeBorderArrayInput` via:
//
//	GetBrandingThemeBorderArray{ GetBrandingThemeBorderArgs{...} }
type GetBrandingThemeBorderArrayInput interface {
	pulumi.Input

	ToGetBrandingThemeBorderArrayOutput() GetBrandingThemeBorderArrayOutput
	ToGetBrandingThemeBorderArrayOutputWithContext(context.Context) GetBrandingThemeBorderArrayOutput
}

type GetBrandingThemeBorderArray []GetBrandingThemeBorderInput

func (GetBrandingThemeBorderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeBorder)(nil)).Elem()
}

func (i GetBrandingThemeBorderArray) ToGetBrandingThemeBorderArrayOutput() GetBrandingThemeBorderArrayOutput {
	return i.ToGetBrandingThemeBorderArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemeBorderArray) ToGetBrandingThemeBorderArrayOutputWithContext(ctx context.Context) GetBrandingThemeBorderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeBorderArrayOutput)
}

func (i GetBrandingThemeBorderArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeBorder] {
	return pulumix.Output[[]GetBrandingThemeBorder]{
		OutputState: i.ToGetBrandingThemeBorderArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemeBorderOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeBorderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeBorder)(nil)).Elem()
}

func (o GetBrandingThemeBorderOutput) ToGetBrandingThemeBorderOutput() GetBrandingThemeBorderOutput {
	return o
}

func (o GetBrandingThemeBorderOutput) ToGetBrandingThemeBorderOutputWithContext(ctx context.Context) GetBrandingThemeBorderOutput {
	return o
}

func (o GetBrandingThemeBorderOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeBorder] {
	return pulumix.Output[GetBrandingThemeBorder]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeBorderOutput) ButtonBorderRadius() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeBorder) float64 { return v.ButtonBorderRadius }).(pulumi.Float64Output)
}

func (o GetBrandingThemeBorderOutput) ButtonBorderWeight() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeBorder) float64 { return v.ButtonBorderWeight }).(pulumi.Float64Output)
}

func (o GetBrandingThemeBorderOutput) ButtonsStyle() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeBorder) string { return v.ButtonsStyle }).(pulumi.StringOutput)
}

func (o GetBrandingThemeBorderOutput) InputBorderRadius() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeBorder) float64 { return v.InputBorderRadius }).(pulumi.Float64Output)
}

func (o GetBrandingThemeBorderOutput) InputBorderWeight() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeBorder) float64 { return v.InputBorderWeight }).(pulumi.Float64Output)
}

func (o GetBrandingThemeBorderOutput) InputsStyle() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeBorder) string { return v.InputsStyle }).(pulumi.StringOutput)
}

func (o GetBrandingThemeBorderOutput) ShowWidgetShadow() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBrandingThemeBorder) bool { return v.ShowWidgetShadow }).(pulumi.BoolOutput)
}

func (o GetBrandingThemeBorderOutput) WidgetBorderWeight() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeBorder) float64 { return v.WidgetBorderWeight }).(pulumi.Float64Output)
}

func (o GetBrandingThemeBorderOutput) WidgetCornerRadius() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeBorder) float64 { return v.WidgetCornerRadius }).(pulumi.Float64Output)
}

type GetBrandingThemeBorderArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeBorderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeBorder)(nil)).Elem()
}

func (o GetBrandingThemeBorderArrayOutput) ToGetBrandingThemeBorderArrayOutput() GetBrandingThemeBorderArrayOutput {
	return o
}

func (o GetBrandingThemeBorderArrayOutput) ToGetBrandingThemeBorderArrayOutputWithContext(ctx context.Context) GetBrandingThemeBorderArrayOutput {
	return o
}

func (o GetBrandingThemeBorderArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeBorder] {
	return pulumix.Output[[]GetBrandingThemeBorder]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeBorderArrayOutput) Index(i pulumi.IntInput) GetBrandingThemeBorderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemeBorder {
		return vs[0].([]GetBrandingThemeBorder)[vs[1].(int)]
	}).(GetBrandingThemeBorderOutput)
}

type GetBrandingThemeColor struct {
	BaseFocusColor          string `pulumi:"baseFocusColor"`
	BaseHoverColor          string `pulumi:"baseHoverColor"`
	BodyText                string `pulumi:"bodyText"`
	Error                   string `pulumi:"error"`
	Header                  string `pulumi:"header"`
	Icons                   string `pulumi:"icons"`
	InputBackground         string `pulumi:"inputBackground"`
	InputBorder             string `pulumi:"inputBorder"`
	InputFilledText         string `pulumi:"inputFilledText"`
	InputLabelsPlaceholders string `pulumi:"inputLabelsPlaceholders"`
	LinksFocusedComponents  string `pulumi:"linksFocusedComponents"`
	PrimaryButton           string `pulumi:"primaryButton"`
	PrimaryButtonLabel      string `pulumi:"primaryButtonLabel"`
	SecondaryButtonBorder   string `pulumi:"secondaryButtonBorder"`
	SecondaryButtonLabel    string `pulumi:"secondaryButtonLabel"`
	Success                 string `pulumi:"success"`
	WidgetBackground        string `pulumi:"widgetBackground"`
	WidgetBorder            string `pulumi:"widgetBorder"`
}

// GetBrandingThemeColorInput is an input type that accepts GetBrandingThemeColorArgs and GetBrandingThemeColorOutput values.
// You can construct a concrete instance of `GetBrandingThemeColorInput` via:
//
//	GetBrandingThemeColorArgs{...}
type GetBrandingThemeColorInput interface {
	pulumi.Input

	ToGetBrandingThemeColorOutput() GetBrandingThemeColorOutput
	ToGetBrandingThemeColorOutputWithContext(context.Context) GetBrandingThemeColorOutput
}

type GetBrandingThemeColorArgs struct {
	BaseFocusColor          pulumi.StringInput `pulumi:"baseFocusColor"`
	BaseHoverColor          pulumi.StringInput `pulumi:"baseHoverColor"`
	BodyText                pulumi.StringInput `pulumi:"bodyText"`
	Error                   pulumi.StringInput `pulumi:"error"`
	Header                  pulumi.StringInput `pulumi:"header"`
	Icons                   pulumi.StringInput `pulumi:"icons"`
	InputBackground         pulumi.StringInput `pulumi:"inputBackground"`
	InputBorder             pulumi.StringInput `pulumi:"inputBorder"`
	InputFilledText         pulumi.StringInput `pulumi:"inputFilledText"`
	InputLabelsPlaceholders pulumi.StringInput `pulumi:"inputLabelsPlaceholders"`
	LinksFocusedComponents  pulumi.StringInput `pulumi:"linksFocusedComponents"`
	PrimaryButton           pulumi.StringInput `pulumi:"primaryButton"`
	PrimaryButtonLabel      pulumi.StringInput `pulumi:"primaryButtonLabel"`
	SecondaryButtonBorder   pulumi.StringInput `pulumi:"secondaryButtonBorder"`
	SecondaryButtonLabel    pulumi.StringInput `pulumi:"secondaryButtonLabel"`
	Success                 pulumi.StringInput `pulumi:"success"`
	WidgetBackground        pulumi.StringInput `pulumi:"widgetBackground"`
	WidgetBorder            pulumi.StringInput `pulumi:"widgetBorder"`
}

func (GetBrandingThemeColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeColor)(nil)).Elem()
}

func (i GetBrandingThemeColorArgs) ToGetBrandingThemeColorOutput() GetBrandingThemeColorOutput {
	return i.ToGetBrandingThemeColorOutputWithContext(context.Background())
}

func (i GetBrandingThemeColorArgs) ToGetBrandingThemeColorOutputWithContext(ctx context.Context) GetBrandingThemeColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeColorOutput)
}

func (i GetBrandingThemeColorArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeColor] {
	return pulumix.Output[GetBrandingThemeColor]{
		OutputState: i.ToGetBrandingThemeColorOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemeColorArrayInput is an input type that accepts GetBrandingThemeColorArray and GetBrandingThemeColorArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemeColorArrayInput` via:
//
//	GetBrandingThemeColorArray{ GetBrandingThemeColorArgs{...} }
type GetBrandingThemeColorArrayInput interface {
	pulumi.Input

	ToGetBrandingThemeColorArrayOutput() GetBrandingThemeColorArrayOutput
	ToGetBrandingThemeColorArrayOutputWithContext(context.Context) GetBrandingThemeColorArrayOutput
}

type GetBrandingThemeColorArray []GetBrandingThemeColorInput

func (GetBrandingThemeColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeColor)(nil)).Elem()
}

func (i GetBrandingThemeColorArray) ToGetBrandingThemeColorArrayOutput() GetBrandingThemeColorArrayOutput {
	return i.ToGetBrandingThemeColorArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemeColorArray) ToGetBrandingThemeColorArrayOutputWithContext(ctx context.Context) GetBrandingThemeColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeColorArrayOutput)
}

func (i GetBrandingThemeColorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeColor] {
	return pulumix.Output[[]GetBrandingThemeColor]{
		OutputState: i.ToGetBrandingThemeColorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemeColorOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeColor)(nil)).Elem()
}

func (o GetBrandingThemeColorOutput) ToGetBrandingThemeColorOutput() GetBrandingThemeColorOutput {
	return o
}

func (o GetBrandingThemeColorOutput) ToGetBrandingThemeColorOutputWithContext(ctx context.Context) GetBrandingThemeColorOutput {
	return o
}

func (o GetBrandingThemeColorOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeColor] {
	return pulumix.Output[GetBrandingThemeColor]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeColorOutput) BaseFocusColor() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.BaseFocusColor }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) BaseHoverColor() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.BaseHoverColor }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) BodyText() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.BodyText }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.Error }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.Header }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) Icons() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.Icons }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) InputBackground() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.InputBackground }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) InputBorder() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.InputBorder }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) InputFilledText() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.InputFilledText }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) InputLabelsPlaceholders() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.InputLabelsPlaceholders }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) LinksFocusedComponents() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.LinksFocusedComponents }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) PrimaryButton() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.PrimaryButton }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) PrimaryButtonLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.PrimaryButtonLabel }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) SecondaryButtonBorder() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.SecondaryButtonBorder }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) SecondaryButtonLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.SecondaryButtonLabel }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) Success() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.Success }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) WidgetBackground() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.WidgetBackground }).(pulumi.StringOutput)
}

func (o GetBrandingThemeColorOutput) WidgetBorder() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeColor) string { return v.WidgetBorder }).(pulumi.StringOutput)
}

type GetBrandingThemeColorArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeColor)(nil)).Elem()
}

func (o GetBrandingThemeColorArrayOutput) ToGetBrandingThemeColorArrayOutput() GetBrandingThemeColorArrayOutput {
	return o
}

func (o GetBrandingThemeColorArrayOutput) ToGetBrandingThemeColorArrayOutputWithContext(ctx context.Context) GetBrandingThemeColorArrayOutput {
	return o
}

func (o GetBrandingThemeColorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeColor] {
	return pulumix.Output[[]GetBrandingThemeColor]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeColorArrayOutput) Index(i pulumi.IntInput) GetBrandingThemeColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemeColor {
		return vs[0].([]GetBrandingThemeColor)[vs[1].(int)]
	}).(GetBrandingThemeColorOutput)
}

type GetBrandingThemeFont struct {
	BodyTexts         []GetBrandingThemeFontBodyText    `pulumi:"bodyTexts"`
	ButtonsTexts      []GetBrandingThemeFontButtonsText `pulumi:"buttonsTexts"`
	FontUrl           string                            `pulumi:"fontUrl"`
	InputLabels       []GetBrandingThemeFontInputLabel  `pulumi:"inputLabels"`
	Links             []GetBrandingThemeFontLink        `pulumi:"links"`
	LinksStyle        string                            `pulumi:"linksStyle"`
	ReferenceTextSize float64                           `pulumi:"referenceTextSize"`
	Subtitles         []GetBrandingThemeFontSubtitle    `pulumi:"subtitles"`
	Titles            []GetBrandingThemeFontTitle       `pulumi:"titles"`
}

// GetBrandingThemeFontInput is an input type that accepts GetBrandingThemeFontArgs and GetBrandingThemeFontOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontInput` via:
//
//	GetBrandingThemeFontArgs{...}
type GetBrandingThemeFontInput interface {
	pulumi.Input

	ToGetBrandingThemeFontOutput() GetBrandingThemeFontOutput
	ToGetBrandingThemeFontOutputWithContext(context.Context) GetBrandingThemeFontOutput
}

type GetBrandingThemeFontArgs struct {
	BodyTexts         GetBrandingThemeFontBodyTextArrayInput    `pulumi:"bodyTexts"`
	ButtonsTexts      GetBrandingThemeFontButtonsTextArrayInput `pulumi:"buttonsTexts"`
	FontUrl           pulumi.StringInput                        `pulumi:"fontUrl"`
	InputLabels       GetBrandingThemeFontInputLabelArrayInput  `pulumi:"inputLabels"`
	Links             GetBrandingThemeFontLinkArrayInput        `pulumi:"links"`
	LinksStyle        pulumi.StringInput                        `pulumi:"linksStyle"`
	ReferenceTextSize pulumi.Float64Input                       `pulumi:"referenceTextSize"`
	Subtitles         GetBrandingThemeFontSubtitleArrayInput    `pulumi:"subtitles"`
	Titles            GetBrandingThemeFontTitleArrayInput       `pulumi:"titles"`
}

func (GetBrandingThemeFontArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFont)(nil)).Elem()
}

func (i GetBrandingThemeFontArgs) ToGetBrandingThemeFontOutput() GetBrandingThemeFontOutput {
	return i.ToGetBrandingThemeFontOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontArgs) ToGetBrandingThemeFontOutputWithContext(ctx context.Context) GetBrandingThemeFontOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontOutput)
}

func (i GetBrandingThemeFontArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFont] {
	return pulumix.Output[GetBrandingThemeFont]{
		OutputState: i.ToGetBrandingThemeFontOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemeFontArrayInput is an input type that accepts GetBrandingThemeFontArray and GetBrandingThemeFontArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontArrayInput` via:
//
//	GetBrandingThemeFontArray{ GetBrandingThemeFontArgs{...} }
type GetBrandingThemeFontArrayInput interface {
	pulumi.Input

	ToGetBrandingThemeFontArrayOutput() GetBrandingThemeFontArrayOutput
	ToGetBrandingThemeFontArrayOutputWithContext(context.Context) GetBrandingThemeFontArrayOutput
}

type GetBrandingThemeFontArray []GetBrandingThemeFontInput

func (GetBrandingThemeFontArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFont)(nil)).Elem()
}

func (i GetBrandingThemeFontArray) ToGetBrandingThemeFontArrayOutput() GetBrandingThemeFontArrayOutput {
	return i.ToGetBrandingThemeFontArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontArray) ToGetBrandingThemeFontArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontArrayOutput)
}

func (i GetBrandingThemeFontArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFont] {
	return pulumix.Output[[]GetBrandingThemeFont]{
		OutputState: i.ToGetBrandingThemeFontArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemeFontOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFont)(nil)).Elem()
}

func (o GetBrandingThemeFontOutput) ToGetBrandingThemeFontOutput() GetBrandingThemeFontOutput {
	return o
}

func (o GetBrandingThemeFontOutput) ToGetBrandingThemeFontOutputWithContext(ctx context.Context) GetBrandingThemeFontOutput {
	return o
}

func (o GetBrandingThemeFontOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFont] {
	return pulumix.Output[GetBrandingThemeFont]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontOutput) BodyTexts() GetBrandingThemeFontBodyTextArrayOutput {
	return o.ApplyT(func(v GetBrandingThemeFont) []GetBrandingThemeFontBodyText { return v.BodyTexts }).(GetBrandingThemeFontBodyTextArrayOutput)
}

func (o GetBrandingThemeFontOutput) ButtonsTexts() GetBrandingThemeFontButtonsTextArrayOutput {
	return o.ApplyT(func(v GetBrandingThemeFont) []GetBrandingThemeFontButtonsText { return v.ButtonsTexts }).(GetBrandingThemeFontButtonsTextArrayOutput)
}

func (o GetBrandingThemeFontOutput) FontUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeFont) string { return v.FontUrl }).(pulumi.StringOutput)
}

func (o GetBrandingThemeFontOutput) InputLabels() GetBrandingThemeFontInputLabelArrayOutput {
	return o.ApplyT(func(v GetBrandingThemeFont) []GetBrandingThemeFontInputLabel { return v.InputLabels }).(GetBrandingThemeFontInputLabelArrayOutput)
}

func (o GetBrandingThemeFontOutput) Links() GetBrandingThemeFontLinkArrayOutput {
	return o.ApplyT(func(v GetBrandingThemeFont) []GetBrandingThemeFontLink { return v.Links }).(GetBrandingThemeFontLinkArrayOutput)
}

func (o GetBrandingThemeFontOutput) LinksStyle() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeFont) string { return v.LinksStyle }).(pulumi.StringOutput)
}

func (o GetBrandingThemeFontOutput) ReferenceTextSize() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeFont) float64 { return v.ReferenceTextSize }).(pulumi.Float64Output)
}

func (o GetBrandingThemeFontOutput) Subtitles() GetBrandingThemeFontSubtitleArrayOutput {
	return o.ApplyT(func(v GetBrandingThemeFont) []GetBrandingThemeFontSubtitle { return v.Subtitles }).(GetBrandingThemeFontSubtitleArrayOutput)
}

func (o GetBrandingThemeFontOutput) Titles() GetBrandingThemeFontTitleArrayOutput {
	return o.ApplyT(func(v GetBrandingThemeFont) []GetBrandingThemeFontTitle { return v.Titles }).(GetBrandingThemeFontTitleArrayOutput)
}

type GetBrandingThemeFontArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFont)(nil)).Elem()
}

func (o GetBrandingThemeFontArrayOutput) ToGetBrandingThemeFontArrayOutput() GetBrandingThemeFontArrayOutput {
	return o
}

func (o GetBrandingThemeFontArrayOutput) ToGetBrandingThemeFontArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontArrayOutput {
	return o
}

func (o GetBrandingThemeFontArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFont] {
	return pulumix.Output[[]GetBrandingThemeFont]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontArrayOutput) Index(i pulumi.IntInput) GetBrandingThemeFontOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemeFont {
		return vs[0].([]GetBrandingThemeFont)[vs[1].(int)]
	}).(GetBrandingThemeFontOutput)
}

type GetBrandingThemeFontBodyText struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// GetBrandingThemeFontBodyTextInput is an input type that accepts GetBrandingThemeFontBodyTextArgs and GetBrandingThemeFontBodyTextOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontBodyTextInput` via:
//
//	GetBrandingThemeFontBodyTextArgs{...}
type GetBrandingThemeFontBodyTextInput interface {
	pulumi.Input

	ToGetBrandingThemeFontBodyTextOutput() GetBrandingThemeFontBodyTextOutput
	ToGetBrandingThemeFontBodyTextOutputWithContext(context.Context) GetBrandingThemeFontBodyTextOutput
}

type GetBrandingThemeFontBodyTextArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (GetBrandingThemeFontBodyTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontBodyText)(nil)).Elem()
}

func (i GetBrandingThemeFontBodyTextArgs) ToGetBrandingThemeFontBodyTextOutput() GetBrandingThemeFontBodyTextOutput {
	return i.ToGetBrandingThemeFontBodyTextOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontBodyTextArgs) ToGetBrandingThemeFontBodyTextOutputWithContext(ctx context.Context) GetBrandingThemeFontBodyTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontBodyTextOutput)
}

func (i GetBrandingThemeFontBodyTextArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontBodyText] {
	return pulumix.Output[GetBrandingThemeFontBodyText]{
		OutputState: i.ToGetBrandingThemeFontBodyTextOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemeFontBodyTextArrayInput is an input type that accepts GetBrandingThemeFontBodyTextArray and GetBrandingThemeFontBodyTextArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontBodyTextArrayInput` via:
//
//	GetBrandingThemeFontBodyTextArray{ GetBrandingThemeFontBodyTextArgs{...} }
type GetBrandingThemeFontBodyTextArrayInput interface {
	pulumi.Input

	ToGetBrandingThemeFontBodyTextArrayOutput() GetBrandingThemeFontBodyTextArrayOutput
	ToGetBrandingThemeFontBodyTextArrayOutputWithContext(context.Context) GetBrandingThemeFontBodyTextArrayOutput
}

type GetBrandingThemeFontBodyTextArray []GetBrandingThemeFontBodyTextInput

func (GetBrandingThemeFontBodyTextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontBodyText)(nil)).Elem()
}

func (i GetBrandingThemeFontBodyTextArray) ToGetBrandingThemeFontBodyTextArrayOutput() GetBrandingThemeFontBodyTextArrayOutput {
	return i.ToGetBrandingThemeFontBodyTextArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontBodyTextArray) ToGetBrandingThemeFontBodyTextArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontBodyTextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontBodyTextArrayOutput)
}

func (i GetBrandingThemeFontBodyTextArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontBodyText] {
	return pulumix.Output[[]GetBrandingThemeFontBodyText]{
		OutputState: i.ToGetBrandingThemeFontBodyTextArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemeFontBodyTextOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontBodyTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontBodyText)(nil)).Elem()
}

func (o GetBrandingThemeFontBodyTextOutput) ToGetBrandingThemeFontBodyTextOutput() GetBrandingThemeFontBodyTextOutput {
	return o
}

func (o GetBrandingThemeFontBodyTextOutput) ToGetBrandingThemeFontBodyTextOutputWithContext(ctx context.Context) GetBrandingThemeFontBodyTextOutput {
	return o
}

func (o GetBrandingThemeFontBodyTextOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontBodyText] {
	return pulumix.Output[GetBrandingThemeFontBodyText]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontBodyTextOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBrandingThemeFontBodyText) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o GetBrandingThemeFontBodyTextOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeFontBodyText) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetBrandingThemeFontBodyTextArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontBodyTextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontBodyText)(nil)).Elem()
}

func (o GetBrandingThemeFontBodyTextArrayOutput) ToGetBrandingThemeFontBodyTextArrayOutput() GetBrandingThemeFontBodyTextArrayOutput {
	return o
}

func (o GetBrandingThemeFontBodyTextArrayOutput) ToGetBrandingThemeFontBodyTextArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontBodyTextArrayOutput {
	return o
}

func (o GetBrandingThemeFontBodyTextArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontBodyText] {
	return pulumix.Output[[]GetBrandingThemeFontBodyText]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontBodyTextArrayOutput) Index(i pulumi.IntInput) GetBrandingThemeFontBodyTextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemeFontBodyText {
		return vs[0].([]GetBrandingThemeFontBodyText)[vs[1].(int)]
	}).(GetBrandingThemeFontBodyTextOutput)
}

type GetBrandingThemeFontButtonsText struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// GetBrandingThemeFontButtonsTextInput is an input type that accepts GetBrandingThemeFontButtonsTextArgs and GetBrandingThemeFontButtonsTextOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontButtonsTextInput` via:
//
//	GetBrandingThemeFontButtonsTextArgs{...}
type GetBrandingThemeFontButtonsTextInput interface {
	pulumi.Input

	ToGetBrandingThemeFontButtonsTextOutput() GetBrandingThemeFontButtonsTextOutput
	ToGetBrandingThemeFontButtonsTextOutputWithContext(context.Context) GetBrandingThemeFontButtonsTextOutput
}

type GetBrandingThemeFontButtonsTextArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (GetBrandingThemeFontButtonsTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontButtonsText)(nil)).Elem()
}

func (i GetBrandingThemeFontButtonsTextArgs) ToGetBrandingThemeFontButtonsTextOutput() GetBrandingThemeFontButtonsTextOutput {
	return i.ToGetBrandingThemeFontButtonsTextOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontButtonsTextArgs) ToGetBrandingThemeFontButtonsTextOutputWithContext(ctx context.Context) GetBrandingThemeFontButtonsTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontButtonsTextOutput)
}

func (i GetBrandingThemeFontButtonsTextArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontButtonsText] {
	return pulumix.Output[GetBrandingThemeFontButtonsText]{
		OutputState: i.ToGetBrandingThemeFontButtonsTextOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemeFontButtonsTextArrayInput is an input type that accepts GetBrandingThemeFontButtonsTextArray and GetBrandingThemeFontButtonsTextArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontButtonsTextArrayInput` via:
//
//	GetBrandingThemeFontButtonsTextArray{ GetBrandingThemeFontButtonsTextArgs{...} }
type GetBrandingThemeFontButtonsTextArrayInput interface {
	pulumi.Input

	ToGetBrandingThemeFontButtonsTextArrayOutput() GetBrandingThemeFontButtonsTextArrayOutput
	ToGetBrandingThemeFontButtonsTextArrayOutputWithContext(context.Context) GetBrandingThemeFontButtonsTextArrayOutput
}

type GetBrandingThemeFontButtonsTextArray []GetBrandingThemeFontButtonsTextInput

func (GetBrandingThemeFontButtonsTextArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontButtonsText)(nil)).Elem()
}

func (i GetBrandingThemeFontButtonsTextArray) ToGetBrandingThemeFontButtonsTextArrayOutput() GetBrandingThemeFontButtonsTextArrayOutput {
	return i.ToGetBrandingThemeFontButtonsTextArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontButtonsTextArray) ToGetBrandingThemeFontButtonsTextArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontButtonsTextArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontButtonsTextArrayOutput)
}

func (i GetBrandingThemeFontButtonsTextArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontButtonsText] {
	return pulumix.Output[[]GetBrandingThemeFontButtonsText]{
		OutputState: i.ToGetBrandingThemeFontButtonsTextArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemeFontButtonsTextOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontButtonsTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontButtonsText)(nil)).Elem()
}

func (o GetBrandingThemeFontButtonsTextOutput) ToGetBrandingThemeFontButtonsTextOutput() GetBrandingThemeFontButtonsTextOutput {
	return o
}

func (o GetBrandingThemeFontButtonsTextOutput) ToGetBrandingThemeFontButtonsTextOutputWithContext(ctx context.Context) GetBrandingThemeFontButtonsTextOutput {
	return o
}

func (o GetBrandingThemeFontButtonsTextOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontButtonsText] {
	return pulumix.Output[GetBrandingThemeFontButtonsText]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontButtonsTextOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBrandingThemeFontButtonsText) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o GetBrandingThemeFontButtonsTextOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeFontButtonsText) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetBrandingThemeFontButtonsTextArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontButtonsTextArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontButtonsText)(nil)).Elem()
}

func (o GetBrandingThemeFontButtonsTextArrayOutput) ToGetBrandingThemeFontButtonsTextArrayOutput() GetBrandingThemeFontButtonsTextArrayOutput {
	return o
}

func (o GetBrandingThemeFontButtonsTextArrayOutput) ToGetBrandingThemeFontButtonsTextArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontButtonsTextArrayOutput {
	return o
}

func (o GetBrandingThemeFontButtonsTextArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontButtonsText] {
	return pulumix.Output[[]GetBrandingThemeFontButtonsText]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontButtonsTextArrayOutput) Index(i pulumi.IntInput) GetBrandingThemeFontButtonsTextOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemeFontButtonsText {
		return vs[0].([]GetBrandingThemeFontButtonsText)[vs[1].(int)]
	}).(GetBrandingThemeFontButtonsTextOutput)
}

type GetBrandingThemeFontInputLabel struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// GetBrandingThemeFontInputLabelInput is an input type that accepts GetBrandingThemeFontInputLabelArgs and GetBrandingThemeFontInputLabelOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontInputLabelInput` via:
//
//	GetBrandingThemeFontInputLabelArgs{...}
type GetBrandingThemeFontInputLabelInput interface {
	pulumi.Input

	ToGetBrandingThemeFontInputLabelOutput() GetBrandingThemeFontInputLabelOutput
	ToGetBrandingThemeFontInputLabelOutputWithContext(context.Context) GetBrandingThemeFontInputLabelOutput
}

type GetBrandingThemeFontInputLabelArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (GetBrandingThemeFontInputLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontInputLabel)(nil)).Elem()
}

func (i GetBrandingThemeFontInputLabelArgs) ToGetBrandingThemeFontInputLabelOutput() GetBrandingThemeFontInputLabelOutput {
	return i.ToGetBrandingThemeFontInputLabelOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontInputLabelArgs) ToGetBrandingThemeFontInputLabelOutputWithContext(ctx context.Context) GetBrandingThemeFontInputLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontInputLabelOutput)
}

func (i GetBrandingThemeFontInputLabelArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontInputLabel] {
	return pulumix.Output[GetBrandingThemeFontInputLabel]{
		OutputState: i.ToGetBrandingThemeFontInputLabelOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemeFontInputLabelArrayInput is an input type that accepts GetBrandingThemeFontInputLabelArray and GetBrandingThemeFontInputLabelArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontInputLabelArrayInput` via:
//
//	GetBrandingThemeFontInputLabelArray{ GetBrandingThemeFontInputLabelArgs{...} }
type GetBrandingThemeFontInputLabelArrayInput interface {
	pulumi.Input

	ToGetBrandingThemeFontInputLabelArrayOutput() GetBrandingThemeFontInputLabelArrayOutput
	ToGetBrandingThemeFontInputLabelArrayOutputWithContext(context.Context) GetBrandingThemeFontInputLabelArrayOutput
}

type GetBrandingThemeFontInputLabelArray []GetBrandingThemeFontInputLabelInput

func (GetBrandingThemeFontInputLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontInputLabel)(nil)).Elem()
}

func (i GetBrandingThemeFontInputLabelArray) ToGetBrandingThemeFontInputLabelArrayOutput() GetBrandingThemeFontInputLabelArrayOutput {
	return i.ToGetBrandingThemeFontInputLabelArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontInputLabelArray) ToGetBrandingThemeFontInputLabelArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontInputLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontInputLabelArrayOutput)
}

func (i GetBrandingThemeFontInputLabelArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontInputLabel] {
	return pulumix.Output[[]GetBrandingThemeFontInputLabel]{
		OutputState: i.ToGetBrandingThemeFontInputLabelArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemeFontInputLabelOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontInputLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontInputLabel)(nil)).Elem()
}

func (o GetBrandingThemeFontInputLabelOutput) ToGetBrandingThemeFontInputLabelOutput() GetBrandingThemeFontInputLabelOutput {
	return o
}

func (o GetBrandingThemeFontInputLabelOutput) ToGetBrandingThemeFontInputLabelOutputWithContext(ctx context.Context) GetBrandingThemeFontInputLabelOutput {
	return o
}

func (o GetBrandingThemeFontInputLabelOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontInputLabel] {
	return pulumix.Output[GetBrandingThemeFontInputLabel]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontInputLabelOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBrandingThemeFontInputLabel) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o GetBrandingThemeFontInputLabelOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeFontInputLabel) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetBrandingThemeFontInputLabelArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontInputLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontInputLabel)(nil)).Elem()
}

func (o GetBrandingThemeFontInputLabelArrayOutput) ToGetBrandingThemeFontInputLabelArrayOutput() GetBrandingThemeFontInputLabelArrayOutput {
	return o
}

func (o GetBrandingThemeFontInputLabelArrayOutput) ToGetBrandingThemeFontInputLabelArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontInputLabelArrayOutput {
	return o
}

func (o GetBrandingThemeFontInputLabelArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontInputLabel] {
	return pulumix.Output[[]GetBrandingThemeFontInputLabel]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontInputLabelArrayOutput) Index(i pulumi.IntInput) GetBrandingThemeFontInputLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemeFontInputLabel {
		return vs[0].([]GetBrandingThemeFontInputLabel)[vs[1].(int)]
	}).(GetBrandingThemeFontInputLabelOutput)
}

type GetBrandingThemeFontLink struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// GetBrandingThemeFontLinkInput is an input type that accepts GetBrandingThemeFontLinkArgs and GetBrandingThemeFontLinkOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontLinkInput` via:
//
//	GetBrandingThemeFontLinkArgs{...}
type GetBrandingThemeFontLinkInput interface {
	pulumi.Input

	ToGetBrandingThemeFontLinkOutput() GetBrandingThemeFontLinkOutput
	ToGetBrandingThemeFontLinkOutputWithContext(context.Context) GetBrandingThemeFontLinkOutput
}

type GetBrandingThemeFontLinkArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (GetBrandingThemeFontLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontLink)(nil)).Elem()
}

func (i GetBrandingThemeFontLinkArgs) ToGetBrandingThemeFontLinkOutput() GetBrandingThemeFontLinkOutput {
	return i.ToGetBrandingThemeFontLinkOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontLinkArgs) ToGetBrandingThemeFontLinkOutputWithContext(ctx context.Context) GetBrandingThemeFontLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontLinkOutput)
}

func (i GetBrandingThemeFontLinkArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontLink] {
	return pulumix.Output[GetBrandingThemeFontLink]{
		OutputState: i.ToGetBrandingThemeFontLinkOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemeFontLinkArrayInput is an input type that accepts GetBrandingThemeFontLinkArray and GetBrandingThemeFontLinkArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontLinkArrayInput` via:
//
//	GetBrandingThemeFontLinkArray{ GetBrandingThemeFontLinkArgs{...} }
type GetBrandingThemeFontLinkArrayInput interface {
	pulumi.Input

	ToGetBrandingThemeFontLinkArrayOutput() GetBrandingThemeFontLinkArrayOutput
	ToGetBrandingThemeFontLinkArrayOutputWithContext(context.Context) GetBrandingThemeFontLinkArrayOutput
}

type GetBrandingThemeFontLinkArray []GetBrandingThemeFontLinkInput

func (GetBrandingThemeFontLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontLink)(nil)).Elem()
}

func (i GetBrandingThemeFontLinkArray) ToGetBrandingThemeFontLinkArrayOutput() GetBrandingThemeFontLinkArrayOutput {
	return i.ToGetBrandingThemeFontLinkArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontLinkArray) ToGetBrandingThemeFontLinkArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontLinkArrayOutput)
}

func (i GetBrandingThemeFontLinkArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontLink] {
	return pulumix.Output[[]GetBrandingThemeFontLink]{
		OutputState: i.ToGetBrandingThemeFontLinkArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemeFontLinkOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontLink)(nil)).Elem()
}

func (o GetBrandingThemeFontLinkOutput) ToGetBrandingThemeFontLinkOutput() GetBrandingThemeFontLinkOutput {
	return o
}

func (o GetBrandingThemeFontLinkOutput) ToGetBrandingThemeFontLinkOutputWithContext(ctx context.Context) GetBrandingThemeFontLinkOutput {
	return o
}

func (o GetBrandingThemeFontLinkOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontLink] {
	return pulumix.Output[GetBrandingThemeFontLink]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontLinkOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBrandingThemeFontLink) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o GetBrandingThemeFontLinkOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeFontLink) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetBrandingThemeFontLinkArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontLink)(nil)).Elem()
}

func (o GetBrandingThemeFontLinkArrayOutput) ToGetBrandingThemeFontLinkArrayOutput() GetBrandingThemeFontLinkArrayOutput {
	return o
}

func (o GetBrandingThemeFontLinkArrayOutput) ToGetBrandingThemeFontLinkArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontLinkArrayOutput {
	return o
}

func (o GetBrandingThemeFontLinkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontLink] {
	return pulumix.Output[[]GetBrandingThemeFontLink]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontLinkArrayOutput) Index(i pulumi.IntInput) GetBrandingThemeFontLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemeFontLink {
		return vs[0].([]GetBrandingThemeFontLink)[vs[1].(int)]
	}).(GetBrandingThemeFontLinkOutput)
}

type GetBrandingThemeFontSubtitle struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// GetBrandingThemeFontSubtitleInput is an input type that accepts GetBrandingThemeFontSubtitleArgs and GetBrandingThemeFontSubtitleOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontSubtitleInput` via:
//
//	GetBrandingThemeFontSubtitleArgs{...}
type GetBrandingThemeFontSubtitleInput interface {
	pulumi.Input

	ToGetBrandingThemeFontSubtitleOutput() GetBrandingThemeFontSubtitleOutput
	ToGetBrandingThemeFontSubtitleOutputWithContext(context.Context) GetBrandingThemeFontSubtitleOutput
}

type GetBrandingThemeFontSubtitleArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (GetBrandingThemeFontSubtitleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontSubtitle)(nil)).Elem()
}

func (i GetBrandingThemeFontSubtitleArgs) ToGetBrandingThemeFontSubtitleOutput() GetBrandingThemeFontSubtitleOutput {
	return i.ToGetBrandingThemeFontSubtitleOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontSubtitleArgs) ToGetBrandingThemeFontSubtitleOutputWithContext(ctx context.Context) GetBrandingThemeFontSubtitleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontSubtitleOutput)
}

func (i GetBrandingThemeFontSubtitleArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontSubtitle] {
	return pulumix.Output[GetBrandingThemeFontSubtitle]{
		OutputState: i.ToGetBrandingThemeFontSubtitleOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemeFontSubtitleArrayInput is an input type that accepts GetBrandingThemeFontSubtitleArray and GetBrandingThemeFontSubtitleArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontSubtitleArrayInput` via:
//
//	GetBrandingThemeFontSubtitleArray{ GetBrandingThemeFontSubtitleArgs{...} }
type GetBrandingThemeFontSubtitleArrayInput interface {
	pulumi.Input

	ToGetBrandingThemeFontSubtitleArrayOutput() GetBrandingThemeFontSubtitleArrayOutput
	ToGetBrandingThemeFontSubtitleArrayOutputWithContext(context.Context) GetBrandingThemeFontSubtitleArrayOutput
}

type GetBrandingThemeFontSubtitleArray []GetBrandingThemeFontSubtitleInput

func (GetBrandingThemeFontSubtitleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontSubtitle)(nil)).Elem()
}

func (i GetBrandingThemeFontSubtitleArray) ToGetBrandingThemeFontSubtitleArrayOutput() GetBrandingThemeFontSubtitleArrayOutput {
	return i.ToGetBrandingThemeFontSubtitleArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontSubtitleArray) ToGetBrandingThemeFontSubtitleArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontSubtitleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontSubtitleArrayOutput)
}

func (i GetBrandingThemeFontSubtitleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontSubtitle] {
	return pulumix.Output[[]GetBrandingThemeFontSubtitle]{
		OutputState: i.ToGetBrandingThemeFontSubtitleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemeFontSubtitleOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontSubtitleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontSubtitle)(nil)).Elem()
}

func (o GetBrandingThemeFontSubtitleOutput) ToGetBrandingThemeFontSubtitleOutput() GetBrandingThemeFontSubtitleOutput {
	return o
}

func (o GetBrandingThemeFontSubtitleOutput) ToGetBrandingThemeFontSubtitleOutputWithContext(ctx context.Context) GetBrandingThemeFontSubtitleOutput {
	return o
}

func (o GetBrandingThemeFontSubtitleOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontSubtitle] {
	return pulumix.Output[GetBrandingThemeFontSubtitle]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontSubtitleOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBrandingThemeFontSubtitle) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o GetBrandingThemeFontSubtitleOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeFontSubtitle) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetBrandingThemeFontSubtitleArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontSubtitleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontSubtitle)(nil)).Elem()
}

func (o GetBrandingThemeFontSubtitleArrayOutput) ToGetBrandingThemeFontSubtitleArrayOutput() GetBrandingThemeFontSubtitleArrayOutput {
	return o
}

func (o GetBrandingThemeFontSubtitleArrayOutput) ToGetBrandingThemeFontSubtitleArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontSubtitleArrayOutput {
	return o
}

func (o GetBrandingThemeFontSubtitleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontSubtitle] {
	return pulumix.Output[[]GetBrandingThemeFontSubtitle]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontSubtitleArrayOutput) Index(i pulumi.IntInput) GetBrandingThemeFontSubtitleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemeFontSubtitle {
		return vs[0].([]GetBrandingThemeFontSubtitle)[vs[1].(int)]
	}).(GetBrandingThemeFontSubtitleOutput)
}

type GetBrandingThemeFontTitle struct {
	Bold bool    `pulumi:"bold"`
	Size float64 `pulumi:"size"`
}

// GetBrandingThemeFontTitleInput is an input type that accepts GetBrandingThemeFontTitleArgs and GetBrandingThemeFontTitleOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontTitleInput` via:
//
//	GetBrandingThemeFontTitleArgs{...}
type GetBrandingThemeFontTitleInput interface {
	pulumi.Input

	ToGetBrandingThemeFontTitleOutput() GetBrandingThemeFontTitleOutput
	ToGetBrandingThemeFontTitleOutputWithContext(context.Context) GetBrandingThemeFontTitleOutput
}

type GetBrandingThemeFontTitleArgs struct {
	Bold pulumi.BoolInput    `pulumi:"bold"`
	Size pulumi.Float64Input `pulumi:"size"`
}

func (GetBrandingThemeFontTitleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontTitle)(nil)).Elem()
}

func (i GetBrandingThemeFontTitleArgs) ToGetBrandingThemeFontTitleOutput() GetBrandingThemeFontTitleOutput {
	return i.ToGetBrandingThemeFontTitleOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontTitleArgs) ToGetBrandingThemeFontTitleOutputWithContext(ctx context.Context) GetBrandingThemeFontTitleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontTitleOutput)
}

func (i GetBrandingThemeFontTitleArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontTitle] {
	return pulumix.Output[GetBrandingThemeFontTitle]{
		OutputState: i.ToGetBrandingThemeFontTitleOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemeFontTitleArrayInput is an input type that accepts GetBrandingThemeFontTitleArray and GetBrandingThemeFontTitleArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemeFontTitleArrayInput` via:
//
//	GetBrandingThemeFontTitleArray{ GetBrandingThemeFontTitleArgs{...} }
type GetBrandingThemeFontTitleArrayInput interface {
	pulumi.Input

	ToGetBrandingThemeFontTitleArrayOutput() GetBrandingThemeFontTitleArrayOutput
	ToGetBrandingThemeFontTitleArrayOutputWithContext(context.Context) GetBrandingThemeFontTitleArrayOutput
}

type GetBrandingThemeFontTitleArray []GetBrandingThemeFontTitleInput

func (GetBrandingThemeFontTitleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontTitle)(nil)).Elem()
}

func (i GetBrandingThemeFontTitleArray) ToGetBrandingThemeFontTitleArrayOutput() GetBrandingThemeFontTitleArrayOutput {
	return i.ToGetBrandingThemeFontTitleArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemeFontTitleArray) ToGetBrandingThemeFontTitleArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontTitleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeFontTitleArrayOutput)
}

func (i GetBrandingThemeFontTitleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontTitle] {
	return pulumix.Output[[]GetBrandingThemeFontTitle]{
		OutputState: i.ToGetBrandingThemeFontTitleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemeFontTitleOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontTitleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeFontTitle)(nil)).Elem()
}

func (o GetBrandingThemeFontTitleOutput) ToGetBrandingThemeFontTitleOutput() GetBrandingThemeFontTitleOutput {
	return o
}

func (o GetBrandingThemeFontTitleOutput) ToGetBrandingThemeFontTitleOutputWithContext(ctx context.Context) GetBrandingThemeFontTitleOutput {
	return o
}

func (o GetBrandingThemeFontTitleOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeFontTitle] {
	return pulumix.Output[GetBrandingThemeFontTitle]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontTitleOutput) Bold() pulumi.BoolOutput {
	return o.ApplyT(func(v GetBrandingThemeFontTitle) bool { return v.Bold }).(pulumi.BoolOutput)
}

func (o GetBrandingThemeFontTitleOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeFontTitle) float64 { return v.Size }).(pulumi.Float64Output)
}

type GetBrandingThemeFontTitleArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeFontTitleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeFontTitle)(nil)).Elem()
}

func (o GetBrandingThemeFontTitleArrayOutput) ToGetBrandingThemeFontTitleArrayOutput() GetBrandingThemeFontTitleArrayOutput {
	return o
}

func (o GetBrandingThemeFontTitleArrayOutput) ToGetBrandingThemeFontTitleArrayOutputWithContext(ctx context.Context) GetBrandingThemeFontTitleArrayOutput {
	return o
}

func (o GetBrandingThemeFontTitleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeFontTitle] {
	return pulumix.Output[[]GetBrandingThemeFontTitle]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeFontTitleArrayOutput) Index(i pulumi.IntInput) GetBrandingThemeFontTitleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemeFontTitle {
		return vs[0].([]GetBrandingThemeFontTitle)[vs[1].(int)]
	}).(GetBrandingThemeFontTitleOutput)
}

type GetBrandingThemePageBackground struct {
	BackgroundColor    string `pulumi:"backgroundColor"`
	BackgroundImageUrl string `pulumi:"backgroundImageUrl"`
	PageLayout         string `pulumi:"pageLayout"`
}

// GetBrandingThemePageBackgroundInput is an input type that accepts GetBrandingThemePageBackgroundArgs and GetBrandingThemePageBackgroundOutput values.
// You can construct a concrete instance of `GetBrandingThemePageBackgroundInput` via:
//
//	GetBrandingThemePageBackgroundArgs{...}
type GetBrandingThemePageBackgroundInput interface {
	pulumi.Input

	ToGetBrandingThemePageBackgroundOutput() GetBrandingThemePageBackgroundOutput
	ToGetBrandingThemePageBackgroundOutputWithContext(context.Context) GetBrandingThemePageBackgroundOutput
}

type GetBrandingThemePageBackgroundArgs struct {
	BackgroundColor    pulumi.StringInput `pulumi:"backgroundColor"`
	BackgroundImageUrl pulumi.StringInput `pulumi:"backgroundImageUrl"`
	PageLayout         pulumi.StringInput `pulumi:"pageLayout"`
}

func (GetBrandingThemePageBackgroundArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemePageBackground)(nil)).Elem()
}

func (i GetBrandingThemePageBackgroundArgs) ToGetBrandingThemePageBackgroundOutput() GetBrandingThemePageBackgroundOutput {
	return i.ToGetBrandingThemePageBackgroundOutputWithContext(context.Background())
}

func (i GetBrandingThemePageBackgroundArgs) ToGetBrandingThemePageBackgroundOutputWithContext(ctx context.Context) GetBrandingThemePageBackgroundOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemePageBackgroundOutput)
}

func (i GetBrandingThemePageBackgroundArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemePageBackground] {
	return pulumix.Output[GetBrandingThemePageBackground]{
		OutputState: i.ToGetBrandingThemePageBackgroundOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemePageBackgroundArrayInput is an input type that accepts GetBrandingThemePageBackgroundArray and GetBrandingThemePageBackgroundArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemePageBackgroundArrayInput` via:
//
//	GetBrandingThemePageBackgroundArray{ GetBrandingThemePageBackgroundArgs{...} }
type GetBrandingThemePageBackgroundArrayInput interface {
	pulumi.Input

	ToGetBrandingThemePageBackgroundArrayOutput() GetBrandingThemePageBackgroundArrayOutput
	ToGetBrandingThemePageBackgroundArrayOutputWithContext(context.Context) GetBrandingThemePageBackgroundArrayOutput
}

type GetBrandingThemePageBackgroundArray []GetBrandingThemePageBackgroundInput

func (GetBrandingThemePageBackgroundArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemePageBackground)(nil)).Elem()
}

func (i GetBrandingThemePageBackgroundArray) ToGetBrandingThemePageBackgroundArrayOutput() GetBrandingThemePageBackgroundArrayOutput {
	return i.ToGetBrandingThemePageBackgroundArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemePageBackgroundArray) ToGetBrandingThemePageBackgroundArrayOutputWithContext(ctx context.Context) GetBrandingThemePageBackgroundArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemePageBackgroundArrayOutput)
}

func (i GetBrandingThemePageBackgroundArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemePageBackground] {
	return pulumix.Output[[]GetBrandingThemePageBackground]{
		OutputState: i.ToGetBrandingThemePageBackgroundArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemePageBackgroundOutput struct{ *pulumi.OutputState }

func (GetBrandingThemePageBackgroundOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemePageBackground)(nil)).Elem()
}

func (o GetBrandingThemePageBackgroundOutput) ToGetBrandingThemePageBackgroundOutput() GetBrandingThemePageBackgroundOutput {
	return o
}

func (o GetBrandingThemePageBackgroundOutput) ToGetBrandingThemePageBackgroundOutputWithContext(ctx context.Context) GetBrandingThemePageBackgroundOutput {
	return o
}

func (o GetBrandingThemePageBackgroundOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemePageBackground] {
	return pulumix.Output[GetBrandingThemePageBackground]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemePageBackgroundOutput) BackgroundColor() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemePageBackground) string { return v.BackgroundColor }).(pulumi.StringOutput)
}

func (o GetBrandingThemePageBackgroundOutput) BackgroundImageUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemePageBackground) string { return v.BackgroundImageUrl }).(pulumi.StringOutput)
}

func (o GetBrandingThemePageBackgroundOutput) PageLayout() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemePageBackground) string { return v.PageLayout }).(pulumi.StringOutput)
}

type GetBrandingThemePageBackgroundArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemePageBackgroundArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemePageBackground)(nil)).Elem()
}

func (o GetBrandingThemePageBackgroundArrayOutput) ToGetBrandingThemePageBackgroundArrayOutput() GetBrandingThemePageBackgroundArrayOutput {
	return o
}

func (o GetBrandingThemePageBackgroundArrayOutput) ToGetBrandingThemePageBackgroundArrayOutputWithContext(ctx context.Context) GetBrandingThemePageBackgroundArrayOutput {
	return o
}

func (o GetBrandingThemePageBackgroundArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemePageBackground] {
	return pulumix.Output[[]GetBrandingThemePageBackground]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemePageBackgroundArrayOutput) Index(i pulumi.IntInput) GetBrandingThemePageBackgroundOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemePageBackground {
		return vs[0].([]GetBrandingThemePageBackground)[vs[1].(int)]
	}).(GetBrandingThemePageBackgroundOutput)
}

type GetBrandingThemeWidget struct {
	HeaderTextAlignment string  `pulumi:"headerTextAlignment"`
	LogoHeight          float64 `pulumi:"logoHeight"`
	LogoPosition        string  `pulumi:"logoPosition"`
	LogoUrl             string  `pulumi:"logoUrl"`
	SocialButtonsLayout string  `pulumi:"socialButtonsLayout"`
}

// GetBrandingThemeWidgetInput is an input type that accepts GetBrandingThemeWidgetArgs and GetBrandingThemeWidgetOutput values.
// You can construct a concrete instance of `GetBrandingThemeWidgetInput` via:
//
//	GetBrandingThemeWidgetArgs{...}
type GetBrandingThemeWidgetInput interface {
	pulumi.Input

	ToGetBrandingThemeWidgetOutput() GetBrandingThemeWidgetOutput
	ToGetBrandingThemeWidgetOutputWithContext(context.Context) GetBrandingThemeWidgetOutput
}

type GetBrandingThemeWidgetArgs struct {
	HeaderTextAlignment pulumi.StringInput  `pulumi:"headerTextAlignment"`
	LogoHeight          pulumi.Float64Input `pulumi:"logoHeight"`
	LogoPosition        pulumi.StringInput  `pulumi:"logoPosition"`
	LogoUrl             pulumi.StringInput  `pulumi:"logoUrl"`
	SocialButtonsLayout pulumi.StringInput  `pulumi:"socialButtonsLayout"`
}

func (GetBrandingThemeWidgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeWidget)(nil)).Elem()
}

func (i GetBrandingThemeWidgetArgs) ToGetBrandingThemeWidgetOutput() GetBrandingThemeWidgetOutput {
	return i.ToGetBrandingThemeWidgetOutputWithContext(context.Background())
}

func (i GetBrandingThemeWidgetArgs) ToGetBrandingThemeWidgetOutputWithContext(ctx context.Context) GetBrandingThemeWidgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeWidgetOutput)
}

func (i GetBrandingThemeWidgetArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeWidget] {
	return pulumix.Output[GetBrandingThemeWidget]{
		OutputState: i.ToGetBrandingThemeWidgetOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingThemeWidgetArrayInput is an input type that accepts GetBrandingThemeWidgetArray and GetBrandingThemeWidgetArrayOutput values.
// You can construct a concrete instance of `GetBrandingThemeWidgetArrayInput` via:
//
//	GetBrandingThemeWidgetArray{ GetBrandingThemeWidgetArgs{...} }
type GetBrandingThemeWidgetArrayInput interface {
	pulumi.Input

	ToGetBrandingThemeWidgetArrayOutput() GetBrandingThemeWidgetArrayOutput
	ToGetBrandingThemeWidgetArrayOutputWithContext(context.Context) GetBrandingThemeWidgetArrayOutput
}

type GetBrandingThemeWidgetArray []GetBrandingThemeWidgetInput

func (GetBrandingThemeWidgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeWidget)(nil)).Elem()
}

func (i GetBrandingThemeWidgetArray) ToGetBrandingThemeWidgetArrayOutput() GetBrandingThemeWidgetArrayOutput {
	return i.ToGetBrandingThemeWidgetArrayOutputWithContext(context.Background())
}

func (i GetBrandingThemeWidgetArray) ToGetBrandingThemeWidgetArrayOutputWithContext(ctx context.Context) GetBrandingThemeWidgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingThemeWidgetArrayOutput)
}

func (i GetBrandingThemeWidgetArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeWidget] {
	return pulumix.Output[[]GetBrandingThemeWidget]{
		OutputState: i.ToGetBrandingThemeWidgetArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingThemeWidgetOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeWidgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingThemeWidget)(nil)).Elem()
}

func (o GetBrandingThemeWidgetOutput) ToGetBrandingThemeWidgetOutput() GetBrandingThemeWidgetOutput {
	return o
}

func (o GetBrandingThemeWidgetOutput) ToGetBrandingThemeWidgetOutputWithContext(ctx context.Context) GetBrandingThemeWidgetOutput {
	return o
}

func (o GetBrandingThemeWidgetOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingThemeWidget] {
	return pulumix.Output[GetBrandingThemeWidget]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeWidgetOutput) HeaderTextAlignment() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeWidget) string { return v.HeaderTextAlignment }).(pulumi.StringOutput)
}

func (o GetBrandingThemeWidgetOutput) LogoHeight() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrandingThemeWidget) float64 { return v.LogoHeight }).(pulumi.Float64Output)
}

func (o GetBrandingThemeWidgetOutput) LogoPosition() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeWidget) string { return v.LogoPosition }).(pulumi.StringOutput)
}

func (o GetBrandingThemeWidgetOutput) LogoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeWidget) string { return v.LogoUrl }).(pulumi.StringOutput)
}

func (o GetBrandingThemeWidgetOutput) SocialButtonsLayout() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingThemeWidget) string { return v.SocialButtonsLayout }).(pulumi.StringOutput)
}

type GetBrandingThemeWidgetArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingThemeWidgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingThemeWidget)(nil)).Elem()
}

func (o GetBrandingThemeWidgetArrayOutput) ToGetBrandingThemeWidgetArrayOutput() GetBrandingThemeWidgetArrayOutput {
	return o
}

func (o GetBrandingThemeWidgetArrayOutput) ToGetBrandingThemeWidgetArrayOutputWithContext(ctx context.Context) GetBrandingThemeWidgetArrayOutput {
	return o
}

func (o GetBrandingThemeWidgetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingThemeWidget] {
	return pulumix.Output[[]GetBrandingThemeWidget]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingThemeWidgetArrayOutput) Index(i pulumi.IntInput) GetBrandingThemeWidgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingThemeWidget {
		return vs[0].([]GetBrandingThemeWidget)[vs[1].(int)]
	}).(GetBrandingThemeWidgetOutput)
}

type GetBrandingUniversalLogin struct {
	Body string `pulumi:"body"`
}

// GetBrandingUniversalLoginInput is an input type that accepts GetBrandingUniversalLoginArgs and GetBrandingUniversalLoginOutput values.
// You can construct a concrete instance of `GetBrandingUniversalLoginInput` via:
//
//	GetBrandingUniversalLoginArgs{...}
type GetBrandingUniversalLoginInput interface {
	pulumi.Input

	ToGetBrandingUniversalLoginOutput() GetBrandingUniversalLoginOutput
	ToGetBrandingUniversalLoginOutputWithContext(context.Context) GetBrandingUniversalLoginOutput
}

type GetBrandingUniversalLoginArgs struct {
	Body pulumi.StringInput `pulumi:"body"`
}

func (GetBrandingUniversalLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingUniversalLogin)(nil)).Elem()
}

func (i GetBrandingUniversalLoginArgs) ToGetBrandingUniversalLoginOutput() GetBrandingUniversalLoginOutput {
	return i.ToGetBrandingUniversalLoginOutputWithContext(context.Background())
}

func (i GetBrandingUniversalLoginArgs) ToGetBrandingUniversalLoginOutputWithContext(ctx context.Context) GetBrandingUniversalLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingUniversalLoginOutput)
}

func (i GetBrandingUniversalLoginArgs) ToOutput(ctx context.Context) pulumix.Output[GetBrandingUniversalLogin] {
	return pulumix.Output[GetBrandingUniversalLogin]{
		OutputState: i.ToGetBrandingUniversalLoginOutputWithContext(ctx).OutputState,
	}
}

// GetBrandingUniversalLoginArrayInput is an input type that accepts GetBrandingUniversalLoginArray and GetBrandingUniversalLoginArrayOutput values.
// You can construct a concrete instance of `GetBrandingUniversalLoginArrayInput` via:
//
//	GetBrandingUniversalLoginArray{ GetBrandingUniversalLoginArgs{...} }
type GetBrandingUniversalLoginArrayInput interface {
	pulumi.Input

	ToGetBrandingUniversalLoginArrayOutput() GetBrandingUniversalLoginArrayOutput
	ToGetBrandingUniversalLoginArrayOutputWithContext(context.Context) GetBrandingUniversalLoginArrayOutput
}

type GetBrandingUniversalLoginArray []GetBrandingUniversalLoginInput

func (GetBrandingUniversalLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingUniversalLogin)(nil)).Elem()
}

func (i GetBrandingUniversalLoginArray) ToGetBrandingUniversalLoginArrayOutput() GetBrandingUniversalLoginArrayOutput {
	return i.ToGetBrandingUniversalLoginArrayOutputWithContext(context.Background())
}

func (i GetBrandingUniversalLoginArray) ToGetBrandingUniversalLoginArrayOutputWithContext(ctx context.Context) GetBrandingUniversalLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrandingUniversalLoginArrayOutput)
}

func (i GetBrandingUniversalLoginArray) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingUniversalLogin] {
	return pulumix.Output[[]GetBrandingUniversalLogin]{
		OutputState: i.ToGetBrandingUniversalLoginArrayOutputWithContext(ctx).OutputState,
	}
}

type GetBrandingUniversalLoginOutput struct{ *pulumi.OutputState }

func (GetBrandingUniversalLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrandingUniversalLogin)(nil)).Elem()
}

func (o GetBrandingUniversalLoginOutput) ToGetBrandingUniversalLoginOutput() GetBrandingUniversalLoginOutput {
	return o
}

func (o GetBrandingUniversalLoginOutput) ToGetBrandingUniversalLoginOutputWithContext(ctx context.Context) GetBrandingUniversalLoginOutput {
	return o
}

func (o GetBrandingUniversalLoginOutput) ToOutput(ctx context.Context) pulumix.Output[GetBrandingUniversalLogin] {
	return pulumix.Output[GetBrandingUniversalLogin]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingUniversalLoginOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrandingUniversalLogin) string { return v.Body }).(pulumi.StringOutput)
}

type GetBrandingUniversalLoginArrayOutput struct{ *pulumi.OutputState }

func (GetBrandingUniversalLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrandingUniversalLogin)(nil)).Elem()
}

func (o GetBrandingUniversalLoginArrayOutput) ToGetBrandingUniversalLoginArrayOutput() GetBrandingUniversalLoginArrayOutput {
	return o
}

func (o GetBrandingUniversalLoginArrayOutput) ToGetBrandingUniversalLoginArrayOutputWithContext(ctx context.Context) GetBrandingUniversalLoginArrayOutput {
	return o
}

func (o GetBrandingUniversalLoginArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetBrandingUniversalLogin] {
	return pulumix.Output[[]GetBrandingUniversalLogin]{
		OutputState: o.OutputState,
	}
}

func (o GetBrandingUniversalLoginArrayOutput) Index(i pulumi.IntInput) GetBrandingUniversalLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrandingUniversalLogin {
		return vs[0].([]GetBrandingUniversalLogin)[vs[1].(int)]
	}).(GetBrandingUniversalLoginOutput)
}

type GetClientAddon struct {
	Aws                   []GetClientAddonAw                   `pulumi:"aws"`
	AzureBlobs            []GetClientAddonAzureBlob            `pulumi:"azureBlobs"`
	AzureSbs              []GetClientAddonAzureSb              `pulumi:"azureSbs"`
	Boxes                 []GetClientAddonBox                  `pulumi:"boxes"`
	Cloudbees             []GetClientAddonCloudbee             `pulumi:"cloudbees"`
	Concurs               []GetClientAddonConcur               `pulumi:"concurs"`
	Dropboxes             []GetClientAddonDropbox              `pulumi:"dropboxes"`
	Echosigns             []GetClientAddonEchosign             `pulumi:"echosigns"`
	Egnytes               []GetClientAddonEgnyte               `pulumi:"egnytes"`
	Firebases             []GetClientAddonFirebase             `pulumi:"firebases"`
	Layers                []GetClientAddonLayer                `pulumi:"layers"`
	Mscrms                []GetClientAddonMscrm                `pulumi:"mscrms"`
	Newrelics             []GetClientAddonNewrelic             `pulumi:"newrelics"`
	Office365s            []GetClientAddonOffice365            `pulumi:"office365s"`
	Rms                   []GetClientAddonRm                   `pulumi:"rms"`
	SalesforceApis        []GetClientAddonSalesforceApi        `pulumi:"salesforceApis"`
	SalesforceSandboxApis []GetClientAddonSalesforceSandboxApi `pulumi:"salesforceSandboxApis"`
	Salesforces           []GetClientAddonSalesforce           `pulumi:"salesforces"`
	Samlps                []GetClientAddonSamlp                `pulumi:"samlps"`
	SapApis               []GetClientAddonSapApi               `pulumi:"sapApis"`
	Sentries              []GetClientAddonSentry               `pulumi:"sentries"`
	Sharepoints           []GetClientAddonSharepoint           `pulumi:"sharepoints"`
	Slacks                []GetClientAddonSlack                `pulumi:"slacks"`
	Springcms             []GetClientAddonSpringcm             `pulumi:"springcms"`
	SsoIntegrations       []GetClientAddonSsoIntegration       `pulumi:"ssoIntegrations"`
	Wams                  []GetClientAddonWam                  `pulumi:"wams"`
	Wsfeds                []GetClientAddonWsfed                `pulumi:"wsfeds"`
	Zendesks              []GetClientAddonZendesk              `pulumi:"zendesks"`
	Zooms                 []GetClientAddonZoom                 `pulumi:"zooms"`
}

// GetClientAddonInput is an input type that accepts GetClientAddonArgs and GetClientAddonOutput values.
// You can construct a concrete instance of `GetClientAddonInput` via:
//
//	GetClientAddonArgs{...}
type GetClientAddonInput interface {
	pulumi.Input

	ToGetClientAddonOutput() GetClientAddonOutput
	ToGetClientAddonOutputWithContext(context.Context) GetClientAddonOutput
}

type GetClientAddonArgs struct {
	Aws                   GetClientAddonAwArrayInput                   `pulumi:"aws"`
	AzureBlobs            GetClientAddonAzureBlobArrayInput            `pulumi:"azureBlobs"`
	AzureSbs              GetClientAddonAzureSbArrayInput              `pulumi:"azureSbs"`
	Boxes                 GetClientAddonBoxArrayInput                  `pulumi:"boxes"`
	Cloudbees             GetClientAddonCloudbeeArrayInput             `pulumi:"cloudbees"`
	Concurs               GetClientAddonConcurArrayInput               `pulumi:"concurs"`
	Dropboxes             GetClientAddonDropboxArrayInput              `pulumi:"dropboxes"`
	Echosigns             GetClientAddonEchosignArrayInput             `pulumi:"echosigns"`
	Egnytes               GetClientAddonEgnyteArrayInput               `pulumi:"egnytes"`
	Firebases             GetClientAddonFirebaseArrayInput             `pulumi:"firebases"`
	Layers                GetClientAddonLayerArrayInput                `pulumi:"layers"`
	Mscrms                GetClientAddonMscrmArrayInput                `pulumi:"mscrms"`
	Newrelics             GetClientAddonNewrelicArrayInput             `pulumi:"newrelics"`
	Office365s            GetClientAddonOffice365ArrayInput            `pulumi:"office365s"`
	Rms                   GetClientAddonRmArrayInput                   `pulumi:"rms"`
	SalesforceApis        GetClientAddonSalesforceApiArrayInput        `pulumi:"salesforceApis"`
	SalesforceSandboxApis GetClientAddonSalesforceSandboxApiArrayInput `pulumi:"salesforceSandboxApis"`
	Salesforces           GetClientAddonSalesforceArrayInput           `pulumi:"salesforces"`
	Samlps                GetClientAddonSamlpArrayInput                `pulumi:"samlps"`
	SapApis               GetClientAddonSapApiArrayInput               `pulumi:"sapApis"`
	Sentries              GetClientAddonSentryArrayInput               `pulumi:"sentries"`
	Sharepoints           GetClientAddonSharepointArrayInput           `pulumi:"sharepoints"`
	Slacks                GetClientAddonSlackArrayInput                `pulumi:"slacks"`
	Springcms             GetClientAddonSpringcmArrayInput             `pulumi:"springcms"`
	SsoIntegrations       GetClientAddonSsoIntegrationArrayInput       `pulumi:"ssoIntegrations"`
	Wams                  GetClientAddonWamArrayInput                  `pulumi:"wams"`
	Wsfeds                GetClientAddonWsfedArrayInput                `pulumi:"wsfeds"`
	Zendesks              GetClientAddonZendeskArrayInput              `pulumi:"zendesks"`
	Zooms                 GetClientAddonZoomArrayInput                 `pulumi:"zooms"`
}

func (GetClientAddonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddon)(nil)).Elem()
}

func (i GetClientAddonArgs) ToGetClientAddonOutput() GetClientAddonOutput {
	return i.ToGetClientAddonOutputWithContext(context.Background())
}

func (i GetClientAddonArgs) ToGetClientAddonOutputWithContext(ctx context.Context) GetClientAddonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonOutput)
}

func (i GetClientAddonArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddon] {
	return pulumix.Output[GetClientAddon]{
		OutputState: i.ToGetClientAddonOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonArrayInput is an input type that accepts GetClientAddonArray and GetClientAddonArrayOutput values.
// You can construct a concrete instance of `GetClientAddonArrayInput` via:
//
//	GetClientAddonArray{ GetClientAddonArgs{...} }
type GetClientAddonArrayInput interface {
	pulumi.Input

	ToGetClientAddonArrayOutput() GetClientAddonArrayOutput
	ToGetClientAddonArrayOutputWithContext(context.Context) GetClientAddonArrayOutput
}

type GetClientAddonArray []GetClientAddonInput

func (GetClientAddonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddon)(nil)).Elem()
}

func (i GetClientAddonArray) ToGetClientAddonArrayOutput() GetClientAddonArrayOutput {
	return i.ToGetClientAddonArrayOutputWithContext(context.Background())
}

func (i GetClientAddonArray) ToGetClientAddonArrayOutputWithContext(ctx context.Context) GetClientAddonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonArrayOutput)
}

func (i GetClientAddonArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddon] {
	return pulumix.Output[[]GetClientAddon]{
		OutputState: i.ToGetClientAddonArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonOutput struct{ *pulumi.OutputState }

func (GetClientAddonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddon)(nil)).Elem()
}

func (o GetClientAddonOutput) ToGetClientAddonOutput() GetClientAddonOutput {
	return o
}

func (o GetClientAddonOutput) ToGetClientAddonOutputWithContext(ctx context.Context) GetClientAddonOutput {
	return o
}

func (o GetClientAddonOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddon] {
	return pulumix.Output[GetClientAddon]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonOutput) Aws() GetClientAddonAwArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonAw { return v.Aws }).(GetClientAddonAwArrayOutput)
}

func (o GetClientAddonOutput) AzureBlobs() GetClientAddonAzureBlobArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonAzureBlob { return v.AzureBlobs }).(GetClientAddonAzureBlobArrayOutput)
}

func (o GetClientAddonOutput) AzureSbs() GetClientAddonAzureSbArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonAzureSb { return v.AzureSbs }).(GetClientAddonAzureSbArrayOutput)
}

func (o GetClientAddonOutput) Boxes() GetClientAddonBoxArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonBox { return v.Boxes }).(GetClientAddonBoxArrayOutput)
}

func (o GetClientAddonOutput) Cloudbees() GetClientAddonCloudbeeArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonCloudbee { return v.Cloudbees }).(GetClientAddonCloudbeeArrayOutput)
}

func (o GetClientAddonOutput) Concurs() GetClientAddonConcurArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonConcur { return v.Concurs }).(GetClientAddonConcurArrayOutput)
}

func (o GetClientAddonOutput) Dropboxes() GetClientAddonDropboxArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonDropbox { return v.Dropboxes }).(GetClientAddonDropboxArrayOutput)
}

func (o GetClientAddonOutput) Echosigns() GetClientAddonEchosignArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonEchosign { return v.Echosigns }).(GetClientAddonEchosignArrayOutput)
}

func (o GetClientAddonOutput) Egnytes() GetClientAddonEgnyteArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonEgnyte { return v.Egnytes }).(GetClientAddonEgnyteArrayOutput)
}

func (o GetClientAddonOutput) Firebases() GetClientAddonFirebaseArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonFirebase { return v.Firebases }).(GetClientAddonFirebaseArrayOutput)
}

func (o GetClientAddonOutput) Layers() GetClientAddonLayerArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonLayer { return v.Layers }).(GetClientAddonLayerArrayOutput)
}

func (o GetClientAddonOutput) Mscrms() GetClientAddonMscrmArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonMscrm { return v.Mscrms }).(GetClientAddonMscrmArrayOutput)
}

func (o GetClientAddonOutput) Newrelics() GetClientAddonNewrelicArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonNewrelic { return v.Newrelics }).(GetClientAddonNewrelicArrayOutput)
}

func (o GetClientAddonOutput) Office365s() GetClientAddonOffice365ArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonOffice365 { return v.Office365s }).(GetClientAddonOffice365ArrayOutput)
}

func (o GetClientAddonOutput) Rms() GetClientAddonRmArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonRm { return v.Rms }).(GetClientAddonRmArrayOutput)
}

func (o GetClientAddonOutput) SalesforceApis() GetClientAddonSalesforceApiArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSalesforceApi { return v.SalesforceApis }).(GetClientAddonSalesforceApiArrayOutput)
}

func (o GetClientAddonOutput) SalesforceSandboxApis() GetClientAddonSalesforceSandboxApiArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSalesforceSandboxApi { return v.SalesforceSandboxApis }).(GetClientAddonSalesforceSandboxApiArrayOutput)
}

func (o GetClientAddonOutput) Salesforces() GetClientAddonSalesforceArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSalesforce { return v.Salesforces }).(GetClientAddonSalesforceArrayOutput)
}

func (o GetClientAddonOutput) Samlps() GetClientAddonSamlpArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSamlp { return v.Samlps }).(GetClientAddonSamlpArrayOutput)
}

func (o GetClientAddonOutput) SapApis() GetClientAddonSapApiArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSapApi { return v.SapApis }).(GetClientAddonSapApiArrayOutput)
}

func (o GetClientAddonOutput) Sentries() GetClientAddonSentryArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSentry { return v.Sentries }).(GetClientAddonSentryArrayOutput)
}

func (o GetClientAddonOutput) Sharepoints() GetClientAddonSharepointArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSharepoint { return v.Sharepoints }).(GetClientAddonSharepointArrayOutput)
}

func (o GetClientAddonOutput) Slacks() GetClientAddonSlackArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSlack { return v.Slacks }).(GetClientAddonSlackArrayOutput)
}

func (o GetClientAddonOutput) Springcms() GetClientAddonSpringcmArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSpringcm { return v.Springcms }).(GetClientAddonSpringcmArrayOutput)
}

func (o GetClientAddonOutput) SsoIntegrations() GetClientAddonSsoIntegrationArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonSsoIntegration { return v.SsoIntegrations }).(GetClientAddonSsoIntegrationArrayOutput)
}

func (o GetClientAddonOutput) Wams() GetClientAddonWamArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonWam { return v.Wams }).(GetClientAddonWamArrayOutput)
}

func (o GetClientAddonOutput) Wsfeds() GetClientAddonWsfedArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonWsfed { return v.Wsfeds }).(GetClientAddonWsfedArrayOutput)
}

func (o GetClientAddonOutput) Zendesks() GetClientAddonZendeskArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonZendesk { return v.Zendesks }).(GetClientAddonZendeskArrayOutput)
}

func (o GetClientAddonOutput) Zooms() GetClientAddonZoomArrayOutput {
	return o.ApplyT(func(v GetClientAddon) []GetClientAddonZoom { return v.Zooms }).(GetClientAddonZoomArrayOutput)
}

type GetClientAddonArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddon)(nil)).Elem()
}

func (o GetClientAddonArrayOutput) ToGetClientAddonArrayOutput() GetClientAddonArrayOutput {
	return o
}

func (o GetClientAddonArrayOutput) ToGetClientAddonArrayOutputWithContext(ctx context.Context) GetClientAddonArrayOutput {
	return o
}

func (o GetClientAddonArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddon] {
	return pulumix.Output[[]GetClientAddon]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonArrayOutput) Index(i pulumi.IntInput) GetClientAddonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddon {
		return vs[0].([]GetClientAddon)[vs[1].(int)]
	}).(GetClientAddonOutput)
}

type GetClientAddonAw struct {
	LifetimeInSeconds int    `pulumi:"lifetimeInSeconds"`
	Principal         string `pulumi:"principal"`
	Role              string `pulumi:"role"`
}

// GetClientAddonAwInput is an input type that accepts GetClientAddonAwArgs and GetClientAddonAwOutput values.
// You can construct a concrete instance of `GetClientAddonAwInput` via:
//
//	GetClientAddonAwArgs{...}
type GetClientAddonAwInput interface {
	pulumi.Input

	ToGetClientAddonAwOutput() GetClientAddonAwOutput
	ToGetClientAddonAwOutputWithContext(context.Context) GetClientAddonAwOutput
}

type GetClientAddonAwArgs struct {
	LifetimeInSeconds pulumi.IntInput    `pulumi:"lifetimeInSeconds"`
	Principal         pulumi.StringInput `pulumi:"principal"`
	Role              pulumi.StringInput `pulumi:"role"`
}

func (GetClientAddonAwArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonAw)(nil)).Elem()
}

func (i GetClientAddonAwArgs) ToGetClientAddonAwOutput() GetClientAddonAwOutput {
	return i.ToGetClientAddonAwOutputWithContext(context.Background())
}

func (i GetClientAddonAwArgs) ToGetClientAddonAwOutputWithContext(ctx context.Context) GetClientAddonAwOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonAwOutput)
}

func (i GetClientAddonAwArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonAw] {
	return pulumix.Output[GetClientAddonAw]{
		OutputState: i.ToGetClientAddonAwOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonAwArrayInput is an input type that accepts GetClientAddonAwArray and GetClientAddonAwArrayOutput values.
// You can construct a concrete instance of `GetClientAddonAwArrayInput` via:
//
//	GetClientAddonAwArray{ GetClientAddonAwArgs{...} }
type GetClientAddonAwArrayInput interface {
	pulumi.Input

	ToGetClientAddonAwArrayOutput() GetClientAddonAwArrayOutput
	ToGetClientAddonAwArrayOutputWithContext(context.Context) GetClientAddonAwArrayOutput
}

type GetClientAddonAwArray []GetClientAddonAwInput

func (GetClientAddonAwArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonAw)(nil)).Elem()
}

func (i GetClientAddonAwArray) ToGetClientAddonAwArrayOutput() GetClientAddonAwArrayOutput {
	return i.ToGetClientAddonAwArrayOutputWithContext(context.Background())
}

func (i GetClientAddonAwArray) ToGetClientAddonAwArrayOutputWithContext(ctx context.Context) GetClientAddonAwArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonAwArrayOutput)
}

func (i GetClientAddonAwArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonAw] {
	return pulumix.Output[[]GetClientAddonAw]{
		OutputState: i.ToGetClientAddonAwArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonAwOutput struct{ *pulumi.OutputState }

func (GetClientAddonAwOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonAw)(nil)).Elem()
}

func (o GetClientAddonAwOutput) ToGetClientAddonAwOutput() GetClientAddonAwOutput {
	return o
}

func (o GetClientAddonAwOutput) ToGetClientAddonAwOutputWithContext(ctx context.Context) GetClientAddonAwOutput {
	return o
}

func (o GetClientAddonAwOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonAw] {
	return pulumix.Output[GetClientAddonAw]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonAwOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientAddonAw) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetClientAddonAwOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAw) string { return v.Principal }).(pulumi.StringOutput)
}

func (o GetClientAddonAwOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAw) string { return v.Role }).(pulumi.StringOutput)
}

type GetClientAddonAwArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonAwArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonAw)(nil)).Elem()
}

func (o GetClientAddonAwArrayOutput) ToGetClientAddonAwArrayOutput() GetClientAddonAwArrayOutput {
	return o
}

func (o GetClientAddonAwArrayOutput) ToGetClientAddonAwArrayOutputWithContext(ctx context.Context) GetClientAddonAwArrayOutput {
	return o
}

func (o GetClientAddonAwArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonAw] {
	return pulumix.Output[[]GetClientAddonAw]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonAwArrayOutput) Index(i pulumi.IntInput) GetClientAddonAwOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonAw {
		return vs[0].([]GetClientAddonAw)[vs[1].(int)]
	}).(GetClientAddonAwOutput)
}

type GetClientAddonAzureBlob struct {
	AccountName      string `pulumi:"accountName"`
	BlobDelete       bool   `pulumi:"blobDelete"`
	BlobName         string `pulumi:"blobName"`
	BlobRead         bool   `pulumi:"blobRead"`
	BlobWrite        bool   `pulumi:"blobWrite"`
	ContainerDelete  bool   `pulumi:"containerDelete"`
	ContainerList    bool   `pulumi:"containerList"`
	ContainerName    string `pulumi:"containerName"`
	ContainerRead    bool   `pulumi:"containerRead"`
	ContainerWrite   bool   `pulumi:"containerWrite"`
	Expiration       int    `pulumi:"expiration"`
	SignedIdentifier string `pulumi:"signedIdentifier"`
	StorageAccessKey string `pulumi:"storageAccessKey"`
}

// GetClientAddonAzureBlobInput is an input type that accepts GetClientAddonAzureBlobArgs and GetClientAddonAzureBlobOutput values.
// You can construct a concrete instance of `GetClientAddonAzureBlobInput` via:
//
//	GetClientAddonAzureBlobArgs{...}
type GetClientAddonAzureBlobInput interface {
	pulumi.Input

	ToGetClientAddonAzureBlobOutput() GetClientAddonAzureBlobOutput
	ToGetClientAddonAzureBlobOutputWithContext(context.Context) GetClientAddonAzureBlobOutput
}

type GetClientAddonAzureBlobArgs struct {
	AccountName      pulumi.StringInput `pulumi:"accountName"`
	BlobDelete       pulumi.BoolInput   `pulumi:"blobDelete"`
	BlobName         pulumi.StringInput `pulumi:"blobName"`
	BlobRead         pulumi.BoolInput   `pulumi:"blobRead"`
	BlobWrite        pulumi.BoolInput   `pulumi:"blobWrite"`
	ContainerDelete  pulumi.BoolInput   `pulumi:"containerDelete"`
	ContainerList    pulumi.BoolInput   `pulumi:"containerList"`
	ContainerName    pulumi.StringInput `pulumi:"containerName"`
	ContainerRead    pulumi.BoolInput   `pulumi:"containerRead"`
	ContainerWrite   pulumi.BoolInput   `pulumi:"containerWrite"`
	Expiration       pulumi.IntInput    `pulumi:"expiration"`
	SignedIdentifier pulumi.StringInput `pulumi:"signedIdentifier"`
	StorageAccessKey pulumi.StringInput `pulumi:"storageAccessKey"`
}

func (GetClientAddonAzureBlobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonAzureBlob)(nil)).Elem()
}

func (i GetClientAddonAzureBlobArgs) ToGetClientAddonAzureBlobOutput() GetClientAddonAzureBlobOutput {
	return i.ToGetClientAddonAzureBlobOutputWithContext(context.Background())
}

func (i GetClientAddonAzureBlobArgs) ToGetClientAddonAzureBlobOutputWithContext(ctx context.Context) GetClientAddonAzureBlobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonAzureBlobOutput)
}

func (i GetClientAddonAzureBlobArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonAzureBlob] {
	return pulumix.Output[GetClientAddonAzureBlob]{
		OutputState: i.ToGetClientAddonAzureBlobOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonAzureBlobArrayInput is an input type that accepts GetClientAddonAzureBlobArray and GetClientAddonAzureBlobArrayOutput values.
// You can construct a concrete instance of `GetClientAddonAzureBlobArrayInput` via:
//
//	GetClientAddonAzureBlobArray{ GetClientAddonAzureBlobArgs{...} }
type GetClientAddonAzureBlobArrayInput interface {
	pulumi.Input

	ToGetClientAddonAzureBlobArrayOutput() GetClientAddonAzureBlobArrayOutput
	ToGetClientAddonAzureBlobArrayOutputWithContext(context.Context) GetClientAddonAzureBlobArrayOutput
}

type GetClientAddonAzureBlobArray []GetClientAddonAzureBlobInput

func (GetClientAddonAzureBlobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonAzureBlob)(nil)).Elem()
}

func (i GetClientAddonAzureBlobArray) ToGetClientAddonAzureBlobArrayOutput() GetClientAddonAzureBlobArrayOutput {
	return i.ToGetClientAddonAzureBlobArrayOutputWithContext(context.Background())
}

func (i GetClientAddonAzureBlobArray) ToGetClientAddonAzureBlobArrayOutputWithContext(ctx context.Context) GetClientAddonAzureBlobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonAzureBlobArrayOutput)
}

func (i GetClientAddonAzureBlobArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonAzureBlob] {
	return pulumix.Output[[]GetClientAddonAzureBlob]{
		OutputState: i.ToGetClientAddonAzureBlobArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonAzureBlobOutput struct{ *pulumi.OutputState }

func (GetClientAddonAzureBlobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonAzureBlob)(nil)).Elem()
}

func (o GetClientAddonAzureBlobOutput) ToGetClientAddonAzureBlobOutput() GetClientAddonAzureBlobOutput {
	return o
}

func (o GetClientAddonAzureBlobOutput) ToGetClientAddonAzureBlobOutputWithContext(ctx context.Context) GetClientAddonAzureBlobOutput {
	return o
}

func (o GetClientAddonAzureBlobOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonAzureBlob] {
	return pulumix.Output[GetClientAddonAzureBlob]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonAzureBlobOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) string { return v.AccountName }).(pulumi.StringOutput)
}

func (o GetClientAddonAzureBlobOutput) BlobDelete() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) bool { return v.BlobDelete }).(pulumi.BoolOutput)
}

func (o GetClientAddonAzureBlobOutput) BlobName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) string { return v.BlobName }).(pulumi.StringOutput)
}

func (o GetClientAddonAzureBlobOutput) BlobRead() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) bool { return v.BlobRead }).(pulumi.BoolOutput)
}

func (o GetClientAddonAzureBlobOutput) BlobWrite() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) bool { return v.BlobWrite }).(pulumi.BoolOutput)
}

func (o GetClientAddonAzureBlobOutput) ContainerDelete() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) bool { return v.ContainerDelete }).(pulumi.BoolOutput)
}

func (o GetClientAddonAzureBlobOutput) ContainerList() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) bool { return v.ContainerList }).(pulumi.BoolOutput)
}

func (o GetClientAddonAzureBlobOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) string { return v.ContainerName }).(pulumi.StringOutput)
}

func (o GetClientAddonAzureBlobOutput) ContainerRead() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) bool { return v.ContainerRead }).(pulumi.BoolOutput)
}

func (o GetClientAddonAzureBlobOutput) ContainerWrite() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) bool { return v.ContainerWrite }).(pulumi.BoolOutput)
}

func (o GetClientAddonAzureBlobOutput) Expiration() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) int { return v.Expiration }).(pulumi.IntOutput)
}

func (o GetClientAddonAzureBlobOutput) SignedIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) string { return v.SignedIdentifier }).(pulumi.StringOutput)
}

func (o GetClientAddonAzureBlobOutput) StorageAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAzureBlob) string { return v.StorageAccessKey }).(pulumi.StringOutput)
}

type GetClientAddonAzureBlobArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonAzureBlobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonAzureBlob)(nil)).Elem()
}

func (o GetClientAddonAzureBlobArrayOutput) ToGetClientAddonAzureBlobArrayOutput() GetClientAddonAzureBlobArrayOutput {
	return o
}

func (o GetClientAddonAzureBlobArrayOutput) ToGetClientAddonAzureBlobArrayOutputWithContext(ctx context.Context) GetClientAddonAzureBlobArrayOutput {
	return o
}

func (o GetClientAddonAzureBlobArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonAzureBlob] {
	return pulumix.Output[[]GetClientAddonAzureBlob]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonAzureBlobArrayOutput) Index(i pulumi.IntInput) GetClientAddonAzureBlobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonAzureBlob {
		return vs[0].([]GetClientAddonAzureBlob)[vs[1].(int)]
	}).(GetClientAddonAzureBlobOutput)
}

type GetClientAddonAzureSb struct {
	EntityPath string `pulumi:"entityPath"`
	Expiration int    `pulumi:"expiration"`
	Namespace  string `pulumi:"namespace"`
	SasKey     string `pulumi:"sasKey"`
	SasKeyName string `pulumi:"sasKeyName"`
}

// GetClientAddonAzureSbInput is an input type that accepts GetClientAddonAzureSbArgs and GetClientAddonAzureSbOutput values.
// You can construct a concrete instance of `GetClientAddonAzureSbInput` via:
//
//	GetClientAddonAzureSbArgs{...}
type GetClientAddonAzureSbInput interface {
	pulumi.Input

	ToGetClientAddonAzureSbOutput() GetClientAddonAzureSbOutput
	ToGetClientAddonAzureSbOutputWithContext(context.Context) GetClientAddonAzureSbOutput
}

type GetClientAddonAzureSbArgs struct {
	EntityPath pulumi.StringInput `pulumi:"entityPath"`
	Expiration pulumi.IntInput    `pulumi:"expiration"`
	Namespace  pulumi.StringInput `pulumi:"namespace"`
	SasKey     pulumi.StringInput `pulumi:"sasKey"`
	SasKeyName pulumi.StringInput `pulumi:"sasKeyName"`
}

func (GetClientAddonAzureSbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonAzureSb)(nil)).Elem()
}

func (i GetClientAddonAzureSbArgs) ToGetClientAddonAzureSbOutput() GetClientAddonAzureSbOutput {
	return i.ToGetClientAddonAzureSbOutputWithContext(context.Background())
}

func (i GetClientAddonAzureSbArgs) ToGetClientAddonAzureSbOutputWithContext(ctx context.Context) GetClientAddonAzureSbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonAzureSbOutput)
}

func (i GetClientAddonAzureSbArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonAzureSb] {
	return pulumix.Output[GetClientAddonAzureSb]{
		OutputState: i.ToGetClientAddonAzureSbOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonAzureSbArrayInput is an input type that accepts GetClientAddonAzureSbArray and GetClientAddonAzureSbArrayOutput values.
// You can construct a concrete instance of `GetClientAddonAzureSbArrayInput` via:
//
//	GetClientAddonAzureSbArray{ GetClientAddonAzureSbArgs{...} }
type GetClientAddonAzureSbArrayInput interface {
	pulumi.Input

	ToGetClientAddonAzureSbArrayOutput() GetClientAddonAzureSbArrayOutput
	ToGetClientAddonAzureSbArrayOutputWithContext(context.Context) GetClientAddonAzureSbArrayOutput
}

type GetClientAddonAzureSbArray []GetClientAddonAzureSbInput

func (GetClientAddonAzureSbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonAzureSb)(nil)).Elem()
}

func (i GetClientAddonAzureSbArray) ToGetClientAddonAzureSbArrayOutput() GetClientAddonAzureSbArrayOutput {
	return i.ToGetClientAddonAzureSbArrayOutputWithContext(context.Background())
}

func (i GetClientAddonAzureSbArray) ToGetClientAddonAzureSbArrayOutputWithContext(ctx context.Context) GetClientAddonAzureSbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonAzureSbArrayOutput)
}

func (i GetClientAddonAzureSbArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonAzureSb] {
	return pulumix.Output[[]GetClientAddonAzureSb]{
		OutputState: i.ToGetClientAddonAzureSbArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonAzureSbOutput struct{ *pulumi.OutputState }

func (GetClientAddonAzureSbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonAzureSb)(nil)).Elem()
}

func (o GetClientAddonAzureSbOutput) ToGetClientAddonAzureSbOutput() GetClientAddonAzureSbOutput {
	return o
}

func (o GetClientAddonAzureSbOutput) ToGetClientAddonAzureSbOutputWithContext(ctx context.Context) GetClientAddonAzureSbOutput {
	return o
}

func (o GetClientAddonAzureSbOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonAzureSb] {
	return pulumix.Output[GetClientAddonAzureSb]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonAzureSbOutput) EntityPath() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAzureSb) string { return v.EntityPath }).(pulumi.StringOutput)
}

func (o GetClientAddonAzureSbOutput) Expiration() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientAddonAzureSb) int { return v.Expiration }).(pulumi.IntOutput)
}

func (o GetClientAddonAzureSbOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAzureSb) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o GetClientAddonAzureSbOutput) SasKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAzureSb) string { return v.SasKey }).(pulumi.StringOutput)
}

func (o GetClientAddonAzureSbOutput) SasKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonAzureSb) string { return v.SasKeyName }).(pulumi.StringOutput)
}

type GetClientAddonAzureSbArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonAzureSbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonAzureSb)(nil)).Elem()
}

func (o GetClientAddonAzureSbArrayOutput) ToGetClientAddonAzureSbArrayOutput() GetClientAddonAzureSbArrayOutput {
	return o
}

func (o GetClientAddonAzureSbArrayOutput) ToGetClientAddonAzureSbArrayOutputWithContext(ctx context.Context) GetClientAddonAzureSbArrayOutput {
	return o
}

func (o GetClientAddonAzureSbArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonAzureSb] {
	return pulumix.Output[[]GetClientAddonAzureSb]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonAzureSbArrayOutput) Index(i pulumi.IntInput) GetClientAddonAzureSbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonAzureSb {
		return vs[0].([]GetClientAddonAzureSb)[vs[1].(int)]
	}).(GetClientAddonAzureSbOutput)
}

type GetClientAddonBox struct {
}

// GetClientAddonBoxInput is an input type that accepts GetClientAddonBoxArgs and GetClientAddonBoxOutput values.
// You can construct a concrete instance of `GetClientAddonBoxInput` via:
//
//	GetClientAddonBoxArgs{...}
type GetClientAddonBoxInput interface {
	pulumi.Input

	ToGetClientAddonBoxOutput() GetClientAddonBoxOutput
	ToGetClientAddonBoxOutputWithContext(context.Context) GetClientAddonBoxOutput
}

type GetClientAddonBoxArgs struct {
}

func (GetClientAddonBoxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonBox)(nil)).Elem()
}

func (i GetClientAddonBoxArgs) ToGetClientAddonBoxOutput() GetClientAddonBoxOutput {
	return i.ToGetClientAddonBoxOutputWithContext(context.Background())
}

func (i GetClientAddonBoxArgs) ToGetClientAddonBoxOutputWithContext(ctx context.Context) GetClientAddonBoxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonBoxOutput)
}

func (i GetClientAddonBoxArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonBox] {
	return pulumix.Output[GetClientAddonBox]{
		OutputState: i.ToGetClientAddonBoxOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonBoxArrayInput is an input type that accepts GetClientAddonBoxArray and GetClientAddonBoxArrayOutput values.
// You can construct a concrete instance of `GetClientAddonBoxArrayInput` via:
//
//	GetClientAddonBoxArray{ GetClientAddonBoxArgs{...} }
type GetClientAddonBoxArrayInput interface {
	pulumi.Input

	ToGetClientAddonBoxArrayOutput() GetClientAddonBoxArrayOutput
	ToGetClientAddonBoxArrayOutputWithContext(context.Context) GetClientAddonBoxArrayOutput
}

type GetClientAddonBoxArray []GetClientAddonBoxInput

func (GetClientAddonBoxArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonBox)(nil)).Elem()
}

func (i GetClientAddonBoxArray) ToGetClientAddonBoxArrayOutput() GetClientAddonBoxArrayOutput {
	return i.ToGetClientAddonBoxArrayOutputWithContext(context.Background())
}

func (i GetClientAddonBoxArray) ToGetClientAddonBoxArrayOutputWithContext(ctx context.Context) GetClientAddonBoxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonBoxArrayOutput)
}

func (i GetClientAddonBoxArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonBox] {
	return pulumix.Output[[]GetClientAddonBox]{
		OutputState: i.ToGetClientAddonBoxArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonBoxOutput struct{ *pulumi.OutputState }

func (GetClientAddonBoxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonBox)(nil)).Elem()
}

func (o GetClientAddonBoxOutput) ToGetClientAddonBoxOutput() GetClientAddonBoxOutput {
	return o
}

func (o GetClientAddonBoxOutput) ToGetClientAddonBoxOutputWithContext(ctx context.Context) GetClientAddonBoxOutput {
	return o
}

func (o GetClientAddonBoxOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonBox] {
	return pulumix.Output[GetClientAddonBox]{
		OutputState: o.OutputState,
	}
}

type GetClientAddonBoxArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonBoxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonBox)(nil)).Elem()
}

func (o GetClientAddonBoxArrayOutput) ToGetClientAddonBoxArrayOutput() GetClientAddonBoxArrayOutput {
	return o
}

func (o GetClientAddonBoxArrayOutput) ToGetClientAddonBoxArrayOutputWithContext(ctx context.Context) GetClientAddonBoxArrayOutput {
	return o
}

func (o GetClientAddonBoxArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonBox] {
	return pulumix.Output[[]GetClientAddonBox]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonBoxArrayOutput) Index(i pulumi.IntInput) GetClientAddonBoxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonBox {
		return vs[0].([]GetClientAddonBox)[vs[1].(int)]
	}).(GetClientAddonBoxOutput)
}

type GetClientAddonCloudbee struct {
}

// GetClientAddonCloudbeeInput is an input type that accepts GetClientAddonCloudbeeArgs and GetClientAddonCloudbeeOutput values.
// You can construct a concrete instance of `GetClientAddonCloudbeeInput` via:
//
//	GetClientAddonCloudbeeArgs{...}
type GetClientAddonCloudbeeInput interface {
	pulumi.Input

	ToGetClientAddonCloudbeeOutput() GetClientAddonCloudbeeOutput
	ToGetClientAddonCloudbeeOutputWithContext(context.Context) GetClientAddonCloudbeeOutput
}

type GetClientAddonCloudbeeArgs struct {
}

func (GetClientAddonCloudbeeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonCloudbee)(nil)).Elem()
}

func (i GetClientAddonCloudbeeArgs) ToGetClientAddonCloudbeeOutput() GetClientAddonCloudbeeOutput {
	return i.ToGetClientAddonCloudbeeOutputWithContext(context.Background())
}

func (i GetClientAddonCloudbeeArgs) ToGetClientAddonCloudbeeOutputWithContext(ctx context.Context) GetClientAddonCloudbeeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonCloudbeeOutput)
}

func (i GetClientAddonCloudbeeArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonCloudbee] {
	return pulumix.Output[GetClientAddonCloudbee]{
		OutputState: i.ToGetClientAddonCloudbeeOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonCloudbeeArrayInput is an input type that accepts GetClientAddonCloudbeeArray and GetClientAddonCloudbeeArrayOutput values.
// You can construct a concrete instance of `GetClientAddonCloudbeeArrayInput` via:
//
//	GetClientAddonCloudbeeArray{ GetClientAddonCloudbeeArgs{...} }
type GetClientAddonCloudbeeArrayInput interface {
	pulumi.Input

	ToGetClientAddonCloudbeeArrayOutput() GetClientAddonCloudbeeArrayOutput
	ToGetClientAddonCloudbeeArrayOutputWithContext(context.Context) GetClientAddonCloudbeeArrayOutput
}

type GetClientAddonCloudbeeArray []GetClientAddonCloudbeeInput

func (GetClientAddonCloudbeeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonCloudbee)(nil)).Elem()
}

func (i GetClientAddonCloudbeeArray) ToGetClientAddonCloudbeeArrayOutput() GetClientAddonCloudbeeArrayOutput {
	return i.ToGetClientAddonCloudbeeArrayOutputWithContext(context.Background())
}

func (i GetClientAddonCloudbeeArray) ToGetClientAddonCloudbeeArrayOutputWithContext(ctx context.Context) GetClientAddonCloudbeeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonCloudbeeArrayOutput)
}

func (i GetClientAddonCloudbeeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonCloudbee] {
	return pulumix.Output[[]GetClientAddonCloudbee]{
		OutputState: i.ToGetClientAddonCloudbeeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonCloudbeeOutput struct{ *pulumi.OutputState }

func (GetClientAddonCloudbeeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonCloudbee)(nil)).Elem()
}

func (o GetClientAddonCloudbeeOutput) ToGetClientAddonCloudbeeOutput() GetClientAddonCloudbeeOutput {
	return o
}

func (o GetClientAddonCloudbeeOutput) ToGetClientAddonCloudbeeOutputWithContext(ctx context.Context) GetClientAddonCloudbeeOutput {
	return o
}

func (o GetClientAddonCloudbeeOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonCloudbee] {
	return pulumix.Output[GetClientAddonCloudbee]{
		OutputState: o.OutputState,
	}
}

type GetClientAddonCloudbeeArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonCloudbeeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonCloudbee)(nil)).Elem()
}

func (o GetClientAddonCloudbeeArrayOutput) ToGetClientAddonCloudbeeArrayOutput() GetClientAddonCloudbeeArrayOutput {
	return o
}

func (o GetClientAddonCloudbeeArrayOutput) ToGetClientAddonCloudbeeArrayOutputWithContext(ctx context.Context) GetClientAddonCloudbeeArrayOutput {
	return o
}

func (o GetClientAddonCloudbeeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonCloudbee] {
	return pulumix.Output[[]GetClientAddonCloudbee]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonCloudbeeArrayOutput) Index(i pulumi.IntInput) GetClientAddonCloudbeeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonCloudbee {
		return vs[0].([]GetClientAddonCloudbee)[vs[1].(int)]
	}).(GetClientAddonCloudbeeOutput)
}

type GetClientAddonConcur struct {
}

// GetClientAddonConcurInput is an input type that accepts GetClientAddonConcurArgs and GetClientAddonConcurOutput values.
// You can construct a concrete instance of `GetClientAddonConcurInput` via:
//
//	GetClientAddonConcurArgs{...}
type GetClientAddonConcurInput interface {
	pulumi.Input

	ToGetClientAddonConcurOutput() GetClientAddonConcurOutput
	ToGetClientAddonConcurOutputWithContext(context.Context) GetClientAddonConcurOutput
}

type GetClientAddonConcurArgs struct {
}

func (GetClientAddonConcurArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonConcur)(nil)).Elem()
}

func (i GetClientAddonConcurArgs) ToGetClientAddonConcurOutput() GetClientAddonConcurOutput {
	return i.ToGetClientAddonConcurOutputWithContext(context.Background())
}

func (i GetClientAddonConcurArgs) ToGetClientAddonConcurOutputWithContext(ctx context.Context) GetClientAddonConcurOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonConcurOutput)
}

func (i GetClientAddonConcurArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonConcur] {
	return pulumix.Output[GetClientAddonConcur]{
		OutputState: i.ToGetClientAddonConcurOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonConcurArrayInput is an input type that accepts GetClientAddonConcurArray and GetClientAddonConcurArrayOutput values.
// You can construct a concrete instance of `GetClientAddonConcurArrayInput` via:
//
//	GetClientAddonConcurArray{ GetClientAddonConcurArgs{...} }
type GetClientAddonConcurArrayInput interface {
	pulumi.Input

	ToGetClientAddonConcurArrayOutput() GetClientAddonConcurArrayOutput
	ToGetClientAddonConcurArrayOutputWithContext(context.Context) GetClientAddonConcurArrayOutput
}

type GetClientAddonConcurArray []GetClientAddonConcurInput

func (GetClientAddonConcurArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonConcur)(nil)).Elem()
}

func (i GetClientAddonConcurArray) ToGetClientAddonConcurArrayOutput() GetClientAddonConcurArrayOutput {
	return i.ToGetClientAddonConcurArrayOutputWithContext(context.Background())
}

func (i GetClientAddonConcurArray) ToGetClientAddonConcurArrayOutputWithContext(ctx context.Context) GetClientAddonConcurArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonConcurArrayOutput)
}

func (i GetClientAddonConcurArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonConcur] {
	return pulumix.Output[[]GetClientAddonConcur]{
		OutputState: i.ToGetClientAddonConcurArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonConcurOutput struct{ *pulumi.OutputState }

func (GetClientAddonConcurOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonConcur)(nil)).Elem()
}

func (o GetClientAddonConcurOutput) ToGetClientAddonConcurOutput() GetClientAddonConcurOutput {
	return o
}

func (o GetClientAddonConcurOutput) ToGetClientAddonConcurOutputWithContext(ctx context.Context) GetClientAddonConcurOutput {
	return o
}

func (o GetClientAddonConcurOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonConcur] {
	return pulumix.Output[GetClientAddonConcur]{
		OutputState: o.OutputState,
	}
}

type GetClientAddonConcurArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonConcurArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonConcur)(nil)).Elem()
}

func (o GetClientAddonConcurArrayOutput) ToGetClientAddonConcurArrayOutput() GetClientAddonConcurArrayOutput {
	return o
}

func (o GetClientAddonConcurArrayOutput) ToGetClientAddonConcurArrayOutputWithContext(ctx context.Context) GetClientAddonConcurArrayOutput {
	return o
}

func (o GetClientAddonConcurArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonConcur] {
	return pulumix.Output[[]GetClientAddonConcur]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonConcurArrayOutput) Index(i pulumi.IntInput) GetClientAddonConcurOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonConcur {
		return vs[0].([]GetClientAddonConcur)[vs[1].(int)]
	}).(GetClientAddonConcurOutput)
}

type GetClientAddonDropbox struct {
}

// GetClientAddonDropboxInput is an input type that accepts GetClientAddonDropboxArgs and GetClientAddonDropboxOutput values.
// You can construct a concrete instance of `GetClientAddonDropboxInput` via:
//
//	GetClientAddonDropboxArgs{...}
type GetClientAddonDropboxInput interface {
	pulumi.Input

	ToGetClientAddonDropboxOutput() GetClientAddonDropboxOutput
	ToGetClientAddonDropboxOutputWithContext(context.Context) GetClientAddonDropboxOutput
}

type GetClientAddonDropboxArgs struct {
}

func (GetClientAddonDropboxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonDropbox)(nil)).Elem()
}

func (i GetClientAddonDropboxArgs) ToGetClientAddonDropboxOutput() GetClientAddonDropboxOutput {
	return i.ToGetClientAddonDropboxOutputWithContext(context.Background())
}

func (i GetClientAddonDropboxArgs) ToGetClientAddonDropboxOutputWithContext(ctx context.Context) GetClientAddonDropboxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonDropboxOutput)
}

func (i GetClientAddonDropboxArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonDropbox] {
	return pulumix.Output[GetClientAddonDropbox]{
		OutputState: i.ToGetClientAddonDropboxOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonDropboxArrayInput is an input type that accepts GetClientAddonDropboxArray and GetClientAddonDropboxArrayOutput values.
// You can construct a concrete instance of `GetClientAddonDropboxArrayInput` via:
//
//	GetClientAddonDropboxArray{ GetClientAddonDropboxArgs{...} }
type GetClientAddonDropboxArrayInput interface {
	pulumi.Input

	ToGetClientAddonDropboxArrayOutput() GetClientAddonDropboxArrayOutput
	ToGetClientAddonDropboxArrayOutputWithContext(context.Context) GetClientAddonDropboxArrayOutput
}

type GetClientAddonDropboxArray []GetClientAddonDropboxInput

func (GetClientAddonDropboxArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonDropbox)(nil)).Elem()
}

func (i GetClientAddonDropboxArray) ToGetClientAddonDropboxArrayOutput() GetClientAddonDropboxArrayOutput {
	return i.ToGetClientAddonDropboxArrayOutputWithContext(context.Background())
}

func (i GetClientAddonDropboxArray) ToGetClientAddonDropboxArrayOutputWithContext(ctx context.Context) GetClientAddonDropboxArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonDropboxArrayOutput)
}

func (i GetClientAddonDropboxArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonDropbox] {
	return pulumix.Output[[]GetClientAddonDropbox]{
		OutputState: i.ToGetClientAddonDropboxArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonDropboxOutput struct{ *pulumi.OutputState }

func (GetClientAddonDropboxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonDropbox)(nil)).Elem()
}

func (o GetClientAddonDropboxOutput) ToGetClientAddonDropboxOutput() GetClientAddonDropboxOutput {
	return o
}

func (o GetClientAddonDropboxOutput) ToGetClientAddonDropboxOutputWithContext(ctx context.Context) GetClientAddonDropboxOutput {
	return o
}

func (o GetClientAddonDropboxOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonDropbox] {
	return pulumix.Output[GetClientAddonDropbox]{
		OutputState: o.OutputState,
	}
}

type GetClientAddonDropboxArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonDropboxArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonDropbox)(nil)).Elem()
}

func (o GetClientAddonDropboxArrayOutput) ToGetClientAddonDropboxArrayOutput() GetClientAddonDropboxArrayOutput {
	return o
}

func (o GetClientAddonDropboxArrayOutput) ToGetClientAddonDropboxArrayOutputWithContext(ctx context.Context) GetClientAddonDropboxArrayOutput {
	return o
}

func (o GetClientAddonDropboxArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonDropbox] {
	return pulumix.Output[[]GetClientAddonDropbox]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonDropboxArrayOutput) Index(i pulumi.IntInput) GetClientAddonDropboxOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonDropbox {
		return vs[0].([]GetClientAddonDropbox)[vs[1].(int)]
	}).(GetClientAddonDropboxOutput)
}

type GetClientAddonEchosign struct {
	Domain string `pulumi:"domain"`
}

// GetClientAddonEchosignInput is an input type that accepts GetClientAddonEchosignArgs and GetClientAddonEchosignOutput values.
// You can construct a concrete instance of `GetClientAddonEchosignInput` via:
//
//	GetClientAddonEchosignArgs{...}
type GetClientAddonEchosignInput interface {
	pulumi.Input

	ToGetClientAddonEchosignOutput() GetClientAddonEchosignOutput
	ToGetClientAddonEchosignOutputWithContext(context.Context) GetClientAddonEchosignOutput
}

type GetClientAddonEchosignArgs struct {
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (GetClientAddonEchosignArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonEchosign)(nil)).Elem()
}

func (i GetClientAddonEchosignArgs) ToGetClientAddonEchosignOutput() GetClientAddonEchosignOutput {
	return i.ToGetClientAddonEchosignOutputWithContext(context.Background())
}

func (i GetClientAddonEchosignArgs) ToGetClientAddonEchosignOutputWithContext(ctx context.Context) GetClientAddonEchosignOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonEchosignOutput)
}

func (i GetClientAddonEchosignArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonEchosign] {
	return pulumix.Output[GetClientAddonEchosign]{
		OutputState: i.ToGetClientAddonEchosignOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonEchosignArrayInput is an input type that accepts GetClientAddonEchosignArray and GetClientAddonEchosignArrayOutput values.
// You can construct a concrete instance of `GetClientAddonEchosignArrayInput` via:
//
//	GetClientAddonEchosignArray{ GetClientAddonEchosignArgs{...} }
type GetClientAddonEchosignArrayInput interface {
	pulumi.Input

	ToGetClientAddonEchosignArrayOutput() GetClientAddonEchosignArrayOutput
	ToGetClientAddonEchosignArrayOutputWithContext(context.Context) GetClientAddonEchosignArrayOutput
}

type GetClientAddonEchosignArray []GetClientAddonEchosignInput

func (GetClientAddonEchosignArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonEchosign)(nil)).Elem()
}

func (i GetClientAddonEchosignArray) ToGetClientAddonEchosignArrayOutput() GetClientAddonEchosignArrayOutput {
	return i.ToGetClientAddonEchosignArrayOutputWithContext(context.Background())
}

func (i GetClientAddonEchosignArray) ToGetClientAddonEchosignArrayOutputWithContext(ctx context.Context) GetClientAddonEchosignArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonEchosignArrayOutput)
}

func (i GetClientAddonEchosignArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonEchosign] {
	return pulumix.Output[[]GetClientAddonEchosign]{
		OutputState: i.ToGetClientAddonEchosignArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonEchosignOutput struct{ *pulumi.OutputState }

func (GetClientAddonEchosignOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonEchosign)(nil)).Elem()
}

func (o GetClientAddonEchosignOutput) ToGetClientAddonEchosignOutput() GetClientAddonEchosignOutput {
	return o
}

func (o GetClientAddonEchosignOutput) ToGetClientAddonEchosignOutputWithContext(ctx context.Context) GetClientAddonEchosignOutput {
	return o
}

func (o GetClientAddonEchosignOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonEchosign] {
	return pulumix.Output[GetClientAddonEchosign]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonEchosignOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonEchosign) string { return v.Domain }).(pulumi.StringOutput)
}

type GetClientAddonEchosignArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonEchosignArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonEchosign)(nil)).Elem()
}

func (o GetClientAddonEchosignArrayOutput) ToGetClientAddonEchosignArrayOutput() GetClientAddonEchosignArrayOutput {
	return o
}

func (o GetClientAddonEchosignArrayOutput) ToGetClientAddonEchosignArrayOutputWithContext(ctx context.Context) GetClientAddonEchosignArrayOutput {
	return o
}

func (o GetClientAddonEchosignArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonEchosign] {
	return pulumix.Output[[]GetClientAddonEchosign]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonEchosignArrayOutput) Index(i pulumi.IntInput) GetClientAddonEchosignOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonEchosign {
		return vs[0].([]GetClientAddonEchosign)[vs[1].(int)]
	}).(GetClientAddonEchosignOutput)
}

type GetClientAddonEgnyte struct {
	Domain string `pulumi:"domain"`
}

// GetClientAddonEgnyteInput is an input type that accepts GetClientAddonEgnyteArgs and GetClientAddonEgnyteOutput values.
// You can construct a concrete instance of `GetClientAddonEgnyteInput` via:
//
//	GetClientAddonEgnyteArgs{...}
type GetClientAddonEgnyteInput interface {
	pulumi.Input

	ToGetClientAddonEgnyteOutput() GetClientAddonEgnyteOutput
	ToGetClientAddonEgnyteOutputWithContext(context.Context) GetClientAddonEgnyteOutput
}

type GetClientAddonEgnyteArgs struct {
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (GetClientAddonEgnyteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonEgnyte)(nil)).Elem()
}

func (i GetClientAddonEgnyteArgs) ToGetClientAddonEgnyteOutput() GetClientAddonEgnyteOutput {
	return i.ToGetClientAddonEgnyteOutputWithContext(context.Background())
}

func (i GetClientAddonEgnyteArgs) ToGetClientAddonEgnyteOutputWithContext(ctx context.Context) GetClientAddonEgnyteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonEgnyteOutput)
}

func (i GetClientAddonEgnyteArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonEgnyte] {
	return pulumix.Output[GetClientAddonEgnyte]{
		OutputState: i.ToGetClientAddonEgnyteOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonEgnyteArrayInput is an input type that accepts GetClientAddonEgnyteArray and GetClientAddonEgnyteArrayOutput values.
// You can construct a concrete instance of `GetClientAddonEgnyteArrayInput` via:
//
//	GetClientAddonEgnyteArray{ GetClientAddonEgnyteArgs{...} }
type GetClientAddonEgnyteArrayInput interface {
	pulumi.Input

	ToGetClientAddonEgnyteArrayOutput() GetClientAddonEgnyteArrayOutput
	ToGetClientAddonEgnyteArrayOutputWithContext(context.Context) GetClientAddonEgnyteArrayOutput
}

type GetClientAddonEgnyteArray []GetClientAddonEgnyteInput

func (GetClientAddonEgnyteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonEgnyte)(nil)).Elem()
}

func (i GetClientAddonEgnyteArray) ToGetClientAddonEgnyteArrayOutput() GetClientAddonEgnyteArrayOutput {
	return i.ToGetClientAddonEgnyteArrayOutputWithContext(context.Background())
}

func (i GetClientAddonEgnyteArray) ToGetClientAddonEgnyteArrayOutputWithContext(ctx context.Context) GetClientAddonEgnyteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonEgnyteArrayOutput)
}

func (i GetClientAddonEgnyteArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonEgnyte] {
	return pulumix.Output[[]GetClientAddonEgnyte]{
		OutputState: i.ToGetClientAddonEgnyteArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonEgnyteOutput struct{ *pulumi.OutputState }

func (GetClientAddonEgnyteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonEgnyte)(nil)).Elem()
}

func (o GetClientAddonEgnyteOutput) ToGetClientAddonEgnyteOutput() GetClientAddonEgnyteOutput {
	return o
}

func (o GetClientAddonEgnyteOutput) ToGetClientAddonEgnyteOutputWithContext(ctx context.Context) GetClientAddonEgnyteOutput {
	return o
}

func (o GetClientAddonEgnyteOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonEgnyte] {
	return pulumix.Output[GetClientAddonEgnyte]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonEgnyteOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonEgnyte) string { return v.Domain }).(pulumi.StringOutput)
}

type GetClientAddonEgnyteArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonEgnyteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonEgnyte)(nil)).Elem()
}

func (o GetClientAddonEgnyteArrayOutput) ToGetClientAddonEgnyteArrayOutput() GetClientAddonEgnyteArrayOutput {
	return o
}

func (o GetClientAddonEgnyteArrayOutput) ToGetClientAddonEgnyteArrayOutputWithContext(ctx context.Context) GetClientAddonEgnyteArrayOutput {
	return o
}

func (o GetClientAddonEgnyteArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonEgnyte] {
	return pulumix.Output[[]GetClientAddonEgnyte]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonEgnyteArrayOutput) Index(i pulumi.IntInput) GetClientAddonEgnyteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonEgnyte {
		return vs[0].([]GetClientAddonEgnyte)[vs[1].(int)]
	}).(GetClientAddonEgnyteOutput)
}

type GetClientAddonFirebase struct {
	ClientEmail       string `pulumi:"clientEmail"`
	LifetimeInSeconds int    `pulumi:"lifetimeInSeconds"`
	PrivateKey        string `pulumi:"privateKey"`
	PrivateKeyId      string `pulumi:"privateKeyId"`
	Secret            string `pulumi:"secret"`
}

// GetClientAddonFirebaseInput is an input type that accepts GetClientAddonFirebaseArgs and GetClientAddonFirebaseOutput values.
// You can construct a concrete instance of `GetClientAddonFirebaseInput` via:
//
//	GetClientAddonFirebaseArgs{...}
type GetClientAddonFirebaseInput interface {
	pulumi.Input

	ToGetClientAddonFirebaseOutput() GetClientAddonFirebaseOutput
	ToGetClientAddonFirebaseOutputWithContext(context.Context) GetClientAddonFirebaseOutput
}

type GetClientAddonFirebaseArgs struct {
	ClientEmail       pulumi.StringInput `pulumi:"clientEmail"`
	LifetimeInSeconds pulumi.IntInput    `pulumi:"lifetimeInSeconds"`
	PrivateKey        pulumi.StringInput `pulumi:"privateKey"`
	PrivateKeyId      pulumi.StringInput `pulumi:"privateKeyId"`
	Secret            pulumi.StringInput `pulumi:"secret"`
}

func (GetClientAddonFirebaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonFirebase)(nil)).Elem()
}

func (i GetClientAddonFirebaseArgs) ToGetClientAddonFirebaseOutput() GetClientAddonFirebaseOutput {
	return i.ToGetClientAddonFirebaseOutputWithContext(context.Background())
}

func (i GetClientAddonFirebaseArgs) ToGetClientAddonFirebaseOutputWithContext(ctx context.Context) GetClientAddonFirebaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonFirebaseOutput)
}

func (i GetClientAddonFirebaseArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonFirebase] {
	return pulumix.Output[GetClientAddonFirebase]{
		OutputState: i.ToGetClientAddonFirebaseOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonFirebaseArrayInput is an input type that accepts GetClientAddonFirebaseArray and GetClientAddonFirebaseArrayOutput values.
// You can construct a concrete instance of `GetClientAddonFirebaseArrayInput` via:
//
//	GetClientAddonFirebaseArray{ GetClientAddonFirebaseArgs{...} }
type GetClientAddonFirebaseArrayInput interface {
	pulumi.Input

	ToGetClientAddonFirebaseArrayOutput() GetClientAddonFirebaseArrayOutput
	ToGetClientAddonFirebaseArrayOutputWithContext(context.Context) GetClientAddonFirebaseArrayOutput
}

type GetClientAddonFirebaseArray []GetClientAddonFirebaseInput

func (GetClientAddonFirebaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonFirebase)(nil)).Elem()
}

func (i GetClientAddonFirebaseArray) ToGetClientAddonFirebaseArrayOutput() GetClientAddonFirebaseArrayOutput {
	return i.ToGetClientAddonFirebaseArrayOutputWithContext(context.Background())
}

func (i GetClientAddonFirebaseArray) ToGetClientAddonFirebaseArrayOutputWithContext(ctx context.Context) GetClientAddonFirebaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonFirebaseArrayOutput)
}

func (i GetClientAddonFirebaseArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonFirebase] {
	return pulumix.Output[[]GetClientAddonFirebase]{
		OutputState: i.ToGetClientAddonFirebaseArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonFirebaseOutput struct{ *pulumi.OutputState }

func (GetClientAddonFirebaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonFirebase)(nil)).Elem()
}

func (o GetClientAddonFirebaseOutput) ToGetClientAddonFirebaseOutput() GetClientAddonFirebaseOutput {
	return o
}

func (o GetClientAddonFirebaseOutput) ToGetClientAddonFirebaseOutputWithContext(ctx context.Context) GetClientAddonFirebaseOutput {
	return o
}

func (o GetClientAddonFirebaseOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonFirebase] {
	return pulumix.Output[GetClientAddonFirebase]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonFirebaseOutput) ClientEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonFirebase) string { return v.ClientEmail }).(pulumi.StringOutput)
}

func (o GetClientAddonFirebaseOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientAddonFirebase) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetClientAddonFirebaseOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonFirebase) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o GetClientAddonFirebaseOutput) PrivateKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonFirebase) string { return v.PrivateKeyId }).(pulumi.StringOutput)
}

func (o GetClientAddonFirebaseOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonFirebase) string { return v.Secret }).(pulumi.StringOutput)
}

type GetClientAddonFirebaseArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonFirebaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonFirebase)(nil)).Elem()
}

func (o GetClientAddonFirebaseArrayOutput) ToGetClientAddonFirebaseArrayOutput() GetClientAddonFirebaseArrayOutput {
	return o
}

func (o GetClientAddonFirebaseArrayOutput) ToGetClientAddonFirebaseArrayOutputWithContext(ctx context.Context) GetClientAddonFirebaseArrayOutput {
	return o
}

func (o GetClientAddonFirebaseArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonFirebase] {
	return pulumix.Output[[]GetClientAddonFirebase]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonFirebaseArrayOutput) Index(i pulumi.IntInput) GetClientAddonFirebaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonFirebase {
		return vs[0].([]GetClientAddonFirebase)[vs[1].(int)]
	}).(GetClientAddonFirebaseOutput)
}

type GetClientAddonLayer struct {
	Expiration int    `pulumi:"expiration"`
	KeyId      string `pulumi:"keyId"`
	Principal  string `pulumi:"principal"`
	PrivateKey string `pulumi:"privateKey"`
	ProviderId string `pulumi:"providerId"`
}

// GetClientAddonLayerInput is an input type that accepts GetClientAddonLayerArgs and GetClientAddonLayerOutput values.
// You can construct a concrete instance of `GetClientAddonLayerInput` via:
//
//	GetClientAddonLayerArgs{...}
type GetClientAddonLayerInput interface {
	pulumi.Input

	ToGetClientAddonLayerOutput() GetClientAddonLayerOutput
	ToGetClientAddonLayerOutputWithContext(context.Context) GetClientAddonLayerOutput
}

type GetClientAddonLayerArgs struct {
	Expiration pulumi.IntInput    `pulumi:"expiration"`
	KeyId      pulumi.StringInput `pulumi:"keyId"`
	Principal  pulumi.StringInput `pulumi:"principal"`
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
	ProviderId pulumi.StringInput `pulumi:"providerId"`
}

func (GetClientAddonLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonLayer)(nil)).Elem()
}

func (i GetClientAddonLayerArgs) ToGetClientAddonLayerOutput() GetClientAddonLayerOutput {
	return i.ToGetClientAddonLayerOutputWithContext(context.Background())
}

func (i GetClientAddonLayerArgs) ToGetClientAddonLayerOutputWithContext(ctx context.Context) GetClientAddonLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonLayerOutput)
}

func (i GetClientAddonLayerArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonLayer] {
	return pulumix.Output[GetClientAddonLayer]{
		OutputState: i.ToGetClientAddonLayerOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonLayerArrayInput is an input type that accepts GetClientAddonLayerArray and GetClientAddonLayerArrayOutput values.
// You can construct a concrete instance of `GetClientAddonLayerArrayInput` via:
//
//	GetClientAddonLayerArray{ GetClientAddonLayerArgs{...} }
type GetClientAddonLayerArrayInput interface {
	pulumi.Input

	ToGetClientAddonLayerArrayOutput() GetClientAddonLayerArrayOutput
	ToGetClientAddonLayerArrayOutputWithContext(context.Context) GetClientAddonLayerArrayOutput
}

type GetClientAddonLayerArray []GetClientAddonLayerInput

func (GetClientAddonLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonLayer)(nil)).Elem()
}

func (i GetClientAddonLayerArray) ToGetClientAddonLayerArrayOutput() GetClientAddonLayerArrayOutput {
	return i.ToGetClientAddonLayerArrayOutputWithContext(context.Background())
}

func (i GetClientAddonLayerArray) ToGetClientAddonLayerArrayOutputWithContext(ctx context.Context) GetClientAddonLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonLayerArrayOutput)
}

func (i GetClientAddonLayerArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonLayer] {
	return pulumix.Output[[]GetClientAddonLayer]{
		OutputState: i.ToGetClientAddonLayerArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonLayerOutput struct{ *pulumi.OutputState }

func (GetClientAddonLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonLayer)(nil)).Elem()
}

func (o GetClientAddonLayerOutput) ToGetClientAddonLayerOutput() GetClientAddonLayerOutput {
	return o
}

func (o GetClientAddonLayerOutput) ToGetClientAddonLayerOutputWithContext(ctx context.Context) GetClientAddonLayerOutput {
	return o
}

func (o GetClientAddonLayerOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonLayer] {
	return pulumix.Output[GetClientAddonLayer]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonLayerOutput) Expiration() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientAddonLayer) int { return v.Expiration }).(pulumi.IntOutput)
}

func (o GetClientAddonLayerOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonLayer) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o GetClientAddonLayerOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonLayer) string { return v.Principal }).(pulumi.StringOutput)
}

func (o GetClientAddonLayerOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonLayer) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o GetClientAddonLayerOutput) ProviderId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonLayer) string { return v.ProviderId }).(pulumi.StringOutput)
}

type GetClientAddonLayerArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonLayer)(nil)).Elem()
}

func (o GetClientAddonLayerArrayOutput) ToGetClientAddonLayerArrayOutput() GetClientAddonLayerArrayOutput {
	return o
}

func (o GetClientAddonLayerArrayOutput) ToGetClientAddonLayerArrayOutputWithContext(ctx context.Context) GetClientAddonLayerArrayOutput {
	return o
}

func (o GetClientAddonLayerArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonLayer] {
	return pulumix.Output[[]GetClientAddonLayer]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonLayerArrayOutput) Index(i pulumi.IntInput) GetClientAddonLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonLayer {
		return vs[0].([]GetClientAddonLayer)[vs[1].(int)]
	}).(GetClientAddonLayerOutput)
}

type GetClientAddonMscrm struct {
	Url string `pulumi:"url"`
}

// GetClientAddonMscrmInput is an input type that accepts GetClientAddonMscrmArgs and GetClientAddonMscrmOutput values.
// You can construct a concrete instance of `GetClientAddonMscrmInput` via:
//
//	GetClientAddonMscrmArgs{...}
type GetClientAddonMscrmInput interface {
	pulumi.Input

	ToGetClientAddonMscrmOutput() GetClientAddonMscrmOutput
	ToGetClientAddonMscrmOutputWithContext(context.Context) GetClientAddonMscrmOutput
}

type GetClientAddonMscrmArgs struct {
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetClientAddonMscrmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonMscrm)(nil)).Elem()
}

func (i GetClientAddonMscrmArgs) ToGetClientAddonMscrmOutput() GetClientAddonMscrmOutput {
	return i.ToGetClientAddonMscrmOutputWithContext(context.Background())
}

func (i GetClientAddonMscrmArgs) ToGetClientAddonMscrmOutputWithContext(ctx context.Context) GetClientAddonMscrmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonMscrmOutput)
}

func (i GetClientAddonMscrmArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonMscrm] {
	return pulumix.Output[GetClientAddonMscrm]{
		OutputState: i.ToGetClientAddonMscrmOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonMscrmArrayInput is an input type that accepts GetClientAddonMscrmArray and GetClientAddonMscrmArrayOutput values.
// You can construct a concrete instance of `GetClientAddonMscrmArrayInput` via:
//
//	GetClientAddonMscrmArray{ GetClientAddonMscrmArgs{...} }
type GetClientAddonMscrmArrayInput interface {
	pulumi.Input

	ToGetClientAddonMscrmArrayOutput() GetClientAddonMscrmArrayOutput
	ToGetClientAddonMscrmArrayOutputWithContext(context.Context) GetClientAddonMscrmArrayOutput
}

type GetClientAddonMscrmArray []GetClientAddonMscrmInput

func (GetClientAddonMscrmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonMscrm)(nil)).Elem()
}

func (i GetClientAddonMscrmArray) ToGetClientAddonMscrmArrayOutput() GetClientAddonMscrmArrayOutput {
	return i.ToGetClientAddonMscrmArrayOutputWithContext(context.Background())
}

func (i GetClientAddonMscrmArray) ToGetClientAddonMscrmArrayOutputWithContext(ctx context.Context) GetClientAddonMscrmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonMscrmArrayOutput)
}

func (i GetClientAddonMscrmArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonMscrm] {
	return pulumix.Output[[]GetClientAddonMscrm]{
		OutputState: i.ToGetClientAddonMscrmArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonMscrmOutput struct{ *pulumi.OutputState }

func (GetClientAddonMscrmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonMscrm)(nil)).Elem()
}

func (o GetClientAddonMscrmOutput) ToGetClientAddonMscrmOutput() GetClientAddonMscrmOutput {
	return o
}

func (o GetClientAddonMscrmOutput) ToGetClientAddonMscrmOutputWithContext(ctx context.Context) GetClientAddonMscrmOutput {
	return o
}

func (o GetClientAddonMscrmOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonMscrm] {
	return pulumix.Output[GetClientAddonMscrm]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonMscrmOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonMscrm) string { return v.Url }).(pulumi.StringOutput)
}

type GetClientAddonMscrmArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonMscrmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonMscrm)(nil)).Elem()
}

func (o GetClientAddonMscrmArrayOutput) ToGetClientAddonMscrmArrayOutput() GetClientAddonMscrmArrayOutput {
	return o
}

func (o GetClientAddonMscrmArrayOutput) ToGetClientAddonMscrmArrayOutputWithContext(ctx context.Context) GetClientAddonMscrmArrayOutput {
	return o
}

func (o GetClientAddonMscrmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonMscrm] {
	return pulumix.Output[[]GetClientAddonMscrm]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonMscrmArrayOutput) Index(i pulumi.IntInput) GetClientAddonMscrmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonMscrm {
		return vs[0].([]GetClientAddonMscrm)[vs[1].(int)]
	}).(GetClientAddonMscrmOutput)
}

type GetClientAddonNewrelic struct {
	Account string `pulumi:"account"`
}

// GetClientAddonNewrelicInput is an input type that accepts GetClientAddonNewrelicArgs and GetClientAddonNewrelicOutput values.
// You can construct a concrete instance of `GetClientAddonNewrelicInput` via:
//
//	GetClientAddonNewrelicArgs{...}
type GetClientAddonNewrelicInput interface {
	pulumi.Input

	ToGetClientAddonNewrelicOutput() GetClientAddonNewrelicOutput
	ToGetClientAddonNewrelicOutputWithContext(context.Context) GetClientAddonNewrelicOutput
}

type GetClientAddonNewrelicArgs struct {
	Account pulumi.StringInput `pulumi:"account"`
}

func (GetClientAddonNewrelicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonNewrelic)(nil)).Elem()
}

func (i GetClientAddonNewrelicArgs) ToGetClientAddonNewrelicOutput() GetClientAddonNewrelicOutput {
	return i.ToGetClientAddonNewrelicOutputWithContext(context.Background())
}

func (i GetClientAddonNewrelicArgs) ToGetClientAddonNewrelicOutputWithContext(ctx context.Context) GetClientAddonNewrelicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonNewrelicOutput)
}

func (i GetClientAddonNewrelicArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonNewrelic] {
	return pulumix.Output[GetClientAddonNewrelic]{
		OutputState: i.ToGetClientAddonNewrelicOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonNewrelicArrayInput is an input type that accepts GetClientAddonNewrelicArray and GetClientAddonNewrelicArrayOutput values.
// You can construct a concrete instance of `GetClientAddonNewrelicArrayInput` via:
//
//	GetClientAddonNewrelicArray{ GetClientAddonNewrelicArgs{...} }
type GetClientAddonNewrelicArrayInput interface {
	pulumi.Input

	ToGetClientAddonNewrelicArrayOutput() GetClientAddonNewrelicArrayOutput
	ToGetClientAddonNewrelicArrayOutputWithContext(context.Context) GetClientAddonNewrelicArrayOutput
}

type GetClientAddonNewrelicArray []GetClientAddonNewrelicInput

func (GetClientAddonNewrelicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonNewrelic)(nil)).Elem()
}

func (i GetClientAddonNewrelicArray) ToGetClientAddonNewrelicArrayOutput() GetClientAddonNewrelicArrayOutput {
	return i.ToGetClientAddonNewrelicArrayOutputWithContext(context.Background())
}

func (i GetClientAddonNewrelicArray) ToGetClientAddonNewrelicArrayOutputWithContext(ctx context.Context) GetClientAddonNewrelicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonNewrelicArrayOutput)
}

func (i GetClientAddonNewrelicArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonNewrelic] {
	return pulumix.Output[[]GetClientAddonNewrelic]{
		OutputState: i.ToGetClientAddonNewrelicArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonNewrelicOutput struct{ *pulumi.OutputState }

func (GetClientAddonNewrelicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonNewrelic)(nil)).Elem()
}

func (o GetClientAddonNewrelicOutput) ToGetClientAddonNewrelicOutput() GetClientAddonNewrelicOutput {
	return o
}

func (o GetClientAddonNewrelicOutput) ToGetClientAddonNewrelicOutputWithContext(ctx context.Context) GetClientAddonNewrelicOutput {
	return o
}

func (o GetClientAddonNewrelicOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonNewrelic] {
	return pulumix.Output[GetClientAddonNewrelic]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonNewrelicOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonNewrelic) string { return v.Account }).(pulumi.StringOutput)
}

type GetClientAddonNewrelicArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonNewrelicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonNewrelic)(nil)).Elem()
}

func (o GetClientAddonNewrelicArrayOutput) ToGetClientAddonNewrelicArrayOutput() GetClientAddonNewrelicArrayOutput {
	return o
}

func (o GetClientAddonNewrelicArrayOutput) ToGetClientAddonNewrelicArrayOutputWithContext(ctx context.Context) GetClientAddonNewrelicArrayOutput {
	return o
}

func (o GetClientAddonNewrelicArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonNewrelic] {
	return pulumix.Output[[]GetClientAddonNewrelic]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonNewrelicArrayOutput) Index(i pulumi.IntInput) GetClientAddonNewrelicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonNewrelic {
		return vs[0].([]GetClientAddonNewrelic)[vs[1].(int)]
	}).(GetClientAddonNewrelicOutput)
}

type GetClientAddonOffice365 struct {
	Connection string `pulumi:"connection"`
	Domain     string `pulumi:"domain"`
}

// GetClientAddonOffice365Input is an input type that accepts GetClientAddonOffice365Args and GetClientAddonOffice365Output values.
// You can construct a concrete instance of `GetClientAddonOffice365Input` via:
//
//	GetClientAddonOffice365Args{...}
type GetClientAddonOffice365Input interface {
	pulumi.Input

	ToGetClientAddonOffice365Output() GetClientAddonOffice365Output
	ToGetClientAddonOffice365OutputWithContext(context.Context) GetClientAddonOffice365Output
}

type GetClientAddonOffice365Args struct {
	Connection pulumi.StringInput `pulumi:"connection"`
	Domain     pulumi.StringInput `pulumi:"domain"`
}

func (GetClientAddonOffice365Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonOffice365)(nil)).Elem()
}

func (i GetClientAddonOffice365Args) ToGetClientAddonOffice365Output() GetClientAddonOffice365Output {
	return i.ToGetClientAddonOffice365OutputWithContext(context.Background())
}

func (i GetClientAddonOffice365Args) ToGetClientAddonOffice365OutputWithContext(ctx context.Context) GetClientAddonOffice365Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonOffice365Output)
}

func (i GetClientAddonOffice365Args) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonOffice365] {
	return pulumix.Output[GetClientAddonOffice365]{
		OutputState: i.ToGetClientAddonOffice365OutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonOffice365ArrayInput is an input type that accepts GetClientAddonOffice365Array and GetClientAddonOffice365ArrayOutput values.
// You can construct a concrete instance of `GetClientAddonOffice365ArrayInput` via:
//
//	GetClientAddonOffice365Array{ GetClientAddonOffice365Args{...} }
type GetClientAddonOffice365ArrayInput interface {
	pulumi.Input

	ToGetClientAddonOffice365ArrayOutput() GetClientAddonOffice365ArrayOutput
	ToGetClientAddonOffice365ArrayOutputWithContext(context.Context) GetClientAddonOffice365ArrayOutput
}

type GetClientAddonOffice365Array []GetClientAddonOffice365Input

func (GetClientAddonOffice365Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonOffice365)(nil)).Elem()
}

func (i GetClientAddonOffice365Array) ToGetClientAddonOffice365ArrayOutput() GetClientAddonOffice365ArrayOutput {
	return i.ToGetClientAddonOffice365ArrayOutputWithContext(context.Background())
}

func (i GetClientAddonOffice365Array) ToGetClientAddonOffice365ArrayOutputWithContext(ctx context.Context) GetClientAddonOffice365ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonOffice365ArrayOutput)
}

func (i GetClientAddonOffice365Array) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonOffice365] {
	return pulumix.Output[[]GetClientAddonOffice365]{
		OutputState: i.ToGetClientAddonOffice365ArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonOffice365Output struct{ *pulumi.OutputState }

func (GetClientAddonOffice365Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonOffice365)(nil)).Elem()
}

func (o GetClientAddonOffice365Output) ToGetClientAddonOffice365Output() GetClientAddonOffice365Output {
	return o
}

func (o GetClientAddonOffice365Output) ToGetClientAddonOffice365OutputWithContext(ctx context.Context) GetClientAddonOffice365Output {
	return o
}

func (o GetClientAddonOffice365Output) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonOffice365] {
	return pulumix.Output[GetClientAddonOffice365]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonOffice365Output) Connection() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonOffice365) string { return v.Connection }).(pulumi.StringOutput)
}

func (o GetClientAddonOffice365Output) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonOffice365) string { return v.Domain }).(pulumi.StringOutput)
}

type GetClientAddonOffice365ArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonOffice365ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonOffice365)(nil)).Elem()
}

func (o GetClientAddonOffice365ArrayOutput) ToGetClientAddonOffice365ArrayOutput() GetClientAddonOffice365ArrayOutput {
	return o
}

func (o GetClientAddonOffice365ArrayOutput) ToGetClientAddonOffice365ArrayOutputWithContext(ctx context.Context) GetClientAddonOffice365ArrayOutput {
	return o
}

func (o GetClientAddonOffice365ArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonOffice365] {
	return pulumix.Output[[]GetClientAddonOffice365]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonOffice365ArrayOutput) Index(i pulumi.IntInput) GetClientAddonOffice365Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonOffice365 {
		return vs[0].([]GetClientAddonOffice365)[vs[1].(int)]
	}).(GetClientAddonOffice365Output)
}

type GetClientAddonRm struct {
	Url string `pulumi:"url"`
}

// GetClientAddonRmInput is an input type that accepts GetClientAddonRmArgs and GetClientAddonRmOutput values.
// You can construct a concrete instance of `GetClientAddonRmInput` via:
//
//	GetClientAddonRmArgs{...}
type GetClientAddonRmInput interface {
	pulumi.Input

	ToGetClientAddonRmOutput() GetClientAddonRmOutput
	ToGetClientAddonRmOutputWithContext(context.Context) GetClientAddonRmOutput
}

type GetClientAddonRmArgs struct {
	Url pulumi.StringInput `pulumi:"url"`
}

func (GetClientAddonRmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonRm)(nil)).Elem()
}

func (i GetClientAddonRmArgs) ToGetClientAddonRmOutput() GetClientAddonRmOutput {
	return i.ToGetClientAddonRmOutputWithContext(context.Background())
}

func (i GetClientAddonRmArgs) ToGetClientAddonRmOutputWithContext(ctx context.Context) GetClientAddonRmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonRmOutput)
}

func (i GetClientAddonRmArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonRm] {
	return pulumix.Output[GetClientAddonRm]{
		OutputState: i.ToGetClientAddonRmOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonRmArrayInput is an input type that accepts GetClientAddonRmArray and GetClientAddonRmArrayOutput values.
// You can construct a concrete instance of `GetClientAddonRmArrayInput` via:
//
//	GetClientAddonRmArray{ GetClientAddonRmArgs{...} }
type GetClientAddonRmArrayInput interface {
	pulumi.Input

	ToGetClientAddonRmArrayOutput() GetClientAddonRmArrayOutput
	ToGetClientAddonRmArrayOutputWithContext(context.Context) GetClientAddonRmArrayOutput
}

type GetClientAddonRmArray []GetClientAddonRmInput

func (GetClientAddonRmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonRm)(nil)).Elem()
}

func (i GetClientAddonRmArray) ToGetClientAddonRmArrayOutput() GetClientAddonRmArrayOutput {
	return i.ToGetClientAddonRmArrayOutputWithContext(context.Background())
}

func (i GetClientAddonRmArray) ToGetClientAddonRmArrayOutputWithContext(ctx context.Context) GetClientAddonRmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonRmArrayOutput)
}

func (i GetClientAddonRmArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonRm] {
	return pulumix.Output[[]GetClientAddonRm]{
		OutputState: i.ToGetClientAddonRmArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonRmOutput struct{ *pulumi.OutputState }

func (GetClientAddonRmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonRm)(nil)).Elem()
}

func (o GetClientAddonRmOutput) ToGetClientAddonRmOutput() GetClientAddonRmOutput {
	return o
}

func (o GetClientAddonRmOutput) ToGetClientAddonRmOutputWithContext(ctx context.Context) GetClientAddonRmOutput {
	return o
}

func (o GetClientAddonRmOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonRm] {
	return pulumix.Output[GetClientAddonRm]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonRmOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonRm) string { return v.Url }).(pulumi.StringOutput)
}

type GetClientAddonRmArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonRmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonRm)(nil)).Elem()
}

func (o GetClientAddonRmArrayOutput) ToGetClientAddonRmArrayOutput() GetClientAddonRmArrayOutput {
	return o
}

func (o GetClientAddonRmArrayOutput) ToGetClientAddonRmArrayOutputWithContext(ctx context.Context) GetClientAddonRmArrayOutput {
	return o
}

func (o GetClientAddonRmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonRm] {
	return pulumix.Output[[]GetClientAddonRm]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonRmArrayOutput) Index(i pulumi.IntInput) GetClientAddonRmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonRm {
		return vs[0].([]GetClientAddonRm)[vs[1].(int)]
	}).(GetClientAddonRmOutput)
}

type GetClientAddonSalesforce struct {
	EntityId string `pulumi:"entityId"`
}

// GetClientAddonSalesforceInput is an input type that accepts GetClientAddonSalesforceArgs and GetClientAddonSalesforceOutput values.
// You can construct a concrete instance of `GetClientAddonSalesforceInput` via:
//
//	GetClientAddonSalesforceArgs{...}
type GetClientAddonSalesforceInput interface {
	pulumi.Input

	ToGetClientAddonSalesforceOutput() GetClientAddonSalesforceOutput
	ToGetClientAddonSalesforceOutputWithContext(context.Context) GetClientAddonSalesforceOutput
}

type GetClientAddonSalesforceArgs struct {
	EntityId pulumi.StringInput `pulumi:"entityId"`
}

func (GetClientAddonSalesforceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSalesforce)(nil)).Elem()
}

func (i GetClientAddonSalesforceArgs) ToGetClientAddonSalesforceOutput() GetClientAddonSalesforceOutput {
	return i.ToGetClientAddonSalesforceOutputWithContext(context.Background())
}

func (i GetClientAddonSalesforceArgs) ToGetClientAddonSalesforceOutputWithContext(ctx context.Context) GetClientAddonSalesforceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSalesforceOutput)
}

func (i GetClientAddonSalesforceArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSalesforce] {
	return pulumix.Output[GetClientAddonSalesforce]{
		OutputState: i.ToGetClientAddonSalesforceOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSalesforceArrayInput is an input type that accepts GetClientAddonSalesforceArray and GetClientAddonSalesforceArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSalesforceArrayInput` via:
//
//	GetClientAddonSalesforceArray{ GetClientAddonSalesforceArgs{...} }
type GetClientAddonSalesforceArrayInput interface {
	pulumi.Input

	ToGetClientAddonSalesforceArrayOutput() GetClientAddonSalesforceArrayOutput
	ToGetClientAddonSalesforceArrayOutputWithContext(context.Context) GetClientAddonSalesforceArrayOutput
}

type GetClientAddonSalesforceArray []GetClientAddonSalesforceInput

func (GetClientAddonSalesforceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSalesforce)(nil)).Elem()
}

func (i GetClientAddonSalesforceArray) ToGetClientAddonSalesforceArrayOutput() GetClientAddonSalesforceArrayOutput {
	return i.ToGetClientAddonSalesforceArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSalesforceArray) ToGetClientAddonSalesforceArrayOutputWithContext(ctx context.Context) GetClientAddonSalesforceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSalesforceArrayOutput)
}

func (i GetClientAddonSalesforceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSalesforce] {
	return pulumix.Output[[]GetClientAddonSalesforce]{
		OutputState: i.ToGetClientAddonSalesforceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSalesforceOutput struct{ *pulumi.OutputState }

func (GetClientAddonSalesforceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSalesforce)(nil)).Elem()
}

func (o GetClientAddonSalesforceOutput) ToGetClientAddonSalesforceOutput() GetClientAddonSalesforceOutput {
	return o
}

func (o GetClientAddonSalesforceOutput) ToGetClientAddonSalesforceOutputWithContext(ctx context.Context) GetClientAddonSalesforceOutput {
	return o
}

func (o GetClientAddonSalesforceOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSalesforce] {
	return pulumix.Output[GetClientAddonSalesforce]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSalesforceOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSalesforce) string { return v.EntityId }).(pulumi.StringOutput)
}

type GetClientAddonSalesforceArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSalesforceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSalesforce)(nil)).Elem()
}

func (o GetClientAddonSalesforceArrayOutput) ToGetClientAddonSalesforceArrayOutput() GetClientAddonSalesforceArrayOutput {
	return o
}

func (o GetClientAddonSalesforceArrayOutput) ToGetClientAddonSalesforceArrayOutputWithContext(ctx context.Context) GetClientAddonSalesforceArrayOutput {
	return o
}

func (o GetClientAddonSalesforceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSalesforce] {
	return pulumix.Output[[]GetClientAddonSalesforce]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSalesforceArrayOutput) Index(i pulumi.IntInput) GetClientAddonSalesforceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSalesforce {
		return vs[0].([]GetClientAddonSalesforce)[vs[1].(int)]
	}).(GetClientAddonSalesforceOutput)
}

type GetClientAddonSalesforceApi struct {
	// The ID of the client. If not provided, `name` must be set.
	ClientId            string `pulumi:"clientId"`
	CommunityName       string `pulumi:"communityName"`
	CommunityUrlSection string `pulumi:"communityUrlSection"`
	Principal           string `pulumi:"principal"`
}

// GetClientAddonSalesforceApiInput is an input type that accepts GetClientAddonSalesforceApiArgs and GetClientAddonSalesforceApiOutput values.
// You can construct a concrete instance of `GetClientAddonSalesforceApiInput` via:
//
//	GetClientAddonSalesforceApiArgs{...}
type GetClientAddonSalesforceApiInput interface {
	pulumi.Input

	ToGetClientAddonSalesforceApiOutput() GetClientAddonSalesforceApiOutput
	ToGetClientAddonSalesforceApiOutputWithContext(context.Context) GetClientAddonSalesforceApiOutput
}

type GetClientAddonSalesforceApiArgs struct {
	// The ID of the client. If not provided, `name` must be set.
	ClientId            pulumi.StringInput `pulumi:"clientId"`
	CommunityName       pulumi.StringInput `pulumi:"communityName"`
	CommunityUrlSection pulumi.StringInput `pulumi:"communityUrlSection"`
	Principal           pulumi.StringInput `pulumi:"principal"`
}

func (GetClientAddonSalesforceApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSalesforceApi)(nil)).Elem()
}

func (i GetClientAddonSalesforceApiArgs) ToGetClientAddonSalesforceApiOutput() GetClientAddonSalesforceApiOutput {
	return i.ToGetClientAddonSalesforceApiOutputWithContext(context.Background())
}

func (i GetClientAddonSalesforceApiArgs) ToGetClientAddonSalesforceApiOutputWithContext(ctx context.Context) GetClientAddonSalesforceApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSalesforceApiOutput)
}

func (i GetClientAddonSalesforceApiArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSalesforceApi] {
	return pulumix.Output[GetClientAddonSalesforceApi]{
		OutputState: i.ToGetClientAddonSalesforceApiOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSalesforceApiArrayInput is an input type that accepts GetClientAddonSalesforceApiArray and GetClientAddonSalesforceApiArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSalesforceApiArrayInput` via:
//
//	GetClientAddonSalesforceApiArray{ GetClientAddonSalesforceApiArgs{...} }
type GetClientAddonSalesforceApiArrayInput interface {
	pulumi.Input

	ToGetClientAddonSalesforceApiArrayOutput() GetClientAddonSalesforceApiArrayOutput
	ToGetClientAddonSalesforceApiArrayOutputWithContext(context.Context) GetClientAddonSalesforceApiArrayOutput
}

type GetClientAddonSalesforceApiArray []GetClientAddonSalesforceApiInput

func (GetClientAddonSalesforceApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSalesforceApi)(nil)).Elem()
}

func (i GetClientAddonSalesforceApiArray) ToGetClientAddonSalesforceApiArrayOutput() GetClientAddonSalesforceApiArrayOutput {
	return i.ToGetClientAddonSalesforceApiArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSalesforceApiArray) ToGetClientAddonSalesforceApiArrayOutputWithContext(ctx context.Context) GetClientAddonSalesforceApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSalesforceApiArrayOutput)
}

func (i GetClientAddonSalesforceApiArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSalesforceApi] {
	return pulumix.Output[[]GetClientAddonSalesforceApi]{
		OutputState: i.ToGetClientAddonSalesforceApiArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSalesforceApiOutput struct{ *pulumi.OutputState }

func (GetClientAddonSalesforceApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSalesforceApi)(nil)).Elem()
}

func (o GetClientAddonSalesforceApiOutput) ToGetClientAddonSalesforceApiOutput() GetClientAddonSalesforceApiOutput {
	return o
}

func (o GetClientAddonSalesforceApiOutput) ToGetClientAddonSalesforceApiOutputWithContext(ctx context.Context) GetClientAddonSalesforceApiOutput {
	return o
}

func (o GetClientAddonSalesforceApiOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSalesforceApi] {
	return pulumix.Output[GetClientAddonSalesforceApi]{
		OutputState: o.OutputState,
	}
}

// The ID of the client. If not provided, `name` must be set.
func (o GetClientAddonSalesforceApiOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSalesforceApi) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetClientAddonSalesforceApiOutput) CommunityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSalesforceApi) string { return v.CommunityName }).(pulumi.StringOutput)
}

func (o GetClientAddonSalesforceApiOutput) CommunityUrlSection() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSalesforceApi) string { return v.CommunityUrlSection }).(pulumi.StringOutput)
}

func (o GetClientAddonSalesforceApiOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSalesforceApi) string { return v.Principal }).(pulumi.StringOutput)
}

type GetClientAddonSalesforceApiArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSalesforceApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSalesforceApi)(nil)).Elem()
}

func (o GetClientAddonSalesforceApiArrayOutput) ToGetClientAddonSalesforceApiArrayOutput() GetClientAddonSalesforceApiArrayOutput {
	return o
}

func (o GetClientAddonSalesforceApiArrayOutput) ToGetClientAddonSalesforceApiArrayOutputWithContext(ctx context.Context) GetClientAddonSalesforceApiArrayOutput {
	return o
}

func (o GetClientAddonSalesforceApiArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSalesforceApi] {
	return pulumix.Output[[]GetClientAddonSalesforceApi]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSalesforceApiArrayOutput) Index(i pulumi.IntInput) GetClientAddonSalesforceApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSalesforceApi {
		return vs[0].([]GetClientAddonSalesforceApi)[vs[1].(int)]
	}).(GetClientAddonSalesforceApiOutput)
}

type GetClientAddonSalesforceSandboxApi struct {
	// The ID of the client. If not provided, `name` must be set.
	ClientId            string `pulumi:"clientId"`
	CommunityName       string `pulumi:"communityName"`
	CommunityUrlSection string `pulumi:"communityUrlSection"`
	Principal           string `pulumi:"principal"`
}

// GetClientAddonSalesforceSandboxApiInput is an input type that accepts GetClientAddonSalesforceSandboxApiArgs and GetClientAddonSalesforceSandboxApiOutput values.
// You can construct a concrete instance of `GetClientAddonSalesforceSandboxApiInput` via:
//
//	GetClientAddonSalesforceSandboxApiArgs{...}
type GetClientAddonSalesforceSandboxApiInput interface {
	pulumi.Input

	ToGetClientAddonSalesforceSandboxApiOutput() GetClientAddonSalesforceSandboxApiOutput
	ToGetClientAddonSalesforceSandboxApiOutputWithContext(context.Context) GetClientAddonSalesforceSandboxApiOutput
}

type GetClientAddonSalesforceSandboxApiArgs struct {
	// The ID of the client. If not provided, `name` must be set.
	ClientId            pulumi.StringInput `pulumi:"clientId"`
	CommunityName       pulumi.StringInput `pulumi:"communityName"`
	CommunityUrlSection pulumi.StringInput `pulumi:"communityUrlSection"`
	Principal           pulumi.StringInput `pulumi:"principal"`
}

func (GetClientAddonSalesforceSandboxApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSalesforceSandboxApi)(nil)).Elem()
}

func (i GetClientAddonSalesforceSandboxApiArgs) ToGetClientAddonSalesforceSandboxApiOutput() GetClientAddonSalesforceSandboxApiOutput {
	return i.ToGetClientAddonSalesforceSandboxApiOutputWithContext(context.Background())
}

func (i GetClientAddonSalesforceSandboxApiArgs) ToGetClientAddonSalesforceSandboxApiOutputWithContext(ctx context.Context) GetClientAddonSalesforceSandboxApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSalesforceSandboxApiOutput)
}

func (i GetClientAddonSalesforceSandboxApiArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSalesforceSandboxApi] {
	return pulumix.Output[GetClientAddonSalesforceSandboxApi]{
		OutputState: i.ToGetClientAddonSalesforceSandboxApiOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSalesforceSandboxApiArrayInput is an input type that accepts GetClientAddonSalesforceSandboxApiArray and GetClientAddonSalesforceSandboxApiArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSalesforceSandboxApiArrayInput` via:
//
//	GetClientAddonSalesforceSandboxApiArray{ GetClientAddonSalesforceSandboxApiArgs{...} }
type GetClientAddonSalesforceSandboxApiArrayInput interface {
	pulumi.Input

	ToGetClientAddonSalesforceSandboxApiArrayOutput() GetClientAddonSalesforceSandboxApiArrayOutput
	ToGetClientAddonSalesforceSandboxApiArrayOutputWithContext(context.Context) GetClientAddonSalesforceSandboxApiArrayOutput
}

type GetClientAddonSalesforceSandboxApiArray []GetClientAddonSalesforceSandboxApiInput

func (GetClientAddonSalesforceSandboxApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSalesforceSandboxApi)(nil)).Elem()
}

func (i GetClientAddonSalesforceSandboxApiArray) ToGetClientAddonSalesforceSandboxApiArrayOutput() GetClientAddonSalesforceSandboxApiArrayOutput {
	return i.ToGetClientAddonSalesforceSandboxApiArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSalesforceSandboxApiArray) ToGetClientAddonSalesforceSandboxApiArrayOutputWithContext(ctx context.Context) GetClientAddonSalesforceSandboxApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSalesforceSandboxApiArrayOutput)
}

func (i GetClientAddonSalesforceSandboxApiArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSalesforceSandboxApi] {
	return pulumix.Output[[]GetClientAddonSalesforceSandboxApi]{
		OutputState: i.ToGetClientAddonSalesforceSandboxApiArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSalesforceSandboxApiOutput struct{ *pulumi.OutputState }

func (GetClientAddonSalesforceSandboxApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSalesforceSandboxApi)(nil)).Elem()
}

func (o GetClientAddonSalesforceSandboxApiOutput) ToGetClientAddonSalesforceSandboxApiOutput() GetClientAddonSalesforceSandboxApiOutput {
	return o
}

func (o GetClientAddonSalesforceSandboxApiOutput) ToGetClientAddonSalesforceSandboxApiOutputWithContext(ctx context.Context) GetClientAddonSalesforceSandboxApiOutput {
	return o
}

func (o GetClientAddonSalesforceSandboxApiOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSalesforceSandboxApi] {
	return pulumix.Output[GetClientAddonSalesforceSandboxApi]{
		OutputState: o.OutputState,
	}
}

// The ID of the client. If not provided, `name` must be set.
func (o GetClientAddonSalesforceSandboxApiOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSalesforceSandboxApi) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetClientAddonSalesforceSandboxApiOutput) CommunityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSalesforceSandboxApi) string { return v.CommunityName }).(pulumi.StringOutput)
}

func (o GetClientAddonSalesforceSandboxApiOutput) CommunityUrlSection() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSalesforceSandboxApi) string { return v.CommunityUrlSection }).(pulumi.StringOutput)
}

func (o GetClientAddonSalesforceSandboxApiOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSalesforceSandboxApi) string { return v.Principal }).(pulumi.StringOutput)
}

type GetClientAddonSalesforceSandboxApiArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSalesforceSandboxApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSalesforceSandboxApi)(nil)).Elem()
}

func (o GetClientAddonSalesforceSandboxApiArrayOutput) ToGetClientAddonSalesforceSandboxApiArrayOutput() GetClientAddonSalesforceSandboxApiArrayOutput {
	return o
}

func (o GetClientAddonSalesforceSandboxApiArrayOutput) ToGetClientAddonSalesforceSandboxApiArrayOutputWithContext(ctx context.Context) GetClientAddonSalesforceSandboxApiArrayOutput {
	return o
}

func (o GetClientAddonSalesforceSandboxApiArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSalesforceSandboxApi] {
	return pulumix.Output[[]GetClientAddonSalesforceSandboxApi]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSalesforceSandboxApiArrayOutput) Index(i pulumi.IntInput) GetClientAddonSalesforceSandboxApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSalesforceSandboxApi {
		return vs[0].([]GetClientAddonSalesforceSandboxApi)[vs[1].(int)]
	}).(GetClientAddonSalesforceSandboxApiOutput)
}

type GetClientAddonSamlp struct {
	Audience                       string                      `pulumi:"audience"`
	AuthnContextClassRef           string                      `pulumi:"authnContextClassRef"`
	Binding                        string                      `pulumi:"binding"`
	CreateUpnClaim                 bool                        `pulumi:"createUpnClaim"`
	Destination                    string                      `pulumi:"destination"`
	DigestAlgorithm                string                      `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     bool                        `pulumi:"includeAttributeNameFormat"`
	Issuer                         string                      `pulumi:"issuer"`
	LifetimeInSeconds              int                         `pulumi:"lifetimeInSeconds"`
	Logouts                        []GetClientAddonSamlpLogout `pulumi:"logouts"`
	MapIdentities                  bool                        `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           bool                        `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       map[string]interface{}      `pulumi:"mappings"`
	NameIdentifierFormat           string                      `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           []string                    `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping bool                        `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      string                      `pulumi:"recipient"`
	SignResponse                   bool                        `pulumi:"signResponse"`
	SignatureAlgorithm             string                      `pulumi:"signatureAlgorithm"`
	SigningCert                    string                      `pulumi:"signingCert"`
	TypedAttributes                bool                        `pulumi:"typedAttributes"`
}

// GetClientAddonSamlpInput is an input type that accepts GetClientAddonSamlpArgs and GetClientAddonSamlpOutput values.
// You can construct a concrete instance of `GetClientAddonSamlpInput` via:
//
//	GetClientAddonSamlpArgs{...}
type GetClientAddonSamlpInput interface {
	pulumi.Input

	ToGetClientAddonSamlpOutput() GetClientAddonSamlpOutput
	ToGetClientAddonSamlpOutputWithContext(context.Context) GetClientAddonSamlpOutput
}

type GetClientAddonSamlpArgs struct {
	Audience                       pulumi.StringInput                  `pulumi:"audience"`
	AuthnContextClassRef           pulumi.StringInput                  `pulumi:"authnContextClassRef"`
	Binding                        pulumi.StringInput                  `pulumi:"binding"`
	CreateUpnClaim                 pulumi.BoolInput                    `pulumi:"createUpnClaim"`
	Destination                    pulumi.StringInput                  `pulumi:"destination"`
	DigestAlgorithm                pulumi.StringInput                  `pulumi:"digestAlgorithm"`
	IncludeAttributeNameFormat     pulumi.BoolInput                    `pulumi:"includeAttributeNameFormat"`
	Issuer                         pulumi.StringInput                  `pulumi:"issuer"`
	LifetimeInSeconds              pulumi.IntInput                     `pulumi:"lifetimeInSeconds"`
	Logouts                        GetClientAddonSamlpLogoutArrayInput `pulumi:"logouts"`
	MapIdentities                  pulumi.BoolInput                    `pulumi:"mapIdentities"`
	MapUnknownClaimsAsIs           pulumi.BoolInput                    `pulumi:"mapUnknownClaimsAsIs"`
	Mappings                       pulumi.MapInput                     `pulumi:"mappings"`
	NameIdentifierFormat           pulumi.StringInput                  `pulumi:"nameIdentifierFormat"`
	NameIdentifierProbes           pulumi.StringArrayInput             `pulumi:"nameIdentifierProbes"`
	PassthroughClaimsWithNoMapping pulumi.BoolInput                    `pulumi:"passthroughClaimsWithNoMapping"`
	Recipient                      pulumi.StringInput                  `pulumi:"recipient"`
	SignResponse                   pulumi.BoolInput                    `pulumi:"signResponse"`
	SignatureAlgorithm             pulumi.StringInput                  `pulumi:"signatureAlgorithm"`
	SigningCert                    pulumi.StringInput                  `pulumi:"signingCert"`
	TypedAttributes                pulumi.BoolInput                    `pulumi:"typedAttributes"`
}

func (GetClientAddonSamlpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSamlp)(nil)).Elem()
}

func (i GetClientAddonSamlpArgs) ToGetClientAddonSamlpOutput() GetClientAddonSamlpOutput {
	return i.ToGetClientAddonSamlpOutputWithContext(context.Background())
}

func (i GetClientAddonSamlpArgs) ToGetClientAddonSamlpOutputWithContext(ctx context.Context) GetClientAddonSamlpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSamlpOutput)
}

func (i GetClientAddonSamlpArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSamlp] {
	return pulumix.Output[GetClientAddonSamlp]{
		OutputState: i.ToGetClientAddonSamlpOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSamlpArrayInput is an input type that accepts GetClientAddonSamlpArray and GetClientAddonSamlpArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSamlpArrayInput` via:
//
//	GetClientAddonSamlpArray{ GetClientAddonSamlpArgs{...} }
type GetClientAddonSamlpArrayInput interface {
	pulumi.Input

	ToGetClientAddonSamlpArrayOutput() GetClientAddonSamlpArrayOutput
	ToGetClientAddonSamlpArrayOutputWithContext(context.Context) GetClientAddonSamlpArrayOutput
}

type GetClientAddonSamlpArray []GetClientAddonSamlpInput

func (GetClientAddonSamlpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSamlp)(nil)).Elem()
}

func (i GetClientAddonSamlpArray) ToGetClientAddonSamlpArrayOutput() GetClientAddonSamlpArrayOutput {
	return i.ToGetClientAddonSamlpArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSamlpArray) ToGetClientAddonSamlpArrayOutputWithContext(ctx context.Context) GetClientAddonSamlpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSamlpArrayOutput)
}

func (i GetClientAddonSamlpArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSamlp] {
	return pulumix.Output[[]GetClientAddonSamlp]{
		OutputState: i.ToGetClientAddonSamlpArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSamlpOutput struct{ *pulumi.OutputState }

func (GetClientAddonSamlpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSamlp)(nil)).Elem()
}

func (o GetClientAddonSamlpOutput) ToGetClientAddonSamlpOutput() GetClientAddonSamlpOutput {
	return o
}

func (o GetClientAddonSamlpOutput) ToGetClientAddonSamlpOutputWithContext(ctx context.Context) GetClientAddonSamlpOutput {
	return o
}

func (o GetClientAddonSamlpOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSamlp] {
	return pulumix.Output[GetClientAddonSamlp]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSamlpOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Audience }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) AuthnContextClassRef() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.AuthnContextClassRef }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) Binding() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Binding }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) CreateUpnClaim() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.CreateUpnClaim }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Destination() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Destination }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) DigestAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.DigestAlgorithm }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) IncludeAttributeNameFormat() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.IncludeAttributeNameFormat }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Issuer }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetClientAddonSamlpOutput) Logouts() GetClientAddonSamlpLogoutArrayOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) []GetClientAddonSamlpLogout { return v.Logouts }).(GetClientAddonSamlpLogoutArrayOutput)
}

func (o GetClientAddonSamlpOutput) MapIdentities() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.MapIdentities }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) MapUnknownClaimsAsIs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.MapUnknownClaimsAsIs }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Mappings() pulumi.MapOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) map[string]interface{} { return v.Mappings }).(pulumi.MapOutput)
}

func (o GetClientAddonSamlpOutput) NameIdentifierFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.NameIdentifierFormat }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) NameIdentifierProbes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) []string { return v.NameIdentifierProbes }).(pulumi.StringArrayOutput)
}

func (o GetClientAddonSamlpOutput) PassthroughClaimsWithNoMapping() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.PassthroughClaimsWithNoMapping }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) Recipient() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.Recipient }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) SignResponse() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.SignResponse }).(pulumi.BoolOutput)
}

func (o GetClientAddonSamlpOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) SigningCert() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) string { return v.SigningCert }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpOutput) TypedAttributes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlp) bool { return v.TypedAttributes }).(pulumi.BoolOutput)
}

type GetClientAddonSamlpArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSamlpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSamlp)(nil)).Elem()
}

func (o GetClientAddonSamlpArrayOutput) ToGetClientAddonSamlpArrayOutput() GetClientAddonSamlpArrayOutput {
	return o
}

func (o GetClientAddonSamlpArrayOutput) ToGetClientAddonSamlpArrayOutputWithContext(ctx context.Context) GetClientAddonSamlpArrayOutput {
	return o
}

func (o GetClientAddonSamlpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSamlp] {
	return pulumix.Output[[]GetClientAddonSamlp]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSamlpArrayOutput) Index(i pulumi.IntInput) GetClientAddonSamlpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSamlp {
		return vs[0].([]GetClientAddonSamlp)[vs[1].(int)]
	}).(GetClientAddonSamlpOutput)
}

type GetClientAddonSamlpLogout struct {
	Callback   string `pulumi:"callback"`
	SloEnabled bool   `pulumi:"sloEnabled"`
}

// GetClientAddonSamlpLogoutInput is an input type that accepts GetClientAddonSamlpLogoutArgs and GetClientAddonSamlpLogoutOutput values.
// You can construct a concrete instance of `GetClientAddonSamlpLogoutInput` via:
//
//	GetClientAddonSamlpLogoutArgs{...}
type GetClientAddonSamlpLogoutInput interface {
	pulumi.Input

	ToGetClientAddonSamlpLogoutOutput() GetClientAddonSamlpLogoutOutput
	ToGetClientAddonSamlpLogoutOutputWithContext(context.Context) GetClientAddonSamlpLogoutOutput
}

type GetClientAddonSamlpLogoutArgs struct {
	Callback   pulumi.StringInput `pulumi:"callback"`
	SloEnabled pulumi.BoolInput   `pulumi:"sloEnabled"`
}

func (GetClientAddonSamlpLogoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSamlpLogout)(nil)).Elem()
}

func (i GetClientAddonSamlpLogoutArgs) ToGetClientAddonSamlpLogoutOutput() GetClientAddonSamlpLogoutOutput {
	return i.ToGetClientAddonSamlpLogoutOutputWithContext(context.Background())
}

func (i GetClientAddonSamlpLogoutArgs) ToGetClientAddonSamlpLogoutOutputWithContext(ctx context.Context) GetClientAddonSamlpLogoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSamlpLogoutOutput)
}

func (i GetClientAddonSamlpLogoutArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSamlpLogout] {
	return pulumix.Output[GetClientAddonSamlpLogout]{
		OutputState: i.ToGetClientAddonSamlpLogoutOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSamlpLogoutArrayInput is an input type that accepts GetClientAddonSamlpLogoutArray and GetClientAddonSamlpLogoutArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSamlpLogoutArrayInput` via:
//
//	GetClientAddonSamlpLogoutArray{ GetClientAddonSamlpLogoutArgs{...} }
type GetClientAddonSamlpLogoutArrayInput interface {
	pulumi.Input

	ToGetClientAddonSamlpLogoutArrayOutput() GetClientAddonSamlpLogoutArrayOutput
	ToGetClientAddonSamlpLogoutArrayOutputWithContext(context.Context) GetClientAddonSamlpLogoutArrayOutput
}

type GetClientAddonSamlpLogoutArray []GetClientAddonSamlpLogoutInput

func (GetClientAddonSamlpLogoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSamlpLogout)(nil)).Elem()
}

func (i GetClientAddonSamlpLogoutArray) ToGetClientAddonSamlpLogoutArrayOutput() GetClientAddonSamlpLogoutArrayOutput {
	return i.ToGetClientAddonSamlpLogoutArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSamlpLogoutArray) ToGetClientAddonSamlpLogoutArrayOutputWithContext(ctx context.Context) GetClientAddonSamlpLogoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSamlpLogoutArrayOutput)
}

func (i GetClientAddonSamlpLogoutArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSamlpLogout] {
	return pulumix.Output[[]GetClientAddonSamlpLogout]{
		OutputState: i.ToGetClientAddonSamlpLogoutArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSamlpLogoutOutput struct{ *pulumi.OutputState }

func (GetClientAddonSamlpLogoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSamlpLogout)(nil)).Elem()
}

func (o GetClientAddonSamlpLogoutOutput) ToGetClientAddonSamlpLogoutOutput() GetClientAddonSamlpLogoutOutput {
	return o
}

func (o GetClientAddonSamlpLogoutOutput) ToGetClientAddonSamlpLogoutOutputWithContext(ctx context.Context) GetClientAddonSamlpLogoutOutput {
	return o
}

func (o GetClientAddonSamlpLogoutOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSamlpLogout] {
	return pulumix.Output[GetClientAddonSamlpLogout]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSamlpLogoutOutput) Callback() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSamlpLogout) string { return v.Callback }).(pulumi.StringOutput)
}

func (o GetClientAddonSamlpLogoutOutput) SloEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientAddonSamlpLogout) bool { return v.SloEnabled }).(pulumi.BoolOutput)
}

type GetClientAddonSamlpLogoutArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSamlpLogoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSamlpLogout)(nil)).Elem()
}

func (o GetClientAddonSamlpLogoutArrayOutput) ToGetClientAddonSamlpLogoutArrayOutput() GetClientAddonSamlpLogoutArrayOutput {
	return o
}

func (o GetClientAddonSamlpLogoutArrayOutput) ToGetClientAddonSamlpLogoutArrayOutputWithContext(ctx context.Context) GetClientAddonSamlpLogoutArrayOutput {
	return o
}

func (o GetClientAddonSamlpLogoutArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSamlpLogout] {
	return pulumix.Output[[]GetClientAddonSamlpLogout]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSamlpLogoutArrayOutput) Index(i pulumi.IntInput) GetClientAddonSamlpLogoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSamlpLogout {
		return vs[0].([]GetClientAddonSamlpLogout)[vs[1].(int)]
	}).(GetClientAddonSamlpLogoutOutput)
}

type GetClientAddonSapApi struct {
	// The ID of the client. If not provided, `name` must be set.
	ClientId             string `pulumi:"clientId"`
	NameIdentifierFormat string `pulumi:"nameIdentifierFormat"`
	Scope                string `pulumi:"scope"`
	ServicePassword      string `pulumi:"servicePassword"`
	TokenEndpointUrl     string `pulumi:"tokenEndpointUrl"`
	UsernameAttribute    string `pulumi:"usernameAttribute"`
}

// GetClientAddonSapApiInput is an input type that accepts GetClientAddonSapApiArgs and GetClientAddonSapApiOutput values.
// You can construct a concrete instance of `GetClientAddonSapApiInput` via:
//
//	GetClientAddonSapApiArgs{...}
type GetClientAddonSapApiInput interface {
	pulumi.Input

	ToGetClientAddonSapApiOutput() GetClientAddonSapApiOutput
	ToGetClientAddonSapApiOutputWithContext(context.Context) GetClientAddonSapApiOutput
}

type GetClientAddonSapApiArgs struct {
	// The ID of the client. If not provided, `name` must be set.
	ClientId             pulumi.StringInput `pulumi:"clientId"`
	NameIdentifierFormat pulumi.StringInput `pulumi:"nameIdentifierFormat"`
	Scope                pulumi.StringInput `pulumi:"scope"`
	ServicePassword      pulumi.StringInput `pulumi:"servicePassword"`
	TokenEndpointUrl     pulumi.StringInput `pulumi:"tokenEndpointUrl"`
	UsernameAttribute    pulumi.StringInput `pulumi:"usernameAttribute"`
}

func (GetClientAddonSapApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSapApi)(nil)).Elem()
}

func (i GetClientAddonSapApiArgs) ToGetClientAddonSapApiOutput() GetClientAddonSapApiOutput {
	return i.ToGetClientAddonSapApiOutputWithContext(context.Background())
}

func (i GetClientAddonSapApiArgs) ToGetClientAddonSapApiOutputWithContext(ctx context.Context) GetClientAddonSapApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSapApiOutput)
}

func (i GetClientAddonSapApiArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSapApi] {
	return pulumix.Output[GetClientAddonSapApi]{
		OutputState: i.ToGetClientAddonSapApiOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSapApiArrayInput is an input type that accepts GetClientAddonSapApiArray and GetClientAddonSapApiArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSapApiArrayInput` via:
//
//	GetClientAddonSapApiArray{ GetClientAddonSapApiArgs{...} }
type GetClientAddonSapApiArrayInput interface {
	pulumi.Input

	ToGetClientAddonSapApiArrayOutput() GetClientAddonSapApiArrayOutput
	ToGetClientAddonSapApiArrayOutputWithContext(context.Context) GetClientAddonSapApiArrayOutput
}

type GetClientAddonSapApiArray []GetClientAddonSapApiInput

func (GetClientAddonSapApiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSapApi)(nil)).Elem()
}

func (i GetClientAddonSapApiArray) ToGetClientAddonSapApiArrayOutput() GetClientAddonSapApiArrayOutput {
	return i.ToGetClientAddonSapApiArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSapApiArray) ToGetClientAddonSapApiArrayOutputWithContext(ctx context.Context) GetClientAddonSapApiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSapApiArrayOutput)
}

func (i GetClientAddonSapApiArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSapApi] {
	return pulumix.Output[[]GetClientAddonSapApi]{
		OutputState: i.ToGetClientAddonSapApiArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSapApiOutput struct{ *pulumi.OutputState }

func (GetClientAddonSapApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSapApi)(nil)).Elem()
}

func (o GetClientAddonSapApiOutput) ToGetClientAddonSapApiOutput() GetClientAddonSapApiOutput {
	return o
}

func (o GetClientAddonSapApiOutput) ToGetClientAddonSapApiOutputWithContext(ctx context.Context) GetClientAddonSapApiOutput {
	return o
}

func (o GetClientAddonSapApiOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSapApi] {
	return pulumix.Output[GetClientAddonSapApi]{
		OutputState: o.OutputState,
	}
}

// The ID of the client. If not provided, `name` must be set.
func (o GetClientAddonSapApiOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSapApi) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetClientAddonSapApiOutput) NameIdentifierFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSapApi) string { return v.NameIdentifierFormat }).(pulumi.StringOutput)
}

func (o GetClientAddonSapApiOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSapApi) string { return v.Scope }).(pulumi.StringOutput)
}

func (o GetClientAddonSapApiOutput) ServicePassword() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSapApi) string { return v.ServicePassword }).(pulumi.StringOutput)
}

func (o GetClientAddonSapApiOutput) TokenEndpointUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSapApi) string { return v.TokenEndpointUrl }).(pulumi.StringOutput)
}

func (o GetClientAddonSapApiOutput) UsernameAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSapApi) string { return v.UsernameAttribute }).(pulumi.StringOutput)
}

type GetClientAddonSapApiArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSapApiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSapApi)(nil)).Elem()
}

func (o GetClientAddonSapApiArrayOutput) ToGetClientAddonSapApiArrayOutput() GetClientAddonSapApiArrayOutput {
	return o
}

func (o GetClientAddonSapApiArrayOutput) ToGetClientAddonSapApiArrayOutputWithContext(ctx context.Context) GetClientAddonSapApiArrayOutput {
	return o
}

func (o GetClientAddonSapApiArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSapApi] {
	return pulumix.Output[[]GetClientAddonSapApi]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSapApiArrayOutput) Index(i pulumi.IntInput) GetClientAddonSapApiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSapApi {
		return vs[0].([]GetClientAddonSapApi)[vs[1].(int)]
	}).(GetClientAddonSapApiOutput)
}

type GetClientAddonSentry struct {
	BaseUrl string `pulumi:"baseUrl"`
	OrgSlug string `pulumi:"orgSlug"`
}

// GetClientAddonSentryInput is an input type that accepts GetClientAddonSentryArgs and GetClientAddonSentryOutput values.
// You can construct a concrete instance of `GetClientAddonSentryInput` via:
//
//	GetClientAddonSentryArgs{...}
type GetClientAddonSentryInput interface {
	pulumi.Input

	ToGetClientAddonSentryOutput() GetClientAddonSentryOutput
	ToGetClientAddonSentryOutputWithContext(context.Context) GetClientAddonSentryOutput
}

type GetClientAddonSentryArgs struct {
	BaseUrl pulumi.StringInput `pulumi:"baseUrl"`
	OrgSlug pulumi.StringInput `pulumi:"orgSlug"`
}

func (GetClientAddonSentryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSentry)(nil)).Elem()
}

func (i GetClientAddonSentryArgs) ToGetClientAddonSentryOutput() GetClientAddonSentryOutput {
	return i.ToGetClientAddonSentryOutputWithContext(context.Background())
}

func (i GetClientAddonSentryArgs) ToGetClientAddonSentryOutputWithContext(ctx context.Context) GetClientAddonSentryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSentryOutput)
}

func (i GetClientAddonSentryArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSentry] {
	return pulumix.Output[GetClientAddonSentry]{
		OutputState: i.ToGetClientAddonSentryOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSentryArrayInput is an input type that accepts GetClientAddonSentryArray and GetClientAddonSentryArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSentryArrayInput` via:
//
//	GetClientAddonSentryArray{ GetClientAddonSentryArgs{...} }
type GetClientAddonSentryArrayInput interface {
	pulumi.Input

	ToGetClientAddonSentryArrayOutput() GetClientAddonSentryArrayOutput
	ToGetClientAddonSentryArrayOutputWithContext(context.Context) GetClientAddonSentryArrayOutput
}

type GetClientAddonSentryArray []GetClientAddonSentryInput

func (GetClientAddonSentryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSentry)(nil)).Elem()
}

func (i GetClientAddonSentryArray) ToGetClientAddonSentryArrayOutput() GetClientAddonSentryArrayOutput {
	return i.ToGetClientAddonSentryArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSentryArray) ToGetClientAddonSentryArrayOutputWithContext(ctx context.Context) GetClientAddonSentryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSentryArrayOutput)
}

func (i GetClientAddonSentryArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSentry] {
	return pulumix.Output[[]GetClientAddonSentry]{
		OutputState: i.ToGetClientAddonSentryArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSentryOutput struct{ *pulumi.OutputState }

func (GetClientAddonSentryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSentry)(nil)).Elem()
}

func (o GetClientAddonSentryOutput) ToGetClientAddonSentryOutput() GetClientAddonSentryOutput {
	return o
}

func (o GetClientAddonSentryOutput) ToGetClientAddonSentryOutputWithContext(ctx context.Context) GetClientAddonSentryOutput {
	return o
}

func (o GetClientAddonSentryOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSentry] {
	return pulumix.Output[GetClientAddonSentry]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSentryOutput) BaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSentry) string { return v.BaseUrl }).(pulumi.StringOutput)
}

func (o GetClientAddonSentryOutput) OrgSlug() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSentry) string { return v.OrgSlug }).(pulumi.StringOutput)
}

type GetClientAddonSentryArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSentryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSentry)(nil)).Elem()
}

func (o GetClientAddonSentryArrayOutput) ToGetClientAddonSentryArrayOutput() GetClientAddonSentryArrayOutput {
	return o
}

func (o GetClientAddonSentryArrayOutput) ToGetClientAddonSentryArrayOutputWithContext(ctx context.Context) GetClientAddonSentryArrayOutput {
	return o
}

func (o GetClientAddonSentryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSentry] {
	return pulumix.Output[[]GetClientAddonSentry]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSentryArrayOutput) Index(i pulumi.IntInput) GetClientAddonSentryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSentry {
		return vs[0].([]GetClientAddonSentry)[vs[1].(int)]
	}).(GetClientAddonSentryOutput)
}

type GetClientAddonSharepoint struct {
	ExternalUrls []string `pulumi:"externalUrls"`
	Url          string   `pulumi:"url"`
}

// GetClientAddonSharepointInput is an input type that accepts GetClientAddonSharepointArgs and GetClientAddonSharepointOutput values.
// You can construct a concrete instance of `GetClientAddonSharepointInput` via:
//
//	GetClientAddonSharepointArgs{...}
type GetClientAddonSharepointInput interface {
	pulumi.Input

	ToGetClientAddonSharepointOutput() GetClientAddonSharepointOutput
	ToGetClientAddonSharepointOutputWithContext(context.Context) GetClientAddonSharepointOutput
}

type GetClientAddonSharepointArgs struct {
	ExternalUrls pulumi.StringArrayInput `pulumi:"externalUrls"`
	Url          pulumi.StringInput      `pulumi:"url"`
}

func (GetClientAddonSharepointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSharepoint)(nil)).Elem()
}

func (i GetClientAddonSharepointArgs) ToGetClientAddonSharepointOutput() GetClientAddonSharepointOutput {
	return i.ToGetClientAddonSharepointOutputWithContext(context.Background())
}

func (i GetClientAddonSharepointArgs) ToGetClientAddonSharepointOutputWithContext(ctx context.Context) GetClientAddonSharepointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSharepointOutput)
}

func (i GetClientAddonSharepointArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSharepoint] {
	return pulumix.Output[GetClientAddonSharepoint]{
		OutputState: i.ToGetClientAddonSharepointOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSharepointArrayInput is an input type that accepts GetClientAddonSharepointArray and GetClientAddonSharepointArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSharepointArrayInput` via:
//
//	GetClientAddonSharepointArray{ GetClientAddonSharepointArgs{...} }
type GetClientAddonSharepointArrayInput interface {
	pulumi.Input

	ToGetClientAddonSharepointArrayOutput() GetClientAddonSharepointArrayOutput
	ToGetClientAddonSharepointArrayOutputWithContext(context.Context) GetClientAddonSharepointArrayOutput
}

type GetClientAddonSharepointArray []GetClientAddonSharepointInput

func (GetClientAddonSharepointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSharepoint)(nil)).Elem()
}

func (i GetClientAddonSharepointArray) ToGetClientAddonSharepointArrayOutput() GetClientAddonSharepointArrayOutput {
	return i.ToGetClientAddonSharepointArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSharepointArray) ToGetClientAddonSharepointArrayOutputWithContext(ctx context.Context) GetClientAddonSharepointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSharepointArrayOutput)
}

func (i GetClientAddonSharepointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSharepoint] {
	return pulumix.Output[[]GetClientAddonSharepoint]{
		OutputState: i.ToGetClientAddonSharepointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSharepointOutput struct{ *pulumi.OutputState }

func (GetClientAddonSharepointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSharepoint)(nil)).Elem()
}

func (o GetClientAddonSharepointOutput) ToGetClientAddonSharepointOutput() GetClientAddonSharepointOutput {
	return o
}

func (o GetClientAddonSharepointOutput) ToGetClientAddonSharepointOutputWithContext(ctx context.Context) GetClientAddonSharepointOutput {
	return o
}

func (o GetClientAddonSharepointOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSharepoint] {
	return pulumix.Output[GetClientAddonSharepoint]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSharepointOutput) ExternalUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientAddonSharepoint) []string { return v.ExternalUrls }).(pulumi.StringArrayOutput)
}

func (o GetClientAddonSharepointOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSharepoint) string { return v.Url }).(pulumi.StringOutput)
}

type GetClientAddonSharepointArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSharepointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSharepoint)(nil)).Elem()
}

func (o GetClientAddonSharepointArrayOutput) ToGetClientAddonSharepointArrayOutput() GetClientAddonSharepointArrayOutput {
	return o
}

func (o GetClientAddonSharepointArrayOutput) ToGetClientAddonSharepointArrayOutputWithContext(ctx context.Context) GetClientAddonSharepointArrayOutput {
	return o
}

func (o GetClientAddonSharepointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSharepoint] {
	return pulumix.Output[[]GetClientAddonSharepoint]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSharepointArrayOutput) Index(i pulumi.IntInput) GetClientAddonSharepointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSharepoint {
		return vs[0].([]GetClientAddonSharepoint)[vs[1].(int)]
	}).(GetClientAddonSharepointOutput)
}

type GetClientAddonSlack struct {
	Team string `pulumi:"team"`
}

// GetClientAddonSlackInput is an input type that accepts GetClientAddonSlackArgs and GetClientAddonSlackOutput values.
// You can construct a concrete instance of `GetClientAddonSlackInput` via:
//
//	GetClientAddonSlackArgs{...}
type GetClientAddonSlackInput interface {
	pulumi.Input

	ToGetClientAddonSlackOutput() GetClientAddonSlackOutput
	ToGetClientAddonSlackOutputWithContext(context.Context) GetClientAddonSlackOutput
}

type GetClientAddonSlackArgs struct {
	Team pulumi.StringInput `pulumi:"team"`
}

func (GetClientAddonSlackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSlack)(nil)).Elem()
}

func (i GetClientAddonSlackArgs) ToGetClientAddonSlackOutput() GetClientAddonSlackOutput {
	return i.ToGetClientAddonSlackOutputWithContext(context.Background())
}

func (i GetClientAddonSlackArgs) ToGetClientAddonSlackOutputWithContext(ctx context.Context) GetClientAddonSlackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSlackOutput)
}

func (i GetClientAddonSlackArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSlack] {
	return pulumix.Output[GetClientAddonSlack]{
		OutputState: i.ToGetClientAddonSlackOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSlackArrayInput is an input type that accepts GetClientAddonSlackArray and GetClientAddonSlackArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSlackArrayInput` via:
//
//	GetClientAddonSlackArray{ GetClientAddonSlackArgs{...} }
type GetClientAddonSlackArrayInput interface {
	pulumi.Input

	ToGetClientAddonSlackArrayOutput() GetClientAddonSlackArrayOutput
	ToGetClientAddonSlackArrayOutputWithContext(context.Context) GetClientAddonSlackArrayOutput
}

type GetClientAddonSlackArray []GetClientAddonSlackInput

func (GetClientAddonSlackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSlack)(nil)).Elem()
}

func (i GetClientAddonSlackArray) ToGetClientAddonSlackArrayOutput() GetClientAddonSlackArrayOutput {
	return i.ToGetClientAddonSlackArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSlackArray) ToGetClientAddonSlackArrayOutputWithContext(ctx context.Context) GetClientAddonSlackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSlackArrayOutput)
}

func (i GetClientAddonSlackArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSlack] {
	return pulumix.Output[[]GetClientAddonSlack]{
		OutputState: i.ToGetClientAddonSlackArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSlackOutput struct{ *pulumi.OutputState }

func (GetClientAddonSlackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSlack)(nil)).Elem()
}

func (o GetClientAddonSlackOutput) ToGetClientAddonSlackOutput() GetClientAddonSlackOutput {
	return o
}

func (o GetClientAddonSlackOutput) ToGetClientAddonSlackOutputWithContext(ctx context.Context) GetClientAddonSlackOutput {
	return o
}

func (o GetClientAddonSlackOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSlack] {
	return pulumix.Output[GetClientAddonSlack]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSlackOutput) Team() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSlack) string { return v.Team }).(pulumi.StringOutput)
}

type GetClientAddonSlackArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSlackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSlack)(nil)).Elem()
}

func (o GetClientAddonSlackArrayOutput) ToGetClientAddonSlackArrayOutput() GetClientAddonSlackArrayOutput {
	return o
}

func (o GetClientAddonSlackArrayOutput) ToGetClientAddonSlackArrayOutputWithContext(ctx context.Context) GetClientAddonSlackArrayOutput {
	return o
}

func (o GetClientAddonSlackArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSlack] {
	return pulumix.Output[[]GetClientAddonSlack]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSlackArrayOutput) Index(i pulumi.IntInput) GetClientAddonSlackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSlack {
		return vs[0].([]GetClientAddonSlack)[vs[1].(int)]
	}).(GetClientAddonSlackOutput)
}

type GetClientAddonSpringcm struct {
	AcsUrl string `pulumi:"acsUrl"`
}

// GetClientAddonSpringcmInput is an input type that accepts GetClientAddonSpringcmArgs and GetClientAddonSpringcmOutput values.
// You can construct a concrete instance of `GetClientAddonSpringcmInput` via:
//
//	GetClientAddonSpringcmArgs{...}
type GetClientAddonSpringcmInput interface {
	pulumi.Input

	ToGetClientAddonSpringcmOutput() GetClientAddonSpringcmOutput
	ToGetClientAddonSpringcmOutputWithContext(context.Context) GetClientAddonSpringcmOutput
}

type GetClientAddonSpringcmArgs struct {
	AcsUrl pulumi.StringInput `pulumi:"acsUrl"`
}

func (GetClientAddonSpringcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSpringcm)(nil)).Elem()
}

func (i GetClientAddonSpringcmArgs) ToGetClientAddonSpringcmOutput() GetClientAddonSpringcmOutput {
	return i.ToGetClientAddonSpringcmOutputWithContext(context.Background())
}

func (i GetClientAddonSpringcmArgs) ToGetClientAddonSpringcmOutputWithContext(ctx context.Context) GetClientAddonSpringcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSpringcmOutput)
}

func (i GetClientAddonSpringcmArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSpringcm] {
	return pulumix.Output[GetClientAddonSpringcm]{
		OutputState: i.ToGetClientAddonSpringcmOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSpringcmArrayInput is an input type that accepts GetClientAddonSpringcmArray and GetClientAddonSpringcmArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSpringcmArrayInput` via:
//
//	GetClientAddonSpringcmArray{ GetClientAddonSpringcmArgs{...} }
type GetClientAddonSpringcmArrayInput interface {
	pulumi.Input

	ToGetClientAddonSpringcmArrayOutput() GetClientAddonSpringcmArrayOutput
	ToGetClientAddonSpringcmArrayOutputWithContext(context.Context) GetClientAddonSpringcmArrayOutput
}

type GetClientAddonSpringcmArray []GetClientAddonSpringcmInput

func (GetClientAddonSpringcmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSpringcm)(nil)).Elem()
}

func (i GetClientAddonSpringcmArray) ToGetClientAddonSpringcmArrayOutput() GetClientAddonSpringcmArrayOutput {
	return i.ToGetClientAddonSpringcmArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSpringcmArray) ToGetClientAddonSpringcmArrayOutputWithContext(ctx context.Context) GetClientAddonSpringcmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSpringcmArrayOutput)
}

func (i GetClientAddonSpringcmArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSpringcm] {
	return pulumix.Output[[]GetClientAddonSpringcm]{
		OutputState: i.ToGetClientAddonSpringcmArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSpringcmOutput struct{ *pulumi.OutputState }

func (GetClientAddonSpringcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSpringcm)(nil)).Elem()
}

func (o GetClientAddonSpringcmOutput) ToGetClientAddonSpringcmOutput() GetClientAddonSpringcmOutput {
	return o
}

func (o GetClientAddonSpringcmOutput) ToGetClientAddonSpringcmOutputWithContext(ctx context.Context) GetClientAddonSpringcmOutput {
	return o
}

func (o GetClientAddonSpringcmOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSpringcm] {
	return pulumix.Output[GetClientAddonSpringcm]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSpringcmOutput) AcsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSpringcm) string { return v.AcsUrl }).(pulumi.StringOutput)
}

type GetClientAddonSpringcmArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSpringcmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSpringcm)(nil)).Elem()
}

func (o GetClientAddonSpringcmArrayOutput) ToGetClientAddonSpringcmArrayOutput() GetClientAddonSpringcmArrayOutput {
	return o
}

func (o GetClientAddonSpringcmArrayOutput) ToGetClientAddonSpringcmArrayOutputWithContext(ctx context.Context) GetClientAddonSpringcmArrayOutput {
	return o
}

func (o GetClientAddonSpringcmArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSpringcm] {
	return pulumix.Output[[]GetClientAddonSpringcm]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSpringcmArrayOutput) Index(i pulumi.IntInput) GetClientAddonSpringcmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSpringcm {
		return vs[0].([]GetClientAddonSpringcm)[vs[1].(int)]
	}).(GetClientAddonSpringcmOutput)
}

type GetClientAddonSsoIntegration struct {
	// The name of the client. If not provided, `clientId` must be set.
	Name    string `pulumi:"name"`
	Version string `pulumi:"version"`
}

// GetClientAddonSsoIntegrationInput is an input type that accepts GetClientAddonSsoIntegrationArgs and GetClientAddonSsoIntegrationOutput values.
// You can construct a concrete instance of `GetClientAddonSsoIntegrationInput` via:
//
//	GetClientAddonSsoIntegrationArgs{...}
type GetClientAddonSsoIntegrationInput interface {
	pulumi.Input

	ToGetClientAddonSsoIntegrationOutput() GetClientAddonSsoIntegrationOutput
	ToGetClientAddonSsoIntegrationOutputWithContext(context.Context) GetClientAddonSsoIntegrationOutput
}

type GetClientAddonSsoIntegrationArgs struct {
	// The name of the client. If not provided, `clientId` must be set.
	Name    pulumi.StringInput `pulumi:"name"`
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetClientAddonSsoIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSsoIntegration)(nil)).Elem()
}

func (i GetClientAddonSsoIntegrationArgs) ToGetClientAddonSsoIntegrationOutput() GetClientAddonSsoIntegrationOutput {
	return i.ToGetClientAddonSsoIntegrationOutputWithContext(context.Background())
}

func (i GetClientAddonSsoIntegrationArgs) ToGetClientAddonSsoIntegrationOutputWithContext(ctx context.Context) GetClientAddonSsoIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSsoIntegrationOutput)
}

func (i GetClientAddonSsoIntegrationArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSsoIntegration] {
	return pulumix.Output[GetClientAddonSsoIntegration]{
		OutputState: i.ToGetClientAddonSsoIntegrationOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonSsoIntegrationArrayInput is an input type that accepts GetClientAddonSsoIntegrationArray and GetClientAddonSsoIntegrationArrayOutput values.
// You can construct a concrete instance of `GetClientAddonSsoIntegrationArrayInput` via:
//
//	GetClientAddonSsoIntegrationArray{ GetClientAddonSsoIntegrationArgs{...} }
type GetClientAddonSsoIntegrationArrayInput interface {
	pulumi.Input

	ToGetClientAddonSsoIntegrationArrayOutput() GetClientAddonSsoIntegrationArrayOutput
	ToGetClientAddonSsoIntegrationArrayOutputWithContext(context.Context) GetClientAddonSsoIntegrationArrayOutput
}

type GetClientAddonSsoIntegrationArray []GetClientAddonSsoIntegrationInput

func (GetClientAddonSsoIntegrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSsoIntegration)(nil)).Elem()
}

func (i GetClientAddonSsoIntegrationArray) ToGetClientAddonSsoIntegrationArrayOutput() GetClientAddonSsoIntegrationArrayOutput {
	return i.ToGetClientAddonSsoIntegrationArrayOutputWithContext(context.Background())
}

func (i GetClientAddonSsoIntegrationArray) ToGetClientAddonSsoIntegrationArrayOutputWithContext(ctx context.Context) GetClientAddonSsoIntegrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonSsoIntegrationArrayOutput)
}

func (i GetClientAddonSsoIntegrationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSsoIntegration] {
	return pulumix.Output[[]GetClientAddonSsoIntegration]{
		OutputState: i.ToGetClientAddonSsoIntegrationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonSsoIntegrationOutput struct{ *pulumi.OutputState }

func (GetClientAddonSsoIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonSsoIntegration)(nil)).Elem()
}

func (o GetClientAddonSsoIntegrationOutput) ToGetClientAddonSsoIntegrationOutput() GetClientAddonSsoIntegrationOutput {
	return o
}

func (o GetClientAddonSsoIntegrationOutput) ToGetClientAddonSsoIntegrationOutputWithContext(ctx context.Context) GetClientAddonSsoIntegrationOutput {
	return o
}

func (o GetClientAddonSsoIntegrationOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonSsoIntegration] {
	return pulumix.Output[GetClientAddonSsoIntegration]{
		OutputState: o.OutputState,
	}
}

// The name of the client. If not provided, `clientId` must be set.
func (o GetClientAddonSsoIntegrationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSsoIntegration) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClientAddonSsoIntegrationOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonSsoIntegration) string { return v.Version }).(pulumi.StringOutput)
}

type GetClientAddonSsoIntegrationArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonSsoIntegrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonSsoIntegration)(nil)).Elem()
}

func (o GetClientAddonSsoIntegrationArrayOutput) ToGetClientAddonSsoIntegrationArrayOutput() GetClientAddonSsoIntegrationArrayOutput {
	return o
}

func (o GetClientAddonSsoIntegrationArrayOutput) ToGetClientAddonSsoIntegrationArrayOutputWithContext(ctx context.Context) GetClientAddonSsoIntegrationArrayOutput {
	return o
}

func (o GetClientAddonSsoIntegrationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonSsoIntegration] {
	return pulumix.Output[[]GetClientAddonSsoIntegration]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonSsoIntegrationArrayOutput) Index(i pulumi.IntInput) GetClientAddonSsoIntegrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonSsoIntegration {
		return vs[0].([]GetClientAddonSsoIntegration)[vs[1].(int)]
	}).(GetClientAddonSsoIntegrationOutput)
}

type GetClientAddonWam struct {
	MasterKey string `pulumi:"masterKey"`
}

// GetClientAddonWamInput is an input type that accepts GetClientAddonWamArgs and GetClientAddonWamOutput values.
// You can construct a concrete instance of `GetClientAddonWamInput` via:
//
//	GetClientAddonWamArgs{...}
type GetClientAddonWamInput interface {
	pulumi.Input

	ToGetClientAddonWamOutput() GetClientAddonWamOutput
	ToGetClientAddonWamOutputWithContext(context.Context) GetClientAddonWamOutput
}

type GetClientAddonWamArgs struct {
	MasterKey pulumi.StringInput `pulumi:"masterKey"`
}

func (GetClientAddonWamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonWam)(nil)).Elem()
}

func (i GetClientAddonWamArgs) ToGetClientAddonWamOutput() GetClientAddonWamOutput {
	return i.ToGetClientAddonWamOutputWithContext(context.Background())
}

func (i GetClientAddonWamArgs) ToGetClientAddonWamOutputWithContext(ctx context.Context) GetClientAddonWamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonWamOutput)
}

func (i GetClientAddonWamArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonWam] {
	return pulumix.Output[GetClientAddonWam]{
		OutputState: i.ToGetClientAddonWamOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonWamArrayInput is an input type that accepts GetClientAddonWamArray and GetClientAddonWamArrayOutput values.
// You can construct a concrete instance of `GetClientAddonWamArrayInput` via:
//
//	GetClientAddonWamArray{ GetClientAddonWamArgs{...} }
type GetClientAddonWamArrayInput interface {
	pulumi.Input

	ToGetClientAddonWamArrayOutput() GetClientAddonWamArrayOutput
	ToGetClientAddonWamArrayOutputWithContext(context.Context) GetClientAddonWamArrayOutput
}

type GetClientAddonWamArray []GetClientAddonWamInput

func (GetClientAddonWamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonWam)(nil)).Elem()
}

func (i GetClientAddonWamArray) ToGetClientAddonWamArrayOutput() GetClientAddonWamArrayOutput {
	return i.ToGetClientAddonWamArrayOutputWithContext(context.Background())
}

func (i GetClientAddonWamArray) ToGetClientAddonWamArrayOutputWithContext(ctx context.Context) GetClientAddonWamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonWamArrayOutput)
}

func (i GetClientAddonWamArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonWam] {
	return pulumix.Output[[]GetClientAddonWam]{
		OutputState: i.ToGetClientAddonWamArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonWamOutput struct{ *pulumi.OutputState }

func (GetClientAddonWamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonWam)(nil)).Elem()
}

func (o GetClientAddonWamOutput) ToGetClientAddonWamOutput() GetClientAddonWamOutput {
	return o
}

func (o GetClientAddonWamOutput) ToGetClientAddonWamOutputWithContext(ctx context.Context) GetClientAddonWamOutput {
	return o
}

func (o GetClientAddonWamOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonWam] {
	return pulumix.Output[GetClientAddonWam]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonWamOutput) MasterKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonWam) string { return v.MasterKey }).(pulumi.StringOutput)
}

type GetClientAddonWamArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonWamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonWam)(nil)).Elem()
}

func (o GetClientAddonWamArrayOutput) ToGetClientAddonWamArrayOutput() GetClientAddonWamArrayOutput {
	return o
}

func (o GetClientAddonWamArrayOutput) ToGetClientAddonWamArrayOutputWithContext(ctx context.Context) GetClientAddonWamArrayOutput {
	return o
}

func (o GetClientAddonWamArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonWam] {
	return pulumix.Output[[]GetClientAddonWam]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonWamArrayOutput) Index(i pulumi.IntInput) GetClientAddonWamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonWam {
		return vs[0].([]GetClientAddonWam)[vs[1].(int)]
	}).(GetClientAddonWamOutput)
}

type GetClientAddonWsfed struct {
}

// GetClientAddonWsfedInput is an input type that accepts GetClientAddonWsfedArgs and GetClientAddonWsfedOutput values.
// You can construct a concrete instance of `GetClientAddonWsfedInput` via:
//
//	GetClientAddonWsfedArgs{...}
type GetClientAddonWsfedInput interface {
	pulumi.Input

	ToGetClientAddonWsfedOutput() GetClientAddonWsfedOutput
	ToGetClientAddonWsfedOutputWithContext(context.Context) GetClientAddonWsfedOutput
}

type GetClientAddonWsfedArgs struct {
}

func (GetClientAddonWsfedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonWsfed)(nil)).Elem()
}

func (i GetClientAddonWsfedArgs) ToGetClientAddonWsfedOutput() GetClientAddonWsfedOutput {
	return i.ToGetClientAddonWsfedOutputWithContext(context.Background())
}

func (i GetClientAddonWsfedArgs) ToGetClientAddonWsfedOutputWithContext(ctx context.Context) GetClientAddonWsfedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonWsfedOutput)
}

func (i GetClientAddonWsfedArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonWsfed] {
	return pulumix.Output[GetClientAddonWsfed]{
		OutputState: i.ToGetClientAddonWsfedOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonWsfedArrayInput is an input type that accepts GetClientAddonWsfedArray and GetClientAddonWsfedArrayOutput values.
// You can construct a concrete instance of `GetClientAddonWsfedArrayInput` via:
//
//	GetClientAddonWsfedArray{ GetClientAddonWsfedArgs{...} }
type GetClientAddonWsfedArrayInput interface {
	pulumi.Input

	ToGetClientAddonWsfedArrayOutput() GetClientAddonWsfedArrayOutput
	ToGetClientAddonWsfedArrayOutputWithContext(context.Context) GetClientAddonWsfedArrayOutput
}

type GetClientAddonWsfedArray []GetClientAddonWsfedInput

func (GetClientAddonWsfedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonWsfed)(nil)).Elem()
}

func (i GetClientAddonWsfedArray) ToGetClientAddonWsfedArrayOutput() GetClientAddonWsfedArrayOutput {
	return i.ToGetClientAddonWsfedArrayOutputWithContext(context.Background())
}

func (i GetClientAddonWsfedArray) ToGetClientAddonWsfedArrayOutputWithContext(ctx context.Context) GetClientAddonWsfedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonWsfedArrayOutput)
}

func (i GetClientAddonWsfedArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonWsfed] {
	return pulumix.Output[[]GetClientAddonWsfed]{
		OutputState: i.ToGetClientAddonWsfedArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonWsfedOutput struct{ *pulumi.OutputState }

func (GetClientAddonWsfedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonWsfed)(nil)).Elem()
}

func (o GetClientAddonWsfedOutput) ToGetClientAddonWsfedOutput() GetClientAddonWsfedOutput {
	return o
}

func (o GetClientAddonWsfedOutput) ToGetClientAddonWsfedOutputWithContext(ctx context.Context) GetClientAddonWsfedOutput {
	return o
}

func (o GetClientAddonWsfedOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonWsfed] {
	return pulumix.Output[GetClientAddonWsfed]{
		OutputState: o.OutputState,
	}
}

type GetClientAddonWsfedArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonWsfedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonWsfed)(nil)).Elem()
}

func (o GetClientAddonWsfedArrayOutput) ToGetClientAddonWsfedArrayOutput() GetClientAddonWsfedArrayOutput {
	return o
}

func (o GetClientAddonWsfedArrayOutput) ToGetClientAddonWsfedArrayOutputWithContext(ctx context.Context) GetClientAddonWsfedArrayOutput {
	return o
}

func (o GetClientAddonWsfedArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonWsfed] {
	return pulumix.Output[[]GetClientAddonWsfed]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonWsfedArrayOutput) Index(i pulumi.IntInput) GetClientAddonWsfedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonWsfed {
		return vs[0].([]GetClientAddonWsfed)[vs[1].(int)]
	}).(GetClientAddonWsfedOutput)
}

type GetClientAddonZendesk struct {
	AccountName string `pulumi:"accountName"`
}

// GetClientAddonZendeskInput is an input type that accepts GetClientAddonZendeskArgs and GetClientAddonZendeskOutput values.
// You can construct a concrete instance of `GetClientAddonZendeskInput` via:
//
//	GetClientAddonZendeskArgs{...}
type GetClientAddonZendeskInput interface {
	pulumi.Input

	ToGetClientAddonZendeskOutput() GetClientAddonZendeskOutput
	ToGetClientAddonZendeskOutputWithContext(context.Context) GetClientAddonZendeskOutput
}

type GetClientAddonZendeskArgs struct {
	AccountName pulumi.StringInput `pulumi:"accountName"`
}

func (GetClientAddonZendeskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonZendesk)(nil)).Elem()
}

func (i GetClientAddonZendeskArgs) ToGetClientAddonZendeskOutput() GetClientAddonZendeskOutput {
	return i.ToGetClientAddonZendeskOutputWithContext(context.Background())
}

func (i GetClientAddonZendeskArgs) ToGetClientAddonZendeskOutputWithContext(ctx context.Context) GetClientAddonZendeskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonZendeskOutput)
}

func (i GetClientAddonZendeskArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonZendesk] {
	return pulumix.Output[GetClientAddonZendesk]{
		OutputState: i.ToGetClientAddonZendeskOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonZendeskArrayInput is an input type that accepts GetClientAddonZendeskArray and GetClientAddonZendeskArrayOutput values.
// You can construct a concrete instance of `GetClientAddonZendeskArrayInput` via:
//
//	GetClientAddonZendeskArray{ GetClientAddonZendeskArgs{...} }
type GetClientAddonZendeskArrayInput interface {
	pulumi.Input

	ToGetClientAddonZendeskArrayOutput() GetClientAddonZendeskArrayOutput
	ToGetClientAddonZendeskArrayOutputWithContext(context.Context) GetClientAddonZendeskArrayOutput
}

type GetClientAddonZendeskArray []GetClientAddonZendeskInput

func (GetClientAddonZendeskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonZendesk)(nil)).Elem()
}

func (i GetClientAddonZendeskArray) ToGetClientAddonZendeskArrayOutput() GetClientAddonZendeskArrayOutput {
	return i.ToGetClientAddonZendeskArrayOutputWithContext(context.Background())
}

func (i GetClientAddonZendeskArray) ToGetClientAddonZendeskArrayOutputWithContext(ctx context.Context) GetClientAddonZendeskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonZendeskArrayOutput)
}

func (i GetClientAddonZendeskArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonZendesk] {
	return pulumix.Output[[]GetClientAddonZendesk]{
		OutputState: i.ToGetClientAddonZendeskArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonZendeskOutput struct{ *pulumi.OutputState }

func (GetClientAddonZendeskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonZendesk)(nil)).Elem()
}

func (o GetClientAddonZendeskOutput) ToGetClientAddonZendeskOutput() GetClientAddonZendeskOutput {
	return o
}

func (o GetClientAddonZendeskOutput) ToGetClientAddonZendeskOutputWithContext(ctx context.Context) GetClientAddonZendeskOutput {
	return o
}

func (o GetClientAddonZendeskOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonZendesk] {
	return pulumix.Output[GetClientAddonZendesk]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonZendeskOutput) AccountName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonZendesk) string { return v.AccountName }).(pulumi.StringOutput)
}

type GetClientAddonZendeskArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonZendeskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonZendesk)(nil)).Elem()
}

func (o GetClientAddonZendeskArrayOutput) ToGetClientAddonZendeskArrayOutput() GetClientAddonZendeskArrayOutput {
	return o
}

func (o GetClientAddonZendeskArrayOutput) ToGetClientAddonZendeskArrayOutputWithContext(ctx context.Context) GetClientAddonZendeskArrayOutput {
	return o
}

func (o GetClientAddonZendeskArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonZendesk] {
	return pulumix.Output[[]GetClientAddonZendesk]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonZendeskArrayOutput) Index(i pulumi.IntInput) GetClientAddonZendeskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonZendesk {
		return vs[0].([]GetClientAddonZendesk)[vs[1].(int)]
	}).(GetClientAddonZendeskOutput)
}

type GetClientAddonZoom struct {
	Account string `pulumi:"account"`
}

// GetClientAddonZoomInput is an input type that accepts GetClientAddonZoomArgs and GetClientAddonZoomOutput values.
// You can construct a concrete instance of `GetClientAddonZoomInput` via:
//
//	GetClientAddonZoomArgs{...}
type GetClientAddonZoomInput interface {
	pulumi.Input

	ToGetClientAddonZoomOutput() GetClientAddonZoomOutput
	ToGetClientAddonZoomOutputWithContext(context.Context) GetClientAddonZoomOutput
}

type GetClientAddonZoomArgs struct {
	Account pulumi.StringInput `pulumi:"account"`
}

func (GetClientAddonZoomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonZoom)(nil)).Elem()
}

func (i GetClientAddonZoomArgs) ToGetClientAddonZoomOutput() GetClientAddonZoomOutput {
	return i.ToGetClientAddonZoomOutputWithContext(context.Background())
}

func (i GetClientAddonZoomArgs) ToGetClientAddonZoomOutputWithContext(ctx context.Context) GetClientAddonZoomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonZoomOutput)
}

func (i GetClientAddonZoomArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonZoom] {
	return pulumix.Output[GetClientAddonZoom]{
		OutputState: i.ToGetClientAddonZoomOutputWithContext(ctx).OutputState,
	}
}

// GetClientAddonZoomArrayInput is an input type that accepts GetClientAddonZoomArray and GetClientAddonZoomArrayOutput values.
// You can construct a concrete instance of `GetClientAddonZoomArrayInput` via:
//
//	GetClientAddonZoomArray{ GetClientAddonZoomArgs{...} }
type GetClientAddonZoomArrayInput interface {
	pulumi.Input

	ToGetClientAddonZoomArrayOutput() GetClientAddonZoomArrayOutput
	ToGetClientAddonZoomArrayOutputWithContext(context.Context) GetClientAddonZoomArrayOutput
}

type GetClientAddonZoomArray []GetClientAddonZoomInput

func (GetClientAddonZoomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonZoom)(nil)).Elem()
}

func (i GetClientAddonZoomArray) ToGetClientAddonZoomArrayOutput() GetClientAddonZoomArrayOutput {
	return i.ToGetClientAddonZoomArrayOutputWithContext(context.Background())
}

func (i GetClientAddonZoomArray) ToGetClientAddonZoomArrayOutputWithContext(ctx context.Context) GetClientAddonZoomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientAddonZoomArrayOutput)
}

func (i GetClientAddonZoomArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonZoom] {
	return pulumix.Output[[]GetClientAddonZoom]{
		OutputState: i.ToGetClientAddonZoomArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientAddonZoomOutput struct{ *pulumi.OutputState }

func (GetClientAddonZoomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientAddonZoom)(nil)).Elem()
}

func (o GetClientAddonZoomOutput) ToGetClientAddonZoomOutput() GetClientAddonZoomOutput {
	return o
}

func (o GetClientAddonZoomOutput) ToGetClientAddonZoomOutputWithContext(ctx context.Context) GetClientAddonZoomOutput {
	return o
}

func (o GetClientAddonZoomOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientAddonZoom] {
	return pulumix.Output[GetClientAddonZoom]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonZoomOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientAddonZoom) string { return v.Account }).(pulumi.StringOutput)
}

type GetClientAddonZoomArrayOutput struct{ *pulumi.OutputState }

func (GetClientAddonZoomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientAddonZoom)(nil)).Elem()
}

func (o GetClientAddonZoomArrayOutput) ToGetClientAddonZoomArrayOutput() GetClientAddonZoomArrayOutput {
	return o
}

func (o GetClientAddonZoomArrayOutput) ToGetClientAddonZoomArrayOutputWithContext(ctx context.Context) GetClientAddonZoomArrayOutput {
	return o
}

func (o GetClientAddonZoomArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientAddonZoom] {
	return pulumix.Output[[]GetClientAddonZoom]{
		OutputState: o.OutputState,
	}
}

func (o GetClientAddonZoomArrayOutput) Index(i pulumi.IntInput) GetClientAddonZoomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientAddonZoom {
		return vs[0].([]GetClientAddonZoom)[vs[1].(int)]
	}).(GetClientAddonZoomOutput)
}

type GetClientJwtConfiguration struct {
	Alg               string            `pulumi:"alg"`
	LifetimeInSeconds int               `pulumi:"lifetimeInSeconds"`
	Scopes            map[string]string `pulumi:"scopes"`
	SecretEncoded     bool              `pulumi:"secretEncoded"`
}

// GetClientJwtConfigurationInput is an input type that accepts GetClientJwtConfigurationArgs and GetClientJwtConfigurationOutput values.
// You can construct a concrete instance of `GetClientJwtConfigurationInput` via:
//
//	GetClientJwtConfigurationArgs{...}
type GetClientJwtConfigurationInput interface {
	pulumi.Input

	ToGetClientJwtConfigurationOutput() GetClientJwtConfigurationOutput
	ToGetClientJwtConfigurationOutputWithContext(context.Context) GetClientJwtConfigurationOutput
}

type GetClientJwtConfigurationArgs struct {
	Alg               pulumi.StringInput    `pulumi:"alg"`
	LifetimeInSeconds pulumi.IntInput       `pulumi:"lifetimeInSeconds"`
	Scopes            pulumi.StringMapInput `pulumi:"scopes"`
	SecretEncoded     pulumi.BoolInput      `pulumi:"secretEncoded"`
}

func (GetClientJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientJwtConfiguration)(nil)).Elem()
}

func (i GetClientJwtConfigurationArgs) ToGetClientJwtConfigurationOutput() GetClientJwtConfigurationOutput {
	return i.ToGetClientJwtConfigurationOutputWithContext(context.Background())
}

func (i GetClientJwtConfigurationArgs) ToGetClientJwtConfigurationOutputWithContext(ctx context.Context) GetClientJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientJwtConfigurationOutput)
}

func (i GetClientJwtConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientJwtConfiguration] {
	return pulumix.Output[GetClientJwtConfiguration]{
		OutputState: i.ToGetClientJwtConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetClientJwtConfigurationArrayInput is an input type that accepts GetClientJwtConfigurationArray and GetClientJwtConfigurationArrayOutput values.
// You can construct a concrete instance of `GetClientJwtConfigurationArrayInput` via:
//
//	GetClientJwtConfigurationArray{ GetClientJwtConfigurationArgs{...} }
type GetClientJwtConfigurationArrayInput interface {
	pulumi.Input

	ToGetClientJwtConfigurationArrayOutput() GetClientJwtConfigurationArrayOutput
	ToGetClientJwtConfigurationArrayOutputWithContext(context.Context) GetClientJwtConfigurationArrayOutput
}

type GetClientJwtConfigurationArray []GetClientJwtConfigurationInput

func (GetClientJwtConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientJwtConfiguration)(nil)).Elem()
}

func (i GetClientJwtConfigurationArray) ToGetClientJwtConfigurationArrayOutput() GetClientJwtConfigurationArrayOutput {
	return i.ToGetClientJwtConfigurationArrayOutputWithContext(context.Background())
}

func (i GetClientJwtConfigurationArray) ToGetClientJwtConfigurationArrayOutputWithContext(ctx context.Context) GetClientJwtConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientJwtConfigurationArrayOutput)
}

func (i GetClientJwtConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientJwtConfiguration] {
	return pulumix.Output[[]GetClientJwtConfiguration]{
		OutputState: i.ToGetClientJwtConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientJwtConfigurationOutput struct{ *pulumi.OutputState }

func (GetClientJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientJwtConfiguration)(nil)).Elem()
}

func (o GetClientJwtConfigurationOutput) ToGetClientJwtConfigurationOutput() GetClientJwtConfigurationOutput {
	return o
}

func (o GetClientJwtConfigurationOutput) ToGetClientJwtConfigurationOutputWithContext(ctx context.Context) GetClientJwtConfigurationOutput {
	return o
}

func (o GetClientJwtConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientJwtConfiguration] {
	return pulumix.Output[GetClientJwtConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetClientJwtConfigurationOutput) Alg() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) string { return v.Alg }).(pulumi.StringOutput)
}

func (o GetClientJwtConfigurationOutput) LifetimeInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) int { return v.LifetimeInSeconds }).(pulumi.IntOutput)
}

func (o GetClientJwtConfigurationOutput) Scopes() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) map[string]string { return v.Scopes }).(pulumi.StringMapOutput)
}

func (o GetClientJwtConfigurationOutput) SecretEncoded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientJwtConfiguration) bool { return v.SecretEncoded }).(pulumi.BoolOutput)
}

type GetClientJwtConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetClientJwtConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientJwtConfiguration)(nil)).Elem()
}

func (o GetClientJwtConfigurationArrayOutput) ToGetClientJwtConfigurationArrayOutput() GetClientJwtConfigurationArrayOutput {
	return o
}

func (o GetClientJwtConfigurationArrayOutput) ToGetClientJwtConfigurationArrayOutputWithContext(ctx context.Context) GetClientJwtConfigurationArrayOutput {
	return o
}

func (o GetClientJwtConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientJwtConfiguration] {
	return pulumix.Output[[]GetClientJwtConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetClientJwtConfigurationArrayOutput) Index(i pulumi.IntInput) GetClientJwtConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientJwtConfiguration {
		return vs[0].([]GetClientJwtConfiguration)[vs[1].(int)]
	}).(GetClientJwtConfigurationOutput)
}

type GetClientMobile struct {
	Androids []GetClientMobileAndroid `pulumi:"androids"`
	Ios      []GetClientMobileIo      `pulumi:"ios"`
}

// GetClientMobileInput is an input type that accepts GetClientMobileArgs and GetClientMobileOutput values.
// You can construct a concrete instance of `GetClientMobileInput` via:
//
//	GetClientMobileArgs{...}
type GetClientMobileInput interface {
	pulumi.Input

	ToGetClientMobileOutput() GetClientMobileOutput
	ToGetClientMobileOutputWithContext(context.Context) GetClientMobileOutput
}

type GetClientMobileArgs struct {
	Androids GetClientMobileAndroidArrayInput `pulumi:"androids"`
	Ios      GetClientMobileIoArrayInput      `pulumi:"ios"`
}

func (GetClientMobileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobile)(nil)).Elem()
}

func (i GetClientMobileArgs) ToGetClientMobileOutput() GetClientMobileOutput {
	return i.ToGetClientMobileOutputWithContext(context.Background())
}

func (i GetClientMobileArgs) ToGetClientMobileOutputWithContext(ctx context.Context) GetClientMobileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileOutput)
}

func (i GetClientMobileArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientMobile] {
	return pulumix.Output[GetClientMobile]{
		OutputState: i.ToGetClientMobileOutputWithContext(ctx).OutputState,
	}
}

// GetClientMobileArrayInput is an input type that accepts GetClientMobileArray and GetClientMobileArrayOutput values.
// You can construct a concrete instance of `GetClientMobileArrayInput` via:
//
//	GetClientMobileArray{ GetClientMobileArgs{...} }
type GetClientMobileArrayInput interface {
	pulumi.Input

	ToGetClientMobileArrayOutput() GetClientMobileArrayOutput
	ToGetClientMobileArrayOutputWithContext(context.Context) GetClientMobileArrayOutput
}

type GetClientMobileArray []GetClientMobileInput

func (GetClientMobileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobile)(nil)).Elem()
}

func (i GetClientMobileArray) ToGetClientMobileArrayOutput() GetClientMobileArrayOutput {
	return i.ToGetClientMobileArrayOutputWithContext(context.Background())
}

func (i GetClientMobileArray) ToGetClientMobileArrayOutputWithContext(ctx context.Context) GetClientMobileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileArrayOutput)
}

func (i GetClientMobileArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientMobile] {
	return pulumix.Output[[]GetClientMobile]{
		OutputState: i.ToGetClientMobileArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientMobileOutput struct{ *pulumi.OutputState }

func (GetClientMobileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobile)(nil)).Elem()
}

func (o GetClientMobileOutput) ToGetClientMobileOutput() GetClientMobileOutput {
	return o
}

func (o GetClientMobileOutput) ToGetClientMobileOutputWithContext(ctx context.Context) GetClientMobileOutput {
	return o
}

func (o GetClientMobileOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientMobile] {
	return pulumix.Output[GetClientMobile]{
		OutputState: o.OutputState,
	}
}

func (o GetClientMobileOutput) Androids() GetClientMobileAndroidArrayOutput {
	return o.ApplyT(func(v GetClientMobile) []GetClientMobileAndroid { return v.Androids }).(GetClientMobileAndroidArrayOutput)
}

func (o GetClientMobileOutput) Ios() GetClientMobileIoArrayOutput {
	return o.ApplyT(func(v GetClientMobile) []GetClientMobileIo { return v.Ios }).(GetClientMobileIoArrayOutput)
}

type GetClientMobileArrayOutput struct{ *pulumi.OutputState }

func (GetClientMobileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobile)(nil)).Elem()
}

func (o GetClientMobileArrayOutput) ToGetClientMobileArrayOutput() GetClientMobileArrayOutput {
	return o
}

func (o GetClientMobileArrayOutput) ToGetClientMobileArrayOutputWithContext(ctx context.Context) GetClientMobileArrayOutput {
	return o
}

func (o GetClientMobileArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientMobile] {
	return pulumix.Output[[]GetClientMobile]{
		OutputState: o.OutputState,
	}
}

func (o GetClientMobileArrayOutput) Index(i pulumi.IntInput) GetClientMobileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientMobile {
		return vs[0].([]GetClientMobile)[vs[1].(int)]
	}).(GetClientMobileOutput)
}

type GetClientMobileAndroid struct {
	AppPackageName         string   `pulumi:"appPackageName"`
	Sha256CertFingerprints []string `pulumi:"sha256CertFingerprints"`
}

// GetClientMobileAndroidInput is an input type that accepts GetClientMobileAndroidArgs and GetClientMobileAndroidOutput values.
// You can construct a concrete instance of `GetClientMobileAndroidInput` via:
//
//	GetClientMobileAndroidArgs{...}
type GetClientMobileAndroidInput interface {
	pulumi.Input

	ToGetClientMobileAndroidOutput() GetClientMobileAndroidOutput
	ToGetClientMobileAndroidOutputWithContext(context.Context) GetClientMobileAndroidOutput
}

type GetClientMobileAndroidArgs struct {
	AppPackageName         pulumi.StringInput      `pulumi:"appPackageName"`
	Sha256CertFingerprints pulumi.StringArrayInput `pulumi:"sha256CertFingerprints"`
}

func (GetClientMobileAndroidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileAndroid)(nil)).Elem()
}

func (i GetClientMobileAndroidArgs) ToGetClientMobileAndroidOutput() GetClientMobileAndroidOutput {
	return i.ToGetClientMobileAndroidOutputWithContext(context.Background())
}

func (i GetClientMobileAndroidArgs) ToGetClientMobileAndroidOutputWithContext(ctx context.Context) GetClientMobileAndroidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileAndroidOutput)
}

func (i GetClientMobileAndroidArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientMobileAndroid] {
	return pulumix.Output[GetClientMobileAndroid]{
		OutputState: i.ToGetClientMobileAndroidOutputWithContext(ctx).OutputState,
	}
}

// GetClientMobileAndroidArrayInput is an input type that accepts GetClientMobileAndroidArray and GetClientMobileAndroidArrayOutput values.
// You can construct a concrete instance of `GetClientMobileAndroidArrayInput` via:
//
//	GetClientMobileAndroidArray{ GetClientMobileAndroidArgs{...} }
type GetClientMobileAndroidArrayInput interface {
	pulumi.Input

	ToGetClientMobileAndroidArrayOutput() GetClientMobileAndroidArrayOutput
	ToGetClientMobileAndroidArrayOutputWithContext(context.Context) GetClientMobileAndroidArrayOutput
}

type GetClientMobileAndroidArray []GetClientMobileAndroidInput

func (GetClientMobileAndroidArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileAndroid)(nil)).Elem()
}

func (i GetClientMobileAndroidArray) ToGetClientMobileAndroidArrayOutput() GetClientMobileAndroidArrayOutput {
	return i.ToGetClientMobileAndroidArrayOutputWithContext(context.Background())
}

func (i GetClientMobileAndroidArray) ToGetClientMobileAndroidArrayOutputWithContext(ctx context.Context) GetClientMobileAndroidArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileAndroidArrayOutput)
}

func (i GetClientMobileAndroidArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientMobileAndroid] {
	return pulumix.Output[[]GetClientMobileAndroid]{
		OutputState: i.ToGetClientMobileAndroidArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientMobileAndroidOutput struct{ *pulumi.OutputState }

func (GetClientMobileAndroidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileAndroid)(nil)).Elem()
}

func (o GetClientMobileAndroidOutput) ToGetClientMobileAndroidOutput() GetClientMobileAndroidOutput {
	return o
}

func (o GetClientMobileAndroidOutput) ToGetClientMobileAndroidOutputWithContext(ctx context.Context) GetClientMobileAndroidOutput {
	return o
}

func (o GetClientMobileAndroidOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientMobileAndroid] {
	return pulumix.Output[GetClientMobileAndroid]{
		OutputState: o.OutputState,
	}
}

func (o GetClientMobileAndroidOutput) AppPackageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientMobileAndroid) string { return v.AppPackageName }).(pulumi.StringOutput)
}

func (o GetClientMobileAndroidOutput) Sha256CertFingerprints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClientMobileAndroid) []string { return v.Sha256CertFingerprints }).(pulumi.StringArrayOutput)
}

type GetClientMobileAndroidArrayOutput struct{ *pulumi.OutputState }

func (GetClientMobileAndroidArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileAndroid)(nil)).Elem()
}

func (o GetClientMobileAndroidArrayOutput) ToGetClientMobileAndroidArrayOutput() GetClientMobileAndroidArrayOutput {
	return o
}

func (o GetClientMobileAndroidArrayOutput) ToGetClientMobileAndroidArrayOutputWithContext(ctx context.Context) GetClientMobileAndroidArrayOutput {
	return o
}

func (o GetClientMobileAndroidArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientMobileAndroid] {
	return pulumix.Output[[]GetClientMobileAndroid]{
		OutputState: o.OutputState,
	}
}

func (o GetClientMobileAndroidArrayOutput) Index(i pulumi.IntInput) GetClientMobileAndroidOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientMobileAndroid {
		return vs[0].([]GetClientMobileAndroid)[vs[1].(int)]
	}).(GetClientMobileAndroidOutput)
}

type GetClientMobileIo struct {
	AppBundleIdentifier string `pulumi:"appBundleIdentifier"`
	TeamId              string `pulumi:"teamId"`
}

// GetClientMobileIoInput is an input type that accepts GetClientMobileIoArgs and GetClientMobileIoOutput values.
// You can construct a concrete instance of `GetClientMobileIoInput` via:
//
//	GetClientMobileIoArgs{...}
type GetClientMobileIoInput interface {
	pulumi.Input

	ToGetClientMobileIoOutput() GetClientMobileIoOutput
	ToGetClientMobileIoOutputWithContext(context.Context) GetClientMobileIoOutput
}

type GetClientMobileIoArgs struct {
	AppBundleIdentifier pulumi.StringInput `pulumi:"appBundleIdentifier"`
	TeamId              pulumi.StringInput `pulumi:"teamId"`
}

func (GetClientMobileIoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileIo)(nil)).Elem()
}

func (i GetClientMobileIoArgs) ToGetClientMobileIoOutput() GetClientMobileIoOutput {
	return i.ToGetClientMobileIoOutputWithContext(context.Background())
}

func (i GetClientMobileIoArgs) ToGetClientMobileIoOutputWithContext(ctx context.Context) GetClientMobileIoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileIoOutput)
}

func (i GetClientMobileIoArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientMobileIo] {
	return pulumix.Output[GetClientMobileIo]{
		OutputState: i.ToGetClientMobileIoOutputWithContext(ctx).OutputState,
	}
}

// GetClientMobileIoArrayInput is an input type that accepts GetClientMobileIoArray and GetClientMobileIoArrayOutput values.
// You can construct a concrete instance of `GetClientMobileIoArrayInput` via:
//
//	GetClientMobileIoArray{ GetClientMobileIoArgs{...} }
type GetClientMobileIoArrayInput interface {
	pulumi.Input

	ToGetClientMobileIoArrayOutput() GetClientMobileIoArrayOutput
	ToGetClientMobileIoArrayOutputWithContext(context.Context) GetClientMobileIoArrayOutput
}

type GetClientMobileIoArray []GetClientMobileIoInput

func (GetClientMobileIoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileIo)(nil)).Elem()
}

func (i GetClientMobileIoArray) ToGetClientMobileIoArrayOutput() GetClientMobileIoArrayOutput {
	return i.ToGetClientMobileIoArrayOutputWithContext(context.Background())
}

func (i GetClientMobileIoArray) ToGetClientMobileIoArrayOutputWithContext(ctx context.Context) GetClientMobileIoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientMobileIoArrayOutput)
}

func (i GetClientMobileIoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientMobileIo] {
	return pulumix.Output[[]GetClientMobileIo]{
		OutputState: i.ToGetClientMobileIoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientMobileIoOutput struct{ *pulumi.OutputState }

func (GetClientMobileIoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientMobileIo)(nil)).Elem()
}

func (o GetClientMobileIoOutput) ToGetClientMobileIoOutput() GetClientMobileIoOutput {
	return o
}

func (o GetClientMobileIoOutput) ToGetClientMobileIoOutputWithContext(ctx context.Context) GetClientMobileIoOutput {
	return o
}

func (o GetClientMobileIoOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientMobileIo] {
	return pulumix.Output[GetClientMobileIo]{
		OutputState: o.OutputState,
	}
}

func (o GetClientMobileIoOutput) AppBundleIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientMobileIo) string { return v.AppBundleIdentifier }).(pulumi.StringOutput)
}

func (o GetClientMobileIoOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientMobileIo) string { return v.TeamId }).(pulumi.StringOutput)
}

type GetClientMobileIoArrayOutput struct{ *pulumi.OutputState }

func (GetClientMobileIoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientMobileIo)(nil)).Elem()
}

func (o GetClientMobileIoArrayOutput) ToGetClientMobileIoArrayOutput() GetClientMobileIoArrayOutput {
	return o
}

func (o GetClientMobileIoArrayOutput) ToGetClientMobileIoArrayOutputWithContext(ctx context.Context) GetClientMobileIoArrayOutput {
	return o
}

func (o GetClientMobileIoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientMobileIo] {
	return pulumix.Output[[]GetClientMobileIo]{
		OutputState: o.OutputState,
	}
}

func (o GetClientMobileIoArrayOutput) Index(i pulumi.IntInput) GetClientMobileIoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientMobileIo {
		return vs[0].([]GetClientMobileIo)[vs[1].(int)]
	}).(GetClientMobileIoOutput)
}

type GetClientNativeSocialLogin struct {
	Apples    []GetClientNativeSocialLoginApple    `pulumi:"apples"`
	Facebooks []GetClientNativeSocialLoginFacebook `pulumi:"facebooks"`
}

// GetClientNativeSocialLoginInput is an input type that accepts GetClientNativeSocialLoginArgs and GetClientNativeSocialLoginOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginInput` via:
//
//	GetClientNativeSocialLoginArgs{...}
type GetClientNativeSocialLoginInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginOutput() GetClientNativeSocialLoginOutput
	ToGetClientNativeSocialLoginOutputWithContext(context.Context) GetClientNativeSocialLoginOutput
}

type GetClientNativeSocialLoginArgs struct {
	Apples    GetClientNativeSocialLoginAppleArrayInput    `pulumi:"apples"`
	Facebooks GetClientNativeSocialLoginFacebookArrayInput `pulumi:"facebooks"`
}

func (GetClientNativeSocialLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLogin)(nil)).Elem()
}

func (i GetClientNativeSocialLoginArgs) ToGetClientNativeSocialLoginOutput() GetClientNativeSocialLoginOutput {
	return i.ToGetClientNativeSocialLoginOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginArgs) ToGetClientNativeSocialLoginOutputWithContext(ctx context.Context) GetClientNativeSocialLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginOutput)
}

func (i GetClientNativeSocialLoginArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientNativeSocialLogin] {
	return pulumix.Output[GetClientNativeSocialLogin]{
		OutputState: i.ToGetClientNativeSocialLoginOutputWithContext(ctx).OutputState,
	}
}

// GetClientNativeSocialLoginArrayInput is an input type that accepts GetClientNativeSocialLoginArray and GetClientNativeSocialLoginArrayOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginArrayInput` via:
//
//	GetClientNativeSocialLoginArray{ GetClientNativeSocialLoginArgs{...} }
type GetClientNativeSocialLoginArrayInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginArrayOutput() GetClientNativeSocialLoginArrayOutput
	ToGetClientNativeSocialLoginArrayOutputWithContext(context.Context) GetClientNativeSocialLoginArrayOutput
}

type GetClientNativeSocialLoginArray []GetClientNativeSocialLoginInput

func (GetClientNativeSocialLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLogin)(nil)).Elem()
}

func (i GetClientNativeSocialLoginArray) ToGetClientNativeSocialLoginArrayOutput() GetClientNativeSocialLoginArrayOutput {
	return i.ToGetClientNativeSocialLoginArrayOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginArray) ToGetClientNativeSocialLoginArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginArrayOutput)
}

func (i GetClientNativeSocialLoginArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientNativeSocialLogin] {
	return pulumix.Output[[]GetClientNativeSocialLogin]{
		OutputState: i.ToGetClientNativeSocialLoginArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientNativeSocialLoginOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLogin)(nil)).Elem()
}

func (o GetClientNativeSocialLoginOutput) ToGetClientNativeSocialLoginOutput() GetClientNativeSocialLoginOutput {
	return o
}

func (o GetClientNativeSocialLoginOutput) ToGetClientNativeSocialLoginOutputWithContext(ctx context.Context) GetClientNativeSocialLoginOutput {
	return o
}

func (o GetClientNativeSocialLoginOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientNativeSocialLogin] {
	return pulumix.Output[GetClientNativeSocialLogin]{
		OutputState: o.OutputState,
	}
}

func (o GetClientNativeSocialLoginOutput) Apples() GetClientNativeSocialLoginAppleArrayOutput {
	return o.ApplyT(func(v GetClientNativeSocialLogin) []GetClientNativeSocialLoginApple { return v.Apples }).(GetClientNativeSocialLoginAppleArrayOutput)
}

func (o GetClientNativeSocialLoginOutput) Facebooks() GetClientNativeSocialLoginFacebookArrayOutput {
	return o.ApplyT(func(v GetClientNativeSocialLogin) []GetClientNativeSocialLoginFacebook { return v.Facebooks }).(GetClientNativeSocialLoginFacebookArrayOutput)
}

type GetClientNativeSocialLoginArrayOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLogin)(nil)).Elem()
}

func (o GetClientNativeSocialLoginArrayOutput) ToGetClientNativeSocialLoginArrayOutput() GetClientNativeSocialLoginArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginArrayOutput) ToGetClientNativeSocialLoginArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientNativeSocialLogin] {
	return pulumix.Output[[]GetClientNativeSocialLogin]{
		OutputState: o.OutputState,
	}
}

func (o GetClientNativeSocialLoginArrayOutput) Index(i pulumi.IntInput) GetClientNativeSocialLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientNativeSocialLogin {
		return vs[0].([]GetClientNativeSocialLogin)[vs[1].(int)]
	}).(GetClientNativeSocialLoginOutput)
}

type GetClientNativeSocialLoginApple struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClientNativeSocialLoginAppleInput is an input type that accepts GetClientNativeSocialLoginAppleArgs and GetClientNativeSocialLoginAppleOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginAppleInput` via:
//
//	GetClientNativeSocialLoginAppleArgs{...}
type GetClientNativeSocialLoginAppleInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginAppleOutput() GetClientNativeSocialLoginAppleOutput
	ToGetClientNativeSocialLoginAppleOutputWithContext(context.Context) GetClientNativeSocialLoginAppleOutput
}

type GetClientNativeSocialLoginAppleArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClientNativeSocialLoginAppleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GetClientNativeSocialLoginAppleArgs) ToGetClientNativeSocialLoginAppleOutput() GetClientNativeSocialLoginAppleOutput {
	return i.ToGetClientNativeSocialLoginAppleOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginAppleArgs) ToGetClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginAppleOutput)
}

func (i GetClientNativeSocialLoginAppleArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientNativeSocialLoginApple] {
	return pulumix.Output[GetClientNativeSocialLoginApple]{
		OutputState: i.ToGetClientNativeSocialLoginAppleOutputWithContext(ctx).OutputState,
	}
}

// GetClientNativeSocialLoginAppleArrayInput is an input type that accepts GetClientNativeSocialLoginAppleArray and GetClientNativeSocialLoginAppleArrayOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginAppleArrayInput` via:
//
//	GetClientNativeSocialLoginAppleArray{ GetClientNativeSocialLoginAppleArgs{...} }
type GetClientNativeSocialLoginAppleArrayInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginAppleArrayOutput() GetClientNativeSocialLoginAppleArrayOutput
	ToGetClientNativeSocialLoginAppleArrayOutputWithContext(context.Context) GetClientNativeSocialLoginAppleArrayOutput
}

type GetClientNativeSocialLoginAppleArray []GetClientNativeSocialLoginAppleInput

func (GetClientNativeSocialLoginAppleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (i GetClientNativeSocialLoginAppleArray) ToGetClientNativeSocialLoginAppleArrayOutput() GetClientNativeSocialLoginAppleArrayOutput {
	return i.ToGetClientNativeSocialLoginAppleArrayOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginAppleArray) ToGetClientNativeSocialLoginAppleArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginAppleArrayOutput)
}

func (i GetClientNativeSocialLoginAppleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientNativeSocialLoginApple] {
	return pulumix.Output[[]GetClientNativeSocialLoginApple]{
		OutputState: i.ToGetClientNativeSocialLoginAppleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientNativeSocialLoginAppleOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginAppleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GetClientNativeSocialLoginAppleOutput) ToGetClientNativeSocialLoginAppleOutput() GetClientNativeSocialLoginAppleOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleOutput) ToGetClientNativeSocialLoginAppleOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientNativeSocialLoginApple] {
	return pulumix.Output[GetClientNativeSocialLoginApple]{
		OutputState: o.OutputState,
	}
}

func (o GetClientNativeSocialLoginAppleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientNativeSocialLoginApple) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClientNativeSocialLoginAppleArrayOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginAppleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginApple)(nil)).Elem()
}

func (o GetClientNativeSocialLoginAppleArrayOutput) ToGetClientNativeSocialLoginAppleArrayOutput() GetClientNativeSocialLoginAppleArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleArrayOutput) ToGetClientNativeSocialLoginAppleArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginAppleArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginAppleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientNativeSocialLoginApple] {
	return pulumix.Output[[]GetClientNativeSocialLoginApple]{
		OutputState: o.OutputState,
	}
}

func (o GetClientNativeSocialLoginAppleArrayOutput) Index(i pulumi.IntInput) GetClientNativeSocialLoginAppleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientNativeSocialLoginApple {
		return vs[0].([]GetClientNativeSocialLoginApple)[vs[1].(int)]
	}).(GetClientNativeSocialLoginAppleOutput)
}

type GetClientNativeSocialLoginFacebook struct {
	Enabled bool `pulumi:"enabled"`
}

// GetClientNativeSocialLoginFacebookInput is an input type that accepts GetClientNativeSocialLoginFacebookArgs and GetClientNativeSocialLoginFacebookOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginFacebookInput` via:
//
//	GetClientNativeSocialLoginFacebookArgs{...}
type GetClientNativeSocialLoginFacebookInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginFacebookOutput() GetClientNativeSocialLoginFacebookOutput
	ToGetClientNativeSocialLoginFacebookOutputWithContext(context.Context) GetClientNativeSocialLoginFacebookOutput
}

type GetClientNativeSocialLoginFacebookArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetClientNativeSocialLoginFacebookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GetClientNativeSocialLoginFacebookArgs) ToGetClientNativeSocialLoginFacebookOutput() GetClientNativeSocialLoginFacebookOutput {
	return i.ToGetClientNativeSocialLoginFacebookOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginFacebookArgs) ToGetClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginFacebookOutput)
}

func (i GetClientNativeSocialLoginFacebookArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientNativeSocialLoginFacebook] {
	return pulumix.Output[GetClientNativeSocialLoginFacebook]{
		OutputState: i.ToGetClientNativeSocialLoginFacebookOutputWithContext(ctx).OutputState,
	}
}

// GetClientNativeSocialLoginFacebookArrayInput is an input type that accepts GetClientNativeSocialLoginFacebookArray and GetClientNativeSocialLoginFacebookArrayOutput values.
// You can construct a concrete instance of `GetClientNativeSocialLoginFacebookArrayInput` via:
//
//	GetClientNativeSocialLoginFacebookArray{ GetClientNativeSocialLoginFacebookArgs{...} }
type GetClientNativeSocialLoginFacebookArrayInput interface {
	pulumi.Input

	ToGetClientNativeSocialLoginFacebookArrayOutput() GetClientNativeSocialLoginFacebookArrayOutput
	ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(context.Context) GetClientNativeSocialLoginFacebookArrayOutput
}

type GetClientNativeSocialLoginFacebookArray []GetClientNativeSocialLoginFacebookInput

func (GetClientNativeSocialLoginFacebookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (i GetClientNativeSocialLoginFacebookArray) ToGetClientNativeSocialLoginFacebookArrayOutput() GetClientNativeSocialLoginFacebookArrayOutput {
	return i.ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(context.Background())
}

func (i GetClientNativeSocialLoginFacebookArray) ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientNativeSocialLoginFacebookArrayOutput)
}

func (i GetClientNativeSocialLoginFacebookArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientNativeSocialLoginFacebook] {
	return pulumix.Output[[]GetClientNativeSocialLoginFacebook]{
		OutputState: i.ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientNativeSocialLoginFacebookOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginFacebookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GetClientNativeSocialLoginFacebookOutput) ToGetClientNativeSocialLoginFacebookOutput() GetClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookOutput) ToGetClientNativeSocialLoginFacebookOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientNativeSocialLoginFacebook] {
	return pulumix.Output[GetClientNativeSocialLoginFacebook]{
		OutputState: o.OutputState,
	}
}

func (o GetClientNativeSocialLoginFacebookOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientNativeSocialLoginFacebook) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetClientNativeSocialLoginFacebookArrayOutput struct{ *pulumi.OutputState }

func (GetClientNativeSocialLoginFacebookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientNativeSocialLoginFacebook)(nil)).Elem()
}

func (o GetClientNativeSocialLoginFacebookArrayOutput) ToGetClientNativeSocialLoginFacebookArrayOutput() GetClientNativeSocialLoginFacebookArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookArrayOutput) ToGetClientNativeSocialLoginFacebookArrayOutputWithContext(ctx context.Context) GetClientNativeSocialLoginFacebookArrayOutput {
	return o
}

func (o GetClientNativeSocialLoginFacebookArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientNativeSocialLoginFacebook] {
	return pulumix.Output[[]GetClientNativeSocialLoginFacebook]{
		OutputState: o.OutputState,
	}
}

func (o GetClientNativeSocialLoginFacebookArrayOutput) Index(i pulumi.IntInput) GetClientNativeSocialLoginFacebookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientNativeSocialLoginFacebook {
		return vs[0].([]GetClientNativeSocialLoginFacebook)[vs[1].(int)]
	}).(GetClientNativeSocialLoginFacebookOutput)
}

type GetClientRefreshToken struct {
	ExpirationType            string `pulumi:"expirationType"`
	IdleTokenLifetime         int    `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime bool   `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     bool   `pulumi:"infiniteTokenLifetime"`
	Leeway                    int    `pulumi:"leeway"`
	RotationType              string `pulumi:"rotationType"`
	TokenLifetime             int    `pulumi:"tokenLifetime"`
}

// GetClientRefreshTokenInput is an input type that accepts GetClientRefreshTokenArgs and GetClientRefreshTokenOutput values.
// You can construct a concrete instance of `GetClientRefreshTokenInput` via:
//
//	GetClientRefreshTokenArgs{...}
type GetClientRefreshTokenInput interface {
	pulumi.Input

	ToGetClientRefreshTokenOutput() GetClientRefreshTokenOutput
	ToGetClientRefreshTokenOutputWithContext(context.Context) GetClientRefreshTokenOutput
}

type GetClientRefreshTokenArgs struct {
	ExpirationType            pulumi.StringInput `pulumi:"expirationType"`
	IdleTokenLifetime         pulumi.IntInput    `pulumi:"idleTokenLifetime"`
	InfiniteIdleTokenLifetime pulumi.BoolInput   `pulumi:"infiniteIdleTokenLifetime"`
	InfiniteTokenLifetime     pulumi.BoolInput   `pulumi:"infiniteTokenLifetime"`
	Leeway                    pulumi.IntInput    `pulumi:"leeway"`
	RotationType              pulumi.StringInput `pulumi:"rotationType"`
	TokenLifetime             pulumi.IntInput    `pulumi:"tokenLifetime"`
}

func (GetClientRefreshTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientRefreshToken)(nil)).Elem()
}

func (i GetClientRefreshTokenArgs) ToGetClientRefreshTokenOutput() GetClientRefreshTokenOutput {
	return i.ToGetClientRefreshTokenOutputWithContext(context.Background())
}

func (i GetClientRefreshTokenArgs) ToGetClientRefreshTokenOutputWithContext(ctx context.Context) GetClientRefreshTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientRefreshTokenOutput)
}

func (i GetClientRefreshTokenArgs) ToOutput(ctx context.Context) pulumix.Output[GetClientRefreshToken] {
	return pulumix.Output[GetClientRefreshToken]{
		OutputState: i.ToGetClientRefreshTokenOutputWithContext(ctx).OutputState,
	}
}

// GetClientRefreshTokenArrayInput is an input type that accepts GetClientRefreshTokenArray and GetClientRefreshTokenArrayOutput values.
// You can construct a concrete instance of `GetClientRefreshTokenArrayInput` via:
//
//	GetClientRefreshTokenArray{ GetClientRefreshTokenArgs{...} }
type GetClientRefreshTokenArrayInput interface {
	pulumi.Input

	ToGetClientRefreshTokenArrayOutput() GetClientRefreshTokenArrayOutput
	ToGetClientRefreshTokenArrayOutputWithContext(context.Context) GetClientRefreshTokenArrayOutput
}

type GetClientRefreshTokenArray []GetClientRefreshTokenInput

func (GetClientRefreshTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientRefreshToken)(nil)).Elem()
}

func (i GetClientRefreshTokenArray) ToGetClientRefreshTokenArrayOutput() GetClientRefreshTokenArrayOutput {
	return i.ToGetClientRefreshTokenArrayOutputWithContext(context.Background())
}

func (i GetClientRefreshTokenArray) ToGetClientRefreshTokenArrayOutputWithContext(ctx context.Context) GetClientRefreshTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClientRefreshTokenArrayOutput)
}

func (i GetClientRefreshTokenArray) ToOutput(ctx context.Context) pulumix.Output[[]GetClientRefreshToken] {
	return pulumix.Output[[]GetClientRefreshToken]{
		OutputState: i.ToGetClientRefreshTokenArrayOutputWithContext(ctx).OutputState,
	}
}

type GetClientRefreshTokenOutput struct{ *pulumi.OutputState }

func (GetClientRefreshTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClientRefreshToken)(nil)).Elem()
}

func (o GetClientRefreshTokenOutput) ToGetClientRefreshTokenOutput() GetClientRefreshTokenOutput {
	return o
}

func (o GetClientRefreshTokenOutput) ToGetClientRefreshTokenOutputWithContext(ctx context.Context) GetClientRefreshTokenOutput {
	return o
}

func (o GetClientRefreshTokenOutput) ToOutput(ctx context.Context) pulumix.Output[GetClientRefreshToken] {
	return pulumix.Output[GetClientRefreshToken]{
		OutputState: o.OutputState,
	}
}

func (o GetClientRefreshTokenOutput) ExpirationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientRefreshToken) string { return v.ExpirationType }).(pulumi.StringOutput)
}

func (o GetClientRefreshTokenOutput) IdleTokenLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientRefreshToken) int { return v.IdleTokenLifetime }).(pulumi.IntOutput)
}

func (o GetClientRefreshTokenOutput) InfiniteIdleTokenLifetime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientRefreshToken) bool { return v.InfiniteIdleTokenLifetime }).(pulumi.BoolOutput)
}

func (o GetClientRefreshTokenOutput) InfiniteTokenLifetime() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClientRefreshToken) bool { return v.InfiniteTokenLifetime }).(pulumi.BoolOutput)
}

func (o GetClientRefreshTokenOutput) Leeway() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientRefreshToken) int { return v.Leeway }).(pulumi.IntOutput)
}

func (o GetClientRefreshTokenOutput) RotationType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClientRefreshToken) string { return v.RotationType }).(pulumi.StringOutput)
}

func (o GetClientRefreshTokenOutput) TokenLifetime() pulumi.IntOutput {
	return o.ApplyT(func(v GetClientRefreshToken) int { return v.TokenLifetime }).(pulumi.IntOutput)
}

type GetClientRefreshTokenArrayOutput struct{ *pulumi.OutputState }

func (GetClientRefreshTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClientRefreshToken)(nil)).Elem()
}

func (o GetClientRefreshTokenArrayOutput) ToGetClientRefreshTokenArrayOutput() GetClientRefreshTokenArrayOutput {
	return o
}

func (o GetClientRefreshTokenArrayOutput) ToGetClientRefreshTokenArrayOutputWithContext(ctx context.Context) GetClientRefreshTokenArrayOutput {
	return o
}

func (o GetClientRefreshTokenArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetClientRefreshToken] {
	return pulumix.Output[[]GetClientRefreshToken]{
		OutputState: o.OutputState,
	}
}

func (o GetClientRefreshTokenArrayOutput) Index(i pulumi.IntInput) GetClientRefreshTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClientRefreshToken {
		return vs[0].([]GetClientRefreshToken)[vs[1].(int)]
	}).(GetClientRefreshTokenOutput)
}

type GetConnectionOption struct {
	AdfsServer                       string                                     `pulumi:"adfsServer"`
	AllowedAudiences                 []string                                   `pulumi:"allowedAudiences"`
	ApiEnableUsers                   bool                                       `pulumi:"apiEnableUsers"`
	AppId                            string                                     `pulumi:"appId"`
	AttributeMaps                    []GetConnectionOptionAttributeMap          `pulumi:"attributeMaps"`
	AuthParams                       map[string]string                          `pulumi:"authParams"`
	AuthorizationEndpoint            string                                     `pulumi:"authorizationEndpoint"`
	BruteForceProtection             bool                                       `pulumi:"bruteForceProtection"`
	ClientId                         string                                     `pulumi:"clientId"`
	ClientSecret                     string                                     `pulumi:"clientSecret"`
	CommunityBaseUrl                 string                                     `pulumi:"communityBaseUrl"`
	Configuration                    map[string]interface{}                     `pulumi:"configuration"`
	ConnectionSettings               []GetConnectionOptionConnectionSetting     `pulumi:"connectionSettings"`
	CustomScripts                    map[string]string                          `pulumi:"customScripts"`
	Debug                            bool                                       `pulumi:"debug"`
	DecryptionKeys                   []GetConnectionOptionDecryptionKey         `pulumi:"decryptionKeys"`
	DigestAlgorithm                  string                                     `pulumi:"digestAlgorithm"`
	DisableCache                     bool                                       `pulumi:"disableCache"`
	DisableSelfServiceChangePassword bool                                       `pulumi:"disableSelfServiceChangePassword"`
	DisableSignOut                   bool                                       `pulumi:"disableSignOut"`
	DisableSignup                    bool                                       `pulumi:"disableSignup"`
	DiscoveryUrl                     string                                     `pulumi:"discoveryUrl"`
	Domain                           string                                     `pulumi:"domain"`
	DomainAliases                    []string                                   `pulumi:"domainAliases"`
	EnableScriptContext              bool                                       `pulumi:"enableScriptContext"`
	EnabledDatabaseCustomization     bool                                       `pulumi:"enabledDatabaseCustomization"`
	EntityId                         string                                     `pulumi:"entityId"`
	FedMetadataXml                   string                                     `pulumi:"fedMetadataXml"`
	FieldsMap                        string                                     `pulumi:"fieldsMap"`
	ForwardRequestInfo               bool                                       `pulumi:"forwardRequestInfo"`
	From                             string                                     `pulumi:"from"`
	GatewayAuthentications           []GetConnectionOptionGatewayAuthentication `pulumi:"gatewayAuthentications"`
	GatewayUrl                       string                                     `pulumi:"gatewayUrl"`
	IconUrl                          string                                     `pulumi:"iconUrl"`
	IdentityApi                      string                                     `pulumi:"identityApi"`
	IdpInitiateds                    []GetConnectionOptionIdpInitiated          `pulumi:"idpInitiateds"`
	ImportMode                       bool                                       `pulumi:"importMode"`
	Ips                              []string                                   `pulumi:"ips"`
	Issuer                           string                                     `pulumi:"issuer"`
	JwksUri                          string                                     `pulumi:"jwksUri"`
	KeyId                            string                                     `pulumi:"keyId"`
	MapUserIdToId                    bool                                       `pulumi:"mapUserIdToId"`
	MaxGroupsToRetrieve              string                                     `pulumi:"maxGroupsToRetrieve"`
	MessagingServiceSid              string                                     `pulumi:"messagingServiceSid"`
	MetadataUrl                      string                                     `pulumi:"metadataUrl"`
	MetadataXml                      string                                     `pulumi:"metadataXml"`
	Mfas                             []GetConnectionOptionMfa                   `pulumi:"mfas"`
	// The name of the connection. If not provided, `connectionId` must be set.
	Name                               string                                        `pulumi:"name"`
	NonPersistentAttrs                 []string                                      `pulumi:"nonPersistentAttrs"`
	PasswordComplexityOptions          []GetConnectionOptionPasswordComplexityOption `pulumi:"passwordComplexityOptions"`
	PasswordDictionaries               []GetConnectionOptionPasswordDictionary       `pulumi:"passwordDictionaries"`
	PasswordHistories                  []GetConnectionOptionPasswordHistory          `pulumi:"passwordHistories"`
	PasswordNoPersonalInfos            []GetConnectionOptionPasswordNoPersonalInfo   `pulumi:"passwordNoPersonalInfos"`
	PasswordPolicy                     string                                        `pulumi:"passwordPolicy"`
	PingFederateBaseUrl                string                                        `pulumi:"pingFederateBaseUrl"`
	PkceEnabled                        bool                                          `pulumi:"pkceEnabled"`
	ProtocolBinding                    string                                        `pulumi:"protocolBinding"`
	Provider                           string                                        `pulumi:"provider"`
	RequestTemplate                    string                                        `pulumi:"requestTemplate"`
	RequiresUsername                   bool                                          `pulumi:"requiresUsername"`
	Scopes                             []string                                      `pulumi:"scopes"`
	Scripts                            map[string]string                             `pulumi:"scripts"`
	SetUserRootAttributes              string                                        `pulumi:"setUserRootAttributes"`
	ShouldTrustEmailVerifiedConnection string                                        `pulumi:"shouldTrustEmailVerifiedConnection"`
	SignInEndpoint                     string                                        `pulumi:"signInEndpoint"`
	SignOutEndpoint                    string                                        `pulumi:"signOutEndpoint"`
	SignSamlRequest                    bool                                          `pulumi:"signSamlRequest"`
	SignatureAlgorithm                 string                                        `pulumi:"signatureAlgorithm"`
	SigningCert                        string                                        `pulumi:"signingCert"`
	SigningKeys                        []GetConnectionOptionSigningKey               `pulumi:"signingKeys"`
	StrategyVersion                    int                                           `pulumi:"strategyVersion"`
	Subject                            string                                        `pulumi:"subject"`
	Syntax                             string                                        `pulumi:"syntax"`
	TeamId                             string                                        `pulumi:"teamId"`
	Template                           string                                        `pulumi:"template"`
	TenantDomain                       string                                        `pulumi:"tenantDomain"`
	TokenEndpoint                      string                                        `pulumi:"tokenEndpoint"`
	Totps                              []GetConnectionOptionTotp                     `pulumi:"totps"`
	TwilioSid                          string                                        `pulumi:"twilioSid"`
	TwilioToken                        string                                        `pulumi:"twilioToken"`
	Type                               string                                        `pulumi:"type"`
	UpstreamParams                     string                                        `pulumi:"upstreamParams"`
	UseCertAuth                        bool                                          `pulumi:"useCertAuth"`
	UseKerberos                        bool                                          `pulumi:"useKerberos"`
	UseWsfed                           bool                                          `pulumi:"useWsfed"`
	UserIdAttribute                    string                                        `pulumi:"userIdAttribute"`
	UserinfoEndpoint                   string                                        `pulumi:"userinfoEndpoint"`
	Validations                        []GetConnectionOptionValidation               `pulumi:"validations"`
	WaadCommonEndpoint                 bool                                          `pulumi:"waadCommonEndpoint"`
	WaadProtocol                       string                                        `pulumi:"waadProtocol"`
}

// GetConnectionOptionInput is an input type that accepts GetConnectionOptionArgs and GetConnectionOptionOutput values.
// You can construct a concrete instance of `GetConnectionOptionInput` via:
//
//	GetConnectionOptionArgs{...}
type GetConnectionOptionInput interface {
	pulumi.Input

	ToGetConnectionOptionOutput() GetConnectionOptionOutput
	ToGetConnectionOptionOutputWithContext(context.Context) GetConnectionOptionOutput
}

type GetConnectionOptionArgs struct {
	AdfsServer                       pulumi.StringInput                                 `pulumi:"adfsServer"`
	AllowedAudiences                 pulumi.StringArrayInput                            `pulumi:"allowedAudiences"`
	ApiEnableUsers                   pulumi.BoolInput                                   `pulumi:"apiEnableUsers"`
	AppId                            pulumi.StringInput                                 `pulumi:"appId"`
	AttributeMaps                    GetConnectionOptionAttributeMapArrayInput          `pulumi:"attributeMaps"`
	AuthParams                       pulumi.StringMapInput                              `pulumi:"authParams"`
	AuthorizationEndpoint            pulumi.StringInput                                 `pulumi:"authorizationEndpoint"`
	BruteForceProtection             pulumi.BoolInput                                   `pulumi:"bruteForceProtection"`
	ClientId                         pulumi.StringInput                                 `pulumi:"clientId"`
	ClientSecret                     pulumi.StringInput                                 `pulumi:"clientSecret"`
	CommunityBaseUrl                 pulumi.StringInput                                 `pulumi:"communityBaseUrl"`
	Configuration                    pulumi.MapInput                                    `pulumi:"configuration"`
	ConnectionSettings               GetConnectionOptionConnectionSettingArrayInput     `pulumi:"connectionSettings"`
	CustomScripts                    pulumi.StringMapInput                              `pulumi:"customScripts"`
	Debug                            pulumi.BoolInput                                   `pulumi:"debug"`
	DecryptionKeys                   GetConnectionOptionDecryptionKeyArrayInput         `pulumi:"decryptionKeys"`
	DigestAlgorithm                  pulumi.StringInput                                 `pulumi:"digestAlgorithm"`
	DisableCache                     pulumi.BoolInput                                   `pulumi:"disableCache"`
	DisableSelfServiceChangePassword pulumi.BoolInput                                   `pulumi:"disableSelfServiceChangePassword"`
	DisableSignOut                   pulumi.BoolInput                                   `pulumi:"disableSignOut"`
	DisableSignup                    pulumi.BoolInput                                   `pulumi:"disableSignup"`
	DiscoveryUrl                     pulumi.StringInput                                 `pulumi:"discoveryUrl"`
	Domain                           pulumi.StringInput                                 `pulumi:"domain"`
	DomainAliases                    pulumi.StringArrayInput                            `pulumi:"domainAliases"`
	EnableScriptContext              pulumi.BoolInput                                   `pulumi:"enableScriptContext"`
	EnabledDatabaseCustomization     pulumi.BoolInput                                   `pulumi:"enabledDatabaseCustomization"`
	EntityId                         pulumi.StringInput                                 `pulumi:"entityId"`
	FedMetadataXml                   pulumi.StringInput                                 `pulumi:"fedMetadataXml"`
	FieldsMap                        pulumi.StringInput                                 `pulumi:"fieldsMap"`
	ForwardRequestInfo               pulumi.BoolInput                                   `pulumi:"forwardRequestInfo"`
	From                             pulumi.StringInput                                 `pulumi:"from"`
	GatewayAuthentications           GetConnectionOptionGatewayAuthenticationArrayInput `pulumi:"gatewayAuthentications"`
	GatewayUrl                       pulumi.StringInput                                 `pulumi:"gatewayUrl"`
	IconUrl                          pulumi.StringInput                                 `pulumi:"iconUrl"`
	IdentityApi                      pulumi.StringInput                                 `pulumi:"identityApi"`
	IdpInitiateds                    GetConnectionOptionIdpInitiatedArrayInput          `pulumi:"idpInitiateds"`
	ImportMode                       pulumi.BoolInput                                   `pulumi:"importMode"`
	Ips                              pulumi.StringArrayInput                            `pulumi:"ips"`
	Issuer                           pulumi.StringInput                                 `pulumi:"issuer"`
	JwksUri                          pulumi.StringInput                                 `pulumi:"jwksUri"`
	KeyId                            pulumi.StringInput                                 `pulumi:"keyId"`
	MapUserIdToId                    pulumi.BoolInput                                   `pulumi:"mapUserIdToId"`
	MaxGroupsToRetrieve              pulumi.StringInput                                 `pulumi:"maxGroupsToRetrieve"`
	MessagingServiceSid              pulumi.StringInput                                 `pulumi:"messagingServiceSid"`
	MetadataUrl                      pulumi.StringInput                                 `pulumi:"metadataUrl"`
	MetadataXml                      pulumi.StringInput                                 `pulumi:"metadataXml"`
	Mfas                             GetConnectionOptionMfaArrayInput                   `pulumi:"mfas"`
	// The name of the connection. If not provided, `connectionId` must be set.
	Name                               pulumi.StringInput                                    `pulumi:"name"`
	NonPersistentAttrs                 pulumi.StringArrayInput                               `pulumi:"nonPersistentAttrs"`
	PasswordComplexityOptions          GetConnectionOptionPasswordComplexityOptionArrayInput `pulumi:"passwordComplexityOptions"`
	PasswordDictionaries               GetConnectionOptionPasswordDictionaryArrayInput       `pulumi:"passwordDictionaries"`
	PasswordHistories                  GetConnectionOptionPasswordHistoryArrayInput          `pulumi:"passwordHistories"`
	PasswordNoPersonalInfos            GetConnectionOptionPasswordNoPersonalInfoArrayInput   `pulumi:"passwordNoPersonalInfos"`
	PasswordPolicy                     pulumi.StringInput                                    `pulumi:"passwordPolicy"`
	PingFederateBaseUrl                pulumi.StringInput                                    `pulumi:"pingFederateBaseUrl"`
	PkceEnabled                        pulumi.BoolInput                                      `pulumi:"pkceEnabled"`
	ProtocolBinding                    pulumi.StringInput                                    `pulumi:"protocolBinding"`
	Provider                           pulumi.StringInput                                    `pulumi:"provider"`
	RequestTemplate                    pulumi.StringInput                                    `pulumi:"requestTemplate"`
	RequiresUsername                   pulumi.BoolInput                                      `pulumi:"requiresUsername"`
	Scopes                             pulumi.StringArrayInput                               `pulumi:"scopes"`
	Scripts                            pulumi.StringMapInput                                 `pulumi:"scripts"`
	SetUserRootAttributes              pulumi.StringInput                                    `pulumi:"setUserRootAttributes"`
	ShouldTrustEmailVerifiedConnection pulumi.StringInput                                    `pulumi:"shouldTrustEmailVerifiedConnection"`
	SignInEndpoint                     pulumi.StringInput                                    `pulumi:"signInEndpoint"`
	SignOutEndpoint                    pulumi.StringInput                                    `pulumi:"signOutEndpoint"`
	SignSamlRequest                    pulumi.BoolInput                                      `pulumi:"signSamlRequest"`
	SignatureAlgorithm                 pulumi.StringInput                                    `pulumi:"signatureAlgorithm"`
	SigningCert                        pulumi.StringInput                                    `pulumi:"signingCert"`
	SigningKeys                        GetConnectionOptionSigningKeyArrayInput               `pulumi:"signingKeys"`
	StrategyVersion                    pulumi.IntInput                                       `pulumi:"strategyVersion"`
	Subject                            pulumi.StringInput                                    `pulumi:"subject"`
	Syntax                             pulumi.StringInput                                    `pulumi:"syntax"`
	TeamId                             pulumi.StringInput                                    `pulumi:"teamId"`
	Template                           pulumi.StringInput                                    `pulumi:"template"`
	TenantDomain                       pulumi.StringInput                                    `pulumi:"tenantDomain"`
	TokenEndpoint                      pulumi.StringInput                                    `pulumi:"tokenEndpoint"`
	Totps                              GetConnectionOptionTotpArrayInput                     `pulumi:"totps"`
	TwilioSid                          pulumi.StringInput                                    `pulumi:"twilioSid"`
	TwilioToken                        pulumi.StringInput                                    `pulumi:"twilioToken"`
	Type                               pulumi.StringInput                                    `pulumi:"type"`
	UpstreamParams                     pulumi.StringInput                                    `pulumi:"upstreamParams"`
	UseCertAuth                        pulumi.BoolInput                                      `pulumi:"useCertAuth"`
	UseKerberos                        pulumi.BoolInput                                      `pulumi:"useKerberos"`
	UseWsfed                           pulumi.BoolInput                                      `pulumi:"useWsfed"`
	UserIdAttribute                    pulumi.StringInput                                    `pulumi:"userIdAttribute"`
	UserinfoEndpoint                   pulumi.StringInput                                    `pulumi:"userinfoEndpoint"`
	Validations                        GetConnectionOptionValidationArrayInput               `pulumi:"validations"`
	WaadCommonEndpoint                 pulumi.BoolInput                                      `pulumi:"waadCommonEndpoint"`
	WaadProtocol                       pulumi.StringInput                                    `pulumi:"waadProtocol"`
}

func (GetConnectionOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOption)(nil)).Elem()
}

func (i GetConnectionOptionArgs) ToGetConnectionOptionOutput() GetConnectionOptionOutput {
	return i.ToGetConnectionOptionOutputWithContext(context.Background())
}

func (i GetConnectionOptionArgs) ToGetConnectionOptionOutputWithContext(ctx context.Context) GetConnectionOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionOutput)
}

func (i GetConnectionOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOption] {
	return pulumix.Output[GetConnectionOption]{
		OutputState: i.ToGetConnectionOptionOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionArrayInput is an input type that accepts GetConnectionOptionArray and GetConnectionOptionArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionArrayInput` via:
//
//	GetConnectionOptionArray{ GetConnectionOptionArgs{...} }
type GetConnectionOptionArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionArrayOutput() GetConnectionOptionArrayOutput
	ToGetConnectionOptionArrayOutputWithContext(context.Context) GetConnectionOptionArrayOutput
}

type GetConnectionOptionArray []GetConnectionOptionInput

func (GetConnectionOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOption)(nil)).Elem()
}

func (i GetConnectionOptionArray) ToGetConnectionOptionArrayOutput() GetConnectionOptionArrayOutput {
	return i.ToGetConnectionOptionArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionArray) ToGetConnectionOptionArrayOutputWithContext(ctx context.Context) GetConnectionOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionArrayOutput)
}

func (i GetConnectionOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOption] {
	return pulumix.Output[[]GetConnectionOption]{
		OutputState: i.ToGetConnectionOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOption)(nil)).Elem()
}

func (o GetConnectionOptionOutput) ToGetConnectionOptionOutput() GetConnectionOptionOutput {
	return o
}

func (o GetConnectionOptionOutput) ToGetConnectionOptionOutputWithContext(ctx context.Context) GetConnectionOptionOutput {
	return o
}

func (o GetConnectionOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOption] {
	return pulumix.Output[GetConnectionOption]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionOutput) AdfsServer() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.AdfsServer }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) AllowedAudiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []string { return v.AllowedAudiences }).(pulumi.StringArrayOutput)
}

func (o GetConnectionOptionOutput) ApiEnableUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.ApiEnableUsers }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.AppId }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) AttributeMaps() GetConnectionOptionAttributeMapArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionAttributeMap { return v.AttributeMaps }).(GetConnectionOptionAttributeMapArrayOutput)
}

func (o GetConnectionOptionOutput) AuthParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetConnectionOption) map[string]string { return v.AuthParams }).(pulumi.StringMapOutput)
}

func (o GetConnectionOptionOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) BruteForceProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.BruteForceProtection }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) CommunityBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.CommunityBaseUrl }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) Configuration() pulumi.MapOutput {
	return o.ApplyT(func(v GetConnectionOption) map[string]interface{} { return v.Configuration }).(pulumi.MapOutput)
}

func (o GetConnectionOptionOutput) ConnectionSettings() GetConnectionOptionConnectionSettingArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionConnectionSetting { return v.ConnectionSettings }).(GetConnectionOptionConnectionSettingArrayOutput)
}

func (o GetConnectionOptionOutput) CustomScripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetConnectionOption) map[string]string { return v.CustomScripts }).(pulumi.StringMapOutput)
}

func (o GetConnectionOptionOutput) Debug() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.Debug }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) DecryptionKeys() GetConnectionOptionDecryptionKeyArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionDecryptionKey { return v.DecryptionKeys }).(GetConnectionOptionDecryptionKeyArrayOutput)
}

func (o GetConnectionOptionOutput) DigestAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.DigestAlgorithm }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) DisableCache() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.DisableCache }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) DisableSelfServiceChangePassword() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.DisableSelfServiceChangePassword }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) DisableSignOut() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.DisableSignOut }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) DisableSignup() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.DisableSignup }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) DiscoveryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.DiscoveryUrl }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) DomainAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []string { return v.DomainAliases }).(pulumi.StringArrayOutput)
}

func (o GetConnectionOptionOutput) EnableScriptContext() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.EnableScriptContext }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) EnabledDatabaseCustomization() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.EnabledDatabaseCustomization }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.EntityId }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) FedMetadataXml() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.FedMetadataXml }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) FieldsMap() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.FieldsMap }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) ForwardRequestInfo() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.ForwardRequestInfo }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.From }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) GatewayAuthentications() GetConnectionOptionGatewayAuthenticationArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionGatewayAuthentication {
		return v.GatewayAuthentications
	}).(GetConnectionOptionGatewayAuthenticationArrayOutput)
}

func (o GetConnectionOptionOutput) GatewayUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.GatewayUrl }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) IconUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.IconUrl }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) IdentityApi() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.IdentityApi }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) IdpInitiateds() GetConnectionOptionIdpInitiatedArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionIdpInitiated { return v.IdpInitiateds }).(GetConnectionOptionIdpInitiatedArrayOutput)
}

func (o GetConnectionOptionOutput) ImportMode() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.ImportMode }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetConnectionOptionOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.Issuer }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) JwksUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.JwksUri }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) MapUserIdToId() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.MapUserIdToId }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) MaxGroupsToRetrieve() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.MaxGroupsToRetrieve }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) MessagingServiceSid() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.MessagingServiceSid }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) MetadataUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.MetadataUrl }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) MetadataXml() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.MetadataXml }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) Mfas() GetConnectionOptionMfaArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionMfa { return v.Mfas }).(GetConnectionOptionMfaArrayOutput)
}

// The name of the connection. If not provided, `connectionId` must be set.
func (o GetConnectionOptionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) NonPersistentAttrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []string { return v.NonPersistentAttrs }).(pulumi.StringArrayOutput)
}

func (o GetConnectionOptionOutput) PasswordComplexityOptions() GetConnectionOptionPasswordComplexityOptionArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionPasswordComplexityOption {
		return v.PasswordComplexityOptions
	}).(GetConnectionOptionPasswordComplexityOptionArrayOutput)
}

func (o GetConnectionOptionOutput) PasswordDictionaries() GetConnectionOptionPasswordDictionaryArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionPasswordDictionary { return v.PasswordDictionaries }).(GetConnectionOptionPasswordDictionaryArrayOutput)
}

func (o GetConnectionOptionOutput) PasswordHistories() GetConnectionOptionPasswordHistoryArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionPasswordHistory { return v.PasswordHistories }).(GetConnectionOptionPasswordHistoryArrayOutput)
}

func (o GetConnectionOptionOutput) PasswordNoPersonalInfos() GetConnectionOptionPasswordNoPersonalInfoArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionPasswordNoPersonalInfo {
		return v.PasswordNoPersonalInfos
	}).(GetConnectionOptionPasswordNoPersonalInfoArrayOutput)
}

func (o GetConnectionOptionOutput) PasswordPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.PasswordPolicy }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) PingFederateBaseUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.PingFederateBaseUrl }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) PkceEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.PkceEnabled }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) ProtocolBinding() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.ProtocolBinding }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) Provider() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.Provider }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) RequestTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.RequestTemplate }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) RequiresUsername() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.RequiresUsername }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o GetConnectionOptionOutput) Scripts() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetConnectionOption) map[string]string { return v.Scripts }).(pulumi.StringMapOutput)
}

func (o GetConnectionOptionOutput) SetUserRootAttributes() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.SetUserRootAttributes }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) ShouldTrustEmailVerifiedConnection() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.ShouldTrustEmailVerifiedConnection }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) SignInEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.SignInEndpoint }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) SignOutEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.SignOutEndpoint }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) SignSamlRequest() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.SignSamlRequest }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) SignatureAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.SignatureAlgorithm }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) SigningCert() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.SigningCert }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) SigningKeys() GetConnectionOptionSigningKeyArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionSigningKey { return v.SigningKeys }).(GetConnectionOptionSigningKeyArrayOutput)
}

func (o GetConnectionOptionOutput) StrategyVersion() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionOption) int { return v.StrategyVersion }).(pulumi.IntOutput)
}

func (o GetConnectionOptionOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.Subject }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) Syntax() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.Syntax }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.TeamId }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.Template }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) TenantDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.TenantDomain }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) Totps() GetConnectionOptionTotpArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionTotp { return v.Totps }).(GetConnectionOptionTotpArrayOutput)
}

func (o GetConnectionOptionOutput) TwilioSid() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.TwilioSid }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) TwilioToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.TwilioToken }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) UpstreamParams() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.UpstreamParams }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) UseCertAuth() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.UseCertAuth }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) UseKerberos() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.UseKerberos }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) UseWsfed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.UseWsfed }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) UserIdAttribute() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.UserIdAttribute }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) UserinfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.UserinfoEndpoint }).(pulumi.StringOutput)
}

func (o GetConnectionOptionOutput) Validations() GetConnectionOptionValidationArrayOutput {
	return o.ApplyT(func(v GetConnectionOption) []GetConnectionOptionValidation { return v.Validations }).(GetConnectionOptionValidationArrayOutput)
}

func (o GetConnectionOptionOutput) WaadCommonEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOption) bool { return v.WaadCommonEndpoint }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionOutput) WaadProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOption) string { return v.WaadProtocol }).(pulumi.StringOutput)
}

type GetConnectionOptionArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOption)(nil)).Elem()
}

func (o GetConnectionOptionArrayOutput) ToGetConnectionOptionArrayOutput() GetConnectionOptionArrayOutput {
	return o
}

func (o GetConnectionOptionArrayOutput) ToGetConnectionOptionArrayOutputWithContext(ctx context.Context) GetConnectionOptionArrayOutput {
	return o
}

func (o GetConnectionOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOption] {
	return pulumix.Output[[]GetConnectionOption]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOption {
		return vs[0].([]GetConnectionOption)[vs[1].(int)]
	}).(GetConnectionOptionOutput)
}

type GetConnectionOptionAttributeMap struct {
	Attributes    string `pulumi:"attributes"`
	MappingMode   string `pulumi:"mappingMode"`
	UserinfoScope string `pulumi:"userinfoScope"`
}

// GetConnectionOptionAttributeMapInput is an input type that accepts GetConnectionOptionAttributeMap and GetConnectionOptionAttributeMapOutput values.
// You can construct a concrete instance of `GetConnectionOptionAttributeMapInput` via:
//
//	GetConnectionOptionAttributeMap{ "key": GetConnectionOptionAttributeArgs{...} }
type GetConnectionOptionAttributeMapInput interface {
	pulumi.Input

	ToGetConnectionOptionAttributeMapOutput() GetConnectionOptionAttributeMapOutput
	ToGetConnectionOptionAttributeMapOutputWithContext(context.Context) GetConnectionOptionAttributeMapOutput
}

type GetConnectionOptionAttributeMapArgs struct {
	Attributes    pulumi.StringInput `pulumi:"attributes"`
	MappingMode   pulumi.StringInput `pulumi:"mappingMode"`
	UserinfoScope pulumi.StringInput `pulumi:"userinfoScope"`
}

func (GetConnectionOptionAttributeMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionAttributeMap)(nil)).Elem()
}

func (i GetConnectionOptionAttributeMapArgs) ToGetConnectionOptionAttributeMapOutput() GetConnectionOptionAttributeMapOutput {
	return i.ToGetConnectionOptionAttributeMapOutputWithContext(context.Background())
}

func (i GetConnectionOptionAttributeMapArgs) ToGetConnectionOptionAttributeMapOutputWithContext(ctx context.Context) GetConnectionOptionAttributeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionAttributeMapOutput)
}

func (i GetConnectionOptionAttributeMapArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionAttributeMap] {
	return pulumix.Output[GetConnectionOptionAttributeMap]{
		OutputState: i.ToGetConnectionOptionAttributeMapOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionAttributeMapArrayInput is an input type that accepts GetConnectionOptionAttributeMapArray and GetConnectionOptionAttributeMapArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionAttributeMapArrayInput` via:
//
//	GetConnectionOptionAttributeMapArray{ GetConnectionOptionAttributeMapArgs{...} }
type GetConnectionOptionAttributeMapArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionAttributeMapArrayOutput() GetConnectionOptionAttributeMapArrayOutput
	ToGetConnectionOptionAttributeMapArrayOutputWithContext(context.Context) GetConnectionOptionAttributeMapArrayOutput
}

type GetConnectionOptionAttributeMapArray []GetConnectionOptionAttributeMapInput

func (GetConnectionOptionAttributeMapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionAttributeMap)(nil)).Elem()
}

func (i GetConnectionOptionAttributeMapArray) ToGetConnectionOptionAttributeMapArrayOutput() GetConnectionOptionAttributeMapArrayOutput {
	return i.ToGetConnectionOptionAttributeMapArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionAttributeMapArray) ToGetConnectionOptionAttributeMapArrayOutputWithContext(ctx context.Context) GetConnectionOptionAttributeMapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionAttributeMapArrayOutput)
}

func (i GetConnectionOptionAttributeMapArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionAttributeMap] {
	return pulumix.Output[[]GetConnectionOptionAttributeMap]{
		OutputState: i.ToGetConnectionOptionAttributeMapArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionAttributeMapOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionAttributeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionAttributeMap)(nil)).Elem()
}

func (o GetConnectionOptionAttributeMapOutput) ToGetConnectionOptionAttributeMapOutput() GetConnectionOptionAttributeMapOutput {
	return o
}

func (o GetConnectionOptionAttributeMapOutput) ToGetConnectionOptionAttributeMapOutputWithContext(ctx context.Context) GetConnectionOptionAttributeMapOutput {
	return o
}

func (o GetConnectionOptionAttributeMapOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionAttributeMap] {
	return pulumix.Output[GetConnectionOptionAttributeMap]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionAttributeMapOutput) Attributes() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionAttributeMap) string { return v.Attributes }).(pulumi.StringOutput)
}

func (o GetConnectionOptionAttributeMapOutput) MappingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionAttributeMap) string { return v.MappingMode }).(pulumi.StringOutput)
}

func (o GetConnectionOptionAttributeMapOutput) UserinfoScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionAttributeMap) string { return v.UserinfoScope }).(pulumi.StringOutput)
}

type GetConnectionOptionAttributeMapArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionAttributeMapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionAttributeMap)(nil)).Elem()
}

func (o GetConnectionOptionAttributeMapArrayOutput) ToGetConnectionOptionAttributeMapArrayOutput() GetConnectionOptionAttributeMapArrayOutput {
	return o
}

func (o GetConnectionOptionAttributeMapArrayOutput) ToGetConnectionOptionAttributeMapArrayOutputWithContext(ctx context.Context) GetConnectionOptionAttributeMapArrayOutput {
	return o
}

func (o GetConnectionOptionAttributeMapArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionAttributeMap] {
	return pulumix.Output[[]GetConnectionOptionAttributeMap]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionAttributeMapArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionAttributeMapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionAttributeMap {
		return vs[0].([]GetConnectionOptionAttributeMap)[vs[1].(int)]
	}).(GetConnectionOptionAttributeMapOutput)
}

type GetConnectionOptionConnectionSetting struct {
	Pkce string `pulumi:"pkce"`
}

// GetConnectionOptionConnectionSettingInput is an input type that accepts GetConnectionOptionConnectionSettingArgs and GetConnectionOptionConnectionSettingOutput values.
// You can construct a concrete instance of `GetConnectionOptionConnectionSettingInput` via:
//
//	GetConnectionOptionConnectionSettingArgs{...}
type GetConnectionOptionConnectionSettingInput interface {
	pulumi.Input

	ToGetConnectionOptionConnectionSettingOutput() GetConnectionOptionConnectionSettingOutput
	ToGetConnectionOptionConnectionSettingOutputWithContext(context.Context) GetConnectionOptionConnectionSettingOutput
}

type GetConnectionOptionConnectionSettingArgs struct {
	Pkce pulumi.StringInput `pulumi:"pkce"`
}

func (GetConnectionOptionConnectionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionConnectionSetting)(nil)).Elem()
}

func (i GetConnectionOptionConnectionSettingArgs) ToGetConnectionOptionConnectionSettingOutput() GetConnectionOptionConnectionSettingOutput {
	return i.ToGetConnectionOptionConnectionSettingOutputWithContext(context.Background())
}

func (i GetConnectionOptionConnectionSettingArgs) ToGetConnectionOptionConnectionSettingOutputWithContext(ctx context.Context) GetConnectionOptionConnectionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionConnectionSettingOutput)
}

func (i GetConnectionOptionConnectionSettingArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionConnectionSetting] {
	return pulumix.Output[GetConnectionOptionConnectionSetting]{
		OutputState: i.ToGetConnectionOptionConnectionSettingOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionConnectionSettingArrayInput is an input type that accepts GetConnectionOptionConnectionSettingArray and GetConnectionOptionConnectionSettingArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionConnectionSettingArrayInput` via:
//
//	GetConnectionOptionConnectionSettingArray{ GetConnectionOptionConnectionSettingArgs{...} }
type GetConnectionOptionConnectionSettingArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionConnectionSettingArrayOutput() GetConnectionOptionConnectionSettingArrayOutput
	ToGetConnectionOptionConnectionSettingArrayOutputWithContext(context.Context) GetConnectionOptionConnectionSettingArrayOutput
}

type GetConnectionOptionConnectionSettingArray []GetConnectionOptionConnectionSettingInput

func (GetConnectionOptionConnectionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionConnectionSetting)(nil)).Elem()
}

func (i GetConnectionOptionConnectionSettingArray) ToGetConnectionOptionConnectionSettingArrayOutput() GetConnectionOptionConnectionSettingArrayOutput {
	return i.ToGetConnectionOptionConnectionSettingArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionConnectionSettingArray) ToGetConnectionOptionConnectionSettingArrayOutputWithContext(ctx context.Context) GetConnectionOptionConnectionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionConnectionSettingArrayOutput)
}

func (i GetConnectionOptionConnectionSettingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionConnectionSetting] {
	return pulumix.Output[[]GetConnectionOptionConnectionSetting]{
		OutputState: i.ToGetConnectionOptionConnectionSettingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionConnectionSettingOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionConnectionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionConnectionSetting)(nil)).Elem()
}

func (o GetConnectionOptionConnectionSettingOutput) ToGetConnectionOptionConnectionSettingOutput() GetConnectionOptionConnectionSettingOutput {
	return o
}

func (o GetConnectionOptionConnectionSettingOutput) ToGetConnectionOptionConnectionSettingOutputWithContext(ctx context.Context) GetConnectionOptionConnectionSettingOutput {
	return o
}

func (o GetConnectionOptionConnectionSettingOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionConnectionSetting] {
	return pulumix.Output[GetConnectionOptionConnectionSetting]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionConnectionSettingOutput) Pkce() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionConnectionSetting) string { return v.Pkce }).(pulumi.StringOutput)
}

type GetConnectionOptionConnectionSettingArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionConnectionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionConnectionSetting)(nil)).Elem()
}

func (o GetConnectionOptionConnectionSettingArrayOutput) ToGetConnectionOptionConnectionSettingArrayOutput() GetConnectionOptionConnectionSettingArrayOutput {
	return o
}

func (o GetConnectionOptionConnectionSettingArrayOutput) ToGetConnectionOptionConnectionSettingArrayOutputWithContext(ctx context.Context) GetConnectionOptionConnectionSettingArrayOutput {
	return o
}

func (o GetConnectionOptionConnectionSettingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionConnectionSetting] {
	return pulumix.Output[[]GetConnectionOptionConnectionSetting]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionConnectionSettingArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionConnectionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionConnectionSetting {
		return vs[0].([]GetConnectionOptionConnectionSetting)[vs[1].(int)]
	}).(GetConnectionOptionConnectionSettingOutput)
}

type GetConnectionOptionDecryptionKey struct {
	Cert string `pulumi:"cert"`
	Key  string `pulumi:"key"`
}

// GetConnectionOptionDecryptionKeyInput is an input type that accepts GetConnectionOptionDecryptionKeyArgs and GetConnectionOptionDecryptionKeyOutput values.
// You can construct a concrete instance of `GetConnectionOptionDecryptionKeyInput` via:
//
//	GetConnectionOptionDecryptionKeyArgs{...}
type GetConnectionOptionDecryptionKeyInput interface {
	pulumi.Input

	ToGetConnectionOptionDecryptionKeyOutput() GetConnectionOptionDecryptionKeyOutput
	ToGetConnectionOptionDecryptionKeyOutputWithContext(context.Context) GetConnectionOptionDecryptionKeyOutput
}

type GetConnectionOptionDecryptionKeyArgs struct {
	Cert pulumi.StringInput `pulumi:"cert"`
	Key  pulumi.StringInput `pulumi:"key"`
}

func (GetConnectionOptionDecryptionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionDecryptionKey)(nil)).Elem()
}

func (i GetConnectionOptionDecryptionKeyArgs) ToGetConnectionOptionDecryptionKeyOutput() GetConnectionOptionDecryptionKeyOutput {
	return i.ToGetConnectionOptionDecryptionKeyOutputWithContext(context.Background())
}

func (i GetConnectionOptionDecryptionKeyArgs) ToGetConnectionOptionDecryptionKeyOutputWithContext(ctx context.Context) GetConnectionOptionDecryptionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionDecryptionKeyOutput)
}

func (i GetConnectionOptionDecryptionKeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionDecryptionKey] {
	return pulumix.Output[GetConnectionOptionDecryptionKey]{
		OutputState: i.ToGetConnectionOptionDecryptionKeyOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionDecryptionKeyArrayInput is an input type that accepts GetConnectionOptionDecryptionKeyArray and GetConnectionOptionDecryptionKeyArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionDecryptionKeyArrayInput` via:
//
//	GetConnectionOptionDecryptionKeyArray{ GetConnectionOptionDecryptionKeyArgs{...} }
type GetConnectionOptionDecryptionKeyArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionDecryptionKeyArrayOutput() GetConnectionOptionDecryptionKeyArrayOutput
	ToGetConnectionOptionDecryptionKeyArrayOutputWithContext(context.Context) GetConnectionOptionDecryptionKeyArrayOutput
}

type GetConnectionOptionDecryptionKeyArray []GetConnectionOptionDecryptionKeyInput

func (GetConnectionOptionDecryptionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionDecryptionKey)(nil)).Elem()
}

func (i GetConnectionOptionDecryptionKeyArray) ToGetConnectionOptionDecryptionKeyArrayOutput() GetConnectionOptionDecryptionKeyArrayOutput {
	return i.ToGetConnectionOptionDecryptionKeyArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionDecryptionKeyArray) ToGetConnectionOptionDecryptionKeyArrayOutputWithContext(ctx context.Context) GetConnectionOptionDecryptionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionDecryptionKeyArrayOutput)
}

func (i GetConnectionOptionDecryptionKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionDecryptionKey] {
	return pulumix.Output[[]GetConnectionOptionDecryptionKey]{
		OutputState: i.ToGetConnectionOptionDecryptionKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionDecryptionKeyOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionDecryptionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionDecryptionKey)(nil)).Elem()
}

func (o GetConnectionOptionDecryptionKeyOutput) ToGetConnectionOptionDecryptionKeyOutput() GetConnectionOptionDecryptionKeyOutput {
	return o
}

func (o GetConnectionOptionDecryptionKeyOutput) ToGetConnectionOptionDecryptionKeyOutputWithContext(ctx context.Context) GetConnectionOptionDecryptionKeyOutput {
	return o
}

func (o GetConnectionOptionDecryptionKeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionDecryptionKey] {
	return pulumix.Output[GetConnectionOptionDecryptionKey]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionDecryptionKeyOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionDecryptionKey) string { return v.Cert }).(pulumi.StringOutput)
}

func (o GetConnectionOptionDecryptionKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionDecryptionKey) string { return v.Key }).(pulumi.StringOutput)
}

type GetConnectionOptionDecryptionKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionDecryptionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionDecryptionKey)(nil)).Elem()
}

func (o GetConnectionOptionDecryptionKeyArrayOutput) ToGetConnectionOptionDecryptionKeyArrayOutput() GetConnectionOptionDecryptionKeyArrayOutput {
	return o
}

func (o GetConnectionOptionDecryptionKeyArrayOutput) ToGetConnectionOptionDecryptionKeyArrayOutputWithContext(ctx context.Context) GetConnectionOptionDecryptionKeyArrayOutput {
	return o
}

func (o GetConnectionOptionDecryptionKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionDecryptionKey] {
	return pulumix.Output[[]GetConnectionOptionDecryptionKey]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionDecryptionKeyArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionDecryptionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionDecryptionKey {
		return vs[0].([]GetConnectionOptionDecryptionKey)[vs[1].(int)]
	}).(GetConnectionOptionDecryptionKeyOutput)
}

type GetConnectionOptionGatewayAuthentication struct {
	Audience            string `pulumi:"audience"`
	Method              string `pulumi:"method"`
	Secret              string `pulumi:"secret"`
	SecretBase64Encoded bool   `pulumi:"secretBase64Encoded"`
	Subject             string `pulumi:"subject"`
}

// GetConnectionOptionGatewayAuthenticationInput is an input type that accepts GetConnectionOptionGatewayAuthenticationArgs and GetConnectionOptionGatewayAuthenticationOutput values.
// You can construct a concrete instance of `GetConnectionOptionGatewayAuthenticationInput` via:
//
//	GetConnectionOptionGatewayAuthenticationArgs{...}
type GetConnectionOptionGatewayAuthenticationInput interface {
	pulumi.Input

	ToGetConnectionOptionGatewayAuthenticationOutput() GetConnectionOptionGatewayAuthenticationOutput
	ToGetConnectionOptionGatewayAuthenticationOutputWithContext(context.Context) GetConnectionOptionGatewayAuthenticationOutput
}

type GetConnectionOptionGatewayAuthenticationArgs struct {
	Audience            pulumi.StringInput `pulumi:"audience"`
	Method              pulumi.StringInput `pulumi:"method"`
	Secret              pulumi.StringInput `pulumi:"secret"`
	SecretBase64Encoded pulumi.BoolInput   `pulumi:"secretBase64Encoded"`
	Subject             pulumi.StringInput `pulumi:"subject"`
}

func (GetConnectionOptionGatewayAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionGatewayAuthentication)(nil)).Elem()
}

func (i GetConnectionOptionGatewayAuthenticationArgs) ToGetConnectionOptionGatewayAuthenticationOutput() GetConnectionOptionGatewayAuthenticationOutput {
	return i.ToGetConnectionOptionGatewayAuthenticationOutputWithContext(context.Background())
}

func (i GetConnectionOptionGatewayAuthenticationArgs) ToGetConnectionOptionGatewayAuthenticationOutputWithContext(ctx context.Context) GetConnectionOptionGatewayAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionGatewayAuthenticationOutput)
}

func (i GetConnectionOptionGatewayAuthenticationArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionGatewayAuthentication] {
	return pulumix.Output[GetConnectionOptionGatewayAuthentication]{
		OutputState: i.ToGetConnectionOptionGatewayAuthenticationOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionGatewayAuthenticationArrayInput is an input type that accepts GetConnectionOptionGatewayAuthenticationArray and GetConnectionOptionGatewayAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionGatewayAuthenticationArrayInput` via:
//
//	GetConnectionOptionGatewayAuthenticationArray{ GetConnectionOptionGatewayAuthenticationArgs{...} }
type GetConnectionOptionGatewayAuthenticationArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionGatewayAuthenticationArrayOutput() GetConnectionOptionGatewayAuthenticationArrayOutput
	ToGetConnectionOptionGatewayAuthenticationArrayOutputWithContext(context.Context) GetConnectionOptionGatewayAuthenticationArrayOutput
}

type GetConnectionOptionGatewayAuthenticationArray []GetConnectionOptionGatewayAuthenticationInput

func (GetConnectionOptionGatewayAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionGatewayAuthentication)(nil)).Elem()
}

func (i GetConnectionOptionGatewayAuthenticationArray) ToGetConnectionOptionGatewayAuthenticationArrayOutput() GetConnectionOptionGatewayAuthenticationArrayOutput {
	return i.ToGetConnectionOptionGatewayAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionGatewayAuthenticationArray) ToGetConnectionOptionGatewayAuthenticationArrayOutputWithContext(ctx context.Context) GetConnectionOptionGatewayAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionGatewayAuthenticationArrayOutput)
}

func (i GetConnectionOptionGatewayAuthenticationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionGatewayAuthentication] {
	return pulumix.Output[[]GetConnectionOptionGatewayAuthentication]{
		OutputState: i.ToGetConnectionOptionGatewayAuthenticationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionGatewayAuthenticationOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionGatewayAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionGatewayAuthentication)(nil)).Elem()
}

func (o GetConnectionOptionGatewayAuthenticationOutput) ToGetConnectionOptionGatewayAuthenticationOutput() GetConnectionOptionGatewayAuthenticationOutput {
	return o
}

func (o GetConnectionOptionGatewayAuthenticationOutput) ToGetConnectionOptionGatewayAuthenticationOutputWithContext(ctx context.Context) GetConnectionOptionGatewayAuthenticationOutput {
	return o
}

func (o GetConnectionOptionGatewayAuthenticationOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionGatewayAuthentication] {
	return pulumix.Output[GetConnectionOptionGatewayAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionGatewayAuthenticationOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionGatewayAuthentication) string { return v.Audience }).(pulumi.StringOutput)
}

func (o GetConnectionOptionGatewayAuthenticationOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionGatewayAuthentication) string { return v.Method }).(pulumi.StringOutput)
}

func (o GetConnectionOptionGatewayAuthenticationOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionGatewayAuthentication) string { return v.Secret }).(pulumi.StringOutput)
}

func (o GetConnectionOptionGatewayAuthenticationOutput) SecretBase64Encoded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOptionGatewayAuthentication) bool { return v.SecretBase64Encoded }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionGatewayAuthenticationOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionGatewayAuthentication) string { return v.Subject }).(pulumi.StringOutput)
}

type GetConnectionOptionGatewayAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionGatewayAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionGatewayAuthentication)(nil)).Elem()
}

func (o GetConnectionOptionGatewayAuthenticationArrayOutput) ToGetConnectionOptionGatewayAuthenticationArrayOutput() GetConnectionOptionGatewayAuthenticationArrayOutput {
	return o
}

func (o GetConnectionOptionGatewayAuthenticationArrayOutput) ToGetConnectionOptionGatewayAuthenticationArrayOutputWithContext(ctx context.Context) GetConnectionOptionGatewayAuthenticationArrayOutput {
	return o
}

func (o GetConnectionOptionGatewayAuthenticationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionGatewayAuthentication] {
	return pulumix.Output[[]GetConnectionOptionGatewayAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionGatewayAuthenticationArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionGatewayAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionGatewayAuthentication {
		return vs[0].([]GetConnectionOptionGatewayAuthentication)[vs[1].(int)]
	}).(GetConnectionOptionGatewayAuthenticationOutput)
}

type GetConnectionOptionIdpInitiated struct {
	ClientAuthorizeQuery string `pulumi:"clientAuthorizeQuery"`
	ClientId             string `pulumi:"clientId"`
	ClientProtocol       string `pulumi:"clientProtocol"`
}

// GetConnectionOptionIdpInitiatedInput is an input type that accepts GetConnectionOptionIdpInitiatedArgs and GetConnectionOptionIdpInitiatedOutput values.
// You can construct a concrete instance of `GetConnectionOptionIdpInitiatedInput` via:
//
//	GetConnectionOptionIdpInitiatedArgs{...}
type GetConnectionOptionIdpInitiatedInput interface {
	pulumi.Input

	ToGetConnectionOptionIdpInitiatedOutput() GetConnectionOptionIdpInitiatedOutput
	ToGetConnectionOptionIdpInitiatedOutputWithContext(context.Context) GetConnectionOptionIdpInitiatedOutput
}

type GetConnectionOptionIdpInitiatedArgs struct {
	ClientAuthorizeQuery pulumi.StringInput `pulumi:"clientAuthorizeQuery"`
	ClientId             pulumi.StringInput `pulumi:"clientId"`
	ClientProtocol       pulumi.StringInput `pulumi:"clientProtocol"`
}

func (GetConnectionOptionIdpInitiatedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionIdpInitiated)(nil)).Elem()
}

func (i GetConnectionOptionIdpInitiatedArgs) ToGetConnectionOptionIdpInitiatedOutput() GetConnectionOptionIdpInitiatedOutput {
	return i.ToGetConnectionOptionIdpInitiatedOutputWithContext(context.Background())
}

func (i GetConnectionOptionIdpInitiatedArgs) ToGetConnectionOptionIdpInitiatedOutputWithContext(ctx context.Context) GetConnectionOptionIdpInitiatedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionIdpInitiatedOutput)
}

func (i GetConnectionOptionIdpInitiatedArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionIdpInitiated] {
	return pulumix.Output[GetConnectionOptionIdpInitiated]{
		OutputState: i.ToGetConnectionOptionIdpInitiatedOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionIdpInitiatedArrayInput is an input type that accepts GetConnectionOptionIdpInitiatedArray and GetConnectionOptionIdpInitiatedArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionIdpInitiatedArrayInput` via:
//
//	GetConnectionOptionIdpInitiatedArray{ GetConnectionOptionIdpInitiatedArgs{...} }
type GetConnectionOptionIdpInitiatedArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionIdpInitiatedArrayOutput() GetConnectionOptionIdpInitiatedArrayOutput
	ToGetConnectionOptionIdpInitiatedArrayOutputWithContext(context.Context) GetConnectionOptionIdpInitiatedArrayOutput
}

type GetConnectionOptionIdpInitiatedArray []GetConnectionOptionIdpInitiatedInput

func (GetConnectionOptionIdpInitiatedArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionIdpInitiated)(nil)).Elem()
}

func (i GetConnectionOptionIdpInitiatedArray) ToGetConnectionOptionIdpInitiatedArrayOutput() GetConnectionOptionIdpInitiatedArrayOutput {
	return i.ToGetConnectionOptionIdpInitiatedArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionIdpInitiatedArray) ToGetConnectionOptionIdpInitiatedArrayOutputWithContext(ctx context.Context) GetConnectionOptionIdpInitiatedArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionIdpInitiatedArrayOutput)
}

func (i GetConnectionOptionIdpInitiatedArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionIdpInitiated] {
	return pulumix.Output[[]GetConnectionOptionIdpInitiated]{
		OutputState: i.ToGetConnectionOptionIdpInitiatedArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionIdpInitiatedOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionIdpInitiatedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionIdpInitiated)(nil)).Elem()
}

func (o GetConnectionOptionIdpInitiatedOutput) ToGetConnectionOptionIdpInitiatedOutput() GetConnectionOptionIdpInitiatedOutput {
	return o
}

func (o GetConnectionOptionIdpInitiatedOutput) ToGetConnectionOptionIdpInitiatedOutputWithContext(ctx context.Context) GetConnectionOptionIdpInitiatedOutput {
	return o
}

func (o GetConnectionOptionIdpInitiatedOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionIdpInitiated] {
	return pulumix.Output[GetConnectionOptionIdpInitiated]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionIdpInitiatedOutput) ClientAuthorizeQuery() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionIdpInitiated) string { return v.ClientAuthorizeQuery }).(pulumi.StringOutput)
}

func (o GetConnectionOptionIdpInitiatedOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionIdpInitiated) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetConnectionOptionIdpInitiatedOutput) ClientProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionIdpInitiated) string { return v.ClientProtocol }).(pulumi.StringOutput)
}

type GetConnectionOptionIdpInitiatedArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionIdpInitiatedArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionIdpInitiated)(nil)).Elem()
}

func (o GetConnectionOptionIdpInitiatedArrayOutput) ToGetConnectionOptionIdpInitiatedArrayOutput() GetConnectionOptionIdpInitiatedArrayOutput {
	return o
}

func (o GetConnectionOptionIdpInitiatedArrayOutput) ToGetConnectionOptionIdpInitiatedArrayOutputWithContext(ctx context.Context) GetConnectionOptionIdpInitiatedArrayOutput {
	return o
}

func (o GetConnectionOptionIdpInitiatedArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionIdpInitiated] {
	return pulumix.Output[[]GetConnectionOptionIdpInitiated]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionIdpInitiatedArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionIdpInitiatedOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionIdpInitiated {
		return vs[0].([]GetConnectionOptionIdpInitiated)[vs[1].(int)]
	}).(GetConnectionOptionIdpInitiatedOutput)
}

type GetConnectionOptionMfa struct {
	Active               bool `pulumi:"active"`
	ReturnEnrollSettings bool `pulumi:"returnEnrollSettings"`
}

// GetConnectionOptionMfaInput is an input type that accepts GetConnectionOptionMfaArgs and GetConnectionOptionMfaOutput values.
// You can construct a concrete instance of `GetConnectionOptionMfaInput` via:
//
//	GetConnectionOptionMfaArgs{...}
type GetConnectionOptionMfaInput interface {
	pulumi.Input

	ToGetConnectionOptionMfaOutput() GetConnectionOptionMfaOutput
	ToGetConnectionOptionMfaOutputWithContext(context.Context) GetConnectionOptionMfaOutput
}

type GetConnectionOptionMfaArgs struct {
	Active               pulumi.BoolInput `pulumi:"active"`
	ReturnEnrollSettings pulumi.BoolInput `pulumi:"returnEnrollSettings"`
}

func (GetConnectionOptionMfaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionMfa)(nil)).Elem()
}

func (i GetConnectionOptionMfaArgs) ToGetConnectionOptionMfaOutput() GetConnectionOptionMfaOutput {
	return i.ToGetConnectionOptionMfaOutputWithContext(context.Background())
}

func (i GetConnectionOptionMfaArgs) ToGetConnectionOptionMfaOutputWithContext(ctx context.Context) GetConnectionOptionMfaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionMfaOutput)
}

func (i GetConnectionOptionMfaArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionMfa] {
	return pulumix.Output[GetConnectionOptionMfa]{
		OutputState: i.ToGetConnectionOptionMfaOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionMfaArrayInput is an input type that accepts GetConnectionOptionMfaArray and GetConnectionOptionMfaArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionMfaArrayInput` via:
//
//	GetConnectionOptionMfaArray{ GetConnectionOptionMfaArgs{...} }
type GetConnectionOptionMfaArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionMfaArrayOutput() GetConnectionOptionMfaArrayOutput
	ToGetConnectionOptionMfaArrayOutputWithContext(context.Context) GetConnectionOptionMfaArrayOutput
}

type GetConnectionOptionMfaArray []GetConnectionOptionMfaInput

func (GetConnectionOptionMfaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionMfa)(nil)).Elem()
}

func (i GetConnectionOptionMfaArray) ToGetConnectionOptionMfaArrayOutput() GetConnectionOptionMfaArrayOutput {
	return i.ToGetConnectionOptionMfaArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionMfaArray) ToGetConnectionOptionMfaArrayOutputWithContext(ctx context.Context) GetConnectionOptionMfaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionMfaArrayOutput)
}

func (i GetConnectionOptionMfaArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionMfa] {
	return pulumix.Output[[]GetConnectionOptionMfa]{
		OutputState: i.ToGetConnectionOptionMfaArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionMfaOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionMfaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionMfa)(nil)).Elem()
}

func (o GetConnectionOptionMfaOutput) ToGetConnectionOptionMfaOutput() GetConnectionOptionMfaOutput {
	return o
}

func (o GetConnectionOptionMfaOutput) ToGetConnectionOptionMfaOutputWithContext(ctx context.Context) GetConnectionOptionMfaOutput {
	return o
}

func (o GetConnectionOptionMfaOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionMfa] {
	return pulumix.Output[GetConnectionOptionMfa]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionMfaOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOptionMfa) bool { return v.Active }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionMfaOutput) ReturnEnrollSettings() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOptionMfa) bool { return v.ReturnEnrollSettings }).(pulumi.BoolOutput)
}

type GetConnectionOptionMfaArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionMfaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionMfa)(nil)).Elem()
}

func (o GetConnectionOptionMfaArrayOutput) ToGetConnectionOptionMfaArrayOutput() GetConnectionOptionMfaArrayOutput {
	return o
}

func (o GetConnectionOptionMfaArrayOutput) ToGetConnectionOptionMfaArrayOutputWithContext(ctx context.Context) GetConnectionOptionMfaArrayOutput {
	return o
}

func (o GetConnectionOptionMfaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionMfa] {
	return pulumix.Output[[]GetConnectionOptionMfa]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionMfaArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionMfaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionMfa {
		return vs[0].([]GetConnectionOptionMfa)[vs[1].(int)]
	}).(GetConnectionOptionMfaOutput)
}

type GetConnectionOptionPasswordComplexityOption struct {
	MinLength int `pulumi:"minLength"`
}

// GetConnectionOptionPasswordComplexityOptionInput is an input type that accepts GetConnectionOptionPasswordComplexityOptionArgs and GetConnectionOptionPasswordComplexityOptionOutput values.
// You can construct a concrete instance of `GetConnectionOptionPasswordComplexityOptionInput` via:
//
//	GetConnectionOptionPasswordComplexityOptionArgs{...}
type GetConnectionOptionPasswordComplexityOptionInput interface {
	pulumi.Input

	ToGetConnectionOptionPasswordComplexityOptionOutput() GetConnectionOptionPasswordComplexityOptionOutput
	ToGetConnectionOptionPasswordComplexityOptionOutputWithContext(context.Context) GetConnectionOptionPasswordComplexityOptionOutput
}

type GetConnectionOptionPasswordComplexityOptionArgs struct {
	MinLength pulumi.IntInput `pulumi:"minLength"`
}

func (GetConnectionOptionPasswordComplexityOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionPasswordComplexityOption)(nil)).Elem()
}

func (i GetConnectionOptionPasswordComplexityOptionArgs) ToGetConnectionOptionPasswordComplexityOptionOutput() GetConnectionOptionPasswordComplexityOptionOutput {
	return i.ToGetConnectionOptionPasswordComplexityOptionOutputWithContext(context.Background())
}

func (i GetConnectionOptionPasswordComplexityOptionArgs) ToGetConnectionOptionPasswordComplexityOptionOutputWithContext(ctx context.Context) GetConnectionOptionPasswordComplexityOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionPasswordComplexityOptionOutput)
}

func (i GetConnectionOptionPasswordComplexityOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionPasswordComplexityOption] {
	return pulumix.Output[GetConnectionOptionPasswordComplexityOption]{
		OutputState: i.ToGetConnectionOptionPasswordComplexityOptionOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionPasswordComplexityOptionArrayInput is an input type that accepts GetConnectionOptionPasswordComplexityOptionArray and GetConnectionOptionPasswordComplexityOptionArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionPasswordComplexityOptionArrayInput` via:
//
//	GetConnectionOptionPasswordComplexityOptionArray{ GetConnectionOptionPasswordComplexityOptionArgs{...} }
type GetConnectionOptionPasswordComplexityOptionArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionPasswordComplexityOptionArrayOutput() GetConnectionOptionPasswordComplexityOptionArrayOutput
	ToGetConnectionOptionPasswordComplexityOptionArrayOutputWithContext(context.Context) GetConnectionOptionPasswordComplexityOptionArrayOutput
}

type GetConnectionOptionPasswordComplexityOptionArray []GetConnectionOptionPasswordComplexityOptionInput

func (GetConnectionOptionPasswordComplexityOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionPasswordComplexityOption)(nil)).Elem()
}

func (i GetConnectionOptionPasswordComplexityOptionArray) ToGetConnectionOptionPasswordComplexityOptionArrayOutput() GetConnectionOptionPasswordComplexityOptionArrayOutput {
	return i.ToGetConnectionOptionPasswordComplexityOptionArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionPasswordComplexityOptionArray) ToGetConnectionOptionPasswordComplexityOptionArrayOutputWithContext(ctx context.Context) GetConnectionOptionPasswordComplexityOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionPasswordComplexityOptionArrayOutput)
}

func (i GetConnectionOptionPasswordComplexityOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionPasswordComplexityOption] {
	return pulumix.Output[[]GetConnectionOptionPasswordComplexityOption]{
		OutputState: i.ToGetConnectionOptionPasswordComplexityOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionPasswordComplexityOptionOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionPasswordComplexityOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionPasswordComplexityOption)(nil)).Elem()
}

func (o GetConnectionOptionPasswordComplexityOptionOutput) ToGetConnectionOptionPasswordComplexityOptionOutput() GetConnectionOptionPasswordComplexityOptionOutput {
	return o
}

func (o GetConnectionOptionPasswordComplexityOptionOutput) ToGetConnectionOptionPasswordComplexityOptionOutputWithContext(ctx context.Context) GetConnectionOptionPasswordComplexityOptionOutput {
	return o
}

func (o GetConnectionOptionPasswordComplexityOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionPasswordComplexityOption] {
	return pulumix.Output[GetConnectionOptionPasswordComplexityOption]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionPasswordComplexityOptionOutput) MinLength() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionOptionPasswordComplexityOption) int { return v.MinLength }).(pulumi.IntOutput)
}

type GetConnectionOptionPasswordComplexityOptionArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionPasswordComplexityOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionPasswordComplexityOption)(nil)).Elem()
}

func (o GetConnectionOptionPasswordComplexityOptionArrayOutput) ToGetConnectionOptionPasswordComplexityOptionArrayOutput() GetConnectionOptionPasswordComplexityOptionArrayOutput {
	return o
}

func (o GetConnectionOptionPasswordComplexityOptionArrayOutput) ToGetConnectionOptionPasswordComplexityOptionArrayOutputWithContext(ctx context.Context) GetConnectionOptionPasswordComplexityOptionArrayOutput {
	return o
}

func (o GetConnectionOptionPasswordComplexityOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionPasswordComplexityOption] {
	return pulumix.Output[[]GetConnectionOptionPasswordComplexityOption]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionPasswordComplexityOptionArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionPasswordComplexityOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionPasswordComplexityOption {
		return vs[0].([]GetConnectionOptionPasswordComplexityOption)[vs[1].(int)]
	}).(GetConnectionOptionPasswordComplexityOptionOutput)
}

type GetConnectionOptionPasswordDictionary struct {
	Dictionaries []string `pulumi:"dictionaries"`
	Enable       bool     `pulumi:"enable"`
}

// GetConnectionOptionPasswordDictionaryInput is an input type that accepts GetConnectionOptionPasswordDictionaryArgs and GetConnectionOptionPasswordDictionaryOutput values.
// You can construct a concrete instance of `GetConnectionOptionPasswordDictionaryInput` via:
//
//	GetConnectionOptionPasswordDictionaryArgs{...}
type GetConnectionOptionPasswordDictionaryInput interface {
	pulumi.Input

	ToGetConnectionOptionPasswordDictionaryOutput() GetConnectionOptionPasswordDictionaryOutput
	ToGetConnectionOptionPasswordDictionaryOutputWithContext(context.Context) GetConnectionOptionPasswordDictionaryOutput
}

type GetConnectionOptionPasswordDictionaryArgs struct {
	Dictionaries pulumi.StringArrayInput `pulumi:"dictionaries"`
	Enable       pulumi.BoolInput        `pulumi:"enable"`
}

func (GetConnectionOptionPasswordDictionaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionPasswordDictionary)(nil)).Elem()
}

func (i GetConnectionOptionPasswordDictionaryArgs) ToGetConnectionOptionPasswordDictionaryOutput() GetConnectionOptionPasswordDictionaryOutput {
	return i.ToGetConnectionOptionPasswordDictionaryOutputWithContext(context.Background())
}

func (i GetConnectionOptionPasswordDictionaryArgs) ToGetConnectionOptionPasswordDictionaryOutputWithContext(ctx context.Context) GetConnectionOptionPasswordDictionaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionPasswordDictionaryOutput)
}

func (i GetConnectionOptionPasswordDictionaryArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionPasswordDictionary] {
	return pulumix.Output[GetConnectionOptionPasswordDictionary]{
		OutputState: i.ToGetConnectionOptionPasswordDictionaryOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionPasswordDictionaryArrayInput is an input type that accepts GetConnectionOptionPasswordDictionaryArray and GetConnectionOptionPasswordDictionaryArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionPasswordDictionaryArrayInput` via:
//
//	GetConnectionOptionPasswordDictionaryArray{ GetConnectionOptionPasswordDictionaryArgs{...} }
type GetConnectionOptionPasswordDictionaryArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionPasswordDictionaryArrayOutput() GetConnectionOptionPasswordDictionaryArrayOutput
	ToGetConnectionOptionPasswordDictionaryArrayOutputWithContext(context.Context) GetConnectionOptionPasswordDictionaryArrayOutput
}

type GetConnectionOptionPasswordDictionaryArray []GetConnectionOptionPasswordDictionaryInput

func (GetConnectionOptionPasswordDictionaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionPasswordDictionary)(nil)).Elem()
}

func (i GetConnectionOptionPasswordDictionaryArray) ToGetConnectionOptionPasswordDictionaryArrayOutput() GetConnectionOptionPasswordDictionaryArrayOutput {
	return i.ToGetConnectionOptionPasswordDictionaryArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionPasswordDictionaryArray) ToGetConnectionOptionPasswordDictionaryArrayOutputWithContext(ctx context.Context) GetConnectionOptionPasswordDictionaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionPasswordDictionaryArrayOutput)
}

func (i GetConnectionOptionPasswordDictionaryArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionPasswordDictionary] {
	return pulumix.Output[[]GetConnectionOptionPasswordDictionary]{
		OutputState: i.ToGetConnectionOptionPasswordDictionaryArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionPasswordDictionaryOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionPasswordDictionaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionPasswordDictionary)(nil)).Elem()
}

func (o GetConnectionOptionPasswordDictionaryOutput) ToGetConnectionOptionPasswordDictionaryOutput() GetConnectionOptionPasswordDictionaryOutput {
	return o
}

func (o GetConnectionOptionPasswordDictionaryOutput) ToGetConnectionOptionPasswordDictionaryOutputWithContext(ctx context.Context) GetConnectionOptionPasswordDictionaryOutput {
	return o
}

func (o GetConnectionOptionPasswordDictionaryOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionPasswordDictionary] {
	return pulumix.Output[GetConnectionOptionPasswordDictionary]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionPasswordDictionaryOutput) Dictionaries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectionOptionPasswordDictionary) []string { return v.Dictionaries }).(pulumi.StringArrayOutput)
}

func (o GetConnectionOptionPasswordDictionaryOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOptionPasswordDictionary) bool { return v.Enable }).(pulumi.BoolOutput)
}

type GetConnectionOptionPasswordDictionaryArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionPasswordDictionaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionPasswordDictionary)(nil)).Elem()
}

func (o GetConnectionOptionPasswordDictionaryArrayOutput) ToGetConnectionOptionPasswordDictionaryArrayOutput() GetConnectionOptionPasswordDictionaryArrayOutput {
	return o
}

func (o GetConnectionOptionPasswordDictionaryArrayOutput) ToGetConnectionOptionPasswordDictionaryArrayOutputWithContext(ctx context.Context) GetConnectionOptionPasswordDictionaryArrayOutput {
	return o
}

func (o GetConnectionOptionPasswordDictionaryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionPasswordDictionary] {
	return pulumix.Output[[]GetConnectionOptionPasswordDictionary]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionPasswordDictionaryArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionPasswordDictionaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionPasswordDictionary {
		return vs[0].([]GetConnectionOptionPasswordDictionary)[vs[1].(int)]
	}).(GetConnectionOptionPasswordDictionaryOutput)
}

type GetConnectionOptionPasswordHistory struct {
	Enable bool `pulumi:"enable"`
	Size   int  `pulumi:"size"`
}

// GetConnectionOptionPasswordHistoryInput is an input type that accepts GetConnectionOptionPasswordHistoryArgs and GetConnectionOptionPasswordHistoryOutput values.
// You can construct a concrete instance of `GetConnectionOptionPasswordHistoryInput` via:
//
//	GetConnectionOptionPasswordHistoryArgs{...}
type GetConnectionOptionPasswordHistoryInput interface {
	pulumi.Input

	ToGetConnectionOptionPasswordHistoryOutput() GetConnectionOptionPasswordHistoryOutput
	ToGetConnectionOptionPasswordHistoryOutputWithContext(context.Context) GetConnectionOptionPasswordHistoryOutput
}

type GetConnectionOptionPasswordHistoryArgs struct {
	Enable pulumi.BoolInput `pulumi:"enable"`
	Size   pulumi.IntInput  `pulumi:"size"`
}

func (GetConnectionOptionPasswordHistoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionPasswordHistory)(nil)).Elem()
}

func (i GetConnectionOptionPasswordHistoryArgs) ToGetConnectionOptionPasswordHistoryOutput() GetConnectionOptionPasswordHistoryOutput {
	return i.ToGetConnectionOptionPasswordHistoryOutputWithContext(context.Background())
}

func (i GetConnectionOptionPasswordHistoryArgs) ToGetConnectionOptionPasswordHistoryOutputWithContext(ctx context.Context) GetConnectionOptionPasswordHistoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionPasswordHistoryOutput)
}

func (i GetConnectionOptionPasswordHistoryArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionPasswordHistory] {
	return pulumix.Output[GetConnectionOptionPasswordHistory]{
		OutputState: i.ToGetConnectionOptionPasswordHistoryOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionPasswordHistoryArrayInput is an input type that accepts GetConnectionOptionPasswordHistoryArray and GetConnectionOptionPasswordHistoryArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionPasswordHistoryArrayInput` via:
//
//	GetConnectionOptionPasswordHistoryArray{ GetConnectionOptionPasswordHistoryArgs{...} }
type GetConnectionOptionPasswordHistoryArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionPasswordHistoryArrayOutput() GetConnectionOptionPasswordHistoryArrayOutput
	ToGetConnectionOptionPasswordHistoryArrayOutputWithContext(context.Context) GetConnectionOptionPasswordHistoryArrayOutput
}

type GetConnectionOptionPasswordHistoryArray []GetConnectionOptionPasswordHistoryInput

func (GetConnectionOptionPasswordHistoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionPasswordHistory)(nil)).Elem()
}

func (i GetConnectionOptionPasswordHistoryArray) ToGetConnectionOptionPasswordHistoryArrayOutput() GetConnectionOptionPasswordHistoryArrayOutput {
	return i.ToGetConnectionOptionPasswordHistoryArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionPasswordHistoryArray) ToGetConnectionOptionPasswordHistoryArrayOutputWithContext(ctx context.Context) GetConnectionOptionPasswordHistoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionPasswordHistoryArrayOutput)
}

func (i GetConnectionOptionPasswordHistoryArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionPasswordHistory] {
	return pulumix.Output[[]GetConnectionOptionPasswordHistory]{
		OutputState: i.ToGetConnectionOptionPasswordHistoryArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionPasswordHistoryOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionPasswordHistoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionPasswordHistory)(nil)).Elem()
}

func (o GetConnectionOptionPasswordHistoryOutput) ToGetConnectionOptionPasswordHistoryOutput() GetConnectionOptionPasswordHistoryOutput {
	return o
}

func (o GetConnectionOptionPasswordHistoryOutput) ToGetConnectionOptionPasswordHistoryOutputWithContext(ctx context.Context) GetConnectionOptionPasswordHistoryOutput {
	return o
}

func (o GetConnectionOptionPasswordHistoryOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionPasswordHistory] {
	return pulumix.Output[GetConnectionOptionPasswordHistory]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionPasswordHistoryOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOptionPasswordHistory) bool { return v.Enable }).(pulumi.BoolOutput)
}

func (o GetConnectionOptionPasswordHistoryOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionOptionPasswordHistory) int { return v.Size }).(pulumi.IntOutput)
}

type GetConnectionOptionPasswordHistoryArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionPasswordHistoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionPasswordHistory)(nil)).Elem()
}

func (o GetConnectionOptionPasswordHistoryArrayOutput) ToGetConnectionOptionPasswordHistoryArrayOutput() GetConnectionOptionPasswordHistoryArrayOutput {
	return o
}

func (o GetConnectionOptionPasswordHistoryArrayOutput) ToGetConnectionOptionPasswordHistoryArrayOutputWithContext(ctx context.Context) GetConnectionOptionPasswordHistoryArrayOutput {
	return o
}

func (o GetConnectionOptionPasswordHistoryArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionPasswordHistory] {
	return pulumix.Output[[]GetConnectionOptionPasswordHistory]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionPasswordHistoryArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionPasswordHistoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionPasswordHistory {
		return vs[0].([]GetConnectionOptionPasswordHistory)[vs[1].(int)]
	}).(GetConnectionOptionPasswordHistoryOutput)
}

type GetConnectionOptionPasswordNoPersonalInfo struct {
	Enable bool `pulumi:"enable"`
}

// GetConnectionOptionPasswordNoPersonalInfoInput is an input type that accepts GetConnectionOptionPasswordNoPersonalInfoArgs and GetConnectionOptionPasswordNoPersonalInfoOutput values.
// You can construct a concrete instance of `GetConnectionOptionPasswordNoPersonalInfoInput` via:
//
//	GetConnectionOptionPasswordNoPersonalInfoArgs{...}
type GetConnectionOptionPasswordNoPersonalInfoInput interface {
	pulumi.Input

	ToGetConnectionOptionPasswordNoPersonalInfoOutput() GetConnectionOptionPasswordNoPersonalInfoOutput
	ToGetConnectionOptionPasswordNoPersonalInfoOutputWithContext(context.Context) GetConnectionOptionPasswordNoPersonalInfoOutput
}

type GetConnectionOptionPasswordNoPersonalInfoArgs struct {
	Enable pulumi.BoolInput `pulumi:"enable"`
}

func (GetConnectionOptionPasswordNoPersonalInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionPasswordNoPersonalInfo)(nil)).Elem()
}

func (i GetConnectionOptionPasswordNoPersonalInfoArgs) ToGetConnectionOptionPasswordNoPersonalInfoOutput() GetConnectionOptionPasswordNoPersonalInfoOutput {
	return i.ToGetConnectionOptionPasswordNoPersonalInfoOutputWithContext(context.Background())
}

func (i GetConnectionOptionPasswordNoPersonalInfoArgs) ToGetConnectionOptionPasswordNoPersonalInfoOutputWithContext(ctx context.Context) GetConnectionOptionPasswordNoPersonalInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionPasswordNoPersonalInfoOutput)
}

func (i GetConnectionOptionPasswordNoPersonalInfoArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionPasswordNoPersonalInfo] {
	return pulumix.Output[GetConnectionOptionPasswordNoPersonalInfo]{
		OutputState: i.ToGetConnectionOptionPasswordNoPersonalInfoOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionPasswordNoPersonalInfoArrayInput is an input type that accepts GetConnectionOptionPasswordNoPersonalInfoArray and GetConnectionOptionPasswordNoPersonalInfoArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionPasswordNoPersonalInfoArrayInput` via:
//
//	GetConnectionOptionPasswordNoPersonalInfoArray{ GetConnectionOptionPasswordNoPersonalInfoArgs{...} }
type GetConnectionOptionPasswordNoPersonalInfoArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionPasswordNoPersonalInfoArrayOutput() GetConnectionOptionPasswordNoPersonalInfoArrayOutput
	ToGetConnectionOptionPasswordNoPersonalInfoArrayOutputWithContext(context.Context) GetConnectionOptionPasswordNoPersonalInfoArrayOutput
}

type GetConnectionOptionPasswordNoPersonalInfoArray []GetConnectionOptionPasswordNoPersonalInfoInput

func (GetConnectionOptionPasswordNoPersonalInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionPasswordNoPersonalInfo)(nil)).Elem()
}

func (i GetConnectionOptionPasswordNoPersonalInfoArray) ToGetConnectionOptionPasswordNoPersonalInfoArrayOutput() GetConnectionOptionPasswordNoPersonalInfoArrayOutput {
	return i.ToGetConnectionOptionPasswordNoPersonalInfoArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionPasswordNoPersonalInfoArray) ToGetConnectionOptionPasswordNoPersonalInfoArrayOutputWithContext(ctx context.Context) GetConnectionOptionPasswordNoPersonalInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionPasswordNoPersonalInfoArrayOutput)
}

func (i GetConnectionOptionPasswordNoPersonalInfoArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionPasswordNoPersonalInfo] {
	return pulumix.Output[[]GetConnectionOptionPasswordNoPersonalInfo]{
		OutputState: i.ToGetConnectionOptionPasswordNoPersonalInfoArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionPasswordNoPersonalInfoOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionPasswordNoPersonalInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionPasswordNoPersonalInfo)(nil)).Elem()
}

func (o GetConnectionOptionPasswordNoPersonalInfoOutput) ToGetConnectionOptionPasswordNoPersonalInfoOutput() GetConnectionOptionPasswordNoPersonalInfoOutput {
	return o
}

func (o GetConnectionOptionPasswordNoPersonalInfoOutput) ToGetConnectionOptionPasswordNoPersonalInfoOutputWithContext(ctx context.Context) GetConnectionOptionPasswordNoPersonalInfoOutput {
	return o
}

func (o GetConnectionOptionPasswordNoPersonalInfoOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionPasswordNoPersonalInfo] {
	return pulumix.Output[GetConnectionOptionPasswordNoPersonalInfo]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionPasswordNoPersonalInfoOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetConnectionOptionPasswordNoPersonalInfo) bool { return v.Enable }).(pulumi.BoolOutput)
}

type GetConnectionOptionPasswordNoPersonalInfoArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionPasswordNoPersonalInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionPasswordNoPersonalInfo)(nil)).Elem()
}

func (o GetConnectionOptionPasswordNoPersonalInfoArrayOutput) ToGetConnectionOptionPasswordNoPersonalInfoArrayOutput() GetConnectionOptionPasswordNoPersonalInfoArrayOutput {
	return o
}

func (o GetConnectionOptionPasswordNoPersonalInfoArrayOutput) ToGetConnectionOptionPasswordNoPersonalInfoArrayOutputWithContext(ctx context.Context) GetConnectionOptionPasswordNoPersonalInfoArrayOutput {
	return o
}

func (o GetConnectionOptionPasswordNoPersonalInfoArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionPasswordNoPersonalInfo] {
	return pulumix.Output[[]GetConnectionOptionPasswordNoPersonalInfo]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionPasswordNoPersonalInfoArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionPasswordNoPersonalInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionPasswordNoPersonalInfo {
		return vs[0].([]GetConnectionOptionPasswordNoPersonalInfo)[vs[1].(int)]
	}).(GetConnectionOptionPasswordNoPersonalInfoOutput)
}

type GetConnectionOptionSigningKey struct {
	Cert string `pulumi:"cert"`
	Key  string `pulumi:"key"`
}

// GetConnectionOptionSigningKeyInput is an input type that accepts GetConnectionOptionSigningKeyArgs and GetConnectionOptionSigningKeyOutput values.
// You can construct a concrete instance of `GetConnectionOptionSigningKeyInput` via:
//
//	GetConnectionOptionSigningKeyArgs{...}
type GetConnectionOptionSigningKeyInput interface {
	pulumi.Input

	ToGetConnectionOptionSigningKeyOutput() GetConnectionOptionSigningKeyOutput
	ToGetConnectionOptionSigningKeyOutputWithContext(context.Context) GetConnectionOptionSigningKeyOutput
}

type GetConnectionOptionSigningKeyArgs struct {
	Cert pulumi.StringInput `pulumi:"cert"`
	Key  pulumi.StringInput `pulumi:"key"`
}

func (GetConnectionOptionSigningKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionSigningKey)(nil)).Elem()
}

func (i GetConnectionOptionSigningKeyArgs) ToGetConnectionOptionSigningKeyOutput() GetConnectionOptionSigningKeyOutput {
	return i.ToGetConnectionOptionSigningKeyOutputWithContext(context.Background())
}

func (i GetConnectionOptionSigningKeyArgs) ToGetConnectionOptionSigningKeyOutputWithContext(ctx context.Context) GetConnectionOptionSigningKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionSigningKeyOutput)
}

func (i GetConnectionOptionSigningKeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionSigningKey] {
	return pulumix.Output[GetConnectionOptionSigningKey]{
		OutputState: i.ToGetConnectionOptionSigningKeyOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionSigningKeyArrayInput is an input type that accepts GetConnectionOptionSigningKeyArray and GetConnectionOptionSigningKeyArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionSigningKeyArrayInput` via:
//
//	GetConnectionOptionSigningKeyArray{ GetConnectionOptionSigningKeyArgs{...} }
type GetConnectionOptionSigningKeyArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionSigningKeyArrayOutput() GetConnectionOptionSigningKeyArrayOutput
	ToGetConnectionOptionSigningKeyArrayOutputWithContext(context.Context) GetConnectionOptionSigningKeyArrayOutput
}

type GetConnectionOptionSigningKeyArray []GetConnectionOptionSigningKeyInput

func (GetConnectionOptionSigningKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionSigningKey)(nil)).Elem()
}

func (i GetConnectionOptionSigningKeyArray) ToGetConnectionOptionSigningKeyArrayOutput() GetConnectionOptionSigningKeyArrayOutput {
	return i.ToGetConnectionOptionSigningKeyArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionSigningKeyArray) ToGetConnectionOptionSigningKeyArrayOutputWithContext(ctx context.Context) GetConnectionOptionSigningKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionSigningKeyArrayOutput)
}

func (i GetConnectionOptionSigningKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionSigningKey] {
	return pulumix.Output[[]GetConnectionOptionSigningKey]{
		OutputState: i.ToGetConnectionOptionSigningKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionSigningKeyOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionSigningKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionSigningKey)(nil)).Elem()
}

func (o GetConnectionOptionSigningKeyOutput) ToGetConnectionOptionSigningKeyOutput() GetConnectionOptionSigningKeyOutput {
	return o
}

func (o GetConnectionOptionSigningKeyOutput) ToGetConnectionOptionSigningKeyOutputWithContext(ctx context.Context) GetConnectionOptionSigningKeyOutput {
	return o
}

func (o GetConnectionOptionSigningKeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionSigningKey] {
	return pulumix.Output[GetConnectionOptionSigningKey]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionSigningKeyOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionSigningKey) string { return v.Cert }).(pulumi.StringOutput)
}

func (o GetConnectionOptionSigningKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionOptionSigningKey) string { return v.Key }).(pulumi.StringOutput)
}

type GetConnectionOptionSigningKeyArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionSigningKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionSigningKey)(nil)).Elem()
}

func (o GetConnectionOptionSigningKeyArrayOutput) ToGetConnectionOptionSigningKeyArrayOutput() GetConnectionOptionSigningKeyArrayOutput {
	return o
}

func (o GetConnectionOptionSigningKeyArrayOutput) ToGetConnectionOptionSigningKeyArrayOutputWithContext(ctx context.Context) GetConnectionOptionSigningKeyArrayOutput {
	return o
}

func (o GetConnectionOptionSigningKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionSigningKey] {
	return pulumix.Output[[]GetConnectionOptionSigningKey]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionSigningKeyArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionSigningKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionSigningKey {
		return vs[0].([]GetConnectionOptionSigningKey)[vs[1].(int)]
	}).(GetConnectionOptionSigningKeyOutput)
}

type GetConnectionOptionTotp struct {
	Length   int `pulumi:"length"`
	TimeStep int `pulumi:"timeStep"`
}

// GetConnectionOptionTotpInput is an input type that accepts GetConnectionOptionTotpArgs and GetConnectionOptionTotpOutput values.
// You can construct a concrete instance of `GetConnectionOptionTotpInput` via:
//
//	GetConnectionOptionTotpArgs{...}
type GetConnectionOptionTotpInput interface {
	pulumi.Input

	ToGetConnectionOptionTotpOutput() GetConnectionOptionTotpOutput
	ToGetConnectionOptionTotpOutputWithContext(context.Context) GetConnectionOptionTotpOutput
}

type GetConnectionOptionTotpArgs struct {
	Length   pulumi.IntInput `pulumi:"length"`
	TimeStep pulumi.IntInput `pulumi:"timeStep"`
}

func (GetConnectionOptionTotpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionTotp)(nil)).Elem()
}

func (i GetConnectionOptionTotpArgs) ToGetConnectionOptionTotpOutput() GetConnectionOptionTotpOutput {
	return i.ToGetConnectionOptionTotpOutputWithContext(context.Background())
}

func (i GetConnectionOptionTotpArgs) ToGetConnectionOptionTotpOutputWithContext(ctx context.Context) GetConnectionOptionTotpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionTotpOutput)
}

func (i GetConnectionOptionTotpArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionTotp] {
	return pulumix.Output[GetConnectionOptionTotp]{
		OutputState: i.ToGetConnectionOptionTotpOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionTotpArrayInput is an input type that accepts GetConnectionOptionTotpArray and GetConnectionOptionTotpArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionTotpArrayInput` via:
//
//	GetConnectionOptionTotpArray{ GetConnectionOptionTotpArgs{...} }
type GetConnectionOptionTotpArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionTotpArrayOutput() GetConnectionOptionTotpArrayOutput
	ToGetConnectionOptionTotpArrayOutputWithContext(context.Context) GetConnectionOptionTotpArrayOutput
}

type GetConnectionOptionTotpArray []GetConnectionOptionTotpInput

func (GetConnectionOptionTotpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionTotp)(nil)).Elem()
}

func (i GetConnectionOptionTotpArray) ToGetConnectionOptionTotpArrayOutput() GetConnectionOptionTotpArrayOutput {
	return i.ToGetConnectionOptionTotpArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionTotpArray) ToGetConnectionOptionTotpArrayOutputWithContext(ctx context.Context) GetConnectionOptionTotpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionTotpArrayOutput)
}

func (i GetConnectionOptionTotpArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionTotp] {
	return pulumix.Output[[]GetConnectionOptionTotp]{
		OutputState: i.ToGetConnectionOptionTotpArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionTotpOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionTotpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionTotp)(nil)).Elem()
}

func (o GetConnectionOptionTotpOutput) ToGetConnectionOptionTotpOutput() GetConnectionOptionTotpOutput {
	return o
}

func (o GetConnectionOptionTotpOutput) ToGetConnectionOptionTotpOutputWithContext(ctx context.Context) GetConnectionOptionTotpOutput {
	return o
}

func (o GetConnectionOptionTotpOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionTotp] {
	return pulumix.Output[GetConnectionOptionTotp]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionTotpOutput) Length() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionOptionTotp) int { return v.Length }).(pulumi.IntOutput)
}

func (o GetConnectionOptionTotpOutput) TimeStep() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionOptionTotp) int { return v.TimeStep }).(pulumi.IntOutput)
}

type GetConnectionOptionTotpArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionTotpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionTotp)(nil)).Elem()
}

func (o GetConnectionOptionTotpArrayOutput) ToGetConnectionOptionTotpArrayOutput() GetConnectionOptionTotpArrayOutput {
	return o
}

func (o GetConnectionOptionTotpArrayOutput) ToGetConnectionOptionTotpArrayOutputWithContext(ctx context.Context) GetConnectionOptionTotpArrayOutput {
	return o
}

func (o GetConnectionOptionTotpArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionTotp] {
	return pulumix.Output[[]GetConnectionOptionTotp]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionTotpArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionTotpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionTotp {
		return vs[0].([]GetConnectionOptionTotp)[vs[1].(int)]
	}).(GetConnectionOptionTotpOutput)
}

type GetConnectionOptionValidation struct {
	Usernames []GetConnectionOptionValidationUsername `pulumi:"usernames"`
}

// GetConnectionOptionValidationInput is an input type that accepts GetConnectionOptionValidationArgs and GetConnectionOptionValidationOutput values.
// You can construct a concrete instance of `GetConnectionOptionValidationInput` via:
//
//	GetConnectionOptionValidationArgs{...}
type GetConnectionOptionValidationInput interface {
	pulumi.Input

	ToGetConnectionOptionValidationOutput() GetConnectionOptionValidationOutput
	ToGetConnectionOptionValidationOutputWithContext(context.Context) GetConnectionOptionValidationOutput
}

type GetConnectionOptionValidationArgs struct {
	Usernames GetConnectionOptionValidationUsernameArrayInput `pulumi:"usernames"`
}

func (GetConnectionOptionValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionValidation)(nil)).Elem()
}

func (i GetConnectionOptionValidationArgs) ToGetConnectionOptionValidationOutput() GetConnectionOptionValidationOutput {
	return i.ToGetConnectionOptionValidationOutputWithContext(context.Background())
}

func (i GetConnectionOptionValidationArgs) ToGetConnectionOptionValidationOutputWithContext(ctx context.Context) GetConnectionOptionValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionValidationOutput)
}

func (i GetConnectionOptionValidationArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionValidation] {
	return pulumix.Output[GetConnectionOptionValidation]{
		OutputState: i.ToGetConnectionOptionValidationOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionValidationArrayInput is an input type that accepts GetConnectionOptionValidationArray and GetConnectionOptionValidationArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionValidationArrayInput` via:
//
//	GetConnectionOptionValidationArray{ GetConnectionOptionValidationArgs{...} }
type GetConnectionOptionValidationArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionValidationArrayOutput() GetConnectionOptionValidationArrayOutput
	ToGetConnectionOptionValidationArrayOutputWithContext(context.Context) GetConnectionOptionValidationArrayOutput
}

type GetConnectionOptionValidationArray []GetConnectionOptionValidationInput

func (GetConnectionOptionValidationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionValidation)(nil)).Elem()
}

func (i GetConnectionOptionValidationArray) ToGetConnectionOptionValidationArrayOutput() GetConnectionOptionValidationArrayOutput {
	return i.ToGetConnectionOptionValidationArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionValidationArray) ToGetConnectionOptionValidationArrayOutputWithContext(ctx context.Context) GetConnectionOptionValidationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionValidationArrayOutput)
}

func (i GetConnectionOptionValidationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionValidation] {
	return pulumix.Output[[]GetConnectionOptionValidation]{
		OutputState: i.ToGetConnectionOptionValidationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionValidationOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionValidation)(nil)).Elem()
}

func (o GetConnectionOptionValidationOutput) ToGetConnectionOptionValidationOutput() GetConnectionOptionValidationOutput {
	return o
}

func (o GetConnectionOptionValidationOutput) ToGetConnectionOptionValidationOutputWithContext(ctx context.Context) GetConnectionOptionValidationOutput {
	return o
}

func (o GetConnectionOptionValidationOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionValidation] {
	return pulumix.Output[GetConnectionOptionValidation]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionValidationOutput) Usernames() GetConnectionOptionValidationUsernameArrayOutput {
	return o.ApplyT(func(v GetConnectionOptionValidation) []GetConnectionOptionValidationUsername { return v.Usernames }).(GetConnectionOptionValidationUsernameArrayOutput)
}

type GetConnectionOptionValidationArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionValidationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionValidation)(nil)).Elem()
}

func (o GetConnectionOptionValidationArrayOutput) ToGetConnectionOptionValidationArrayOutput() GetConnectionOptionValidationArrayOutput {
	return o
}

func (o GetConnectionOptionValidationArrayOutput) ToGetConnectionOptionValidationArrayOutputWithContext(ctx context.Context) GetConnectionOptionValidationArrayOutput {
	return o
}

func (o GetConnectionOptionValidationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionValidation] {
	return pulumix.Output[[]GetConnectionOptionValidation]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionValidationArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionValidationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionValidation {
		return vs[0].([]GetConnectionOptionValidation)[vs[1].(int)]
	}).(GetConnectionOptionValidationOutput)
}

type GetConnectionOptionValidationUsername struct {
	Max int `pulumi:"max"`
	Min int `pulumi:"min"`
}

// GetConnectionOptionValidationUsernameInput is an input type that accepts GetConnectionOptionValidationUsernameArgs and GetConnectionOptionValidationUsernameOutput values.
// You can construct a concrete instance of `GetConnectionOptionValidationUsernameInput` via:
//
//	GetConnectionOptionValidationUsernameArgs{...}
type GetConnectionOptionValidationUsernameInput interface {
	pulumi.Input

	ToGetConnectionOptionValidationUsernameOutput() GetConnectionOptionValidationUsernameOutput
	ToGetConnectionOptionValidationUsernameOutputWithContext(context.Context) GetConnectionOptionValidationUsernameOutput
}

type GetConnectionOptionValidationUsernameArgs struct {
	Max pulumi.IntInput `pulumi:"max"`
	Min pulumi.IntInput `pulumi:"min"`
}

func (GetConnectionOptionValidationUsernameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionValidationUsername)(nil)).Elem()
}

func (i GetConnectionOptionValidationUsernameArgs) ToGetConnectionOptionValidationUsernameOutput() GetConnectionOptionValidationUsernameOutput {
	return i.ToGetConnectionOptionValidationUsernameOutputWithContext(context.Background())
}

func (i GetConnectionOptionValidationUsernameArgs) ToGetConnectionOptionValidationUsernameOutputWithContext(ctx context.Context) GetConnectionOptionValidationUsernameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionValidationUsernameOutput)
}

func (i GetConnectionOptionValidationUsernameArgs) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionValidationUsername] {
	return pulumix.Output[GetConnectionOptionValidationUsername]{
		OutputState: i.ToGetConnectionOptionValidationUsernameOutputWithContext(ctx).OutputState,
	}
}

// GetConnectionOptionValidationUsernameArrayInput is an input type that accepts GetConnectionOptionValidationUsernameArray and GetConnectionOptionValidationUsernameArrayOutput values.
// You can construct a concrete instance of `GetConnectionOptionValidationUsernameArrayInput` via:
//
//	GetConnectionOptionValidationUsernameArray{ GetConnectionOptionValidationUsernameArgs{...} }
type GetConnectionOptionValidationUsernameArrayInput interface {
	pulumi.Input

	ToGetConnectionOptionValidationUsernameArrayOutput() GetConnectionOptionValidationUsernameArrayOutput
	ToGetConnectionOptionValidationUsernameArrayOutputWithContext(context.Context) GetConnectionOptionValidationUsernameArrayOutput
}

type GetConnectionOptionValidationUsernameArray []GetConnectionOptionValidationUsernameInput

func (GetConnectionOptionValidationUsernameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionValidationUsername)(nil)).Elem()
}

func (i GetConnectionOptionValidationUsernameArray) ToGetConnectionOptionValidationUsernameArrayOutput() GetConnectionOptionValidationUsernameArrayOutput {
	return i.ToGetConnectionOptionValidationUsernameArrayOutputWithContext(context.Background())
}

func (i GetConnectionOptionValidationUsernameArray) ToGetConnectionOptionValidationUsernameArrayOutputWithContext(ctx context.Context) GetConnectionOptionValidationUsernameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionOptionValidationUsernameArrayOutput)
}

func (i GetConnectionOptionValidationUsernameArray) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionValidationUsername] {
	return pulumix.Output[[]GetConnectionOptionValidationUsername]{
		OutputState: i.ToGetConnectionOptionValidationUsernameArrayOutputWithContext(ctx).OutputState,
	}
}

type GetConnectionOptionValidationUsernameOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionValidationUsernameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionOptionValidationUsername)(nil)).Elem()
}

func (o GetConnectionOptionValidationUsernameOutput) ToGetConnectionOptionValidationUsernameOutput() GetConnectionOptionValidationUsernameOutput {
	return o
}

func (o GetConnectionOptionValidationUsernameOutput) ToGetConnectionOptionValidationUsernameOutputWithContext(ctx context.Context) GetConnectionOptionValidationUsernameOutput {
	return o
}

func (o GetConnectionOptionValidationUsernameOutput) ToOutput(ctx context.Context) pulumix.Output[GetConnectionOptionValidationUsername] {
	return pulumix.Output[GetConnectionOptionValidationUsername]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionValidationUsernameOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionOptionValidationUsername) int { return v.Max }).(pulumi.IntOutput)
}

func (o GetConnectionOptionValidationUsernameOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionOptionValidationUsername) int { return v.Min }).(pulumi.IntOutput)
}

type GetConnectionOptionValidationUsernameArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionOptionValidationUsernameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionOptionValidationUsername)(nil)).Elem()
}

func (o GetConnectionOptionValidationUsernameArrayOutput) ToGetConnectionOptionValidationUsernameArrayOutput() GetConnectionOptionValidationUsernameArrayOutput {
	return o
}

func (o GetConnectionOptionValidationUsernameArrayOutput) ToGetConnectionOptionValidationUsernameArrayOutputWithContext(ctx context.Context) GetConnectionOptionValidationUsernameArrayOutput {
	return o
}

func (o GetConnectionOptionValidationUsernameArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetConnectionOptionValidationUsername] {
	return pulumix.Output[[]GetConnectionOptionValidationUsername]{
		OutputState: o.OutputState,
	}
}

func (o GetConnectionOptionValidationUsernameArrayOutput) Index(i pulumi.IntInput) GetConnectionOptionValidationUsernameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionOptionValidationUsername {
		return vs[0].([]GetConnectionOptionValidationUsername)[vs[1].(int)]
	}).(GetConnectionOptionValidationUsernameOutput)
}

type GetCustomDomainVerificationType struct {
	Methods []interface{} `pulumi:"methods"`
}

// GetCustomDomainVerificationTypeInput is an input type that accepts GetCustomDomainVerificationTypeArgs and GetCustomDomainVerificationTypeOutput values.
// You can construct a concrete instance of `GetCustomDomainVerificationTypeInput` via:
//
//	GetCustomDomainVerificationTypeArgs{...}
type GetCustomDomainVerificationTypeInput interface {
	pulumi.Input

	ToGetCustomDomainVerificationTypeOutput() GetCustomDomainVerificationTypeOutput
	ToGetCustomDomainVerificationTypeOutputWithContext(context.Context) GetCustomDomainVerificationTypeOutput
}

type GetCustomDomainVerificationTypeArgs struct {
	Methods pulumi.ArrayInput `pulumi:"methods"`
}

func (GetCustomDomainVerificationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDomainVerificationType)(nil)).Elem()
}

func (i GetCustomDomainVerificationTypeArgs) ToGetCustomDomainVerificationTypeOutput() GetCustomDomainVerificationTypeOutput {
	return i.ToGetCustomDomainVerificationTypeOutputWithContext(context.Background())
}

func (i GetCustomDomainVerificationTypeArgs) ToGetCustomDomainVerificationTypeOutputWithContext(ctx context.Context) GetCustomDomainVerificationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDomainVerificationTypeOutput)
}

func (i GetCustomDomainVerificationTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetCustomDomainVerificationType] {
	return pulumix.Output[GetCustomDomainVerificationType]{
		OutputState: i.ToGetCustomDomainVerificationTypeOutputWithContext(ctx).OutputState,
	}
}

// GetCustomDomainVerificationTypeArrayInput is an input type that accepts GetCustomDomainVerificationTypeArray and GetCustomDomainVerificationTypeArrayOutput values.
// You can construct a concrete instance of `GetCustomDomainVerificationTypeArrayInput` via:
//
//	GetCustomDomainVerificationTypeArray{ GetCustomDomainVerificationTypeArgs{...} }
type GetCustomDomainVerificationTypeArrayInput interface {
	pulumi.Input

	ToGetCustomDomainVerificationTypeArrayOutput() GetCustomDomainVerificationTypeArrayOutput
	ToGetCustomDomainVerificationTypeArrayOutputWithContext(context.Context) GetCustomDomainVerificationTypeArrayOutput
}

type GetCustomDomainVerificationTypeArray []GetCustomDomainVerificationTypeInput

func (GetCustomDomainVerificationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDomainVerificationType)(nil)).Elem()
}

func (i GetCustomDomainVerificationTypeArray) ToGetCustomDomainVerificationTypeArrayOutput() GetCustomDomainVerificationTypeArrayOutput {
	return i.ToGetCustomDomainVerificationTypeArrayOutputWithContext(context.Background())
}

func (i GetCustomDomainVerificationTypeArray) ToGetCustomDomainVerificationTypeArrayOutputWithContext(ctx context.Context) GetCustomDomainVerificationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCustomDomainVerificationTypeArrayOutput)
}

func (i GetCustomDomainVerificationTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDomainVerificationType] {
	return pulumix.Output[[]GetCustomDomainVerificationType]{
		OutputState: i.ToGetCustomDomainVerificationTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetCustomDomainVerificationTypeOutput struct{ *pulumi.OutputState }

func (GetCustomDomainVerificationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCustomDomainVerificationType)(nil)).Elem()
}

func (o GetCustomDomainVerificationTypeOutput) ToGetCustomDomainVerificationTypeOutput() GetCustomDomainVerificationTypeOutput {
	return o
}

func (o GetCustomDomainVerificationTypeOutput) ToGetCustomDomainVerificationTypeOutputWithContext(ctx context.Context) GetCustomDomainVerificationTypeOutput {
	return o
}

func (o GetCustomDomainVerificationTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetCustomDomainVerificationType] {
	return pulumix.Output[GetCustomDomainVerificationType]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDomainVerificationTypeOutput) Methods() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetCustomDomainVerificationType) []interface{} { return v.Methods }).(pulumi.ArrayOutput)
}

type GetCustomDomainVerificationTypeArrayOutput struct{ *pulumi.OutputState }

func (GetCustomDomainVerificationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCustomDomainVerificationType)(nil)).Elem()
}

func (o GetCustomDomainVerificationTypeArrayOutput) ToGetCustomDomainVerificationTypeArrayOutput() GetCustomDomainVerificationTypeArrayOutput {
	return o
}

func (o GetCustomDomainVerificationTypeArrayOutput) ToGetCustomDomainVerificationTypeArrayOutputWithContext(ctx context.Context) GetCustomDomainVerificationTypeArrayOutput {
	return o
}

func (o GetCustomDomainVerificationTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetCustomDomainVerificationType] {
	return pulumix.Output[[]GetCustomDomainVerificationType]{
		OutputState: o.OutputState,
	}
}

func (o GetCustomDomainVerificationTypeArrayOutput) Index(i pulumi.IntInput) GetCustomDomainVerificationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCustomDomainVerificationType {
		return vs[0].([]GetCustomDomainVerificationType)[vs[1].(int)]
	}).(GetCustomDomainVerificationTypeOutput)
}

type GetOrganizationBranding struct {
	Colors  map[string]string `pulumi:"colors"`
	LogoUrl string            `pulumi:"logoUrl"`
}

// GetOrganizationBrandingInput is an input type that accepts GetOrganizationBrandingArgs and GetOrganizationBrandingOutput values.
// You can construct a concrete instance of `GetOrganizationBrandingInput` via:
//
//	GetOrganizationBrandingArgs{...}
type GetOrganizationBrandingInput interface {
	pulumi.Input

	ToGetOrganizationBrandingOutput() GetOrganizationBrandingOutput
	ToGetOrganizationBrandingOutputWithContext(context.Context) GetOrganizationBrandingOutput
}

type GetOrganizationBrandingArgs struct {
	Colors  pulumi.StringMapInput `pulumi:"colors"`
	LogoUrl pulumi.StringInput    `pulumi:"logoUrl"`
}

func (GetOrganizationBrandingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationBranding)(nil)).Elem()
}

func (i GetOrganizationBrandingArgs) ToGetOrganizationBrandingOutput() GetOrganizationBrandingOutput {
	return i.ToGetOrganizationBrandingOutputWithContext(context.Background())
}

func (i GetOrganizationBrandingArgs) ToGetOrganizationBrandingOutputWithContext(ctx context.Context) GetOrganizationBrandingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationBrandingOutput)
}

func (i GetOrganizationBrandingArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationBranding] {
	return pulumix.Output[GetOrganizationBranding]{
		OutputState: i.ToGetOrganizationBrandingOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationBrandingArrayInput is an input type that accepts GetOrganizationBrandingArray and GetOrganizationBrandingArrayOutput values.
// You can construct a concrete instance of `GetOrganizationBrandingArrayInput` via:
//
//	GetOrganizationBrandingArray{ GetOrganizationBrandingArgs{...} }
type GetOrganizationBrandingArrayInput interface {
	pulumi.Input

	ToGetOrganizationBrandingArrayOutput() GetOrganizationBrandingArrayOutput
	ToGetOrganizationBrandingArrayOutputWithContext(context.Context) GetOrganizationBrandingArrayOutput
}

type GetOrganizationBrandingArray []GetOrganizationBrandingInput

func (GetOrganizationBrandingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationBranding)(nil)).Elem()
}

func (i GetOrganizationBrandingArray) ToGetOrganizationBrandingArrayOutput() GetOrganizationBrandingArrayOutput {
	return i.ToGetOrganizationBrandingArrayOutputWithContext(context.Background())
}

func (i GetOrganizationBrandingArray) ToGetOrganizationBrandingArrayOutputWithContext(ctx context.Context) GetOrganizationBrandingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationBrandingArrayOutput)
}

func (i GetOrganizationBrandingArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationBranding] {
	return pulumix.Output[[]GetOrganizationBranding]{
		OutputState: i.ToGetOrganizationBrandingArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationBrandingOutput struct{ *pulumi.OutputState }

func (GetOrganizationBrandingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationBranding)(nil)).Elem()
}

func (o GetOrganizationBrandingOutput) ToGetOrganizationBrandingOutput() GetOrganizationBrandingOutput {
	return o
}

func (o GetOrganizationBrandingOutput) ToGetOrganizationBrandingOutputWithContext(ctx context.Context) GetOrganizationBrandingOutput {
	return o
}

func (o GetOrganizationBrandingOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationBranding] {
	return pulumix.Output[GetOrganizationBranding]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationBrandingOutput) Colors() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetOrganizationBranding) map[string]string { return v.Colors }).(pulumi.StringMapOutput)
}

func (o GetOrganizationBrandingOutput) LogoUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationBranding) string { return v.LogoUrl }).(pulumi.StringOutput)
}

type GetOrganizationBrandingArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationBrandingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationBranding)(nil)).Elem()
}

func (o GetOrganizationBrandingArrayOutput) ToGetOrganizationBrandingArrayOutput() GetOrganizationBrandingArrayOutput {
	return o
}

func (o GetOrganizationBrandingArrayOutput) ToGetOrganizationBrandingArrayOutputWithContext(ctx context.Context) GetOrganizationBrandingArrayOutput {
	return o
}

func (o GetOrganizationBrandingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationBranding] {
	return pulumix.Output[[]GetOrganizationBranding]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationBrandingArrayOutput) Index(i pulumi.IntInput) GetOrganizationBrandingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationBranding {
		return vs[0].([]GetOrganizationBranding)[vs[1].(int)]
	}).(GetOrganizationBrandingOutput)
}

type GetOrganizationConnectionType struct {
	AssignMembershipOnLogin bool   `pulumi:"assignMembershipOnLogin"`
	ConnectionId            string `pulumi:"connectionId"`
}

// GetOrganizationConnectionTypeInput is an input type that accepts GetOrganizationConnectionTypeArgs and GetOrganizationConnectionTypeOutput values.
// You can construct a concrete instance of `GetOrganizationConnectionTypeInput` via:
//
//	GetOrganizationConnectionTypeArgs{...}
type GetOrganizationConnectionTypeInput interface {
	pulumi.Input

	ToGetOrganizationConnectionTypeOutput() GetOrganizationConnectionTypeOutput
	ToGetOrganizationConnectionTypeOutputWithContext(context.Context) GetOrganizationConnectionTypeOutput
}

type GetOrganizationConnectionTypeArgs struct {
	AssignMembershipOnLogin pulumi.BoolInput   `pulumi:"assignMembershipOnLogin"`
	ConnectionId            pulumi.StringInput `pulumi:"connectionId"`
}

func (GetOrganizationConnectionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationConnectionType)(nil)).Elem()
}

func (i GetOrganizationConnectionTypeArgs) ToGetOrganizationConnectionTypeOutput() GetOrganizationConnectionTypeOutput {
	return i.ToGetOrganizationConnectionTypeOutputWithContext(context.Background())
}

func (i GetOrganizationConnectionTypeArgs) ToGetOrganizationConnectionTypeOutputWithContext(ctx context.Context) GetOrganizationConnectionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationConnectionTypeOutput)
}

func (i GetOrganizationConnectionTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationConnectionType] {
	return pulumix.Output[GetOrganizationConnectionType]{
		OutputState: i.ToGetOrganizationConnectionTypeOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationConnectionTypeArrayInput is an input type that accepts GetOrganizationConnectionTypeArray and GetOrganizationConnectionTypeArrayOutput values.
// You can construct a concrete instance of `GetOrganizationConnectionTypeArrayInput` via:
//
//	GetOrganizationConnectionTypeArray{ GetOrganizationConnectionTypeArgs{...} }
type GetOrganizationConnectionTypeArrayInput interface {
	pulumi.Input

	ToGetOrganizationConnectionTypeArrayOutput() GetOrganizationConnectionTypeArrayOutput
	ToGetOrganizationConnectionTypeArrayOutputWithContext(context.Context) GetOrganizationConnectionTypeArrayOutput
}

type GetOrganizationConnectionTypeArray []GetOrganizationConnectionTypeInput

func (GetOrganizationConnectionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationConnectionType)(nil)).Elem()
}

func (i GetOrganizationConnectionTypeArray) ToGetOrganizationConnectionTypeArrayOutput() GetOrganizationConnectionTypeArrayOutput {
	return i.ToGetOrganizationConnectionTypeArrayOutputWithContext(context.Background())
}

func (i GetOrganizationConnectionTypeArray) ToGetOrganizationConnectionTypeArrayOutputWithContext(ctx context.Context) GetOrganizationConnectionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationConnectionTypeArrayOutput)
}

func (i GetOrganizationConnectionTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationConnectionType] {
	return pulumix.Output[[]GetOrganizationConnectionType]{
		OutputState: i.ToGetOrganizationConnectionTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationConnectionTypeOutput struct{ *pulumi.OutputState }

func (GetOrganizationConnectionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationConnectionType)(nil)).Elem()
}

func (o GetOrganizationConnectionTypeOutput) ToGetOrganizationConnectionTypeOutput() GetOrganizationConnectionTypeOutput {
	return o
}

func (o GetOrganizationConnectionTypeOutput) ToGetOrganizationConnectionTypeOutputWithContext(ctx context.Context) GetOrganizationConnectionTypeOutput {
	return o
}

func (o GetOrganizationConnectionTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationConnectionType] {
	return pulumix.Output[GetOrganizationConnectionType]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationConnectionTypeOutput) AssignMembershipOnLogin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrganizationConnectionType) bool { return v.AssignMembershipOnLogin }).(pulumi.BoolOutput)
}

func (o GetOrganizationConnectionTypeOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationConnectionType) string { return v.ConnectionId }).(pulumi.StringOutput)
}

type GetOrganizationConnectionTypeArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationConnectionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationConnectionType)(nil)).Elem()
}

func (o GetOrganizationConnectionTypeArrayOutput) ToGetOrganizationConnectionTypeArrayOutput() GetOrganizationConnectionTypeArrayOutput {
	return o
}

func (o GetOrganizationConnectionTypeArrayOutput) ToGetOrganizationConnectionTypeArrayOutputWithContext(ctx context.Context) GetOrganizationConnectionTypeArrayOutput {
	return o
}

func (o GetOrganizationConnectionTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationConnectionType] {
	return pulumix.Output[[]GetOrganizationConnectionType]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationConnectionTypeArrayOutput) Index(i pulumi.IntInput) GetOrganizationConnectionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationConnectionType {
		return vs[0].([]GetOrganizationConnectionType)[vs[1].(int)]
	}).(GetOrganizationConnectionTypeOutput)
}

type GetPagesChangePassword struct {
	Enabled bool   `pulumi:"enabled"`
	Html    string `pulumi:"html"`
}

// GetPagesChangePasswordInput is an input type that accepts GetPagesChangePasswordArgs and GetPagesChangePasswordOutput values.
// You can construct a concrete instance of `GetPagesChangePasswordInput` via:
//
//	GetPagesChangePasswordArgs{...}
type GetPagesChangePasswordInput interface {
	pulumi.Input

	ToGetPagesChangePasswordOutput() GetPagesChangePasswordOutput
	ToGetPagesChangePasswordOutputWithContext(context.Context) GetPagesChangePasswordOutput
}

type GetPagesChangePasswordArgs struct {
	Enabled pulumi.BoolInput   `pulumi:"enabled"`
	Html    pulumi.StringInput `pulumi:"html"`
}

func (GetPagesChangePasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPagesChangePassword)(nil)).Elem()
}

func (i GetPagesChangePasswordArgs) ToGetPagesChangePasswordOutput() GetPagesChangePasswordOutput {
	return i.ToGetPagesChangePasswordOutputWithContext(context.Background())
}

func (i GetPagesChangePasswordArgs) ToGetPagesChangePasswordOutputWithContext(ctx context.Context) GetPagesChangePasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPagesChangePasswordOutput)
}

func (i GetPagesChangePasswordArgs) ToOutput(ctx context.Context) pulumix.Output[GetPagesChangePassword] {
	return pulumix.Output[GetPagesChangePassword]{
		OutputState: i.ToGetPagesChangePasswordOutputWithContext(ctx).OutputState,
	}
}

// GetPagesChangePasswordArrayInput is an input type that accepts GetPagesChangePasswordArray and GetPagesChangePasswordArrayOutput values.
// You can construct a concrete instance of `GetPagesChangePasswordArrayInput` via:
//
//	GetPagesChangePasswordArray{ GetPagesChangePasswordArgs{...} }
type GetPagesChangePasswordArrayInput interface {
	pulumi.Input

	ToGetPagesChangePasswordArrayOutput() GetPagesChangePasswordArrayOutput
	ToGetPagesChangePasswordArrayOutputWithContext(context.Context) GetPagesChangePasswordArrayOutput
}

type GetPagesChangePasswordArray []GetPagesChangePasswordInput

func (GetPagesChangePasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPagesChangePassword)(nil)).Elem()
}

func (i GetPagesChangePasswordArray) ToGetPagesChangePasswordArrayOutput() GetPagesChangePasswordArrayOutput {
	return i.ToGetPagesChangePasswordArrayOutputWithContext(context.Background())
}

func (i GetPagesChangePasswordArray) ToGetPagesChangePasswordArrayOutputWithContext(ctx context.Context) GetPagesChangePasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPagesChangePasswordArrayOutput)
}

func (i GetPagesChangePasswordArray) ToOutput(ctx context.Context) pulumix.Output[[]GetPagesChangePassword] {
	return pulumix.Output[[]GetPagesChangePassword]{
		OutputState: i.ToGetPagesChangePasswordArrayOutputWithContext(ctx).OutputState,
	}
}

type GetPagesChangePasswordOutput struct{ *pulumi.OutputState }

func (GetPagesChangePasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPagesChangePassword)(nil)).Elem()
}

func (o GetPagesChangePasswordOutput) ToGetPagesChangePasswordOutput() GetPagesChangePasswordOutput {
	return o
}

func (o GetPagesChangePasswordOutput) ToGetPagesChangePasswordOutputWithContext(ctx context.Context) GetPagesChangePasswordOutput {
	return o
}

func (o GetPagesChangePasswordOutput) ToOutput(ctx context.Context) pulumix.Output[GetPagesChangePassword] {
	return pulumix.Output[GetPagesChangePassword]{
		OutputState: o.OutputState,
	}
}

func (o GetPagesChangePasswordOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPagesChangePassword) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetPagesChangePasswordOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v GetPagesChangePassword) string { return v.Html }).(pulumi.StringOutput)
}

type GetPagesChangePasswordArrayOutput struct{ *pulumi.OutputState }

func (GetPagesChangePasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPagesChangePassword)(nil)).Elem()
}

func (o GetPagesChangePasswordArrayOutput) ToGetPagesChangePasswordArrayOutput() GetPagesChangePasswordArrayOutput {
	return o
}

func (o GetPagesChangePasswordArrayOutput) ToGetPagesChangePasswordArrayOutputWithContext(ctx context.Context) GetPagesChangePasswordArrayOutput {
	return o
}

func (o GetPagesChangePasswordArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetPagesChangePassword] {
	return pulumix.Output[[]GetPagesChangePassword]{
		OutputState: o.OutputState,
	}
}

func (o GetPagesChangePasswordArrayOutput) Index(i pulumi.IntInput) GetPagesChangePasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPagesChangePassword {
		return vs[0].([]GetPagesChangePassword)[vs[1].(int)]
	}).(GetPagesChangePasswordOutput)
}

type GetPagesError struct {
	Html        string `pulumi:"html"`
	ShowLogLink bool   `pulumi:"showLogLink"`
	Url         string `pulumi:"url"`
}

// GetPagesErrorInput is an input type that accepts GetPagesErrorArgs and GetPagesErrorOutput values.
// You can construct a concrete instance of `GetPagesErrorInput` via:
//
//	GetPagesErrorArgs{...}
type GetPagesErrorInput interface {
	pulumi.Input

	ToGetPagesErrorOutput() GetPagesErrorOutput
	ToGetPagesErrorOutputWithContext(context.Context) GetPagesErrorOutput
}

type GetPagesErrorArgs struct {
	Html        pulumi.StringInput `pulumi:"html"`
	ShowLogLink pulumi.BoolInput   `pulumi:"showLogLink"`
	Url         pulumi.StringInput `pulumi:"url"`
}

func (GetPagesErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPagesError)(nil)).Elem()
}

func (i GetPagesErrorArgs) ToGetPagesErrorOutput() GetPagesErrorOutput {
	return i.ToGetPagesErrorOutputWithContext(context.Background())
}

func (i GetPagesErrorArgs) ToGetPagesErrorOutputWithContext(ctx context.Context) GetPagesErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPagesErrorOutput)
}

func (i GetPagesErrorArgs) ToOutput(ctx context.Context) pulumix.Output[GetPagesError] {
	return pulumix.Output[GetPagesError]{
		OutputState: i.ToGetPagesErrorOutputWithContext(ctx).OutputState,
	}
}

// GetPagesErrorArrayInput is an input type that accepts GetPagesErrorArray and GetPagesErrorArrayOutput values.
// You can construct a concrete instance of `GetPagesErrorArrayInput` via:
//
//	GetPagesErrorArray{ GetPagesErrorArgs{...} }
type GetPagesErrorArrayInput interface {
	pulumi.Input

	ToGetPagesErrorArrayOutput() GetPagesErrorArrayOutput
	ToGetPagesErrorArrayOutputWithContext(context.Context) GetPagesErrorArrayOutput
}

type GetPagesErrorArray []GetPagesErrorInput

func (GetPagesErrorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPagesError)(nil)).Elem()
}

func (i GetPagesErrorArray) ToGetPagesErrorArrayOutput() GetPagesErrorArrayOutput {
	return i.ToGetPagesErrorArrayOutputWithContext(context.Background())
}

func (i GetPagesErrorArray) ToGetPagesErrorArrayOutputWithContext(ctx context.Context) GetPagesErrorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPagesErrorArrayOutput)
}

func (i GetPagesErrorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetPagesError] {
	return pulumix.Output[[]GetPagesError]{
		OutputState: i.ToGetPagesErrorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetPagesErrorOutput struct{ *pulumi.OutputState }

func (GetPagesErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPagesError)(nil)).Elem()
}

func (o GetPagesErrorOutput) ToGetPagesErrorOutput() GetPagesErrorOutput {
	return o
}

func (o GetPagesErrorOutput) ToGetPagesErrorOutputWithContext(ctx context.Context) GetPagesErrorOutput {
	return o
}

func (o GetPagesErrorOutput) ToOutput(ctx context.Context) pulumix.Output[GetPagesError] {
	return pulumix.Output[GetPagesError]{
		OutputState: o.OutputState,
	}
}

func (o GetPagesErrorOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v GetPagesError) string { return v.Html }).(pulumi.StringOutput)
}

func (o GetPagesErrorOutput) ShowLogLink() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPagesError) bool { return v.ShowLogLink }).(pulumi.BoolOutput)
}

func (o GetPagesErrorOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetPagesError) string { return v.Url }).(pulumi.StringOutput)
}

type GetPagesErrorArrayOutput struct{ *pulumi.OutputState }

func (GetPagesErrorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPagesError)(nil)).Elem()
}

func (o GetPagesErrorArrayOutput) ToGetPagesErrorArrayOutput() GetPagesErrorArrayOutput {
	return o
}

func (o GetPagesErrorArrayOutput) ToGetPagesErrorArrayOutputWithContext(ctx context.Context) GetPagesErrorArrayOutput {
	return o
}

func (o GetPagesErrorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetPagesError] {
	return pulumix.Output[[]GetPagesError]{
		OutputState: o.OutputState,
	}
}

func (o GetPagesErrorArrayOutput) Index(i pulumi.IntInput) GetPagesErrorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPagesError {
		return vs[0].([]GetPagesError)[vs[1].(int)]
	}).(GetPagesErrorOutput)
}

type GetPagesGuardianMfa struct {
	Enabled bool   `pulumi:"enabled"`
	Html    string `pulumi:"html"`
}

// GetPagesGuardianMfaInput is an input type that accepts GetPagesGuardianMfaArgs and GetPagesGuardianMfaOutput values.
// You can construct a concrete instance of `GetPagesGuardianMfaInput` via:
//
//	GetPagesGuardianMfaArgs{...}
type GetPagesGuardianMfaInput interface {
	pulumi.Input

	ToGetPagesGuardianMfaOutput() GetPagesGuardianMfaOutput
	ToGetPagesGuardianMfaOutputWithContext(context.Context) GetPagesGuardianMfaOutput
}

type GetPagesGuardianMfaArgs struct {
	Enabled pulumi.BoolInput   `pulumi:"enabled"`
	Html    pulumi.StringInput `pulumi:"html"`
}

func (GetPagesGuardianMfaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPagesGuardianMfa)(nil)).Elem()
}

func (i GetPagesGuardianMfaArgs) ToGetPagesGuardianMfaOutput() GetPagesGuardianMfaOutput {
	return i.ToGetPagesGuardianMfaOutputWithContext(context.Background())
}

func (i GetPagesGuardianMfaArgs) ToGetPagesGuardianMfaOutputWithContext(ctx context.Context) GetPagesGuardianMfaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPagesGuardianMfaOutput)
}

func (i GetPagesGuardianMfaArgs) ToOutput(ctx context.Context) pulumix.Output[GetPagesGuardianMfa] {
	return pulumix.Output[GetPagesGuardianMfa]{
		OutputState: i.ToGetPagesGuardianMfaOutputWithContext(ctx).OutputState,
	}
}

// GetPagesGuardianMfaArrayInput is an input type that accepts GetPagesGuardianMfaArray and GetPagesGuardianMfaArrayOutput values.
// You can construct a concrete instance of `GetPagesGuardianMfaArrayInput` via:
//
//	GetPagesGuardianMfaArray{ GetPagesGuardianMfaArgs{...} }
type GetPagesGuardianMfaArrayInput interface {
	pulumi.Input

	ToGetPagesGuardianMfaArrayOutput() GetPagesGuardianMfaArrayOutput
	ToGetPagesGuardianMfaArrayOutputWithContext(context.Context) GetPagesGuardianMfaArrayOutput
}

type GetPagesGuardianMfaArray []GetPagesGuardianMfaInput

func (GetPagesGuardianMfaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPagesGuardianMfa)(nil)).Elem()
}

func (i GetPagesGuardianMfaArray) ToGetPagesGuardianMfaArrayOutput() GetPagesGuardianMfaArrayOutput {
	return i.ToGetPagesGuardianMfaArrayOutputWithContext(context.Background())
}

func (i GetPagesGuardianMfaArray) ToGetPagesGuardianMfaArrayOutputWithContext(ctx context.Context) GetPagesGuardianMfaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPagesGuardianMfaArrayOutput)
}

func (i GetPagesGuardianMfaArray) ToOutput(ctx context.Context) pulumix.Output[[]GetPagesGuardianMfa] {
	return pulumix.Output[[]GetPagesGuardianMfa]{
		OutputState: i.ToGetPagesGuardianMfaArrayOutputWithContext(ctx).OutputState,
	}
}

type GetPagesGuardianMfaOutput struct{ *pulumi.OutputState }

func (GetPagesGuardianMfaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPagesGuardianMfa)(nil)).Elem()
}

func (o GetPagesGuardianMfaOutput) ToGetPagesGuardianMfaOutput() GetPagesGuardianMfaOutput {
	return o
}

func (o GetPagesGuardianMfaOutput) ToGetPagesGuardianMfaOutputWithContext(ctx context.Context) GetPagesGuardianMfaOutput {
	return o
}

func (o GetPagesGuardianMfaOutput) ToOutput(ctx context.Context) pulumix.Output[GetPagesGuardianMfa] {
	return pulumix.Output[GetPagesGuardianMfa]{
		OutputState: o.OutputState,
	}
}

func (o GetPagesGuardianMfaOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPagesGuardianMfa) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetPagesGuardianMfaOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v GetPagesGuardianMfa) string { return v.Html }).(pulumi.StringOutput)
}

type GetPagesGuardianMfaArrayOutput struct{ *pulumi.OutputState }

func (GetPagesGuardianMfaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPagesGuardianMfa)(nil)).Elem()
}

func (o GetPagesGuardianMfaArrayOutput) ToGetPagesGuardianMfaArrayOutput() GetPagesGuardianMfaArrayOutput {
	return o
}

func (o GetPagesGuardianMfaArrayOutput) ToGetPagesGuardianMfaArrayOutputWithContext(ctx context.Context) GetPagesGuardianMfaArrayOutput {
	return o
}

func (o GetPagesGuardianMfaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetPagesGuardianMfa] {
	return pulumix.Output[[]GetPagesGuardianMfa]{
		OutputState: o.OutputState,
	}
}

func (o GetPagesGuardianMfaArrayOutput) Index(i pulumi.IntInput) GetPagesGuardianMfaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPagesGuardianMfa {
		return vs[0].([]GetPagesGuardianMfa)[vs[1].(int)]
	}).(GetPagesGuardianMfaOutput)
}

type GetPagesLogin struct {
	Enabled bool   `pulumi:"enabled"`
	Html    string `pulumi:"html"`
}

// GetPagesLoginInput is an input type that accepts GetPagesLoginArgs and GetPagesLoginOutput values.
// You can construct a concrete instance of `GetPagesLoginInput` via:
//
//	GetPagesLoginArgs{...}
type GetPagesLoginInput interface {
	pulumi.Input

	ToGetPagesLoginOutput() GetPagesLoginOutput
	ToGetPagesLoginOutputWithContext(context.Context) GetPagesLoginOutput
}

type GetPagesLoginArgs struct {
	Enabled pulumi.BoolInput   `pulumi:"enabled"`
	Html    pulumi.StringInput `pulumi:"html"`
}

func (GetPagesLoginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPagesLogin)(nil)).Elem()
}

func (i GetPagesLoginArgs) ToGetPagesLoginOutput() GetPagesLoginOutput {
	return i.ToGetPagesLoginOutputWithContext(context.Background())
}

func (i GetPagesLoginArgs) ToGetPagesLoginOutputWithContext(ctx context.Context) GetPagesLoginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPagesLoginOutput)
}

func (i GetPagesLoginArgs) ToOutput(ctx context.Context) pulumix.Output[GetPagesLogin] {
	return pulumix.Output[GetPagesLogin]{
		OutputState: i.ToGetPagesLoginOutputWithContext(ctx).OutputState,
	}
}

// GetPagesLoginArrayInput is an input type that accepts GetPagesLoginArray and GetPagesLoginArrayOutput values.
// You can construct a concrete instance of `GetPagesLoginArrayInput` via:
//
//	GetPagesLoginArray{ GetPagesLoginArgs{...} }
type GetPagesLoginArrayInput interface {
	pulumi.Input

	ToGetPagesLoginArrayOutput() GetPagesLoginArrayOutput
	ToGetPagesLoginArrayOutputWithContext(context.Context) GetPagesLoginArrayOutput
}

type GetPagesLoginArray []GetPagesLoginInput

func (GetPagesLoginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPagesLogin)(nil)).Elem()
}

func (i GetPagesLoginArray) ToGetPagesLoginArrayOutput() GetPagesLoginArrayOutput {
	return i.ToGetPagesLoginArrayOutputWithContext(context.Background())
}

func (i GetPagesLoginArray) ToGetPagesLoginArrayOutputWithContext(ctx context.Context) GetPagesLoginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPagesLoginArrayOutput)
}

func (i GetPagesLoginArray) ToOutput(ctx context.Context) pulumix.Output[[]GetPagesLogin] {
	return pulumix.Output[[]GetPagesLogin]{
		OutputState: i.ToGetPagesLoginArrayOutputWithContext(ctx).OutputState,
	}
}

type GetPagesLoginOutput struct{ *pulumi.OutputState }

func (GetPagesLoginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPagesLogin)(nil)).Elem()
}

func (o GetPagesLoginOutput) ToGetPagesLoginOutput() GetPagesLoginOutput {
	return o
}

func (o GetPagesLoginOutput) ToGetPagesLoginOutputWithContext(ctx context.Context) GetPagesLoginOutput {
	return o
}

func (o GetPagesLoginOutput) ToOutput(ctx context.Context) pulumix.Output[GetPagesLogin] {
	return pulumix.Output[GetPagesLogin]{
		OutputState: o.OutputState,
	}
}

func (o GetPagesLoginOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPagesLogin) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetPagesLoginOutput) Html() pulumi.StringOutput {
	return o.ApplyT(func(v GetPagesLogin) string { return v.Html }).(pulumi.StringOutput)
}

type GetPagesLoginArrayOutput struct{ *pulumi.OutputState }

func (GetPagesLoginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPagesLogin)(nil)).Elem()
}

func (o GetPagesLoginArrayOutput) ToGetPagesLoginArrayOutput() GetPagesLoginArrayOutput {
	return o
}

func (o GetPagesLoginArrayOutput) ToGetPagesLoginArrayOutputWithContext(ctx context.Context) GetPagesLoginArrayOutput {
	return o
}

func (o GetPagesLoginArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetPagesLogin] {
	return pulumix.Output[[]GetPagesLogin]{
		OutputState: o.OutputState,
	}
}

func (o GetPagesLoginArrayOutput) Index(i pulumi.IntInput) GetPagesLoginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPagesLogin {
		return vs[0].([]GetPagesLogin)[vs[1].(int)]
	}).(GetPagesLoginOutput)
}

type GetResourceServerScopeType struct {
	Description string `pulumi:"description"`
	// Friendly name for the resource server. Cannot include `<` or `>` characters.
	Name string `pulumi:"name"`
}

// GetResourceServerScopeTypeInput is an input type that accepts GetResourceServerScopeTypeArgs and GetResourceServerScopeTypeOutput values.
// You can construct a concrete instance of `GetResourceServerScopeTypeInput` via:
//
//	GetResourceServerScopeTypeArgs{...}
type GetResourceServerScopeTypeInput interface {
	pulumi.Input

	ToGetResourceServerScopeTypeOutput() GetResourceServerScopeTypeOutput
	ToGetResourceServerScopeTypeOutputWithContext(context.Context) GetResourceServerScopeTypeOutput
}

type GetResourceServerScopeTypeArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	// Friendly name for the resource server. Cannot include `<` or `>` characters.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetResourceServerScopeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceServerScopeType)(nil)).Elem()
}

func (i GetResourceServerScopeTypeArgs) ToGetResourceServerScopeTypeOutput() GetResourceServerScopeTypeOutput {
	return i.ToGetResourceServerScopeTypeOutputWithContext(context.Background())
}

func (i GetResourceServerScopeTypeArgs) ToGetResourceServerScopeTypeOutputWithContext(ctx context.Context) GetResourceServerScopeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceServerScopeTypeOutput)
}

func (i GetResourceServerScopeTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetResourceServerScopeType] {
	return pulumix.Output[GetResourceServerScopeType]{
		OutputState: i.ToGetResourceServerScopeTypeOutputWithContext(ctx).OutputState,
	}
}

// GetResourceServerScopeTypeArrayInput is an input type that accepts GetResourceServerScopeTypeArray and GetResourceServerScopeTypeArrayOutput values.
// You can construct a concrete instance of `GetResourceServerScopeTypeArrayInput` via:
//
//	GetResourceServerScopeTypeArray{ GetResourceServerScopeTypeArgs{...} }
type GetResourceServerScopeTypeArrayInput interface {
	pulumi.Input

	ToGetResourceServerScopeTypeArrayOutput() GetResourceServerScopeTypeArrayOutput
	ToGetResourceServerScopeTypeArrayOutputWithContext(context.Context) GetResourceServerScopeTypeArrayOutput
}

type GetResourceServerScopeTypeArray []GetResourceServerScopeTypeInput

func (GetResourceServerScopeTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceServerScopeType)(nil)).Elem()
}

func (i GetResourceServerScopeTypeArray) ToGetResourceServerScopeTypeArrayOutput() GetResourceServerScopeTypeArrayOutput {
	return i.ToGetResourceServerScopeTypeArrayOutputWithContext(context.Background())
}

func (i GetResourceServerScopeTypeArray) ToGetResourceServerScopeTypeArrayOutputWithContext(ctx context.Context) GetResourceServerScopeTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetResourceServerScopeTypeArrayOutput)
}

func (i GetResourceServerScopeTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetResourceServerScopeType] {
	return pulumix.Output[[]GetResourceServerScopeType]{
		OutputState: i.ToGetResourceServerScopeTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetResourceServerScopeTypeOutput struct{ *pulumi.OutputState }

func (GetResourceServerScopeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourceServerScopeType)(nil)).Elem()
}

func (o GetResourceServerScopeTypeOutput) ToGetResourceServerScopeTypeOutput() GetResourceServerScopeTypeOutput {
	return o
}

func (o GetResourceServerScopeTypeOutput) ToGetResourceServerScopeTypeOutputWithContext(ctx context.Context) GetResourceServerScopeTypeOutput {
	return o
}

func (o GetResourceServerScopeTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetResourceServerScopeType] {
	return pulumix.Output[GetResourceServerScopeType]{
		OutputState: o.OutputState,
	}
}

func (o GetResourceServerScopeTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceServerScopeType) string { return v.Description }).(pulumi.StringOutput)
}

// Friendly name for the resource server. Cannot include `<` or `>` characters.
func (o GetResourceServerScopeTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourceServerScopeType) string { return v.Name }).(pulumi.StringOutput)
}

type GetResourceServerScopeTypeArrayOutput struct{ *pulumi.OutputState }

func (GetResourceServerScopeTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetResourceServerScopeType)(nil)).Elem()
}

func (o GetResourceServerScopeTypeArrayOutput) ToGetResourceServerScopeTypeArrayOutput() GetResourceServerScopeTypeArrayOutput {
	return o
}

func (o GetResourceServerScopeTypeArrayOutput) ToGetResourceServerScopeTypeArrayOutputWithContext(ctx context.Context) GetResourceServerScopeTypeArrayOutput {
	return o
}

func (o GetResourceServerScopeTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetResourceServerScopeType] {
	return pulumix.Output[[]GetResourceServerScopeType]{
		OutputState: o.OutputState,
	}
}

func (o GetResourceServerScopeTypeArrayOutput) Index(i pulumi.IntInput) GetResourceServerScopeTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetResourceServerScopeType {
		return vs[0].([]GetResourceServerScopeType)[vs[1].(int)]
	}).(GetResourceServerScopeTypeOutput)
}

type GetRolePermissionType struct {
	// The description of the role.
	Description string `pulumi:"description"`
	// The name of the role. If not provided, `roleId` must be set.
	Name                     string `pulumi:"name"`
	ResourceServerIdentifier string `pulumi:"resourceServerIdentifier"`
	ResourceServerName       string `pulumi:"resourceServerName"`
}

// GetRolePermissionTypeInput is an input type that accepts GetRolePermissionTypeArgs and GetRolePermissionTypeOutput values.
// You can construct a concrete instance of `GetRolePermissionTypeInput` via:
//
//	GetRolePermissionTypeArgs{...}
type GetRolePermissionTypeInput interface {
	pulumi.Input

	ToGetRolePermissionTypeOutput() GetRolePermissionTypeOutput
	ToGetRolePermissionTypeOutputWithContext(context.Context) GetRolePermissionTypeOutput
}

type GetRolePermissionTypeArgs struct {
	// The description of the role.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the role. If not provided, `roleId` must be set.
	Name                     pulumi.StringInput `pulumi:"name"`
	ResourceServerIdentifier pulumi.StringInput `pulumi:"resourceServerIdentifier"`
	ResourceServerName       pulumi.StringInput `pulumi:"resourceServerName"`
}

func (GetRolePermissionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolePermissionType)(nil)).Elem()
}

func (i GetRolePermissionTypeArgs) ToGetRolePermissionTypeOutput() GetRolePermissionTypeOutput {
	return i.ToGetRolePermissionTypeOutputWithContext(context.Background())
}

func (i GetRolePermissionTypeArgs) ToGetRolePermissionTypeOutputWithContext(ctx context.Context) GetRolePermissionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolePermissionTypeOutput)
}

func (i GetRolePermissionTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetRolePermissionType] {
	return pulumix.Output[GetRolePermissionType]{
		OutputState: i.ToGetRolePermissionTypeOutputWithContext(ctx).OutputState,
	}
}

// GetRolePermissionTypeArrayInput is an input type that accepts GetRolePermissionTypeArray and GetRolePermissionTypeArrayOutput values.
// You can construct a concrete instance of `GetRolePermissionTypeArrayInput` via:
//
//	GetRolePermissionTypeArray{ GetRolePermissionTypeArgs{...} }
type GetRolePermissionTypeArrayInput interface {
	pulumi.Input

	ToGetRolePermissionTypeArrayOutput() GetRolePermissionTypeArrayOutput
	ToGetRolePermissionTypeArrayOutputWithContext(context.Context) GetRolePermissionTypeArrayOutput
}

type GetRolePermissionTypeArray []GetRolePermissionTypeInput

func (GetRolePermissionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolePermissionType)(nil)).Elem()
}

func (i GetRolePermissionTypeArray) ToGetRolePermissionTypeArrayOutput() GetRolePermissionTypeArrayOutput {
	return i.ToGetRolePermissionTypeArrayOutputWithContext(context.Background())
}

func (i GetRolePermissionTypeArray) ToGetRolePermissionTypeArrayOutputWithContext(ctx context.Context) GetRolePermissionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRolePermissionTypeArrayOutput)
}

func (i GetRolePermissionTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRolePermissionType] {
	return pulumix.Output[[]GetRolePermissionType]{
		OutputState: i.ToGetRolePermissionTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRolePermissionTypeOutput struct{ *pulumi.OutputState }

func (GetRolePermissionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRolePermissionType)(nil)).Elem()
}

func (o GetRolePermissionTypeOutput) ToGetRolePermissionTypeOutput() GetRolePermissionTypeOutput {
	return o
}

func (o GetRolePermissionTypeOutput) ToGetRolePermissionTypeOutputWithContext(ctx context.Context) GetRolePermissionTypeOutput {
	return o
}

func (o GetRolePermissionTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetRolePermissionType] {
	return pulumix.Output[GetRolePermissionType]{
		OutputState: o.OutputState,
	}
}

// The description of the role.
func (o GetRolePermissionTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolePermissionType) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the role. If not provided, `roleId` must be set.
func (o GetRolePermissionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolePermissionType) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRolePermissionTypeOutput) ResourceServerIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolePermissionType) string { return v.ResourceServerIdentifier }).(pulumi.StringOutput)
}

func (o GetRolePermissionTypeOutput) ResourceServerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRolePermissionType) string { return v.ResourceServerName }).(pulumi.StringOutput)
}

type GetRolePermissionTypeArrayOutput struct{ *pulumi.OutputState }

func (GetRolePermissionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRolePermissionType)(nil)).Elem()
}

func (o GetRolePermissionTypeArrayOutput) ToGetRolePermissionTypeArrayOutput() GetRolePermissionTypeArrayOutput {
	return o
}

func (o GetRolePermissionTypeArrayOutput) ToGetRolePermissionTypeArrayOutputWithContext(ctx context.Context) GetRolePermissionTypeArrayOutput {
	return o
}

func (o GetRolePermissionTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRolePermissionType] {
	return pulumix.Output[[]GetRolePermissionType]{
		OutputState: o.OutputState,
	}
}

func (o GetRolePermissionTypeArrayOutput) Index(i pulumi.IntInput) GetRolePermissionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRolePermissionType {
		return vs[0].([]GetRolePermissionType)[vs[1].(int)]
	}).(GetRolePermissionTypeOutput)
}

type GetSigningKeysSigningKey struct {
	Cert        string `pulumi:"cert"`
	Current     bool   `pulumi:"current"`
	Fingerprint string `pulumi:"fingerprint"`
	Kid         string `pulumi:"kid"`
	Next        bool   `pulumi:"next"`
	Pkcs7       string `pulumi:"pkcs7"`
	Previous    bool   `pulumi:"previous"`
	Revoked     bool   `pulumi:"revoked"`
	Thumbprint  string `pulumi:"thumbprint"`
}

// GetSigningKeysSigningKeyInput is an input type that accepts GetSigningKeysSigningKeyArgs and GetSigningKeysSigningKeyOutput values.
// You can construct a concrete instance of `GetSigningKeysSigningKeyInput` via:
//
//	GetSigningKeysSigningKeyArgs{...}
type GetSigningKeysSigningKeyInput interface {
	pulumi.Input

	ToGetSigningKeysSigningKeyOutput() GetSigningKeysSigningKeyOutput
	ToGetSigningKeysSigningKeyOutputWithContext(context.Context) GetSigningKeysSigningKeyOutput
}

type GetSigningKeysSigningKeyArgs struct {
	Cert        pulumi.StringInput `pulumi:"cert"`
	Current     pulumi.BoolInput   `pulumi:"current"`
	Fingerprint pulumi.StringInput `pulumi:"fingerprint"`
	Kid         pulumi.StringInput `pulumi:"kid"`
	Next        pulumi.BoolInput   `pulumi:"next"`
	Pkcs7       pulumi.StringInput `pulumi:"pkcs7"`
	Previous    pulumi.BoolInput   `pulumi:"previous"`
	Revoked     pulumi.BoolInput   `pulumi:"revoked"`
	Thumbprint  pulumi.StringInput `pulumi:"thumbprint"`
}

func (GetSigningKeysSigningKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningKeysSigningKey)(nil)).Elem()
}

func (i GetSigningKeysSigningKeyArgs) ToGetSigningKeysSigningKeyOutput() GetSigningKeysSigningKeyOutput {
	return i.ToGetSigningKeysSigningKeyOutputWithContext(context.Background())
}

func (i GetSigningKeysSigningKeyArgs) ToGetSigningKeysSigningKeyOutputWithContext(ctx context.Context) GetSigningKeysSigningKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSigningKeysSigningKeyOutput)
}

func (i GetSigningKeysSigningKeyArgs) ToOutput(ctx context.Context) pulumix.Output[GetSigningKeysSigningKey] {
	return pulumix.Output[GetSigningKeysSigningKey]{
		OutputState: i.ToGetSigningKeysSigningKeyOutputWithContext(ctx).OutputState,
	}
}

// GetSigningKeysSigningKeyArrayInput is an input type that accepts GetSigningKeysSigningKeyArray and GetSigningKeysSigningKeyArrayOutput values.
// You can construct a concrete instance of `GetSigningKeysSigningKeyArrayInput` via:
//
//	GetSigningKeysSigningKeyArray{ GetSigningKeysSigningKeyArgs{...} }
type GetSigningKeysSigningKeyArrayInput interface {
	pulumi.Input

	ToGetSigningKeysSigningKeyArrayOutput() GetSigningKeysSigningKeyArrayOutput
	ToGetSigningKeysSigningKeyArrayOutputWithContext(context.Context) GetSigningKeysSigningKeyArrayOutput
}

type GetSigningKeysSigningKeyArray []GetSigningKeysSigningKeyInput

func (GetSigningKeysSigningKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSigningKeysSigningKey)(nil)).Elem()
}

func (i GetSigningKeysSigningKeyArray) ToGetSigningKeysSigningKeyArrayOutput() GetSigningKeysSigningKeyArrayOutput {
	return i.ToGetSigningKeysSigningKeyArrayOutputWithContext(context.Background())
}

func (i GetSigningKeysSigningKeyArray) ToGetSigningKeysSigningKeyArrayOutputWithContext(ctx context.Context) GetSigningKeysSigningKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSigningKeysSigningKeyArrayOutput)
}

func (i GetSigningKeysSigningKeyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSigningKeysSigningKey] {
	return pulumix.Output[[]GetSigningKeysSigningKey]{
		OutputState: i.ToGetSigningKeysSigningKeyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSigningKeysSigningKeyOutput struct{ *pulumi.OutputState }

func (GetSigningKeysSigningKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSigningKeysSigningKey)(nil)).Elem()
}

func (o GetSigningKeysSigningKeyOutput) ToGetSigningKeysSigningKeyOutput() GetSigningKeysSigningKeyOutput {
	return o
}

func (o GetSigningKeysSigningKeyOutput) ToGetSigningKeysSigningKeyOutputWithContext(ctx context.Context) GetSigningKeysSigningKeyOutput {
	return o
}

func (o GetSigningKeysSigningKeyOutput) ToOutput(ctx context.Context) pulumix.Output[GetSigningKeysSigningKey] {
	return pulumix.Output[GetSigningKeysSigningKey]{
		OutputState: o.OutputState,
	}
}

func (o GetSigningKeysSigningKeyOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetSigningKeysSigningKey) string { return v.Cert }).(pulumi.StringOutput)
}

func (o GetSigningKeysSigningKeyOutput) Current() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSigningKeysSigningKey) bool { return v.Current }).(pulumi.BoolOutput)
}

func (o GetSigningKeysSigningKeyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSigningKeysSigningKey) string { return v.Fingerprint }).(pulumi.StringOutput)
}

func (o GetSigningKeysSigningKeyOutput) Kid() pulumi.StringOutput {
	return o.ApplyT(func(v GetSigningKeysSigningKey) string { return v.Kid }).(pulumi.StringOutput)
}

func (o GetSigningKeysSigningKeyOutput) Next() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSigningKeysSigningKey) bool { return v.Next }).(pulumi.BoolOutput)
}

func (o GetSigningKeysSigningKeyOutput) Pkcs7() pulumi.StringOutput {
	return o.ApplyT(func(v GetSigningKeysSigningKey) string { return v.Pkcs7 }).(pulumi.StringOutput)
}

func (o GetSigningKeysSigningKeyOutput) Previous() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSigningKeysSigningKey) bool { return v.Previous }).(pulumi.BoolOutput)
}

func (o GetSigningKeysSigningKeyOutput) Revoked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSigningKeysSigningKey) bool { return v.Revoked }).(pulumi.BoolOutput)
}

func (o GetSigningKeysSigningKeyOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSigningKeysSigningKey) string { return v.Thumbprint }).(pulumi.StringOutput)
}

type GetSigningKeysSigningKeyArrayOutput struct{ *pulumi.OutputState }

func (GetSigningKeysSigningKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSigningKeysSigningKey)(nil)).Elem()
}

func (o GetSigningKeysSigningKeyArrayOutput) ToGetSigningKeysSigningKeyArrayOutput() GetSigningKeysSigningKeyArrayOutput {
	return o
}

func (o GetSigningKeysSigningKeyArrayOutput) ToGetSigningKeysSigningKeyArrayOutputWithContext(ctx context.Context) GetSigningKeysSigningKeyArrayOutput {
	return o
}

func (o GetSigningKeysSigningKeyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSigningKeysSigningKey] {
	return pulumix.Output[[]GetSigningKeysSigningKey]{
		OutputState: o.OutputState,
	}
}

func (o GetSigningKeysSigningKeyArrayOutput) Index(i pulumi.IntInput) GetSigningKeysSigningKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSigningKeysSigningKey {
		return vs[0].([]GetSigningKeysSigningKey)[vs[1].(int)]
	}).(GetSigningKeysSigningKeyOutput)
}

type GetTenantFlag struct {
	AllowLegacyDelegationGrantTypes    bool `pulumi:"allowLegacyDelegationGrantTypes"`
	AllowLegacyRoGrantTypes            bool `pulumi:"allowLegacyRoGrantTypes"`
	AllowLegacyTokeninfoEndpoint       bool `pulumi:"allowLegacyTokeninfoEndpoint"`
	DashboardInsightsView              bool `pulumi:"dashboardInsightsView"`
	DashboardLogStreamsNext            bool `pulumi:"dashboardLogStreamsNext"`
	DisableClickjackProtectionHeaders  bool `pulumi:"disableClickjackProtectionHeaders"`
	DisableFieldsMapFix                bool `pulumi:"disableFieldsMapFix"`
	DisableManagementApiSmsObfuscation bool `pulumi:"disableManagementApiSmsObfuscation"`
	EnableAdfsWaadEmailVerification    bool `pulumi:"enableAdfsWaadEmailVerification"`
	EnableApisSection                  bool `pulumi:"enableApisSection"`
	EnableClientConnections            bool `pulumi:"enableClientConnections"`
	EnableCustomDomainInEmails         bool `pulumi:"enableCustomDomainInEmails"`
	EnableDynamicClientRegistration    bool `pulumi:"enableDynamicClientRegistration"`
	EnableIdtokenApi2                  bool `pulumi:"enableIdtokenApi2"`
	EnableLegacyLogsSearchV2           bool `pulumi:"enableLegacyLogsSearchV2"`
	EnableLegacyProfile                bool `pulumi:"enableLegacyProfile"`
	EnablePipeline2                    bool `pulumi:"enablePipeline2"`
	EnablePublicSignupUserExistsError  bool `pulumi:"enablePublicSignupUserExistsError"`
	MfaShowFactorListOnEnrollment      bool `pulumi:"mfaShowFactorListOnEnrollment"`
	NoDiscloseEnterpriseConnections    bool `pulumi:"noDiscloseEnterpriseConnections"`
	RequirePushedAuthorizationRequests bool `pulumi:"requirePushedAuthorizationRequests"`
	RevokeRefreshTokenGrant            bool `pulumi:"revokeRefreshTokenGrant"`
	UseScopeDescriptionsForConsent     bool `pulumi:"useScopeDescriptionsForConsent"`
}

// GetTenantFlagInput is an input type that accepts GetTenantFlagArgs and GetTenantFlagOutput values.
// You can construct a concrete instance of `GetTenantFlagInput` via:
//
//	GetTenantFlagArgs{...}
type GetTenantFlagInput interface {
	pulumi.Input

	ToGetTenantFlagOutput() GetTenantFlagOutput
	ToGetTenantFlagOutputWithContext(context.Context) GetTenantFlagOutput
}

type GetTenantFlagArgs struct {
	AllowLegacyDelegationGrantTypes    pulumi.BoolInput `pulumi:"allowLegacyDelegationGrantTypes"`
	AllowLegacyRoGrantTypes            pulumi.BoolInput `pulumi:"allowLegacyRoGrantTypes"`
	AllowLegacyTokeninfoEndpoint       pulumi.BoolInput `pulumi:"allowLegacyTokeninfoEndpoint"`
	DashboardInsightsView              pulumi.BoolInput `pulumi:"dashboardInsightsView"`
	DashboardLogStreamsNext            pulumi.BoolInput `pulumi:"dashboardLogStreamsNext"`
	DisableClickjackProtectionHeaders  pulumi.BoolInput `pulumi:"disableClickjackProtectionHeaders"`
	DisableFieldsMapFix                pulumi.BoolInput `pulumi:"disableFieldsMapFix"`
	DisableManagementApiSmsObfuscation pulumi.BoolInput `pulumi:"disableManagementApiSmsObfuscation"`
	EnableAdfsWaadEmailVerification    pulumi.BoolInput `pulumi:"enableAdfsWaadEmailVerification"`
	EnableApisSection                  pulumi.BoolInput `pulumi:"enableApisSection"`
	EnableClientConnections            pulumi.BoolInput `pulumi:"enableClientConnections"`
	EnableCustomDomainInEmails         pulumi.BoolInput `pulumi:"enableCustomDomainInEmails"`
	EnableDynamicClientRegistration    pulumi.BoolInput `pulumi:"enableDynamicClientRegistration"`
	EnableIdtokenApi2                  pulumi.BoolInput `pulumi:"enableIdtokenApi2"`
	EnableLegacyLogsSearchV2           pulumi.BoolInput `pulumi:"enableLegacyLogsSearchV2"`
	EnableLegacyProfile                pulumi.BoolInput `pulumi:"enableLegacyProfile"`
	EnablePipeline2                    pulumi.BoolInput `pulumi:"enablePipeline2"`
	EnablePublicSignupUserExistsError  pulumi.BoolInput `pulumi:"enablePublicSignupUserExistsError"`
	MfaShowFactorListOnEnrollment      pulumi.BoolInput `pulumi:"mfaShowFactorListOnEnrollment"`
	NoDiscloseEnterpriseConnections    pulumi.BoolInput `pulumi:"noDiscloseEnterpriseConnections"`
	RequirePushedAuthorizationRequests pulumi.BoolInput `pulumi:"requirePushedAuthorizationRequests"`
	RevokeRefreshTokenGrant            pulumi.BoolInput `pulumi:"revokeRefreshTokenGrant"`
	UseScopeDescriptionsForConsent     pulumi.BoolInput `pulumi:"useScopeDescriptionsForConsent"`
}

func (GetTenantFlagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantFlag)(nil)).Elem()
}

func (i GetTenantFlagArgs) ToGetTenantFlagOutput() GetTenantFlagOutput {
	return i.ToGetTenantFlagOutputWithContext(context.Background())
}

func (i GetTenantFlagArgs) ToGetTenantFlagOutputWithContext(ctx context.Context) GetTenantFlagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantFlagOutput)
}

func (i GetTenantFlagArgs) ToOutput(ctx context.Context) pulumix.Output[GetTenantFlag] {
	return pulumix.Output[GetTenantFlag]{
		OutputState: i.ToGetTenantFlagOutputWithContext(ctx).OutputState,
	}
}

// GetTenantFlagArrayInput is an input type that accepts GetTenantFlagArray and GetTenantFlagArrayOutput values.
// You can construct a concrete instance of `GetTenantFlagArrayInput` via:
//
//	GetTenantFlagArray{ GetTenantFlagArgs{...} }
type GetTenantFlagArrayInput interface {
	pulumi.Input

	ToGetTenantFlagArrayOutput() GetTenantFlagArrayOutput
	ToGetTenantFlagArrayOutputWithContext(context.Context) GetTenantFlagArrayOutput
}

type GetTenantFlagArray []GetTenantFlagInput

func (GetTenantFlagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantFlag)(nil)).Elem()
}

func (i GetTenantFlagArray) ToGetTenantFlagArrayOutput() GetTenantFlagArrayOutput {
	return i.ToGetTenantFlagArrayOutputWithContext(context.Background())
}

func (i GetTenantFlagArray) ToGetTenantFlagArrayOutputWithContext(ctx context.Context) GetTenantFlagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantFlagArrayOutput)
}

func (i GetTenantFlagArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTenantFlag] {
	return pulumix.Output[[]GetTenantFlag]{
		OutputState: i.ToGetTenantFlagArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTenantFlagOutput struct{ *pulumi.OutputState }

func (GetTenantFlagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantFlag)(nil)).Elem()
}

func (o GetTenantFlagOutput) ToGetTenantFlagOutput() GetTenantFlagOutput {
	return o
}

func (o GetTenantFlagOutput) ToGetTenantFlagOutputWithContext(ctx context.Context) GetTenantFlagOutput {
	return o
}

func (o GetTenantFlagOutput) ToOutput(ctx context.Context) pulumix.Output[GetTenantFlag] {
	return pulumix.Output[GetTenantFlag]{
		OutputState: o.OutputState,
	}
}

func (o GetTenantFlagOutput) AllowLegacyDelegationGrantTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.AllowLegacyDelegationGrantTypes }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) AllowLegacyRoGrantTypes() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.AllowLegacyRoGrantTypes }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) AllowLegacyTokeninfoEndpoint() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.AllowLegacyTokeninfoEndpoint }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) DashboardInsightsView() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.DashboardInsightsView }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) DashboardLogStreamsNext() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.DashboardLogStreamsNext }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) DisableClickjackProtectionHeaders() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.DisableClickjackProtectionHeaders }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) DisableFieldsMapFix() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.DisableFieldsMapFix }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) DisableManagementApiSmsObfuscation() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.DisableManagementApiSmsObfuscation }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) EnableAdfsWaadEmailVerification() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.EnableAdfsWaadEmailVerification }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) EnableApisSection() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.EnableApisSection }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) EnableClientConnections() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.EnableClientConnections }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) EnableCustomDomainInEmails() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.EnableCustomDomainInEmails }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) EnableDynamicClientRegistration() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.EnableDynamicClientRegistration }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) EnableIdtokenApi2() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.EnableIdtokenApi2 }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) EnableLegacyLogsSearchV2() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.EnableLegacyLogsSearchV2 }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) EnableLegacyProfile() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.EnableLegacyProfile }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) EnablePipeline2() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.EnablePipeline2 }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) EnablePublicSignupUserExistsError() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.EnablePublicSignupUserExistsError }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) MfaShowFactorListOnEnrollment() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.MfaShowFactorListOnEnrollment }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) NoDiscloseEnterpriseConnections() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.NoDiscloseEnterpriseConnections }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) RequirePushedAuthorizationRequests() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.RequirePushedAuthorizationRequests }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) RevokeRefreshTokenGrant() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.RevokeRefreshTokenGrant }).(pulumi.BoolOutput)
}

func (o GetTenantFlagOutput) UseScopeDescriptionsForConsent() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantFlag) bool { return v.UseScopeDescriptionsForConsent }).(pulumi.BoolOutput)
}

type GetTenantFlagArrayOutput struct{ *pulumi.OutputState }

func (GetTenantFlagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantFlag)(nil)).Elem()
}

func (o GetTenantFlagArrayOutput) ToGetTenantFlagArrayOutput() GetTenantFlagArrayOutput {
	return o
}

func (o GetTenantFlagArrayOutput) ToGetTenantFlagArrayOutputWithContext(ctx context.Context) GetTenantFlagArrayOutput {
	return o
}

func (o GetTenantFlagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTenantFlag] {
	return pulumix.Output[[]GetTenantFlag]{
		OutputState: o.OutputState,
	}
}

func (o GetTenantFlagArrayOutput) Index(i pulumi.IntInput) GetTenantFlagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantFlag {
		return vs[0].([]GetTenantFlag)[vs[1].(int)]
	}).(GetTenantFlagOutput)
}

type GetTenantSession struct {
	OidcLogoutPromptEnabled bool `pulumi:"oidcLogoutPromptEnabled"`
}

// GetTenantSessionInput is an input type that accepts GetTenantSessionArgs and GetTenantSessionOutput values.
// You can construct a concrete instance of `GetTenantSessionInput` via:
//
//	GetTenantSessionArgs{...}
type GetTenantSessionInput interface {
	pulumi.Input

	ToGetTenantSessionOutput() GetTenantSessionOutput
	ToGetTenantSessionOutputWithContext(context.Context) GetTenantSessionOutput
}

type GetTenantSessionArgs struct {
	OidcLogoutPromptEnabled pulumi.BoolInput `pulumi:"oidcLogoutPromptEnabled"`
}

func (GetTenantSessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantSession)(nil)).Elem()
}

func (i GetTenantSessionArgs) ToGetTenantSessionOutput() GetTenantSessionOutput {
	return i.ToGetTenantSessionOutputWithContext(context.Background())
}

func (i GetTenantSessionArgs) ToGetTenantSessionOutputWithContext(ctx context.Context) GetTenantSessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantSessionOutput)
}

func (i GetTenantSessionArgs) ToOutput(ctx context.Context) pulumix.Output[GetTenantSession] {
	return pulumix.Output[GetTenantSession]{
		OutputState: i.ToGetTenantSessionOutputWithContext(ctx).OutputState,
	}
}

// GetTenantSessionArrayInput is an input type that accepts GetTenantSessionArray and GetTenantSessionArrayOutput values.
// You can construct a concrete instance of `GetTenantSessionArrayInput` via:
//
//	GetTenantSessionArray{ GetTenantSessionArgs{...} }
type GetTenantSessionArrayInput interface {
	pulumi.Input

	ToGetTenantSessionArrayOutput() GetTenantSessionArrayOutput
	ToGetTenantSessionArrayOutputWithContext(context.Context) GetTenantSessionArrayOutput
}

type GetTenantSessionArray []GetTenantSessionInput

func (GetTenantSessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantSession)(nil)).Elem()
}

func (i GetTenantSessionArray) ToGetTenantSessionArrayOutput() GetTenantSessionArrayOutput {
	return i.ToGetTenantSessionArrayOutputWithContext(context.Background())
}

func (i GetTenantSessionArray) ToGetTenantSessionArrayOutputWithContext(ctx context.Context) GetTenantSessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantSessionArrayOutput)
}

func (i GetTenantSessionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTenantSession] {
	return pulumix.Output[[]GetTenantSession]{
		OutputState: i.ToGetTenantSessionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTenantSessionOutput struct{ *pulumi.OutputState }

func (GetTenantSessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantSession)(nil)).Elem()
}

func (o GetTenantSessionOutput) ToGetTenantSessionOutput() GetTenantSessionOutput {
	return o
}

func (o GetTenantSessionOutput) ToGetTenantSessionOutputWithContext(ctx context.Context) GetTenantSessionOutput {
	return o
}

func (o GetTenantSessionOutput) ToOutput(ctx context.Context) pulumix.Output[GetTenantSession] {
	return pulumix.Output[GetTenantSession]{
		OutputState: o.OutputState,
	}
}

func (o GetTenantSessionOutput) OidcLogoutPromptEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTenantSession) bool { return v.OidcLogoutPromptEnabled }).(pulumi.BoolOutput)
}

type GetTenantSessionArrayOutput struct{ *pulumi.OutputState }

func (GetTenantSessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantSession)(nil)).Elem()
}

func (o GetTenantSessionArrayOutput) ToGetTenantSessionArrayOutput() GetTenantSessionArrayOutput {
	return o
}

func (o GetTenantSessionArrayOutput) ToGetTenantSessionArrayOutputWithContext(ctx context.Context) GetTenantSessionArrayOutput {
	return o
}

func (o GetTenantSessionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTenantSession] {
	return pulumix.Output[[]GetTenantSession]{
		OutputState: o.OutputState,
	}
}

func (o GetTenantSessionArrayOutput) Index(i pulumi.IntInput) GetTenantSessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantSession {
		return vs[0].([]GetTenantSession)[vs[1].(int)]
	}).(GetTenantSessionOutput)
}

type GetTenantSessionCooky struct {
	Mode string `pulumi:"mode"`
}

// GetTenantSessionCookyInput is an input type that accepts GetTenantSessionCookyArgs and GetTenantSessionCookyOutput values.
// You can construct a concrete instance of `GetTenantSessionCookyInput` via:
//
//	GetTenantSessionCookyArgs{...}
type GetTenantSessionCookyInput interface {
	pulumi.Input

	ToGetTenantSessionCookyOutput() GetTenantSessionCookyOutput
	ToGetTenantSessionCookyOutputWithContext(context.Context) GetTenantSessionCookyOutput
}

type GetTenantSessionCookyArgs struct {
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetTenantSessionCookyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantSessionCooky)(nil)).Elem()
}

func (i GetTenantSessionCookyArgs) ToGetTenantSessionCookyOutput() GetTenantSessionCookyOutput {
	return i.ToGetTenantSessionCookyOutputWithContext(context.Background())
}

func (i GetTenantSessionCookyArgs) ToGetTenantSessionCookyOutputWithContext(ctx context.Context) GetTenantSessionCookyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantSessionCookyOutput)
}

func (i GetTenantSessionCookyArgs) ToOutput(ctx context.Context) pulumix.Output[GetTenantSessionCooky] {
	return pulumix.Output[GetTenantSessionCooky]{
		OutputState: i.ToGetTenantSessionCookyOutputWithContext(ctx).OutputState,
	}
}

// GetTenantSessionCookyArrayInput is an input type that accepts GetTenantSessionCookyArray and GetTenantSessionCookyArrayOutput values.
// You can construct a concrete instance of `GetTenantSessionCookyArrayInput` via:
//
//	GetTenantSessionCookyArray{ GetTenantSessionCookyArgs{...} }
type GetTenantSessionCookyArrayInput interface {
	pulumi.Input

	ToGetTenantSessionCookyArrayOutput() GetTenantSessionCookyArrayOutput
	ToGetTenantSessionCookyArrayOutputWithContext(context.Context) GetTenantSessionCookyArrayOutput
}

type GetTenantSessionCookyArray []GetTenantSessionCookyInput

func (GetTenantSessionCookyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantSessionCooky)(nil)).Elem()
}

func (i GetTenantSessionCookyArray) ToGetTenantSessionCookyArrayOutput() GetTenantSessionCookyArrayOutput {
	return i.ToGetTenantSessionCookyArrayOutputWithContext(context.Background())
}

func (i GetTenantSessionCookyArray) ToGetTenantSessionCookyArrayOutputWithContext(ctx context.Context) GetTenantSessionCookyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTenantSessionCookyArrayOutput)
}

func (i GetTenantSessionCookyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTenantSessionCooky] {
	return pulumix.Output[[]GetTenantSessionCooky]{
		OutputState: i.ToGetTenantSessionCookyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTenantSessionCookyOutput struct{ *pulumi.OutputState }

func (GetTenantSessionCookyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTenantSessionCooky)(nil)).Elem()
}

func (o GetTenantSessionCookyOutput) ToGetTenantSessionCookyOutput() GetTenantSessionCookyOutput {
	return o
}

func (o GetTenantSessionCookyOutput) ToGetTenantSessionCookyOutputWithContext(ctx context.Context) GetTenantSessionCookyOutput {
	return o
}

func (o GetTenantSessionCookyOutput) ToOutput(ctx context.Context) pulumix.Output[GetTenantSessionCooky] {
	return pulumix.Output[GetTenantSessionCooky]{
		OutputState: o.OutputState,
	}
}

func (o GetTenantSessionCookyOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetTenantSessionCooky) string { return v.Mode }).(pulumi.StringOutput)
}

type GetTenantSessionCookyArrayOutput struct{ *pulumi.OutputState }

func (GetTenantSessionCookyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTenantSessionCooky)(nil)).Elem()
}

func (o GetTenantSessionCookyArrayOutput) ToGetTenantSessionCookyArrayOutput() GetTenantSessionCookyArrayOutput {
	return o
}

func (o GetTenantSessionCookyArrayOutput) ToGetTenantSessionCookyArrayOutputWithContext(ctx context.Context) GetTenantSessionCookyArrayOutput {
	return o
}

func (o GetTenantSessionCookyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTenantSessionCooky] {
	return pulumix.Output[[]GetTenantSessionCooky]{
		OutputState: o.OutputState,
	}
}

func (o GetTenantSessionCookyArrayOutput) Index(i pulumi.IntInput) GetTenantSessionCookyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTenantSessionCooky {
		return vs[0].([]GetTenantSessionCooky)[vs[1].(int)]
	}).(GetTenantSessionCookyOutput)
}

type GetUserPermissionType struct {
	Description string `pulumi:"description"`
	// Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).
	Name                     string `pulumi:"name"`
	ResourceServerIdentifier string `pulumi:"resourceServerIdentifier"`
	ResourceServerName       string `pulumi:"resourceServerName"`
}

// GetUserPermissionTypeInput is an input type that accepts GetUserPermissionTypeArgs and GetUserPermissionTypeOutput values.
// You can construct a concrete instance of `GetUserPermissionTypeInput` via:
//
//	GetUserPermissionTypeArgs{...}
type GetUserPermissionTypeInput interface {
	pulumi.Input

	ToGetUserPermissionTypeOutput() GetUserPermissionTypeOutput
	ToGetUserPermissionTypeOutputWithContext(context.Context) GetUserPermissionTypeOutput
}

type GetUserPermissionTypeArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	// Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).
	Name                     pulumi.StringInput `pulumi:"name"`
	ResourceServerIdentifier pulumi.StringInput `pulumi:"resourceServerIdentifier"`
	ResourceServerName       pulumi.StringInput `pulumi:"resourceServerName"`
}

func (GetUserPermissionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPermissionType)(nil)).Elem()
}

func (i GetUserPermissionTypeArgs) ToGetUserPermissionTypeOutput() GetUserPermissionTypeOutput {
	return i.ToGetUserPermissionTypeOutputWithContext(context.Background())
}

func (i GetUserPermissionTypeArgs) ToGetUserPermissionTypeOutputWithContext(ctx context.Context) GetUserPermissionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPermissionTypeOutput)
}

func (i GetUserPermissionTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetUserPermissionType] {
	return pulumix.Output[GetUserPermissionType]{
		OutputState: i.ToGetUserPermissionTypeOutputWithContext(ctx).OutputState,
	}
}

// GetUserPermissionTypeArrayInput is an input type that accepts GetUserPermissionTypeArray and GetUserPermissionTypeArrayOutput values.
// You can construct a concrete instance of `GetUserPermissionTypeArrayInput` via:
//
//	GetUserPermissionTypeArray{ GetUserPermissionTypeArgs{...} }
type GetUserPermissionTypeArrayInput interface {
	pulumi.Input

	ToGetUserPermissionTypeArrayOutput() GetUserPermissionTypeArrayOutput
	ToGetUserPermissionTypeArrayOutputWithContext(context.Context) GetUserPermissionTypeArrayOutput
}

type GetUserPermissionTypeArray []GetUserPermissionTypeInput

func (GetUserPermissionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserPermissionType)(nil)).Elem()
}

func (i GetUserPermissionTypeArray) ToGetUserPermissionTypeArrayOutput() GetUserPermissionTypeArrayOutput {
	return i.ToGetUserPermissionTypeArrayOutputWithContext(context.Background())
}

func (i GetUserPermissionTypeArray) ToGetUserPermissionTypeArrayOutputWithContext(ctx context.Context) GetUserPermissionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPermissionTypeArrayOutput)
}

func (i GetUserPermissionTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetUserPermissionType] {
	return pulumix.Output[[]GetUserPermissionType]{
		OutputState: i.ToGetUserPermissionTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetUserPermissionTypeOutput struct{ *pulumi.OutputState }

func (GetUserPermissionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPermissionType)(nil)).Elem()
}

func (o GetUserPermissionTypeOutput) ToGetUserPermissionTypeOutput() GetUserPermissionTypeOutput {
	return o
}

func (o GetUserPermissionTypeOutput) ToGetUserPermissionTypeOutputWithContext(ctx context.Context) GetUserPermissionTypeOutput {
	return o
}

func (o GetUserPermissionTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetUserPermissionType] {
	return pulumix.Output[GetUserPermissionType]{
		OutputState: o.OutputState,
	}
}

func (o GetUserPermissionTypeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPermissionType) string { return v.Description }).(pulumi.StringOutput)
}

// Name of the user. This value can only be updated if the connection is a database connection (using the Auth0 store), a passwordless connection (email or sms) or has disabled 'Sync user profile attributes at each login'. For more information, see: [Configure Identity Provider Connection for User Profile Updates](https://auth0.com/docs/manage-users/user-accounts/user-profiles/configure-connection-sync-with-auth0).
func (o GetUserPermissionTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPermissionType) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetUserPermissionTypeOutput) ResourceServerIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPermissionType) string { return v.ResourceServerIdentifier }).(pulumi.StringOutput)
}

func (o GetUserPermissionTypeOutput) ResourceServerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPermissionType) string { return v.ResourceServerName }).(pulumi.StringOutput)
}

type GetUserPermissionTypeArrayOutput struct{ *pulumi.OutputState }

func (GetUserPermissionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserPermissionType)(nil)).Elem()
}

func (o GetUserPermissionTypeArrayOutput) ToGetUserPermissionTypeArrayOutput() GetUserPermissionTypeArrayOutput {
	return o
}

func (o GetUserPermissionTypeArrayOutput) ToGetUserPermissionTypeArrayOutputWithContext(ctx context.Context) GetUserPermissionTypeArrayOutput {
	return o
}

func (o GetUserPermissionTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetUserPermissionType] {
	return pulumix.Output[[]GetUserPermissionType]{
		OutputState: o.OutputState,
	}
}

func (o GetUserPermissionTypeArrayOutput) Index(i pulumi.IntInput) GetUserPermissionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserPermissionType {
		return vs[0].([]GetUserPermissionType)[vs[1].(int)]
	}).(GetUserPermissionTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionDependencyInput)(nil)).Elem(), ActionDependencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionDependencyArrayInput)(nil)).Elem(), ActionDependencyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSecretInput)(nil)).Elem(), ActionSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSecretArrayInput)(nil)).Elem(), ActionSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSupportedTriggersInput)(nil)).Elem(), ActionSupportedTriggersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionSupportedTriggersPtrInput)(nil)).Elem(), ActionSupportedTriggersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionInput)(nil)).Elem(), AttackProtectionBreachedPasswordDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPtrInput)(nil)).Elem(), AttackProtectionBreachedPasswordDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPreUserRegistrationInput)(nil)).Elem(), AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrInput)(nil)).Elem(), AttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBruteForceProtectionInput)(nil)).Elem(), AttackProtectionBruteForceProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionBruteForceProtectionPtrInput)(nil)).Elem(), AttackProtectionBruteForceProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPtrInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLoginInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreLoginPtrInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrInput)(nil)).Elem(), AttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingColorsInput)(nil)).Elem(), BrandingColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingColorsPtrInput)(nil)).Elem(), BrandingColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingFontInput)(nil)).Elem(), BrandingFontArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingFontPtrInput)(nil)).Elem(), BrandingFontArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeBordersInput)(nil)).Elem(), BrandingThemeBordersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeBordersPtrInput)(nil)).Elem(), BrandingThemeBordersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeColorsInput)(nil)).Elem(), BrandingThemeColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeColorsPtrInput)(nil)).Elem(), BrandingThemeColorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsInput)(nil)).Elem(), BrandingThemeFontsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsPtrInput)(nil)).Elem(), BrandingThemeFontsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsBodyTextInput)(nil)).Elem(), BrandingThemeFontsBodyTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsBodyTextPtrInput)(nil)).Elem(), BrandingThemeFontsBodyTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsButtonsTextInput)(nil)).Elem(), BrandingThemeFontsButtonsTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsButtonsTextPtrInput)(nil)).Elem(), BrandingThemeFontsButtonsTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsInputLabelsInput)(nil)).Elem(), BrandingThemeFontsInputLabelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsInputLabelsPtrInput)(nil)).Elem(), BrandingThemeFontsInputLabelsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsLinksInput)(nil)).Elem(), BrandingThemeFontsLinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsLinksPtrInput)(nil)).Elem(), BrandingThemeFontsLinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsSubtitleInput)(nil)).Elem(), BrandingThemeFontsSubtitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsSubtitlePtrInput)(nil)).Elem(), BrandingThemeFontsSubtitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsTitleInput)(nil)).Elem(), BrandingThemeFontsTitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeFontsTitlePtrInput)(nil)).Elem(), BrandingThemeFontsTitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemePageBackgroundInput)(nil)).Elem(), BrandingThemePageBackgroundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemePageBackgroundPtrInput)(nil)).Elem(), BrandingThemePageBackgroundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeWidgetInput)(nil)).Elem(), BrandingThemeWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingThemeWidgetPtrInput)(nil)).Elem(), BrandingThemeWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingUniversalLoginInput)(nil)).Elem(), BrandingUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BrandingUniversalLoginPtrInput)(nil)).Elem(), BrandingUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsInput)(nil)).Elem(), ClientAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsPtrInput)(nil)).Elem(), ClientAddonsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsAwsInput)(nil)).Elem(), ClientAddonsAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsAwsPtrInput)(nil)).Elem(), ClientAddonsAwsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsAzureBlobInput)(nil)).Elem(), ClientAddonsAzureBlobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsAzureBlobPtrInput)(nil)).Elem(), ClientAddonsAzureBlobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsAzureSbInput)(nil)).Elem(), ClientAddonsAzureSbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsAzureSbPtrInput)(nil)).Elem(), ClientAddonsAzureSbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsBoxInput)(nil)).Elem(), ClientAddonsBoxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsBoxPtrInput)(nil)).Elem(), ClientAddonsBoxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsCloudbeesInput)(nil)).Elem(), ClientAddonsCloudbeesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsCloudbeesPtrInput)(nil)).Elem(), ClientAddonsCloudbeesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsConcurInput)(nil)).Elem(), ClientAddonsConcurArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsConcurPtrInput)(nil)).Elem(), ClientAddonsConcurArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsDropboxInput)(nil)).Elem(), ClientAddonsDropboxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsDropboxPtrInput)(nil)).Elem(), ClientAddonsDropboxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsEchosignInput)(nil)).Elem(), ClientAddonsEchosignArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsEchosignPtrInput)(nil)).Elem(), ClientAddonsEchosignArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsEgnyteInput)(nil)).Elem(), ClientAddonsEgnyteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsEgnytePtrInput)(nil)).Elem(), ClientAddonsEgnyteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsFirebaseInput)(nil)).Elem(), ClientAddonsFirebaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsFirebasePtrInput)(nil)).Elem(), ClientAddonsFirebaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsLayerInput)(nil)).Elem(), ClientAddonsLayerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsLayerPtrInput)(nil)).Elem(), ClientAddonsLayerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsMscrmInput)(nil)).Elem(), ClientAddonsMscrmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsMscrmPtrInput)(nil)).Elem(), ClientAddonsMscrmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsNewrelicInput)(nil)).Elem(), ClientAddonsNewrelicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsNewrelicPtrInput)(nil)).Elem(), ClientAddonsNewrelicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsOffice365Input)(nil)).Elem(), ClientAddonsOffice365Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsOffice365PtrInput)(nil)).Elem(), ClientAddonsOffice365Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsRmsInput)(nil)).Elem(), ClientAddonsRmsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsRmsPtrInput)(nil)).Elem(), ClientAddonsRmsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSalesforceInput)(nil)).Elem(), ClientAddonsSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSalesforcePtrInput)(nil)).Elem(), ClientAddonsSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSalesforceApiInput)(nil)).Elem(), ClientAddonsSalesforceApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSalesforceApiPtrInput)(nil)).Elem(), ClientAddonsSalesforceApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSalesforceSandboxApiInput)(nil)).Elem(), ClientAddonsSalesforceSandboxApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSalesforceSandboxApiPtrInput)(nil)).Elem(), ClientAddonsSalesforceSandboxApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSamlpInput)(nil)).Elem(), ClientAddonsSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSamlpPtrInput)(nil)).Elem(), ClientAddonsSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSamlpLogoutInput)(nil)).Elem(), ClientAddonsSamlpLogoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSamlpLogoutPtrInput)(nil)).Elem(), ClientAddonsSamlpLogoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSapApiInput)(nil)).Elem(), ClientAddonsSapApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSapApiPtrInput)(nil)).Elem(), ClientAddonsSapApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSentryInput)(nil)).Elem(), ClientAddonsSentryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSentryPtrInput)(nil)).Elem(), ClientAddonsSentryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSharepointInput)(nil)).Elem(), ClientAddonsSharepointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSharepointPtrInput)(nil)).Elem(), ClientAddonsSharepointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSlackInput)(nil)).Elem(), ClientAddonsSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSlackPtrInput)(nil)).Elem(), ClientAddonsSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSpringcmInput)(nil)).Elem(), ClientAddonsSpringcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSpringcmPtrInput)(nil)).Elem(), ClientAddonsSpringcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSsoIntegrationInput)(nil)).Elem(), ClientAddonsSsoIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsSsoIntegrationPtrInput)(nil)).Elem(), ClientAddonsSsoIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsWamsInput)(nil)).Elem(), ClientAddonsWamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsWamsPtrInput)(nil)).Elem(), ClientAddonsWamsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsWsfedInput)(nil)).Elem(), ClientAddonsWsfedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsWsfedPtrInput)(nil)).Elem(), ClientAddonsWsfedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsZendeskInput)(nil)).Elem(), ClientAddonsZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsZendeskPtrInput)(nil)).Elem(), ClientAddonsZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsZoomInput)(nil)).Elem(), ClientAddonsZoomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientAddonsZoomPtrInput)(nil)).Elem(), ClientAddonsZoomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientCredentialsPrivateKeyJwtInput)(nil)).Elem(), ClientCredentialsPrivateKeyJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientCredentialsPrivateKeyJwtPtrInput)(nil)).Elem(), ClientCredentialsPrivateKeyJwtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientCredentialsPrivateKeyJwtCredentialInput)(nil)).Elem(), ClientCredentialsPrivateKeyJwtCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientCredentialsPrivateKeyJwtCredentialArrayInput)(nil)).Elem(), ClientCredentialsPrivateKeyJwtCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientJwtConfigurationInput)(nil)).Elem(), ClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientJwtConfigurationPtrInput)(nil)).Elem(), ClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileInput)(nil)).Elem(), ClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobilePtrInput)(nil)).Elem(), ClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileAndroidInput)(nil)).Elem(), ClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileAndroidPtrInput)(nil)).Elem(), ClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileIosInput)(nil)).Elem(), ClientMobileIosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientMobileIosPtrInput)(nil)).Elem(), ClientMobileIosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginInput)(nil)).Elem(), ClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginPtrInput)(nil)).Elem(), ClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginAppleInput)(nil)).Elem(), ClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginApplePtrInput)(nil)).Elem(), ClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginFacebookInput)(nil)).Elem(), ClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientNativeSocialLoginFacebookPtrInput)(nil)).Elem(), ClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientRefreshTokenInput)(nil)).Elem(), ClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientRefreshTokenPtrInput)(nil)).Elem(), ClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsInput)(nil)).Elem(), ConnectionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPtrInput)(nil)).Elem(), ConnectionOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsAttributeMapInput)(nil)).Elem(), ConnectionOptionsAttributeMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsAttributeMapPtrInput)(nil)).Elem(), ConnectionOptionsAttributeMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsConnectionSettingsInput)(nil)).Elem(), ConnectionOptionsConnectionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsConnectionSettingsPtrInput)(nil)).Elem(), ConnectionOptionsConnectionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsDecryptionKeyInput)(nil)).Elem(), ConnectionOptionsDecryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsDecryptionKeyPtrInput)(nil)).Elem(), ConnectionOptionsDecryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsGatewayAuthenticationInput)(nil)).Elem(), ConnectionOptionsGatewayAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsGatewayAuthenticationPtrInput)(nil)).Elem(), ConnectionOptionsGatewayAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsIdpInitiatedInput)(nil)).Elem(), ConnectionOptionsIdpInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsIdpInitiatedPtrInput)(nil)).Elem(), ConnectionOptionsIdpInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsMfaInput)(nil)).Elem(), ConnectionOptionsMfaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsMfaPtrInput)(nil)).Elem(), ConnectionOptionsMfaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptionsInput)(nil)).Elem(), ConnectionOptionsPasswordComplexityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordComplexityOptionsPtrInput)(nil)).Elem(), ConnectionOptionsPasswordComplexityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordDictionaryInput)(nil)).Elem(), ConnectionOptionsPasswordDictionaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordDictionaryPtrInput)(nil)).Elem(), ConnectionOptionsPasswordDictionaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordHistoryInput)(nil)).Elem(), ConnectionOptionsPasswordHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordHistoryArrayInput)(nil)).Elem(), ConnectionOptionsPasswordHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfoInput)(nil)).Elem(), ConnectionOptionsPasswordNoPersonalInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsPasswordNoPersonalInfoPtrInput)(nil)).Elem(), ConnectionOptionsPasswordNoPersonalInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsSigningKeyInput)(nil)).Elem(), ConnectionOptionsSigningKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsSigningKeyPtrInput)(nil)).Elem(), ConnectionOptionsSigningKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsTotpInput)(nil)).Elem(), ConnectionOptionsTotpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsTotpPtrInput)(nil)).Elem(), ConnectionOptionsTotpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationInput)(nil)).Elem(), ConnectionOptionsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationPtrInput)(nil)).Elem(), ConnectionOptionsValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationUsernameInput)(nil)).Elem(), ConnectionOptionsValidationUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionOptionsValidationUsernamePtrInput)(nil)).Elem(), ConnectionOptionsValidationUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainVerificationTypeInput)(nil)).Elem(), CustomDomainVerificationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainVerificationTypeArrayInput)(nil)).Elem(), CustomDomainVerificationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailProviderCredentialsInput)(nil)).Elem(), EmailProviderCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailProviderCredentialsPtrInput)(nil)).Elem(), EmailProviderCredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailProviderSettingsInput)(nil)).Elem(), EmailProviderSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailProviderSettingsPtrInput)(nil)).Elem(), EmailProviderSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailProviderSettingsHeadersInput)(nil)).Elem(), EmailProviderSettingsHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailProviderSettingsHeadersPtrInput)(nil)).Elem(), EmailProviderSettingsHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailProviderSettingsMessageInput)(nil)).Elem(), EmailProviderSettingsMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailProviderSettingsMessagePtrInput)(nil)).Elem(), EmailProviderSettingsMessageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianDuoInput)(nil)).Elem(), GuardianDuoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianDuoPtrInput)(nil)).Elem(), GuardianDuoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhoneInput)(nil)).Elem(), GuardianPhoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhonePtrInput)(nil)).Elem(), GuardianPhoneArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhoneOptionsInput)(nil)).Elem(), GuardianPhoneOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPhoneOptionsPtrInput)(nil)).Elem(), GuardianPhoneOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushInput)(nil)).Elem(), GuardianPushArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushPtrInput)(nil)).Elem(), GuardianPushArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushAmazonSnsInput)(nil)).Elem(), GuardianPushAmazonSnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushAmazonSnsPtrInput)(nil)).Elem(), GuardianPushAmazonSnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushCustomAppInput)(nil)).Elem(), GuardianPushCustomAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushCustomAppPtrInput)(nil)).Elem(), GuardianPushCustomAppArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushDirectApnsInput)(nil)).Elem(), GuardianPushDirectApnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushDirectApnsPtrInput)(nil)).Elem(), GuardianPushDirectApnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushDirectFcmInput)(nil)).Elem(), GuardianPushDirectFcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianPushDirectFcmPtrInput)(nil)).Elem(), GuardianPushDirectFcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianWebauthnPlatformInput)(nil)).Elem(), GuardianWebauthnPlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianWebauthnPlatformPtrInput)(nil)).Elem(), GuardianWebauthnPlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianWebauthnRoamingInput)(nil)).Elem(), GuardianWebauthnRoamingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GuardianWebauthnRoamingPtrInput)(nil)).Elem(), GuardianWebauthnRoamingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogStreamSinkInput)(nil)).Elem(), LogStreamSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogStreamSinkPtrInput)(nil)).Elem(), LogStreamSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationBrandingInput)(nil)).Elem(), OrganizationBrandingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationBrandingPtrInput)(nil)).Elem(), OrganizationBrandingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConnectionsEnabledConnectionInput)(nil)).Elem(), OrganizationConnectionsEnabledConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConnectionsEnabledConnectionArrayInput)(nil)).Elem(), OrganizationConnectionsEnabledConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagesChangePasswordInput)(nil)).Elem(), PagesChangePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagesChangePasswordPtrInput)(nil)).Elem(), PagesChangePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagesErrorInput)(nil)).Elem(), PagesErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagesErrorPtrInput)(nil)).Elem(), PagesErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagesGuardianMfaInput)(nil)).Elem(), PagesGuardianMfaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagesGuardianMfaPtrInput)(nil)).Elem(), PagesGuardianMfaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagesLoginInput)(nil)).Elem(), PagesLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagesLoginPtrInput)(nil)).Elem(), PagesLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceServerScopesScopeInput)(nil)).Elem(), ResourceServerScopesScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceServerScopesScopeArrayInput)(nil)).Elem(), ResourceServerScopesScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePermissionsPermissionInput)(nil)).Elem(), RolePermissionsPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePermissionsPermissionArrayInput)(nil)).Elem(), RolePermissionsPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantFlagsInput)(nil)).Elem(), TenantFlagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantFlagsPtrInput)(nil)).Elem(), TenantFlagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantSessionCookieInput)(nil)).Elem(), TenantSessionCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantSessionCookiePtrInput)(nil)).Elem(), TenantSessionCookieArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantSessionsInput)(nil)).Elem(), TenantSessionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TenantSessionsPtrInput)(nil)).Elem(), TenantSessionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerActionsActionInput)(nil)).Elem(), TriggerActionsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TriggerActionsActionArrayInput)(nil)).Elem(), TriggerActionsActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPermissionsPermissionInput)(nil)).Elem(), UserPermissionsPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPermissionsPermissionArrayInput)(nil)).Elem(), UserPermissionsPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionBreachedPasswordDetectionInput)(nil)).Elem(), GetAttackProtectionBreachedPasswordDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionBreachedPasswordDetectionArrayInput)(nil)).Elem(), GetAttackProtectionBreachedPasswordDetectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationInput)(nil)).Elem(), GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayInput)(nil)).Elem(), GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionBruteForceProtectionInput)(nil)).Elem(), GetAttackProtectionBruteForceProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionBruteForceProtectionArrayInput)(nil)).Elem(), GetAttackProtectionBruteForceProtectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottlingInput)(nil)).Elem(), GetAttackProtectionSuspiciousIpThrottlingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottlingArrayInput)(nil)).Elem(), GetAttackProtectionSuspiciousIpThrottlingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottlingPreLoginInput)(nil)).Elem(), GetAttackProtectionSuspiciousIpThrottlingPreLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayInput)(nil)).Elem(), GetAttackProtectionSuspiciousIpThrottlingPreLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationInput)(nil)).Elem(), GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayInput)(nil)).Elem(), GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingColorInput)(nil)).Elem(), GetBrandingColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingColorArrayInput)(nil)).Elem(), GetBrandingColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingFontInput)(nil)).Elem(), GetBrandingFontArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingFontArrayInput)(nil)).Elem(), GetBrandingFontArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeBorderInput)(nil)).Elem(), GetBrandingThemeBorderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeBorderArrayInput)(nil)).Elem(), GetBrandingThemeBorderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeColorInput)(nil)).Elem(), GetBrandingThemeColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeColorArrayInput)(nil)).Elem(), GetBrandingThemeColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontInput)(nil)).Elem(), GetBrandingThemeFontArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontArrayInput)(nil)).Elem(), GetBrandingThemeFontArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontBodyTextInput)(nil)).Elem(), GetBrandingThemeFontBodyTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontBodyTextArrayInput)(nil)).Elem(), GetBrandingThemeFontBodyTextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontButtonsTextInput)(nil)).Elem(), GetBrandingThemeFontButtonsTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontButtonsTextArrayInput)(nil)).Elem(), GetBrandingThemeFontButtonsTextArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontInputLabelInput)(nil)).Elem(), GetBrandingThemeFontInputLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontInputLabelArrayInput)(nil)).Elem(), GetBrandingThemeFontInputLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontLinkInput)(nil)).Elem(), GetBrandingThemeFontLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontLinkArrayInput)(nil)).Elem(), GetBrandingThemeFontLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontSubtitleInput)(nil)).Elem(), GetBrandingThemeFontSubtitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontSubtitleArrayInput)(nil)).Elem(), GetBrandingThemeFontSubtitleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontTitleInput)(nil)).Elem(), GetBrandingThemeFontTitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeFontTitleArrayInput)(nil)).Elem(), GetBrandingThemeFontTitleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemePageBackgroundInput)(nil)).Elem(), GetBrandingThemePageBackgroundArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemePageBackgroundArrayInput)(nil)).Elem(), GetBrandingThemePageBackgroundArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeWidgetInput)(nil)).Elem(), GetBrandingThemeWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingThemeWidgetArrayInput)(nil)).Elem(), GetBrandingThemeWidgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingUniversalLoginInput)(nil)).Elem(), GetBrandingUniversalLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrandingUniversalLoginArrayInput)(nil)).Elem(), GetBrandingUniversalLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonInput)(nil)).Elem(), GetClientAddonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonArrayInput)(nil)).Elem(), GetClientAddonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonAwInput)(nil)).Elem(), GetClientAddonAwArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonAwArrayInput)(nil)).Elem(), GetClientAddonAwArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonAzureBlobInput)(nil)).Elem(), GetClientAddonAzureBlobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonAzureBlobArrayInput)(nil)).Elem(), GetClientAddonAzureBlobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonAzureSbInput)(nil)).Elem(), GetClientAddonAzureSbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonAzureSbArrayInput)(nil)).Elem(), GetClientAddonAzureSbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonBoxInput)(nil)).Elem(), GetClientAddonBoxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonBoxArrayInput)(nil)).Elem(), GetClientAddonBoxArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonCloudbeeInput)(nil)).Elem(), GetClientAddonCloudbeeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonCloudbeeArrayInput)(nil)).Elem(), GetClientAddonCloudbeeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonConcurInput)(nil)).Elem(), GetClientAddonConcurArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonConcurArrayInput)(nil)).Elem(), GetClientAddonConcurArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonDropboxInput)(nil)).Elem(), GetClientAddonDropboxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonDropboxArrayInput)(nil)).Elem(), GetClientAddonDropboxArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonEchosignInput)(nil)).Elem(), GetClientAddonEchosignArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonEchosignArrayInput)(nil)).Elem(), GetClientAddonEchosignArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonEgnyteInput)(nil)).Elem(), GetClientAddonEgnyteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonEgnyteArrayInput)(nil)).Elem(), GetClientAddonEgnyteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonFirebaseInput)(nil)).Elem(), GetClientAddonFirebaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonFirebaseArrayInput)(nil)).Elem(), GetClientAddonFirebaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonLayerInput)(nil)).Elem(), GetClientAddonLayerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonLayerArrayInput)(nil)).Elem(), GetClientAddonLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonMscrmInput)(nil)).Elem(), GetClientAddonMscrmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonMscrmArrayInput)(nil)).Elem(), GetClientAddonMscrmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonNewrelicInput)(nil)).Elem(), GetClientAddonNewrelicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonNewrelicArrayInput)(nil)).Elem(), GetClientAddonNewrelicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonOffice365Input)(nil)).Elem(), GetClientAddonOffice365Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonOffice365ArrayInput)(nil)).Elem(), GetClientAddonOffice365Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonRmInput)(nil)).Elem(), GetClientAddonRmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonRmArrayInput)(nil)).Elem(), GetClientAddonRmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSalesforceInput)(nil)).Elem(), GetClientAddonSalesforceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSalesforceArrayInput)(nil)).Elem(), GetClientAddonSalesforceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSalesforceApiInput)(nil)).Elem(), GetClientAddonSalesforceApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSalesforceApiArrayInput)(nil)).Elem(), GetClientAddonSalesforceApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSalesforceSandboxApiInput)(nil)).Elem(), GetClientAddonSalesforceSandboxApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSalesforceSandboxApiArrayInput)(nil)).Elem(), GetClientAddonSalesforceSandboxApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSamlpInput)(nil)).Elem(), GetClientAddonSamlpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSamlpArrayInput)(nil)).Elem(), GetClientAddonSamlpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSamlpLogoutInput)(nil)).Elem(), GetClientAddonSamlpLogoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSamlpLogoutArrayInput)(nil)).Elem(), GetClientAddonSamlpLogoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSapApiInput)(nil)).Elem(), GetClientAddonSapApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSapApiArrayInput)(nil)).Elem(), GetClientAddonSapApiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSentryInput)(nil)).Elem(), GetClientAddonSentryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSentryArrayInput)(nil)).Elem(), GetClientAddonSentryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSharepointInput)(nil)).Elem(), GetClientAddonSharepointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSharepointArrayInput)(nil)).Elem(), GetClientAddonSharepointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSlackInput)(nil)).Elem(), GetClientAddonSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSlackArrayInput)(nil)).Elem(), GetClientAddonSlackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSpringcmInput)(nil)).Elem(), GetClientAddonSpringcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSpringcmArrayInput)(nil)).Elem(), GetClientAddonSpringcmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSsoIntegrationInput)(nil)).Elem(), GetClientAddonSsoIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonSsoIntegrationArrayInput)(nil)).Elem(), GetClientAddonSsoIntegrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonWamInput)(nil)).Elem(), GetClientAddonWamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonWamArrayInput)(nil)).Elem(), GetClientAddonWamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonWsfedInput)(nil)).Elem(), GetClientAddonWsfedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonWsfedArrayInput)(nil)).Elem(), GetClientAddonWsfedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonZendeskInput)(nil)).Elem(), GetClientAddonZendeskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonZendeskArrayInput)(nil)).Elem(), GetClientAddonZendeskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonZoomInput)(nil)).Elem(), GetClientAddonZoomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientAddonZoomArrayInput)(nil)).Elem(), GetClientAddonZoomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientJwtConfigurationInput)(nil)).Elem(), GetClientJwtConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientJwtConfigurationArrayInput)(nil)).Elem(), GetClientJwtConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileInput)(nil)).Elem(), GetClientMobileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileArrayInput)(nil)).Elem(), GetClientMobileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileAndroidInput)(nil)).Elem(), GetClientMobileAndroidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileAndroidArrayInput)(nil)).Elem(), GetClientMobileAndroidArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileIoInput)(nil)).Elem(), GetClientMobileIoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientMobileIoArrayInput)(nil)).Elem(), GetClientMobileIoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginInput)(nil)).Elem(), GetClientNativeSocialLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginArrayInput)(nil)).Elem(), GetClientNativeSocialLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginAppleInput)(nil)).Elem(), GetClientNativeSocialLoginAppleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginAppleArrayInput)(nil)).Elem(), GetClientNativeSocialLoginAppleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginFacebookInput)(nil)).Elem(), GetClientNativeSocialLoginFacebookArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientNativeSocialLoginFacebookArrayInput)(nil)).Elem(), GetClientNativeSocialLoginFacebookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientRefreshTokenInput)(nil)).Elem(), GetClientRefreshTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClientRefreshTokenArrayInput)(nil)).Elem(), GetClientRefreshTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionInput)(nil)).Elem(), GetConnectionOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionArrayInput)(nil)).Elem(), GetConnectionOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionAttributeMapInput)(nil)).Elem(), GetConnectionOptionAttributeMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionAttributeMapArrayInput)(nil)).Elem(), GetConnectionOptionAttributeMapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionConnectionSettingInput)(nil)).Elem(), GetConnectionOptionConnectionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionConnectionSettingArrayInput)(nil)).Elem(), GetConnectionOptionConnectionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionDecryptionKeyInput)(nil)).Elem(), GetConnectionOptionDecryptionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionDecryptionKeyArrayInput)(nil)).Elem(), GetConnectionOptionDecryptionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionGatewayAuthenticationInput)(nil)).Elem(), GetConnectionOptionGatewayAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionGatewayAuthenticationArrayInput)(nil)).Elem(), GetConnectionOptionGatewayAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionIdpInitiatedInput)(nil)).Elem(), GetConnectionOptionIdpInitiatedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionIdpInitiatedArrayInput)(nil)).Elem(), GetConnectionOptionIdpInitiatedArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionMfaInput)(nil)).Elem(), GetConnectionOptionMfaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionMfaArrayInput)(nil)).Elem(), GetConnectionOptionMfaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionPasswordComplexityOptionInput)(nil)).Elem(), GetConnectionOptionPasswordComplexityOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionPasswordComplexityOptionArrayInput)(nil)).Elem(), GetConnectionOptionPasswordComplexityOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionPasswordDictionaryInput)(nil)).Elem(), GetConnectionOptionPasswordDictionaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionPasswordDictionaryArrayInput)(nil)).Elem(), GetConnectionOptionPasswordDictionaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionPasswordHistoryInput)(nil)).Elem(), GetConnectionOptionPasswordHistoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionPasswordHistoryArrayInput)(nil)).Elem(), GetConnectionOptionPasswordHistoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionPasswordNoPersonalInfoInput)(nil)).Elem(), GetConnectionOptionPasswordNoPersonalInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionPasswordNoPersonalInfoArrayInput)(nil)).Elem(), GetConnectionOptionPasswordNoPersonalInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionSigningKeyInput)(nil)).Elem(), GetConnectionOptionSigningKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionSigningKeyArrayInput)(nil)).Elem(), GetConnectionOptionSigningKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionTotpInput)(nil)).Elem(), GetConnectionOptionTotpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionTotpArrayInput)(nil)).Elem(), GetConnectionOptionTotpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionValidationInput)(nil)).Elem(), GetConnectionOptionValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionValidationArrayInput)(nil)).Elem(), GetConnectionOptionValidationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionValidationUsernameInput)(nil)).Elem(), GetConnectionOptionValidationUsernameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionOptionValidationUsernameArrayInput)(nil)).Elem(), GetConnectionOptionValidationUsernameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDomainVerificationTypeInput)(nil)).Elem(), GetCustomDomainVerificationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCustomDomainVerificationTypeArrayInput)(nil)).Elem(), GetCustomDomainVerificationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationBrandingInput)(nil)).Elem(), GetOrganizationBrandingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationBrandingArrayInput)(nil)).Elem(), GetOrganizationBrandingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationConnectionTypeInput)(nil)).Elem(), GetOrganizationConnectionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationConnectionTypeArrayInput)(nil)).Elem(), GetOrganizationConnectionTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPagesChangePasswordInput)(nil)).Elem(), GetPagesChangePasswordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPagesChangePasswordArrayInput)(nil)).Elem(), GetPagesChangePasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPagesErrorInput)(nil)).Elem(), GetPagesErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPagesErrorArrayInput)(nil)).Elem(), GetPagesErrorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPagesGuardianMfaInput)(nil)).Elem(), GetPagesGuardianMfaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPagesGuardianMfaArrayInput)(nil)).Elem(), GetPagesGuardianMfaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPagesLoginInput)(nil)).Elem(), GetPagesLoginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPagesLoginArrayInput)(nil)).Elem(), GetPagesLoginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceServerScopeTypeInput)(nil)).Elem(), GetResourceServerScopeTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetResourceServerScopeTypeArrayInput)(nil)).Elem(), GetResourceServerScopeTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolePermissionTypeInput)(nil)).Elem(), GetRolePermissionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRolePermissionTypeArrayInput)(nil)).Elem(), GetRolePermissionTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSigningKeysSigningKeyInput)(nil)).Elem(), GetSigningKeysSigningKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSigningKeysSigningKeyArrayInput)(nil)).Elem(), GetSigningKeysSigningKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantFlagInput)(nil)).Elem(), GetTenantFlagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantFlagArrayInput)(nil)).Elem(), GetTenantFlagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantSessionInput)(nil)).Elem(), GetTenantSessionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantSessionArrayInput)(nil)).Elem(), GetTenantSessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantSessionCookyInput)(nil)).Elem(), GetTenantSessionCookyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTenantSessionCookyArrayInput)(nil)).Elem(), GetTenantSessionCookyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserPermissionTypeInput)(nil)).Elem(), GetUserPermissionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserPermissionTypeArrayInput)(nil)).Elem(), GetUserPermissionTypeArray{})
	pulumi.RegisterOutputType(ActionDependencyOutput{})
	pulumi.RegisterOutputType(ActionDependencyArrayOutput{})
	pulumi.RegisterOutputType(ActionSecretOutput{})
	pulumi.RegisterOutputType(ActionSecretArrayOutput{})
	pulumi.RegisterOutputType(ActionSupportedTriggersOutput{})
	pulumi.RegisterOutputType(ActionSupportedTriggersPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionBreachedPasswordDetectionOutput{})
	pulumi.RegisterOutputType(AttackProtectionBreachedPasswordDetectionPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput{})
	pulumi.RegisterOutputType(AttackProtectionBreachedPasswordDetectionPreUserRegistrationPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionBruteForceProtectionOutput{})
	pulumi.RegisterOutputType(AttackProtectionBruteForceProtectionPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreLoginOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreLoginPtrOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput{})
	pulumi.RegisterOutputType(AttackProtectionSuspiciousIpThrottlingPreUserRegistrationPtrOutput{})
	pulumi.RegisterOutputType(BrandingColorsOutput{})
	pulumi.RegisterOutputType(BrandingColorsPtrOutput{})
	pulumi.RegisterOutputType(BrandingFontOutput{})
	pulumi.RegisterOutputType(BrandingFontPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeBordersOutput{})
	pulumi.RegisterOutputType(BrandingThemeBordersPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeColorsOutput{})
	pulumi.RegisterOutputType(BrandingThemeColorsPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsBodyTextOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsBodyTextPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsButtonsTextOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsButtonsTextPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsInputLabelsOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsInputLabelsPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsLinksOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsLinksPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsSubtitleOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsSubtitlePtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsTitleOutput{})
	pulumi.RegisterOutputType(BrandingThemeFontsTitlePtrOutput{})
	pulumi.RegisterOutputType(BrandingThemePageBackgroundOutput{})
	pulumi.RegisterOutputType(BrandingThemePageBackgroundPtrOutput{})
	pulumi.RegisterOutputType(BrandingThemeWidgetOutput{})
	pulumi.RegisterOutputType(BrandingThemeWidgetPtrOutput{})
	pulumi.RegisterOutputType(BrandingUniversalLoginOutput{})
	pulumi.RegisterOutputType(BrandingUniversalLoginPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsOutput{})
	pulumi.RegisterOutputType(ClientAddonsPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsAwsOutput{})
	pulumi.RegisterOutputType(ClientAddonsAwsPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsAzureBlobOutput{})
	pulumi.RegisterOutputType(ClientAddonsAzureBlobPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsAzureSbOutput{})
	pulumi.RegisterOutputType(ClientAddonsAzureSbPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsBoxOutput{})
	pulumi.RegisterOutputType(ClientAddonsBoxPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsCloudbeesOutput{})
	pulumi.RegisterOutputType(ClientAddonsCloudbeesPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsConcurOutput{})
	pulumi.RegisterOutputType(ClientAddonsConcurPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsDropboxOutput{})
	pulumi.RegisterOutputType(ClientAddonsDropboxPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsEchosignOutput{})
	pulumi.RegisterOutputType(ClientAddonsEchosignPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsEgnyteOutput{})
	pulumi.RegisterOutputType(ClientAddonsEgnytePtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsFirebaseOutput{})
	pulumi.RegisterOutputType(ClientAddonsFirebasePtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsLayerOutput{})
	pulumi.RegisterOutputType(ClientAddonsLayerPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsMscrmOutput{})
	pulumi.RegisterOutputType(ClientAddonsMscrmPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsNewrelicOutput{})
	pulumi.RegisterOutputType(ClientAddonsNewrelicPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsOffice365Output{})
	pulumi.RegisterOutputType(ClientAddonsOffice365PtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsRmsOutput{})
	pulumi.RegisterOutputType(ClientAddonsRmsPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSalesforceOutput{})
	pulumi.RegisterOutputType(ClientAddonsSalesforcePtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSalesforceApiOutput{})
	pulumi.RegisterOutputType(ClientAddonsSalesforceApiPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSalesforceSandboxApiOutput{})
	pulumi.RegisterOutputType(ClientAddonsSalesforceSandboxApiPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpLogoutOutput{})
	pulumi.RegisterOutputType(ClientAddonsSamlpLogoutPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSapApiOutput{})
	pulumi.RegisterOutputType(ClientAddonsSapApiPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSentryOutput{})
	pulumi.RegisterOutputType(ClientAddonsSentryPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSharepointOutput{})
	pulumi.RegisterOutputType(ClientAddonsSharepointPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSlackOutput{})
	pulumi.RegisterOutputType(ClientAddonsSlackPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSpringcmOutput{})
	pulumi.RegisterOutputType(ClientAddonsSpringcmPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsSsoIntegrationOutput{})
	pulumi.RegisterOutputType(ClientAddonsSsoIntegrationPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsWamsOutput{})
	pulumi.RegisterOutputType(ClientAddonsWamsPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsWsfedOutput{})
	pulumi.RegisterOutputType(ClientAddonsWsfedPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsZendeskOutput{})
	pulumi.RegisterOutputType(ClientAddonsZendeskPtrOutput{})
	pulumi.RegisterOutputType(ClientAddonsZoomOutput{})
	pulumi.RegisterOutputType(ClientAddonsZoomPtrOutput{})
	pulumi.RegisterOutputType(ClientCredentialsPrivateKeyJwtOutput{})
	pulumi.RegisterOutputType(ClientCredentialsPrivateKeyJwtPtrOutput{})
	pulumi.RegisterOutputType(ClientCredentialsPrivateKeyJwtCredentialOutput{})
	pulumi.RegisterOutputType(ClientCredentialsPrivateKeyJwtCredentialArrayOutput{})
	pulumi.RegisterOutputType(ClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(ClientJwtConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClientMobileOutput{})
	pulumi.RegisterOutputType(ClientMobilePtrOutput{})
	pulumi.RegisterOutputType(ClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(ClientMobileAndroidPtrOutput{})
	pulumi.RegisterOutputType(ClientMobileIosOutput{})
	pulumi.RegisterOutputType(ClientMobileIosPtrOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginPtrOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginAppleOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginApplePtrOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginFacebookOutput{})
	pulumi.RegisterOutputType(ClientNativeSocialLoginFacebookPtrOutput{})
	pulumi.RegisterOutputType(ClientRefreshTokenOutput{})
	pulumi.RegisterOutputType(ClientRefreshTokenPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsAttributeMapOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsAttributeMapPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsConnectionSettingsOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsConnectionSettingsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsDecryptionKeyOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsDecryptionKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsGatewayAuthenticationOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsGatewayAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsIdpInitiatedOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsIdpInitiatedPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsMfaOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsMfaPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordComplexityOptionsOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordComplexityOptionsPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordDictionaryOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordDictionaryPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordHistoryOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordHistoryArrayOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordNoPersonalInfoOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsPasswordNoPersonalInfoPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsSigningKeyOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsSigningKeyPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsTotpOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsTotpPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationPtrOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationUsernameOutput{})
	pulumi.RegisterOutputType(ConnectionOptionsValidationUsernamePtrOutput{})
	pulumi.RegisterOutputType(CustomDomainVerificationTypeOutput{})
	pulumi.RegisterOutputType(CustomDomainVerificationTypeArrayOutput{})
	pulumi.RegisterOutputType(EmailProviderCredentialsOutput{})
	pulumi.RegisterOutputType(EmailProviderCredentialsPtrOutput{})
	pulumi.RegisterOutputType(EmailProviderSettingsOutput{})
	pulumi.RegisterOutputType(EmailProviderSettingsPtrOutput{})
	pulumi.RegisterOutputType(EmailProviderSettingsHeadersOutput{})
	pulumi.RegisterOutputType(EmailProviderSettingsHeadersPtrOutput{})
	pulumi.RegisterOutputType(EmailProviderSettingsMessageOutput{})
	pulumi.RegisterOutputType(EmailProviderSettingsMessagePtrOutput{})
	pulumi.RegisterOutputType(GuardianDuoOutput{})
	pulumi.RegisterOutputType(GuardianDuoPtrOutput{})
	pulumi.RegisterOutputType(GuardianPhoneOutput{})
	pulumi.RegisterOutputType(GuardianPhonePtrOutput{})
	pulumi.RegisterOutputType(GuardianPhoneOptionsOutput{})
	pulumi.RegisterOutputType(GuardianPhoneOptionsPtrOutput{})
	pulumi.RegisterOutputType(GuardianPushOutput{})
	pulumi.RegisterOutputType(GuardianPushPtrOutput{})
	pulumi.RegisterOutputType(GuardianPushAmazonSnsOutput{})
	pulumi.RegisterOutputType(GuardianPushAmazonSnsPtrOutput{})
	pulumi.RegisterOutputType(GuardianPushCustomAppOutput{})
	pulumi.RegisterOutputType(GuardianPushCustomAppPtrOutput{})
	pulumi.RegisterOutputType(GuardianPushDirectApnsOutput{})
	pulumi.RegisterOutputType(GuardianPushDirectApnsPtrOutput{})
	pulumi.RegisterOutputType(GuardianPushDirectFcmOutput{})
	pulumi.RegisterOutputType(GuardianPushDirectFcmPtrOutput{})
	pulumi.RegisterOutputType(GuardianWebauthnPlatformOutput{})
	pulumi.RegisterOutputType(GuardianWebauthnPlatformPtrOutput{})
	pulumi.RegisterOutputType(GuardianWebauthnRoamingOutput{})
	pulumi.RegisterOutputType(GuardianWebauthnRoamingPtrOutput{})
	pulumi.RegisterOutputType(LogStreamSinkOutput{})
	pulumi.RegisterOutputType(LogStreamSinkPtrOutput{})
	pulumi.RegisterOutputType(OrganizationBrandingOutput{})
	pulumi.RegisterOutputType(OrganizationBrandingPtrOutput{})
	pulumi.RegisterOutputType(OrganizationConnectionsEnabledConnectionOutput{})
	pulumi.RegisterOutputType(OrganizationConnectionsEnabledConnectionArrayOutput{})
	pulumi.RegisterOutputType(PagesChangePasswordOutput{})
	pulumi.RegisterOutputType(PagesChangePasswordPtrOutput{})
	pulumi.RegisterOutputType(PagesErrorOutput{})
	pulumi.RegisterOutputType(PagesErrorPtrOutput{})
	pulumi.RegisterOutputType(PagesGuardianMfaOutput{})
	pulumi.RegisterOutputType(PagesGuardianMfaPtrOutput{})
	pulumi.RegisterOutputType(PagesLoginOutput{})
	pulumi.RegisterOutputType(PagesLoginPtrOutput{})
	pulumi.RegisterOutputType(ResourceServerScopesScopeOutput{})
	pulumi.RegisterOutputType(ResourceServerScopesScopeArrayOutput{})
	pulumi.RegisterOutputType(RolePermissionsPermissionOutput{})
	pulumi.RegisterOutputType(RolePermissionsPermissionArrayOutput{})
	pulumi.RegisterOutputType(TenantFlagsOutput{})
	pulumi.RegisterOutputType(TenantFlagsPtrOutput{})
	pulumi.RegisterOutputType(TenantSessionCookieOutput{})
	pulumi.RegisterOutputType(TenantSessionCookiePtrOutput{})
	pulumi.RegisterOutputType(TenantSessionsOutput{})
	pulumi.RegisterOutputType(TenantSessionsPtrOutput{})
	pulumi.RegisterOutputType(TriggerActionsActionOutput{})
	pulumi.RegisterOutputType(TriggerActionsActionArrayOutput{})
	pulumi.RegisterOutputType(UserPermissionsPermissionOutput{})
	pulumi.RegisterOutputType(UserPermissionsPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionBreachedPasswordDetectionOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionBreachedPasswordDetectionArrayOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionBreachedPasswordDetectionPreUserRegistrationArrayOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionBruteForceProtectionOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionBruteForceProtectionArrayOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionSuspiciousIpThrottlingOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionSuspiciousIpThrottlingArrayOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionSuspiciousIpThrottlingPreLoginOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionSuspiciousIpThrottlingPreLoginArrayOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationOutput{})
	pulumi.RegisterOutputType(GetAttackProtectionSuspiciousIpThrottlingPreUserRegistrationArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingColorOutput{})
	pulumi.RegisterOutputType(GetBrandingColorArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingFontOutput{})
	pulumi.RegisterOutputType(GetBrandingFontArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeBorderOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeBorderArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeColorOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeColorArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontBodyTextOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontBodyTextArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontButtonsTextOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontButtonsTextArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontInputLabelOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontInputLabelArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontLinkOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontLinkArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontSubtitleOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontSubtitleArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontTitleOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeFontTitleArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemePageBackgroundOutput{})
	pulumi.RegisterOutputType(GetBrandingThemePageBackgroundArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeWidgetOutput{})
	pulumi.RegisterOutputType(GetBrandingThemeWidgetArrayOutput{})
	pulumi.RegisterOutputType(GetBrandingUniversalLoginOutput{})
	pulumi.RegisterOutputType(GetBrandingUniversalLoginArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonOutput{})
	pulumi.RegisterOutputType(GetClientAddonArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonAwOutput{})
	pulumi.RegisterOutputType(GetClientAddonAwArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonAzureBlobOutput{})
	pulumi.RegisterOutputType(GetClientAddonAzureBlobArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonAzureSbOutput{})
	pulumi.RegisterOutputType(GetClientAddonAzureSbArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonBoxOutput{})
	pulumi.RegisterOutputType(GetClientAddonBoxArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonCloudbeeOutput{})
	pulumi.RegisterOutputType(GetClientAddonCloudbeeArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonConcurOutput{})
	pulumi.RegisterOutputType(GetClientAddonConcurArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonDropboxOutput{})
	pulumi.RegisterOutputType(GetClientAddonDropboxArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonEchosignOutput{})
	pulumi.RegisterOutputType(GetClientAddonEchosignArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonEgnyteOutput{})
	pulumi.RegisterOutputType(GetClientAddonEgnyteArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonFirebaseOutput{})
	pulumi.RegisterOutputType(GetClientAddonFirebaseArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonLayerOutput{})
	pulumi.RegisterOutputType(GetClientAddonLayerArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonMscrmOutput{})
	pulumi.RegisterOutputType(GetClientAddonMscrmArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonNewrelicOutput{})
	pulumi.RegisterOutputType(GetClientAddonNewrelicArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonOffice365Output{})
	pulumi.RegisterOutputType(GetClientAddonOffice365ArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonRmOutput{})
	pulumi.RegisterOutputType(GetClientAddonRmArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSalesforceOutput{})
	pulumi.RegisterOutputType(GetClientAddonSalesforceArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSalesforceApiOutput{})
	pulumi.RegisterOutputType(GetClientAddonSalesforceApiArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSalesforceSandboxApiOutput{})
	pulumi.RegisterOutputType(GetClientAddonSalesforceSandboxApiArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSamlpOutput{})
	pulumi.RegisterOutputType(GetClientAddonSamlpArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSamlpLogoutOutput{})
	pulumi.RegisterOutputType(GetClientAddonSamlpLogoutArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSapApiOutput{})
	pulumi.RegisterOutputType(GetClientAddonSapApiArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSentryOutput{})
	pulumi.RegisterOutputType(GetClientAddonSentryArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSharepointOutput{})
	pulumi.RegisterOutputType(GetClientAddonSharepointArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSlackOutput{})
	pulumi.RegisterOutputType(GetClientAddonSlackArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSpringcmOutput{})
	pulumi.RegisterOutputType(GetClientAddonSpringcmArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonSsoIntegrationOutput{})
	pulumi.RegisterOutputType(GetClientAddonSsoIntegrationArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonWamOutput{})
	pulumi.RegisterOutputType(GetClientAddonWamArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonWsfedOutput{})
	pulumi.RegisterOutputType(GetClientAddonWsfedArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonZendeskOutput{})
	pulumi.RegisterOutputType(GetClientAddonZendeskArrayOutput{})
	pulumi.RegisterOutputType(GetClientAddonZoomOutput{})
	pulumi.RegisterOutputType(GetClientAddonZoomArrayOutput{})
	pulumi.RegisterOutputType(GetClientJwtConfigurationOutput{})
	pulumi.RegisterOutputType(GetClientJwtConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetClientMobileOutput{})
	pulumi.RegisterOutputType(GetClientMobileArrayOutput{})
	pulumi.RegisterOutputType(GetClientMobileAndroidOutput{})
	pulumi.RegisterOutputType(GetClientMobileAndroidArrayOutput{})
	pulumi.RegisterOutputType(GetClientMobileIoOutput{})
	pulumi.RegisterOutputType(GetClientMobileIoArrayOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginArrayOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginAppleOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginAppleArrayOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginFacebookOutput{})
	pulumi.RegisterOutputType(GetClientNativeSocialLoginFacebookArrayOutput{})
	pulumi.RegisterOutputType(GetClientRefreshTokenOutput{})
	pulumi.RegisterOutputType(GetClientRefreshTokenArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionAttributeMapOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionAttributeMapArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionConnectionSettingOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionConnectionSettingArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionDecryptionKeyOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionDecryptionKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionGatewayAuthenticationOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionGatewayAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionIdpInitiatedOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionIdpInitiatedArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionMfaOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionMfaArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionPasswordComplexityOptionOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionPasswordComplexityOptionArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionPasswordDictionaryOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionPasswordDictionaryArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionPasswordHistoryOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionPasswordHistoryArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionPasswordNoPersonalInfoOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionPasswordNoPersonalInfoArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionSigningKeyOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionSigningKeyArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionTotpOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionTotpArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionValidationOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionValidationArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionValidationUsernameOutput{})
	pulumi.RegisterOutputType(GetConnectionOptionValidationUsernameArrayOutput{})
	pulumi.RegisterOutputType(GetCustomDomainVerificationTypeOutput{})
	pulumi.RegisterOutputType(GetCustomDomainVerificationTypeArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationBrandingOutput{})
	pulumi.RegisterOutputType(GetOrganizationBrandingArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationConnectionTypeOutput{})
	pulumi.RegisterOutputType(GetOrganizationConnectionTypeArrayOutput{})
	pulumi.RegisterOutputType(GetPagesChangePasswordOutput{})
	pulumi.RegisterOutputType(GetPagesChangePasswordArrayOutput{})
	pulumi.RegisterOutputType(GetPagesErrorOutput{})
	pulumi.RegisterOutputType(GetPagesErrorArrayOutput{})
	pulumi.RegisterOutputType(GetPagesGuardianMfaOutput{})
	pulumi.RegisterOutputType(GetPagesGuardianMfaArrayOutput{})
	pulumi.RegisterOutputType(GetPagesLoginOutput{})
	pulumi.RegisterOutputType(GetPagesLoginArrayOutput{})
	pulumi.RegisterOutputType(GetResourceServerScopeTypeOutput{})
	pulumi.RegisterOutputType(GetResourceServerScopeTypeArrayOutput{})
	pulumi.RegisterOutputType(GetRolePermissionTypeOutput{})
	pulumi.RegisterOutputType(GetRolePermissionTypeArrayOutput{})
	pulumi.RegisterOutputType(GetSigningKeysSigningKeyOutput{})
	pulumi.RegisterOutputType(GetSigningKeysSigningKeyArrayOutput{})
	pulumi.RegisterOutputType(GetTenantFlagOutput{})
	pulumi.RegisterOutputType(GetTenantFlagArrayOutput{})
	pulumi.RegisterOutputType(GetTenantSessionOutput{})
	pulumi.RegisterOutputType(GetTenantSessionArrayOutput{})
	pulumi.RegisterOutputType(GetTenantSessionCookyOutput{})
	pulumi.RegisterOutputType(GetTenantSessionCookyArrayOutput{})
	pulumi.RegisterOutputType(GetUserPermissionTypeOutput{})
	pulumi.RegisterOutputType(GetUserPermissionTypeArrayOutput{})
}
