// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source to retrieve a specific Auth0 Token Exchange Profile by `id`
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// An Auth0 Token Exchange Profile loaded using its ID.
//			_, err := auth0.LookupTokenExchangeProfile(ctx, &auth0.LookupTokenExchangeProfileArgs{
//				Id: "tep_Tnvl88SKv98TkMmr",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTokenExchangeProfile(ctx *pulumi.Context, args *LookupTokenExchangeProfileArgs, opts ...pulumi.InvokeOption) (*LookupTokenExchangeProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTokenExchangeProfileResult
	err := ctx.Invoke("auth0:index/getTokenExchangeProfile:getTokenExchangeProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTokenExchangeProfile.
type LookupTokenExchangeProfileArgs struct {
	// The id of the Token Exchange Profile
	Id string `pulumi:"id"`
}

// A collection of values returned by getTokenExchangeProfile.
type LookupTokenExchangeProfileResult struct {
	// Unique identifier of the Action
	ActionId string `pulumi:"actionId"`
	// The ISO 8601 formatted date the credential was created.
	CreatedAt string `pulumi:"createdAt"`
	// The id of the Token Exchange Profile
	Id string `pulumi:"id"`
	// Name of the token exchange profile.
	Name string `pulumi:"name"`
	// Type of the subject token
	SubjectTokenType string `pulumi:"subjectTokenType"`
	// Type of the token exchange profile
	Type string `pulumi:"type"`
	// The ISO 8601 formatted date the credential was updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupTokenExchangeProfileOutput(ctx *pulumi.Context, args LookupTokenExchangeProfileOutputArgs, opts ...pulumi.InvokeOption) LookupTokenExchangeProfileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTokenExchangeProfileResultOutput, error) {
			args := v.(LookupTokenExchangeProfileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("auth0:index/getTokenExchangeProfile:getTokenExchangeProfile", args, LookupTokenExchangeProfileResultOutput{}, options).(LookupTokenExchangeProfileResultOutput), nil
		}).(LookupTokenExchangeProfileResultOutput)
}

// A collection of arguments for invoking getTokenExchangeProfile.
type LookupTokenExchangeProfileOutputArgs struct {
	// The id of the Token Exchange Profile
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupTokenExchangeProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTokenExchangeProfileArgs)(nil)).Elem()
}

// A collection of values returned by getTokenExchangeProfile.
type LookupTokenExchangeProfileResultOutput struct{ *pulumi.OutputState }

func (LookupTokenExchangeProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTokenExchangeProfileResult)(nil)).Elem()
}

func (o LookupTokenExchangeProfileResultOutput) ToLookupTokenExchangeProfileResultOutput() LookupTokenExchangeProfileResultOutput {
	return o
}

func (o LookupTokenExchangeProfileResultOutput) ToLookupTokenExchangeProfileResultOutputWithContext(ctx context.Context) LookupTokenExchangeProfileResultOutput {
	return o
}

// Unique identifier of the Action
func (o LookupTokenExchangeProfileResultOutput) ActionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenExchangeProfileResult) string { return v.ActionId }).(pulumi.StringOutput)
}

// The ISO 8601 formatted date the credential was created.
func (o LookupTokenExchangeProfileResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenExchangeProfileResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The id of the Token Exchange Profile
func (o LookupTokenExchangeProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenExchangeProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the token exchange profile.
func (o LookupTokenExchangeProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenExchangeProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the subject token
func (o LookupTokenExchangeProfileResultOutput) SubjectTokenType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenExchangeProfileResult) string { return v.SubjectTokenType }).(pulumi.StringOutput)
}

// Type of the token exchange profile
func (o LookupTokenExchangeProfileResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenExchangeProfileResult) string { return v.Type }).(pulumi.StringOutput)
}

// The ISO 8601 formatted date the credential was updated.
func (o LookupTokenExchangeProfileResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTokenExchangeProfileResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTokenExchangeProfileResultOutput{})
}
