// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// With this resource, you can manage discovery domains on an organization.
type OrganizationDiscoveryDomains struct {
	pulumi.CustomResourceState

	// Discovery domains that are configured for the organization.
	DiscoveryDomains OrganizationDiscoveryDomainsDiscoveryDomainArrayOutput `pulumi:"discoveryDomains"`
	// ID of the organization on which to manage the discovery domains.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
}

// NewOrganizationDiscoveryDomains registers a new resource with the given unique name, arguments, and options.
func NewOrganizationDiscoveryDomains(ctx *pulumi.Context,
	name string, args *OrganizationDiscoveryDomainsArgs, opts ...pulumi.ResourceOption) (*OrganizationDiscoveryDomains, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DiscoveryDomains == nil {
		return nil, errors.New("invalid value for required argument 'DiscoveryDomains'")
	}
	if args.OrganizationId == nil {
		return nil, errors.New("invalid value for required argument 'OrganizationId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationDiscoveryDomains
	err := ctx.RegisterResource("auth0:index/organizationDiscoveryDomains:OrganizationDiscoveryDomains", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationDiscoveryDomains gets an existing OrganizationDiscoveryDomains resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationDiscoveryDomains(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationDiscoveryDomainsState, opts ...pulumi.ResourceOption) (*OrganizationDiscoveryDomains, error) {
	var resource OrganizationDiscoveryDomains
	err := ctx.ReadResource("auth0:index/organizationDiscoveryDomains:OrganizationDiscoveryDomains", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationDiscoveryDomains resources.
type organizationDiscoveryDomainsState struct {
	// Discovery domains that are configured for the organization.
	DiscoveryDomains []OrganizationDiscoveryDomainsDiscoveryDomain `pulumi:"discoveryDomains"`
	// ID of the organization on which to manage the discovery domains.
	OrganizationId *string `pulumi:"organizationId"`
}

type OrganizationDiscoveryDomainsState struct {
	// Discovery domains that are configured for the organization.
	DiscoveryDomains OrganizationDiscoveryDomainsDiscoveryDomainArrayInput
	// ID of the organization on which to manage the discovery domains.
	OrganizationId pulumi.StringPtrInput
}

func (OrganizationDiscoveryDomainsState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationDiscoveryDomainsState)(nil)).Elem()
}

type organizationDiscoveryDomainsArgs struct {
	// Discovery domains that are configured for the organization.
	DiscoveryDomains []OrganizationDiscoveryDomainsDiscoveryDomain `pulumi:"discoveryDomains"`
	// ID of the organization on which to manage the discovery domains.
	OrganizationId string `pulumi:"organizationId"`
}

// The set of arguments for constructing a OrganizationDiscoveryDomains resource.
type OrganizationDiscoveryDomainsArgs struct {
	// Discovery domains that are configured for the organization.
	DiscoveryDomains OrganizationDiscoveryDomainsDiscoveryDomainArrayInput
	// ID of the organization on which to manage the discovery domains.
	OrganizationId pulumi.StringInput
}

func (OrganizationDiscoveryDomainsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationDiscoveryDomainsArgs)(nil)).Elem()
}

type OrganizationDiscoveryDomainsInput interface {
	pulumi.Input

	ToOrganizationDiscoveryDomainsOutput() OrganizationDiscoveryDomainsOutput
	ToOrganizationDiscoveryDomainsOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainsOutput
}

func (*OrganizationDiscoveryDomains) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationDiscoveryDomains)(nil)).Elem()
}

func (i *OrganizationDiscoveryDomains) ToOrganizationDiscoveryDomainsOutput() OrganizationDiscoveryDomainsOutput {
	return i.ToOrganizationDiscoveryDomainsOutputWithContext(context.Background())
}

func (i *OrganizationDiscoveryDomains) ToOrganizationDiscoveryDomainsOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDiscoveryDomainsOutput)
}

// OrganizationDiscoveryDomainsArrayInput is an input type that accepts OrganizationDiscoveryDomainsArray and OrganizationDiscoveryDomainsArrayOutput values.
// You can construct a concrete instance of `OrganizationDiscoveryDomainsArrayInput` via:
//
//	OrganizationDiscoveryDomainsArray{ OrganizationDiscoveryDomainsArgs{...} }
type OrganizationDiscoveryDomainsArrayInput interface {
	pulumi.Input

	ToOrganizationDiscoveryDomainsArrayOutput() OrganizationDiscoveryDomainsArrayOutput
	ToOrganizationDiscoveryDomainsArrayOutputWithContext(context.Context) OrganizationDiscoveryDomainsArrayOutput
}

type OrganizationDiscoveryDomainsArray []OrganizationDiscoveryDomainsInput

func (OrganizationDiscoveryDomainsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationDiscoveryDomains)(nil)).Elem()
}

func (i OrganizationDiscoveryDomainsArray) ToOrganizationDiscoveryDomainsArrayOutput() OrganizationDiscoveryDomainsArrayOutput {
	return i.ToOrganizationDiscoveryDomainsArrayOutputWithContext(context.Background())
}

func (i OrganizationDiscoveryDomainsArray) ToOrganizationDiscoveryDomainsArrayOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDiscoveryDomainsArrayOutput)
}

// OrganizationDiscoveryDomainsMapInput is an input type that accepts OrganizationDiscoveryDomainsMap and OrganizationDiscoveryDomainsMapOutput values.
// You can construct a concrete instance of `OrganizationDiscoveryDomainsMapInput` via:
//
//	OrganizationDiscoveryDomainsMap{ "key": OrganizationDiscoveryDomainsArgs{...} }
type OrganizationDiscoveryDomainsMapInput interface {
	pulumi.Input

	ToOrganizationDiscoveryDomainsMapOutput() OrganizationDiscoveryDomainsMapOutput
	ToOrganizationDiscoveryDomainsMapOutputWithContext(context.Context) OrganizationDiscoveryDomainsMapOutput
}

type OrganizationDiscoveryDomainsMap map[string]OrganizationDiscoveryDomainsInput

func (OrganizationDiscoveryDomainsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationDiscoveryDomains)(nil)).Elem()
}

func (i OrganizationDiscoveryDomainsMap) ToOrganizationDiscoveryDomainsMapOutput() OrganizationDiscoveryDomainsMapOutput {
	return i.ToOrganizationDiscoveryDomainsMapOutputWithContext(context.Background())
}

func (i OrganizationDiscoveryDomainsMap) ToOrganizationDiscoveryDomainsMapOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDiscoveryDomainsMapOutput)
}

type OrganizationDiscoveryDomainsOutput struct{ *pulumi.OutputState }

func (OrganizationDiscoveryDomainsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationDiscoveryDomains)(nil)).Elem()
}

func (o OrganizationDiscoveryDomainsOutput) ToOrganizationDiscoveryDomainsOutput() OrganizationDiscoveryDomainsOutput {
	return o
}

func (o OrganizationDiscoveryDomainsOutput) ToOrganizationDiscoveryDomainsOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainsOutput {
	return o
}

// Discovery domains that are configured for the organization.
func (o OrganizationDiscoveryDomainsOutput) DiscoveryDomains() OrganizationDiscoveryDomainsDiscoveryDomainArrayOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryDomains) OrganizationDiscoveryDomainsDiscoveryDomainArrayOutput {
		return v.DiscoveryDomains
	}).(OrganizationDiscoveryDomainsDiscoveryDomainArrayOutput)
}

// ID of the organization on which to manage the discovery domains.
func (o OrganizationDiscoveryDomainsOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDiscoveryDomains) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

type OrganizationDiscoveryDomainsArrayOutput struct{ *pulumi.OutputState }

func (OrganizationDiscoveryDomainsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationDiscoveryDomains)(nil)).Elem()
}

func (o OrganizationDiscoveryDomainsArrayOutput) ToOrganizationDiscoveryDomainsArrayOutput() OrganizationDiscoveryDomainsArrayOutput {
	return o
}

func (o OrganizationDiscoveryDomainsArrayOutput) ToOrganizationDiscoveryDomainsArrayOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainsArrayOutput {
	return o
}

func (o OrganizationDiscoveryDomainsArrayOutput) Index(i pulumi.IntInput) OrganizationDiscoveryDomainsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationDiscoveryDomains {
		return vs[0].([]*OrganizationDiscoveryDomains)[vs[1].(int)]
	}).(OrganizationDiscoveryDomainsOutput)
}

type OrganizationDiscoveryDomainsMapOutput struct{ *pulumi.OutputState }

func (OrganizationDiscoveryDomainsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationDiscoveryDomains)(nil)).Elem()
}

func (o OrganizationDiscoveryDomainsMapOutput) ToOrganizationDiscoveryDomainsMapOutput() OrganizationDiscoveryDomainsMapOutput {
	return o
}

func (o OrganizationDiscoveryDomainsMapOutput) ToOrganizationDiscoveryDomainsMapOutputWithContext(ctx context.Context) OrganizationDiscoveryDomainsMapOutput {
	return o
}

func (o OrganizationDiscoveryDomainsMapOutput) MapIndex(k pulumi.StringInput) OrganizationDiscoveryDomainsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationDiscoveryDomains {
		return vs[0].(map[string]*OrganizationDiscoveryDomains)[vs[1].(string)]
	}).(OrganizationDiscoveryDomainsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDiscoveryDomainsInput)(nil)).Elem(), &OrganizationDiscoveryDomains{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDiscoveryDomainsArrayInput)(nil)).Elem(), OrganizationDiscoveryDomainsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDiscoveryDomainsMapInput)(nil)).Elem(), OrganizationDiscoveryDomainsMap{})
	pulumi.RegisterOutputType(OrganizationDiscoveryDomainsOutput{})
	pulumi.RegisterOutputType(OrganizationDiscoveryDomainsArrayOutput{})
	pulumi.RegisterOutputType(OrganizationDiscoveryDomainsMapOutput{})
}
