// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source to retrieve a specific Auth0 Event Stream by `id`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// An Auth0 Event Stream loaded using its ID.
//			_, err := auth0.LookupEventStream(ctx, &auth0.LookupEventStreamArgs{
//				Id: "est_XXXXXXXXXXXXXXX",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupEventStream(ctx *pulumi.Context, args *LookupEventStreamArgs, opts ...pulumi.InvokeOption) (*LookupEventStreamResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEventStreamResult
	err := ctx.Invoke("auth0:index/getEventStream:getEventStream", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEventStream.
type LookupEventStreamArgs struct {
	// The ID of the Event Stream.
	Id string `pulumi:"id"`
}

// A collection of values returned by getEventStream.
type LookupEventStreamResult struct {
	// The ISO 8601 timestamp when the stream was created.
	CreatedAt string `pulumi:"createdAt"`
	// The type of event stream destination (either 'eventbridge' or 'webhook').
	DestinationType string `pulumi:"destinationType"`
	// Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
	EventbridgeConfigurations []GetEventStreamEventbridgeConfiguration `pulumi:"eventbridgeConfigurations"`
	// The ID of the Event Stream.
	Id string `pulumi:"id"`
	// The name of the event stream.
	Name string `pulumi:"name"`
	// The current status of the event stream.
	Status string `pulumi:"status"`
	// List of event types this stream is subscribed to.
	Subscriptions []string `pulumi:"subscriptions"`
	// The ISO 8601 timestamp when the stream was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
	// Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
	WebhookConfigurations []GetEventStreamWebhookConfiguration `pulumi:"webhookConfigurations"`
}

func LookupEventStreamOutput(ctx *pulumi.Context, args LookupEventStreamOutputArgs, opts ...pulumi.InvokeOption) LookupEventStreamResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupEventStreamResultOutput, error) {
			args := v.(LookupEventStreamArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("auth0:index/getEventStream:getEventStream", args, LookupEventStreamResultOutput{}, options).(LookupEventStreamResultOutput), nil
		}).(LookupEventStreamResultOutput)
}

// A collection of arguments for invoking getEventStream.
type LookupEventStreamOutputArgs struct {
	// The ID of the Event Stream.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupEventStreamOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEventStreamArgs)(nil)).Elem()
}

// A collection of values returned by getEventStream.
type LookupEventStreamResultOutput struct{ *pulumi.OutputState }

func (LookupEventStreamResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEventStreamResult)(nil)).Elem()
}

func (o LookupEventStreamResultOutput) ToLookupEventStreamResultOutput() LookupEventStreamResultOutput {
	return o
}

func (o LookupEventStreamResultOutput) ToLookupEventStreamResultOutputWithContext(ctx context.Context) LookupEventStreamResultOutput {
	return o
}

// The ISO 8601 timestamp when the stream was created.
func (o LookupEventStreamResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventStreamResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The type of event stream destination (either 'eventbridge' or 'webhook').
func (o LookupEventStreamResultOutput) DestinationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventStreamResult) string { return v.DestinationType }).(pulumi.StringOutput)
}

// Configuration for the EventBridge destination. This block is only applicable when `destinationType` is set to `eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
func (o LookupEventStreamResultOutput) EventbridgeConfigurations() GetEventStreamEventbridgeConfigurationArrayOutput {
	return o.ApplyT(func(v LookupEventStreamResult) []GetEventStreamEventbridgeConfiguration {
		return v.EventbridgeConfigurations
	}).(GetEventStreamEventbridgeConfigurationArrayOutput)
}

// The ID of the Event Stream.
func (o LookupEventStreamResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventStreamResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the event stream.
func (o LookupEventStreamResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventStreamResult) string { return v.Name }).(pulumi.StringOutput)
}

// The current status of the event stream.
func (o LookupEventStreamResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventStreamResult) string { return v.Status }).(pulumi.StringOutput)
}

// List of event types this stream is subscribed to.
func (o LookupEventStreamResultOutput) Subscriptions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupEventStreamResult) []string { return v.Subscriptions }).(pulumi.StringArrayOutput)
}

// The ISO 8601 timestamp when the stream was last updated.
func (o LookupEventStreamResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventStreamResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Configuration for the Webhook destination. This block is only applicable when `destinationType` is set to `webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
func (o LookupEventStreamResultOutput) WebhookConfigurations() GetEventStreamWebhookConfigurationArrayOutput {
	return o.ApplyT(func(v LookupEventStreamResult) []GetEventStreamWebhookConfiguration { return v.WebhookConfigurations }).(GetEventStreamWebhookConfigurationArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEventStreamResultOutput{})
}
