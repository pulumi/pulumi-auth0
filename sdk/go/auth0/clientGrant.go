// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Auth0 uses various grant types, or methods by which you grant limited access to your resources to another entity without exposing credentials. The OAuth 2.0 protocol supports several types of grants, which allow different types of access. This resource allows you to create and manage client grants used with configured Auth0 clients.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-auth0/sdk/go/auth0"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		myClient, err := auth0.NewClient(ctx, "myClient", nil)
// 		if err != nil {
// 			return err
// 		}
// 		myResourceServer, err := auth0.NewResourceServer(ctx, "myResourceServer", &auth0.ResourceServerArgs{
// 			Identifier: pulumi.String("https://api.example.com/client-grant"),
// 			Scopes: auth0.ResourceServerScopeArray{
// 				&auth0.ResourceServerScopeArgs{
// 					Description: pulumi.String("Create foos"),
// 					Value:       pulumi.String("create:foo"),
// 				},
// 				&auth0.ResourceServerScopeArgs{
// 					Description: pulumi.String("Create bars"),
// 					Value:       pulumi.String("create:bar"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = auth0.NewClientGrant(ctx, "myClientGrant", &auth0.ClientGrantArgs{
// 			Audience: myResourceServer.Identifier,
// 			ClientId: myClient.ID(),
// 			Scopes: pulumi.StringArray{
// 				pulumi.String("create:foo"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type ClientGrant struct {
	pulumi.CustomResourceState

	// String. Audience or API Identifier for this grant.
	Audience pulumi.StringOutput `pulumi:"audience"`
	// String. ID of the client for this grant.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// List(String). Permissions (scopes) included in this grant.
	Scopes pulumi.StringArrayOutput `pulumi:"scopes"`
}

// NewClientGrant registers a new resource with the given unique name, arguments, and options.
func NewClientGrant(ctx *pulumi.Context,
	name string, args *ClientGrantArgs, opts ...pulumi.ResourceOption) (*ClientGrant, error) {
	if args == nil || args.Audience == nil {
		return nil, errors.New("missing required argument 'Audience'")
	}
	if args == nil || args.ClientId == nil {
		return nil, errors.New("missing required argument 'ClientId'")
	}
	if args == nil || args.Scopes == nil {
		return nil, errors.New("missing required argument 'Scopes'")
	}
	if args == nil {
		args = &ClientGrantArgs{}
	}
	var resource ClientGrant
	err := ctx.RegisterResource("auth0:index/clientGrant:ClientGrant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClientGrant gets an existing ClientGrant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientGrant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientGrantState, opts ...pulumi.ResourceOption) (*ClientGrant, error) {
	var resource ClientGrant
	err := ctx.ReadResource("auth0:index/clientGrant:ClientGrant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClientGrant resources.
type clientGrantState struct {
	// String. Audience or API Identifier for this grant.
	Audience *string `pulumi:"audience"`
	// String. ID of the client for this grant.
	ClientId *string `pulumi:"clientId"`
	// List(String). Permissions (scopes) included in this grant.
	Scopes []string `pulumi:"scopes"`
}

type ClientGrantState struct {
	// String. Audience or API Identifier for this grant.
	Audience pulumi.StringPtrInput
	// String. ID of the client for this grant.
	ClientId pulumi.StringPtrInput
	// List(String). Permissions (scopes) included in this grant.
	Scopes pulumi.StringArrayInput
}

func (ClientGrantState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientGrantState)(nil)).Elem()
}

type clientGrantArgs struct {
	// String. Audience or API Identifier for this grant.
	Audience string `pulumi:"audience"`
	// String. ID of the client for this grant.
	ClientId string `pulumi:"clientId"`
	// List(String). Permissions (scopes) included in this grant.
	Scopes []string `pulumi:"scopes"`
}

// The set of arguments for constructing a ClientGrant resource.
type ClientGrantArgs struct {
	// String. Audience or API Identifier for this grant.
	Audience pulumi.StringInput
	// String. ID of the client for this grant.
	ClientId pulumi.StringInput
	// List(String). Permissions (scopes) included in this grant.
	Scopes pulumi.StringArrayInput
}

func (ClientGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientGrantArgs)(nil)).Elem()
}
