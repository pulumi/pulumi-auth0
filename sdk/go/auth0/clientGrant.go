// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auth0

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Auth0 uses various grant types, or methods by which you grant limited access to your resources to another entity without exposing credentials. The OAuth 2.0 protocol supports several types of grants, which allow different types of access. This resource allows you to create and manage client grants used with configured Auth0 clients.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-auth0/sdk/v3/go/auth0"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// The following example grants a client the "create:foo" and "create:bar" permissions (scopes).
//			myClient, err := auth0.NewClient(ctx, "my_client", &auth0.ClientArgs{
//				Name: pulumi.String("Example Application - Client Grant (Managed by Terraform)"),
//			})
//			if err != nil {
//				return err
//			}
//			myResourceServer, err := auth0.NewResourceServer(ctx, "my_resource_server", &auth0.ResourceServerArgs{
//				Name:       pulumi.String("Example Resource Server - Client Grant (Managed by Terraform)"),
//				Identifier: pulumi.String("https://api.example.com/client-grant"),
//				AuthorizationDetails: auth0.ResourceServerAuthorizationDetailArray{
//					&auth0.ResourceServerAuthorizationDetailArgs{
//						Type: pulumi.String("payment"),
//					},
//					&auth0.ResourceServerAuthorizationDetailArgs{
//						Type: pulumi.String("shipping"),
//					},
//				},
//				SubjectTypeAuthorization: &auth0.ResourceServerSubjectTypeAuthorizationArgs{
//					User: &auth0.ResourceServerSubjectTypeAuthorizationUserArgs{
//						Policy: pulumi.String("allow_all"),
//					},
//					Client: &auth0.ResourceServerSubjectTypeAuthorizationClientArgs{
//						Policy: pulumi.String("require_client_grant"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = auth0.NewResourceServerScopes(ctx, "my_scopes", &auth0.ResourceServerScopesArgs{
//				ResourceServerIdentifier: myResourceServer.Identifier,
//				Scopes: auth0.ResourceServerScopesScopeArray{
//					&auth0.ResourceServerScopesScopeArgs{
//						Name:        pulumi.String("read:foo"),
//						Description: pulumi.String("Can read Foo"),
//					},
//					&auth0.ResourceServerScopesScopeArgs{
//						Name:        pulumi.String("create:foo"),
//						Description: pulumi.String("Can create Foo"),
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				myResourceServer,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = auth0.NewClientGrant(ctx, "my_client_grant", &auth0.ClientGrantArgs{
//				ClientId: myClient.ID(),
//				Audience: myResourceServer.Identifier,
//				Scopes: pulumi.StringArray{
//					pulumi.String("create:foo"),
//					pulumi.String("read:foo"),
//				},
//				SubjectType: pulumi.String("user"),
//				AuthorizationDetailsTypes: pulumi.StringArray{
//					pulumi.String("payment"),
//					pulumi.String("shipping"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// This resource can be imported by specifying the client grant ID.
//
// You can find this within the Management Dashboard in Application -> APIs -> Expand the required API.
//
// Example:
//
// ```sh
// $ pulumi import auth0:index/clientGrant:ClientGrant my_client_grant "cgr_XXXXXXXXXXXXXXXX"
// ```
type ClientGrant struct {
	pulumi.CustomResourceState

	// If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.
	AllowAnyOrganization pulumi.BoolPtrOutput `pulumi:"allowAnyOrganization"`
	// Audience or API Identifier for this grant.
	Audience pulumi.StringOutput `pulumi:"audience"`
	// Defines the types of authorization details allowed for this client grant.
	AuthorizationDetailsTypes pulumi.StringArrayOutput `pulumi:"authorizationDetailsTypes"`
	// ID of the client for this grant.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)
	OrganizationUsage pulumi.StringPtrOutput `pulumi:"organizationUsage"`
	// Permissions (scopes) included in this grant.
	Scopes pulumi.StringArrayOutput `pulumi:"scopes"`
	// Defines the type of subject for this grant. Can be one of `client` or `user`. Defaults to `client` when not defined.
	SubjectType pulumi.StringOutput `pulumi:"subjectType"`
}

// NewClientGrant registers a new resource with the given unique name, arguments, and options.
func NewClientGrant(ctx *pulumi.Context,
	name string, args *ClientGrantArgs, opts ...pulumi.ResourceOption) (*ClientGrant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Audience == nil {
		return nil, errors.New("invalid value for required argument 'Audience'")
	}
	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.Scopes == nil {
		return nil, errors.New("invalid value for required argument 'Scopes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ClientGrant
	err := ctx.RegisterResource("auth0:index/clientGrant:ClientGrant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClientGrant gets an existing ClientGrant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientGrant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClientGrantState, opts ...pulumi.ResourceOption) (*ClientGrant, error) {
	var resource ClientGrant
	err := ctx.ReadResource("auth0:index/clientGrant:ClientGrant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClientGrant resources.
type clientGrantState struct {
	// If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.
	AllowAnyOrganization *bool `pulumi:"allowAnyOrganization"`
	// Audience or API Identifier for this grant.
	Audience *string `pulumi:"audience"`
	// Defines the types of authorization details allowed for this client grant.
	AuthorizationDetailsTypes []string `pulumi:"authorizationDetailsTypes"`
	// ID of the client for this grant.
	ClientId *string `pulumi:"clientId"`
	// Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)
	OrganizationUsage *string `pulumi:"organizationUsage"`
	// Permissions (scopes) included in this grant.
	Scopes []string `pulumi:"scopes"`
	// Defines the type of subject for this grant. Can be one of `client` or `user`. Defaults to `client` when not defined.
	SubjectType *string `pulumi:"subjectType"`
}

type ClientGrantState struct {
	// If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.
	AllowAnyOrganization pulumi.BoolPtrInput
	// Audience or API Identifier for this grant.
	Audience pulumi.StringPtrInput
	// Defines the types of authorization details allowed for this client grant.
	AuthorizationDetailsTypes pulumi.StringArrayInput
	// ID of the client for this grant.
	ClientId pulumi.StringPtrInput
	// Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)
	OrganizationUsage pulumi.StringPtrInput
	// Permissions (scopes) included in this grant.
	Scopes pulumi.StringArrayInput
	// Defines the type of subject for this grant. Can be one of `client` or `user`. Defaults to `client` when not defined.
	SubjectType pulumi.StringPtrInput
}

func (ClientGrantState) ElementType() reflect.Type {
	return reflect.TypeOf((*clientGrantState)(nil)).Elem()
}

type clientGrantArgs struct {
	// If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.
	AllowAnyOrganization *bool `pulumi:"allowAnyOrganization"`
	// Audience or API Identifier for this grant.
	Audience string `pulumi:"audience"`
	// Defines the types of authorization details allowed for this client grant.
	AuthorizationDetailsTypes []string `pulumi:"authorizationDetailsTypes"`
	// ID of the client for this grant.
	ClientId string `pulumi:"clientId"`
	// Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)
	OrganizationUsage *string `pulumi:"organizationUsage"`
	// Permissions (scopes) included in this grant.
	Scopes []string `pulumi:"scopes"`
	// Defines the type of subject for this grant. Can be one of `client` or `user`. Defaults to `client` when not defined.
	SubjectType *string `pulumi:"subjectType"`
}

// The set of arguments for constructing a ClientGrant resource.
type ClientGrantArgs struct {
	// If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.
	AllowAnyOrganization pulumi.BoolPtrInput
	// Audience or API Identifier for this grant.
	Audience pulumi.StringInput
	// Defines the types of authorization details allowed for this client grant.
	AuthorizationDetailsTypes pulumi.StringArrayInput
	// ID of the client for this grant.
	ClientId pulumi.StringInput
	// Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)
	OrganizationUsage pulumi.StringPtrInput
	// Permissions (scopes) included in this grant.
	Scopes pulumi.StringArrayInput
	// Defines the type of subject for this grant. Can be one of `client` or `user`. Defaults to `client` when not defined.
	SubjectType pulumi.StringPtrInput
}

func (ClientGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clientGrantArgs)(nil)).Elem()
}

type ClientGrantInput interface {
	pulumi.Input

	ToClientGrantOutput() ClientGrantOutput
	ToClientGrantOutputWithContext(ctx context.Context) ClientGrantOutput
}

func (*ClientGrant) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientGrant)(nil)).Elem()
}

func (i *ClientGrant) ToClientGrantOutput() ClientGrantOutput {
	return i.ToClientGrantOutputWithContext(context.Background())
}

func (i *ClientGrant) ToClientGrantOutputWithContext(ctx context.Context) ClientGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientGrantOutput)
}

// ClientGrantArrayInput is an input type that accepts ClientGrantArray and ClientGrantArrayOutput values.
// You can construct a concrete instance of `ClientGrantArrayInput` via:
//
//	ClientGrantArray{ ClientGrantArgs{...} }
type ClientGrantArrayInput interface {
	pulumi.Input

	ToClientGrantArrayOutput() ClientGrantArrayOutput
	ToClientGrantArrayOutputWithContext(context.Context) ClientGrantArrayOutput
}

type ClientGrantArray []ClientGrantInput

func (ClientGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClientGrant)(nil)).Elem()
}

func (i ClientGrantArray) ToClientGrantArrayOutput() ClientGrantArrayOutput {
	return i.ToClientGrantArrayOutputWithContext(context.Background())
}

func (i ClientGrantArray) ToClientGrantArrayOutputWithContext(ctx context.Context) ClientGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientGrantArrayOutput)
}

// ClientGrantMapInput is an input type that accepts ClientGrantMap and ClientGrantMapOutput values.
// You can construct a concrete instance of `ClientGrantMapInput` via:
//
//	ClientGrantMap{ "key": ClientGrantArgs{...} }
type ClientGrantMapInput interface {
	pulumi.Input

	ToClientGrantMapOutput() ClientGrantMapOutput
	ToClientGrantMapOutputWithContext(context.Context) ClientGrantMapOutput
}

type ClientGrantMap map[string]ClientGrantInput

func (ClientGrantMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClientGrant)(nil)).Elem()
}

func (i ClientGrantMap) ToClientGrantMapOutput() ClientGrantMapOutput {
	return i.ToClientGrantMapOutputWithContext(context.Background())
}

func (i ClientGrantMap) ToClientGrantMapOutputWithContext(ctx context.Context) ClientGrantMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClientGrantMapOutput)
}

type ClientGrantOutput struct{ *pulumi.OutputState }

func (ClientGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClientGrant)(nil)).Elem()
}

func (o ClientGrantOutput) ToClientGrantOutput() ClientGrantOutput {
	return o
}

func (o ClientGrantOutput) ToClientGrantOutputWithContext(ctx context.Context) ClientGrantOutput {
	return o
}

// If enabled, any organization can be used with this grant. If disabled (default), the grant must be explicitly assigned to the desired organizations.
func (o ClientGrantOutput) AllowAnyOrganization() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClientGrant) pulumi.BoolPtrOutput { return v.AllowAnyOrganization }).(pulumi.BoolPtrOutput)
}

// Audience or API Identifier for this grant.
func (o ClientGrantOutput) Audience() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientGrant) pulumi.StringOutput { return v.Audience }).(pulumi.StringOutput)
}

// Defines the types of authorization details allowed for this client grant.
func (o ClientGrantOutput) AuthorizationDetailsTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientGrant) pulumi.StringArrayOutput { return v.AuthorizationDetailsTypes }).(pulumi.StringArrayOutput)
}

// ID of the client for this grant.
func (o ClientGrantOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientGrant) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// Defines whether organizations can be used with client credentials exchanges for this grant. (defaults to deny when not defined)
func (o ClientGrantOutput) OrganizationUsage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClientGrant) pulumi.StringPtrOutput { return v.OrganizationUsage }).(pulumi.StringPtrOutput)
}

// Permissions (scopes) included in this grant.
func (o ClientGrantOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClientGrant) pulumi.StringArrayOutput { return v.Scopes }).(pulumi.StringArrayOutput)
}

// Defines the type of subject for this grant. Can be one of `client` or `user`. Defaults to `client` when not defined.
func (o ClientGrantOutput) SubjectType() pulumi.StringOutput {
	return o.ApplyT(func(v *ClientGrant) pulumi.StringOutput { return v.SubjectType }).(pulumi.StringOutput)
}

type ClientGrantArrayOutput struct{ *pulumi.OutputState }

func (ClientGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClientGrant)(nil)).Elem()
}

func (o ClientGrantArrayOutput) ToClientGrantArrayOutput() ClientGrantArrayOutput {
	return o
}

func (o ClientGrantArrayOutput) ToClientGrantArrayOutputWithContext(ctx context.Context) ClientGrantArrayOutput {
	return o
}

func (o ClientGrantArrayOutput) Index(i pulumi.IntInput) ClientGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClientGrant {
		return vs[0].([]*ClientGrant)[vs[1].(int)]
	}).(ClientGrantOutput)
}

type ClientGrantMapOutput struct{ *pulumi.OutputState }

func (ClientGrantMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClientGrant)(nil)).Elem()
}

func (o ClientGrantMapOutput) ToClientGrantMapOutput() ClientGrantMapOutput {
	return o
}

func (o ClientGrantMapOutput) ToClientGrantMapOutputWithContext(ctx context.Context) ClientGrantMapOutput {
	return o
}

func (o ClientGrantMapOutput) MapIndex(k pulumi.StringInput) ClientGrantOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClientGrant {
		return vs[0].(map[string]*ClientGrant)[vs[1].(string)]
	}).(ClientGrantOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClientGrantInput)(nil)).Elem(), &ClientGrant{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientGrantArrayInput)(nil)).Elem(), ClientGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClientGrantMapInput)(nil)).Elem(), ClientGrantMap{})
	pulumi.RegisterOutputType(ClientGrantOutput{})
	pulumi.RegisterOutputType(ClientGrantArrayOutput{})
	pulumi.RegisterOutputType(ClientGrantMapOutput{})
}
