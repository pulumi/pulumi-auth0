// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can create and manage collections of permissions that can be assigned to users, which are otherwise known as roles. Permissions (scopes) are created on `auth0.ResourceServer`, then associated with roles and optionally, users using this resource.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Auth0 = Pulumi.Auth0;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myResourceServer = new Auth0.ResourceServer("myResourceServer", new()
    ///     {
    ///         Identifier = "my-resource-server-identifier",
    ///         SigningAlg = "RS256",
    ///         TokenLifetime = 86400,
    ///         SkipConsentForVerifiableFirstPartyClients = true,
    ///         EnforcePolicies = true,
    ///         Scopes = new[]
    ///         {
    ///             new Auth0.Inputs.ResourceServerScopeArgs
    ///             {
    ///                 Value = "read:something",
    ///                 Description = "read something",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var myRole = new Auth0.Role("myRole", new()
    ///     {
    ///         Description = "Role Description...",
    ///         Permissions = new[]
    ///         {
    ///             new Auth0.Inputs.RolePermissionArgs
    ///             {
    ///                 ResourceServerIdentifier = myResourceServer.Identifier,
    ///                 Name = "read:something",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var myUser = new Auth0.User("myUser", new()
    ///     {
    ///         ConnectionName = "Username-Password-Authentication",
    ///         UserId = "auth0|1234567890",
    ///         Email = "test@test.com",
    ///         Password = "passpass$12$12",
    ///         Nickname = "testnick",
    ///         Username = "testnick",
    ///         Roles = new[]
    ///         {
    ///             myRole.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Existing roles can be imported using their ID. # Example
    /// 
    /// ```sh
    ///  $ pulumi import auth0:index/role:Role my_role XXXXXXXXXXXXXXXXXXXXXXX
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/role:Role")]
    public partial class Role : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description of the role.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Name for this role.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Configuration settings for permissions (scopes) attached to the role. Managing permissions through the `permissions`
        /// attribute is deprecated and it will be removed in a future major version. Migrate to the `auth0_role_permission` or
        /// `auth0_role_permissions` resource to manage role permissions instead. Check the [MIGRATION
        /// GUIDE](https://github.com/auth0/terraform-provider-auth0/blob/main/MIGRATION_GUIDE.md#role-permissions) for more info.
        /// </summary>
        [Output("permissions")]
        public Output<ImmutableArray<Outputs.RolePermission>> Permissions { get; private set; } = null!;


        /// <summary>
        /// Create a Role resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Role(string name, RoleArgs? args = null, CustomResourceOptions? options = null)
            : base("auth0:index/role:Role", name, args ?? new RoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Role(string name, Input<string> id, RoleState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/role:Role", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Role resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Role Get(string name, Input<string> id, RoleState? state = null, CustomResourceOptions? options = null)
        {
            return new Role(name, id, state, options);
        }
    }

    public sealed class RoleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the role.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name for this role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("permissions")]
        private InputList<Inputs.RolePermissionArgs>? _permissions;

        /// <summary>
        /// Configuration settings for permissions (scopes) attached to the role. Managing permissions through the `permissions`
        /// attribute is deprecated and it will be removed in a future major version. Migrate to the `auth0_role_permission` or
        /// `auth0_role_permissions` resource to manage role permissions instead. Check the [MIGRATION
        /// GUIDE](https://github.com/auth0/terraform-provider-auth0/blob/main/MIGRATION_GUIDE.md#role-permissions) for more info.
        /// </summary>
        [Obsolete(@"Managing permissions through the `permissions` attribute is deprecated and it will be removed in a future major version. Migrate to the `auth0_role_permission` or `auth0_role_permissions` resource to manage role permissions instead. Check the [MIGRATION GUIDE](https://github.com/auth0/terraform-provider-auth0/blob/main/MIGRATION_GUIDE.md#role-permissions) for more info.")]
        public InputList<Inputs.RolePermissionArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.RolePermissionArgs>());
            set => _permissions = value;
        }

        public RoleArgs()
        {
            Description = "Managed by Pulumi";
        }
        public static new RoleArgs Empty => new RoleArgs();
    }

    public sealed class RoleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description of the role.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name for this role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("permissions")]
        private InputList<Inputs.RolePermissionGetArgs>? _permissions;

        /// <summary>
        /// Configuration settings for permissions (scopes) attached to the role. Managing permissions through the `permissions`
        /// attribute is deprecated and it will be removed in a future major version. Migrate to the `auth0_role_permission` or
        /// `auth0_role_permissions` resource to manage role permissions instead. Check the [MIGRATION
        /// GUIDE](https://github.com/auth0/terraform-provider-auth0/blob/main/MIGRATION_GUIDE.md#role-permissions) for more info.
        /// </summary>
        [Obsolete(@"Managing permissions through the `permissions` attribute is deprecated and it will be removed in a future major version. Migrate to the `auth0_role_permission` or `auth0_role_permissions` resource to manage role permissions instead. Check the [MIGRATION GUIDE](https://github.com/auth0/terraform-provider-auth0/blob/main/MIGRATION_GUIDE.md#role-permissions) for more info.")]
        public InputList<Inputs.RolePermissionGetArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.RolePermissionGetArgs>());
            set => _permissions = value;
        }

        public RoleState()
        {
            Description = "Managed by Pulumi";
        }
        public static new RoleState Empty => new RoleState();
    }
}
