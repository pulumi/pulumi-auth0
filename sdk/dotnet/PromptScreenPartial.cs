// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can manage a customized sign up and login experience by adding custom content, form elements and css/javascript. You can read more about this [here](https://auth0.com/docs/customize/universal-login-pages/customize-signup-and-login-prompts).
    /// 
    /// !&gt; This resource appends a specific prompt screen to the list of prompt screens displayed to the user during the authentication flow.
    ///  In contrast, the `auth0.PromptScreenPartials` resource manages the complete set of prompt screens that are displayed during the
    ///  authentication flow. To avoid potential issues, it is recommended not to use this resource in conjunction with the
    ///  `auth0.PromptScreenPartials` resource when managing prompt screens for the same prompt.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Auth0 = Pulumi.Auth0;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var login = new Auth0.PromptScreenPartial("login", new()
    ///     {
    ///         PromptType = "login",
    ///         ScreenName = "login",
    ///         InsertionPoints = new Auth0.Inputs.PromptScreenPartialInsertionPointsArgs
    ///         {
    ///             FormContentStart = "&lt;div&gt;Form Content Start&lt;/div&gt;",
    ///             FormContentEnd = "&lt;div&gt;Form Content End&lt;/div&gt;",
    ///         },
    ///     });
    /// 
    ///     var customized_consent = new Auth0.PromptScreenPartial("customized-consent", new()
    ///     {
    ///         PromptType = "customized-consent",
    ///         ScreenName = "customized-consent",
    ///         InsertionPoints = new Auth0.Inputs.PromptScreenPartialInsertionPointsArgs
    ///         {
    ///             FormContent = "&lt;div&gt;Form Content&lt;/div&gt;",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource can be imported using the prompt name and screen_name.
    /// 
    /// As this is not a resource identifiable by an ID within the Auth0 Management API,
    /// 
    /// login can be imported using the prompt name and screen name using the format:
    /// 
    /// prompt_name:screen_name
    /// 
    /// Example:
    /// 
    /// ```sh
    /// $ pulumi import auth0:index/promptScreenPartial:PromptScreenPartial login "login:login"
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/promptScreenPartial:PromptScreenPartial")]
    public partial class PromptScreenPartial : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The insertion points for the partials.
        /// </summary>
        [Output("insertionPoints")]
        public Output<Outputs.PromptScreenPartialInsertionPoints?> InsertionPoints { get; private set; } = null!;

        /// <summary>
        /// The prompt that you are adding partials for. Options are: `login-id`, `login`, `login-password`, `signup`, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.
        /// </summary>
        [Output("promptType")]
        public Output<string> PromptType { get; private set; } = null!;

        /// <summary>
        /// The name of the screen associated with the partials
        /// </summary>
        [Output("screenName")]
        public Output<string> ScreenName { get; private set; } = null!;


        /// <summary>
        /// Create a PromptScreenPartial resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PromptScreenPartial(string name, PromptScreenPartialArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/promptScreenPartial:PromptScreenPartial", name, args ?? new PromptScreenPartialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PromptScreenPartial(string name, Input<string> id, PromptScreenPartialState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/promptScreenPartial:PromptScreenPartial", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PromptScreenPartial resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PromptScreenPartial Get(string name, Input<string> id, PromptScreenPartialState? state = null, CustomResourceOptions? options = null)
        {
            return new PromptScreenPartial(name, id, state, options);
        }
    }

    public sealed class PromptScreenPartialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The insertion points for the partials.
        /// </summary>
        [Input("insertionPoints")]
        public Input<Inputs.PromptScreenPartialInsertionPointsArgs>? InsertionPoints { get; set; }

        /// <summary>
        /// The prompt that you are adding partials for. Options are: `login-id`, `login`, `login-password`, `signup`, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.
        /// </summary>
        [Input("promptType", required: true)]
        public Input<string> PromptType { get; set; } = null!;

        /// <summary>
        /// The name of the screen associated with the partials
        /// </summary>
        [Input("screenName", required: true)]
        public Input<string> ScreenName { get; set; } = null!;

        public PromptScreenPartialArgs()
        {
        }
        public static new PromptScreenPartialArgs Empty => new PromptScreenPartialArgs();
    }

    public sealed class PromptScreenPartialState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The insertion points for the partials.
        /// </summary>
        [Input("insertionPoints")]
        public Input<Inputs.PromptScreenPartialInsertionPointsGetArgs>? InsertionPoints { get; set; }

        /// <summary>
        /// The prompt that you are adding partials for. Options are: `login-id`, `login`, `login-password`, `signup`, `signup-id`, `signup-password`, `login-passwordless`, `customized-consent`.
        /// </summary>
        [Input("promptType")]
        public Input<string>? PromptType { get; set; }

        /// <summary>
        /// The name of the screen associated with the partials
        /// </summary>
        [Input("screenName")]
        public Input<string>? ScreenName { get; set; }

        public PromptScreenPartialState()
        {
        }
        public static new PromptScreenPartialState Empty => new PromptScreenPartialState();
    }
}
