// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    public static class GetAction
    {
        /// <summary>
        /// Data source to retrieve a specific Auth0 action by `name`.
        /// </summary>
        public static Task<GetActionResult> InvokeAsync(GetActionArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetActionResult>("auth0:index/getAction:getAction", args ?? new GetActionArgs(), options.WithDefaults());

        /// <summary>
        /// Data source to retrieve a specific Auth0 action by `name`.
        /// </summary>
        public static Output<GetActionResult> Invoke(GetActionInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetActionResult>("auth0:index/getAction:getAction", args ?? new GetActionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source to retrieve a specific Auth0 action by `name`.
        /// </summary>
        public static Output<GetActionResult> Invoke(GetActionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetActionResult>("auth0:index/getAction:getAction", args ?? new GetActionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetActionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the action. If not provided, `name` must be set.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the action. If not provided, `id` must be set.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetActionArgs()
        {
        }
        public static new GetActionArgs Empty => new GetActionArgs();
    }

    public sealed class GetActionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the action. If not provided, `name` must be set.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the action. If not provided, `id` must be set.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetActionInvokeArgs()
        {
        }
        public static new GetActionInvokeArgs Empty => new GetActionInvokeArgs();
    }


    [OutputType]
    public sealed class GetActionResult
    {
        /// <summary>
        /// The source code of the action.
        /// </summary>
        public readonly string Code;
        /// <summary>
        /// List of third party npm modules, and their versions, that this action depends on.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetActionDependencyResult> Dependencies;
        /// <summary>
        /// Deploying an action will create a new immutable version of the action. If the action is currently bound to a trigger, then the system will begin executing the newly deployed version of the action immediately.
        /// </summary>
        public readonly bool Deploy;
        /// <summary>
        /// The ID of the action. If not provided, `name` must be set.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// The name of the action. If not provided, `id` must be set.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The Node runtime. Possible values are: `node12`, `node16` (not recommended), `node18`, `node22`
        /// </summary>
        public readonly string Runtime;
        /// <summary>
        /// List of secrets that are included in an action or a version of an action. Partial management of secrets is not supported.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetActionSecretResult> Secrets;
        /// <summary>
        /// List of triggers that this action supports. At this time, an action can only target a single trigger at a time. Read Retrieving the set of triggers available within actions to retrieve the latest trigger versions supported.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetActionSupportedTriggerResult> SupportedTriggers;
        /// <summary>
        /// Version ID of the action. This value is available if `deploy` is set to true.
        /// </summary>
        public readonly string VersionId;

        [OutputConstructor]
        private GetActionResult(
            string code,

            ImmutableArray<Outputs.GetActionDependencyResult> dependencies,

            bool deploy,

            string? id,

            string? name,

            string runtime,

            ImmutableArray<Outputs.GetActionSecretResult> secrets,

            ImmutableArray<Outputs.GetActionSupportedTriggerResult> supportedTriggers,

            string versionId)
        {
            Code = code;
            Dependencies = dependencies;
            Deploy = deploy;
            Id = id;
            Name = name;
            Runtime = runtime;
            Secrets = secrets;
            SupportedTriggers = supportedTriggers;
            VersionId = versionId;
        }
    }
}
