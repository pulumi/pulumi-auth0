// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can create and manage Self-Service Profile for a tenant.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Auth0 = Pulumi.Auth0;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mySelfServiceProfile = new Auth0.SelfServiceProfile("my_self_service_profile", new()
    ///     {
    ///         UserAttributes = new[]
    ///         {
    ///             new Auth0.Inputs.SelfServiceProfileUserAttributeArgs
    ///             {
    ///                 Name = "sample-name",
    ///                 Description = "sample-description",
    ///                 IsOptional = true,
    ///             },
    ///         },
    ///         Branding = new Auth0.Inputs.SelfServiceProfileBrandingArgs
    ///         {
    ///             LogoUrl = "https://mycompany.org/v2/logo.png",
    ///             Colors = new Auth0.Inputs.SelfServiceProfileBrandingColorsArgs
    ///             {
    ///                 Primary = "#0059d6",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource can be imported using the id
    /// 
    /// Example:
    /// 
    /// ```sh
    /// $ pulumi import auth0:index/selfServiceProfile:SelfServiceProfile id "ssp_32oi5unksja93124"
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/selfServiceProfile:SelfServiceProfile")]
    public partial class SelfServiceProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Field can be used to customize the look and feel of the wizard.
        /// </summary>
        [Output("branding")]
        public Output<Outputs.SelfServiceProfileBranding> Branding { get; private set; } = null!;

        /// <summary>
        /// The ISO 8601 formatted date the profile was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The ISO 8601 formatted date the profile was updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// This array stores the mapping information that will be shown to the user during the SS-SSO flow. The user will be prompted to map the attributes on their identity provider to ensure the specified attributes get passed to Auth0.
        /// </summary>
        [Output("userAttributes")]
        public Output<ImmutableArray<Outputs.SelfServiceProfileUserAttribute>> UserAttributes { get; private set; } = null!;


        /// <summary>
        /// Create a SelfServiceProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SelfServiceProfile(string name, SelfServiceProfileArgs? args = null, CustomResourceOptions? options = null)
            : base("auth0:index/selfServiceProfile:SelfServiceProfile", name, args ?? new SelfServiceProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SelfServiceProfile(string name, Input<string> id, SelfServiceProfileState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/selfServiceProfile:SelfServiceProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SelfServiceProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SelfServiceProfile Get(string name, Input<string> id, SelfServiceProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new SelfServiceProfile(name, id, state, options);
        }
    }

    public sealed class SelfServiceProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Field can be used to customize the look and feel of the wizard.
        /// </summary>
        [Input("branding")]
        public Input<Inputs.SelfServiceProfileBrandingArgs>? Branding { get; set; }

        [Input("userAttributes")]
        private InputList<Inputs.SelfServiceProfileUserAttributeArgs>? _userAttributes;

        /// <summary>
        /// This array stores the mapping information that will be shown to the user during the SS-SSO flow. The user will be prompted to map the attributes on their identity provider to ensure the specified attributes get passed to Auth0.
        /// </summary>
        public InputList<Inputs.SelfServiceProfileUserAttributeArgs> UserAttributes
        {
            get => _userAttributes ?? (_userAttributes = new InputList<Inputs.SelfServiceProfileUserAttributeArgs>());
            set => _userAttributes = value;
        }

        public SelfServiceProfileArgs()
        {
        }
        public static new SelfServiceProfileArgs Empty => new SelfServiceProfileArgs();
    }

    public sealed class SelfServiceProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Field can be used to customize the look and feel of the wizard.
        /// </summary>
        [Input("branding")]
        public Input<Inputs.SelfServiceProfileBrandingGetArgs>? Branding { get; set; }

        /// <summary>
        /// The ISO 8601 formatted date the profile was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The ISO 8601 formatted date the profile was updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("userAttributes")]
        private InputList<Inputs.SelfServiceProfileUserAttributeGetArgs>? _userAttributes;

        /// <summary>
        /// This array stores the mapping information that will be shown to the user during the SS-SSO flow. The user will be prompted to map the attributes on their identity provider to ensure the specified attributes get passed to Auth0.
        /// </summary>
        public InputList<Inputs.SelfServiceProfileUserAttributeGetArgs> UserAttributes
        {
            get => _userAttributes ?? (_userAttributes = new InputList<Inputs.SelfServiceProfileUserAttributeGetArgs>());
            set => _userAttributes = value;
        }

        public SelfServiceProfileState()
        {
        }
        public static new SelfServiceProfileState Empty => new SelfServiceProfileState();
    }
}
