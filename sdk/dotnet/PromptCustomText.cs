// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can manage custom text on your Auth0 prompts. You can read more about custom texts
    /// [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts).
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Auth0 = Pulumi.Auth0;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var example = new Auth0.PromptCustomText("example", new Auth0.PromptCustomTextArgs
    ///         {
    ///             Prompt = "login",
    ///             Language = "en",
    ///             Body = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 { "login", new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     { "alertListTitle", "Alerts" },
    ///                     { "buttonText", "Continue" },
    ///                     { "description", "Login to" },
    ///                     { "editEmailText", "Edit" },
    ///                     { "emailPlaceholder", "Email address" },
    ///                     { "federatedConnectionButtonText", $"Continue with {connectionName}" },
    ///                     { "footerLinkText", "Sign up" },
    ///                     { "footerText", "Don't have an account?" },
    ///                     { "forgotPasswordText", "Forgot password?" },
    ///                     { "invitationDescription", $"Log in to accept {inviterName}'s invitation to join {companyName} on {clientName}." },
    ///                     { "invitationTitle", "You've Been Invited!" },
    ///                     { "logoAltText", companyName },
    ///                     { "pageTitle", $"Log in | {clientName}" },
    ///                     { "passwordPlaceholder", "Password" },
    ///                     { "separatorText", "Or" },
    ///                     { "signupActionLinkText", footerLinkText },
    ///                     { "signupActionText", footerText },
    ///                     { "title", "Welcome" },
    ///                     { "usernamePlaceholder", "Username or email address" },
    ///                 } },
    ///             }),
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// auth0_prompt_custom_text can be imported using the import command and specifying the prompt and language separated by *:* , e.g. terminal
    /// 
    /// ```sh
    ///  $ pulumi import auth0:index/promptCustomText:PromptCustomText example login:en
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/promptCustomText:PromptCustomText")]
    public partial class PromptCustomText : Pulumi.CustomResource
    {
        /// <summary>
        /// JSON containing the custom texts. You can check the options for each prompt [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts#prompt-values)
        /// </summary>
        [Output("body")]
        public Output<string> Body { get; private set; } = null!;

        /// <summary>
        /// Language of the custom text. Options include `ar`, `bg`, `bs`, `cs`, `da`, `de`, `el`, `en`, `es`, `et`, `fi`, `fr`, `fr-CA`, `fr-FR`, `he`, `hi`, `hr`, `hu`, `id`, `is`, `it`, `ja`, `ko`, `lt`, `lv`, `nb`, `nl`, `pl`, `pt`, `pt-BR`, `pt-PT`, `ro`, `ru`, `sk`, `sl`, `sr`, `sv`, `th`, `tr`, `uk`, `vi`, `zh-CN`, `zh-TW`
        /// </summary>
        [Output("language")]
        public Output<string> Language { get; private set; } = null!;

        /// <summary>
        /// The term `prompt` is used to refer to a specific step in the login flow. Options include `login`, `login-id`, `login-password`, `login-email-verification`, `signup`, `signup-id`, `signup-password`, `reset-password`, `consent`, `mfa-push`, `mfa-otp`, `mfa-voice`, `mfa-phone`, `mfa-webauthn`, `mfa-sms`, `mfa-email`, `mfa-recovery-code`, `mfa`, `status`, `device-flow`, `email-verification`, `email-otp-challenge`, `organizations`, `invitation`, `common`
        /// </summary>
        [Output("prompt")]
        public Output<string> Prompt { get; private set; } = null!;


        /// <summary>
        /// Create a PromptCustomText resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PromptCustomText(string name, PromptCustomTextArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/promptCustomText:PromptCustomText", name, args ?? new PromptCustomTextArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PromptCustomText(string name, Input<string> id, PromptCustomTextState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/promptCustomText:PromptCustomText", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PromptCustomText resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PromptCustomText Get(string name, Input<string> id, PromptCustomTextState? state = null, CustomResourceOptions? options = null)
        {
            return new PromptCustomText(name, id, state, options);
        }
    }

    public sealed class PromptCustomTextArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// JSON containing the custom texts. You can check the options for each prompt [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts#prompt-values)
        /// </summary>
        [Input("body", required: true)]
        public Input<string> Body { get; set; } = null!;

        /// <summary>
        /// Language of the custom text. Options include `ar`, `bg`, `bs`, `cs`, `da`, `de`, `el`, `en`, `es`, `et`, `fi`, `fr`, `fr-CA`, `fr-FR`, `he`, `hi`, `hr`, `hu`, `id`, `is`, `it`, `ja`, `ko`, `lt`, `lv`, `nb`, `nl`, `pl`, `pt`, `pt-BR`, `pt-PT`, `ro`, `ru`, `sk`, `sl`, `sr`, `sv`, `th`, `tr`, `uk`, `vi`, `zh-CN`, `zh-TW`
        /// </summary>
        [Input("language", required: true)]
        public Input<string> Language { get; set; } = null!;

        /// <summary>
        /// The term `prompt` is used to refer to a specific step in the login flow. Options include `login`, `login-id`, `login-password`, `login-email-verification`, `signup`, `signup-id`, `signup-password`, `reset-password`, `consent`, `mfa-push`, `mfa-otp`, `mfa-voice`, `mfa-phone`, `mfa-webauthn`, `mfa-sms`, `mfa-email`, `mfa-recovery-code`, `mfa`, `status`, `device-flow`, `email-verification`, `email-otp-challenge`, `organizations`, `invitation`, `common`
        /// </summary>
        [Input("prompt", required: true)]
        public Input<string> Prompt { get; set; } = null!;

        public PromptCustomTextArgs()
        {
        }
    }

    public sealed class PromptCustomTextState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// JSON containing the custom texts. You can check the options for each prompt [here](https://auth0.com/docs/customize/universal-login-pages/customize-login-text-prompts#prompt-values)
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// Language of the custom text. Options include `ar`, `bg`, `bs`, `cs`, `da`, `de`, `el`, `en`, `es`, `et`, `fi`, `fr`, `fr-CA`, `fr-FR`, `he`, `hi`, `hr`, `hu`, `id`, `is`, `it`, `ja`, `ko`, `lt`, `lv`, `nb`, `nl`, `pl`, `pt`, `pt-BR`, `pt-PT`, `ro`, `ru`, `sk`, `sl`, `sr`, `sv`, `th`, `tr`, `uk`, `vi`, `zh-CN`, `zh-TW`
        /// </summary>
        [Input("language")]
        public Input<string>? Language { get; set; }

        /// <summary>
        /// The term `prompt` is used to refer to a specific step in the login flow. Options include `login`, `login-id`, `login-password`, `login-email-verification`, `signup`, `signup-id`, `signup-password`, `reset-password`, `consent`, `mfa-push`, `mfa-otp`, `mfa-voice`, `mfa-phone`, `mfa-webauthn`, `mfa-sms`, `mfa-email`, `mfa-recovery-code`, `mfa`, `status`, `device-flow`, `email-verification`, `email-otp-challenge`, `organizations`, `invitation`, `common`
        /// </summary>
        [Input("prompt")]
        public Input<string>? Prompt { get; set; }

        public PromptCustomTextState()
        {
        }
    }
}
