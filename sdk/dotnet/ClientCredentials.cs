// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can configure the method to use when making requests to any endpoint that requires this client to authenticate.
    /// 
    /// &gt; Refer to the client secret rotation guide
    /// for instructions on how to rotate client secrets with zero downtime.
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by specifying the client ID.
    /// 
    /// Example:
    /// 
    /// ```sh
    /// $ pulumi import auth0:index/clientCredentials:ClientCredentials my_creds "AaiyAPdpYdesoKnqjj8HJqRn4T5titww"
    /// ```
    /// 
    /// ~&gt; Importing this resource when the `authentication_method` is set to `private_key_jwt` will force the resource to be recreated.
    /// 
    /// This is to be expected, because the pem file can't be checked for differences.
    /// </summary>
    [Auth0ResourceType("auth0:index/clientCredentials:ClientCredentials")]
    public partial class ClientCredentials : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configure the method to use when making requests to any endpoint that requires this client to authenticate. Options include `None` (public client without a client secret), `ClientSecretPost` (confidential client using HTTP POST parameters), `ClientSecretBasic` (confidential client using HTTP Basic), `PrivateKeyJwt` (confidential client using a Private Key JWT), `TlsClientAuth` (confidential client using CA-based mTLS authentication), `SelfSignedTlsClientAuth` (confidential client using mTLS authentication utilizing a self-signed certificate).
        /// </summary>
        [Output("authenticationMethod")]
        public Output<string> AuthenticationMethod { get; private set; } = null!;

        /// <summary>
        /// The ID of the client for which to configure the authentication method.
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        [Output("clientSecret")]
        public Output<string> ClientSecret { get; private set; } = null!;

        /// <summary>
        /// Defines `PrivateKeyJwt` client authentication method.
        /// </summary>
        [Output("privateKeyJwt")]
        public Output<Outputs.ClientCredentialsPrivateKeyJwt?> PrivateKeyJwt { get; private set; } = null!;

        /// <summary>
        /// Defines `TlsClientAuth` client authentication method.
        /// </summary>
        [Output("selfSignedTlsClientAuth")]
        public Output<Outputs.ClientCredentialsSelfSignedTlsClientAuth?> SelfSignedTlsClientAuth { get; private set; } = null!;

        /// <summary>
        /// Configuration for JWT-secured Authorization Requests(JAR).
        /// </summary>
        [Output("signedRequestObject")]
        public Output<Outputs.ClientCredentialsSignedRequestObject?> SignedRequestObject { get; private set; } = null!;

        /// <summary>
        /// Defines `TlsClientAuth` client authentication method.
        /// </summary>
        [Output("tlsClientAuth")]
        public Output<Outputs.ClientCredentialsTlsClientAuth?> TlsClientAuth { get; private set; } = null!;


        /// <summary>
        /// Create a ClientCredentials resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClientCredentials(string name, ClientCredentialsArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/clientCredentials:ClientCredentials", name, args ?? new ClientCredentialsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClientCredentials(string name, Input<string> id, ClientCredentialsState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/clientCredentials:ClientCredentials", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "clientSecret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClientCredentials resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClientCredentials Get(string name, Input<string> id, ClientCredentialsState? state = null, CustomResourceOptions? options = null)
        {
            return new ClientCredentials(name, id, state, options);
        }
    }

    public sealed class ClientCredentialsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configure the method to use when making requests to any endpoint that requires this client to authenticate. Options include `None` (public client without a client secret), `ClientSecretPost` (confidential client using HTTP POST parameters), `ClientSecretBasic` (confidential client using HTTP Basic), `PrivateKeyJwt` (confidential client using a Private Key JWT), `TlsClientAuth` (confidential client using CA-based mTLS authentication), `SelfSignedTlsClientAuth` (confidential client using mTLS authentication utilizing a self-signed certificate).
        /// </summary>
        [Input("authenticationMethod")]
        public Input<string>? AuthenticationMethod { get; set; }

        /// <summary>
        /// The ID of the client for which to configure the authentication method.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        [Input("clientSecret")]
        private Input<string>? _clientSecret;
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Defines `PrivateKeyJwt` client authentication method.
        /// </summary>
        [Input("privateKeyJwt")]
        public Input<Inputs.ClientCredentialsPrivateKeyJwtArgs>? PrivateKeyJwt { get; set; }

        /// <summary>
        /// Defines `TlsClientAuth` client authentication method.
        /// </summary>
        [Input("selfSignedTlsClientAuth")]
        public Input<Inputs.ClientCredentialsSelfSignedTlsClientAuthArgs>? SelfSignedTlsClientAuth { get; set; }

        /// <summary>
        /// Configuration for JWT-secured Authorization Requests(JAR).
        /// </summary>
        [Input("signedRequestObject")]
        public Input<Inputs.ClientCredentialsSignedRequestObjectArgs>? SignedRequestObject { get; set; }

        /// <summary>
        /// Defines `TlsClientAuth` client authentication method.
        /// </summary>
        [Input("tlsClientAuth")]
        public Input<Inputs.ClientCredentialsTlsClientAuthArgs>? TlsClientAuth { get; set; }

        public ClientCredentialsArgs()
        {
        }
        public static new ClientCredentialsArgs Empty => new ClientCredentialsArgs();
    }

    public sealed class ClientCredentialsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configure the method to use when making requests to any endpoint that requires this client to authenticate. Options include `None` (public client without a client secret), `ClientSecretPost` (confidential client using HTTP POST parameters), `ClientSecretBasic` (confidential client using HTTP Basic), `PrivateKeyJwt` (confidential client using a Private Key JWT), `TlsClientAuth` (confidential client using CA-based mTLS authentication), `SelfSignedTlsClientAuth` (confidential client using mTLS authentication utilizing a self-signed certificate).
        /// </summary>
        [Input("authenticationMethod")]
        public Input<string>? AuthenticationMethod { get; set; }

        /// <summary>
        /// The ID of the client for which to configure the authentication method.
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        [Input("clientSecret")]
        private Input<string>? _clientSecret;
        public Input<string>? ClientSecret
        {
            get => _clientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Defines `PrivateKeyJwt` client authentication method.
        /// </summary>
        [Input("privateKeyJwt")]
        public Input<Inputs.ClientCredentialsPrivateKeyJwtGetArgs>? PrivateKeyJwt { get; set; }

        /// <summary>
        /// Defines `TlsClientAuth` client authentication method.
        /// </summary>
        [Input("selfSignedTlsClientAuth")]
        public Input<Inputs.ClientCredentialsSelfSignedTlsClientAuthGetArgs>? SelfSignedTlsClientAuth { get; set; }

        /// <summary>
        /// Configuration for JWT-secured Authorization Requests(JAR).
        /// </summary>
        [Input("signedRequestObject")]
        public Input<Inputs.ClientCredentialsSignedRequestObjectGetArgs>? SignedRequestObject { get; set; }

        /// <summary>
        /// Defines `TlsClientAuth` client authentication method.
        /// </summary>
        [Input("tlsClientAuth")]
        public Input<Inputs.ClientCredentialsTlsClientAuthGetArgs>? TlsClientAuth { get; set; }

        public ClientCredentialsState()
        {
        }
        public static new ClientCredentialsState Empty => new ClientCredentialsState();
    }
}
