// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can manage a client grant associated with an organization.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Auth0 = Pulumi.Auth0;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create an Organization
    ///     var myOrganization = new Auth0.Organization("my_organization", new()
    ///     {
    ///         Name = "test-org-acceptance-testing",
    ///         DisplayName = "Test Org Acceptance Testing",
    ///     });
    /// 
    ///     // Create a Resource Server
    ///     var newResourceServer = new Auth0.ResourceServer("new_resource_server", new()
    ///     {
    ///         Name = "Example API",
    ///         Identifier = "https://api.travel00123.com/",
    ///     });
    /// 
    ///     // Create a Client by referencing the newly created organisation or by reference an existing one.
    ///     var myTestClient = new Auth0.Client("my_test_client", new()
    ///     {
    ///         Name = "test_client",
    ///         OrganizationUsage = "allow",
    ///         DefaultOrganization = new Auth0.Inputs.ClientDefaultOrganizationArgs
    ///         {
    ///             OrganizationId = myOrganization.Id,
    ///             Flows = new[]
    ///             {
    ///                 "client_credentials",
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             myOrganization,
    ///             newResourceServer,
    ///         },
    ///     });
    /// 
    ///     // Create a client grant which is associated with the client and resource server.
    ///     var myClientGrant = new Auth0.ClientGrant("my_client_grant", new()
    ///     {
    ///         ClientId = myTestClient.Id,
    ///         Audience = newResourceServer.Identifier,
    ///         Scopes = new[]
    ///         {
    ///             "create:organization_client_grants",
    ///             "create:resource",
    ///         },
    ///         AllowAnyOrganization = true,
    ///         OrganizationUsage = "allow",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             newResourceServer,
    ///             myTestClient,
    ///         },
    ///     });
    /// 
    ///     // Create the organization and client grant association
    ///     var associateOrgClientGrant = new Auth0.OrganizationClientGrant("associate_org_client_grant", new()
    ///     {
    ///         OrganizationId = myOrganization.Id,
    ///         GrantId = myClientGrant.Id,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             myClientGrant,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by specifying the
    /// 
    /// organization ID and client grant ID separated by "::" (note the double colon)
    /// 
    /// &lt;organizationID&gt;::&lt;clientGrantID&gt;
    /// 
    /// Example:
    /// 
    /// ```sh
    /// $ pulumi import auth0:index/organizationClientGrant:OrganizationClientGrant my_org_client_grant "org_XXXXX::cgr_XXXXX"
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/organizationClientGrant:OrganizationClientGrant")]
    public partial class OrganizationClientGrant : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A Client Grant ID to add to the organization.
        /// </summary>
        [Output("grantId")]
        public Output<string> GrantId { get; private set; } = null!;

        /// <summary>
        /// The ID of the organization to associate the client grant.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationClientGrant resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationClientGrant(string name, OrganizationClientGrantArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/organizationClientGrant:OrganizationClientGrant", name, args ?? new OrganizationClientGrantArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationClientGrant(string name, Input<string> id, OrganizationClientGrantState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/organizationClientGrant:OrganizationClientGrant", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationClientGrant resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationClientGrant Get(string name, Input<string> id, OrganizationClientGrantState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationClientGrant(name, id, state, options);
        }
    }

    public sealed class OrganizationClientGrantArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A Client Grant ID to add to the organization.
        /// </summary>
        [Input("grantId", required: true)]
        public Input<string> GrantId { get; set; } = null!;

        /// <summary>
        /// The ID of the organization to associate the client grant.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public OrganizationClientGrantArgs()
        {
        }
        public static new OrganizationClientGrantArgs Empty => new OrganizationClientGrantArgs();
    }

    public sealed class OrganizationClientGrantState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A Client Grant ID to add to the organization.
        /// </summary>
        [Input("grantId")]
        public Input<string>? GrantId { get; set; }

        /// <summary>
        /// The ID of the organization to associate the client grant.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        public OrganizationClientGrantState()
        {
        }
        public static new OrganizationClientGrantState Empty => new OrganizationClientGrantState();
    }
}
