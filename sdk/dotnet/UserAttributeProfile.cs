// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can manage User Attribute Profiles within Auth0. User Attribute Profiles allow you to define how user attributes are mapped between different identity providers and Auth0.
    /// 
    /// &gt; This resource is only available for [EA](https://auth0.com/docs/troubleshoot/product-lifecycle/product-release-stages#early-access) users.
    /// </summary>
    [Auth0ResourceType("auth0:index/userAttributeProfile:UserAttributeProfile")]
    public partial class UserAttributeProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the User Attribute Profile.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of user attribute configurations.
        /// </summary>
        [Output("userAttributes")]
        public Output<ImmutableArray<Outputs.UserAttributeProfileUserAttribute>> UserAttributes { get; private set; } = null!;

        /// <summary>
        /// Configuration for mapping the user ID from identity providers.
        /// </summary>
        [Output("userId")]
        public Output<Outputs.UserAttributeProfileUserId> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a UserAttributeProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserAttributeProfile(string name, UserAttributeProfileArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/userAttributeProfile:UserAttributeProfile", name, args ?? new UserAttributeProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserAttributeProfile(string name, Input<string> id, UserAttributeProfileState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/userAttributeProfile:UserAttributeProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserAttributeProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserAttributeProfile Get(string name, Input<string> id, UserAttributeProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new UserAttributeProfile(name, id, state, options);
        }
    }

    public sealed class UserAttributeProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the User Attribute Profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("userAttributes", required: true)]
        private InputList<Inputs.UserAttributeProfileUserAttributeArgs>? _userAttributes;

        /// <summary>
        /// List of user attribute configurations.
        /// </summary>
        public InputList<Inputs.UserAttributeProfileUserAttributeArgs> UserAttributes
        {
            get => _userAttributes ?? (_userAttributes = new InputList<Inputs.UserAttributeProfileUserAttributeArgs>());
            set => _userAttributes = value;
        }

        /// <summary>
        /// Configuration for mapping the user ID from identity providers.
        /// </summary>
        [Input("userId")]
        public Input<Inputs.UserAttributeProfileUserIdArgs>? UserId { get; set; }

        public UserAttributeProfileArgs()
        {
        }
        public static new UserAttributeProfileArgs Empty => new UserAttributeProfileArgs();
    }

    public sealed class UserAttributeProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the User Attribute Profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("userAttributes")]
        private InputList<Inputs.UserAttributeProfileUserAttributeGetArgs>? _userAttributes;

        /// <summary>
        /// List of user attribute configurations.
        /// </summary>
        public InputList<Inputs.UserAttributeProfileUserAttributeGetArgs> UserAttributes
        {
            get => _userAttributes ?? (_userAttributes = new InputList<Inputs.UserAttributeProfileUserAttributeGetArgs>());
            set => _userAttributes = value;
        }

        /// <summary>
        /// Configuration for mapping the user ID from identity providers.
        /// </summary>
        [Input("userId")]
        public Input<Inputs.UserAttributeProfileUserIdGetArgs>? UserId { get; set; }

        public UserAttributeProfileState()
        {
        }
        public static new UserAttributeProfileState Empty => new UserAttributeProfileState();
    }
}
