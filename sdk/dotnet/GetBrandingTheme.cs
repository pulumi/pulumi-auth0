// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    public static class GetBrandingTheme
    {
        /// <summary>
        /// Use this data source to access information about the tenant's branding theme settings.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Auth0 = Pulumi.Auth0;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myBrandingTheme = Auth0.GetBrandingTheme.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetBrandingThemeResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBrandingThemeResult>("auth0:index/getBrandingTheme:getBrandingTheme", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about the tenant's branding theme settings.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Auth0 = Pulumi.Auth0;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myBrandingTheme = Auth0.GetBrandingTheme.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetBrandingThemeResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBrandingThemeResult>("auth0:index/getBrandingTheme:getBrandingTheme", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetBrandingThemeResult
    {
        public readonly ImmutableArray<Outputs.GetBrandingThemeBorderResult> Borders;
        public readonly ImmutableArray<Outputs.GetBrandingThemeColorResult> Colors;
        /// <summary>
        /// The display name for the branding theme.
        /// </summary>
        public readonly string DisplayName;
        public readonly ImmutableArray<Outputs.GetBrandingThemeFontResult> Fonts;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetBrandingThemePageBackgroundResult> PageBackgrounds;
        public readonly ImmutableArray<Outputs.GetBrandingThemeWidgetResult> Widgets;

        [OutputConstructor]
        private GetBrandingThemeResult(
            ImmutableArray<Outputs.GetBrandingThemeBorderResult> borders,

            ImmutableArray<Outputs.GetBrandingThemeColorResult> colors,

            string displayName,

            ImmutableArray<Outputs.GetBrandingThemeFontResult> fonts,

            string id,

            ImmutableArray<Outputs.GetBrandingThemePageBackgroundResult> pageBackgrounds,

            ImmutableArray<Outputs.GetBrandingThemeWidgetResult> widgets)
        {
            Borders = borders;
            Colors = colors;
            DisplayName = displayName;
            Fonts = fonts;
            Id = id;
            PageBackgrounds = pageBackgrounds;
            Widgets = widgets;
        }
    }
}
