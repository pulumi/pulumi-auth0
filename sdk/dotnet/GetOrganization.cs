// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    public static class GetOrganization
    {
        /// <summary>
        /// Data source to retrieve a specific Auth0 organization by `organization_id` or `name`.
        /// </summary>
        public static Task<GetOrganizationResult> InvokeAsync(GetOrganizationArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationResult>("auth0:index/getOrganization:getOrganization", args ?? new GetOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// Data source to retrieve a specific Auth0 organization by `organization_id` or `name`.
        /// </summary>
        public static Output<GetOrganizationResult> Invoke(GetOrganizationInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOrganizationResult>("auth0:index/getOrganization:getOrganization", args ?? new GetOrganizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the organization. If not provided, `organization_id` must be set. For performance, it is advised to use the `organization_id` as a lookup if possible.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The ID of the organization. If not provided, `name` must be set.
        /// </summary>
        [Input("organizationId")]
        public string? OrganizationId { get; set; }

        public GetOrganizationArgs()
        {
        }
        public static new GetOrganizationArgs Empty => new GetOrganizationArgs();
    }

    public sealed class GetOrganizationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the organization. If not provided, `organization_id` must be set. For performance, it is advised to use the `organization_id` as a lookup if possible.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the organization. If not provided, `name` must be set.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        public GetOrganizationInvokeArgs()
        {
        }
        public static new GetOrganizationInvokeArgs Empty => new GetOrganizationInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationResult
    {
        /// <summary>
        /// Defines how to style the login pages.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetOrganizationBrandingResult> Brandings;
        public readonly ImmutableArray<Outputs.GetOrganizationConnectionResult> Connections;
        /// <summary>
        /// Friendly name of this organization.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// User ID(s) that are members of the organization.
        /// </summary>
        public readonly ImmutableArray<string> Members;
        /// <summary>
        /// Metadata associated with the organization. Maximum of 10 metadata properties allowed.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// The name of the organization. If not provided, `organization_id` must be set. For performance, it is advised to use the `organization_id` as a lookup if possible.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The ID of the organization. If not provided, `name` must be set.
        /// </summary>
        public readonly string? OrganizationId;

        [OutputConstructor]
        private GetOrganizationResult(
            ImmutableArray<Outputs.GetOrganizationBrandingResult> brandings,

            ImmutableArray<Outputs.GetOrganizationConnectionResult> connections,

            string displayName,

            string id,

            ImmutableArray<string> members,

            ImmutableDictionary<string, string> metadata,

            string? name,

            string? organizationId)
        {
            Brandings = brandings;
            Connections = connections;
            DisplayName = displayName;
            Id = id;
            Members = members;
            Metadata = metadata;
            Name = name;
            OrganizationId = organizationId;
        }
    }
}
