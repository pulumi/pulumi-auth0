// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// Allows you to manage Auth0 Event Streams.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Auth0 = Pulumi.Auth0;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Creates an event stream of type eventbridge
    ///     var myEventStreamEventBridge = new Auth0.EventStream("my_event_stream_event_bridge", new()
    ///     {
    ///         Name = "my-eventbridge",
    ///         DestinationType = "eventbridge",
    ///         Subscriptions = new[]
    ///         {
    ///             "user.created",
    ///             "user.updated",
    ///         },
    ///         EventbridgeConfiguration = new Auth0.Inputs.EventStreamEventbridgeConfigurationArgs
    ///         {
    ///             AwsAccountId = "242849305777",
    ///             AwsRegion = "us-east-1",
    ///         },
    ///     });
    /// 
    ///     // Creates an event stream of type webhook
    ///     var myEventStreamWebhook = new Auth0.EventStream("my_event_stream_webhook", new()
    ///     {
    ///         Name = "my-webhook",
    ///         DestinationType = "webhook",
    ///         Subscriptions = new[]
    ///         {
    ///             "user.created",
    ///             "user.updated",
    ///         },
    ///         WebhookConfiguration = new Auth0.Inputs.EventStreamWebhookConfigurationArgs
    ///         {
    ///             WebhookEndpoint = "https://eof28wtn4v4506o.m.pipedream.net",
    ///             WebhookAuthorization = new Auth0.Inputs.EventStreamWebhookConfigurationWebhookAuthorizationArgs
    ///             {
    ///                 Method = "bearer",
    ///                 Token = "123456789",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by specifying the Event Stream ID.
    /// 
    /// Example:
    /// 
    /// ```sh
    /// $ pulumi import auth0:index/eventStream:EventStream my_stream "est_XXXXXXXXXXXXXXXX"
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/eventStream:EventStream")]
    public partial class EventStream : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ISO 8601 timestamp when the stream was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The type of event stream destination (either 'eventbridge' or 'webhook').
        /// </summary>
        [Output("destinationType")]
        public Output<string> DestinationType { get; private set; } = null!;

        /// <summary>
        /// Configuration for the EventBridge destination. This block is only applicable when `DestinationType` is set to `Eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
        /// </summary>
        [Output("eventbridgeConfiguration")]
        public Output<Outputs.EventStreamEventbridgeConfiguration?> EventbridgeConfiguration { get; private set; } = null!;

        /// <summary>
        /// The name of the event stream.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The current status of the event stream.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// List of event types this stream is subscribed to.
        /// </summary>
        [Output("subscriptions")]
        public Output<ImmutableArray<string>> Subscriptions { get; private set; } = null!;

        /// <summary>
        /// The ISO 8601 timestamp when the stream was last updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// Configuration for the Webhook destination. This block is only applicable when `DestinationType` is set to `Webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
        /// </summary>
        [Output("webhookConfiguration")]
        public Output<Outputs.EventStreamWebhookConfiguration?> WebhookConfiguration { get; private set; } = null!;


        /// <summary>
        /// Create a EventStream resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EventStream(string name, EventStreamArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/eventStream:EventStream", name, args ?? new EventStreamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EventStream(string name, Input<string> id, EventStreamState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/eventStream:EventStream", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EventStream resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EventStream Get(string name, Input<string> id, EventStreamState? state = null, CustomResourceOptions? options = null)
        {
            return new EventStream(name, id, state, options);
        }
    }

    public sealed class EventStreamArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of event stream destination (either 'eventbridge' or 'webhook').
        /// </summary>
        [Input("destinationType", required: true)]
        public Input<string> DestinationType { get; set; } = null!;

        /// <summary>
        /// Configuration for the EventBridge destination. This block is only applicable when `DestinationType` is set to `Eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
        /// </summary>
        [Input("eventbridgeConfiguration")]
        public Input<Inputs.EventStreamEventbridgeConfigurationArgs>? EventbridgeConfiguration { get; set; }

        /// <summary>
        /// The name of the event stream.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("subscriptions", required: true)]
        private InputList<string>? _subscriptions;

        /// <summary>
        /// List of event types this stream is subscribed to.
        /// </summary>
        public InputList<string> Subscriptions
        {
            get => _subscriptions ?? (_subscriptions = new InputList<string>());
            set => _subscriptions = value;
        }

        /// <summary>
        /// Configuration for the Webhook destination. This block is only applicable when `DestinationType` is set to `Webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
        /// </summary>
        [Input("webhookConfiguration")]
        public Input<Inputs.EventStreamWebhookConfigurationArgs>? WebhookConfiguration { get; set; }

        public EventStreamArgs()
        {
        }
        public static new EventStreamArgs Empty => new EventStreamArgs();
    }

    public sealed class EventStreamState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ISO 8601 timestamp when the stream was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The type of event stream destination (either 'eventbridge' or 'webhook').
        /// </summary>
        [Input("destinationType")]
        public Input<string>? DestinationType { get; set; }

        /// <summary>
        /// Configuration for the EventBridge destination. This block is only applicable when `DestinationType` is set to `Eventbridge`. EventBridge configurations **cannot** be updated after creation. Any change to this block will force the resource to be recreated.
        /// </summary>
        [Input("eventbridgeConfiguration")]
        public Input<Inputs.EventStreamEventbridgeConfigurationGetArgs>? EventbridgeConfiguration { get; set; }

        /// <summary>
        /// The name of the event stream.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The current status of the event stream.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("subscriptions")]
        private InputList<string>? _subscriptions;

        /// <summary>
        /// List of event types this stream is subscribed to.
        /// </summary>
        public InputList<string> Subscriptions
        {
            get => _subscriptions ?? (_subscriptions = new InputList<string>());
            set => _subscriptions = value;
        }

        /// <summary>
        /// The ISO 8601 timestamp when the stream was last updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// Configuration for the Webhook destination. This block is only applicable when `DestinationType` is set to `Webhook`. Webhook configurations **can** be updated after creation, including the endpoint and authorization fields.
        /// </summary>
        [Input("webhookConfiguration")]
        public Input<Inputs.EventStreamWebhookConfigurationGetArgs>? WebhookConfiguration { get; set; }

        public EventStreamState()
        {
        }
        public static new EventStreamState Empty => new EventStreamState();
    }
}
