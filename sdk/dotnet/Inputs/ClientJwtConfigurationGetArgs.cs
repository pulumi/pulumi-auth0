// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0.Inputs
{

    public sealed class ClientJwtConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Algorithm used to sign JWTs. Can be one of `HS256`, `RS256`, `PS256`.
        /// </summary>
        [Input("alg")]
        public Input<string>? Alg { get; set; }

        /// <summary>
        /// Number of seconds during which the JWT will be valid.
        /// </summary>
        [Input("lifetimeInSeconds")]
        public Input<int>? LifetimeInSeconds { get; set; }

        [Input("scopes")]
        private InputMap<string>? _scopes;

        /// <summary>
        /// Permissions (scopes) included in JWTs.
        /// </summary>
        public InputMap<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputMap<string>());
            set => _scopes = value;
        }

        /// <summary>
        /// Indicates whether the client secret is Base64-encoded.
        /// </summary>
        [Input("secretEncoded")]
        public Input<bool>? SecretEncoded { get; set; }

        public ClientJwtConfigurationGetArgs()
        {
        }
        public static new ClientJwtConfigurationGetArgs Empty => new ClientJwtConfigurationGetArgs();
    }
}
