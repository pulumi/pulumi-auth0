// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0.Inputs
{

    public sealed class UserAttributeProfileUserAttributeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Auth0 mapping for the user attribute.
        /// </summary>
        [Input("auth0Mapping", required: true)]
        public Input<string> Auth0Mapping { get; set; } = null!;

        /// <summary>
        /// Description of the user attribute.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// Display label for the user attribute.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        /// <summary>
        /// Name of the user attribute.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The OIDC mapping configuration for the user attribute.
        /// </summary>
        [Input("oidcMapping")]
        public Input<Inputs.UserAttributeProfileUserAttributeOidcMappingArgs>? OidcMapping { get; set; }

        /// <summary>
        /// Whether the attribute is required in the profile.
        /// </summary>
        [Input("profileRequired", required: true)]
        public Input<bool> ProfileRequired { get; set; } = null!;

        [Input("samlMappings")]
        private InputList<string>? _samlMappings;

        /// <summary>
        /// SAML mapping override for this strategy.
        /// </summary>
        public InputList<string> SamlMappings
        {
            get => _samlMappings ?? (_samlMappings = new InputList<string>());
            set => _samlMappings = value;
        }

        /// <summary>
        /// The SCIM mapping for the user attribute.
        /// </summary>
        [Input("scimMapping")]
        public Input<string>? ScimMapping { get; set; }

        [Input("strategyOverrides")]
        private InputList<Inputs.UserAttributeProfileUserAttributeStrategyOverrideArgs>? _strategyOverrides;

        /// <summary>
        /// Strategy-specific overrides for user attribute mapping.
        /// </summary>
        public InputList<Inputs.UserAttributeProfileUserAttributeStrategyOverrideArgs> StrategyOverrides
        {
            get => _strategyOverrides ?? (_strategyOverrides = new InputList<Inputs.UserAttributeProfileUserAttributeStrategyOverrideArgs>());
            set => _strategyOverrides = value;
        }

        public UserAttributeProfileUserAttributeArgs()
        {
        }
        public static new UserAttributeProfileUserAttributeArgs Empty => new UserAttributeProfileUserAttributeArgs();
    }
}
