// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// This resource is used to manage members of an organization.
    /// 
    /// !&gt; This resource manages all the members assigned to an organization. In contrast, the `auth0.OrganizationMember`
    /// resource only appends a member to an organization. To avoid potential issues, it is recommended not to use this
    /// resource in conjunction with the `auth0.OrganizationMember` resource when managing members for the same organization
    /// id.
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by specifying the organization ID. # Example
    /// 
    /// ```sh
    ///  $ pulumi import auth0:index/organizationMembers:OrganizationMembers my_org_members "org_XXXXX"
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/organizationMembers:OrganizationMembers")]
    public partial class OrganizationMembers : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Add user ID(s) directly from the tenant to become members of the organization.
        /// </summary>
        [Output("members")]
        public Output<ImmutableArray<string>> Members { get; private set; } = null!;

        /// <summary>
        /// The ID of the organization to assign the members to.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationMembers resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationMembers(string name, OrganizationMembersArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/organizationMembers:OrganizationMembers", name, args ?? new OrganizationMembersArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationMembers(string name, Input<string> id, OrganizationMembersState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/organizationMembers:OrganizationMembers", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationMembers resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationMembers Get(string name, Input<string> id, OrganizationMembersState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationMembers(name, id, state, options);
        }
    }

    public sealed class OrganizationMembersArgs : global::Pulumi.ResourceArgs
    {
        [Input("members", required: true)]
        private InputList<string>? _members;

        /// <summary>
        /// Add user ID(s) directly from the tenant to become members of the organization.
        /// </summary>
        public InputList<string> Members
        {
            get => _members ?? (_members = new InputList<string>());
            set => _members = value;
        }

        /// <summary>
        /// The ID of the organization to assign the members to.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public OrganizationMembersArgs()
        {
        }
        public static new OrganizationMembersArgs Empty => new OrganizationMembersArgs();
    }

    public sealed class OrganizationMembersState : global::Pulumi.ResourceArgs
    {
        [Input("members")]
        private InputList<string>? _members;

        /// <summary>
        /// Add user ID(s) directly from the tenant to become members of the organization.
        /// </summary>
        public InputList<string> Members
        {
            get => _members ?? (_members = new InputList<string>());
            set => _members = value;
        }

        /// <summary>
        /// The ID of the organization to assign the members to.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        public OrganizationMembersState()
        {
        }
        public static new OrganizationMembersState Empty => new OrganizationMembersState();
    }
}
