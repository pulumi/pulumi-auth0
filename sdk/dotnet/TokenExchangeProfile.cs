// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can manage Auth0 Custom Token Exchange Profiles
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Auth0 = Pulumi.Auth0;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Below action is created with custom-token-exchange as supported_triggers
    ///     // This action is then linked using the action_id param to the token-exchange profile
    ///     var myAction = new Auth0.Action("my_action", new()
    ///     {
    ///         Name = "TokenExchange-Action",
    ///         Code = @"exports.onContinuePostLogin = async (event, api) =&gt; {
    /// 	console.log(""foo"")
    /// };""
    /// ",
    ///         Deploy = true,
    ///         SupportedTriggers = new Auth0.Inputs.ActionSupportedTriggersArgs
    ///         {
    ///             Id = "custom-token-exchange",
    ///             Version = "v1",
    ///         },
    ///     });
    /// 
    ///     var myTokenExchangeProfile = new Auth0.TokenExchangeProfile("my_token_exchange_profile", new()
    ///     {
    ///         Name = "token-exchange-prof",
    ///         SubjectTokenType = "https://acme.com/cis-token",
    ///         ActionId = myAction.Id,
    ///         Type = "custom_authentication",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource can be imported using the token exchange profile ID.
    /// 
    /// # 
    /// 
    /// Example:
    /// 
    /// ```sh
    /// $ pulumi import auth0:index/tokenExchangeProfile:TokenExchangeProfile profile "tep_XXXXXXXXXXXXXX"
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/tokenExchangeProfile:TokenExchangeProfile")]
    public partial class TokenExchangeProfile : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Unique identifier of the Action
        /// </summary>
        [Output("actionId")]
        public Output<string?> ActionId { get; private set; } = null!;

        /// <summary>
        /// The ISO 8601 formatted date the credential was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Name of the token exchange profile.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Type of the subject token
        /// </summary>
        [Output("subjectTokenType")]
        public Output<string?> SubjectTokenType { get; private set; } = null!;

        /// <summary>
        /// Type of the token exchange profile
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The ISO 8601 formatted date the credential was updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a TokenExchangeProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TokenExchangeProfile(string name, TokenExchangeProfileArgs? args = null, CustomResourceOptions? options = null)
            : base("auth0:index/tokenExchangeProfile:TokenExchangeProfile", name, args ?? new TokenExchangeProfileArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TokenExchangeProfile(string name, Input<string> id, TokenExchangeProfileState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/tokenExchangeProfile:TokenExchangeProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TokenExchangeProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TokenExchangeProfile Get(string name, Input<string> id, TokenExchangeProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new TokenExchangeProfile(name, id, state, options);
        }
    }

    public sealed class TokenExchangeProfileArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique identifier of the Action
        /// </summary>
        [Input("actionId")]
        public Input<string>? ActionId { get; set; }

        /// <summary>
        /// Name of the token exchange profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Type of the subject token
        /// </summary>
        [Input("subjectTokenType")]
        public Input<string>? SubjectTokenType { get; set; }

        /// <summary>
        /// Type of the token exchange profile
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public TokenExchangeProfileArgs()
        {
        }
        public static new TokenExchangeProfileArgs Empty => new TokenExchangeProfileArgs();
    }

    public sealed class TokenExchangeProfileState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique identifier of the Action
        /// </summary>
        [Input("actionId")]
        public Input<string>? ActionId { get; set; }

        /// <summary>
        /// The ISO 8601 formatted date the credential was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Name of the token exchange profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Type of the subject token
        /// </summary>
        [Input("subjectTokenType")]
        public Input<string>? SubjectTokenType { get; set; }

        /// <summary>
        /// Type of the token exchange profile
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The ISO 8601 formatted date the credential was updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public TokenExchangeProfileState()
        {
        }
        public static new TokenExchangeProfileState Empty => new TokenExchangeProfileState();
    }
}
