// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can manage all of a user's permissions.
    /// 
    /// !&gt; To prevent issues, avoid using this resource together with the `auth0.UserPermission` resource.
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by specifying the user ID Example
    /// 
    /// ```sh
    ///  $ pulumi import auth0:index/userPermissions:UserPermissions all_user_permissions "auth0|111111111111111111111111"
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/userPermissions:UserPermissions")]
    public partial class UserPermissions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// List of API permissions granted to the user.
        /// </summary>
        [Output("permissions")]
        public Output<ImmutableArray<Outputs.UserPermissionsPermission>> Permissions { get; private set; } = null!;

        /// <summary>
        /// ID of the user to associate the permission to.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a UserPermissions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserPermissions(string name, UserPermissionsArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/userPermissions:UserPermissions", name, args ?? new UserPermissionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserPermissions(string name, Input<string> id, UserPermissionsState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/userPermissions:UserPermissions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserPermissions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserPermissions Get(string name, Input<string> id, UserPermissionsState? state = null, CustomResourceOptions? options = null)
        {
            return new UserPermissions(name, id, state, options);
        }
    }

    public sealed class UserPermissionsArgs : global::Pulumi.ResourceArgs
    {
        [Input("permissions", required: true)]
        private InputList<Inputs.UserPermissionsPermissionArgs>? _permissions;

        /// <summary>
        /// List of API permissions granted to the user.
        /// </summary>
        public InputList<Inputs.UserPermissionsPermissionArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.UserPermissionsPermissionArgs>());
            set => _permissions = value;
        }

        /// <summary>
        /// ID of the user to associate the permission to.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public UserPermissionsArgs()
        {
        }
        public static new UserPermissionsArgs Empty => new UserPermissionsArgs();
    }

    public sealed class UserPermissionsState : global::Pulumi.ResourceArgs
    {
        [Input("permissions")]
        private InputList<Inputs.UserPermissionsPermissionGetArgs>? _permissions;

        /// <summary>
        /// List of API permissions granted to the user.
        /// </summary>
        public InputList<Inputs.UserPermissionsPermissionGetArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.UserPermissionsPermissionGetArgs>());
            set => _permissions = value;
        }

        /// <summary>
        /// ID of the user to associate the permission to.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public UserPermissionsState()
        {
        }
        public static new UserPermissionsState Empty => new UserPermissionsState();
    }
}
