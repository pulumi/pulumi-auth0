// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can create and manage Flows for a tenant.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Auth0 = Pulumi.Auth0;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Example:
    ///     var myFlow = new Auth0.Flow("my_flow", new()
    ///     {
    ///         Actions = JsonSerializer.Serialize(new[]
    ///         {
    ///             new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 ["action"] = "UPDATE_USER",
    ///                 ["alias"] = "user meta data",
    ///                 ["allow_failure"] = false,
    ///                 ["id"] = "update_user_PmSa",
    ///                 ["mask_output"] = false,
    ///                 ["params"] = new Dictionary&lt;string, object?&gt;
    ///                 {
    ///                     ["changes"] = new Dictionary&lt;string, object?&gt;
    ///                     {
    ///                         ["user_metadata"] = new Dictionary&lt;string, object?&gt;
    ///                         {
    ///                             ["full_name"] = "{{fields.full_name}}",
    ///                         },
    ///                     },
    ///                     ["connection_id"] = "&lt;vault_connection_id&gt;",
    ///                     ["user_id"] = "{{context.user.user_id}}",
    ///                 },
    ///                 ["type"] = "AUTH0",
    ///             },
    ///         }),
    ///         Name = "Flow KYC update data",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource can be imported using the flow ID.
    /// 
    /// Example:
    /// 
    /// ```sh
    /// $ pulumi import auth0:index/flow:Flow my_flow "af_4JwsAjokf6DpK8xJCkTRjK"
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/flow:Flow")]
    public partial class Flow : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Actions of the flow.
        /// </summary>
        [Output("actions")]
        public Output<string?> Actions { get; private set; } = null!;

        /// <summary>
        /// Name of the flow.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a Flow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Flow(string name, FlowArgs? args = null, CustomResourceOptions? options = null)
            : base("auth0:index/flow:Flow", name, args ?? new FlowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Flow(string name, Input<string> id, FlowState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/flow:Flow", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Flow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Flow Get(string name, Input<string> id, FlowState? state = null, CustomResourceOptions? options = null)
        {
            return new Flow(name, id, state, options);
        }
    }

    public sealed class FlowArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Actions of the flow.
        /// </summary>
        [Input("actions")]
        public Input<string>? Actions { get; set; }

        /// <summary>
        /// Name of the flow.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public FlowArgs()
        {
        }
        public static new FlowArgs Empty => new FlowArgs();
    }

    public sealed class FlowState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Actions of the flow.
        /// </summary>
        [Input("actions")]
        public Input<string>? Actions { get; set; }

        /// <summary>
        /// Name of the flow.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public FlowState()
        {
        }
        public static new FlowState Empty => new FlowState();
    }
}
