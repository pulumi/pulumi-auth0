// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    public static class GetSelfServiceProfile
    {
        /// <summary>
        /// Data source to retrieve a specific Auth0 Self-Service Profile by `id`
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Auth0 = Pulumi.Auth0;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // An Auth0 Self-Service- Profile loaded using it's ID.
        ///     var auth0SelfServiceProfile = Auth0.GetSelfServiceProfile.Invoke(new()
        ///     {
        ///         Id = "some-profile-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSelfServiceProfileResult> InvokeAsync(GetSelfServiceProfileArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSelfServiceProfileResult>("auth0:index/getSelfServiceProfile:getSelfServiceProfile", args ?? new GetSelfServiceProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Data source to retrieve a specific Auth0 Self-Service Profile by `id`
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Auth0 = Pulumi.Auth0;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // An Auth0 Self-Service- Profile loaded using it's ID.
        ///     var auth0SelfServiceProfile = Auth0.GetSelfServiceProfile.Invoke(new()
        ///     {
        ///         Id = "some-profile-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSelfServiceProfileResult> Invoke(GetSelfServiceProfileInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSelfServiceProfileResult>("auth0:index/getSelfServiceProfile:getSelfServiceProfile", args ?? new GetSelfServiceProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source to retrieve a specific Auth0 Self-Service Profile by `id`
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Auth0 = Pulumi.Auth0;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     // An Auth0 Self-Service- Profile loaded using it's ID.
        ///     var auth0SelfServiceProfile = Auth0.GetSelfServiceProfile.Invoke(new()
        ///     {
        ///         Id = "some-profile-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSelfServiceProfileResult> Invoke(GetSelfServiceProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSelfServiceProfileResult>("auth0:index/getSelfServiceProfile:getSelfServiceProfile", args ?? new GetSelfServiceProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSelfServiceProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the Self Service Profile
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetSelfServiceProfileArgs()
        {
        }
        public static new GetSelfServiceProfileArgs Empty => new GetSelfServiceProfileArgs();
    }

    public sealed class GetSelfServiceProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the Self Service Profile
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetSelfServiceProfileInvokeArgs()
        {
        }
        public static new GetSelfServiceProfileInvokeArgs Empty => new GetSelfServiceProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetSelfServiceProfileResult
    {
        /// <summary>
        /// List of IdP strategies that will be shown to users during the Self-Service SSO flow.
        /// </summary>
        public readonly ImmutableArray<string> AllowedStrategies;
        /// <summary>
        /// Field can be used to customize the look and feel of the wizard.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSelfServiceProfileBrandingResult> Brandings;
        /// <summary>
        /// The ISO 8601 formatted date the profile was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The description of the self-service Profile
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The id of the Self Service Profile
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the self-service Profile
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ISO 8601 formatted date the profile was updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// This array stores the mapping information that will be shown to the user during the SS-SSO flow. The user will be prompted to map the attributes on their identity provider to ensure the specified attributes get passed to Auth0.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSelfServiceProfileUserAttributeResult> UserAttributes;

        [OutputConstructor]
        private GetSelfServiceProfileResult(
            ImmutableArray<string> allowedStrategies,

            ImmutableArray<Outputs.GetSelfServiceProfileBrandingResult> brandings,

            string createdAt,

            string description,

            string id,

            string name,

            string updatedAt,

            ImmutableArray<Outputs.GetSelfServiceProfileUserAttributeResult> userAttributes)
        {
            AllowedStrategies = allowedStrategies;
            Brandings = brandings;
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            Name = name;
            UpdatedAt = updatedAt;
            UserAttributes = userAttributes;
        }
    }
}
