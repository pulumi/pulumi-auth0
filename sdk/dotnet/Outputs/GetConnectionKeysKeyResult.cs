// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0.Outputs
{

    [OutputType]
    public sealed class GetConnectionKeysKeyResult
    {
        /// <summary>
        /// The signing key algorithm.
        /// </summary>
        public readonly string Algorithm;
        /// <summary>
        /// The public certificate of the signing key.
        /// </summary>
        public readonly string Cert;
        public readonly string ConnectionId;
        /// <summary>
        /// True if the key is the current key.
        /// </summary>
        public readonly bool Current;
        /// <summary>
        /// The date and time when the key became the current key.
        /// </summary>
        public readonly string CurrentSince;
        /// <summary>
        /// The certificate fingerprint.
        /// </summary>
        public readonly string Fingerprint;
        /// <summary>
        /// The signing key use, whether for encryption or signing.
        /// </summary>
        public readonly string KeyUse;
        /// <summary>
        /// The key ID of the signing key.
        /// </summary>
        public readonly string Kid;
        /// <summary>
        /// True if the key is the next key.
        /// </summary>
        public readonly bool Next;
        /// <summary>
        /// The public certificate of the signing key in PKCS7 format.
        /// </summary>
        public readonly string Pkcs;
        /// <summary>
        /// True if the key is the previous key.
        /// </summary>
        public readonly bool Previous;
        /// <summary>
        /// The subject distinguished name (DN) of the certificate.
        /// </summary>
        public readonly string SubjectDn;
        /// <summary>
        /// The certificate thumbprint.
        /// </summary>
        public readonly string Thumbprint;
        /// <summary>
        /// This is an arbitrary map, which when edited shall perform rotation of keys for the corresponding connection. It can host keys like version, timestamp of last rotation etc.The field has no association with API
        /// </summary>
        public readonly ImmutableDictionary<string, string> Triggers;

        [OutputConstructor]
        private GetConnectionKeysKeyResult(
            string algorithm,

            string cert,

            string connectionId,

            bool current,

            string currentSince,

            string fingerprint,

            string keyUse,

            string kid,

            bool next,

            string pkcs,

            bool previous,

            string subjectDn,

            string thumbprint,

            ImmutableDictionary<string, string> triggers)
        {
            Algorithm = algorithm;
            Cert = cert;
            ConnectionId = connectionId;
            Current = current;
            CurrentSince = currentSince;
            Fingerprint = fingerprint;
            KeyUse = keyUse;
            Kid = kid;
            Next = next;
            Pkcs = pkcs;
            Previous = previous;
            SubjectDn = subjectDn;
            Thumbprint = thumbprint;
            Triggers = triggers;
        }
    }
}
