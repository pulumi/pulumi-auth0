// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    public static class GetAttackProtection
    {
        /// <summary>
        /// Use this data source to access information about the tenant's attack protection settings.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Auth0 = Pulumi.Auth0;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProtection = Auth0.GetAttackProtection.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetAttackProtectionResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAttackProtectionResult>("auth0:index/getAttackProtection:getAttackProtection", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about the tenant's attack protection settings.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Auth0 = Pulumi.Auth0;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myProtection = Auth0.GetAttackProtection.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetAttackProtectionResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAttackProtectionResult>("auth0:index/getAttackProtection:getAttackProtection", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetAttackProtectionResult
    {
        /// <summary>
        /// Breached password detection protects your applications from bad actors logging in with stolen credentials.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAttackProtectionBreachedPasswordDetectionResult> BreachedPasswordDetections;
        /// <summary>
        /// Brute-force protection safeguards against a single IP address attacking a single user account.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAttackProtectionBruteForceProtectionResult> BruteForceProtections;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Suspicious IP throttling blocks traffic from any IP address that rapidly attempts too many logins or signups.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAttackProtectionSuspiciousIpThrottlingResult> SuspiciousIpThrottlings;

        [OutputConstructor]
        private GetAttackProtectionResult(
            ImmutableArray<Outputs.GetAttackProtectionBreachedPasswordDetectionResult> breachedPasswordDetections,

            ImmutableArray<Outputs.GetAttackProtectionBruteForceProtectionResult> bruteForceProtections,

            string id,

            ImmutableArray<Outputs.GetAttackProtectionSuspiciousIpThrottlingResult> suspiciousIpThrottlings)
        {
            BreachedPasswordDetections = breachedPasswordDetections;
            BruteForceProtections = bruteForceProtections;
            Id = id;
            SuspiciousIpThrottlings = suspiciousIpThrottlings;
        }
    }
}
