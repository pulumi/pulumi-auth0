// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// Manage organization discovery domains for Home Realm Discovery. These domains help automatically route users to the correct organization based on their email domain.
    /// </summary>
    [Auth0ResourceType("auth0:index/organizationDiscoveryDomain:OrganizationDiscoveryDomain")]
    public partial class OrganizationDiscoveryDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The domain name for organization discovery.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// The ID of the organization.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// Verification status. Must be either 'pending' or 'verified'.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The full domain where the TXT record should be added.
        /// </summary>
        [Output("verificationHost")]
        public Output<string> VerificationHost { get; private set; } = null!;

        /// <summary>
        /// TXT record value for domain verification.
        /// </summary>
        [Output("verificationTxt")]
        public Output<string> VerificationTxt { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationDiscoveryDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationDiscoveryDomain(string name, OrganizationDiscoveryDomainArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/organizationDiscoveryDomain:OrganizationDiscoveryDomain", name, args ?? new OrganizationDiscoveryDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationDiscoveryDomain(string name, Input<string> id, OrganizationDiscoveryDomainState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/organizationDiscoveryDomain:OrganizationDiscoveryDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationDiscoveryDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationDiscoveryDomain Get(string name, Input<string> id, OrganizationDiscoveryDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationDiscoveryDomain(name, id, state, options);
        }
    }

    public sealed class OrganizationDiscoveryDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The domain name for organization discovery.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// The ID of the organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// Verification status. Must be either 'pending' or 'verified'.
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        public OrganizationDiscoveryDomainArgs()
        {
        }
        public static new OrganizationDiscoveryDomainArgs Empty => new OrganizationDiscoveryDomainArgs();
    }

    public sealed class OrganizationDiscoveryDomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The domain name for organization discovery.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// The ID of the organization.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// Verification status. Must be either 'pending' or 'verified'.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The full domain where the TXT record should be added.
        /// </summary>
        [Input("verificationHost")]
        public Input<string>? VerificationHost { get; set; }

        /// <summary>
        /// TXT record value for domain verification.
        /// </summary>
        [Input("verificationTxt")]
        public Input<string>? VerificationTxt { get; set; }

        public OrganizationDiscoveryDomainState()
        {
        }
        public static new OrganizationDiscoveryDomainState Empty => new OrganizationDiscoveryDomainState();
    }
}
