// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// This resource is used to manage the roles assigned to an organization member.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Auth0 = Pulumi.Auth0;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var reader = new Auth0.Role("reader");
    /// 
    ///     var writer = new Auth0.Role("writer");
    /// 
    ///     var user = new Auth0.User("user", new()
    ///     {
    ///         ConnectionName = "Username-Password-Authentication",
    ///         Email = "test-user@auth0.com",
    ///         Password = "MyPass123$",
    ///     });
    /// 
    ///     var myOrg = new Auth0.Organization("myOrg", new()
    ///     {
    ///         DisplayName = "Some Org",
    ///     });
    /// 
    ///     var myOrgMember = new Auth0.OrganizationMember("myOrgMember", new()
    ///     {
    ///         OrganizationId = myOrg.Id,
    ///         UserId = user.Id,
    ///     });
    /// 
    ///     var role1 = new Auth0.OrganizationMemberRole("role1", new()
    ///     {
    ///         OrganizationId = myOrg.Id,
    ///         UserId = user.Id,
    ///         RoleId = reader.Id,
    ///     });
    /// 
    ///     var role2 = new Auth0.OrganizationMemberRole("role2", new()
    ///     {
    ///         OrganizationId = myOrg.Id,
    ///         UserId = user.Id,
    ///         RoleId = writer.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by specifying the organization ID, user ID and role ID separated by "::". # Example
    /// 
    /// ```sh
    ///  $ pulumi import auth0:index/organizationMemberRole:OrganizationMemberRole my_org_member_role "org_XXXXX::auth0|XXXXX::role_XXXX"
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/organizationMemberRole:OrganizationMemberRole")]
    public partial class OrganizationMemberRole : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the organization.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// Description of the role.
        /// </summary>
        [Output("roleDescription")]
        public Output<string> RoleDescription { get; private set; } = null!;

        /// <summary>
        /// The role ID to assign to the organization member.
        /// </summary>
        [Output("roleId")]
        public Output<string> RoleId { get; private set; } = null!;

        /// <summary>
        /// Name of the role.
        /// </summary>
        [Output("roleName")]
        public Output<string> RoleName { get; private set; } = null!;

        /// <summary>
        /// The user ID of the organization member.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationMemberRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationMemberRole(string name, OrganizationMemberRoleArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/organizationMemberRole:OrganizationMemberRole", name, args ?? new OrganizationMemberRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationMemberRole(string name, Input<string> id, OrganizationMemberRoleState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/organizationMemberRole:OrganizationMemberRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationMemberRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationMemberRole Get(string name, Input<string> id, OrganizationMemberRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationMemberRole(name, id, state, options);
        }
    }

    public sealed class OrganizationMemberRoleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the organization.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        /// <summary>
        /// The role ID to assign to the organization member.
        /// </summary>
        [Input("roleId", required: true)]
        public Input<string> RoleId { get; set; } = null!;

        /// <summary>
        /// The user ID of the organization member.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public OrganizationMemberRoleArgs()
        {
        }
        public static new OrganizationMemberRoleArgs Empty => new OrganizationMemberRoleArgs();
    }

    public sealed class OrganizationMemberRoleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the organization.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// Description of the role.
        /// </summary>
        [Input("roleDescription")]
        public Input<string>? RoleDescription { get; set; }

        /// <summary>
        /// The role ID to assign to the organization member.
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// Name of the role.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        /// <summary>
        /// The user ID of the organization member.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public OrganizationMemberRoleState()
        {
        }
        public static new OrganizationMemberRoleState Empty => new OrganizationMemberRoleState();
    }
}
