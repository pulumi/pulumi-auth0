// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    /// <summary>
    /// With this resource, you can manage enabled connections on an organization.
    /// 
    /// !&gt; This resource appends a connection to an organization. In contrast, the `auth0.OrganizationConnections` resource
    /// manages all the connections enabled for an organization. To avoid potential issues, it is recommended not to use this
    /// resource in conjunction with the `auth0.OrganizationConnections` resource when managing enabled connections for the
    /// same organization id.
    /// 
    /// ## Import
    /// 
    /// This resource can be imported by specifying the organization ID and connection ID separated by "::" (note the double colon) &lt;organizationID&gt;::&lt;connectionID&gt; # Example
    /// 
    /// ```sh
    ///  $ pulumi import auth0:index/organizationConnection:OrganizationConnection my_org_conn "org_XXXXX::con_XXXXX"
    /// ```
    /// </summary>
    [Auth0ResourceType("auth0:index/organizationConnection:OrganizationConnection")]
    public partial class OrganizationConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// When true, all users that log in with this connection will be automatically granted membership in the organization. When false, users must be granted membership in the organization before logging in with this connection.
        /// </summary>
        [Output("assignMembershipOnLogin")]
        public Output<bool?> AssignMembershipOnLogin { get; private set; } = null!;

        /// <summary>
        /// The ID of the connection to enable for the organization.
        /// </summary>
        [Output("connectionId")]
        public Output<string> ConnectionId { get; private set; } = null!;

        /// <summary>
        /// The name of the enabled connection.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the organization to enable the connection for.
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The strategy of the enabled connection.
        /// </summary>
        [Output("strategy")]
        public Output<string> Strategy { get; private set; } = null!;


        /// <summary>
        /// Create a OrganizationConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OrganizationConnection(string name, OrganizationConnectionArgs args, CustomResourceOptions? options = null)
            : base("auth0:index/organizationConnection:OrganizationConnection", name, args ?? new OrganizationConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OrganizationConnection(string name, Input<string> id, OrganizationConnectionState? state = null, CustomResourceOptions? options = null)
            : base("auth0:index/organizationConnection:OrganizationConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OrganizationConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OrganizationConnection Get(string name, Input<string> id, OrganizationConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new OrganizationConnection(name, id, state, options);
        }
    }

    public sealed class OrganizationConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When true, all users that log in with this connection will be automatically granted membership in the organization. When false, users must be granted membership in the organization before logging in with this connection.
        /// </summary>
        [Input("assignMembershipOnLogin")]
        public Input<bool>? AssignMembershipOnLogin { get; set; }

        /// <summary>
        /// The ID of the connection to enable for the organization.
        /// </summary>
        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        /// <summary>
        /// The ID of the organization to enable the connection for.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public OrganizationConnectionArgs()
        {
        }
        public static new OrganizationConnectionArgs Empty => new OrganizationConnectionArgs();
    }

    public sealed class OrganizationConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When true, all users that log in with this connection will be automatically granted membership in the organization. When false, users must be granted membership in the organization before logging in with this connection.
        /// </summary>
        [Input("assignMembershipOnLogin")]
        public Input<bool>? AssignMembershipOnLogin { get; set; }

        /// <summary>
        /// The ID of the connection to enable for the organization.
        /// </summary>
        [Input("connectionId")]
        public Input<string>? ConnectionId { get; set; }

        /// <summary>
        /// The name of the enabled connection.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the organization to enable the connection for.
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// The strategy of the enabled connection.
        /// </summary>
        [Input("strategy")]
        public Input<string>? Strategy { get; set; }

        public OrganizationConnectionState()
        {
        }
        public static new OrganizationConnectionState Empty => new OrganizationConnectionState();
    }
}
