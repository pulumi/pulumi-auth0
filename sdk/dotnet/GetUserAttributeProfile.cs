// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Auth0
{
    public static class GetUserAttributeProfile
    {
        /// <summary>
        /// Data source to retrieve a specific Auth0 User Attribute Profile by `user_attribute_profile_id` or `name`.
        /// </summary>
        public static Task<GetUserAttributeProfileResult> InvokeAsync(GetUserAttributeProfileArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserAttributeProfileResult>("auth0:index/getUserAttributeProfile:getUserAttributeProfile", args ?? new GetUserAttributeProfileArgs(), options.WithDefaults());

        /// <summary>
        /// Data source to retrieve a specific Auth0 User Attribute Profile by `user_attribute_profile_id` or `name`.
        /// </summary>
        public static Output<GetUserAttributeProfileResult> Invoke(GetUserAttributeProfileInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserAttributeProfileResult>("auth0:index/getUserAttributeProfile:getUserAttributeProfile", args ?? new GetUserAttributeProfileInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Data source to retrieve a specific Auth0 User Attribute Profile by `user_attribute_profile_id` or `name`.
        /// </summary>
        public static Output<GetUserAttributeProfileResult> Invoke(GetUserAttributeProfileInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserAttributeProfileResult>("auth0:index/getUserAttributeProfile:getUserAttributeProfile", args ?? new GetUserAttributeProfileInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserAttributeProfileArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the User Attribute Profile.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The ID of the User Attribute Profile.
        /// </summary>
        [Input("userAttributeProfileId")]
        public string? UserAttributeProfileId { get; set; }

        public GetUserAttributeProfileArgs()
        {
        }
        public static new GetUserAttributeProfileArgs Empty => new GetUserAttributeProfileArgs();
    }

    public sealed class GetUserAttributeProfileInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the User Attribute Profile.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the User Attribute Profile.
        /// </summary>
        [Input("userAttributeProfileId")]
        public Input<string>? UserAttributeProfileId { get; set; }

        public GetUserAttributeProfileInvokeArgs()
        {
        }
        public static new GetUserAttributeProfileInvokeArgs Empty => new GetUserAttributeProfileInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserAttributeProfileResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the User Attribute Profile.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The ID of the User Attribute Profile.
        /// </summary>
        public readonly string? UserAttributeProfileId;
        /// <summary>
        /// List of user attribute configurations.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserAttributeProfileUserAttributeResult> UserAttributes;
        /// <summary>
        /// Configuration for mapping the user ID from identity providers.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetUserAttributeProfileUserIdResult> UserIds;

        [OutputConstructor]
        private GetUserAttributeProfileResult(
            string id,

            string? name,

            string? userAttributeProfileId,

            ImmutableArray<Outputs.GetUserAttributeProfileUserAttributeResult> userAttributes,

            ImmutableArray<Outputs.GetUserAttributeProfileUserIdResult> userIds)
        {
            Id = id;
            Name = name;
            UserAttributeProfileId = userAttributeProfileId;
            UserAttributes = userAttributes;
            UserIds = userIds;
        }
    }
}
